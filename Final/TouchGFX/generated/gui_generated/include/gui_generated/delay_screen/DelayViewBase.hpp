/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DELAYVIEWBASE_HPP
#define DELAYVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/delay_screen/DelayPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <gui/containers/DistortParams.hpp>
#include <gui/containers/TitleBoxDelay.hpp>
#include <gui/containers/DelayParams.hpp>
#include <gui/containers/TitleBoxDistort.hpp>
#include <gui/containers/NextPageEQ.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class DelayViewBase : public touchgfx::View<DelayPresenter>
{
public:
    DelayViewBase();
    virtual ~DelayViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void UpdateCurFX(uint8_t value)
    {
        // Override and implement this function in Screen1
    }
    

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    DistortParams distortParams;
    TitleBoxDelay timeBoxDelay1;
    DelayParams delayParams1;
    TitleBoxDistort titleBoxDistort1;
    NextPageEQ nextPageEQ1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button0;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button1;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<DelayViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // DELAYVIEWBASE_HPP

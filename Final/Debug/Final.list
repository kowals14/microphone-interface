
Final.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000241d4  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002860  080243a4  080243a4  000343a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000a4e  08026c04  08026c04  00036c04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000020  08027654  08027654  00037654  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000001c8  08027674  08027674  00037674  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000000  0802783c  0802783c  00040120  2**0
                  CONTENTS
  7 .ARM          00000008  0802783c  0802783c  0003783c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  08027844  08027844  00040120  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000018  08027844  08027844  00037844  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   0000000c  0802785c  0802785c  0003785c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         00000120  20000000  08027868  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          00032f3c  20000120  08027988  00040120  2**2
                  ALLOC
 13 ._user_heap_stack 00006004  2003305c  08027988  0004305c  2**0
                  ALLOC
 14 .ARM.attributes 00000030  00000000  00000000  00040120  2**0
                  CONTENTS, READONLY
 15 .comment      000000c2  00000000  00000000  00040150  2**0
                  CONTENTS, READONLY
 16 .debug_info   00085266  00000000  00000000  00040212  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_abbrev 00010e0b  00000000  00000000  000c5478  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_aranges 00003098  00000000  00000000  000d6288  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_rnglists 00002413  00000000  00000000  000d9320  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_macro  00032a98  00000000  00000000  000db733  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line   0003da68  00000000  00000000  0010e1cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_str    0010e725  00000000  00000000  0014bc33  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_frame  0000d6c8  00000000  00000000  0025a358  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_line_str 00000060  00000000  00000000  00267a20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000120 	.word	0x20000120
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0802438c 	.word	0x0802438c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000124 	.word	0x20000124
 800020c:	0802438c 	.word	0x0802438c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_drsub>:
 80002b0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002b4:	e002      	b.n	80002bc <__adddf3>
 80002b6:	bf00      	nop

080002b8 <__aeabi_dsub>:
 80002b8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002bc <__adddf3>:
 80002bc:	b530      	push	{r4, r5, lr}
 80002be:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002c2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002c6:	ea94 0f05 	teq	r4, r5
 80002ca:	bf08      	it	eq
 80002cc:	ea90 0f02 	teqeq	r0, r2
 80002d0:	bf1f      	itttt	ne
 80002d2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002d6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002da:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002de:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002e2:	f000 80e2 	beq.w	80004aa <__adddf3+0x1ee>
 80002e6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ea:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ee:	bfb8      	it	lt
 80002f0:	426d      	neglt	r5, r5
 80002f2:	dd0c      	ble.n	800030e <__adddf3+0x52>
 80002f4:	442c      	add	r4, r5
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	ea82 0000 	eor.w	r0, r2, r0
 8000302:	ea83 0101 	eor.w	r1, r3, r1
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	2d36      	cmp	r5, #54	; 0x36
 8000310:	bf88      	it	hi
 8000312:	bd30      	pophi	{r4, r5, pc}
 8000314:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000318:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800031c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000320:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000324:	d002      	beq.n	800032c <__adddf3+0x70>
 8000326:	4240      	negs	r0, r0
 8000328:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800032c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000330:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000334:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000338:	d002      	beq.n	8000340 <__adddf3+0x84>
 800033a:	4252      	negs	r2, r2
 800033c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000340:	ea94 0f05 	teq	r4, r5
 8000344:	f000 80a7 	beq.w	8000496 <__adddf3+0x1da>
 8000348:	f1a4 0401 	sub.w	r4, r4, #1
 800034c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000350:	db0d      	blt.n	800036e <__adddf3+0xb2>
 8000352:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000356:	fa22 f205 	lsr.w	r2, r2, r5
 800035a:	1880      	adds	r0, r0, r2
 800035c:	f141 0100 	adc.w	r1, r1, #0
 8000360:	fa03 f20e 	lsl.w	r2, r3, lr
 8000364:	1880      	adds	r0, r0, r2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	4159      	adcs	r1, r3
 800036c:	e00e      	b.n	800038c <__adddf3+0xd0>
 800036e:	f1a5 0520 	sub.w	r5, r5, #32
 8000372:	f10e 0e20 	add.w	lr, lr, #32
 8000376:	2a01      	cmp	r2, #1
 8000378:	fa03 fc0e 	lsl.w	ip, r3, lr
 800037c:	bf28      	it	cs
 800037e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000382:	fa43 f305 	asr.w	r3, r3, r5
 8000386:	18c0      	adds	r0, r0, r3
 8000388:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800038c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000390:	d507      	bpl.n	80003a2 <__adddf3+0xe6>
 8000392:	f04f 0e00 	mov.w	lr, #0
 8000396:	f1dc 0c00 	rsbs	ip, ip, #0
 800039a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800039e:	eb6e 0101 	sbc.w	r1, lr, r1
 80003a2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003a6:	d31b      	bcc.n	80003e0 <__adddf3+0x124>
 80003a8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003ac:	d30c      	bcc.n	80003c8 <__adddf3+0x10c>
 80003ae:	0849      	lsrs	r1, r1, #1
 80003b0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003b4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003b8:	f104 0401 	add.w	r4, r4, #1
 80003bc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003c0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003c4:	f080 809a 	bcs.w	80004fc <__adddf3+0x240>
 80003c8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003cc:	bf08      	it	eq
 80003ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003d2:	f150 0000 	adcs.w	r0, r0, #0
 80003d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003da:	ea41 0105 	orr.w	r1, r1, r5
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003e4:	4140      	adcs	r0, r0
 80003e6:	eb41 0101 	adc.w	r1, r1, r1
 80003ea:	3c01      	subs	r4, #1
 80003ec:	bf28      	it	cs
 80003ee:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003f2:	d2e9      	bcs.n	80003c8 <__adddf3+0x10c>
 80003f4:	f091 0f00 	teq	r1, #0
 80003f8:	bf04      	itt	eq
 80003fa:	4601      	moveq	r1, r0
 80003fc:	2000      	moveq	r0, #0
 80003fe:	fab1 f381 	clz	r3, r1
 8000402:	bf08      	it	eq
 8000404:	3320      	addeq	r3, #32
 8000406:	f1a3 030b 	sub.w	r3, r3, #11
 800040a:	f1b3 0220 	subs.w	r2, r3, #32
 800040e:	da0c      	bge.n	800042a <__adddf3+0x16e>
 8000410:	320c      	adds	r2, #12
 8000412:	dd08      	ble.n	8000426 <__adddf3+0x16a>
 8000414:	f102 0c14 	add.w	ip, r2, #20
 8000418:	f1c2 020c 	rsb	r2, r2, #12
 800041c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000420:	fa21 f102 	lsr.w	r1, r1, r2
 8000424:	e00c      	b.n	8000440 <__adddf3+0x184>
 8000426:	f102 0214 	add.w	r2, r2, #20
 800042a:	bfd8      	it	le
 800042c:	f1c2 0c20 	rsble	ip, r2, #32
 8000430:	fa01 f102 	lsl.w	r1, r1, r2
 8000434:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000438:	bfdc      	itt	le
 800043a:	ea41 010c 	orrle.w	r1, r1, ip
 800043e:	4090      	lslle	r0, r2
 8000440:	1ae4      	subs	r4, r4, r3
 8000442:	bfa2      	ittt	ge
 8000444:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000448:	4329      	orrge	r1, r5
 800044a:	bd30      	popge	{r4, r5, pc}
 800044c:	ea6f 0404 	mvn.w	r4, r4
 8000450:	3c1f      	subs	r4, #31
 8000452:	da1c      	bge.n	800048e <__adddf3+0x1d2>
 8000454:	340c      	adds	r4, #12
 8000456:	dc0e      	bgt.n	8000476 <__adddf3+0x1ba>
 8000458:	f104 0414 	add.w	r4, r4, #20
 800045c:	f1c4 0220 	rsb	r2, r4, #32
 8000460:	fa20 f004 	lsr.w	r0, r0, r4
 8000464:	fa01 f302 	lsl.w	r3, r1, r2
 8000468:	ea40 0003 	orr.w	r0, r0, r3
 800046c:	fa21 f304 	lsr.w	r3, r1, r4
 8000470:	ea45 0103 	orr.w	r1, r5, r3
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f1c4 040c 	rsb	r4, r4, #12
 800047a:	f1c4 0220 	rsb	r2, r4, #32
 800047e:	fa20 f002 	lsr.w	r0, r0, r2
 8000482:	fa01 f304 	lsl.w	r3, r1, r4
 8000486:	ea40 0003 	orr.w	r0, r0, r3
 800048a:	4629      	mov	r1, r5
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	fa21 f004 	lsr.w	r0, r1, r4
 8000492:	4629      	mov	r1, r5
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f094 0f00 	teq	r4, #0
 800049a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800049e:	bf06      	itte	eq
 80004a0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004a4:	3401      	addeq	r4, #1
 80004a6:	3d01      	subne	r5, #1
 80004a8:	e74e      	b.n	8000348 <__adddf3+0x8c>
 80004aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ae:	bf18      	it	ne
 80004b0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004b4:	d029      	beq.n	800050a <__adddf3+0x24e>
 80004b6:	ea94 0f05 	teq	r4, r5
 80004ba:	bf08      	it	eq
 80004bc:	ea90 0f02 	teqeq	r0, r2
 80004c0:	d005      	beq.n	80004ce <__adddf3+0x212>
 80004c2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004c6:	bf04      	itt	eq
 80004c8:	4619      	moveq	r1, r3
 80004ca:	4610      	moveq	r0, r2
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	ea91 0f03 	teq	r1, r3
 80004d2:	bf1e      	ittt	ne
 80004d4:	2100      	movne	r1, #0
 80004d6:	2000      	movne	r0, #0
 80004d8:	bd30      	popne	{r4, r5, pc}
 80004da:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004de:	d105      	bne.n	80004ec <__adddf3+0x230>
 80004e0:	0040      	lsls	r0, r0, #1
 80004e2:	4149      	adcs	r1, r1
 80004e4:	bf28      	it	cs
 80004e6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ea:	bd30      	pop	{r4, r5, pc}
 80004ec:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004f0:	bf3c      	itt	cc
 80004f2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004f6:	bd30      	popcc	{r4, r5, pc}
 80004f8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004fc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000500:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000504:	f04f 0000 	mov.w	r0, #0
 8000508:	bd30      	pop	{r4, r5, pc}
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf1a      	itte	ne
 8000510:	4619      	movne	r1, r3
 8000512:	4610      	movne	r0, r2
 8000514:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000518:	bf1c      	itt	ne
 800051a:	460b      	movne	r3, r1
 800051c:	4602      	movne	r2, r0
 800051e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000522:	bf06      	itte	eq
 8000524:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000528:	ea91 0f03 	teqeq	r1, r3
 800052c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000530:	bd30      	pop	{r4, r5, pc}
 8000532:	bf00      	nop

08000534 <__aeabi_ui2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f04f 0500 	mov.w	r5, #0
 800054c:	f04f 0100 	mov.w	r1, #0
 8000550:	e750      	b.n	80003f4 <__adddf3+0x138>
 8000552:	bf00      	nop

08000554 <__aeabi_i2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000568:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800056c:	bf48      	it	mi
 800056e:	4240      	negmi	r0, r0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e73e      	b.n	80003f4 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_f2d>:
 8000578:	0042      	lsls	r2, r0, #1
 800057a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800057e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000582:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000586:	bf1f      	itttt	ne
 8000588:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800058c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000590:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000594:	4770      	bxne	lr
 8000596:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800059a:	bf08      	it	eq
 800059c:	4770      	bxeq	lr
 800059e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005a2:	bf04      	itt	eq
 80005a4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005a8:	4770      	bxeq	lr
 80005aa:	b530      	push	{r4, r5, lr}
 80005ac:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005b4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005b8:	e71c      	b.n	80003f4 <__adddf3+0x138>
 80005ba:	bf00      	nop

080005bc <__aeabi_ul2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	e00a      	b.n	80005e2 <__aeabi_l2d+0x16>

080005cc <__aeabi_l2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005da:	d502      	bpl.n	80005e2 <__aeabi_l2d+0x16>
 80005dc:	4240      	negs	r0, r0
 80005de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005e6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ee:	f43f aed8 	beq.w	80003a2 <__adddf3+0xe6>
 80005f2:	f04f 0203 	mov.w	r2, #3
 80005f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fa:	bf18      	it	ne
 80005fc:	3203      	addne	r2, #3
 80005fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000602:	bf18      	it	ne
 8000604:	3203      	addne	r2, #3
 8000606:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060a:	f1c2 0320 	rsb	r3, r2, #32
 800060e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000612:	fa20 f002 	lsr.w	r0, r0, r2
 8000616:	fa01 fe03 	lsl.w	lr, r1, r3
 800061a:	ea40 000e 	orr.w	r0, r0, lr
 800061e:	fa21 f102 	lsr.w	r1, r1, r2
 8000622:	4414      	add	r4, r2
 8000624:	e6bd      	b.n	80003a2 <__adddf3+0xe6>
 8000626:	bf00      	nop

08000628 <__aeabi_dmul>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800062e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000632:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000636:	bf1d      	ittte	ne
 8000638:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800063c:	ea94 0f0c 	teqne	r4, ip
 8000640:	ea95 0f0c 	teqne	r5, ip
 8000644:	f000 f8de 	bleq	8000804 <__aeabi_dmul+0x1dc>
 8000648:	442c      	add	r4, r5
 800064a:	ea81 0603 	eor.w	r6, r1, r3
 800064e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000652:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000656:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065a:	bf18      	it	ne
 800065c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000660:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000664:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000668:	d038      	beq.n	80006dc <__aeabi_dmul+0xb4>
 800066a:	fba0 ce02 	umull	ip, lr, r0, r2
 800066e:	f04f 0500 	mov.w	r5, #0
 8000672:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000676:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800067a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800067e:	f04f 0600 	mov.w	r6, #0
 8000682:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000686:	f09c 0f00 	teq	ip, #0
 800068a:	bf18      	it	ne
 800068c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000690:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000694:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000698:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800069c:	d204      	bcs.n	80006a8 <__aeabi_dmul+0x80>
 800069e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a2:	416d      	adcs	r5, r5
 80006a4:	eb46 0606 	adc.w	r6, r6, r6
 80006a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006bc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006c0:	bf88      	it	hi
 80006c2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006c6:	d81e      	bhi.n	8000706 <__aeabi_dmul+0xde>
 80006c8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006cc:	bf08      	it	eq
 80006ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d2:	f150 0000 	adcs.w	r0, r0, #0
 80006d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006e0:	ea46 0101 	orr.w	r1, r6, r1
 80006e4:	ea40 0002 	orr.w	r0, r0, r2
 80006e8:	ea81 0103 	eor.w	r1, r1, r3
 80006ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f0:	bfc2      	ittt	gt
 80006f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	popgt	{r4, r5, r6, pc}
 80006fc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000700:	f04f 0e00 	mov.w	lr, #0
 8000704:	3c01      	subs	r4, #1
 8000706:	f300 80ab 	bgt.w	8000860 <__aeabi_dmul+0x238>
 800070a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800070e:	bfde      	ittt	le
 8000710:	2000      	movle	r0, #0
 8000712:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000716:	bd70      	pople	{r4, r5, r6, pc}
 8000718:	f1c4 0400 	rsb	r4, r4, #0
 800071c:	3c20      	subs	r4, #32
 800071e:	da35      	bge.n	800078c <__aeabi_dmul+0x164>
 8000720:	340c      	adds	r4, #12
 8000722:	dc1b      	bgt.n	800075c <__aeabi_dmul+0x134>
 8000724:	f104 0414 	add.w	r4, r4, #20
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f305 	lsl.w	r3, r0, r5
 8000730:	fa20 f004 	lsr.w	r0, r0, r4
 8000734:	fa01 f205 	lsl.w	r2, r1, r5
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000740:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000744:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000748:	fa21 f604 	lsr.w	r6, r1, r4
 800074c:	eb42 0106 	adc.w	r1, r2, r6
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 040c 	rsb	r4, r4, #12
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f304 	lsl.w	r3, r0, r4
 8000768:	fa20 f005 	lsr.w	r0, r0, r5
 800076c:	fa01 f204 	lsl.w	r2, r1, r4
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000778:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800077c:	f141 0100 	adc.w	r1, r1, #0
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f205 	lsl.w	r2, r0, r5
 8000794:	ea4e 0e02 	orr.w	lr, lr, r2
 8000798:	fa20 f304 	lsr.w	r3, r0, r4
 800079c:	fa01 f205 	lsl.w	r2, r1, r5
 80007a0:	ea43 0302 	orr.w	r3, r3, r2
 80007a4:	fa21 f004 	lsr.w	r0, r1, r4
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007ac:	fa21 f204 	lsr.w	r2, r1, r4
 80007b0:	ea20 0002 	bic.w	r0, r0, r2
 80007b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f094 0f00 	teq	r4, #0
 80007c8:	d10f      	bne.n	80007ea <__aeabi_dmul+0x1c2>
 80007ca:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ce:	0040      	lsls	r0, r0, #1
 80007d0:	eb41 0101 	adc.w	r1, r1, r1
 80007d4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3c01      	subeq	r4, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1a6>
 80007de:	ea41 0106 	orr.w	r1, r1, r6
 80007e2:	f095 0f00 	teq	r5, #0
 80007e6:	bf18      	it	ne
 80007e8:	4770      	bxne	lr
 80007ea:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ee:	0052      	lsls	r2, r2, #1
 80007f0:	eb43 0303 	adc.w	r3, r3, r3
 80007f4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3d01      	subeq	r5, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1c6>
 80007fe:	ea43 0306 	orr.w	r3, r3, r6
 8000802:	4770      	bx	lr
 8000804:	ea94 0f0c 	teq	r4, ip
 8000808:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800080c:	bf18      	it	ne
 800080e:	ea95 0f0c 	teqne	r5, ip
 8000812:	d00c      	beq.n	800082e <__aeabi_dmul+0x206>
 8000814:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000818:	bf18      	it	ne
 800081a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081e:	d1d1      	bne.n	80007c4 <__aeabi_dmul+0x19c>
 8000820:	ea81 0103 	eor.w	r1, r1, r3
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000828:	f04f 0000 	mov.w	r0, #0
 800082c:	bd70      	pop	{r4, r5, r6, pc}
 800082e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000832:	bf06      	itte	eq
 8000834:	4610      	moveq	r0, r2
 8000836:	4619      	moveq	r1, r3
 8000838:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083c:	d019      	beq.n	8000872 <__aeabi_dmul+0x24a>
 800083e:	ea94 0f0c 	teq	r4, ip
 8000842:	d102      	bne.n	800084a <__aeabi_dmul+0x222>
 8000844:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000848:	d113      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800084a:	ea95 0f0c 	teq	r5, ip
 800084e:	d105      	bne.n	800085c <__aeabi_dmul+0x234>
 8000850:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000854:	bf1c      	itt	ne
 8000856:	4610      	movne	r0, r2
 8000858:	4619      	movne	r1, r3
 800085a:	d10a      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800085c:	ea81 0103 	eor.w	r1, r1, r3
 8000860:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000864:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000868:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800086c:	f04f 0000 	mov.w	r0, #0
 8000870:	bd70      	pop	{r4, r5, r6, pc}
 8000872:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000876:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800087a:	bd70      	pop	{r4, r5, r6, pc}

0800087c <__aeabi_ddiv>:
 800087c:	b570      	push	{r4, r5, r6, lr}
 800087e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000882:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000886:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088a:	bf1d      	ittte	ne
 800088c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000890:	ea94 0f0c 	teqne	r4, ip
 8000894:	ea95 0f0c 	teqne	r5, ip
 8000898:	f000 f8a7 	bleq	80009ea <__aeabi_ddiv+0x16e>
 800089c:	eba4 0405 	sub.w	r4, r4, r5
 80008a0:	ea81 0e03 	eor.w	lr, r1, r3
 80008a4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008ac:	f000 8088 	beq.w	80009c0 <__aeabi_ddiv+0x144>
 80008b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008b8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008bc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008c8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008cc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008d4:	429d      	cmp	r5, r3
 80008d6:	bf08      	it	eq
 80008d8:	4296      	cmpeq	r6, r2
 80008da:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008de:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008e2:	d202      	bcs.n	80008ea <__aeabi_ddiv+0x6e>
 80008e4:	085b      	lsrs	r3, r3, #1
 80008e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ea:	1ab6      	subs	r6, r6, r2
 80008ec:	eb65 0503 	sbc.w	r5, r5, r3
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008fa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000940:	085b      	lsrs	r3, r3, #1
 8000942:	ea4f 0232 	mov.w	r2, r2, rrx
 8000946:	ebb6 0e02 	subs.w	lr, r6, r2
 800094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094e:	bf22      	ittt	cs
 8000950:	1ab6      	subcs	r6, r6, r2
 8000952:	4675      	movcs	r5, lr
 8000954:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000958:	ea55 0e06 	orrs.w	lr, r5, r6
 800095c:	d018      	beq.n	8000990 <__aeabi_ddiv+0x114>
 800095e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000962:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000966:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800096e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000972:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000976:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097a:	d1c0      	bne.n	80008fe <__aeabi_ddiv+0x82>
 800097c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000980:	d10b      	bne.n	800099a <__aeabi_ddiv+0x11e>
 8000982:	ea41 0100 	orr.w	r1, r1, r0
 8000986:	f04f 0000 	mov.w	r0, #0
 800098a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800098e:	e7b6      	b.n	80008fe <__aeabi_ddiv+0x82>
 8000990:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000994:	bf04      	itt	eq
 8000996:	4301      	orreq	r1, r0
 8000998:	2000      	moveq	r0, #0
 800099a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800099e:	bf88      	it	hi
 80009a0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009a4:	f63f aeaf 	bhi.w	8000706 <__aeabi_dmul+0xde>
 80009a8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009ac:	bf04      	itt	eq
 80009ae:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009b6:	f150 0000 	adcs.w	r0, r0, #0
 80009ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009be:	bd70      	pop	{r4, r5, r6, pc}
 80009c0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009cc:	bfc2      	ittt	gt
 80009ce:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009d6:	bd70      	popgt	{r4, r5, r6, pc}
 80009d8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009dc:	f04f 0e00 	mov.w	lr, #0
 80009e0:	3c01      	subs	r4, #1
 80009e2:	e690      	b.n	8000706 <__aeabi_dmul+0xde>
 80009e4:	ea45 0e06 	orr.w	lr, r5, r6
 80009e8:	e68d      	b.n	8000706 <__aeabi_dmul+0xde>
 80009ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ee:	ea94 0f0c 	teq	r4, ip
 80009f2:	bf08      	it	eq
 80009f4:	ea95 0f0c 	teqeq	r5, ip
 80009f8:	f43f af3b 	beq.w	8000872 <__aeabi_dmul+0x24a>
 80009fc:	ea94 0f0c 	teq	r4, ip
 8000a00:	d10a      	bne.n	8000a18 <__aeabi_ddiv+0x19c>
 8000a02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a06:	f47f af34 	bne.w	8000872 <__aeabi_dmul+0x24a>
 8000a0a:	ea95 0f0c 	teq	r5, ip
 8000a0e:	f47f af25 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a12:	4610      	mov	r0, r2
 8000a14:	4619      	mov	r1, r3
 8000a16:	e72c      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a18:	ea95 0f0c 	teq	r5, ip
 8000a1c:	d106      	bne.n	8000a2c <__aeabi_ddiv+0x1b0>
 8000a1e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a22:	f43f aefd 	beq.w	8000820 <__aeabi_dmul+0x1f8>
 8000a26:	4610      	mov	r0, r2
 8000a28:	4619      	mov	r1, r3
 8000a2a:	e722      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a30:	bf18      	it	ne
 8000a32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a36:	f47f aec5 	bne.w	80007c4 <__aeabi_dmul+0x19c>
 8000a3a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a3e:	f47f af0d 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a42:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a46:	f47f aeeb 	bne.w	8000820 <__aeabi_dmul+0x1f8>
 8000a4a:	e712      	b.n	8000872 <__aeabi_dmul+0x24a>

08000a4c <__aeabi_d2f>:
 8000a4c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a50:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000a54:	bf24      	itt	cs
 8000a56:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000a5a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000a5e:	d90d      	bls.n	8000a7c <__aeabi_d2f+0x30>
 8000a60:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000a64:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000a68:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000a6c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000a70:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000a74:	bf08      	it	eq
 8000a76:	f020 0001 	biceq.w	r0, r0, #1
 8000a7a:	4770      	bx	lr
 8000a7c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000a80:	d121      	bne.n	8000ac6 <__aeabi_d2f+0x7a>
 8000a82:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000a86:	bfbc      	itt	lt
 8000a88:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000a8c:	4770      	bxlt	lr
 8000a8e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a92:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000a96:	f1c2 0218 	rsb	r2, r2, #24
 8000a9a:	f1c2 0c20 	rsb	ip, r2, #32
 8000a9e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000aa2:	fa20 f002 	lsr.w	r0, r0, r2
 8000aa6:	bf18      	it	ne
 8000aa8:	f040 0001 	orrne.w	r0, r0, #1
 8000aac:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ab0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000ab4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000ab8:	ea40 000c 	orr.w	r0, r0, ip
 8000abc:	fa23 f302 	lsr.w	r3, r3, r2
 8000ac0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ac4:	e7cc      	b.n	8000a60 <__aeabi_d2f+0x14>
 8000ac6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000aca:	d107      	bne.n	8000adc <__aeabi_d2f+0x90>
 8000acc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000ad0:	bf1e      	ittt	ne
 8000ad2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000ad6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000ada:	4770      	bxne	lr
 8000adc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000ae0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ae4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ae8:	4770      	bx	lr
 8000aea:	bf00      	nop

08000aec <__aeabi_uldivmod>:
 8000aec:	b953      	cbnz	r3, 8000b04 <__aeabi_uldivmod+0x18>
 8000aee:	b94a      	cbnz	r2, 8000b04 <__aeabi_uldivmod+0x18>
 8000af0:	2900      	cmp	r1, #0
 8000af2:	bf08      	it	eq
 8000af4:	2800      	cmpeq	r0, #0
 8000af6:	bf1c      	itt	ne
 8000af8:	f04f 31ff 	movne.w	r1, #4294967295
 8000afc:	f04f 30ff 	movne.w	r0, #4294967295
 8000b00:	f000 b970 	b.w	8000de4 <__aeabi_idiv0>
 8000b04:	f1ad 0c08 	sub.w	ip, sp, #8
 8000b08:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000b0c:	f000 f806 	bl	8000b1c <__udivmoddi4>
 8000b10:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b14:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b18:	b004      	add	sp, #16
 8000b1a:	4770      	bx	lr

08000b1c <__udivmoddi4>:
 8000b1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b20:	9e08      	ldr	r6, [sp, #32]
 8000b22:	460d      	mov	r5, r1
 8000b24:	4604      	mov	r4, r0
 8000b26:	460f      	mov	r7, r1
 8000b28:	2b00      	cmp	r3, #0
 8000b2a:	d14a      	bne.n	8000bc2 <__udivmoddi4+0xa6>
 8000b2c:	428a      	cmp	r2, r1
 8000b2e:	4694      	mov	ip, r2
 8000b30:	d965      	bls.n	8000bfe <__udivmoddi4+0xe2>
 8000b32:	fab2 f382 	clz	r3, r2
 8000b36:	b143      	cbz	r3, 8000b4a <__udivmoddi4+0x2e>
 8000b38:	fa02 fc03 	lsl.w	ip, r2, r3
 8000b3c:	f1c3 0220 	rsb	r2, r3, #32
 8000b40:	409f      	lsls	r7, r3
 8000b42:	fa20 f202 	lsr.w	r2, r0, r2
 8000b46:	4317      	orrs	r7, r2
 8000b48:	409c      	lsls	r4, r3
 8000b4a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000b4e:	fa1f f58c 	uxth.w	r5, ip
 8000b52:	fbb7 f1fe 	udiv	r1, r7, lr
 8000b56:	0c22      	lsrs	r2, r4, #16
 8000b58:	fb0e 7711 	mls	r7, lr, r1, r7
 8000b5c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000b60:	fb01 f005 	mul.w	r0, r1, r5
 8000b64:	4290      	cmp	r0, r2
 8000b66:	d90a      	bls.n	8000b7e <__udivmoddi4+0x62>
 8000b68:	eb1c 0202 	adds.w	r2, ip, r2
 8000b6c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000b70:	f080 811c 	bcs.w	8000dac <__udivmoddi4+0x290>
 8000b74:	4290      	cmp	r0, r2
 8000b76:	f240 8119 	bls.w	8000dac <__udivmoddi4+0x290>
 8000b7a:	3902      	subs	r1, #2
 8000b7c:	4462      	add	r2, ip
 8000b7e:	1a12      	subs	r2, r2, r0
 8000b80:	b2a4      	uxth	r4, r4
 8000b82:	fbb2 f0fe 	udiv	r0, r2, lr
 8000b86:	fb0e 2210 	mls	r2, lr, r0, r2
 8000b8a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000b8e:	fb00 f505 	mul.w	r5, r0, r5
 8000b92:	42a5      	cmp	r5, r4
 8000b94:	d90a      	bls.n	8000bac <__udivmoddi4+0x90>
 8000b96:	eb1c 0404 	adds.w	r4, ip, r4
 8000b9a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b9e:	f080 8107 	bcs.w	8000db0 <__udivmoddi4+0x294>
 8000ba2:	42a5      	cmp	r5, r4
 8000ba4:	f240 8104 	bls.w	8000db0 <__udivmoddi4+0x294>
 8000ba8:	4464      	add	r4, ip
 8000baa:	3802      	subs	r0, #2
 8000bac:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000bb0:	1b64      	subs	r4, r4, r5
 8000bb2:	2100      	movs	r1, #0
 8000bb4:	b11e      	cbz	r6, 8000bbe <__udivmoddi4+0xa2>
 8000bb6:	40dc      	lsrs	r4, r3
 8000bb8:	2300      	movs	r3, #0
 8000bba:	e9c6 4300 	strd	r4, r3, [r6]
 8000bbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bc2:	428b      	cmp	r3, r1
 8000bc4:	d908      	bls.n	8000bd8 <__udivmoddi4+0xbc>
 8000bc6:	2e00      	cmp	r6, #0
 8000bc8:	f000 80ed 	beq.w	8000da6 <__udivmoddi4+0x28a>
 8000bcc:	2100      	movs	r1, #0
 8000bce:	e9c6 0500 	strd	r0, r5, [r6]
 8000bd2:	4608      	mov	r0, r1
 8000bd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bd8:	fab3 f183 	clz	r1, r3
 8000bdc:	2900      	cmp	r1, #0
 8000bde:	d149      	bne.n	8000c74 <__udivmoddi4+0x158>
 8000be0:	42ab      	cmp	r3, r5
 8000be2:	d302      	bcc.n	8000bea <__udivmoddi4+0xce>
 8000be4:	4282      	cmp	r2, r0
 8000be6:	f200 80f8 	bhi.w	8000dda <__udivmoddi4+0x2be>
 8000bea:	1a84      	subs	r4, r0, r2
 8000bec:	eb65 0203 	sbc.w	r2, r5, r3
 8000bf0:	2001      	movs	r0, #1
 8000bf2:	4617      	mov	r7, r2
 8000bf4:	2e00      	cmp	r6, #0
 8000bf6:	d0e2      	beq.n	8000bbe <__udivmoddi4+0xa2>
 8000bf8:	e9c6 4700 	strd	r4, r7, [r6]
 8000bfc:	e7df      	b.n	8000bbe <__udivmoddi4+0xa2>
 8000bfe:	b902      	cbnz	r2, 8000c02 <__udivmoddi4+0xe6>
 8000c00:	deff      	udf	#255	; 0xff
 8000c02:	fab2 f382 	clz	r3, r2
 8000c06:	2b00      	cmp	r3, #0
 8000c08:	f040 8090 	bne.w	8000d2c <__udivmoddi4+0x210>
 8000c0c:	1a8a      	subs	r2, r1, r2
 8000c0e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c12:	fa1f fe8c 	uxth.w	lr, ip
 8000c16:	2101      	movs	r1, #1
 8000c18:	fbb2 f5f7 	udiv	r5, r2, r7
 8000c1c:	fb07 2015 	mls	r0, r7, r5, r2
 8000c20:	0c22      	lsrs	r2, r4, #16
 8000c22:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000c26:	fb0e f005 	mul.w	r0, lr, r5
 8000c2a:	4290      	cmp	r0, r2
 8000c2c:	d908      	bls.n	8000c40 <__udivmoddi4+0x124>
 8000c2e:	eb1c 0202 	adds.w	r2, ip, r2
 8000c32:	f105 38ff 	add.w	r8, r5, #4294967295
 8000c36:	d202      	bcs.n	8000c3e <__udivmoddi4+0x122>
 8000c38:	4290      	cmp	r0, r2
 8000c3a:	f200 80cb 	bhi.w	8000dd4 <__udivmoddi4+0x2b8>
 8000c3e:	4645      	mov	r5, r8
 8000c40:	1a12      	subs	r2, r2, r0
 8000c42:	b2a4      	uxth	r4, r4
 8000c44:	fbb2 f0f7 	udiv	r0, r2, r7
 8000c48:	fb07 2210 	mls	r2, r7, r0, r2
 8000c4c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000c50:	fb0e fe00 	mul.w	lr, lr, r0
 8000c54:	45a6      	cmp	lr, r4
 8000c56:	d908      	bls.n	8000c6a <__udivmoddi4+0x14e>
 8000c58:	eb1c 0404 	adds.w	r4, ip, r4
 8000c5c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000c60:	d202      	bcs.n	8000c68 <__udivmoddi4+0x14c>
 8000c62:	45a6      	cmp	lr, r4
 8000c64:	f200 80bb 	bhi.w	8000dde <__udivmoddi4+0x2c2>
 8000c68:	4610      	mov	r0, r2
 8000c6a:	eba4 040e 	sub.w	r4, r4, lr
 8000c6e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000c72:	e79f      	b.n	8000bb4 <__udivmoddi4+0x98>
 8000c74:	f1c1 0720 	rsb	r7, r1, #32
 8000c78:	408b      	lsls	r3, r1
 8000c7a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000c7e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000c82:	fa05 f401 	lsl.w	r4, r5, r1
 8000c86:	fa20 f307 	lsr.w	r3, r0, r7
 8000c8a:	40fd      	lsrs	r5, r7
 8000c8c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000c90:	4323      	orrs	r3, r4
 8000c92:	fbb5 f8f9 	udiv	r8, r5, r9
 8000c96:	fa1f fe8c 	uxth.w	lr, ip
 8000c9a:	fb09 5518 	mls	r5, r9, r8, r5
 8000c9e:	0c1c      	lsrs	r4, r3, #16
 8000ca0:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000ca4:	fb08 f50e 	mul.w	r5, r8, lr
 8000ca8:	42a5      	cmp	r5, r4
 8000caa:	fa02 f201 	lsl.w	r2, r2, r1
 8000cae:	fa00 f001 	lsl.w	r0, r0, r1
 8000cb2:	d90b      	bls.n	8000ccc <__udivmoddi4+0x1b0>
 8000cb4:	eb1c 0404 	adds.w	r4, ip, r4
 8000cb8:	f108 3aff 	add.w	sl, r8, #4294967295
 8000cbc:	f080 8088 	bcs.w	8000dd0 <__udivmoddi4+0x2b4>
 8000cc0:	42a5      	cmp	r5, r4
 8000cc2:	f240 8085 	bls.w	8000dd0 <__udivmoddi4+0x2b4>
 8000cc6:	f1a8 0802 	sub.w	r8, r8, #2
 8000cca:	4464      	add	r4, ip
 8000ccc:	1b64      	subs	r4, r4, r5
 8000cce:	b29d      	uxth	r5, r3
 8000cd0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000cd4:	fb09 4413 	mls	r4, r9, r3, r4
 8000cd8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000cdc:	fb03 fe0e 	mul.w	lr, r3, lr
 8000ce0:	45a6      	cmp	lr, r4
 8000ce2:	d908      	bls.n	8000cf6 <__udivmoddi4+0x1da>
 8000ce4:	eb1c 0404 	adds.w	r4, ip, r4
 8000ce8:	f103 35ff 	add.w	r5, r3, #4294967295
 8000cec:	d26c      	bcs.n	8000dc8 <__udivmoddi4+0x2ac>
 8000cee:	45a6      	cmp	lr, r4
 8000cf0:	d96a      	bls.n	8000dc8 <__udivmoddi4+0x2ac>
 8000cf2:	3b02      	subs	r3, #2
 8000cf4:	4464      	add	r4, ip
 8000cf6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000cfa:	fba3 9502 	umull	r9, r5, r3, r2
 8000cfe:	eba4 040e 	sub.w	r4, r4, lr
 8000d02:	42ac      	cmp	r4, r5
 8000d04:	46c8      	mov	r8, r9
 8000d06:	46ae      	mov	lr, r5
 8000d08:	d356      	bcc.n	8000db8 <__udivmoddi4+0x29c>
 8000d0a:	d053      	beq.n	8000db4 <__udivmoddi4+0x298>
 8000d0c:	b156      	cbz	r6, 8000d24 <__udivmoddi4+0x208>
 8000d0e:	ebb0 0208 	subs.w	r2, r0, r8
 8000d12:	eb64 040e 	sbc.w	r4, r4, lr
 8000d16:	fa04 f707 	lsl.w	r7, r4, r7
 8000d1a:	40ca      	lsrs	r2, r1
 8000d1c:	40cc      	lsrs	r4, r1
 8000d1e:	4317      	orrs	r7, r2
 8000d20:	e9c6 7400 	strd	r7, r4, [r6]
 8000d24:	4618      	mov	r0, r3
 8000d26:	2100      	movs	r1, #0
 8000d28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d2c:	f1c3 0120 	rsb	r1, r3, #32
 8000d30:	fa02 fc03 	lsl.w	ip, r2, r3
 8000d34:	fa20 f201 	lsr.w	r2, r0, r1
 8000d38:	fa25 f101 	lsr.w	r1, r5, r1
 8000d3c:	409d      	lsls	r5, r3
 8000d3e:	432a      	orrs	r2, r5
 8000d40:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000d44:	fa1f fe8c 	uxth.w	lr, ip
 8000d48:	fbb1 f0f7 	udiv	r0, r1, r7
 8000d4c:	fb07 1510 	mls	r5, r7, r0, r1
 8000d50:	0c11      	lsrs	r1, r2, #16
 8000d52:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000d56:	fb00 f50e 	mul.w	r5, r0, lr
 8000d5a:	428d      	cmp	r5, r1
 8000d5c:	fa04 f403 	lsl.w	r4, r4, r3
 8000d60:	d908      	bls.n	8000d74 <__udivmoddi4+0x258>
 8000d62:	eb1c 0101 	adds.w	r1, ip, r1
 8000d66:	f100 38ff 	add.w	r8, r0, #4294967295
 8000d6a:	d22f      	bcs.n	8000dcc <__udivmoddi4+0x2b0>
 8000d6c:	428d      	cmp	r5, r1
 8000d6e:	d92d      	bls.n	8000dcc <__udivmoddi4+0x2b0>
 8000d70:	3802      	subs	r0, #2
 8000d72:	4461      	add	r1, ip
 8000d74:	1b49      	subs	r1, r1, r5
 8000d76:	b292      	uxth	r2, r2
 8000d78:	fbb1 f5f7 	udiv	r5, r1, r7
 8000d7c:	fb07 1115 	mls	r1, r7, r5, r1
 8000d80:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000d84:	fb05 f10e 	mul.w	r1, r5, lr
 8000d88:	4291      	cmp	r1, r2
 8000d8a:	d908      	bls.n	8000d9e <__udivmoddi4+0x282>
 8000d8c:	eb1c 0202 	adds.w	r2, ip, r2
 8000d90:	f105 38ff 	add.w	r8, r5, #4294967295
 8000d94:	d216      	bcs.n	8000dc4 <__udivmoddi4+0x2a8>
 8000d96:	4291      	cmp	r1, r2
 8000d98:	d914      	bls.n	8000dc4 <__udivmoddi4+0x2a8>
 8000d9a:	3d02      	subs	r5, #2
 8000d9c:	4462      	add	r2, ip
 8000d9e:	1a52      	subs	r2, r2, r1
 8000da0:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000da4:	e738      	b.n	8000c18 <__udivmoddi4+0xfc>
 8000da6:	4631      	mov	r1, r6
 8000da8:	4630      	mov	r0, r6
 8000daa:	e708      	b.n	8000bbe <__udivmoddi4+0xa2>
 8000dac:	4639      	mov	r1, r7
 8000dae:	e6e6      	b.n	8000b7e <__udivmoddi4+0x62>
 8000db0:	4610      	mov	r0, r2
 8000db2:	e6fb      	b.n	8000bac <__udivmoddi4+0x90>
 8000db4:	4548      	cmp	r0, r9
 8000db6:	d2a9      	bcs.n	8000d0c <__udivmoddi4+0x1f0>
 8000db8:	ebb9 0802 	subs.w	r8, r9, r2
 8000dbc:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000dc0:	3b01      	subs	r3, #1
 8000dc2:	e7a3      	b.n	8000d0c <__udivmoddi4+0x1f0>
 8000dc4:	4645      	mov	r5, r8
 8000dc6:	e7ea      	b.n	8000d9e <__udivmoddi4+0x282>
 8000dc8:	462b      	mov	r3, r5
 8000dca:	e794      	b.n	8000cf6 <__udivmoddi4+0x1da>
 8000dcc:	4640      	mov	r0, r8
 8000dce:	e7d1      	b.n	8000d74 <__udivmoddi4+0x258>
 8000dd0:	46d0      	mov	r8, sl
 8000dd2:	e77b      	b.n	8000ccc <__udivmoddi4+0x1b0>
 8000dd4:	3d02      	subs	r5, #2
 8000dd6:	4462      	add	r2, ip
 8000dd8:	e732      	b.n	8000c40 <__udivmoddi4+0x124>
 8000dda:	4608      	mov	r0, r1
 8000ddc:	e70a      	b.n	8000bf4 <__udivmoddi4+0xd8>
 8000dde:	4464      	add	r4, ip
 8000de0:	3802      	subs	r0, #2
 8000de2:	e742      	b.n	8000c6a <__udivmoddi4+0x14e>

08000de4 <__aeabi_idiv0>:
 8000de4:	4770      	bx	lr
 8000de6:	bf00      	nop

08000de8 <DELAY_SetParams>:
 */


#include "delay.h"

void DELAY_SetParams(DELAY_Params* d_p, float mix, float feedback, uint32_t sample_len) {
 8000de8:	b480      	push	{r7}
 8000dea:	b085      	sub	sp, #20
 8000dec:	af00      	add	r7, sp, #0
 8000dee:	60f8      	str	r0, [r7, #12]
 8000df0:	ed87 0a02 	vstr	s0, [r7, #8]
 8000df4:	edc7 0a01 	vstr	s1, [r7, #4]
 8000df8:	6039      	str	r1, [r7, #0]
	d_p->mix	 		= mix;
 8000dfa:	68fb      	ldr	r3, [r7, #12]
 8000dfc:	68ba      	ldr	r2, [r7, #8]
 8000dfe:	601a      	str	r2, [r3, #0]
	d_p->sample_len 	= sample_len;
 8000e00:	68fb      	ldr	r3, [r7, #12]
 8000e02:	683a      	ldr	r2, [r7, #0]
 8000e04:	609a      	str	r2, [r3, #8]
	d_p->feedback		= feedback;
 8000e06:	68fb      	ldr	r3, [r7, #12]
 8000e08:	687a      	ldr	r2, [r7, #4]
 8000e0a:	605a      	str	r2, [r3, #4]

}
 8000e0c:	bf00      	nop
 8000e0e:	3714      	adds	r7, #20
 8000e10:	46bd      	mov	sp, r7
 8000e12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e16:	4770      	bx	lr

08000e18 <DELAY_Init>:

void DELAY_Init(DELAY_Params* d_p) {
 8000e18:	b480      	push	{r7}
 8000e1a:	b085      	sub	sp, #20
 8000e1c:	af00      	add	r7, sp, #0
 8000e1e:	6078      	str	r0, [r7, #4]
	d_p->mix	 			= 0;
 8000e20:	687b      	ldr	r3, [r7, #4]
 8000e22:	f04f 0200 	mov.w	r2, #0
 8000e26:	601a      	str	r2, [r3, #0]
	d_p->sample_len 		= 0;
 8000e28:	687b      	ldr	r3, [r7, #4]
 8000e2a:	2200      	movs	r2, #0
 8000e2c:	609a      	str	r2, [r3, #8]
	d_p->feedback			= 0;
 8000e2e:	687b      	ldr	r3, [r7, #4]
 8000e30:	f04f 0200 	mov.w	r2, #0
 8000e34:	605a      	str	r2, [r3, #4]
	d_p->delay_line_index	= 0;
 8000e36:	687b      	ldr	r3, [r7, #4]
 8000e38:	2200      	movs	r2, #0
 8000e3a:	60da      	str	r2, [r3, #12]

	for(int i = 0; i < DELAY_LINE_SIZE; i++) {
 8000e3c:	2300      	movs	r3, #0
 8000e3e:	60fb      	str	r3, [r7, #12]
 8000e40:	e00a      	b.n	8000e58 <DELAY_Init+0x40>
		d_p->delay_line[i] = 0;
 8000e42:	687a      	ldr	r2, [r7, #4]
 8000e44:	68fb      	ldr	r3, [r7, #12]
 8000e46:	3304      	adds	r3, #4
 8000e48:	009b      	lsls	r3, r3, #2
 8000e4a:	4413      	add	r3, r2
 8000e4c:	f04f 0200 	mov.w	r2, #0
 8000e50:	601a      	str	r2, [r3, #0]
	for(int i = 0; i < DELAY_LINE_SIZE; i++) {
 8000e52:	68fb      	ldr	r3, [r7, #12]
 8000e54:	3301      	adds	r3, #1
 8000e56:	60fb      	str	r3, [r7, #12]
 8000e58:	68fb      	ldr	r3, [r7, #12]
 8000e5a:	f64b 327f 	movw	r2, #47999	; 0xbb7f
 8000e5e:	4293      	cmp	r3, r2
 8000e60:	ddef      	ble.n	8000e42 <DELAY_Init+0x2a>
	}
}
 8000e62:	bf00      	nop
 8000e64:	bf00      	nop
 8000e66:	3714      	adds	r7, #20
 8000e68:	46bd      	mov	sp, r7
 8000e6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e6e:	4770      	bx	lr

08000e70 <DISTORT_SetParams>:
//	if (fabs(insample) < threshold_lower && fabs(insample) > threshold_noise ) return outgain*(insample*gain_lower);
//	if (fabs(insample) > threshold_higher) return outgain*(insample*gain_higher);
//	return outgain*insample;
//}

void DISTORT_SetParams(DISTORT_Params* d_p, float gap, float l_gain, float h_gain){
 8000e70:	b480      	push	{r7}
 8000e72:	b085      	sub	sp, #20
 8000e74:	af00      	add	r7, sp, #0
 8000e76:	60f8      	str	r0, [r7, #12]
 8000e78:	ed87 0a02 	vstr	s0, [r7, #8]
 8000e7c:	edc7 0a01 	vstr	s1, [r7, #4]
 8000e80:	ed87 1a00 	vstr	s2, [r7]
	d_p->thrshld_gap 	= gap;
 8000e84:	68fb      	ldr	r3, [r7, #12]
 8000e86:	68ba      	ldr	r2, [r7, #8]
 8000e88:	601a      	str	r2, [r3, #0]
	d_p->l_gain 		= l_gain;
 8000e8a:	68fb      	ldr	r3, [r7, #12]
 8000e8c:	687a      	ldr	r2, [r7, #4]
 8000e8e:	60da      	str	r2, [r3, #12]
	d_p->h_gain 		= h_gain;
 8000e90:	68fb      	ldr	r3, [r7, #12]
 8000e92:	683a      	ldr	r2, [r7, #0]
 8000e94:	609a      	str	r2, [r3, #8]

}
 8000e96:	bf00      	nop
 8000e98:	3714      	adds	r7, #20
 8000e9a:	46bd      	mov	sp, r7
 8000e9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ea0:	4770      	bx	lr
	...

08000ea4 <DISTORT_Init>:

void DISTORT_Init(DISTORT_Params* d_p){
 8000ea4:	b480      	push	{r7}
 8000ea6:	b083      	sub	sp, #12
 8000ea8:	af00      	add	r7, sp, #0
 8000eaa:	6078      	str	r0, [r7, #4]
	d_p->thrshld_gap 	= 0.0f;
 8000eac:	687b      	ldr	r3, [r7, #4]
 8000eae:	f04f 0200 	mov.w	r2, #0
 8000eb2:	601a      	str	r2, [r3, #0]
	d_p->h_gain 	 	= 0.0f;
 8000eb4:	687b      	ldr	r3, [r7, #4]
 8000eb6:	f04f 0200 	mov.w	r2, #0
 8000eba:	609a      	str	r2, [r3, #8]
	d_p->l_gain 	 	= 0.0f;
 8000ebc:	687b      	ldr	r3, [r7, #4]
 8000ebe:	f04f 0200 	mov.w	r2, #0
 8000ec2:	60da      	str	r2, [r3, #12]
	d_p->thrshld_noise	= 2000000.0f;
 8000ec4:	687b      	ldr	r3, [r7, #4]
 8000ec6:	4a06      	ldr	r2, [pc, #24]	; (8000ee0 <DISTORT_Init+0x3c>)
 8000ec8:	605a      	str	r2, [r3, #4]
	d_p->gain 			= 2.0f;
 8000eca:	687b      	ldr	r3, [r7, #4]
 8000ecc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000ed0:	611a      	str	r2, [r3, #16]
}
 8000ed2:	bf00      	nop
 8000ed4:	370c      	adds	r7, #12
 8000ed6:	46bd      	mov	sp, r7
 8000ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000edc:	4770      	bx	lr
 8000ede:	bf00      	nop
 8000ee0:	49f42400 	.word	0x49f42400
 8000ee4:	00000000 	.word	0x00000000

08000ee8 <FILTERS_SetParams>:
 *      Author: Jakub Kowalski
 */

#include "filters.h"

void FILTERS_SetParams(FILTERS_Params* f_p, float f0, float BW, float G) {
 8000ee8:	b5b0      	push	{r4, r5, r7, lr}
 8000eea:	b086      	sub	sp, #24
 8000eec:	af00      	add	r7, sp, #0
 8000eee:	60f8      	str	r0, [r7, #12]
 8000ef0:	ed87 0a02 	vstr	s0, [r7, #8]
 8000ef4:	edc7 0a01 	vstr	s1, [r7, #4]
 8000ef8:	ed87 1a00 	vstr	s2, [r7]

	f_p->f0 = f0;
 8000efc:	68fb      	ldr	r3, [r7, #12]
 8000efe:	68ba      	ldr	r2, [r7, #8]
 8000f00:	601a      	str	r2, [r3, #0]
	f_p->BW = BW;
 8000f02:	68fb      	ldr	r3, [r7, #12]
 8000f04:	687a      	ldr	r2, [r7, #4]
 8000f06:	609a      	str	r2, [r3, #8]
	f_p->G = G;
 8000f08:	68fb      	ldr	r3, [r7, #12]
 8000f0a:	683a      	ldr	r2, [r7, #0]
 8000f0c:	605a      	str	r2, [r3, #4]

	float wcT = 2.0f * tanf( M_PI* f0 * f_p->sampleTime_s);
 8000f0e:	68b8      	ldr	r0, [r7, #8]
 8000f10:	f7ff fb32 	bl	8000578 <__aeabi_f2d>
 8000f14:	a35c      	add	r3, pc, #368	; (adr r3, 8001088 <FILTERS_SetParams+0x1a0>)
 8000f16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f1a:	f7ff fb85 	bl	8000628 <__aeabi_dmul>
 8000f1e:	4602      	mov	r2, r0
 8000f20:	460b      	mov	r3, r1
 8000f22:	4614      	mov	r4, r2
 8000f24:	461d      	mov	r5, r3
 8000f26:	68fb      	ldr	r3, [r7, #12]
 8000f28:	68db      	ldr	r3, [r3, #12]
 8000f2a:	4618      	mov	r0, r3
 8000f2c:	f7ff fb24 	bl	8000578 <__aeabi_f2d>
 8000f30:	4602      	mov	r2, r0
 8000f32:	460b      	mov	r3, r1
 8000f34:	4620      	mov	r0, r4
 8000f36:	4629      	mov	r1, r5
 8000f38:	f7ff fb76 	bl	8000628 <__aeabi_dmul>
 8000f3c:	4602      	mov	r2, r0
 8000f3e:	460b      	mov	r3, r1
 8000f40:	4610      	mov	r0, r2
 8000f42:	4619      	mov	r1, r3
 8000f44:	f7ff fd82 	bl	8000a4c <__aeabi_d2f>
 8000f48:	4603      	mov	r3, r0
 8000f4a:	ee00 3a10 	vmov	s0, r3
 8000f4e:	f021 fc91 	bl	8022874 <tanf>
 8000f52:	eef0 7a40 	vmov.f32	s15, s0
 8000f56:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8000f5a:	edc7 7a05 	vstr	s15, [r7, #20]
	float Q = f0/BW;
 8000f5e:	edd7 6a02 	vldr	s13, [r7, #8]
 8000f62:	ed97 7a01 	vldr	s14, [r7, #4]
 8000f66:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000f6a:	edc7 7a04 	vstr	s15, [r7, #16]

	f_p->a[0] = 4.0f + 2.0f * (G  / Q) * wcT + wcT * wcT;
 8000f6e:	edd7 6a00 	vldr	s13, [r7]
 8000f72:	ed97 7a04 	vldr	s14, [r7, #16]
 8000f76:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000f7a:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8000f7e:	edd7 7a05 	vldr	s15, [r7, #20]
 8000f82:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000f86:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 8000f8a:	ee37 7a87 	vadd.f32	s14, s15, s14
 8000f8e:	edd7 7a05 	vldr	s15, [r7, #20]
 8000f92:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8000f96:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f9a:	68fb      	ldr	r3, [r7, #12]
 8000f9c:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
	f_p->a[1] = 2.0f * wcT * wcT - 8.0f;
 8000fa0:	edd7 7a05 	vldr	s15, [r7, #20]
 8000fa4:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8000fa8:	edd7 7a05 	vldr	s15, [r7, #20]
 8000fac:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000fb0:	eeb2 7a00 	vmov.f32	s14, #32	; 0x41000000  8.0
 8000fb4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000fb8:	68fb      	ldr	r3, [r7, #12]
 8000fba:	edc3 7a0e 	vstr	s15, [r3, #56]	; 0x38
	f_p->a[2] = 4.0f - 2.0f * (G  / Q) * wcT + wcT * wcT;
 8000fbe:	edd7 6a00 	vldr	s13, [r7]
 8000fc2:	ed97 7a04 	vldr	s14, [r7, #16]
 8000fc6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000fca:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8000fce:	edd7 7a05 	vldr	s15, [r7, #20]
 8000fd2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000fd6:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 8000fda:	ee37 7a67 	vsub.f32	s14, s14, s15
 8000fde:	edd7 7a05 	vldr	s15, [r7, #20]
 8000fe2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8000fe6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000fea:	68fb      	ldr	r3, [r7, #12]
 8000fec:	edc3 7a0f 	vstr	s15, [r3, #60]	; 0x3c

	f_p->b[0] = 1.0f / (4.0f + 2.0f / Q * wcT + wcT * wcT);
 8000ff0:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8000ff4:	edd7 7a04 	vldr	s15, [r7, #16]
 8000ff8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8000ffc:	edd7 7a05 	vldr	s15, [r7, #20]
 8001000:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001004:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 8001008:	ee37 7a87 	vadd.f32	s14, s15, s14
 800100c:	edd7 7a05 	vldr	s15, [r7, #20]
 8001010:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8001014:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001018:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800101c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001020:	68fb      	ldr	r3, [r7, #12]
 8001022:	edc3 7a0a 	vstr	s15, [r3, #40]	; 0x28
	f_p->b[1] = -(2.0f * wcT * wcT - 8.0f);
 8001026:	edd7 7a05 	vldr	s15, [r7, #20]
 800102a:	ee37 7aa7 	vadd.f32	s14, s15, s15
 800102e:	edd7 7a05 	vldr	s15, [r7, #20]
 8001032:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001036:	eeb2 7a00 	vmov.f32	s14, #32	; 0x41000000  8.0
 800103a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800103e:	eef1 7a67 	vneg.f32	s15, s15
 8001042:	68fb      	ldr	r3, [r7, #12]
 8001044:	edc3 7a0b 	vstr	s15, [r3, #44]	; 0x2c
	f_p->b[2] = -(4.0f - 2.0f / Q * wcT + wcT * wcT);
 8001048:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 800104c:	edd7 7a04 	vldr	s15, [r7, #16]
 8001050:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8001054:	edd7 7a05 	vldr	s15, [r7, #20]
 8001058:	ee67 7a27 	vmul.f32	s15, s14, s15
 800105c:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 8001060:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001064:	edd7 7a05 	vldr	s15, [r7, #20]
 8001068:	ee67 7aa7 	vmul.f32	s15, s15, s15
 800106c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001070:	eef1 7a67 	vneg.f32	s15, s15
 8001074:	68fb      	ldr	r3, [r7, #12]
 8001076:	edc3 7a0c 	vstr	s15, [r3, #48]	; 0x30

}
 800107a:	bf00      	nop
 800107c:	3718      	adds	r7, #24
 800107e:	46bd      	mov	sp, r7
 8001080:	bdb0      	pop	{r4, r5, r7, pc}
 8001082:	bf00      	nop
 8001084:	f3af 8000 	nop.w
 8001088:	54442d18 	.word	0x54442d18
 800108c:	400921fb 	.word	0x400921fb

08001090 <FILTERS_Init>:

void FILTERS_Init(FILTERS_Params* f_p) {
 8001090:	b580      	push	{r7, lr}
 8001092:	b084      	sub	sp, #16
 8001094:	af00      	add	r7, sp, #0
 8001096:	6078      	str	r0, [r7, #4]
	f_p->sampleTime_s = 1.0f / AUDIOFX_SAMPLING_RATE;
 8001098:	687b      	ldr	r3, [r7, #4]
 800109a:	4a14      	ldr	r2, [pc, #80]	; (80010ec <FILTERS_Init+0x5c>)
 800109c:	60da      	str	r2, [r3, #12]

	for (uint8_t n = 0; n < 3; n++) {
 800109e:	2300      	movs	r3, #0
 80010a0:	73fb      	strb	r3, [r7, #15]
 80010a2:	e013      	b.n	80010cc <FILTERS_Init+0x3c>
		f_p->x[n] = 0.0f;
 80010a4:	7bfb      	ldrb	r3, [r7, #15]
 80010a6:	687a      	ldr	r2, [r7, #4]
 80010a8:	3304      	adds	r3, #4
 80010aa:	009b      	lsls	r3, r3, #2
 80010ac:	4413      	add	r3, r2
 80010ae:	f04f 0200 	mov.w	r2, #0
 80010b2:	601a      	str	r2, [r3, #0]
		f_p->y[n] = 0.0f;
 80010b4:	7bfb      	ldrb	r3, [r7, #15]
 80010b6:	687a      	ldr	r2, [r7, #4]
 80010b8:	3306      	adds	r3, #6
 80010ba:	009b      	lsls	r3, r3, #2
 80010bc:	4413      	add	r3, r2
 80010be:	3304      	adds	r3, #4
 80010c0:	f04f 0200 	mov.w	r2, #0
 80010c4:	601a      	str	r2, [r3, #0]
	for (uint8_t n = 0; n < 3; n++) {
 80010c6:	7bfb      	ldrb	r3, [r7, #15]
 80010c8:	3301      	adds	r3, #1
 80010ca:	73fb      	strb	r3, [r7, #15]
 80010cc:	7bfb      	ldrb	r3, [r7, #15]
 80010ce:	2b02      	cmp	r3, #2
 80010d0:	d9e8      	bls.n	80010a4 <FILTERS_Init+0x14>
	}

	FILTERS_SetParams(f_p, 1.0f, 0.0f, 1.0f);
 80010d2:	eeb7 1a00 	vmov.f32	s2, #112	; 0x3f800000  1.0
 80010d6:	eddf 0a06 	vldr	s1, [pc, #24]	; 80010f0 <FILTERS_Init+0x60>
 80010da:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80010de:	6878      	ldr	r0, [r7, #4]
 80010e0:	f7ff ff02 	bl	8000ee8 <FILTERS_SetParams>
}
 80010e4:	bf00      	nop
 80010e6:	3710      	adds	r7, #16
 80010e8:	46bd      	mov	sp, r7
 80010ea:	bd80      	pop	{r7, pc}
 80010ec:	37aec33e 	.word	0x37aec33e
 80010f0:	00000000 	.word	0x00000000

080010f4 <AUDIOFX_Chain_SwitchFX>:
extern AUDIOFX_Type curr_fx;

/**
 * Switch the current FX to be controlled
 */
void AUDIOFX_Chain_SwitchFX(uint8_t dir) {
 80010f4:	b480      	push	{r7}
 80010f6:	b083      	sub	sp, #12
 80010f8:	af00      	add	r7, sp, #0
 80010fa:	4603      	mov	r3, r0
 80010fc:	71fb      	strb	r3, [r7, #7]
	if(dir) {
 80010fe:	79fb      	ldrb	r3, [r7, #7]
 8001100:	2b00      	cmp	r3, #0
 8001102:	d009      	beq.n	8001118 <AUDIOFX_Chain_SwitchFX+0x24>
		curr_fx++;
 8001104:	4b1d      	ldr	r3, [pc, #116]	; (800117c <AUDIOFX_Chain_SwitchFX+0x88>)
 8001106:	f993 3000 	ldrsb.w	r3, [r3]
 800110a:	b2db      	uxtb	r3, r3
 800110c:	3301      	adds	r3, #1
 800110e:	b2db      	uxtb	r3, r3
 8001110:	b25a      	sxtb	r2, r3
 8001112:	4b1a      	ldr	r3, [pc, #104]	; (800117c <AUDIOFX_Chain_SwitchFX+0x88>)
 8001114:	701a      	strb	r2, [r3, #0]
 8001116:	e008      	b.n	800112a <AUDIOFX_Chain_SwitchFX+0x36>
	}
	else {
		curr_fx--;
 8001118:	4b18      	ldr	r3, [pc, #96]	; (800117c <AUDIOFX_Chain_SwitchFX+0x88>)
 800111a:	f993 3000 	ldrsb.w	r3, [r3]
 800111e:	b2db      	uxtb	r3, r3
 8001120:	3b01      	subs	r3, #1
 8001122:	b2db      	uxtb	r3, r3
 8001124:	b25a      	sxtb	r2, r3
 8001126:	4b15      	ldr	r3, [pc, #84]	; (800117c <AUDIOFX_Chain_SwitchFX+0x88>)
 8001128:	701a      	strb	r2, [r3, #0]
	}

	if(curr_fx == AUDIOFX_MAX_CHAIN) {
 800112a:	4b14      	ldr	r3, [pc, #80]	; (800117c <AUDIOFX_Chain_SwitchFX+0x88>)
 800112c:	f993 3000 	ldrsb.w	r3, [r3]
 8001130:	2b07      	cmp	r3, #7
 8001132:	d103      	bne.n	800113c <AUDIOFX_Chain_SwitchFX+0x48>
		curr_fx = 0;
 8001134:	4b11      	ldr	r3, [pc, #68]	; (800117c <AUDIOFX_Chain_SwitchFX+0x88>)
 8001136:	2200      	movs	r2, #0
 8001138:	701a      	strb	r2, [r3, #0]
 800113a:	e008      	b.n	800114e <AUDIOFX_Chain_SwitchFX+0x5a>
	}
	else if(curr_fx == -1) {
 800113c:	4b0f      	ldr	r3, [pc, #60]	; (800117c <AUDIOFX_Chain_SwitchFX+0x88>)
 800113e:	f993 3000 	ldrsb.w	r3, [r3]
 8001142:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001146:	d102      	bne.n	800114e <AUDIOFX_Chain_SwitchFX+0x5a>
		curr_fx = AUDIOFX_MAX_CHAIN - 1;
 8001148:	4b0c      	ldr	r3, [pc, #48]	; (800117c <AUDIOFX_Chain_SwitchFX+0x88>)
 800114a:	2206      	movs	r2, #6
 800114c:	701a      	strb	r2, [r3, #0]
	}

	switch(curr_fx) {
 800114e:	4b0b      	ldr	r3, [pc, #44]	; (800117c <AUDIOFX_Chain_SwitchFX+0x88>)
 8001150:	f993 3000 	ldrsb.w	r3, [r3]
 8001154:	2b06      	cmp	r3, #6
 8001156:	f200 820d 	bhi.w	8001574 <AUDIOFX_Chain_SwitchFX+0x480>
 800115a:	a201      	add	r2, pc, #4	; (adr r2, 8001160 <AUDIOFX_Chain_SwitchFX+0x6c>)
 800115c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001160:	08001181 	.word	0x08001181
 8001164:	0800120f 	.word	0x0800120f
 8001168:	0800129d 	.word	0x0800129d
 800116c:	0800132b 	.word	0x0800132b
 8001170:	080013b9 	.word	0x080013b9
 8001174:	08001447 	.word	0x08001447
 8001178:	080014b3 	.word	0x080014b3
 800117c:	2002fd10 	.word	0x2002fd10
		case AUDIOFX_PKNG0:
				{
					TIM1->CNT = (uint32_t) ((((f_p0.f0 - 20.0f) / 20000.0f) + 1.0f)	* AUDIOFX_CNTR_SIZE);
 8001180:	4bdf      	ldr	r3, [pc, #892]	; (8001500 <AUDIOFX_Chain_SwitchFX+0x40c>)
 8001182:	edd3 7a00 	vldr	s15, [r3]
 8001186:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 800118a:	ee37 7ac7 	vsub.f32	s14, s15, s14
 800118e:	eddf 6add 	vldr	s13, [pc, #884]	; 8001504 <AUDIOFX_Chain_SwitchFX+0x410>
 8001192:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001196:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800119a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800119e:	ed9f 7ada 	vldr	s14, [pc, #872]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 80011a2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80011a6:	4bd9      	ldr	r3, [pc, #868]	; (800150c <AUDIOFX_Chain_SwitchFX+0x418>)
 80011a8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80011ac:	ee17 2a90 	vmov	r2, s15
 80011b0:	625a      	str	r2, [r3, #36]	; 0x24
					TIM3->CNT = (uint32_t) ((f_p0.BW - 1.0f)  / 500.0f 				* AUDIOFX_CNTR_SIZE);
 80011b2:	4bd3      	ldr	r3, [pc, #844]	; (8001500 <AUDIOFX_Chain_SwitchFX+0x40c>)
 80011b4:	edd3 7a02 	vldr	s15, [r3, #8]
 80011b8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80011bc:	ee37 7ac7 	vsub.f32	s14, s15, s14
 80011c0:	eddf 6ad3 	vldr	s13, [pc, #844]	; 8001510 <AUDIOFX_Chain_SwitchFX+0x41c>
 80011c4:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80011c8:	ed9f 7acf 	vldr	s14, [pc, #828]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 80011cc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80011d0:	4bd0      	ldr	r3, [pc, #832]	; (8001514 <AUDIOFX_Chain_SwitchFX+0x420>)
 80011d2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80011d6:	ee17 2a90 	vmov	r2, s15
 80011da:	625a      	str	r2, [r3, #36]	; 0x24
					TIM4->CNT = (uint32_t) ((((f_p0.G  - 0.01f) / 10.0f) + 1.0f) 	* AUDIOFX_CNTR_SIZE);
 80011dc:	4bc8      	ldr	r3, [pc, #800]	; (8001500 <AUDIOFX_Chain_SwitchFX+0x40c>)
 80011de:	edd3 7a01 	vldr	s15, [r3, #4]
 80011e2:	ed9f 7acd 	vldr	s14, [pc, #820]	; 8001518 <AUDIOFX_Chain_SwitchFX+0x424>
 80011e6:	ee37 7ac7 	vsub.f32	s14, s15, s14
 80011ea:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 80011ee:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80011f2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80011f6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80011fa:	ed9f 7ac3 	vldr	s14, [pc, #780]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 80011fe:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001202:	4bc6      	ldr	r3, [pc, #792]	; (800151c <AUDIOFX_Chain_SwitchFX+0x428>)
 8001204:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001208:	ee17 2a90 	vmov	r2, s15
 800120c:	625a      	str	r2, [r3, #36]	; 0x24
				}
		case AUDIOFX_PKNG1:
				{
					TIM1->CNT = (uint32_t) ((((f_p1.f0 - 20.0f) / 20000.0f) + 1.0f)	* AUDIOFX_CNTR_SIZE);
 800120e:	4bc4      	ldr	r3, [pc, #784]	; (8001520 <AUDIOFX_Chain_SwitchFX+0x42c>)
 8001210:	edd3 7a00 	vldr	s15, [r3]
 8001214:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 8001218:	ee37 7ac7 	vsub.f32	s14, s15, s14
 800121c:	eddf 6ab9 	vldr	s13, [pc, #740]	; 8001504 <AUDIOFX_Chain_SwitchFX+0x410>
 8001220:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001224:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001228:	ee77 7a87 	vadd.f32	s15, s15, s14
 800122c:	ed9f 7ab6 	vldr	s14, [pc, #728]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 8001230:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001234:	4bb5      	ldr	r3, [pc, #724]	; (800150c <AUDIOFX_Chain_SwitchFX+0x418>)
 8001236:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800123a:	ee17 2a90 	vmov	r2, s15
 800123e:	625a      	str	r2, [r3, #36]	; 0x24
					TIM3->CNT = (uint32_t) ((f_p1.BW - 1.0f)  / 500.0f 				* AUDIOFX_CNTR_SIZE);
 8001240:	4bb7      	ldr	r3, [pc, #732]	; (8001520 <AUDIOFX_Chain_SwitchFX+0x42c>)
 8001242:	edd3 7a02 	vldr	s15, [r3, #8]
 8001246:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800124a:	ee37 7ac7 	vsub.f32	s14, s15, s14
 800124e:	eddf 6ab0 	vldr	s13, [pc, #704]	; 8001510 <AUDIOFX_Chain_SwitchFX+0x41c>
 8001252:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001256:	ed9f 7aac 	vldr	s14, [pc, #688]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 800125a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800125e:	4bad      	ldr	r3, [pc, #692]	; (8001514 <AUDIOFX_Chain_SwitchFX+0x420>)
 8001260:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001264:	ee17 2a90 	vmov	r2, s15
 8001268:	625a      	str	r2, [r3, #36]	; 0x24
					TIM4->CNT = (uint32_t) ((((f_p1.G  - 0.01f) / 10.0f) + 1.0f) 	* AUDIOFX_CNTR_SIZE);
 800126a:	4bad      	ldr	r3, [pc, #692]	; (8001520 <AUDIOFX_Chain_SwitchFX+0x42c>)
 800126c:	edd3 7a01 	vldr	s15, [r3, #4]
 8001270:	ed9f 7aa9 	vldr	s14, [pc, #676]	; 8001518 <AUDIOFX_Chain_SwitchFX+0x424>
 8001274:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8001278:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 800127c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001280:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001284:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001288:	ed9f 7a9f 	vldr	s14, [pc, #636]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 800128c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001290:	4ba2      	ldr	r3, [pc, #648]	; (800151c <AUDIOFX_Chain_SwitchFX+0x428>)
 8001292:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001296:	ee17 2a90 	vmov	r2, s15
 800129a:	625a      	str	r2, [r3, #36]	; 0x24
				}
		case AUDIOFX_PKNG2:
				{
					TIM1->CNT = (uint32_t) ((((f_p2.f0 - 20.0f) / 20000.0f) + 1.0f)	* AUDIOFX_CNTR_SIZE);
 800129c:	4ba1      	ldr	r3, [pc, #644]	; (8001524 <AUDIOFX_Chain_SwitchFX+0x430>)
 800129e:	edd3 7a00 	vldr	s15, [r3]
 80012a2:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 80012a6:	ee37 7ac7 	vsub.f32	s14, s15, s14
 80012aa:	eddf 6a96 	vldr	s13, [pc, #600]	; 8001504 <AUDIOFX_Chain_SwitchFX+0x410>
 80012ae:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80012b2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80012b6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80012ba:	ed9f 7a93 	vldr	s14, [pc, #588]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 80012be:	ee67 7a87 	vmul.f32	s15, s15, s14
 80012c2:	4b92      	ldr	r3, [pc, #584]	; (800150c <AUDIOFX_Chain_SwitchFX+0x418>)
 80012c4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80012c8:	ee17 2a90 	vmov	r2, s15
 80012cc:	625a      	str	r2, [r3, #36]	; 0x24
					TIM3->CNT = (uint32_t) ((f_p2.BW - 1.0f)  / 500.0f 				* AUDIOFX_CNTR_SIZE);
 80012ce:	4b95      	ldr	r3, [pc, #596]	; (8001524 <AUDIOFX_Chain_SwitchFX+0x430>)
 80012d0:	edd3 7a02 	vldr	s15, [r3, #8]
 80012d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80012d8:	ee37 7ac7 	vsub.f32	s14, s15, s14
 80012dc:	eddf 6a8c 	vldr	s13, [pc, #560]	; 8001510 <AUDIOFX_Chain_SwitchFX+0x41c>
 80012e0:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80012e4:	ed9f 7a88 	vldr	s14, [pc, #544]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 80012e8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80012ec:	4b89      	ldr	r3, [pc, #548]	; (8001514 <AUDIOFX_Chain_SwitchFX+0x420>)
 80012ee:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80012f2:	ee17 2a90 	vmov	r2, s15
 80012f6:	625a      	str	r2, [r3, #36]	; 0x24
					TIM4->CNT = (uint32_t) ((((f_p2.G  - 0.01f) / 10.0f) + 1.0f) 	* AUDIOFX_CNTR_SIZE);
 80012f8:	4b8a      	ldr	r3, [pc, #552]	; (8001524 <AUDIOFX_Chain_SwitchFX+0x430>)
 80012fa:	edd3 7a01 	vldr	s15, [r3, #4]
 80012fe:	ed9f 7a86 	vldr	s14, [pc, #536]	; 8001518 <AUDIOFX_Chain_SwitchFX+0x424>
 8001302:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8001306:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 800130a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800130e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001312:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001316:	ed9f 7a7c 	vldr	s14, [pc, #496]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 800131a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800131e:	4b7f      	ldr	r3, [pc, #508]	; (800151c <AUDIOFX_Chain_SwitchFX+0x428>)
 8001320:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001324:	ee17 2a90 	vmov	r2, s15
 8001328:	625a      	str	r2, [r3, #36]	; 0x24
				}
		case AUDIOFX_PKNG3:
				{
					TIM1->CNT = (uint32_t) ((((f_p3.f0 - 20.0f) / 20000.0f) + 1.0f)	* AUDIOFX_CNTR_SIZE);
 800132a:	4b7f      	ldr	r3, [pc, #508]	; (8001528 <AUDIOFX_Chain_SwitchFX+0x434>)
 800132c:	edd3 7a00 	vldr	s15, [r3]
 8001330:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 8001334:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8001338:	eddf 6a72 	vldr	s13, [pc, #456]	; 8001504 <AUDIOFX_Chain_SwitchFX+0x410>
 800133c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001340:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001344:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001348:	ed9f 7a6f 	vldr	s14, [pc, #444]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 800134c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001350:	4b6e      	ldr	r3, [pc, #440]	; (800150c <AUDIOFX_Chain_SwitchFX+0x418>)
 8001352:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001356:	ee17 2a90 	vmov	r2, s15
 800135a:	625a      	str	r2, [r3, #36]	; 0x24
					TIM3->CNT = (uint32_t) ((f_p3.BW - 1.0f)  / 500.0f 				* AUDIOFX_CNTR_SIZE);
 800135c:	4b72      	ldr	r3, [pc, #456]	; (8001528 <AUDIOFX_Chain_SwitchFX+0x434>)
 800135e:	edd3 7a02 	vldr	s15, [r3, #8]
 8001362:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001366:	ee37 7ac7 	vsub.f32	s14, s15, s14
 800136a:	eddf 6a69 	vldr	s13, [pc, #420]	; 8001510 <AUDIOFX_Chain_SwitchFX+0x41c>
 800136e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001372:	ed9f 7a65 	vldr	s14, [pc, #404]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 8001376:	ee67 7a87 	vmul.f32	s15, s15, s14
 800137a:	4b66      	ldr	r3, [pc, #408]	; (8001514 <AUDIOFX_Chain_SwitchFX+0x420>)
 800137c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001380:	ee17 2a90 	vmov	r2, s15
 8001384:	625a      	str	r2, [r3, #36]	; 0x24
					TIM4->CNT = (uint32_t) ((((f_p3.G  - 0.01f) / 10.0f) + 1.0f) 	* AUDIOFX_CNTR_SIZE);
 8001386:	4b68      	ldr	r3, [pc, #416]	; (8001528 <AUDIOFX_Chain_SwitchFX+0x434>)
 8001388:	edd3 7a01 	vldr	s15, [r3, #4]
 800138c:	ed9f 7a62 	vldr	s14, [pc, #392]	; 8001518 <AUDIOFX_Chain_SwitchFX+0x424>
 8001390:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8001394:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8001398:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800139c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80013a0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80013a4:	ed9f 7a58 	vldr	s14, [pc, #352]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 80013a8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80013ac:	4b5b      	ldr	r3, [pc, #364]	; (800151c <AUDIOFX_Chain_SwitchFX+0x428>)
 80013ae:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80013b2:	ee17 2a90 	vmov	r2, s15
 80013b6:	625a      	str	r2, [r3, #36]	; 0x24
				}
		case AUDIOFX_PKNG4:
				{
					TIM1->CNT = (uint32_t) ((((f_p4.f0 - 20.0f) / 20000.0f) + 1.0f)	* AUDIOFX_CNTR_SIZE);
 80013b8:	4b5c      	ldr	r3, [pc, #368]	; (800152c <AUDIOFX_Chain_SwitchFX+0x438>)
 80013ba:	edd3 7a00 	vldr	s15, [r3]
 80013be:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 80013c2:	ee37 7ac7 	vsub.f32	s14, s15, s14
 80013c6:	eddf 6a4f 	vldr	s13, [pc, #316]	; 8001504 <AUDIOFX_Chain_SwitchFX+0x410>
 80013ca:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80013ce:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80013d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80013d6:	ed9f 7a4c 	vldr	s14, [pc, #304]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 80013da:	ee67 7a87 	vmul.f32	s15, s15, s14
 80013de:	4b4b      	ldr	r3, [pc, #300]	; (800150c <AUDIOFX_Chain_SwitchFX+0x418>)
 80013e0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80013e4:	ee17 2a90 	vmov	r2, s15
 80013e8:	625a      	str	r2, [r3, #36]	; 0x24
					TIM3->CNT = (uint32_t) ((f_p4.BW - 1.0f)  / 500.0f 				* AUDIOFX_CNTR_SIZE);
 80013ea:	4b50      	ldr	r3, [pc, #320]	; (800152c <AUDIOFX_Chain_SwitchFX+0x438>)
 80013ec:	edd3 7a02 	vldr	s15, [r3, #8]
 80013f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80013f4:	ee37 7ac7 	vsub.f32	s14, s15, s14
 80013f8:	eddf 6a45 	vldr	s13, [pc, #276]	; 8001510 <AUDIOFX_Chain_SwitchFX+0x41c>
 80013fc:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001400:	ed9f 7a41 	vldr	s14, [pc, #260]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 8001404:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001408:	4b42      	ldr	r3, [pc, #264]	; (8001514 <AUDIOFX_Chain_SwitchFX+0x420>)
 800140a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800140e:	ee17 2a90 	vmov	r2, s15
 8001412:	625a      	str	r2, [r3, #36]	; 0x24
					TIM4->CNT = (uint32_t) ((((f_p4.G  - 0.01f) / 10.0f) + 1.0f) 	* AUDIOFX_CNTR_SIZE);
 8001414:	4b45      	ldr	r3, [pc, #276]	; (800152c <AUDIOFX_Chain_SwitchFX+0x438>)
 8001416:	edd3 7a01 	vldr	s15, [r3, #4]
 800141a:	ed9f 7a3f 	vldr	s14, [pc, #252]	; 8001518 <AUDIOFX_Chain_SwitchFX+0x424>
 800141e:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8001422:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8001426:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800142a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800142e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001432:	ed9f 7a35 	vldr	s14, [pc, #212]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 8001436:	ee67 7a87 	vmul.f32	s15, s15, s14
 800143a:	4b38      	ldr	r3, [pc, #224]	; (800151c <AUDIOFX_Chain_SwitchFX+0x428>)
 800143c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001440:	ee17 2a90 	vmov	r2, s15
 8001444:	625a      	str	r2, [r3, #36]	; 0x24
				}
		case AUDIOFX_DELAY:
				{
					TIM1->CNT = (uint32_t) ((dl_p.mix + 1.0f) 							 * AUDIOFX_CNTR_SIZE);
 8001446:	4b3a      	ldr	r3, [pc, #232]	; (8001530 <AUDIOFX_Chain_SwitchFX+0x43c>)
 8001448:	edd3 7a00 	vldr	s15, [r3]
 800144c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001450:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001454:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 8001458:	ee67 7a87 	vmul.f32	s15, s15, s14
 800145c:	4b2b      	ldr	r3, [pc, #172]	; (800150c <AUDIOFX_Chain_SwitchFX+0x418>)
 800145e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001462:	ee17 2a90 	vmov	r2, s15
 8001466:	625a      	str	r2, [r3, #36]	; 0x24
					TIM3->CNT = (uint32_t) (dl_p.feedback 								 * AUDIOFX_CNTR_SIZE);
 8001468:	4b31      	ldr	r3, [pc, #196]	; (8001530 <AUDIOFX_Chain_SwitchFX+0x43c>)
 800146a:	edd3 7a01 	vldr	s15, [r3, #4]
 800146e:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 8001472:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001476:	4b27      	ldr	r3, [pc, #156]	; (8001514 <AUDIOFX_Chain_SwitchFX+0x420>)
 8001478:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800147c:	ee17 2a90 	vmov	r2, s15
 8001480:	625a      	str	r2, [r3, #36]	; 0x24
					TIM4->CNT = (uint32_t) (((dl_p.sample_len / DELAY_LINE_SIZE) + 1.0f) * AUDIOFX_CNTR_SIZE);
 8001482:	4b2b      	ldr	r3, [pc, #172]	; (8001530 <AUDIOFX_Chain_SwitchFX+0x43c>)
 8001484:	689b      	ldr	r3, [r3, #8]
 8001486:	4a2b      	ldr	r2, [pc, #172]	; (8001534 <AUDIOFX_Chain_SwitchFX+0x440>)
 8001488:	fba2 2303 	umull	r2, r3, r2, r3
 800148c:	0a9b      	lsrs	r3, r3, #10
 800148e:	ee07 3a90 	vmov	s15, r3
 8001492:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001496:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800149a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800149e:	ed9f 7a1a 	vldr	s14, [pc, #104]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 80014a2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80014a6:	4b1d      	ldr	r3, [pc, #116]	; (800151c <AUDIOFX_Chain_SwitchFX+0x428>)
 80014a8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80014ac:	ee17 2a90 	vmov	r2, s15
 80014b0:	625a      	str	r2, [r3, #36]	; 0x24
				}
		case AUDIOFX_DISTORTION:
				{
					TIM1->CNT = (uint32_t) (((ds_p.thrshld_gap / 10000000.0f) + 1.0f)	* AUDIOFX_CNTR_SIZE);
 80014b2:	4b21      	ldr	r3, [pc, #132]	; (8001538 <AUDIOFX_Chain_SwitchFX+0x444>)
 80014b4:	ed93 7a00 	vldr	s14, [r3]
 80014b8:	eddf 6a20 	vldr	s13, [pc, #128]	; 800153c <AUDIOFX_Chain_SwitchFX+0x448>
 80014bc:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80014c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80014c4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80014c8:	ed9f 7a0f 	vldr	s14, [pc, #60]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 80014cc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80014d0:	4b0e      	ldr	r3, [pc, #56]	; (800150c <AUDIOFX_Chain_SwitchFX+0x418>)
 80014d2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80014d6:	ee17 2a90 	vmov	r2, s15
 80014da:	625a      	str	r2, [r3, #36]	; 0x24
					TIM3->CNT = (uint32_t) ((ds_p.l_gain - 1.0f) 						* AUDIOFX_CNTR_SIZE);
 80014dc:	4b16      	ldr	r3, [pc, #88]	; (8001538 <AUDIOFX_Chain_SwitchFX+0x444>)
 80014de:	edd3 7a03 	vldr	s15, [r3, #12]
 80014e2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80014e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80014ea:	ed9f 7a07 	vldr	s14, [pc, #28]	; 8001508 <AUDIOFX_Chain_SwitchFX+0x414>
 80014ee:	ee67 7a87 	vmul.f32	s15, s15, s14
 80014f2:	4b08      	ldr	r3, [pc, #32]	; (8001514 <AUDIOFX_Chain_SwitchFX+0x420>)
 80014f4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80014f8:	ee17 2a90 	vmov	r2, s15
 80014fc:	e020      	b.n	8001540 <AUDIOFX_Chain_SwitchFX+0x44c>
 80014fe:	bf00      	nop
 8001500:	20000dac 	.word	0x20000dac
 8001504:	469c4000 	.word	0x469c4000
 8001508:	43c80000 	.word	0x43c80000
 800150c:	40010000 	.word	0x40010000
 8001510:	43fa0000 	.word	0x43fa0000
 8001514:	40000400 	.word	0x40000400
 8001518:	3c23d70a 	.word	0x3c23d70a
 800151c:	40000800 	.word	0x40000800
 8001520:	20000dec 	.word	0x20000dec
 8001524:	20000e2c 	.word	0x20000e2c
 8001528:	20000e6c 	.word	0x20000e6c
 800152c:	20000eac 	.word	0x20000eac
 8001530:	20000eec 	.word	0x20000eec
 8001534:	057619f1 	.word	0x057619f1
 8001538:	2002fcfc 	.word	0x2002fcfc
 800153c:	4b189680 	.word	0x4b189680
 8001540:	625a      	str	r2, [r3, #36]	; 0x24
					TIM4->CNT = (uint32_t) ((((ds_p.h_gain  - 0.01f) / 0.9f) + 1.0f)	* AUDIOFX_CNTR_SIZE);
 8001542:	4b0f      	ldr	r3, [pc, #60]	; (8001580 <AUDIOFX_Chain_SwitchFX+0x48c>)
 8001544:	edd3 7a02 	vldr	s15, [r3, #8]
 8001548:	ed9f 7a0e 	vldr	s14, [pc, #56]	; 8001584 <AUDIOFX_Chain_SwitchFX+0x490>
 800154c:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8001550:	eddf 6a0d 	vldr	s13, [pc, #52]	; 8001588 <AUDIOFX_Chain_SwitchFX+0x494>
 8001554:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001558:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800155c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001560:	ed9f 7a0a 	vldr	s14, [pc, #40]	; 800158c <AUDIOFX_Chain_SwitchFX+0x498>
 8001564:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001568:	4b09      	ldr	r3, [pc, #36]	; (8001590 <AUDIOFX_Chain_SwitchFX+0x49c>)
 800156a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800156e:	ee17 2a90 	vmov	r2, s15
 8001572:	625a      	str	r2, [r3, #36]	; 0x24
				}
	}
}
 8001574:	bf00      	nop
 8001576:	370c      	adds	r7, #12
 8001578:	46bd      	mov	sp, r7
 800157a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800157e:	4770      	bx	lr
 8001580:	2002fcfc 	.word	0x2002fcfc
 8001584:	3c23d70a 	.word	0x3c23d70a
 8001588:	3f666666 	.word	0x3f666666
 800158c:	43c80000 	.word	0x43c80000
 8001590:	40000800 	.word	0x40000800

08001594 <AUDIOFX_UserParams_SetParams>:

void AUDIOFX_UserParams_SetParams(AUDIOFX_Type type, float t0, float t1, float t2) {
 8001594:	b580      	push	{r7, lr}
 8001596:	b09c      	sub	sp, #112	; 0x70
 8001598:	af00      	add	r7, sp, #0
 800159a:	4603      	mov	r3, r0
 800159c:	ed87 0a02 	vstr	s0, [r7, #8]
 80015a0:	edc7 0a01 	vstr	s1, [r7, #4]
 80015a4:	ed87 1a00 	vstr	s2, [r7]
 80015a8:	73fb      	strb	r3, [r7, #15]
	float params[3];

	params[0] = (1.0f - (t0 / (1.0f * AUDIOFX_CNTR_SIZE)));
 80015aa:	ed97 7a02 	vldr	s14, [r7, #8]
 80015ae:	eddf 6aa4 	vldr	s13, [pc, #656]	; 8001840 <AUDIOFX_UserParams_SetParams+0x2ac>
 80015b2:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80015b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80015ba:	ee77 7a67 	vsub.f32	s15, s14, s15
 80015be:	edc7 7a04 	vstr	s15, [r7, #16]
	params[1] = (t1 / (1.0f * AUDIOFX_CNTR_SIZE));
 80015c2:	ed97 7a01 	vldr	s14, [r7, #4]
 80015c6:	eddf 6a9e 	vldr	s13, [pc, #632]	; 8001840 <AUDIOFX_UserParams_SetParams+0x2ac>
 80015ca:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80015ce:	edc7 7a05 	vstr	s15, [r7, #20]
	params[2] = (1.0f - (t0 / (1.0f * AUDIOFX_CNTR_SIZE)));
 80015d2:	ed97 7a02 	vldr	s14, [r7, #8]
 80015d6:	eddf 6a9a 	vldr	s13, [pc, #616]	; 8001840 <AUDIOFX_UserParams_SetParams+0x2ac>
 80015da:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80015de:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80015e2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80015e6:	edc7 7a06 	vstr	s15, [r7, #24]

	switch (type)
 80015ea:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80015ee:	2b06      	cmp	r3, #6
 80015f0:	f200 8122 	bhi.w	8001838 <AUDIOFX_UserParams_SetParams+0x2a4>
 80015f4:	a201      	add	r2, pc, #4	; (adr r2, 80015fc <AUDIOFX_UserParams_SetParams+0x68>)
 80015f6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80015fa:	bf00      	nop
 80015fc:	08001695 	.word	0x08001695
 8001600:	080016e9 	.word	0x080016e9
 8001604:	0800173d 	.word	0x0800173d
 8001608:	08001791 	.word	0x08001791
 800160c:	080017e5 	.word	0x080017e5
 8001610:	08001619 	.word	0x08001619
 8001614:	08001649 	.word	0x08001649
	{
		case AUDIOFX_DELAY:
		{
			float mix			= params[0] * 1.0;
 8001618:	693b      	ldr	r3, [r7, #16]
 800161a:	663b      	str	r3, [r7, #96]	; 0x60
			float feedback		= params[1] * 1.0;
 800161c:	697b      	ldr	r3, [r7, #20]
 800161e:	65fb      	str	r3, [r7, #92]	; 0x5c
			uint32_t sample_len	= (uint32_t) (params[3] * DELAY_LINE_SIZE);
 8001620:	edd7 7a07 	vldr	s15, [r7, #28]
 8001624:	ed9f 7a87 	vldr	s14, [pc, #540]	; 8001844 <AUDIOFX_UserParams_SetParams+0x2b0>
 8001628:	ee67 7a87 	vmul.f32	s15, s15, s14
 800162c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001630:	ee17 3a90 	vmov	r3, s15
 8001634:	65bb      	str	r3, [r7, #88]	; 0x58

			DELAY_SetParams(&dl_p, mix, feedback, sample_len);
 8001636:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8001638:	edd7 0a17 	vldr	s1, [r7, #92]	; 0x5c
 800163c:	ed97 0a18 	vldr	s0, [r7, #96]	; 0x60
 8001640:	4881      	ldr	r0, [pc, #516]	; (8001848 <AUDIOFX_UserParams_SetParams+0x2b4>)
 8001642:	f7ff fbd1 	bl	8000de8 <DELAY_SetParams>
			break;
 8001646:	e0f7      	b.n	8001838 <AUDIOFX_UserParams_SetParams+0x2a4>
		}
		case AUDIOFX_DISTORTION:
		{
			float gap 		= params[0] * 10000000.0f;
 8001648:	edd7 7a04 	vldr	s15, [r7, #16]
 800164c:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 800184c <AUDIOFX_UserParams_SetParams+0x2b8>
 8001650:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001654:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
			float l_gain 	= params[1] + 1.0;
 8001658:	edd7 7a05 	vldr	s15, [r7, #20]
 800165c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001660:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001664:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68
			float h_gain 	= params[2] * 0.9f + 0.01f;
 8001668:	edd7 7a06 	vldr	s15, [r7, #24]
 800166c:	ed9f 7a78 	vldr	s14, [pc, #480]	; 8001850 <AUDIOFX_UserParams_SetParams+0x2bc>
 8001670:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001674:	ed9f 7a77 	vldr	s14, [pc, #476]	; 8001854 <AUDIOFX_UserParams_SetParams+0x2c0>
 8001678:	ee77 7a87 	vadd.f32	s15, s15, s14
 800167c:	edc7 7a19 	vstr	s15, [r7, #100]	; 0x64

			DISTORT_SetParams(&ds_p, gap, l_gain, h_gain);
 8001680:	ed97 1a19 	vldr	s2, [r7, #100]	; 0x64
 8001684:	edd7 0a1a 	vldr	s1, [r7, #104]	; 0x68
 8001688:	ed97 0a1b 	vldr	s0, [r7, #108]	; 0x6c
 800168c:	4872      	ldr	r0, [pc, #456]	; (8001858 <AUDIOFX_UserParams_SetParams+0x2c4>)
 800168e:	f7ff fbef 	bl	8000e70 <DISTORT_SetParams>
			break;
 8001692:	e0d1      	b.n	8001838 <AUDIOFX_UserParams_SetParams+0x2a4>
		}
		case AUDIOFX_PKNG0:
		{

			float f0 = params[0] * 12000.0f + 20.0f;
 8001694:	edd7 7a04 	vldr	s15, [r7, #16]
 8001698:	ed9f 7a70 	vldr	s14, [pc, #448]	; 800185c <AUDIOFX_UserParams_SetParams+0x2c8>
 800169c:	ee67 7a87 	vmul.f32	s15, s15, s14
 80016a0:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 80016a4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80016a8:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
			float BW = params[1] * 500.0f + 1.0f;
 80016ac:	edd7 7a05 	vldr	s15, [r7, #20]
 80016b0:	ed9f 7a6b 	vldr	s14, [pc, #428]	; 8001860 <AUDIOFX_UserParams_SetParams+0x2cc>
 80016b4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80016b8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80016bc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80016c0:	edc7 7a08 	vstr	s15, [r7, #32]
			float G  = params[2] * 10.0;
 80016c4:	edd7 7a06 	vldr	s15, [r7, #24]
 80016c8:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80016cc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80016d0:	edc7 7a07 	vstr	s15, [r7, #28]

			FILTERS_SetParams(&f_p0, f0, BW, G);
 80016d4:	ed97 1a07 	vldr	s2, [r7, #28]
 80016d8:	edd7 0a08 	vldr	s1, [r7, #32]
 80016dc:	ed97 0a09 	vldr	s0, [r7, #36]	; 0x24
 80016e0:	4860      	ldr	r0, [pc, #384]	; (8001864 <AUDIOFX_UserParams_SetParams+0x2d0>)
 80016e2:	f7ff fc01 	bl	8000ee8 <FILTERS_SetParams>
			break;
 80016e6:	e0a7      	b.n	8001838 <AUDIOFX_UserParams_SetParams+0x2a4>
		}
		case AUDIOFX_PKNG1:
		{

			float f0 = params[0] * 12000.0f + 20.0f;
 80016e8:	edd7 7a04 	vldr	s15, [r7, #16]
 80016ec:	ed9f 7a5b 	vldr	s14, [pc, #364]	; 800185c <AUDIOFX_UserParams_SetParams+0x2c8>
 80016f0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80016f4:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 80016f8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80016fc:	edc7 7a0c 	vstr	s15, [r7, #48]	; 0x30
			float BW = params[1] * 500.0f + 1.0f;
 8001700:	edd7 7a05 	vldr	s15, [r7, #20]
 8001704:	ed9f 7a56 	vldr	s14, [pc, #344]	; 8001860 <AUDIOFX_UserParams_SetParams+0x2cc>
 8001708:	ee67 7a87 	vmul.f32	s15, s15, s14
 800170c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001710:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001714:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
			float G  = params[2] * 10.0;
 8001718:	edd7 7a06 	vldr	s15, [r7, #24]
 800171c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8001720:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001724:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28

			FILTERS_SetParams(&f_p1, f0, BW, G);
 8001728:	ed97 1a0a 	vldr	s2, [r7, #40]	; 0x28
 800172c:	edd7 0a0b 	vldr	s1, [r7, #44]	; 0x2c
 8001730:	ed97 0a0c 	vldr	s0, [r7, #48]	; 0x30
 8001734:	484c      	ldr	r0, [pc, #304]	; (8001868 <AUDIOFX_UserParams_SetParams+0x2d4>)
 8001736:	f7ff fbd7 	bl	8000ee8 <FILTERS_SetParams>
			break;
 800173a:	e07d      	b.n	8001838 <AUDIOFX_UserParams_SetParams+0x2a4>
		}
		case AUDIOFX_PKNG2:
		{

			float f0 = params[0] * 12000.0f + 20.0f;
 800173c:	edd7 7a04 	vldr	s15, [r7, #16]
 8001740:	ed9f 7a46 	vldr	s14, [pc, #280]	; 800185c <AUDIOFX_UserParams_SetParams+0x2c8>
 8001744:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001748:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 800174c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001750:	edc7 7a0f 	vstr	s15, [r7, #60]	; 0x3c
			float BW = params[1] * 500.0f + 1.0f;
 8001754:	edd7 7a05 	vldr	s15, [r7, #20]
 8001758:	ed9f 7a41 	vldr	s14, [pc, #260]	; 8001860 <AUDIOFX_UserParams_SetParams+0x2cc>
 800175c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001760:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001764:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001768:	edc7 7a0e 	vstr	s15, [r7, #56]	; 0x38
			float G  = params[2] * 10.0;
 800176c:	edd7 7a06 	vldr	s15, [r7, #24]
 8001770:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8001774:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001778:	edc7 7a0d 	vstr	s15, [r7, #52]	; 0x34

			FILTERS_SetParams(&f_p2, f0, BW, G);
 800177c:	ed97 1a0d 	vldr	s2, [r7, #52]	; 0x34
 8001780:	edd7 0a0e 	vldr	s1, [r7, #56]	; 0x38
 8001784:	ed97 0a0f 	vldr	s0, [r7, #60]	; 0x3c
 8001788:	4838      	ldr	r0, [pc, #224]	; (800186c <AUDIOFX_UserParams_SetParams+0x2d8>)
 800178a:	f7ff fbad 	bl	8000ee8 <FILTERS_SetParams>
			break;
 800178e:	e053      	b.n	8001838 <AUDIOFX_UserParams_SetParams+0x2a4>
		}
		case AUDIOFX_PKNG3:
		{

			float f0 = params[0] * 12000.0f + 20.0f;
 8001790:	edd7 7a04 	vldr	s15, [r7, #16]
 8001794:	ed9f 7a31 	vldr	s14, [pc, #196]	; 800185c <AUDIOFX_UserParams_SetParams+0x2c8>
 8001798:	ee67 7a87 	vmul.f32	s15, s15, s14
 800179c:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 80017a0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80017a4:	edc7 7a12 	vstr	s15, [r7, #72]	; 0x48
			float BW = params[1] * 500.0f + 1.0f;
 80017a8:	edd7 7a05 	vldr	s15, [r7, #20]
 80017ac:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 8001860 <AUDIOFX_UserParams_SetParams+0x2cc>
 80017b0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80017b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80017b8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80017bc:	edc7 7a11 	vstr	s15, [r7, #68]	; 0x44
			float G  = params[2] * 10.0;
 80017c0:	edd7 7a06 	vldr	s15, [r7, #24]
 80017c4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80017c8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80017cc:	edc7 7a10 	vstr	s15, [r7, #64]	; 0x40

			FILTERS_SetParams(&f_p3, f0, BW, G);
 80017d0:	ed97 1a10 	vldr	s2, [r7, #64]	; 0x40
 80017d4:	edd7 0a11 	vldr	s1, [r7, #68]	; 0x44
 80017d8:	ed97 0a12 	vldr	s0, [r7, #72]	; 0x48
 80017dc:	4824      	ldr	r0, [pc, #144]	; (8001870 <AUDIOFX_UserParams_SetParams+0x2dc>)
 80017de:	f7ff fb83 	bl	8000ee8 <FILTERS_SetParams>
			break;
 80017e2:	e029      	b.n	8001838 <AUDIOFX_UserParams_SetParams+0x2a4>
		}
		case AUDIOFX_PKNG4:
		{

			float f0 = params[0] * 12000.0f + 20.0f;
 80017e4:	edd7 7a04 	vldr	s15, [r7, #16]
 80017e8:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 800185c <AUDIOFX_UserParams_SetParams+0x2c8>
 80017ec:	ee67 7a87 	vmul.f32	s15, s15, s14
 80017f0:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 80017f4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80017f8:	edc7 7a15 	vstr	s15, [r7, #84]	; 0x54
			float BW = params[1] * 500.0f + 1.0f;
 80017fc:	edd7 7a05 	vldr	s15, [r7, #20]
 8001800:	ed9f 7a17 	vldr	s14, [pc, #92]	; 8001860 <AUDIOFX_UserParams_SetParams+0x2cc>
 8001804:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001808:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800180c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001810:	edc7 7a14 	vstr	s15, [r7, #80]	; 0x50
			float G  = params[2] * 10.0;
 8001814:	edd7 7a06 	vldr	s15, [r7, #24]
 8001818:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800181c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001820:	edc7 7a13 	vstr	s15, [r7, #76]	; 0x4c

			FILTERS_SetParams(&f_p4, f0, BW, G);
 8001824:	ed97 1a13 	vldr	s2, [r7, #76]	; 0x4c
 8001828:	edd7 0a14 	vldr	s1, [r7, #80]	; 0x50
 800182c:	ed97 0a15 	vldr	s0, [r7, #84]	; 0x54
 8001830:	4810      	ldr	r0, [pc, #64]	; (8001874 <AUDIOFX_UserParams_SetParams+0x2e0>)
 8001832:	f7ff fb59 	bl	8000ee8 <FILTERS_SetParams>
			break;
 8001836:	bf00      	nop
		}
	}
}
 8001838:	bf00      	nop
 800183a:	3770      	adds	r7, #112	; 0x70
 800183c:	46bd      	mov	sp, r7
 800183e:	bd80      	pop	{r7, pc}
 8001840:	43c80000 	.word	0x43c80000
 8001844:	473b8000 	.word	0x473b8000
 8001848:	20000eec 	.word	0x20000eec
 800184c:	4b189680 	.word	0x4b189680
 8001850:	3f666666 	.word	0x3f666666
 8001854:	3c23d70a 	.word	0x3c23d70a
 8001858:	2002fcfc 	.word	0x2002fcfc
 800185c:	463b8000 	.word	0x463b8000
 8001860:	43fa0000 	.word	0x43fa0000
 8001864:	20000dac 	.word	0x20000dac
 8001868:	20000dec 	.word	0x20000dec
 800186c:	20000e2c 	.word	0x20000e2c
 8001870:	20000e6c 	.word	0x20000e6c
 8001874:	20000eac 	.word	0x20000eac

08001878 <AUDIOFX_Apply_FX_Chain>:

void AUDIOFX_Apply_FX_Chain(void) {
 8001878:	b480      	push	{r7}
 800187a:	b085      	sub	sp, #20
 800187c:	af00      	add	r7, sp, #0
	float right_in;

	int16_t left_out;
	int16_t right_out;

	for(uint8_t n = 0; n < (AUDIOFX_BUFF_SIZE/2) - 1; n += 2) {
 800187e:	2300      	movs	r3, #0
 8001880:	73fb      	strb	r3, [r7, #15]
 8001882:	e04a      	b.n	800191a <AUDIOFX_Apply_FX_Chain+0xa2>
		left_in		= INT16_TO_FLOAT * ((float) p_in_buff[n]);
 8001884:	4b2a      	ldr	r3, [pc, #168]	; (8001930 <AUDIOFX_Apply_FX_Chain+0xb8>)
 8001886:	681a      	ldr	r2, [r3, #0]
 8001888:	7bfb      	ldrb	r3, [r7, #15]
 800188a:	005b      	lsls	r3, r3, #1
 800188c:	4413      	add	r3, r2
 800188e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001892:	ee07 3a90 	vmov	s15, r3
 8001896:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800189a:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8001934 <AUDIOFX_Apply_FX_Chain+0xbc>
 800189e:	ee67 7a87 	vmul.f32	s15, s15, s14
 80018a2:	edc7 7a02 	vstr	s15, [r7, #8]
		right_in	= INT16_TO_FLOAT * ((float) p_in_buff[n + 1]);
 80018a6:	4b22      	ldr	r3, [pc, #136]	; (8001930 <AUDIOFX_Apply_FX_Chain+0xb8>)
 80018a8:	681a      	ldr	r2, [r3, #0]
 80018aa:	7bfb      	ldrb	r3, [r7, #15]
 80018ac:	3301      	adds	r3, #1
 80018ae:	005b      	lsls	r3, r3, #1
 80018b0:	4413      	add	r3, r2
 80018b2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80018b6:	ee07 3a90 	vmov	s15, r3
 80018ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80018be:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 8001934 <AUDIOFX_Apply_FX_Chain+0xbc>
 80018c2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80018c6:	edc7 7a01 	vstr	s15, [r7, #4]
//		right_in 	= DISTORT_Apply(right_in, &ds_p);

//		left_in		= DELAY_Apply(left_in, &dl_p);
//		right_in 	= DELAY_Apply(right_in, &dl_p);

		left_out	= (int16_t) (FLOAT_TO_INT16 * left_in);
 80018ca:	edd7 7a02 	vldr	s15, [r7, #8]
 80018ce:	ed9f 7a1a 	vldr	s14, [pc, #104]	; 8001938 <AUDIOFX_Apply_FX_Chain+0xc0>
 80018d2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80018d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80018da:	ee17 3a90 	vmov	r3, s15
 80018de:	807b      	strh	r3, [r7, #2]
		right_out 	= (int16_t) (FLOAT_TO_INT16 * right_in);
 80018e0:	edd7 7a01 	vldr	s15, [r7, #4]
 80018e4:	ed9f 7a14 	vldr	s14, [pc, #80]	; 8001938 <AUDIOFX_Apply_FX_Chain+0xc0>
 80018e8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80018ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80018f0:	ee17 3a90 	vmov	r3, s15
 80018f4:	803b      	strh	r3, [r7, #0]

		p_out_buff[n] 		= left_out;
 80018f6:	4b11      	ldr	r3, [pc, #68]	; (800193c <AUDIOFX_Apply_FX_Chain+0xc4>)
 80018f8:	681a      	ldr	r2, [r3, #0]
 80018fa:	7bfb      	ldrb	r3, [r7, #15]
 80018fc:	005b      	lsls	r3, r3, #1
 80018fe:	4413      	add	r3, r2
 8001900:	887a      	ldrh	r2, [r7, #2]
 8001902:	801a      	strh	r2, [r3, #0]
		p_out_buff[n + 1] 	= right_out;
 8001904:	4b0d      	ldr	r3, [pc, #52]	; (800193c <AUDIOFX_Apply_FX_Chain+0xc4>)
 8001906:	681a      	ldr	r2, [r3, #0]
 8001908:	7bfb      	ldrb	r3, [r7, #15]
 800190a:	3301      	adds	r3, #1
 800190c:	005b      	lsls	r3, r3, #1
 800190e:	4413      	add	r3, r2
 8001910:	883a      	ldrh	r2, [r7, #0]
 8001912:	801a      	strh	r2, [r3, #0]
	for(uint8_t n = 0; n < (AUDIOFX_BUFF_SIZE/2) - 1; n += 2) {
 8001914:	7bfb      	ldrb	r3, [r7, #15]
 8001916:	3302      	adds	r3, #2
 8001918:	73fb      	strb	r3, [r7, #15]
 800191a:	7bfb      	ldrb	r3, [r7, #15]
 800191c:	2bee      	cmp	r3, #238	; 0xee
 800191e:	d9b1      	bls.n	8001884 <AUDIOFX_Apply_FX_Chain+0xc>
	}
}
 8001920:	bf00      	nop
 8001922:	bf00      	nop
 8001924:	3714      	adds	r7, #20
 8001926:	46bd      	mov	sp, r7
 8001928:	f85d 7b04 	ldr.w	r7, [sp], #4
 800192c:	4770      	bx	lr
 800192e:	bf00      	nop
 8001930:	20000d9c 	.word	0x20000d9c
 8001934:	38000000 	.word	0x38000000
 8001938:	47000000 	.word	0x47000000
 800193c:	20000da0 	.word	0x20000da0

08001940 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8001940:	b480      	push	{r7}
 8001942:	b083      	sub	sp, #12
 8001944:	af00      	add	r7, sp, #0
 8001946:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8001948:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800194c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8001950:	f003 0301 	and.w	r3, r3, #1
 8001954:	2b00      	cmp	r3, #0
 8001956:	d013      	beq.n	8001980 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8001958:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800195c:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8001960:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8001964:	2b00      	cmp	r3, #0
 8001966:	d00b      	beq.n	8001980 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8001968:	e000      	b.n	800196c <ITM_SendChar+0x2c>
    {
      __NOP();
 800196a:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 800196c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8001970:	681b      	ldr	r3, [r3, #0]
 8001972:	2b00      	cmp	r3, #0
 8001974:	d0f9      	beq.n	800196a <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 8001976:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800197a:	687a      	ldr	r2, [r7, #4]
 800197c:	b2d2      	uxtb	r2, r2
 800197e:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8001980:	687b      	ldr	r3, [r7, #4]
}
 8001982:	4618      	mov	r0, r3
 8001984:	370c      	adds	r7, #12
 8001986:	46bd      	mov	sp, r7
 8001988:	f85d 7b04 	ldr.w	r7, [sp], #4
 800198c:	4770      	bx	lr

0800198e <_write>:
static void MX_I2C2_Init(void);
static void MX_SAI1_Init(void);
/* USER CODE BEGIN PFP */

int _write(int file, char *ptr, int len)
{
 800198e:	b580      	push	{r7, lr}
 8001990:	b086      	sub	sp, #24
 8001992:	af00      	add	r7, sp, #0
 8001994:	60f8      	str	r0, [r7, #12]
 8001996:	60b9      	str	r1, [r7, #8]
 8001998:	607a      	str	r2, [r7, #4]
  /* Implement your write code here. This is
     used by puts and printf for example */
  int i=0;
 800199a:	2300      	movs	r3, #0
 800199c:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 800199e:	2300      	movs	r3, #0
 80019a0:	617b      	str	r3, [r7, #20]
 80019a2:	e009      	b.n	80019b8 <_write+0x2a>
    ITM_SendChar((*ptr++));
 80019a4:	68bb      	ldr	r3, [r7, #8]
 80019a6:	1c5a      	adds	r2, r3, #1
 80019a8:	60ba      	str	r2, [r7, #8]
 80019aa:	781b      	ldrb	r3, [r3, #0]
 80019ac:	4618      	mov	r0, r3
 80019ae:	f7ff ffc7 	bl	8001940 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 80019b2:	697b      	ldr	r3, [r7, #20]
 80019b4:	3301      	adds	r3, #1
 80019b6:	617b      	str	r3, [r7, #20]
 80019b8:	697a      	ldr	r2, [r7, #20]
 80019ba:	687b      	ldr	r3, [r7, #4]
 80019bc:	429a      	cmp	r2, r3
 80019be:	dbf1      	blt.n	80019a4 <_write+0x16>
  return len;
 80019c0:	687b      	ldr	r3, [r7, #4]
}
 80019c2:	4618      	mov	r0, r3
 80019c4:	3718      	adds	r7, #24
 80019c6:	46bd      	mov	sp, r7
 80019c8:	bd80      	pop	{r7, pc}
	...

080019cc <HAL_SAI_RxHalfCpltCallback>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_SAI_RxHalfCpltCallback(SAI_HandleTypeDef *hsai) {
 80019cc:	b580      	push	{r7, lr}
 80019ce:	b082      	sub	sp, #8
 80019d0:	af00      	add	r7, sp, #0
 80019d2:	6078      	str	r0, [r7, #4]
	if(hsai->Instance == SAI1_Block_A){
 80019d4:	687b      	ldr	r3, [r7, #4]
 80019d6:	681b      	ldr	r3, [r3, #0]
 80019d8:	4a07      	ldr	r2, [pc, #28]	; (80019f8 <HAL_SAI_RxHalfCpltCallback+0x2c>)
 80019da:	4293      	cmp	r3, r2
 80019dc:	d107      	bne.n	80019ee <HAL_SAI_RxHalfCpltCallback+0x22>
		p_in_buff	= &audio_in[0];
 80019de:	4b07      	ldr	r3, [pc, #28]	; (80019fc <HAL_SAI_RxHalfCpltCallback+0x30>)
 80019e0:	4a07      	ldr	r2, [pc, #28]	; (8001a00 <HAL_SAI_RxHalfCpltCallback+0x34>)
 80019e2:	601a      	str	r2, [r3, #0]
		p_out_buff 	= &audio_out[0];
 80019e4:	4b07      	ldr	r3, [pc, #28]	; (8001a04 <HAL_SAI_RxHalfCpltCallback+0x38>)
 80019e6:	4a08      	ldr	r2, [pc, #32]	; (8001a08 <HAL_SAI_RxHalfCpltCallback+0x3c>)
 80019e8:	601a      	str	r2, [r3, #0]

		AUDIOFX_Apply_FX_Chain();
 80019ea:	f7ff ff45 	bl	8001878 <AUDIOFX_Apply_FX_Chain>
	}
}
 80019ee:	bf00      	nop
 80019f0:	3708      	adds	r7, #8
 80019f2:	46bd      	mov	sp, r7
 80019f4:	bd80      	pop	{r7, pc}
 80019f6:	bf00      	nop
 80019f8:	40015804 	.word	0x40015804
 80019fc:	20000d9c 	.word	0x20000d9c
 8001a00:	2000061c 	.word	0x2000061c
 8001a04:	20000da0 	.word	0x20000da0
 8001a08:	200009dc 	.word	0x200009dc

08001a0c <HAL_SAI_RxCpltCallback>:

void HAL_SAI_RxCpltCallback(SAI_HandleTypeDef *hsai) {
 8001a0c:	b580      	push	{r7, lr}
 8001a0e:	b082      	sub	sp, #8
 8001a10:	af00      	add	r7, sp, #0
 8001a12:	6078      	str	r0, [r7, #4]
	if(hsai->Instance == SAI1_Block_A){
 8001a14:	687b      	ldr	r3, [r7, #4]
 8001a16:	681b      	ldr	r3, [r3, #0]
 8001a18:	4a07      	ldr	r2, [pc, #28]	; (8001a38 <HAL_SAI_RxCpltCallback+0x2c>)
 8001a1a:	4293      	cmp	r3, r2
 8001a1c:	d107      	bne.n	8001a2e <HAL_SAI_RxCpltCallback+0x22>
		p_in_buff	= &audio_in[AUDIOFX_BUFF_SIZE/2];
 8001a1e:	4b07      	ldr	r3, [pc, #28]	; (8001a3c <HAL_SAI_RxCpltCallback+0x30>)
 8001a20:	4a07      	ldr	r2, [pc, #28]	; (8001a40 <HAL_SAI_RxCpltCallback+0x34>)
 8001a22:	601a      	str	r2, [r3, #0]
		p_out_buff 	= &audio_out[AUDIOFX_BUFF_SIZE/2];
 8001a24:	4b07      	ldr	r3, [pc, #28]	; (8001a44 <HAL_SAI_RxCpltCallback+0x38>)
 8001a26:	4a08      	ldr	r2, [pc, #32]	; (8001a48 <HAL_SAI_RxCpltCallback+0x3c>)
 8001a28:	601a      	str	r2, [r3, #0]

		AUDIOFX_Apply_FX_Chain();
 8001a2a:	f7ff ff25 	bl	8001878 <AUDIOFX_Apply_FX_Chain>
	}
}
 8001a2e:	bf00      	nop
 8001a30:	3708      	adds	r7, #8
 8001a32:	46bd      	mov	sp, r7
 8001a34:	bd80      	pop	{r7, pc}
 8001a36:	bf00      	nop
 8001a38:	40015804 	.word	0x40015804
 8001a3c:	20000d9c 	.word	0x20000d9c
 8001a40:	200007fc 	.word	0x200007fc
 8001a44:	20000da0 	.word	0x20000da0
 8001a48:	20000bbc 	.word	0x20000bbc

08001a4c <Param_Change>:

void Param_Change(){
 8001a4c:	b580      	push	{r7, lr}
 8001a4e:	af00      	add	r7, sp, #0
	if(TIM1->CNT != prev_count[0] || TIM3->CNT != prev_count[1] || TIM4->CNT != prev_count[2]) {
 8001a50:	4b20      	ldr	r3, [pc, #128]	; (8001ad4 <Param_Change+0x88>)
 8001a52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a54:	4a20      	ldr	r2, [pc, #128]	; (8001ad8 <Param_Change+0x8c>)
 8001a56:	8812      	ldrh	r2, [r2, #0]
 8001a58:	4293      	cmp	r3, r2
 8001a5a:	d10b      	bne.n	8001a74 <Param_Change+0x28>
 8001a5c:	4b1f      	ldr	r3, [pc, #124]	; (8001adc <Param_Change+0x90>)
 8001a5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a60:	4a1d      	ldr	r2, [pc, #116]	; (8001ad8 <Param_Change+0x8c>)
 8001a62:	8852      	ldrh	r2, [r2, #2]
 8001a64:	4293      	cmp	r3, r2
 8001a66:	d105      	bne.n	8001a74 <Param_Change+0x28>
 8001a68:	4b1d      	ldr	r3, [pc, #116]	; (8001ae0 <Param_Change+0x94>)
 8001a6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a6c:	4a1a      	ldr	r2, [pc, #104]	; (8001ad8 <Param_Change+0x8c>)
 8001a6e:	8892      	ldrh	r2, [r2, #4]
 8001a70:	4293      	cmp	r3, r2
 8001a72:	d02c      	beq.n	8001ace <Param_Change+0x82>

	  // call the calc function to get new coefficients, update the current parameter values
	  AUDIOFX_UserParams_SetParams(curr_fx, (float) TIM1->CNT, (float) TIM3->CNT, (float) TIM4->CNT);
 8001a74:	4b1b      	ldr	r3, [pc, #108]	; (8001ae4 <Param_Change+0x98>)
 8001a76:	f993 3000 	ldrsb.w	r3, [r3]
 8001a7a:	4a16      	ldr	r2, [pc, #88]	; (8001ad4 <Param_Change+0x88>)
 8001a7c:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8001a7e:	ee07 2a90 	vmov	s15, r2
 8001a82:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001a86:	4a15      	ldr	r2, [pc, #84]	; (8001adc <Param_Change+0x90>)
 8001a88:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8001a8a:	ee07 2a10 	vmov	s14, r2
 8001a8e:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8001a92:	4a13      	ldr	r2, [pc, #76]	; (8001ae0 <Param_Change+0x94>)
 8001a94:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8001a96:	ee06 2a90 	vmov	s13, r2
 8001a9a:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8001a9e:	eeb0 1a66 	vmov.f32	s2, s13
 8001aa2:	eef0 0a47 	vmov.f32	s1, s14
 8001aa6:	eeb0 0a67 	vmov.f32	s0, s15
 8001aaa:	4618      	mov	r0, r3
 8001aac:	f7ff fd72 	bl	8001594 <AUDIOFX_UserParams_SetParams>

	  // save previous counter values
	  prev_count[0] = TIM1->CNT;
 8001ab0:	4b08      	ldr	r3, [pc, #32]	; (8001ad4 <Param_Change+0x88>)
 8001ab2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ab4:	b29a      	uxth	r2, r3
 8001ab6:	4b08      	ldr	r3, [pc, #32]	; (8001ad8 <Param_Change+0x8c>)
 8001ab8:	801a      	strh	r2, [r3, #0]
	  prev_count[1] = TIM3->CNT;
 8001aba:	4b08      	ldr	r3, [pc, #32]	; (8001adc <Param_Change+0x90>)
 8001abc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001abe:	b29a      	uxth	r2, r3
 8001ac0:	4b05      	ldr	r3, [pc, #20]	; (8001ad8 <Param_Change+0x8c>)
 8001ac2:	805a      	strh	r2, [r3, #2]
	  prev_count[2] = TIM4->CNT;
 8001ac4:	4b06      	ldr	r3, [pc, #24]	; (8001ae0 <Param_Change+0x94>)
 8001ac6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ac8:	b29a      	uxth	r2, r3
 8001aca:	4b03      	ldr	r3, [pc, #12]	; (8001ad8 <Param_Change+0x8c>)
 8001acc:	809a      	strh	r2, [r3, #4]
	}
}
 8001ace:	bf00      	nop
 8001ad0:	bd80      	pop	{r7, pc}
 8001ad2:	bf00      	nop
 8001ad4:	40010000 	.word	0x40010000
 8001ad8:	20000da4 	.word	0x20000da4
 8001adc:	40000400 	.word	0x40000400
 8001ae0:	40000800 	.word	0x40000800
 8001ae4:	2002fd10 	.word	0x2002fd10

08001ae8 <FX_Change>:

void FX_Change() {
 8001ae8:	b580      	push	{r7, lr}
 8001aea:	af00      	add	r7, sp, #0
	if(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_2) == 1){
 8001aec:	2104      	movs	r1, #4
 8001aee:	480a      	ldr	r0, [pc, #40]	; (8001b18 <FX_Change+0x30>)
 8001af0:	f002 fc9c 	bl	800442c <HAL_GPIO_ReadPin>
 8001af4:	4603      	mov	r3, r0
 8001af6:	2b01      	cmp	r3, #1
 8001af8:	d102      	bne.n	8001b00 <FX_Change+0x18>
		AUDIOFX_Chain_SwitchFX(0);
 8001afa:	2000      	movs	r0, #0
 8001afc:	f7ff fafa 	bl	80010f4 <AUDIOFX_Chain_SwitchFX>

	}
	if(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_3) == 1){
 8001b00:	2108      	movs	r1, #8
 8001b02:	4805      	ldr	r0, [pc, #20]	; (8001b18 <FX_Change+0x30>)
 8001b04:	f002 fc92 	bl	800442c <HAL_GPIO_ReadPin>
 8001b08:	4603      	mov	r3, r0
 8001b0a:	2b01      	cmp	r3, #1
 8001b0c:	d102      	bne.n	8001b14 <FX_Change+0x2c>
		AUDIOFX_Chain_SwitchFX(1);
 8001b0e:	2001      	movs	r0, #1
 8001b10:	f7ff faf0 	bl	80010f4 <AUDIOFX_Chain_SwitchFX>
	}
}
 8001b14:	bf00      	nop
 8001b16:	bd80      	pop	{r7, pc}
 8001b18:	40021400 	.word	0x40021400

08001b1c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001b1c:	b580      	push	{r7, lr}
 8001b1e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001b20:	f001 fbd7 	bl	80032d2 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001b24:	f000 f896 	bl	8001c54 <SystemClock_Config>

/* Configure the peripherals common clocks */
  PeriphCommonClock_Config();
 8001b28:	f000 f904 	bl	8001d34 <PeriphCommonClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001b2c:	f000 fc08 	bl	8002340 <MX_GPIO_Init>
  MX_DMA_Init();
 8001b30:	f000 fbd8 	bl	80022e4 <MX_DMA_Init>
  MX_TIM14_Init();
 8001b34:	f000 fbb2 	bl	800229c <MX_TIM14_Init>
  MX_TIM3_Init();
 8001b38:	f000 fb04 	bl	8002144 <MX_TIM3_Init>
  MX_TIM4_Init();
 8001b3c:	f000 fb58 	bl	80021f0 <MX_TIM4_Init>
  MX_CRC_Init();
 8001b40:	f000 f920 	bl	8001d84 <MX_CRC_Init>
  MX_TIM1_Init();
 8001b44:	f000 fa56 	bl	8001ff4 <MX_TIM1_Init>
  MX_TIM2_Init();
 8001b48:	f000 faae 	bl	80020a8 <MX_TIM2_Init>
  MX_I2C1_Init();
 8001b4c:	f000 f93c 	bl	8001dc8 <MX_I2C1_Init>
  MX_SPI5_Init();
 8001b50:	f000 fa12 	bl	8001f78 <MX_SPI5_Init>
  MX_I2C2_Init();
 8001b54:	f000 f978 	bl	8001e48 <MX_I2C2_Init>
  MX_SAI1_Init();
 8001b58:	f000 f9b6 	bl	8001ec8 <MX_SAI1_Init>
  MX_TouchGFX_Init();
 8001b5c:	f007 f8d7 	bl	8008d0e <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */

  curr_fx = AUDIOFX_PKNG0;
 8001b60:	4b27      	ldr	r3, [pc, #156]	; (8001c00 <main+0xe4>)
 8001b62:	2200      	movs	r2, #0
 8001b64:	701a      	strb	r2, [r3, #0]

  FILTERS_Init(&f_p0);
 8001b66:	4827      	ldr	r0, [pc, #156]	; (8001c04 <main+0xe8>)
 8001b68:	f7ff fa92 	bl	8001090 <FILTERS_Init>
  FILTERS_Init(&f_p1);
 8001b6c:	4826      	ldr	r0, [pc, #152]	; (8001c08 <main+0xec>)
 8001b6e:	f7ff fa8f 	bl	8001090 <FILTERS_Init>
  FILTERS_Init(&f_p2);
 8001b72:	4826      	ldr	r0, [pc, #152]	; (8001c0c <main+0xf0>)
 8001b74:	f7ff fa8c 	bl	8001090 <FILTERS_Init>
  FILTERS_Init(&f_p3);
 8001b78:	4825      	ldr	r0, [pc, #148]	; (8001c10 <main+0xf4>)
 8001b7a:	f7ff fa89 	bl	8001090 <FILTERS_Init>
  FILTERS_Init(&f_p4);
 8001b7e:	4825      	ldr	r0, [pc, #148]	; (8001c14 <main+0xf8>)
 8001b80:	f7ff fa86 	bl	8001090 <FILTERS_Init>

  DELAY_Init(&dl_p);
 8001b84:	4824      	ldr	r0, [pc, #144]	; (8001c18 <main+0xfc>)
 8001b86:	f7ff f947 	bl	8000e18 <DELAY_Init>
  DISTORT_Init(&ds_p);
 8001b8a:	4824      	ldr	r0, [pc, #144]	; (8001c1c <main+0x100>)
 8001b8c:	f7ff f98a 	bl	8000ea4 <DISTORT_Init>

  ILI9341_Init();
 8001b90:	f006 fe3a 	bl	8008808 <ILI9341_Init>
  WM8731_Init();
 8001b94:	f001 fb6c 	bl	8003270 <WM8731_Init>

//  HAL_GPIO_TogglePin(GPIOF, GPIO_PIN_11);

  HAL_SAI_Receive_DMA(&hsai_BlockA1, (uint8_t*) audio_in, AUDIOFX_BUFF_SIZE);
 8001b98:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8001b9c:	4920      	ldr	r1, [pc, #128]	; (8001c20 <main+0x104>)
 8001b9e:	4821      	ldr	r0, [pc, #132]	; (8001c24 <main+0x108>)
 8001ba0:	f004 ffee 	bl	8006b80 <HAL_SAI_Receive_DMA>
  HAL_SAI_Transmit_DMA(&hsai_BlockB1, (uint8_t*) audio_out, AUDIOFX_BUFF_SIZE);
 8001ba4:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8001ba8:	491f      	ldr	r1, [pc, #124]	; (8001c28 <main+0x10c>)
 8001baa:	4820      	ldr	r0, [pc, #128]	; (8001c2c <main+0x110>)
 8001bac:	f004 ff38 	bl	8006a20 <HAL_SAI_Transmit_DMA>

  HAL_TIM_Base_Start_IT(&htim2);
 8001bb0:	481f      	ldr	r0, [pc, #124]	; (8001c30 <main+0x114>)
 8001bb2:	f006 f85f 	bl	8007c74 <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&htim14);
 8001bb6:	481f      	ldr	r0, [pc, #124]	; (8001c34 <main+0x118>)
 8001bb8:	f006 f85c 	bl	8007c74 <HAL_TIM_Base_Start_IT>

  HAL_TIM_Encoder_Start(&htim1, TIM_CHANNEL_ALL);
 8001bbc:	213c      	movs	r1, #60	; 0x3c
 8001bbe:	481e      	ldr	r0, [pc, #120]	; (8001c38 <main+0x11c>)
 8001bc0:	f006 f976 	bl	8007eb0 <HAL_TIM_Encoder_Start>
  HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_ALL);
 8001bc4:	213c      	movs	r1, #60	; 0x3c
 8001bc6:	481d      	ldr	r0, [pc, #116]	; (8001c3c <main+0x120>)
 8001bc8:	f006 f972 	bl	8007eb0 <HAL_TIM_Encoder_Start>
  HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_ALL);
 8001bcc:	213c      	movs	r1, #60	; 0x3c
 8001bce:	481c      	ldr	r0, [pc, #112]	; (8001c40 <main+0x124>)
 8001bd0:	f006 f96e 	bl	8007eb0 <HAL_TIM_Encoder_Start>

  prev_count[0] = TIM1->CNT;
 8001bd4:	4b1b      	ldr	r3, [pc, #108]	; (8001c44 <main+0x128>)
 8001bd6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001bd8:	b29a      	uxth	r2, r3
 8001bda:	4b1b      	ldr	r3, [pc, #108]	; (8001c48 <main+0x12c>)
 8001bdc:	801a      	strh	r2, [r3, #0]
  prev_count[1] = TIM3->CNT;
 8001bde:	4b1b      	ldr	r3, [pc, #108]	; (8001c4c <main+0x130>)
 8001be0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001be2:	b29a      	uxth	r2, r3
 8001be4:	4b18      	ldr	r3, [pc, #96]	; (8001c48 <main+0x12c>)
 8001be6:	805a      	strh	r2, [r3, #2]
  prev_count[2] = TIM4->CNT;
 8001be8:	4b19      	ldr	r3, [pc, #100]	; (8001c50 <main+0x134>)
 8001bea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001bec:	b29a      	uxth	r2, r3
 8001bee:	4b16      	ldr	r3, [pc, #88]	; (8001c48 <main+0x12c>)
 8001bf0:	809a      	strh	r2, [r3, #4]
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 8001bf2:	f007 f894 	bl	8008d1e <MX_TouchGFX_Process>
    /* USER CODE BEGIN 3 */
  FX_Change();
 8001bf6:	f7ff ff77 	bl	8001ae8 <FX_Change>
  Param_Change();
 8001bfa:	f7ff ff27 	bl	8001a4c <Param_Change>
  MX_TouchGFX_Process();
 8001bfe:	e7f8      	b.n	8001bf2 <main+0xd6>
 8001c00:	2002fd10 	.word	0x2002fd10
 8001c04:	20000dac 	.word	0x20000dac
 8001c08:	20000dec 	.word	0x20000dec
 8001c0c:	20000e2c 	.word	0x20000e2c
 8001c10:	20000e6c 	.word	0x20000e6c
 8001c14:	20000eac 	.word	0x20000eac
 8001c18:	20000eec 	.word	0x20000eec
 8001c1c:	2002fcfc 	.word	0x2002fcfc
 8001c20:	2000061c 	.word	0x2000061c
 8001c24:	20000208 	.word	0x20000208
 8001c28:	200009dc 	.word	0x200009dc
 8001c2c:	2000028c 	.word	0x2000028c
 8001c30:	200004e0 	.word	0x200004e0
 8001c34:	200005c4 	.word	0x200005c4
 8001c38:	20000494 	.word	0x20000494
 8001c3c:	2000052c 	.word	0x2000052c
 8001c40:	20000578 	.word	0x20000578
 8001c44:	40010000 	.word	0x40010000
 8001c48:	20000da4 	.word	0x20000da4
 8001c4c:	40000400 	.word	0x40000400
 8001c50:	40000800 	.word	0x40000800

08001c54 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001c54:	b580      	push	{r7, lr}
 8001c56:	b094      	sub	sp, #80	; 0x50
 8001c58:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001c5a:	f107 0320 	add.w	r3, r7, #32
 8001c5e:	2230      	movs	r2, #48	; 0x30
 8001c60:	2100      	movs	r1, #0
 8001c62:	4618      	mov	r0, r3
 8001c64:	f021 fd6d 	bl	8023742 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001c68:	f107 030c 	add.w	r3, r7, #12
 8001c6c:	2200      	movs	r2, #0
 8001c6e:	601a      	str	r2, [r3, #0]
 8001c70:	605a      	str	r2, [r3, #4]
 8001c72:	609a      	str	r2, [r3, #8]
 8001c74:	60da      	str	r2, [r3, #12]
 8001c76:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001c78:	4b2c      	ldr	r3, [pc, #176]	; (8001d2c <SystemClock_Config+0xd8>)
 8001c7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c7c:	4a2b      	ldr	r2, [pc, #172]	; (8001d2c <SystemClock_Config+0xd8>)
 8001c7e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001c82:	6413      	str	r3, [r2, #64]	; 0x40
 8001c84:	4b29      	ldr	r3, [pc, #164]	; (8001d2c <SystemClock_Config+0xd8>)
 8001c86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c88:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c8c:	60bb      	str	r3, [r7, #8]
 8001c8e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001c90:	4b27      	ldr	r3, [pc, #156]	; (8001d30 <SystemClock_Config+0xdc>)
 8001c92:	681b      	ldr	r3, [r3, #0]
 8001c94:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8001c98:	4a25      	ldr	r2, [pc, #148]	; (8001d30 <SystemClock_Config+0xdc>)
 8001c9a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001c9e:	6013      	str	r3, [r2, #0]
 8001ca0:	4b23      	ldr	r3, [pc, #140]	; (8001d30 <SystemClock_Config+0xdc>)
 8001ca2:	681b      	ldr	r3, [r3, #0]
 8001ca4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001ca8:	607b      	str	r3, [r7, #4]
 8001caa:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001cac:	2301      	movs	r3, #1
 8001cae:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001cb0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001cb4:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001cb6:	2302      	movs	r3, #2
 8001cb8:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001cba:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001cbe:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 12;
 8001cc0:	230c      	movs	r3, #12
 8001cc2:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 108;
 8001cc4:	236c      	movs	r3, #108	; 0x6c
 8001cc6:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001cc8:	2302      	movs	r3, #2
 8001cca:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8001ccc:	2302      	movs	r3, #2
 8001cce:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001cd0:	f107 0320 	add.w	r3, r7, #32
 8001cd4:	4618      	mov	r0, r3
 8001cd6:	f003 fb3f 	bl	8005358 <HAL_RCC_OscConfig>
 8001cda:	4603      	mov	r3, r0
 8001cdc:	2b00      	cmp	r3, #0
 8001cde:	d001      	beq.n	8001ce4 <SystemClock_Config+0x90>
  {
    Error_Handler();
 8001ce0:	f000 fc78 	bl	80025d4 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001ce4:	f003 fae8 	bl	80052b8 <HAL_PWREx_EnableOverDrive>
 8001ce8:	4603      	mov	r3, r0
 8001cea:	2b00      	cmp	r3, #0
 8001cec:	d001      	beq.n	8001cf2 <SystemClock_Config+0x9e>
  {
    Error_Handler();
 8001cee:	f000 fc71 	bl	80025d4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001cf2:	230f      	movs	r3, #15
 8001cf4:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001cf6:	2302      	movs	r3, #2
 8001cf8:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001cfa:	2300      	movs	r3, #0
 8001cfc:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001cfe:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001d02:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001d04:	2300      	movs	r3, #0
 8001d06:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8001d08:	f107 030c 	add.w	r3, r7, #12
 8001d0c:	2103      	movs	r1, #3
 8001d0e:	4618      	mov	r0, r3
 8001d10:	f003 fdc6 	bl	80058a0 <HAL_RCC_ClockConfig>
 8001d14:	4603      	mov	r3, r0
 8001d16:	2b00      	cmp	r3, #0
 8001d18:	d001      	beq.n	8001d1e <SystemClock_Config+0xca>
  {
    Error_Handler();
 8001d1a:	f000 fc5b 	bl	80025d4 <Error_Handler>
  }

  /** Enables the Clock Security System
  */
  HAL_RCC_EnableCSS();
 8001d1e:	f003 feab 	bl	8005a78 <HAL_RCC_EnableCSS>
}
 8001d22:	bf00      	nop
 8001d24:	3750      	adds	r7, #80	; 0x50
 8001d26:	46bd      	mov	sp, r7
 8001d28:	bd80      	pop	{r7, pc}
 8001d2a:	bf00      	nop
 8001d2c:	40023800 	.word	0x40023800
 8001d30:	40007000 	.word	0x40007000

08001d34 <PeriphCommonClock_Config>:
/**
  * @brief Peripherals Common Clock Configuration
  * @retval None
  */
void PeriphCommonClock_Config(void)
{
 8001d34:	b580      	push	{r7, lr}
 8001d36:	b0a2      	sub	sp, #136	; 0x88
 8001d38:	af00      	add	r7, sp, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d3a:	1d3b      	adds	r3, r7, #4
 8001d3c:	2284      	movs	r2, #132	; 0x84
 8001d3e:	2100      	movs	r1, #0
 8001d40:	4618      	mov	r0, r3
 8001d42:	f021 fcfe 	bl	8023742 <memset>

  /** Initializes the peripherals clock
  */
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SAI1;
 8001d46:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8001d4a:	607b      	str	r3, [r7, #4]
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 98;
 8001d4c:	2362      	movs	r3, #98	; 0x62
 8001d4e:	61bb      	str	r3, [r7, #24]
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
 8001d50:	2302      	movs	r3, #2
 8001d52:	623b      	str	r3, [r7, #32]
  PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8001d54:	2302      	movs	r3, #2
 8001d56:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV2;
 8001d58:	2300      	movs	r3, #0
 8001d5a:	627b      	str	r3, [r7, #36]	; 0x24
  PeriphClkInitStruct.PLLSAIDivQ = 1;
 8001d5c:	2301      	movs	r3, #1
 8001d5e:	62fb      	str	r3, [r7, #44]	; 0x2c
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001d60:	2300      	movs	r3, #0
 8001d62:	633b      	str	r3, [r7, #48]	; 0x30
  PeriphClkInitStruct.Sai1ClockSelection = RCC_SAI1CLKSOURCE_PLLSAI;
 8001d64:	2300      	movs	r3, #0
 8001d66:	643b      	str	r3, [r7, #64]	; 0x40
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d68:	1d3b      	adds	r3, r7, #4
 8001d6a:	4618      	mov	r0, r3
 8001d6c:	f003 ff76 	bl	8005c5c <HAL_RCCEx_PeriphCLKConfig>
 8001d70:	4603      	mov	r3, r0
 8001d72:	2b00      	cmp	r3, #0
 8001d74:	d001      	beq.n	8001d7a <PeriphCommonClock_Config+0x46>
  {
    Error_Handler();
 8001d76:	f000 fc2d 	bl	80025d4 <Error_Handler>
  }
}
 8001d7a:	bf00      	nop
 8001d7c:	3788      	adds	r7, #136	; 0x88
 8001d7e:	46bd      	mov	sp, r7
 8001d80:	bd80      	pop	{r7, pc}
	...

08001d84 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8001d84:	b580      	push	{r7, lr}
 8001d86:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8001d88:	4b0d      	ldr	r3, [pc, #52]	; (8001dc0 <MX_CRC_Init+0x3c>)
 8001d8a:	4a0e      	ldr	r2, [pc, #56]	; (8001dc4 <MX_CRC_Init+0x40>)
 8001d8c:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8001d8e:	4b0c      	ldr	r3, [pc, #48]	; (8001dc0 <MX_CRC_Init+0x3c>)
 8001d90:	2200      	movs	r2, #0
 8001d92:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 8001d94:	4b0a      	ldr	r3, [pc, #40]	; (8001dc0 <MX_CRC_Init+0x3c>)
 8001d96:	2200      	movs	r2, #0
 8001d98:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 8001d9a:	4b09      	ldr	r3, [pc, #36]	; (8001dc0 <MX_CRC_Init+0x3c>)
 8001d9c:	2200      	movs	r2, #0
 8001d9e:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8001da0:	4b07      	ldr	r3, [pc, #28]	; (8001dc0 <MX_CRC_Init+0x3c>)
 8001da2:	2200      	movs	r2, #0
 8001da4:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8001da6:	4b06      	ldr	r3, [pc, #24]	; (8001dc0 <MX_CRC_Init+0x3c>)
 8001da8:	2201      	movs	r2, #1
 8001daa:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001dac:	4804      	ldr	r0, [pc, #16]	; (8001dc0 <MX_CRC_Init+0x3c>)
 8001dae:	f001 fc23 	bl	80035f8 <HAL_CRC_Init>
 8001db2:	4603      	mov	r3, r0
 8001db4:	2b00      	cmp	r3, #0
 8001db6:	d001      	beq.n	8001dbc <MX_CRC_Init+0x38>
  {
    Error_Handler();
 8001db8:	f000 fc0c 	bl	80025d4 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8001dbc:	bf00      	nop
 8001dbe:	bd80      	pop	{r7, pc}
 8001dc0:	2000013c 	.word	0x2000013c
 8001dc4:	40023000 	.word	0x40023000

08001dc8 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001dc8:	b580      	push	{r7, lr}
 8001dca:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001dcc:	4b1b      	ldr	r3, [pc, #108]	; (8001e3c <MX_I2C1_Init+0x74>)
 8001dce:	4a1c      	ldr	r2, [pc, #112]	; (8001e40 <MX_I2C1_Init+0x78>)
 8001dd0:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x6000030D;
 8001dd2:	4b1a      	ldr	r3, [pc, #104]	; (8001e3c <MX_I2C1_Init+0x74>)
 8001dd4:	4a1b      	ldr	r2, [pc, #108]	; (8001e44 <MX_I2C1_Init+0x7c>)
 8001dd6:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8001dd8:	4b18      	ldr	r3, [pc, #96]	; (8001e3c <MX_I2C1_Init+0x74>)
 8001dda:	2200      	movs	r2, #0
 8001ddc:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001dde:	4b17      	ldr	r3, [pc, #92]	; (8001e3c <MX_I2C1_Init+0x74>)
 8001de0:	2201      	movs	r2, #1
 8001de2:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001de4:	4b15      	ldr	r3, [pc, #84]	; (8001e3c <MX_I2C1_Init+0x74>)
 8001de6:	2200      	movs	r2, #0
 8001de8:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8001dea:	4b14      	ldr	r3, [pc, #80]	; (8001e3c <MX_I2C1_Init+0x74>)
 8001dec:	2200      	movs	r2, #0
 8001dee:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8001df0:	4b12      	ldr	r3, [pc, #72]	; (8001e3c <MX_I2C1_Init+0x74>)
 8001df2:	2200      	movs	r2, #0
 8001df4:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001df6:	4b11      	ldr	r3, [pc, #68]	; (8001e3c <MX_I2C1_Init+0x74>)
 8001df8:	2200      	movs	r2, #0
 8001dfa:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001dfc:	4b0f      	ldr	r3, [pc, #60]	; (8001e3c <MX_I2C1_Init+0x74>)
 8001dfe:	2200      	movs	r2, #0
 8001e00:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001e02:	480e      	ldr	r0, [pc, #56]	; (8001e3c <MX_I2C1_Init+0x74>)
 8001e04:	f002 fb44 	bl	8004490 <HAL_I2C_Init>
 8001e08:	4603      	mov	r3, r0
 8001e0a:	2b00      	cmp	r3, #0
 8001e0c:	d001      	beq.n	8001e12 <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 8001e0e:	f000 fbe1 	bl	80025d4 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001e12:	2100      	movs	r1, #0
 8001e14:	4809      	ldr	r0, [pc, #36]	; (8001e3c <MX_I2C1_Init+0x74>)
 8001e16:	f003 f9b7 	bl	8005188 <HAL_I2CEx_ConfigAnalogFilter>
 8001e1a:	4603      	mov	r3, r0
 8001e1c:	2b00      	cmp	r3, #0
 8001e1e:	d001      	beq.n	8001e24 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8001e20:	f000 fbd8 	bl	80025d4 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001e24:	2100      	movs	r1, #0
 8001e26:	4805      	ldr	r0, [pc, #20]	; (8001e3c <MX_I2C1_Init+0x74>)
 8001e28:	f003 f9f9 	bl	800521e <HAL_I2CEx_ConfigDigitalFilter>
 8001e2c:	4603      	mov	r3, r0
 8001e2e:	2b00      	cmp	r3, #0
 8001e30:	d001      	beq.n	8001e36 <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 8001e32:	f000 fbcf 	bl	80025d4 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001e36:	bf00      	nop
 8001e38:	bd80      	pop	{r7, pc}
 8001e3a:	bf00      	nop
 8001e3c:	20000160 	.word	0x20000160
 8001e40:	40005400 	.word	0x40005400
 8001e44:	6000030d 	.word	0x6000030d

08001e48 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 8001e48:	b580      	push	{r7, lr}
 8001e4a:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 8001e4c:	4b1b      	ldr	r3, [pc, #108]	; (8001ebc <MX_I2C2_Init+0x74>)
 8001e4e:	4a1c      	ldr	r2, [pc, #112]	; (8001ec0 <MX_I2C2_Init+0x78>)
 8001e50:	601a      	str	r2, [r3, #0]
  hi2c2.Init.Timing = 0x20404768;
 8001e52:	4b1a      	ldr	r3, [pc, #104]	; (8001ebc <MX_I2C2_Init+0x74>)
 8001e54:	4a1b      	ldr	r2, [pc, #108]	; (8001ec4 <MX_I2C2_Init+0x7c>)
 8001e56:	605a      	str	r2, [r3, #4]
  hi2c2.Init.OwnAddress1 = 0;
 8001e58:	4b18      	ldr	r3, [pc, #96]	; (8001ebc <MX_I2C2_Init+0x74>)
 8001e5a:	2200      	movs	r2, #0
 8001e5c:	609a      	str	r2, [r3, #8]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001e5e:	4b17      	ldr	r3, [pc, #92]	; (8001ebc <MX_I2C2_Init+0x74>)
 8001e60:	2201      	movs	r2, #1
 8001e62:	60da      	str	r2, [r3, #12]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001e64:	4b15      	ldr	r3, [pc, #84]	; (8001ebc <MX_I2C2_Init+0x74>)
 8001e66:	2200      	movs	r2, #0
 8001e68:	611a      	str	r2, [r3, #16]
  hi2c2.Init.OwnAddress2 = 0;
 8001e6a:	4b14      	ldr	r3, [pc, #80]	; (8001ebc <MX_I2C2_Init+0x74>)
 8001e6c:	2200      	movs	r2, #0
 8001e6e:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8001e70:	4b12      	ldr	r3, [pc, #72]	; (8001ebc <MX_I2C2_Init+0x74>)
 8001e72:	2200      	movs	r2, #0
 8001e74:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001e76:	4b11      	ldr	r3, [pc, #68]	; (8001ebc <MX_I2C2_Init+0x74>)
 8001e78:	2200      	movs	r2, #0
 8001e7a:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001e7c:	4b0f      	ldr	r3, [pc, #60]	; (8001ebc <MX_I2C2_Init+0x74>)
 8001e7e:	2200      	movs	r2, #0
 8001e80:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8001e82:	480e      	ldr	r0, [pc, #56]	; (8001ebc <MX_I2C2_Init+0x74>)
 8001e84:	f002 fb04 	bl	8004490 <HAL_I2C_Init>
 8001e88:	4603      	mov	r3, r0
 8001e8a:	2b00      	cmp	r3, #0
 8001e8c:	d001      	beq.n	8001e92 <MX_I2C2_Init+0x4a>
  {
    Error_Handler();
 8001e8e:	f000 fba1 	bl	80025d4 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001e92:	2100      	movs	r1, #0
 8001e94:	4809      	ldr	r0, [pc, #36]	; (8001ebc <MX_I2C2_Init+0x74>)
 8001e96:	f003 f977 	bl	8005188 <HAL_I2CEx_ConfigAnalogFilter>
 8001e9a:	4603      	mov	r3, r0
 8001e9c:	2b00      	cmp	r3, #0
 8001e9e:	d001      	beq.n	8001ea4 <MX_I2C2_Init+0x5c>
  {
    Error_Handler();
 8001ea0:	f000 fb98 	bl	80025d4 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 8001ea4:	2100      	movs	r1, #0
 8001ea6:	4805      	ldr	r0, [pc, #20]	; (8001ebc <MX_I2C2_Init+0x74>)
 8001ea8:	f003 f9b9 	bl	800521e <HAL_I2CEx_ConfigDigitalFilter>
 8001eac:	4603      	mov	r3, r0
 8001eae:	2b00      	cmp	r3, #0
 8001eb0:	d001      	beq.n	8001eb6 <MX_I2C2_Init+0x6e>
  {
    Error_Handler();
 8001eb2:	f000 fb8f 	bl	80025d4 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8001eb6:	bf00      	nop
 8001eb8:	bd80      	pop	{r7, pc}
 8001eba:	bf00      	nop
 8001ebc:	200001b4 	.word	0x200001b4
 8001ec0:	40005800 	.word	0x40005800
 8001ec4:	20404768 	.word	0x20404768

08001ec8 <MX_SAI1_Init>:
  * @brief SAI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SAI1_Init(void)
{
 8001ec8:	b580      	push	{r7, lr}
 8001eca:	af00      	add	r7, sp, #0
  /* USER CODE END SAI1_Init 0 */

  /* USER CODE BEGIN SAI1_Init 1 */

  /* USER CODE END SAI1_Init 1 */
  hsai_BlockA1.Instance = SAI1_Block_A;
 8001ecc:	4b26      	ldr	r3, [pc, #152]	; (8001f68 <MX_SAI1_Init+0xa0>)
 8001ece:	4a27      	ldr	r2, [pc, #156]	; (8001f6c <MX_SAI1_Init+0xa4>)
 8001ed0:	601a      	str	r2, [r3, #0]
  hsai_BlockA1.Init.AudioMode = SAI_MODESLAVE_RX;
 8001ed2:	4b25      	ldr	r3, [pc, #148]	; (8001f68 <MX_SAI1_Init+0xa0>)
 8001ed4:	2203      	movs	r2, #3
 8001ed6:	605a      	str	r2, [r3, #4]
  hsai_BlockA1.Init.Synchro = SAI_ASYNCHRONOUS;
 8001ed8:	4b23      	ldr	r3, [pc, #140]	; (8001f68 <MX_SAI1_Init+0xa0>)
 8001eda:	2200      	movs	r2, #0
 8001edc:	609a      	str	r2, [r3, #8]
  hsai_BlockA1.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 8001ede:	4b22      	ldr	r3, [pc, #136]	; (8001f68 <MX_SAI1_Init+0xa0>)
 8001ee0:	2200      	movs	r2, #0
 8001ee2:	611a      	str	r2, [r3, #16]
  hsai_BlockA1.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 8001ee4:	4b20      	ldr	r3, [pc, #128]	; (8001f68 <MX_SAI1_Init+0xa0>)
 8001ee6:	2200      	movs	r2, #0
 8001ee8:	619a      	str	r2, [r3, #24]
  hsai_BlockA1.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 8001eea:	4b1f      	ldr	r3, [pc, #124]	; (8001f68 <MX_SAI1_Init+0xa0>)
 8001eec:	2200      	movs	r2, #0
 8001eee:	60da      	str	r2, [r3, #12]
  hsai_BlockA1.Init.MonoStereoMode = SAI_STEREOMODE;
 8001ef0:	4b1d      	ldr	r3, [pc, #116]	; (8001f68 <MX_SAI1_Init+0xa0>)
 8001ef2:	2200      	movs	r2, #0
 8001ef4:	625a      	str	r2, [r3, #36]	; 0x24
  hsai_BlockA1.Init.CompandingMode = SAI_NOCOMPANDING;
 8001ef6:	4b1c      	ldr	r3, [pc, #112]	; (8001f68 <MX_SAI1_Init+0xa0>)
 8001ef8:	2200      	movs	r2, #0
 8001efa:	629a      	str	r2, [r3, #40]	; 0x28
  hsai_BlockA1.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 8001efc:	4b1a      	ldr	r3, [pc, #104]	; (8001f68 <MX_SAI1_Init+0xa0>)
 8001efe:	2200      	movs	r2, #0
 8001f00:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SAI_InitProtocol(&hsai_BlockA1, SAI_I2S_STANDARD, SAI_PROTOCOL_DATASIZE_16BIT, 2) != HAL_OK)
 8001f02:	2302      	movs	r3, #2
 8001f04:	2200      	movs	r2, #0
 8001f06:	2100      	movs	r1, #0
 8001f08:	4817      	ldr	r0, [pc, #92]	; (8001f68 <MX_SAI1_Init+0xa0>)
 8001f0a:	f004 fbd7 	bl	80066bc <HAL_SAI_InitProtocol>
 8001f0e:	4603      	mov	r3, r0
 8001f10:	2b00      	cmp	r3, #0
 8001f12:	d001      	beq.n	8001f18 <MX_SAI1_Init+0x50>
  {
    Error_Handler();
 8001f14:	f000 fb5e 	bl	80025d4 <Error_Handler>
  }
  hsai_BlockB1.Instance = SAI1_Block_B;
 8001f18:	4b15      	ldr	r3, [pc, #84]	; (8001f70 <MX_SAI1_Init+0xa8>)
 8001f1a:	4a16      	ldr	r2, [pc, #88]	; (8001f74 <MX_SAI1_Init+0xac>)
 8001f1c:	601a      	str	r2, [r3, #0]
  hsai_BlockB1.Init.AudioMode = SAI_MODESLAVE_TX;
 8001f1e:	4b14      	ldr	r3, [pc, #80]	; (8001f70 <MX_SAI1_Init+0xa8>)
 8001f20:	2202      	movs	r2, #2
 8001f22:	605a      	str	r2, [r3, #4]
  hsai_BlockB1.Init.Synchro = SAI_SYNCHRONOUS;
 8001f24:	4b12      	ldr	r3, [pc, #72]	; (8001f70 <MX_SAI1_Init+0xa8>)
 8001f26:	2201      	movs	r2, #1
 8001f28:	609a      	str	r2, [r3, #8]
  hsai_BlockB1.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 8001f2a:	4b11      	ldr	r3, [pc, #68]	; (8001f70 <MX_SAI1_Init+0xa8>)
 8001f2c:	2200      	movs	r2, #0
 8001f2e:	611a      	str	r2, [r3, #16]
  hsai_BlockB1.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 8001f30:	4b0f      	ldr	r3, [pc, #60]	; (8001f70 <MX_SAI1_Init+0xa8>)
 8001f32:	2200      	movs	r2, #0
 8001f34:	619a      	str	r2, [r3, #24]
  hsai_BlockB1.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 8001f36:	4b0e      	ldr	r3, [pc, #56]	; (8001f70 <MX_SAI1_Init+0xa8>)
 8001f38:	2200      	movs	r2, #0
 8001f3a:	60da      	str	r2, [r3, #12]
  hsai_BlockB1.Init.MonoStereoMode = SAI_STEREOMODE;
 8001f3c:	4b0c      	ldr	r3, [pc, #48]	; (8001f70 <MX_SAI1_Init+0xa8>)
 8001f3e:	2200      	movs	r2, #0
 8001f40:	625a      	str	r2, [r3, #36]	; 0x24
  hsai_BlockB1.Init.CompandingMode = SAI_NOCOMPANDING;
 8001f42:	4b0b      	ldr	r3, [pc, #44]	; (8001f70 <MX_SAI1_Init+0xa8>)
 8001f44:	2200      	movs	r2, #0
 8001f46:	629a      	str	r2, [r3, #40]	; 0x28
  hsai_BlockB1.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 8001f48:	4b09      	ldr	r3, [pc, #36]	; (8001f70 <MX_SAI1_Init+0xa8>)
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SAI_InitProtocol(&hsai_BlockB1, SAI_I2S_STANDARD, SAI_PROTOCOL_DATASIZE_16BIT, 2) != HAL_OK)
 8001f4e:	2302      	movs	r3, #2
 8001f50:	2200      	movs	r2, #0
 8001f52:	2100      	movs	r1, #0
 8001f54:	4806      	ldr	r0, [pc, #24]	; (8001f70 <MX_SAI1_Init+0xa8>)
 8001f56:	f004 fbb1 	bl	80066bc <HAL_SAI_InitProtocol>
 8001f5a:	4603      	mov	r3, r0
 8001f5c:	2b00      	cmp	r3, #0
 8001f5e:	d001      	beq.n	8001f64 <MX_SAI1_Init+0x9c>
  {
    Error_Handler();
 8001f60:	f000 fb38 	bl	80025d4 <Error_Handler>
  }
  /* USER CODE BEGIN SAI1_Init 2 */

  /* USER CODE END SAI1_Init 2 */

}
 8001f64:	bf00      	nop
 8001f66:	bd80      	pop	{r7, pc}
 8001f68:	20000208 	.word	0x20000208
 8001f6c:	40015804 	.word	0x40015804
 8001f70:	2000028c 	.word	0x2000028c
 8001f74:	40015824 	.word	0x40015824

08001f78 <MX_SPI5_Init>:
  * @brief SPI5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI5_Init(void)
{
 8001f78:	b580      	push	{r7, lr}
 8001f7a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI5_Init 1 */

  /* USER CODE END SPI5_Init 1 */
  /* SPI5 parameter configuration*/
  hspi5.Instance = SPI5;
 8001f7c:	4b1b      	ldr	r3, [pc, #108]	; (8001fec <MX_SPI5_Init+0x74>)
 8001f7e:	4a1c      	ldr	r2, [pc, #112]	; (8001ff0 <MX_SPI5_Init+0x78>)
 8001f80:	601a      	str	r2, [r3, #0]
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001f82:	4b1a      	ldr	r3, [pc, #104]	; (8001fec <MX_SPI5_Init+0x74>)
 8001f84:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001f88:	605a      	str	r2, [r3, #4]
  hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 8001f8a:	4b18      	ldr	r3, [pc, #96]	; (8001fec <MX_SPI5_Init+0x74>)
 8001f8c:	2200      	movs	r2, #0
 8001f8e:	609a      	str	r2, [r3, #8]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001f90:	4b16      	ldr	r3, [pc, #88]	; (8001fec <MX_SPI5_Init+0x74>)
 8001f92:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8001f96:	60da      	str	r2, [r3, #12]
  hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001f98:	4b14      	ldr	r3, [pc, #80]	; (8001fec <MX_SPI5_Init+0x74>)
 8001f9a:	2200      	movs	r2, #0
 8001f9c:	611a      	str	r2, [r3, #16]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001f9e:	4b13      	ldr	r3, [pc, #76]	; (8001fec <MX_SPI5_Init+0x74>)
 8001fa0:	2200      	movs	r2, #0
 8001fa2:	615a      	str	r2, [r3, #20]
  hspi5.Init.NSS = SPI_NSS_HARD_OUTPUT;
 8001fa4:	4b11      	ldr	r3, [pc, #68]	; (8001fec <MX_SPI5_Init+0x74>)
 8001fa6:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8001faa:	619a      	str	r2, [r3, #24]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001fac:	4b0f      	ldr	r3, [pc, #60]	; (8001fec <MX_SPI5_Init+0x74>)
 8001fae:	2200      	movs	r2, #0
 8001fb0:	61da      	str	r2, [r3, #28]
  hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001fb2:	4b0e      	ldr	r3, [pc, #56]	; (8001fec <MX_SPI5_Init+0x74>)
 8001fb4:	2200      	movs	r2, #0
 8001fb6:	621a      	str	r2, [r3, #32]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001fb8:	4b0c      	ldr	r3, [pc, #48]	; (8001fec <MX_SPI5_Init+0x74>)
 8001fba:	2200      	movs	r2, #0
 8001fbc:	625a      	str	r2, [r3, #36]	; 0x24
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001fbe:	4b0b      	ldr	r3, [pc, #44]	; (8001fec <MX_SPI5_Init+0x74>)
 8001fc0:	2200      	movs	r2, #0
 8001fc2:	629a      	str	r2, [r3, #40]	; 0x28
  hspi5.Init.CRCPolynomial = 7;
 8001fc4:	4b09      	ldr	r3, [pc, #36]	; (8001fec <MX_SPI5_Init+0x74>)
 8001fc6:	2207      	movs	r2, #7
 8001fc8:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi5.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8001fca:	4b08      	ldr	r3, [pc, #32]	; (8001fec <MX_SPI5_Init+0x74>)
 8001fcc:	2200      	movs	r2, #0
 8001fce:	631a      	str	r2, [r3, #48]	; 0x30
  hspi5.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8001fd0:	4b06      	ldr	r3, [pc, #24]	; (8001fec <MX_SPI5_Init+0x74>)
 8001fd2:	2208      	movs	r2, #8
 8001fd4:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001fd6:	4805      	ldr	r0, [pc, #20]	; (8001fec <MX_SPI5_Init+0x74>)
 8001fd8:	f005 f8c9 	bl	800716e <HAL_SPI_Init>
 8001fdc:	4603      	mov	r3, r0
 8001fde:	2b00      	cmp	r3, #0
 8001fe0:	d001      	beq.n	8001fe6 <MX_SPI5_Init+0x6e>
  {
    Error_Handler();
 8001fe2:	f000 faf7 	bl	80025d4 <Error_Handler>
  }
  /* USER CODE BEGIN SPI5_Init 2 */

  /* USER CODE END SPI5_Init 2 */

}
 8001fe6:	bf00      	nop
 8001fe8:	bd80      	pop	{r7, pc}
 8001fea:	bf00      	nop
 8001fec:	200003d0 	.word	0x200003d0
 8001ff0:	40015000 	.word	0x40015000

08001ff4 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001ff4:	b580      	push	{r7, lr}
 8001ff6:	b08c      	sub	sp, #48	; 0x30
 8001ff8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8001ffa:	f107 030c 	add.w	r3, r7, #12
 8001ffe:	2224      	movs	r2, #36	; 0x24
 8002000:	2100      	movs	r1, #0
 8002002:	4618      	mov	r0, r3
 8002004:	f021 fb9d 	bl	8023742 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002008:	463b      	mov	r3, r7
 800200a:	2200      	movs	r2, #0
 800200c:	601a      	str	r2, [r3, #0]
 800200e:	605a      	str	r2, [r3, #4]
 8002010:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8002012:	4b23      	ldr	r3, [pc, #140]	; (80020a0 <MX_TIM1_Init+0xac>)
 8002014:	4a23      	ldr	r2, [pc, #140]	; (80020a4 <MX_TIM1_Init+0xb0>)
 8002016:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 8002018:	4b21      	ldr	r3, [pc, #132]	; (80020a0 <MX_TIM1_Init+0xac>)
 800201a:	2200      	movs	r2, #0
 800201c:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800201e:	4b20      	ldr	r3, [pc, #128]	; (80020a0 <MX_TIM1_Init+0xac>)
 8002020:	2200      	movs	r2, #0
 8002022:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 400;
 8002024:	4b1e      	ldr	r3, [pc, #120]	; (80020a0 <MX_TIM1_Init+0xac>)
 8002026:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800202a:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800202c:	4b1c      	ldr	r3, [pc, #112]	; (80020a0 <MX_TIM1_Init+0xac>)
 800202e:	2200      	movs	r2, #0
 8002030:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8002032:	4b1b      	ldr	r3, [pc, #108]	; (80020a0 <MX_TIM1_Init+0xac>)
 8002034:	2200      	movs	r2, #0
 8002036:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8002038:	4b19      	ldr	r3, [pc, #100]	; (80020a0 <MX_TIM1_Init+0xac>)
 800203a:	2280      	movs	r2, #128	; 0x80
 800203c:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 800203e:	2303      	movs	r3, #3
 8002040:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8002042:	2300      	movs	r3, #0
 8002044:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8002046:	2301      	movs	r3, #1
 8002048:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 800204a:	2300      	movs	r3, #0
 800204c:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 10;
 800204e:	230a      	movs	r3, #10
 8002050:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8002052:	2300      	movs	r3, #0
 8002054:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8002056:	2301      	movs	r3, #1
 8002058:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 800205a:	2300      	movs	r3, #0
 800205c:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 10;
 800205e:	230a      	movs	r3, #10
 8002060:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim1, &sConfig) != HAL_OK)
 8002062:	f107 030c 	add.w	r3, r7, #12
 8002066:	4619      	mov	r1, r3
 8002068:	480d      	ldr	r0, [pc, #52]	; (80020a0 <MX_TIM1_Init+0xac>)
 800206a:	f005 fe7b 	bl	8007d64 <HAL_TIM_Encoder_Init>
 800206e:	4603      	mov	r3, r0
 8002070:	2b00      	cmp	r3, #0
 8002072:	d001      	beq.n	8002078 <MX_TIM1_Init+0x84>
  {
    Error_Handler();
 8002074:	f000 faae 	bl	80025d4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002078:	2300      	movs	r3, #0
 800207a:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 800207c:	2300      	movs	r3, #0
 800207e:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002080:	2300      	movs	r3, #0
 8002082:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8002084:	463b      	mov	r3, r7
 8002086:	4619      	mov	r1, r3
 8002088:	4805      	ldr	r0, [pc, #20]	; (80020a0 <MX_TIM1_Init+0xac>)
 800208a:	f006 fb11 	bl	80086b0 <HAL_TIMEx_MasterConfigSynchronization>
 800208e:	4603      	mov	r3, r0
 8002090:	2b00      	cmp	r3, #0
 8002092:	d001      	beq.n	8002098 <MX_TIM1_Init+0xa4>
  {
    Error_Handler();
 8002094:	f000 fa9e 	bl	80025d4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8002098:	bf00      	nop
 800209a:	3730      	adds	r7, #48	; 0x30
 800209c:	46bd      	mov	sp, r7
 800209e:	bd80      	pop	{r7, pc}
 80020a0:	20000494 	.word	0x20000494
 80020a4:	40010000 	.word	0x40010000

080020a8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80020a8:	b580      	push	{r7, lr}
 80020aa:	b088      	sub	sp, #32
 80020ac:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80020ae:	f107 0310 	add.w	r3, r7, #16
 80020b2:	2200      	movs	r2, #0
 80020b4:	601a      	str	r2, [r3, #0]
 80020b6:	605a      	str	r2, [r3, #4]
 80020b8:	609a      	str	r2, [r3, #8]
 80020ba:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80020bc:	1d3b      	adds	r3, r7, #4
 80020be:	2200      	movs	r2, #0
 80020c0:	601a      	str	r2, [r3, #0]
 80020c2:	605a      	str	r2, [r3, #4]
 80020c4:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80020c6:	4b1e      	ldr	r3, [pc, #120]	; (8002140 <MX_TIM2_Init+0x98>)
 80020c8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80020cc:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 72-1;
 80020ce:	4b1c      	ldr	r3, [pc, #112]	; (8002140 <MX_TIM2_Init+0x98>)
 80020d0:	2247      	movs	r2, #71	; 0x47
 80020d2:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020d4:	4b1a      	ldr	r3, [pc, #104]	; (8002140 <MX_TIM2_Init+0x98>)
 80020d6:	2200      	movs	r2, #0
 80020d8:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 16667-1;
 80020da:	4b19      	ldr	r3, [pc, #100]	; (8002140 <MX_TIM2_Init+0x98>)
 80020dc:	f244 121a 	movw	r2, #16666	; 0x411a
 80020e0:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80020e2:	4b17      	ldr	r3, [pc, #92]	; (8002140 <MX_TIM2_Init+0x98>)
 80020e4:	2200      	movs	r2, #0
 80020e6:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80020e8:	4b15      	ldr	r3, [pc, #84]	; (8002140 <MX_TIM2_Init+0x98>)
 80020ea:	2200      	movs	r2, #0
 80020ec:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80020ee:	4814      	ldr	r0, [pc, #80]	; (8002140 <MX_TIM2_Init+0x98>)
 80020f0:	f005 fd68 	bl	8007bc4 <HAL_TIM_Base_Init>
 80020f4:	4603      	mov	r3, r0
 80020f6:	2b00      	cmp	r3, #0
 80020f8:	d001      	beq.n	80020fe <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 80020fa:	f000 fa6b 	bl	80025d4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80020fe:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002102:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8002104:	f107 0310 	add.w	r3, r7, #16
 8002108:	4619      	mov	r1, r3
 800210a:	480d      	ldr	r0, [pc, #52]	; (8002140 <MX_TIM2_Init+0x98>)
 800210c:	f006 f87e 	bl	800820c <HAL_TIM_ConfigClockSource>
 8002110:	4603      	mov	r3, r0
 8002112:	2b00      	cmp	r3, #0
 8002114:	d001      	beq.n	800211a <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 8002116:	f000 fa5d 	bl	80025d4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800211a:	2300      	movs	r3, #0
 800211c:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800211e:	2300      	movs	r3, #0
 8002120:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002122:	1d3b      	adds	r3, r7, #4
 8002124:	4619      	mov	r1, r3
 8002126:	4806      	ldr	r0, [pc, #24]	; (8002140 <MX_TIM2_Init+0x98>)
 8002128:	f006 fac2 	bl	80086b0 <HAL_TIMEx_MasterConfigSynchronization>
 800212c:	4603      	mov	r3, r0
 800212e:	2b00      	cmp	r3, #0
 8002130:	d001      	beq.n	8002136 <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 8002132:	f000 fa4f 	bl	80025d4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */
  /* USER CODE END TIM2_Init 2 */

}
 8002136:	bf00      	nop
 8002138:	3720      	adds	r7, #32
 800213a:	46bd      	mov	sp, r7
 800213c:	bd80      	pop	{r7, pc}
 800213e:	bf00      	nop
 8002140:	200004e0 	.word	0x200004e0

08002144 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8002144:	b580      	push	{r7, lr}
 8002146:	b08c      	sub	sp, #48	; 0x30
 8002148:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 800214a:	f107 030c 	add.w	r3, r7, #12
 800214e:	2224      	movs	r2, #36	; 0x24
 8002150:	2100      	movs	r1, #0
 8002152:	4618      	mov	r0, r3
 8002154:	f021 faf5 	bl	8023742 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002158:	463b      	mov	r3, r7
 800215a:	2200      	movs	r2, #0
 800215c:	601a      	str	r2, [r3, #0]
 800215e:	605a      	str	r2, [r3, #4]
 8002160:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8002162:	4b21      	ldr	r3, [pc, #132]	; (80021e8 <MX_TIM3_Init+0xa4>)
 8002164:	4a21      	ldr	r2, [pc, #132]	; (80021ec <MX_TIM3_Init+0xa8>)
 8002166:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 8002168:	4b1f      	ldr	r3, [pc, #124]	; (80021e8 <MX_TIM3_Init+0xa4>)
 800216a:	2200      	movs	r2, #0
 800216c:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800216e:	4b1e      	ldr	r3, [pc, #120]	; (80021e8 <MX_TIM3_Init+0xa4>)
 8002170:	2200      	movs	r2, #0
 8002172:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 400;
 8002174:	4b1c      	ldr	r3, [pc, #112]	; (80021e8 <MX_TIM3_Init+0xa4>)
 8002176:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800217a:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800217c:	4b1a      	ldr	r3, [pc, #104]	; (80021e8 <MX_TIM3_Init+0xa4>)
 800217e:	2200      	movs	r2, #0
 8002180:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8002182:	4b19      	ldr	r3, [pc, #100]	; (80021e8 <MX_TIM3_Init+0xa4>)
 8002184:	2280      	movs	r2, #128	; 0x80
 8002186:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8002188:	2303      	movs	r3, #3
 800218a:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 800218c:	2300      	movs	r3, #0
 800218e:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8002190:	2301      	movs	r3, #1
 8002192:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8002194:	2300      	movs	r3, #0
 8002196:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 10;
 8002198:	230a      	movs	r3, #10
 800219a:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 800219c:	2300      	movs	r3, #0
 800219e:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80021a0:	2301      	movs	r3, #1
 80021a2:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80021a4:	2300      	movs	r3, #0
 80021a6:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 10;
 80021a8:	230a      	movs	r3, #10
 80021aa:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 80021ac:	f107 030c 	add.w	r3, r7, #12
 80021b0:	4619      	mov	r1, r3
 80021b2:	480d      	ldr	r0, [pc, #52]	; (80021e8 <MX_TIM3_Init+0xa4>)
 80021b4:	f005 fdd6 	bl	8007d64 <HAL_TIM_Encoder_Init>
 80021b8:	4603      	mov	r3, r0
 80021ba:	2b00      	cmp	r3, #0
 80021bc:	d001      	beq.n	80021c2 <MX_TIM3_Init+0x7e>
  {
    Error_Handler();
 80021be:	f000 fa09 	bl	80025d4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80021c2:	2300      	movs	r3, #0
 80021c4:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80021c6:	2300      	movs	r3, #0
 80021c8:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80021ca:	463b      	mov	r3, r7
 80021cc:	4619      	mov	r1, r3
 80021ce:	4806      	ldr	r0, [pc, #24]	; (80021e8 <MX_TIM3_Init+0xa4>)
 80021d0:	f006 fa6e 	bl	80086b0 <HAL_TIMEx_MasterConfigSynchronization>
 80021d4:	4603      	mov	r3, r0
 80021d6:	2b00      	cmp	r3, #0
 80021d8:	d001      	beq.n	80021de <MX_TIM3_Init+0x9a>
  {
    Error_Handler();
 80021da:	f000 f9fb 	bl	80025d4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80021de:	bf00      	nop
 80021e0:	3730      	adds	r7, #48	; 0x30
 80021e2:	46bd      	mov	sp, r7
 80021e4:	bd80      	pop	{r7, pc}
 80021e6:	bf00      	nop
 80021e8:	2000052c 	.word	0x2000052c
 80021ec:	40000400 	.word	0x40000400

080021f0 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 80021f0:	b580      	push	{r7, lr}
 80021f2:	b08c      	sub	sp, #48	; 0x30
 80021f4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 80021f6:	f107 030c 	add.w	r3, r7, #12
 80021fa:	2224      	movs	r2, #36	; 0x24
 80021fc:	2100      	movs	r1, #0
 80021fe:	4618      	mov	r0, r3
 8002200:	f021 fa9f 	bl	8023742 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002204:	463b      	mov	r3, r7
 8002206:	2200      	movs	r2, #0
 8002208:	601a      	str	r2, [r3, #0]
 800220a:	605a      	str	r2, [r3, #4]
 800220c:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 800220e:	4b21      	ldr	r3, [pc, #132]	; (8002294 <MX_TIM4_Init+0xa4>)
 8002210:	4a21      	ldr	r2, [pc, #132]	; (8002298 <MX_TIM4_Init+0xa8>)
 8002212:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8002214:	4b1f      	ldr	r3, [pc, #124]	; (8002294 <MX_TIM4_Init+0xa4>)
 8002216:	2200      	movs	r2, #0
 8002218:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800221a:	4b1e      	ldr	r3, [pc, #120]	; (8002294 <MX_TIM4_Init+0xa4>)
 800221c:	2200      	movs	r2, #0
 800221e:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 400;
 8002220:	4b1c      	ldr	r3, [pc, #112]	; (8002294 <MX_TIM4_Init+0xa4>)
 8002222:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8002226:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002228:	4b1a      	ldr	r3, [pc, #104]	; (8002294 <MX_TIM4_Init+0xa4>)
 800222a:	2200      	movs	r2, #0
 800222c:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800222e:	4b19      	ldr	r3, [pc, #100]	; (8002294 <MX_TIM4_Init+0xa4>)
 8002230:	2280      	movs	r2, #128	; 0x80
 8002232:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8002234:	2303      	movs	r3, #3
 8002236:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8002238:	2300      	movs	r3, #0
 800223a:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 800223c:	2301      	movs	r3, #1
 800223e:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8002240:	2300      	movs	r3, #0
 8002242:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 10;
 8002244:	230a      	movs	r3, #10
 8002246:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8002248:	2300      	movs	r3, #0
 800224a:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 800224c:	2301      	movs	r3, #1
 800224e:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8002250:	2300      	movs	r3, #0
 8002252:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 10;
 8002254:	230a      	movs	r3, #10
 8002256:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 8002258:	f107 030c 	add.w	r3, r7, #12
 800225c:	4619      	mov	r1, r3
 800225e:	480d      	ldr	r0, [pc, #52]	; (8002294 <MX_TIM4_Init+0xa4>)
 8002260:	f005 fd80 	bl	8007d64 <HAL_TIM_Encoder_Init>
 8002264:	4603      	mov	r3, r0
 8002266:	2b00      	cmp	r3, #0
 8002268:	d001      	beq.n	800226e <MX_TIM4_Init+0x7e>
  {
    Error_Handler();
 800226a:	f000 f9b3 	bl	80025d4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800226e:	2300      	movs	r3, #0
 8002270:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002272:	2300      	movs	r3, #0
 8002274:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8002276:	463b      	mov	r3, r7
 8002278:	4619      	mov	r1, r3
 800227a:	4806      	ldr	r0, [pc, #24]	; (8002294 <MX_TIM4_Init+0xa4>)
 800227c:	f006 fa18 	bl	80086b0 <HAL_TIMEx_MasterConfigSynchronization>
 8002280:	4603      	mov	r3, r0
 8002282:	2b00      	cmp	r3, #0
 8002284:	d001      	beq.n	800228a <MX_TIM4_Init+0x9a>
  {
    Error_Handler();
 8002286:	f000 f9a5 	bl	80025d4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 800228a:	bf00      	nop
 800228c:	3730      	adds	r7, #48	; 0x30
 800228e:	46bd      	mov	sp, r7
 8002290:	bd80      	pop	{r7, pc}
 8002292:	bf00      	nop
 8002294:	20000578 	.word	0x20000578
 8002298:	40000800 	.word	0x40000800

0800229c <MX_TIM14_Init>:
  * @brief TIM14 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM14_Init(void)
{
 800229c:	b580      	push	{r7, lr}
 800229e:	af00      	add	r7, sp, #0
  /* USER CODE END TIM14_Init 0 */

  /* USER CODE BEGIN TIM14_Init 1 */

  /* USER CODE END TIM14_Init 1 */
  htim14.Instance = TIM14;
 80022a0:	4b0e      	ldr	r3, [pc, #56]	; (80022dc <MX_TIM14_Init+0x40>)
 80022a2:	4a0f      	ldr	r2, [pc, #60]	; (80022e0 <MX_TIM14_Init+0x44>)
 80022a4:	601a      	str	r2, [r3, #0]
  htim14.Init.Prescaler = 0;
 80022a6:	4b0d      	ldr	r3, [pc, #52]	; (80022dc <MX_TIM14_Init+0x40>)
 80022a8:	2200      	movs	r2, #0
 80022aa:	605a      	str	r2, [r3, #4]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 80022ac:	4b0b      	ldr	r3, [pc, #44]	; (80022dc <MX_TIM14_Init+0x40>)
 80022ae:	2200      	movs	r2, #0
 80022b0:	609a      	str	r2, [r3, #8]
  htim14.Init.Period = 2000;
 80022b2:	4b0a      	ldr	r3, [pc, #40]	; (80022dc <MX_TIM14_Init+0x40>)
 80022b4:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 80022b8:	60da      	str	r2, [r3, #12]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80022ba:	4b08      	ldr	r3, [pc, #32]	; (80022dc <MX_TIM14_Init+0x40>)
 80022bc:	2200      	movs	r2, #0
 80022be:	611a      	str	r2, [r3, #16]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80022c0:	4b06      	ldr	r3, [pc, #24]	; (80022dc <MX_TIM14_Init+0x40>)
 80022c2:	2280      	movs	r2, #128	; 0x80
 80022c4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 80022c6:	4805      	ldr	r0, [pc, #20]	; (80022dc <MX_TIM14_Init+0x40>)
 80022c8:	f005 fc7c 	bl	8007bc4 <HAL_TIM_Base_Init>
 80022cc:	4603      	mov	r3, r0
 80022ce:	2b00      	cmp	r3, #0
 80022d0:	d001      	beq.n	80022d6 <MX_TIM14_Init+0x3a>
  {
    Error_Handler();
 80022d2:	f000 f97f 	bl	80025d4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM14_Init 2 */

  /* USER CODE END TIM14_Init 2 */

}
 80022d6:	bf00      	nop
 80022d8:	bd80      	pop	{r7, pc}
 80022da:	bf00      	nop
 80022dc:	200005c4 	.word	0x200005c4
 80022e0:	40002000 	.word	0x40002000

080022e4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80022e4:	b580      	push	{r7, lr}
 80022e6:	b082      	sub	sp, #8
 80022e8:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 80022ea:	4b14      	ldr	r3, [pc, #80]	; (800233c <MX_DMA_Init+0x58>)
 80022ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022ee:	4a13      	ldr	r2, [pc, #76]	; (800233c <MX_DMA_Init+0x58>)
 80022f0:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80022f4:	6313      	str	r3, [r2, #48]	; 0x30
 80022f6:	4b11      	ldr	r3, [pc, #68]	; (800233c <MX_DMA_Init+0x58>)
 80022f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022fa:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80022fe:	607b      	str	r3, [r7, #4]
 8002300:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 0, 0);
 8002302:	2200      	movs	r2, #0
 8002304:	2100      	movs	r1, #0
 8002306:	2039      	movs	r0, #57	; 0x39
 8002308:	f001 f93f 	bl	800358a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
 800230c:	2039      	movs	r0, #57	; 0x39
 800230e:	f001 f958 	bl	80035c2 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream4_IRQn, 0, 0);
 8002312:	2200      	movs	r2, #0
 8002314:	2100      	movs	r1, #0
 8002316:	203c      	movs	r0, #60	; 0x3c
 8002318:	f001 f937 	bl	800358a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream4_IRQn);
 800231c:	203c      	movs	r0, #60	; 0x3c
 800231e:	f001 f950 	bl	80035c2 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream5_IRQn, 0, 0);
 8002322:	2200      	movs	r2, #0
 8002324:	2100      	movs	r1, #0
 8002326:	2044      	movs	r0, #68	; 0x44
 8002328:	f001 f92f 	bl	800358a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream5_IRQn);
 800232c:	2044      	movs	r0, #68	; 0x44
 800232e:	f001 f948 	bl	80035c2 <HAL_NVIC_EnableIRQ>

}
 8002332:	bf00      	nop
 8002334:	3708      	adds	r7, #8
 8002336:	46bd      	mov	sp, r7
 8002338:	bd80      	pop	{r7, pc}
 800233a:	bf00      	nop
 800233c:	40023800 	.word	0x40023800

08002340 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002340:	b580      	push	{r7, lr}
 8002342:	b08c      	sub	sp, #48	; 0x30
 8002344:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002346:	f107 031c 	add.w	r3, r7, #28
 800234a:	2200      	movs	r2, #0
 800234c:	601a      	str	r2, [r3, #0]
 800234e:	605a      	str	r2, [r3, #4]
 8002350:	609a      	str	r2, [r3, #8]
 8002352:	60da      	str	r2, [r3, #12]
 8002354:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002356:	4b58      	ldr	r3, [pc, #352]	; (80024b8 <MX_GPIO_Init+0x178>)
 8002358:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800235a:	4a57      	ldr	r2, [pc, #348]	; (80024b8 <MX_GPIO_Init+0x178>)
 800235c:	f043 0310 	orr.w	r3, r3, #16
 8002360:	6313      	str	r3, [r2, #48]	; 0x30
 8002362:	4b55      	ldr	r3, [pc, #340]	; (80024b8 <MX_GPIO_Init+0x178>)
 8002364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002366:	f003 0310 	and.w	r3, r3, #16
 800236a:	61bb      	str	r3, [r7, #24]
 800236c:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800236e:	4b52      	ldr	r3, [pc, #328]	; (80024b8 <MX_GPIO_Init+0x178>)
 8002370:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002372:	4a51      	ldr	r2, [pc, #324]	; (80024b8 <MX_GPIO_Init+0x178>)
 8002374:	f043 0320 	orr.w	r3, r3, #32
 8002378:	6313      	str	r3, [r2, #48]	; 0x30
 800237a:	4b4f      	ldr	r3, [pc, #316]	; (80024b8 <MX_GPIO_Init+0x178>)
 800237c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800237e:	f003 0320 	and.w	r3, r3, #32
 8002382:	617b      	str	r3, [r7, #20]
 8002384:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002386:	4b4c      	ldr	r3, [pc, #304]	; (80024b8 <MX_GPIO_Init+0x178>)
 8002388:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800238a:	4a4b      	ldr	r2, [pc, #300]	; (80024b8 <MX_GPIO_Init+0x178>)
 800238c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002390:	6313      	str	r3, [r2, #48]	; 0x30
 8002392:	4b49      	ldr	r3, [pc, #292]	; (80024b8 <MX_GPIO_Init+0x178>)
 8002394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002396:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800239a:	613b      	str	r3, [r7, #16]
 800239c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800239e:	4b46      	ldr	r3, [pc, #280]	; (80024b8 <MX_GPIO_Init+0x178>)
 80023a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023a2:	4a45      	ldr	r2, [pc, #276]	; (80024b8 <MX_GPIO_Init+0x178>)
 80023a4:	f043 0304 	orr.w	r3, r3, #4
 80023a8:	6313      	str	r3, [r2, #48]	; 0x30
 80023aa:	4b43      	ldr	r3, [pc, #268]	; (80024b8 <MX_GPIO_Init+0x178>)
 80023ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023ae:	f003 0304 	and.w	r3, r3, #4
 80023b2:	60fb      	str	r3, [r7, #12]
 80023b4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80023b6:	4b40      	ldr	r3, [pc, #256]	; (80024b8 <MX_GPIO_Init+0x178>)
 80023b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023ba:	4a3f      	ldr	r2, [pc, #252]	; (80024b8 <MX_GPIO_Init+0x178>)
 80023bc:	f043 0301 	orr.w	r3, r3, #1
 80023c0:	6313      	str	r3, [r2, #48]	; 0x30
 80023c2:	4b3d      	ldr	r3, [pc, #244]	; (80024b8 <MX_GPIO_Init+0x178>)
 80023c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023c6:	f003 0301 	and.w	r3, r3, #1
 80023ca:	60bb      	str	r3, [r7, #8]
 80023cc:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80023ce:	4b3a      	ldr	r3, [pc, #232]	; (80024b8 <MX_GPIO_Init+0x178>)
 80023d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023d2:	4a39      	ldr	r2, [pc, #228]	; (80024b8 <MX_GPIO_Init+0x178>)
 80023d4:	f043 0308 	orr.w	r3, r3, #8
 80023d8:	6313      	str	r3, [r2, #48]	; 0x30
 80023da:	4b37      	ldr	r3, [pc, #220]	; (80024b8 <MX_GPIO_Init+0x178>)
 80023dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023de:	f003 0308 	and.w	r3, r3, #8
 80023e2:	607b      	str	r3, [r7, #4]
 80023e4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80023e6:	4b34      	ldr	r3, [pc, #208]	; (80024b8 <MX_GPIO_Init+0x178>)
 80023e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023ea:	4a33      	ldr	r2, [pc, #204]	; (80024b8 <MX_GPIO_Init+0x178>)
 80023ec:	f043 0302 	orr.w	r3, r3, #2
 80023f0:	6313      	str	r3, [r2, #48]	; 0x30
 80023f2:	4b31      	ldr	r3, [pc, #196]	; (80024b8 <MX_GPIO_Init+0x178>)
 80023f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023f6:	f003 0302 	and.w	r3, r3, #2
 80023fa:	603b      	str	r3, [r7, #0]
 80023fc:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
 80023fe:	2200      	movs	r2, #0
 8002400:	2108      	movs	r1, #8
 8002402:	482e      	ldr	r0, [pc, #184]	; (80024bc <MX_GPIO_Init+0x17c>)
 8002404:	f002 f82a 	bl	800445c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOF, LED2_Pin|LED3_Pin, GPIO_PIN_RESET);
 8002408:	2200      	movs	r2, #0
 800240a:	f44f 4190 	mov.w	r1, #18432	; 0x4800
 800240e:	482c      	ldr	r0, [pc, #176]	; (80024c0 <MX_GPIO_Init+0x180>)
 8002410:	f002 f824 	bl	800445c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, RST_Pin|D_C_Pin, GPIO_PIN_RESET);
 8002414:	2200      	movs	r2, #0
 8002416:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800241a:	482a      	ldr	r0, [pc, #168]	; (80024c4 <MX_GPIO_Init+0x184>)
 800241c:	f002 f81e 	bl	800445c <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LeftButton_Pin Right_Button_Pin */
  GPIO_InitStruct.Pin = LeftButton_Pin|Right_Button_Pin;
 8002420:	230c      	movs	r3, #12
 8002422:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002424:	2300      	movs	r3, #0
 8002426:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002428:	2300      	movs	r3, #0
 800242a:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800242c:	f107 031c 	add.w	r3, r7, #28
 8002430:	4619      	mov	r1, r3
 8002432:	4823      	ldr	r0, [pc, #140]	; (80024c0 <MX_GPIO_Init+0x180>)
 8002434:	f001 fd42 	bl	8003ebc <HAL_GPIO_Init>

  /*Configure GPIO pin : PC3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002438:	2308      	movs	r3, #8
 800243a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800243c:	2302      	movs	r3, #2
 800243e:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002440:	2300      	movs	r3, #0
 8002442:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002444:	2303      	movs	r3, #3
 8002446:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002448:	2305      	movs	r3, #5
 800244a:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800244c:	f107 031c 	add.w	r3, r7, #28
 8002450:	4619      	mov	r1, r3
 8002452:	481c      	ldr	r0, [pc, #112]	; (80024c4 <MX_GPIO_Init+0x184>)
 8002454:	f001 fd32 	bl	8003ebc <HAL_GPIO_Init>

  /*Configure GPIO pin : LED1_Pin */
  GPIO_InitStruct.Pin = LED1_Pin;
 8002458:	2308      	movs	r3, #8
 800245a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800245c:	2301      	movs	r3, #1
 800245e:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002460:	2300      	movs	r3, #0
 8002462:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002464:	2300      	movs	r3, #0
 8002466:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(LED1_GPIO_Port, &GPIO_InitStruct);
 8002468:	f107 031c 	add.w	r3, r7, #28
 800246c:	4619      	mov	r1, r3
 800246e:	4813      	ldr	r0, [pc, #76]	; (80024bc <MX_GPIO_Init+0x17c>)
 8002470:	f001 fd24 	bl	8003ebc <HAL_GPIO_Init>

  /*Configure GPIO pins : LED2_Pin LED3_Pin */
  GPIO_InitStruct.Pin = LED2_Pin|LED3_Pin;
 8002474:	f44f 4390 	mov.w	r3, #18432	; 0x4800
 8002478:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800247a:	2301      	movs	r3, #1
 800247c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800247e:	2300      	movs	r3, #0
 8002480:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002482:	2300      	movs	r3, #0
 8002484:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002486:	f107 031c 	add.w	r3, r7, #28
 800248a:	4619      	mov	r1, r3
 800248c:	480c      	ldr	r0, [pc, #48]	; (80024c0 <MX_GPIO_Init+0x180>)
 800248e:	f001 fd15 	bl	8003ebc <HAL_GPIO_Init>

  /*Configure GPIO pins : RST_Pin D_C_Pin */
  GPIO_InitStruct.Pin = RST_Pin|D_C_Pin;
 8002492:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002496:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002498:	2301      	movs	r3, #1
 800249a:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800249c:	2300      	movs	r3, #0
 800249e:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80024a0:	2300      	movs	r3, #0
 80024a2:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80024a4:	f107 031c 	add.w	r3, r7, #28
 80024a8:	4619      	mov	r1, r3
 80024aa:	4806      	ldr	r0, [pc, #24]	; (80024c4 <MX_GPIO_Init+0x184>)
 80024ac:	f001 fd06 	bl	8003ebc <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80024b0:	bf00      	nop
 80024b2:	3730      	adds	r7, #48	; 0x30
 80024b4:	46bd      	mov	sp, r7
 80024b6:	bd80      	pop	{r7, pc}
 80024b8:	40023800 	.word	0x40023800
 80024bc:	40020000 	.word	0x40020000
 80024c0:	40021400 	.word	0x40021400
 80024c4:	40020800 	.word	0x40020800

080024c8 <crement_select>:

/* USER CODE BEGIN 4 */
extern void touchgfxSignalVSync(void);

void crement_select(int way){
 80024c8:	b480      	push	{r7}
 80024ca:	b083      	sub	sp, #12
 80024cc:	af00      	add	r7, sp, #0
 80024ce:	6078      	str	r0, [r7, #4]
	if(select == 0 && (way == -1)){select = 2;}
 80024d0:	4b11      	ldr	r3, [pc, #68]	; (8002518 <crement_select+0x50>)
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	2b00      	cmp	r3, #0
 80024d6:	d107      	bne.n	80024e8 <crement_select+0x20>
 80024d8:	687b      	ldr	r3, [r7, #4]
 80024da:	f1b3 3fff 	cmp.w	r3, #4294967295
 80024de:	d103      	bne.n	80024e8 <crement_select+0x20>
 80024e0:	4b0d      	ldr	r3, [pc, #52]	; (8002518 <crement_select+0x50>)
 80024e2:	2202      	movs	r2, #2
 80024e4:	601a      	str	r2, [r3, #0]
 80024e6:	e011      	b.n	800250c <crement_select+0x44>
	else if(select == 2 && (way == 1)){select = 0;}
 80024e8:	4b0b      	ldr	r3, [pc, #44]	; (8002518 <crement_select+0x50>)
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	2b02      	cmp	r3, #2
 80024ee:	d106      	bne.n	80024fe <crement_select+0x36>
 80024f0:	687b      	ldr	r3, [r7, #4]
 80024f2:	2b01      	cmp	r3, #1
 80024f4:	d103      	bne.n	80024fe <crement_select+0x36>
 80024f6:	4b08      	ldr	r3, [pc, #32]	; (8002518 <crement_select+0x50>)
 80024f8:	2200      	movs	r2, #0
 80024fa:	601a      	str	r2, [r3, #0]
 80024fc:	e006      	b.n	800250c <crement_select+0x44>
	else select = select + way;
 80024fe:	4b06      	ldr	r3, [pc, #24]	; (8002518 <crement_select+0x50>)
 8002500:	681a      	ldr	r2, [r3, #0]
 8002502:	687b      	ldr	r3, [r7, #4]
 8002504:	4413      	add	r3, r2
 8002506:	4a04      	ldr	r2, [pc, #16]	; (8002518 <crement_select+0x50>)
 8002508:	6013      	str	r3, [r2, #0]
}
 800250a:	bf00      	nop
 800250c:	bf00      	nop
 800250e:	370c      	adds	r7, #12
 8002510:	46bd      	mov	sp, r7
 8002512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002516:	4770      	bx	lr
 8002518:	20000610 	.word	0x20000610

0800251c <HAL_TIM_PeriodElapsedCallback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
}

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 800251c:	b580      	push	{r7, lr}
 800251e:	b082      	sub	sp, #8
 8002520:	af00      	add	r7, sp, #0
 8002522:	6078      	str	r0, [r7, #4]
	if (htim->Instance == TIM2) {
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	681b      	ldr	r3, [r3, #0]
 8002528:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800252c:	d101      	bne.n	8002532 <HAL_TIM_PeriodElapsedCallback+0x16>
		touchgfxSignalVSync();
 800252e:	f00b ff02 	bl	800e336 <touchgfxSignalVSync>
	}
  // Check which version of the timer triggered this callback and toggle LED
  if (htim == &htim14){
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	4a23      	ldr	r2, [pc, #140]	; (80025c4 <HAL_TIM_PeriodElapsedCallback+0xa8>)
 8002536:	4293      	cmp	r3, r2
 8002538:	d140      	bne.n	80025bc <HAL_TIM_PeriodElapsedCallback+0xa0>
	if((HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_2) == 1)){
 800253a:	2104      	movs	r1, #4
 800253c:	4822      	ldr	r0, [pc, #136]	; (80025c8 <HAL_TIM_PeriodElapsedCallback+0xac>)
 800253e:	f001 ff75 	bl	800442c <HAL_GPIO_ReadPin>
 8002542:	4603      	mov	r3, r0
 8002544:	2b01      	cmp	r3, #1
 8002546:	d119      	bne.n	800257c <HAL_TIM_PeriodElapsedCallback+0x60>
		ConfLvl[0]++;
 8002548:	4b20      	ldr	r3, [pc, #128]	; (80025cc <HAL_TIM_PeriodElapsedCallback+0xb0>)
 800254a:	681b      	ldr	r3, [r3, #0]
 800254c:	3301      	adds	r3, #1
 800254e:	4a1f      	ldr	r2, [pc, #124]	; (80025cc <HAL_TIM_PeriodElapsedCallback+0xb0>)
 8002550:	6013      	str	r3, [r2, #0]
		if(ConfLvl[0] > ConfT){
 8002552:	4b1e      	ldr	r3, [pc, #120]	; (80025cc <HAL_TIM_PeriodElapsedCallback+0xb0>)
 8002554:	681a      	ldr	r2, [r3, #0]
 8002556:	4b1e      	ldr	r3, [pc, #120]	; (80025d0 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 8002558:	681b      	ldr	r3, [r3, #0]
 800255a:	429a      	cmp	r2, r3
 800255c:	dd0e      	ble.n	800257c <HAL_TIM_PeriodElapsedCallback+0x60>
			while(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_2) == 1)
 800255e:	e002      	b.n	8002566 <HAL_TIM_PeriodElapsedCallback+0x4a>
			ConfLvl[0] = 0;
 8002560:	4b1a      	ldr	r3, [pc, #104]	; (80025cc <HAL_TIM_PeriodElapsedCallback+0xb0>)
 8002562:	2200      	movs	r2, #0
 8002564:	601a      	str	r2, [r3, #0]
			while(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_2) == 1)
 8002566:	2104      	movs	r1, #4
 8002568:	4817      	ldr	r0, [pc, #92]	; (80025c8 <HAL_TIM_PeriodElapsedCallback+0xac>)
 800256a:	f001 ff5f 	bl	800442c <HAL_GPIO_ReadPin>
 800256e:	4603      	mov	r3, r0
 8002570:	2b01      	cmp	r3, #1
 8002572:	d0f5      	beq.n	8002560 <HAL_TIM_PeriodElapsedCallback+0x44>
			crement_select(-1);
 8002574:	f04f 30ff 	mov.w	r0, #4294967295
 8002578:	f7ff ffa6 	bl	80024c8 <crement_select>
		}
	}
  	if(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_3) == 1){
 800257c:	2108      	movs	r1, #8
 800257e:	4812      	ldr	r0, [pc, #72]	; (80025c8 <HAL_TIM_PeriodElapsedCallback+0xac>)
 8002580:	f001 ff54 	bl	800442c <HAL_GPIO_ReadPin>
 8002584:	4603      	mov	r3, r0
 8002586:	2b01      	cmp	r3, #1
 8002588:	d118      	bne.n	80025bc <HAL_TIM_PeriodElapsedCallback+0xa0>
		ConfLvl[1]++;
 800258a:	4b10      	ldr	r3, [pc, #64]	; (80025cc <HAL_TIM_PeriodElapsedCallback+0xb0>)
 800258c:	685b      	ldr	r3, [r3, #4]
 800258e:	3301      	adds	r3, #1
 8002590:	4a0e      	ldr	r2, [pc, #56]	; (80025cc <HAL_TIM_PeriodElapsedCallback+0xb0>)
 8002592:	6053      	str	r3, [r2, #4]
		if(ConfLvl[1] > ConfT){
 8002594:	4b0d      	ldr	r3, [pc, #52]	; (80025cc <HAL_TIM_PeriodElapsedCallback+0xb0>)
 8002596:	685a      	ldr	r2, [r3, #4]
 8002598:	4b0d      	ldr	r3, [pc, #52]	; (80025d0 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 800259a:	681b      	ldr	r3, [r3, #0]
 800259c:	429a      	cmp	r2, r3
 800259e:	dd0d      	ble.n	80025bc <HAL_TIM_PeriodElapsedCallback+0xa0>
			while(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_3) == 1)
 80025a0:	e002      	b.n	80025a8 <HAL_TIM_PeriodElapsedCallback+0x8c>
			ConfLvl[1] = 0;
 80025a2:	4b0a      	ldr	r3, [pc, #40]	; (80025cc <HAL_TIM_PeriodElapsedCallback+0xb0>)
 80025a4:	2200      	movs	r2, #0
 80025a6:	605a      	str	r2, [r3, #4]
			while(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_3) == 1)
 80025a8:	2108      	movs	r1, #8
 80025aa:	4807      	ldr	r0, [pc, #28]	; (80025c8 <HAL_TIM_PeriodElapsedCallback+0xac>)
 80025ac:	f001 ff3e 	bl	800442c <HAL_GPIO_ReadPin>
 80025b0:	4603      	mov	r3, r0
 80025b2:	2b01      	cmp	r3, #1
 80025b4:	d0f5      	beq.n	80025a2 <HAL_TIM_PeriodElapsedCallback+0x86>
			crement_select(1);
 80025b6:	2001      	movs	r0, #1
 80025b8:	f7ff ff86 	bl	80024c8 <crement_select>
		}
  	}
  }

}
 80025bc:	bf00      	nop
 80025be:	3708      	adds	r7, #8
 80025c0:	46bd      	mov	sp, r7
 80025c2:	bd80      	pop	{r7, pc}
 80025c4:	200005c4 	.word	0x200005c4
 80025c8:	40021400 	.word	0x40021400
 80025cc:	20000614 	.word	0x20000614
 80025d0:	20000004 	.word	0x20000004

080025d4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80025d4:	b480      	push	{r7}
 80025d6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80025d8:	b672      	cpsid	i
}
 80025da:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80025dc:	e7fe      	b.n	80025dc <Error_Handler+0x8>
	...

080025e0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80025e0:	b580      	push	{r7, lr}
 80025e2:	b082      	sub	sp, #8
 80025e4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 80025e6:	4b12      	ldr	r3, [pc, #72]	; (8002630 <HAL_MspInit+0x50>)
 80025e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025ea:	4a11      	ldr	r2, [pc, #68]	; (8002630 <HAL_MspInit+0x50>)
 80025ec:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80025f0:	6413      	str	r3, [r2, #64]	; 0x40
 80025f2:	4b0f      	ldr	r3, [pc, #60]	; (8002630 <HAL_MspInit+0x50>)
 80025f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025f6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80025fa:	607b      	str	r3, [r7, #4]
 80025fc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80025fe:	4b0c      	ldr	r3, [pc, #48]	; (8002630 <HAL_MspInit+0x50>)
 8002600:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002602:	4a0b      	ldr	r2, [pc, #44]	; (8002630 <HAL_MspInit+0x50>)
 8002604:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002608:	6453      	str	r3, [r2, #68]	; 0x44
 800260a:	4b09      	ldr	r3, [pc, #36]	; (8002630 <HAL_MspInit+0x50>)
 800260c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800260e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002612:	603b      	str	r3, [r7, #0]
 8002614:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/

  /* Peripheral interrupt init */
  /* RCC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(RCC_IRQn, 0, 0);
 8002616:	2200      	movs	r2, #0
 8002618:	2100      	movs	r1, #0
 800261a:	2005      	movs	r0, #5
 800261c:	f000 ffb5 	bl	800358a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(RCC_IRQn);
 8002620:	2005      	movs	r0, #5
 8002622:	f000 ffce 	bl	80035c2 <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002626:	bf00      	nop
 8002628:	3708      	adds	r7, #8
 800262a:	46bd      	mov	sp, r7
 800262c:	bd80      	pop	{r7, pc}
 800262e:	bf00      	nop
 8002630:	40023800 	.word	0x40023800

08002634 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8002634:	b480      	push	{r7}
 8002636:	b085      	sub	sp, #20
 8002638:	af00      	add	r7, sp, #0
 800263a:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 800263c:	687b      	ldr	r3, [r7, #4]
 800263e:	681b      	ldr	r3, [r3, #0]
 8002640:	4a0a      	ldr	r2, [pc, #40]	; (800266c <HAL_CRC_MspInit+0x38>)
 8002642:	4293      	cmp	r3, r2
 8002644:	d10b      	bne.n	800265e <HAL_CRC_MspInit+0x2a>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002646:	4b0a      	ldr	r3, [pc, #40]	; (8002670 <HAL_CRC_MspInit+0x3c>)
 8002648:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800264a:	4a09      	ldr	r2, [pc, #36]	; (8002670 <HAL_CRC_MspInit+0x3c>)
 800264c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002650:	6313      	str	r3, [r2, #48]	; 0x30
 8002652:	4b07      	ldr	r3, [pc, #28]	; (8002670 <HAL_CRC_MspInit+0x3c>)
 8002654:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002656:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800265a:	60fb      	str	r3, [r7, #12]
 800265c:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800265e:	bf00      	nop
 8002660:	3714      	adds	r7, #20
 8002662:	46bd      	mov	sp, r7
 8002664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002668:	4770      	bx	lr
 800266a:	bf00      	nop
 800266c:	40023000 	.word	0x40023000
 8002670:	40023800 	.word	0x40023800

08002674 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002674:	b580      	push	{r7, lr}
 8002676:	b0ac      	sub	sp, #176	; 0xb0
 8002678:	af00      	add	r7, sp, #0
 800267a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800267c:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8002680:	2200      	movs	r2, #0
 8002682:	601a      	str	r2, [r3, #0]
 8002684:	605a      	str	r2, [r3, #4]
 8002686:	609a      	str	r2, [r3, #8]
 8002688:	60da      	str	r2, [r3, #12]
 800268a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800268c:	f107 0318 	add.w	r3, r7, #24
 8002690:	2284      	movs	r2, #132	; 0x84
 8002692:	2100      	movs	r1, #0
 8002694:	4618      	mov	r0, r3
 8002696:	f021 f854 	bl	8023742 <memset>
  if(hi2c->Instance==I2C1)
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	681b      	ldr	r3, [r3, #0]
 800269e:	4a43      	ldr	r2, [pc, #268]	; (80027ac <HAL_I2C_MspInit+0x138>)
 80026a0:	4293      	cmp	r3, r2
 80026a2:	d13c      	bne.n	800271e <HAL_I2C_MspInit+0xaa>

  /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 80026a4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80026a8:	61bb      	str	r3, [r7, #24]
    PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 80026aa:	2300      	movs	r3, #0
 80026ac:	67fb      	str	r3, [r7, #124]	; 0x7c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80026ae:	f107 0318 	add.w	r3, r7, #24
 80026b2:	4618      	mov	r0, r3
 80026b4:	f003 fad2 	bl	8005c5c <HAL_RCCEx_PeriphCLKConfig>
 80026b8:	4603      	mov	r3, r0
 80026ba:	2b00      	cmp	r3, #0
 80026bc:	d001      	beq.n	80026c2 <HAL_I2C_MspInit+0x4e>
    {
      Error_Handler();
 80026be:	f7ff ff89 	bl	80025d4 <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80026c2:	4b3b      	ldr	r3, [pc, #236]	; (80027b0 <HAL_I2C_MspInit+0x13c>)
 80026c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80026c6:	4a3a      	ldr	r2, [pc, #232]	; (80027b0 <HAL_I2C_MspInit+0x13c>)
 80026c8:	f043 0302 	orr.w	r3, r3, #2
 80026cc:	6313      	str	r3, [r2, #48]	; 0x30
 80026ce:	4b38      	ldr	r3, [pc, #224]	; (80027b0 <HAL_I2C_MspInit+0x13c>)
 80026d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80026d2:	f003 0302 	and.w	r3, r3, #2
 80026d6:	617b      	str	r3, [r7, #20]
 80026d8:	697b      	ldr	r3, [r7, #20]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80026da:	23c0      	movs	r3, #192	; 0xc0
 80026dc:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80026e0:	2312      	movs	r3, #18
 80026e2:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80026e6:	2301      	movs	r3, #1
 80026e8:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026ec:	2303      	movs	r3, #3
 80026ee:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80026f2:	2304      	movs	r3, #4
 80026f4:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026f8:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 80026fc:	4619      	mov	r1, r3
 80026fe:	482d      	ldr	r0, [pc, #180]	; (80027b4 <HAL_I2C_MspInit+0x140>)
 8002700:	f001 fbdc 	bl	8003ebc <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002704:	4b2a      	ldr	r3, [pc, #168]	; (80027b0 <HAL_I2C_MspInit+0x13c>)
 8002706:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002708:	4a29      	ldr	r2, [pc, #164]	; (80027b0 <HAL_I2C_MspInit+0x13c>)
 800270a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800270e:	6413      	str	r3, [r2, #64]	; 0x40
 8002710:	4b27      	ldr	r3, [pc, #156]	; (80027b0 <HAL_I2C_MspInit+0x13c>)
 8002712:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002714:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002718:	613b      	str	r3, [r7, #16]
 800271a:	693b      	ldr	r3, [r7, #16]
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 800271c:	e041      	b.n	80027a2 <HAL_I2C_MspInit+0x12e>
  else if(hi2c->Instance==I2C2)
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	681b      	ldr	r3, [r3, #0]
 8002722:	4a25      	ldr	r2, [pc, #148]	; (80027b8 <HAL_I2C_MspInit+0x144>)
 8002724:	4293      	cmp	r3, r2
 8002726:	d13c      	bne.n	80027a2 <HAL_I2C_MspInit+0x12e>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8002728:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800272c:	61bb      	str	r3, [r7, #24]
    PeriphClkInitStruct.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 800272e:	2300      	movs	r3, #0
 8002730:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002734:	f107 0318 	add.w	r3, r7, #24
 8002738:	4618      	mov	r0, r3
 800273a:	f003 fa8f 	bl	8005c5c <HAL_RCCEx_PeriphCLKConfig>
 800273e:	4603      	mov	r3, r0
 8002740:	2b00      	cmp	r3, #0
 8002742:	d001      	beq.n	8002748 <HAL_I2C_MspInit+0xd4>
      Error_Handler();
 8002744:	f7ff ff46 	bl	80025d4 <Error_Handler>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002748:	4b19      	ldr	r3, [pc, #100]	; (80027b0 <HAL_I2C_MspInit+0x13c>)
 800274a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800274c:	4a18      	ldr	r2, [pc, #96]	; (80027b0 <HAL_I2C_MspInit+0x13c>)
 800274e:	f043 0320 	orr.w	r3, r3, #32
 8002752:	6313      	str	r3, [r2, #48]	; 0x30
 8002754:	4b16      	ldr	r3, [pc, #88]	; (80027b0 <HAL_I2C_MspInit+0x13c>)
 8002756:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002758:	f003 0320 	and.w	r3, r3, #32
 800275c:	60fb      	str	r3, [r7, #12]
 800275e:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002760:	2303      	movs	r3, #3
 8002762:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002766:	2312      	movs	r3, #18
 8002768:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800276c:	2300      	movs	r3, #0
 800276e:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002772:	2303      	movs	r3, #3
 8002774:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8002778:	2304      	movs	r3, #4
 800277a:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800277e:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8002782:	4619      	mov	r1, r3
 8002784:	480d      	ldr	r0, [pc, #52]	; (80027bc <HAL_I2C_MspInit+0x148>)
 8002786:	f001 fb99 	bl	8003ebc <HAL_GPIO_Init>
    __HAL_RCC_I2C2_CLK_ENABLE();
 800278a:	4b09      	ldr	r3, [pc, #36]	; (80027b0 <HAL_I2C_MspInit+0x13c>)
 800278c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800278e:	4a08      	ldr	r2, [pc, #32]	; (80027b0 <HAL_I2C_MspInit+0x13c>)
 8002790:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002794:	6413      	str	r3, [r2, #64]	; 0x40
 8002796:	4b06      	ldr	r3, [pc, #24]	; (80027b0 <HAL_I2C_MspInit+0x13c>)
 8002798:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800279a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800279e:	60bb      	str	r3, [r7, #8]
 80027a0:	68bb      	ldr	r3, [r7, #8]
}
 80027a2:	bf00      	nop
 80027a4:	37b0      	adds	r7, #176	; 0xb0
 80027a6:	46bd      	mov	sp, r7
 80027a8:	bd80      	pop	{r7, pc}
 80027aa:	bf00      	nop
 80027ac:	40005400 	.word	0x40005400
 80027b0:	40023800 	.word	0x40023800
 80027b4:	40020400 	.word	0x40020400
 80027b8:	40005800 	.word	0x40005800
 80027bc:	40021400 	.word	0x40021400

080027c0 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 80027c0:	b580      	push	{r7, lr}
 80027c2:	b082      	sub	sp, #8
 80027c4:	af00      	add	r7, sp, #0
 80027c6:	6078      	str	r0, [r7, #4]
  if(hi2c->Instance==I2C1)
 80027c8:	687b      	ldr	r3, [r7, #4]
 80027ca:	681b      	ldr	r3, [r3, #0]
 80027cc:	4a14      	ldr	r2, [pc, #80]	; (8002820 <HAL_I2C_MspDeInit+0x60>)
 80027ce:	4293      	cmp	r3, r2
 80027d0:	d10e      	bne.n	80027f0 <HAL_I2C_MspDeInit+0x30>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 80027d2:	4b14      	ldr	r3, [pc, #80]	; (8002824 <HAL_I2C_MspDeInit+0x64>)
 80027d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80027d6:	4a13      	ldr	r2, [pc, #76]	; (8002824 <HAL_I2C_MspDeInit+0x64>)
 80027d8:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80027dc:	6413      	str	r3, [r2, #64]	; 0x40

    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 80027de:	2140      	movs	r1, #64	; 0x40
 80027e0:	4811      	ldr	r0, [pc, #68]	; (8002828 <HAL_I2C_MspDeInit+0x68>)
 80027e2:	f001 fd17 	bl	8004214 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_7);
 80027e6:	2180      	movs	r1, #128	; 0x80
 80027e8:	480f      	ldr	r0, [pc, #60]	; (8002828 <HAL_I2C_MspDeInit+0x68>)
 80027ea:	f001 fd13 	bl	8004214 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C2_MspDeInit 1 */

  /* USER CODE END I2C2_MspDeInit 1 */
  }

}
 80027ee:	e012      	b.n	8002816 <HAL_I2C_MspDeInit+0x56>
  else if(hi2c->Instance==I2C2)
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	681b      	ldr	r3, [r3, #0]
 80027f4:	4a0d      	ldr	r2, [pc, #52]	; (800282c <HAL_I2C_MspDeInit+0x6c>)
 80027f6:	4293      	cmp	r3, r2
 80027f8:	d10d      	bne.n	8002816 <HAL_I2C_MspDeInit+0x56>
    __HAL_RCC_I2C2_CLK_DISABLE();
 80027fa:	4b0a      	ldr	r3, [pc, #40]	; (8002824 <HAL_I2C_MspDeInit+0x64>)
 80027fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80027fe:	4a09      	ldr	r2, [pc, #36]	; (8002824 <HAL_I2C_MspDeInit+0x64>)
 8002800:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8002804:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0);
 8002806:	2101      	movs	r1, #1
 8002808:	4809      	ldr	r0, [pc, #36]	; (8002830 <HAL_I2C_MspDeInit+0x70>)
 800280a:	f001 fd03 	bl	8004214 <HAL_GPIO_DeInit>
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_1);
 800280e:	2102      	movs	r1, #2
 8002810:	4807      	ldr	r0, [pc, #28]	; (8002830 <HAL_I2C_MspDeInit+0x70>)
 8002812:	f001 fcff 	bl	8004214 <HAL_GPIO_DeInit>
}
 8002816:	bf00      	nop
 8002818:	3708      	adds	r7, #8
 800281a:	46bd      	mov	sp, r7
 800281c:	bd80      	pop	{r7, pc}
 800281e:	bf00      	nop
 8002820:	40005400 	.word	0x40005400
 8002824:	40023800 	.word	0x40023800
 8002828:	40020400 	.word	0x40020400
 800282c:	40005800 	.word	0x40005800
 8002830:	40021400 	.word	0x40021400

08002834 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002834:	b580      	push	{r7, lr}
 8002836:	b08a      	sub	sp, #40	; 0x28
 8002838:	af00      	add	r7, sp, #0
 800283a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800283c:	f107 0314 	add.w	r3, r7, #20
 8002840:	2200      	movs	r2, #0
 8002842:	601a      	str	r2, [r3, #0]
 8002844:	605a      	str	r2, [r3, #4]
 8002846:	609a      	str	r2, [r3, #8]
 8002848:	60da      	str	r2, [r3, #12]
 800284a:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI5)
 800284c:	687b      	ldr	r3, [r7, #4]
 800284e:	681b      	ldr	r3, [r3, #0]
 8002850:	4a33      	ldr	r2, [pc, #204]	; (8002920 <HAL_SPI_MspInit+0xec>)
 8002852:	4293      	cmp	r3, r2
 8002854:	d15f      	bne.n	8002916 <HAL_SPI_MspInit+0xe2>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002856:	4b33      	ldr	r3, [pc, #204]	; (8002924 <HAL_SPI_MspInit+0xf0>)
 8002858:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800285a:	4a32      	ldr	r2, [pc, #200]	; (8002924 <HAL_SPI_MspInit+0xf0>)
 800285c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8002860:	6453      	str	r3, [r2, #68]	; 0x44
 8002862:	4b30      	ldr	r3, [pc, #192]	; (8002924 <HAL_SPI_MspInit+0xf0>)
 8002864:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002866:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800286a:	613b      	str	r3, [r7, #16]
 800286c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 800286e:	4b2d      	ldr	r3, [pc, #180]	; (8002924 <HAL_SPI_MspInit+0xf0>)
 8002870:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002872:	4a2c      	ldr	r2, [pc, #176]	; (8002924 <HAL_SPI_MspInit+0xf0>)
 8002874:	f043 0320 	orr.w	r3, r3, #32
 8002878:	6313      	str	r3, [r2, #48]	; 0x30
 800287a:	4b2a      	ldr	r3, [pc, #168]	; (8002924 <HAL_SPI_MspInit+0xf0>)
 800287c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800287e:	f003 0320 	and.w	r3, r3, #32
 8002882:	60fb      	str	r3, [r7, #12]
 8002884:	68fb      	ldr	r3, [r7, #12]
    /**SPI5 GPIO Configuration
    PF6     ------> SPI5_NSS
    PF7     ------> SPI5_SCK
    PF9     ------> SPI5_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_9;
 8002886:	f44f 7330 	mov.w	r3, #704	; 0x2c0
 800288a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800288c:	2302      	movs	r3, #2
 800288e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002890:	2300      	movs	r3, #0
 8002892:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002894:	2303      	movs	r3, #3
 8002896:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002898:	2305      	movs	r3, #5
 800289a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800289c:	f107 0314 	add.w	r3, r7, #20
 80028a0:	4619      	mov	r1, r3
 80028a2:	4821      	ldr	r0, [pc, #132]	; (8002928 <HAL_SPI_MspInit+0xf4>)
 80028a4:	f001 fb0a 	bl	8003ebc <HAL_GPIO_Init>

    /* SPI5 DMA Init */
    /* SPI5_TX Init */
    hdma_spi5_tx.Instance = DMA2_Stream4;
 80028a8:	4b20      	ldr	r3, [pc, #128]	; (800292c <HAL_SPI_MspInit+0xf8>)
 80028aa:	4a21      	ldr	r2, [pc, #132]	; (8002930 <HAL_SPI_MspInit+0xfc>)
 80028ac:	601a      	str	r2, [r3, #0]
    hdma_spi5_tx.Init.Channel = DMA_CHANNEL_2;
 80028ae:	4b1f      	ldr	r3, [pc, #124]	; (800292c <HAL_SPI_MspInit+0xf8>)
 80028b0:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80028b4:	605a      	str	r2, [r3, #4]
    hdma_spi5_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80028b6:	4b1d      	ldr	r3, [pc, #116]	; (800292c <HAL_SPI_MspInit+0xf8>)
 80028b8:	2240      	movs	r2, #64	; 0x40
 80028ba:	609a      	str	r2, [r3, #8]
    hdma_spi5_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80028bc:	4b1b      	ldr	r3, [pc, #108]	; (800292c <HAL_SPI_MspInit+0xf8>)
 80028be:	2200      	movs	r2, #0
 80028c0:	60da      	str	r2, [r3, #12]
    hdma_spi5_tx.Init.MemInc = DMA_MINC_ENABLE;
 80028c2:	4b1a      	ldr	r3, [pc, #104]	; (800292c <HAL_SPI_MspInit+0xf8>)
 80028c4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80028c8:	611a      	str	r2, [r3, #16]
    hdma_spi5_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80028ca:	4b18      	ldr	r3, [pc, #96]	; (800292c <HAL_SPI_MspInit+0xf8>)
 80028cc:	2200      	movs	r2, #0
 80028ce:	615a      	str	r2, [r3, #20]
    hdma_spi5_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80028d0:	4b16      	ldr	r3, [pc, #88]	; (800292c <HAL_SPI_MspInit+0xf8>)
 80028d2:	2200      	movs	r2, #0
 80028d4:	619a      	str	r2, [r3, #24]
    hdma_spi5_tx.Init.Mode = DMA_NORMAL;
 80028d6:	4b15      	ldr	r3, [pc, #84]	; (800292c <HAL_SPI_MspInit+0xf8>)
 80028d8:	2200      	movs	r2, #0
 80028da:	61da      	str	r2, [r3, #28]
    hdma_spi5_tx.Init.Priority = DMA_PRIORITY_LOW;
 80028dc:	4b13      	ldr	r3, [pc, #76]	; (800292c <HAL_SPI_MspInit+0xf8>)
 80028de:	2200      	movs	r2, #0
 80028e0:	621a      	str	r2, [r3, #32]
    hdma_spi5_tx.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 80028e2:	4b12      	ldr	r3, [pc, #72]	; (800292c <HAL_SPI_MspInit+0xf8>)
 80028e4:	2204      	movs	r2, #4
 80028e6:	625a      	str	r2, [r3, #36]	; 0x24
    hdma_spi5_tx.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
 80028e8:	4b10      	ldr	r3, [pc, #64]	; (800292c <HAL_SPI_MspInit+0xf8>)
 80028ea:	2203      	movs	r2, #3
 80028ec:	629a      	str	r2, [r3, #40]	; 0x28
    hdma_spi5_tx.Init.MemBurst = DMA_MBURST_SINGLE;
 80028ee:	4b0f      	ldr	r3, [pc, #60]	; (800292c <HAL_SPI_MspInit+0xf8>)
 80028f0:	2200      	movs	r2, #0
 80028f2:	62da      	str	r2, [r3, #44]	; 0x2c
    hdma_spi5_tx.Init.PeriphBurst = DMA_PBURST_SINGLE;
 80028f4:	4b0d      	ldr	r3, [pc, #52]	; (800292c <HAL_SPI_MspInit+0xf8>)
 80028f6:	2200      	movs	r2, #0
 80028f8:	631a      	str	r2, [r3, #48]	; 0x30
    if (HAL_DMA_Init(&hdma_spi5_tx) != HAL_OK)
 80028fa:	480c      	ldr	r0, [pc, #48]	; (800292c <HAL_SPI_MspInit+0xf8>)
 80028fc:	f000 ff66 	bl	80037cc <HAL_DMA_Init>
 8002900:	4603      	mov	r3, r0
 8002902:	2b00      	cmp	r3, #0
 8002904:	d001      	beq.n	800290a <HAL_SPI_MspInit+0xd6>
    {
      Error_Handler();
 8002906:	f7ff fe65 	bl	80025d4 <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi5_tx);
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	4a07      	ldr	r2, [pc, #28]	; (800292c <HAL_SPI_MspInit+0xf8>)
 800290e:	655a      	str	r2, [r3, #84]	; 0x54
 8002910:	4a06      	ldr	r2, [pc, #24]	; (800292c <HAL_SPI_MspInit+0xf8>)
 8002912:	687b      	ldr	r3, [r7, #4]
 8002914:	6393      	str	r3, [r2, #56]	; 0x38
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002916:	bf00      	nop
 8002918:	3728      	adds	r7, #40	; 0x28
 800291a:	46bd      	mov	sp, r7
 800291c:	bd80      	pop	{r7, pc}
 800291e:	bf00      	nop
 8002920:	40015000 	.word	0x40015000
 8002924:	40023800 	.word	0x40023800
 8002928:	40021400 	.word	0x40021400
 800292c:	20000434 	.word	0x20000434
 8002930:	40026470 	.word	0x40026470

08002934 <HAL_TIM_Encoder_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_encoder: TIM_Encoder handle pointer
* @retval None
*/
void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
{
 8002934:	b580      	push	{r7, lr}
 8002936:	b08e      	sub	sp, #56	; 0x38
 8002938:	af00      	add	r7, sp, #0
 800293a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800293c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002940:	2200      	movs	r2, #0
 8002942:	601a      	str	r2, [r3, #0]
 8002944:	605a      	str	r2, [r3, #4]
 8002946:	609a      	str	r2, [r3, #8]
 8002948:	60da      	str	r2, [r3, #12]
 800294a:	611a      	str	r2, [r3, #16]
  if(htim_encoder->Instance==TIM1)
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	681b      	ldr	r3, [r3, #0]
 8002950:	4a54      	ldr	r2, [pc, #336]	; (8002aa4 <HAL_TIM_Encoder_MspInit+0x170>)
 8002952:	4293      	cmp	r3, r2
 8002954:	d129      	bne.n	80029aa <HAL_TIM_Encoder_MspInit+0x76>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002956:	4b54      	ldr	r3, [pc, #336]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 8002958:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800295a:	4a53      	ldr	r2, [pc, #332]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 800295c:	f043 0301 	orr.w	r3, r3, #1
 8002960:	6453      	str	r3, [r2, #68]	; 0x44
 8002962:	4b51      	ldr	r3, [pc, #324]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 8002964:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002966:	f003 0301 	and.w	r3, r3, #1
 800296a:	623b      	str	r3, [r7, #32]
 800296c:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 800296e:	4b4e      	ldr	r3, [pc, #312]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 8002970:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002972:	4a4d      	ldr	r2, [pc, #308]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 8002974:	f043 0310 	orr.w	r3, r3, #16
 8002978:	6313      	str	r3, [r2, #48]	; 0x30
 800297a:	4b4b      	ldr	r3, [pc, #300]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 800297c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800297e:	f003 0310 	and.w	r3, r3, #16
 8002982:	61fb      	str	r3, [r7, #28]
 8002984:	69fb      	ldr	r3, [r7, #28]
    /**TIM1 GPIO Configuration
    PE9     ------> TIM1_CH1
    PE11     ------> TIM1_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_11;
 8002986:	f44f 6320 	mov.w	r3, #2560	; 0xa00
 800298a:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800298c:	2302      	movs	r3, #2
 800298e:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002990:	2300      	movs	r3, #0
 8002992:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002994:	2300      	movs	r3, #0
 8002996:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8002998:	2301      	movs	r3, #1
 800299a:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800299c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80029a0:	4619      	mov	r1, r3
 80029a2:	4842      	ldr	r0, [pc, #264]	; (8002aac <HAL_TIM_Encoder_MspInit+0x178>)
 80029a4:	f001 fa8a 	bl	8003ebc <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 80029a8:	e077      	b.n	8002a9a <HAL_TIM_Encoder_MspInit+0x166>
  else if(htim_encoder->Instance==TIM3)
 80029aa:	687b      	ldr	r3, [r7, #4]
 80029ac:	681b      	ldr	r3, [r3, #0]
 80029ae:	4a40      	ldr	r2, [pc, #256]	; (8002ab0 <HAL_TIM_Encoder_MspInit+0x17c>)
 80029b0:	4293      	cmp	r3, r2
 80029b2:	d144      	bne.n	8002a3e <HAL_TIM_Encoder_MspInit+0x10a>
    __HAL_RCC_TIM3_CLK_ENABLE();
 80029b4:	4b3c      	ldr	r3, [pc, #240]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 80029b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029b8:	4a3b      	ldr	r2, [pc, #236]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 80029ba:	f043 0302 	orr.w	r3, r3, #2
 80029be:	6413      	str	r3, [r2, #64]	; 0x40
 80029c0:	4b39      	ldr	r3, [pc, #228]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 80029c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029c4:	f003 0302 	and.w	r3, r3, #2
 80029c8:	61bb      	str	r3, [r7, #24]
 80029ca:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029cc:	4b36      	ldr	r3, [pc, #216]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 80029ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029d0:	4a35      	ldr	r2, [pc, #212]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 80029d2:	f043 0301 	orr.w	r3, r3, #1
 80029d6:	6313      	str	r3, [r2, #48]	; 0x30
 80029d8:	4b33      	ldr	r3, [pc, #204]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 80029da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029dc:	f003 0301 	and.w	r3, r3, #1
 80029e0:	617b      	str	r3, [r7, #20]
 80029e2:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80029e4:	4b30      	ldr	r3, [pc, #192]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 80029e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029e8:	4a2f      	ldr	r2, [pc, #188]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 80029ea:	f043 0304 	orr.w	r3, r3, #4
 80029ee:	6313      	str	r3, [r2, #48]	; 0x30
 80029f0:	4b2d      	ldr	r3, [pc, #180]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 80029f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029f4:	f003 0304 	and.w	r3, r3, #4
 80029f8:	613b      	str	r3, [r7, #16]
 80029fa:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 80029fc:	2340      	movs	r3, #64	; 0x40
 80029fe:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a00:	2302      	movs	r3, #2
 8002a02:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a04:	2300      	movs	r3, #0
 8002a06:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002a08:	2300      	movs	r3, #0
 8002a0a:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8002a0c:	2302      	movs	r3, #2
 8002a0e:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002a10:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002a14:	4619      	mov	r1, r3
 8002a16:	4827      	ldr	r0, [pc, #156]	; (8002ab4 <HAL_TIM_Encoder_MspInit+0x180>)
 8002a18:	f001 fa50 	bl	8003ebc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8002a1c:	2380      	movs	r3, #128	; 0x80
 8002a1e:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a20:	2302      	movs	r3, #2
 8002a22:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a24:	2300      	movs	r3, #0
 8002a26:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002a28:	2300      	movs	r3, #0
 8002a2a:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8002a2c:	2302      	movs	r3, #2
 8002a2e:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002a30:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002a34:	4619      	mov	r1, r3
 8002a36:	4820      	ldr	r0, [pc, #128]	; (8002ab8 <HAL_TIM_Encoder_MspInit+0x184>)
 8002a38:	f001 fa40 	bl	8003ebc <HAL_GPIO_Init>
}
 8002a3c:	e02d      	b.n	8002a9a <HAL_TIM_Encoder_MspInit+0x166>
  else if(htim_encoder->Instance==TIM4)
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	681b      	ldr	r3, [r3, #0]
 8002a42:	4a1e      	ldr	r2, [pc, #120]	; (8002abc <HAL_TIM_Encoder_MspInit+0x188>)
 8002a44:	4293      	cmp	r3, r2
 8002a46:	d128      	bne.n	8002a9a <HAL_TIM_Encoder_MspInit+0x166>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8002a48:	4b17      	ldr	r3, [pc, #92]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 8002a4a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a4c:	4a16      	ldr	r2, [pc, #88]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 8002a4e:	f043 0304 	orr.w	r3, r3, #4
 8002a52:	6413      	str	r3, [r2, #64]	; 0x40
 8002a54:	4b14      	ldr	r3, [pc, #80]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 8002a56:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a58:	f003 0304 	and.w	r3, r3, #4
 8002a5c:	60fb      	str	r3, [r7, #12]
 8002a5e:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002a60:	4b11      	ldr	r3, [pc, #68]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 8002a62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a64:	4a10      	ldr	r2, [pc, #64]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 8002a66:	f043 0308 	orr.w	r3, r3, #8
 8002a6a:	6313      	str	r3, [r2, #48]	; 0x30
 8002a6c:	4b0e      	ldr	r3, [pc, #56]	; (8002aa8 <HAL_TIM_Encoder_MspInit+0x174>)
 8002a6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a70:	f003 0308 	and.w	r3, r3, #8
 8002a74:	60bb      	str	r3, [r7, #8]
 8002a76:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8002a78:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002a7c:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a7e:	2302      	movs	r3, #2
 8002a80:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a82:	2300      	movs	r3, #0
 8002a84:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002a86:	2300      	movs	r3, #0
 8002a88:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8002a8a:	2302      	movs	r3, #2
 8002a8c:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002a8e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002a92:	4619      	mov	r1, r3
 8002a94:	480a      	ldr	r0, [pc, #40]	; (8002ac0 <HAL_TIM_Encoder_MspInit+0x18c>)
 8002a96:	f001 fa11 	bl	8003ebc <HAL_GPIO_Init>
}
 8002a9a:	bf00      	nop
 8002a9c:	3738      	adds	r7, #56	; 0x38
 8002a9e:	46bd      	mov	sp, r7
 8002aa0:	bd80      	pop	{r7, pc}
 8002aa2:	bf00      	nop
 8002aa4:	40010000 	.word	0x40010000
 8002aa8:	40023800 	.word	0x40023800
 8002aac:	40021000 	.word	0x40021000
 8002ab0:	40000400 	.word	0x40000400
 8002ab4:	40020000 	.word	0x40020000
 8002ab8:	40020800 	.word	0x40020800
 8002abc:	40000800 	.word	0x40000800
 8002ac0:	40020c00 	.word	0x40020c00

08002ac4 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002ac4:	b580      	push	{r7, lr}
 8002ac6:	b084      	sub	sp, #16
 8002ac8:	af00      	add	r7, sp, #0
 8002aca:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8002acc:	687b      	ldr	r3, [r7, #4]
 8002ace:	681b      	ldr	r3, [r3, #0]
 8002ad0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002ad4:	d114      	bne.n	8002b00 <HAL_TIM_Base_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002ad6:	4b19      	ldr	r3, [pc, #100]	; (8002b3c <HAL_TIM_Base_MspInit+0x78>)
 8002ad8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ada:	4a18      	ldr	r2, [pc, #96]	; (8002b3c <HAL_TIM_Base_MspInit+0x78>)
 8002adc:	f043 0301 	orr.w	r3, r3, #1
 8002ae0:	6413      	str	r3, [r2, #64]	; 0x40
 8002ae2:	4b16      	ldr	r3, [pc, #88]	; (8002b3c <HAL_TIM_Base_MspInit+0x78>)
 8002ae4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ae6:	f003 0301 	and.w	r3, r3, #1
 8002aea:	60fb      	str	r3, [r7, #12]
 8002aec:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8002aee:	2200      	movs	r2, #0
 8002af0:	2100      	movs	r1, #0
 8002af2:	201c      	movs	r0, #28
 8002af4:	f000 fd49 	bl	800358a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002af8:	201c      	movs	r0, #28
 8002afa:	f000 fd62 	bl	80035c2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 8002afe:	e018      	b.n	8002b32 <HAL_TIM_Base_MspInit+0x6e>
  else if(htim_base->Instance==TIM14)
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	681b      	ldr	r3, [r3, #0]
 8002b04:	4a0e      	ldr	r2, [pc, #56]	; (8002b40 <HAL_TIM_Base_MspInit+0x7c>)
 8002b06:	4293      	cmp	r3, r2
 8002b08:	d113      	bne.n	8002b32 <HAL_TIM_Base_MspInit+0x6e>
    __HAL_RCC_TIM14_CLK_ENABLE();
 8002b0a:	4b0c      	ldr	r3, [pc, #48]	; (8002b3c <HAL_TIM_Base_MspInit+0x78>)
 8002b0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b0e:	4a0b      	ldr	r2, [pc, #44]	; (8002b3c <HAL_TIM_Base_MspInit+0x78>)
 8002b10:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002b14:	6413      	str	r3, [r2, #64]	; 0x40
 8002b16:	4b09      	ldr	r3, [pc, #36]	; (8002b3c <HAL_TIM_Base_MspInit+0x78>)
 8002b18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b1a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002b1e:	60bb      	str	r3, [r7, #8]
 8002b20:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM8_TRG_COM_TIM14_IRQn, 0, 0);
 8002b22:	2200      	movs	r2, #0
 8002b24:	2100      	movs	r1, #0
 8002b26:	202d      	movs	r0, #45	; 0x2d
 8002b28:	f000 fd2f 	bl	800358a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM8_TRG_COM_TIM14_IRQn);
 8002b2c:	202d      	movs	r0, #45	; 0x2d
 8002b2e:	f000 fd48 	bl	80035c2 <HAL_NVIC_EnableIRQ>
}
 8002b32:	bf00      	nop
 8002b34:	3710      	adds	r7, #16
 8002b36:	46bd      	mov	sp, r7
 8002b38:	bd80      	pop	{r7, pc}
 8002b3a:	bf00      	nop
 8002b3c:	40023800 	.word	0x40023800
 8002b40:	40002000 	.word	0x40002000

08002b44 <HAL_SAI_MspInit>:
extern DMA_HandleTypeDef hdma_sai1_b;

static uint32_t SAI1_client =0;

void HAL_SAI_MspInit(SAI_HandleTypeDef* hsai)
{
 8002b44:	b580      	push	{r7, lr}
 8002b46:	b08a      	sub	sp, #40	; 0x28
 8002b48:	af00      	add	r7, sp, #0
 8002b4a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct;
/* SAI1 */
    if(hsai->Instance==SAI1_Block_A)
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	681b      	ldr	r3, [r3, #0]
 8002b50:	4a61      	ldr	r2, [pc, #388]	; (8002cd8 <HAL_SAI_MspInit+0x194>)
 8002b52:	4293      	cmp	r3, r2
 8002b54:	d15b      	bne.n	8002c0e <HAL_SAI_MspInit+0xca>
    {
    /* Peripheral clock enable */
    if (SAI1_client == 0)
 8002b56:	4b61      	ldr	r3, [pc, #388]	; (8002cdc <HAL_SAI_MspInit+0x198>)
 8002b58:	681b      	ldr	r3, [r3, #0]
 8002b5a:	2b00      	cmp	r3, #0
 8002b5c:	d10b      	bne.n	8002b76 <HAL_SAI_MspInit+0x32>
    {
       __HAL_RCC_SAI1_CLK_ENABLE();
 8002b5e:	4b60      	ldr	r3, [pc, #384]	; (8002ce0 <HAL_SAI_MspInit+0x19c>)
 8002b60:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002b62:	4a5f      	ldr	r2, [pc, #380]	; (8002ce0 <HAL_SAI_MspInit+0x19c>)
 8002b64:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002b68:	6453      	str	r3, [r2, #68]	; 0x44
 8002b6a:	4b5d      	ldr	r3, [pc, #372]	; (8002ce0 <HAL_SAI_MspInit+0x19c>)
 8002b6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002b6e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002b72:	613b      	str	r3, [r7, #16]
 8002b74:	693b      	ldr	r3, [r7, #16]
    }
    SAI1_client ++;
 8002b76:	4b59      	ldr	r3, [pc, #356]	; (8002cdc <HAL_SAI_MspInit+0x198>)
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	3301      	adds	r3, #1
 8002b7c:	4a57      	ldr	r2, [pc, #348]	; (8002cdc <HAL_SAI_MspInit+0x198>)
 8002b7e:	6013      	str	r3, [r2, #0]
    /**SAI1_A_Block_A GPIO Configuration
    PE4     ------> SAI1_FS_A
    PE5     ------> SAI1_SCK_A
    PE6     ------> SAI1_SD_A
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6;
 8002b80:	2370      	movs	r3, #112	; 0x70
 8002b82:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b84:	2302      	movs	r3, #2
 8002b86:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b88:	2300      	movs	r3, #0
 8002b8a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002b8c:	2300      	movs	r3, #0
 8002b8e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_SAI1;
 8002b90:	2306      	movs	r3, #6
 8002b92:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002b94:	f107 0314 	add.w	r3, r7, #20
 8002b98:	4619      	mov	r1, r3
 8002b9a:	4852      	ldr	r0, [pc, #328]	; (8002ce4 <HAL_SAI_MspInit+0x1a0>)
 8002b9c:	f001 f98e 	bl	8003ebc <HAL_GPIO_Init>

      /* Peripheral DMA init*/

    hdma_sai1_a.Instance = DMA2_Stream1;
 8002ba0:	4b51      	ldr	r3, [pc, #324]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002ba2:	4a52      	ldr	r2, [pc, #328]	; (8002cec <HAL_SAI_MspInit+0x1a8>)
 8002ba4:	601a      	str	r2, [r3, #0]
    hdma_sai1_a.Init.Channel = DMA_CHANNEL_0;
 8002ba6:	4b50      	ldr	r3, [pc, #320]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002ba8:	2200      	movs	r2, #0
 8002baa:	605a      	str	r2, [r3, #4]
    hdma_sai1_a.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002bac:	4b4e      	ldr	r3, [pc, #312]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002bae:	2200      	movs	r2, #0
 8002bb0:	609a      	str	r2, [r3, #8]
    hdma_sai1_a.Init.PeriphInc = DMA_PINC_DISABLE;
 8002bb2:	4b4d      	ldr	r3, [pc, #308]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002bb4:	2200      	movs	r2, #0
 8002bb6:	60da      	str	r2, [r3, #12]
    hdma_sai1_a.Init.MemInc = DMA_MINC_ENABLE;
 8002bb8:	4b4b      	ldr	r3, [pc, #300]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002bba:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002bbe:	611a      	str	r2, [r3, #16]
    hdma_sai1_a.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8002bc0:	4b49      	ldr	r3, [pc, #292]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002bc2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002bc6:	615a      	str	r2, [r3, #20]
    hdma_sai1_a.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8002bc8:	4b47      	ldr	r3, [pc, #284]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002bca:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002bce:	619a      	str	r2, [r3, #24]
    hdma_sai1_a.Init.Mode = DMA_CIRCULAR;
 8002bd0:	4b45      	ldr	r3, [pc, #276]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002bd2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002bd6:	61da      	str	r2, [r3, #28]
    hdma_sai1_a.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 8002bd8:	4b43      	ldr	r3, [pc, #268]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002bda:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8002bde:	621a      	str	r2, [r3, #32]
    hdma_sai1_a.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002be0:	4b41      	ldr	r3, [pc, #260]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002be2:	2200      	movs	r2, #0
 8002be4:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_sai1_a) != HAL_OK)
 8002be6:	4840      	ldr	r0, [pc, #256]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002be8:	f000 fdf0 	bl	80037cc <HAL_DMA_Init>
 8002bec:	4603      	mov	r3, r0
 8002bee:	2b00      	cmp	r3, #0
 8002bf0:	d001      	beq.n	8002bf6 <HAL_SAI_MspInit+0xb2>
    {
      Error_Handler();
 8002bf2:	f7ff fcef 	bl	80025d4 <Error_Handler>
    }

    /* Several peripheral DMA handle pointers point to the same DMA handle.
     Be aware that there is only one stream to perform all the requested DMAs. */
    __HAL_LINKDMA(hsai,hdmarx,hdma_sai1_a);
 8002bf6:	687b      	ldr	r3, [r7, #4]
 8002bf8:	4a3b      	ldr	r2, [pc, #236]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002bfa:	671a      	str	r2, [r3, #112]	; 0x70
 8002bfc:	4a3a      	ldr	r2, [pc, #232]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002bfe:	687b      	ldr	r3, [r7, #4]
 8002c00:	6393      	str	r3, [r2, #56]	; 0x38

    __HAL_LINKDMA(hsai,hdmatx,hdma_sai1_a);
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	4a38      	ldr	r2, [pc, #224]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002c06:	66da      	str	r2, [r3, #108]	; 0x6c
 8002c08:	4a37      	ldr	r2, [pc, #220]	; (8002ce8 <HAL_SAI_MspInit+0x1a4>)
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	6393      	str	r3, [r2, #56]	; 0x38

    }
    if(hsai->Instance==SAI1_Block_B)
 8002c0e:	687b      	ldr	r3, [r7, #4]
 8002c10:	681b      	ldr	r3, [r3, #0]
 8002c12:	4a37      	ldr	r2, [pc, #220]	; (8002cf0 <HAL_SAI_MspInit+0x1ac>)
 8002c14:	4293      	cmp	r3, r2
 8002c16:	d15b      	bne.n	8002cd0 <HAL_SAI_MspInit+0x18c>
    {
      /* Peripheral clock enable */
      if (SAI1_client == 0)
 8002c18:	4b30      	ldr	r3, [pc, #192]	; (8002cdc <HAL_SAI_MspInit+0x198>)
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	2b00      	cmp	r3, #0
 8002c1e:	d10b      	bne.n	8002c38 <HAL_SAI_MspInit+0xf4>
      {
       __HAL_RCC_SAI1_CLK_ENABLE();
 8002c20:	4b2f      	ldr	r3, [pc, #188]	; (8002ce0 <HAL_SAI_MspInit+0x19c>)
 8002c22:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c24:	4a2e      	ldr	r2, [pc, #184]	; (8002ce0 <HAL_SAI_MspInit+0x19c>)
 8002c26:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002c2a:	6453      	str	r3, [r2, #68]	; 0x44
 8002c2c:	4b2c      	ldr	r3, [pc, #176]	; (8002ce0 <HAL_SAI_MspInit+0x19c>)
 8002c2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c30:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002c34:	60fb      	str	r3, [r7, #12]
 8002c36:	68fb      	ldr	r3, [r7, #12]
      }
    SAI1_client ++;
 8002c38:	4b28      	ldr	r3, [pc, #160]	; (8002cdc <HAL_SAI_MspInit+0x198>)
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	3301      	adds	r3, #1
 8002c3e:	4a27      	ldr	r2, [pc, #156]	; (8002cdc <HAL_SAI_MspInit+0x198>)
 8002c40:	6013      	str	r3, [r2, #0]

    /**SAI1_B_Block_B GPIO Configuration
    PE3     ------> SAI1_SD_B
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002c42:	2308      	movs	r3, #8
 8002c44:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c46:	2302      	movs	r3, #2
 8002c48:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c4a:	2300      	movs	r3, #0
 8002c4c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002c4e:	2300      	movs	r3, #0
 8002c50:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_SAI1;
 8002c52:	2306      	movs	r3, #6
 8002c54:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002c56:	f107 0314 	add.w	r3, r7, #20
 8002c5a:	4619      	mov	r1, r3
 8002c5c:	4821      	ldr	r0, [pc, #132]	; (8002ce4 <HAL_SAI_MspInit+0x1a0>)
 8002c5e:	f001 f92d 	bl	8003ebc <HAL_GPIO_Init>

      /* Peripheral DMA init*/

    hdma_sai1_b.Instance = DMA2_Stream5;
 8002c62:	4b24      	ldr	r3, [pc, #144]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002c64:	4a24      	ldr	r2, [pc, #144]	; (8002cf8 <HAL_SAI_MspInit+0x1b4>)
 8002c66:	601a      	str	r2, [r3, #0]
    hdma_sai1_b.Init.Channel = DMA_CHANNEL_0;
 8002c68:	4b22      	ldr	r3, [pc, #136]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002c6a:	2200      	movs	r2, #0
 8002c6c:	605a      	str	r2, [r3, #4]
    hdma_sai1_b.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002c6e:	4b21      	ldr	r3, [pc, #132]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002c70:	2240      	movs	r2, #64	; 0x40
 8002c72:	609a      	str	r2, [r3, #8]
    hdma_sai1_b.Init.PeriphInc = DMA_PINC_DISABLE;
 8002c74:	4b1f      	ldr	r3, [pc, #124]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002c76:	2200      	movs	r2, #0
 8002c78:	60da      	str	r2, [r3, #12]
    hdma_sai1_b.Init.MemInc = DMA_MINC_ENABLE;
 8002c7a:	4b1e      	ldr	r3, [pc, #120]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002c7c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002c80:	611a      	str	r2, [r3, #16]
    hdma_sai1_b.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8002c82:	4b1c      	ldr	r3, [pc, #112]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002c84:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002c88:	615a      	str	r2, [r3, #20]
    hdma_sai1_b.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8002c8a:	4b1a      	ldr	r3, [pc, #104]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002c8c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002c90:	619a      	str	r2, [r3, #24]
    hdma_sai1_b.Init.Mode = DMA_CIRCULAR;
 8002c92:	4b18      	ldr	r3, [pc, #96]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002c94:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002c98:	61da      	str	r2, [r3, #28]
    hdma_sai1_b.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 8002c9a:	4b16      	ldr	r3, [pc, #88]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002c9c:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8002ca0:	621a      	str	r2, [r3, #32]
    hdma_sai1_b.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002ca2:	4b14      	ldr	r3, [pc, #80]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002ca4:	2200      	movs	r2, #0
 8002ca6:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_sai1_b) != HAL_OK)
 8002ca8:	4812      	ldr	r0, [pc, #72]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002caa:	f000 fd8f 	bl	80037cc <HAL_DMA_Init>
 8002cae:	4603      	mov	r3, r0
 8002cb0:	2b00      	cmp	r3, #0
 8002cb2:	d001      	beq.n	8002cb8 <HAL_SAI_MspInit+0x174>
    {
      Error_Handler();
 8002cb4:	f7ff fc8e 	bl	80025d4 <Error_Handler>
    }

    /* Several peripheral DMA handle pointers point to the same DMA handle.
     Be aware that there is only one stream to perform all the requested DMAs. */
    __HAL_LINKDMA(hsai,hdmarx,hdma_sai1_b);
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	4a0e      	ldr	r2, [pc, #56]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002cbc:	671a      	str	r2, [r3, #112]	; 0x70
 8002cbe:	4a0d      	ldr	r2, [pc, #52]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	6393      	str	r3, [r2, #56]	; 0x38
    __HAL_LINKDMA(hsai,hdmatx,hdma_sai1_b);
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	4a0b      	ldr	r2, [pc, #44]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002cc8:	66da      	str	r2, [r3, #108]	; 0x6c
 8002cca:	4a0a      	ldr	r2, [pc, #40]	; (8002cf4 <HAL_SAI_MspInit+0x1b0>)
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	6393      	str	r3, [r2, #56]	; 0x38
    }
}
 8002cd0:	bf00      	nop
 8002cd2:	3728      	adds	r7, #40	; 0x28
 8002cd4:	46bd      	mov	sp, r7
 8002cd6:	bd80      	pop	{r7, pc}
 8002cd8:	40015804 	.word	0x40015804
 8002cdc:	2002fd14 	.word	0x2002fd14
 8002ce0:	40023800 	.word	0x40023800
 8002ce4:	40021000 	.word	0x40021000
 8002ce8:	20000310 	.word	0x20000310
 8002cec:	40026428 	.word	0x40026428
 8002cf0:	40015824 	.word	0x40015824
 8002cf4:	20000370 	.word	0x20000370
 8002cf8:	40026488 	.word	0x40026488

08002cfc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002cfc:	b580      	push	{r7, lr}
 8002cfe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  HAL_RCC_NMI_IRQHandler();
 8002d00:	f002 ff90 	bl	8005c24 <HAL_RCC_NMI_IRQHandler>
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002d04:	e7fe      	b.n	8002d04 <NMI_Handler+0x8>

08002d06 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002d06:	b480      	push	{r7}
 8002d08:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002d0a:	e7fe      	b.n	8002d0a <HardFault_Handler+0x4>

08002d0c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002d0c:	b480      	push	{r7}
 8002d0e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002d10:	e7fe      	b.n	8002d10 <MemManage_Handler+0x4>

08002d12 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002d12:	b480      	push	{r7}
 8002d14:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002d16:	e7fe      	b.n	8002d16 <BusFault_Handler+0x4>

08002d18 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002d18:	b480      	push	{r7}
 8002d1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002d1c:	e7fe      	b.n	8002d1c <UsageFault_Handler+0x4>

08002d1e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002d1e:	b480      	push	{r7}
 8002d20:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002d22:	bf00      	nop
 8002d24:	46bd      	mov	sp, r7
 8002d26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d2a:	4770      	bx	lr

08002d2c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002d2c:	b480      	push	{r7}
 8002d2e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002d30:	bf00      	nop
 8002d32:	46bd      	mov	sp, r7
 8002d34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d38:	4770      	bx	lr

08002d3a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002d3a:	b480      	push	{r7}
 8002d3c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002d3e:	bf00      	nop
 8002d40:	46bd      	mov	sp, r7
 8002d42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d46:	4770      	bx	lr

08002d48 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002d48:	b580      	push	{r7, lr}
 8002d4a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002d4c:	f000 fafe 	bl	800334c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002d50:	bf00      	nop
 8002d52:	bd80      	pop	{r7, pc}

08002d54 <RCC_IRQHandler>:

/**
  * @brief This function handles RCC global interrupt.
  */
void RCC_IRQHandler(void)
{
 8002d54:	b480      	push	{r7}
 8002d56:	af00      	add	r7, sp, #0

  /* USER CODE END RCC_IRQn 0 */
  /* USER CODE BEGIN RCC_IRQn 1 */

  /* USER CODE END RCC_IRQn 1 */
}
 8002d58:	bf00      	nop
 8002d5a:	46bd      	mov	sp, r7
 8002d5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d60:	4770      	bx	lr
	...

08002d64 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8002d64:	b580      	push	{r7, lr}
 8002d66:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8002d68:	4802      	ldr	r0, [pc, #8]	; (8002d74 <TIM2_IRQHandler+0x10>)
 8002d6a:	f005 f92f 	bl	8007fcc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8002d6e:	bf00      	nop
 8002d70:	bd80      	pop	{r7, pc}
 8002d72:	bf00      	nop
 8002d74:	200004e0 	.word	0x200004e0

08002d78 <TIM8_TRG_COM_TIM14_IRQHandler>:

/**
  * @brief This function handles TIM8 trigger and commutation interrupts and TIM14 global interrupt.
  */
void TIM8_TRG_COM_TIM14_IRQHandler(void)
{
 8002d78:	b580      	push	{r7, lr}
 8002d7a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 0 */

  /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 0 */
  HAL_TIM_IRQHandler(&htim14);
 8002d7c:	4802      	ldr	r0, [pc, #8]	; (8002d88 <TIM8_TRG_COM_TIM14_IRQHandler+0x10>)
 8002d7e:	f005 f925 	bl	8007fcc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 1 */

  /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 1 */
}
 8002d82:	bf00      	nop
 8002d84:	bd80      	pop	{r7, pc}
 8002d86:	bf00      	nop
 8002d88:	200005c4 	.word	0x200005c4

08002d8c <DMA2_Stream1_IRQHandler>:

/**
  * @brief This function handles DMA2 stream1 global interrupt.
  */
void DMA2_Stream1_IRQHandler(void)
{
 8002d8c:	b580      	push	{r7, lr}
 8002d8e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream1_IRQn 0 */

  /* USER CODE END DMA2_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_sai1_a);
 8002d90:	4802      	ldr	r0, [pc, #8]	; (8002d9c <DMA2_Stream1_IRQHandler+0x10>)
 8002d92:	f000 fe29 	bl	80039e8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream1_IRQn 1 */

  /* USER CODE END DMA2_Stream1_IRQn 1 */
}
 8002d96:	bf00      	nop
 8002d98:	bd80      	pop	{r7, pc}
 8002d9a:	bf00      	nop
 8002d9c:	20000310 	.word	0x20000310

08002da0 <DMA2_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA2 stream4 global interrupt.
  */
void DMA2_Stream4_IRQHandler(void)
{
 8002da0:	b580      	push	{r7, lr}
 8002da2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream4_IRQn 0 */

  /* USER CODE END DMA2_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi5_tx);
 8002da4:	4802      	ldr	r0, [pc, #8]	; (8002db0 <DMA2_Stream4_IRQHandler+0x10>)
 8002da6:	f000 fe1f 	bl	80039e8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream4_IRQn 1 */

  /* USER CODE END DMA2_Stream4_IRQn 1 */
}
 8002daa:	bf00      	nop
 8002dac:	bd80      	pop	{r7, pc}
 8002dae:	bf00      	nop
 8002db0:	20000434 	.word	0x20000434

08002db4 <DMA2_Stream5_IRQHandler>:

/**
  * @brief This function handles DMA2 stream5 global interrupt.
  */
void DMA2_Stream5_IRQHandler(void)
{
 8002db4:	b580      	push	{r7, lr}
 8002db6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream5_IRQn 0 */

  /* USER CODE END DMA2_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_sai1_b);
 8002db8:	4802      	ldr	r0, [pc, #8]	; (8002dc4 <DMA2_Stream5_IRQHandler+0x10>)
 8002dba:	f000 fe15 	bl	80039e8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream5_IRQn 1 */

  /* USER CODE END DMA2_Stream5_IRQn 1 */
}
 8002dbe:	bf00      	nop
 8002dc0:	bd80      	pop	{r7, pc}
 8002dc2:	bf00      	nop
 8002dc4:	20000370 	.word	0x20000370

08002dc8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002dc8:	b480      	push	{r7}
 8002dca:	af00      	add	r7, sp, #0
  return 1;
 8002dcc:	2301      	movs	r3, #1
}
 8002dce:	4618      	mov	r0, r3
 8002dd0:	46bd      	mov	sp, r7
 8002dd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dd6:	4770      	bx	lr

08002dd8 <_kill>:

int _kill(int pid, int sig)
{
 8002dd8:	b580      	push	{r7, lr}
 8002dda:	b082      	sub	sp, #8
 8002ddc:	af00      	add	r7, sp, #0
 8002dde:	6078      	str	r0, [r7, #4]
 8002de0:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002de2:	f020 fd51 	bl	8023888 <__errno>
 8002de6:	4603      	mov	r3, r0
 8002de8:	2216      	movs	r2, #22
 8002dea:	601a      	str	r2, [r3, #0]
  return -1;
 8002dec:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002df0:	4618      	mov	r0, r3
 8002df2:	3708      	adds	r7, #8
 8002df4:	46bd      	mov	sp, r7
 8002df6:	bd80      	pop	{r7, pc}

08002df8 <_exit>:

void _exit (int status)
{
 8002df8:	b580      	push	{r7, lr}
 8002dfa:	b082      	sub	sp, #8
 8002dfc:	af00      	add	r7, sp, #0
 8002dfe:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002e00:	f04f 31ff 	mov.w	r1, #4294967295
 8002e04:	6878      	ldr	r0, [r7, #4]
 8002e06:	f7ff ffe7 	bl	8002dd8 <_kill>
  while (1) {}    /* Make sure we hang here */
 8002e0a:	e7fe      	b.n	8002e0a <_exit+0x12>

08002e0c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002e0c:	b580      	push	{r7, lr}
 8002e0e:	b086      	sub	sp, #24
 8002e10:	af00      	add	r7, sp, #0
 8002e12:	60f8      	str	r0, [r7, #12]
 8002e14:	60b9      	str	r1, [r7, #8]
 8002e16:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e18:	2300      	movs	r3, #0
 8002e1a:	617b      	str	r3, [r7, #20]
 8002e1c:	e00a      	b.n	8002e34 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002e1e:	f3af 8000 	nop.w
 8002e22:	4601      	mov	r1, r0
 8002e24:	68bb      	ldr	r3, [r7, #8]
 8002e26:	1c5a      	adds	r2, r3, #1
 8002e28:	60ba      	str	r2, [r7, #8]
 8002e2a:	b2ca      	uxtb	r2, r1
 8002e2c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e2e:	697b      	ldr	r3, [r7, #20]
 8002e30:	3301      	adds	r3, #1
 8002e32:	617b      	str	r3, [r7, #20]
 8002e34:	697a      	ldr	r2, [r7, #20]
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	429a      	cmp	r2, r3
 8002e3a:	dbf0      	blt.n	8002e1e <_read+0x12>
  }

  return len;
 8002e3c:	687b      	ldr	r3, [r7, #4]
}
 8002e3e:	4618      	mov	r0, r3
 8002e40:	3718      	adds	r7, #24
 8002e42:	46bd      	mov	sp, r7
 8002e44:	bd80      	pop	{r7, pc}

08002e46 <_close>:
  }
  return len;
}

int _close(int file)
{
 8002e46:	b480      	push	{r7}
 8002e48:	b083      	sub	sp, #12
 8002e4a:	af00      	add	r7, sp, #0
 8002e4c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002e4e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002e52:	4618      	mov	r0, r3
 8002e54:	370c      	adds	r7, #12
 8002e56:	46bd      	mov	sp, r7
 8002e58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e5c:	4770      	bx	lr

08002e5e <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002e5e:	b480      	push	{r7}
 8002e60:	b083      	sub	sp, #12
 8002e62:	af00      	add	r7, sp, #0
 8002e64:	6078      	str	r0, [r7, #4]
 8002e66:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002e68:	683b      	ldr	r3, [r7, #0]
 8002e6a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002e6e:	605a      	str	r2, [r3, #4]
  return 0;
 8002e70:	2300      	movs	r3, #0
}
 8002e72:	4618      	mov	r0, r3
 8002e74:	370c      	adds	r7, #12
 8002e76:	46bd      	mov	sp, r7
 8002e78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e7c:	4770      	bx	lr

08002e7e <_isatty>:

int _isatty(int file)
{
 8002e7e:	b480      	push	{r7}
 8002e80:	b083      	sub	sp, #12
 8002e82:	af00      	add	r7, sp, #0
 8002e84:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002e86:	2301      	movs	r3, #1
}
 8002e88:	4618      	mov	r0, r3
 8002e8a:	370c      	adds	r7, #12
 8002e8c:	46bd      	mov	sp, r7
 8002e8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e92:	4770      	bx	lr

08002e94 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002e94:	b480      	push	{r7}
 8002e96:	b085      	sub	sp, #20
 8002e98:	af00      	add	r7, sp, #0
 8002e9a:	60f8      	str	r0, [r7, #12]
 8002e9c:	60b9      	str	r1, [r7, #8]
 8002e9e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002ea0:	2300      	movs	r3, #0
}
 8002ea2:	4618      	mov	r0, r3
 8002ea4:	3714      	adds	r7, #20
 8002ea6:	46bd      	mov	sp, r7
 8002ea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002eac:	4770      	bx	lr
	...

08002eb0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002eb0:	b580      	push	{r7, lr}
 8002eb2:	b086      	sub	sp, #24
 8002eb4:	af00      	add	r7, sp, #0
 8002eb6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002eb8:	4a14      	ldr	r2, [pc, #80]	; (8002f0c <_sbrk+0x5c>)
 8002eba:	4b15      	ldr	r3, [pc, #84]	; (8002f10 <_sbrk+0x60>)
 8002ebc:	1ad3      	subs	r3, r2, r3
 8002ebe:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002ec0:	697b      	ldr	r3, [r7, #20]
 8002ec2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002ec4:	4b13      	ldr	r3, [pc, #76]	; (8002f14 <_sbrk+0x64>)
 8002ec6:	681b      	ldr	r3, [r3, #0]
 8002ec8:	2b00      	cmp	r3, #0
 8002eca:	d102      	bne.n	8002ed2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002ecc:	4b11      	ldr	r3, [pc, #68]	; (8002f14 <_sbrk+0x64>)
 8002ece:	4a12      	ldr	r2, [pc, #72]	; (8002f18 <_sbrk+0x68>)
 8002ed0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002ed2:	4b10      	ldr	r3, [pc, #64]	; (8002f14 <_sbrk+0x64>)
 8002ed4:	681a      	ldr	r2, [r3, #0]
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	4413      	add	r3, r2
 8002eda:	693a      	ldr	r2, [r7, #16]
 8002edc:	429a      	cmp	r2, r3
 8002ede:	d207      	bcs.n	8002ef0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002ee0:	f020 fcd2 	bl	8023888 <__errno>
 8002ee4:	4603      	mov	r3, r0
 8002ee6:	220c      	movs	r2, #12
 8002ee8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002eea:	f04f 33ff 	mov.w	r3, #4294967295
 8002eee:	e009      	b.n	8002f04 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002ef0:	4b08      	ldr	r3, [pc, #32]	; (8002f14 <_sbrk+0x64>)
 8002ef2:	681b      	ldr	r3, [r3, #0]
 8002ef4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002ef6:	4b07      	ldr	r3, [pc, #28]	; (8002f14 <_sbrk+0x64>)
 8002ef8:	681a      	ldr	r2, [r3, #0]
 8002efa:	687b      	ldr	r3, [r7, #4]
 8002efc:	4413      	add	r3, r2
 8002efe:	4a05      	ldr	r2, [pc, #20]	; (8002f14 <_sbrk+0x64>)
 8002f00:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002f02:	68fb      	ldr	r3, [r7, #12]
}
 8002f04:	4618      	mov	r0, r3
 8002f06:	3718      	adds	r7, #24
 8002f08:	46bd      	mov	sp, r7
 8002f0a:	bd80      	pop	{r7, pc}
 8002f0c:	20050000 	.word	0x20050000
 8002f10:	00004000 	.word	0x00004000
 8002f14:	2002fd18 	.word	0x2002fd18
 8002f18:	20033060 	.word	0x20033060

08002f1c <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002f1c:	b480      	push	{r7}
 8002f1e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002f20:	4b06      	ldr	r3, [pc, #24]	; (8002f3c <SystemInit+0x20>)
 8002f22:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002f26:	4a05      	ldr	r2, [pc, #20]	; (8002f3c <SystemInit+0x20>)
 8002f28:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002f2c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002f30:	bf00      	nop
 8002f32:	46bd      	mov	sp, r7
 8002f34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f38:	4770      	bx	lr
 8002f3a:	bf00      	nop
 8002f3c:	e000ed00 	.word	0xe000ed00

08002f40 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
   ldr   sp, =_estack      /* set stack pointer */
 8002f40:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002f78 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8002f44:	480d      	ldr	r0, [pc, #52]	; (8002f7c <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8002f46:	490e      	ldr	r1, [pc, #56]	; (8002f80 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8002f48:	4a0e      	ldr	r2, [pc, #56]	; (8002f84 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8002f4a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002f4c:	e002      	b.n	8002f54 <LoopCopyDataInit>

08002f4e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002f4e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002f50:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002f52:	3304      	adds	r3, #4

08002f54 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002f54:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002f56:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002f58:	d3f9      	bcc.n	8002f4e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002f5a:	4a0b      	ldr	r2, [pc, #44]	; (8002f88 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8002f5c:	4c0b      	ldr	r4, [pc, #44]	; (8002f8c <LoopFillZerobss+0x26>)
  movs r3, #0
 8002f5e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002f60:	e001      	b.n	8002f66 <LoopFillZerobss>

08002f62 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002f62:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002f64:	3204      	adds	r2, #4

08002f66 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002f66:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002f68:	d3fb      	bcc.n	8002f62 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8002f6a:	f7ff ffd7 	bl	8002f1c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8002f6e:	f020 fc91 	bl	8023894 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8002f72:	f7fe fdd3 	bl	8001b1c <main>
  bx  lr    
 8002f76:	4770      	bx	lr
   ldr   sp, =_estack      /* set stack pointer */
 8002f78:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 8002f7c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002f80:	20000120 	.word	0x20000120
  ldr r2, =_sidata
 8002f84:	08027868 	.word	0x08027868
  ldr r2, =_sbss
 8002f88:	20000120 	.word	0x20000120
  ldr r4, =_ebss
 8002f8c:	2003305c 	.word	0x2003305c

08002f90 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8002f90:	e7fe      	b.n	8002f90 <ADC_IRQHandler>
	...

08002f94 <ft6x06_Init>:
  *         from MCU to FT6xx6 : ie I2C channel initialization (if required).
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT6xx6).
  * @retval None
  */
void ft6x06_Init(uint16_t DeviceAddr)
{  
 8002f94:	b580      	push	{r7, lr}
 8002f96:	b084      	sub	sp, #16
 8002f98:	af00      	add	r7, sp, #0
 8002f9a:	4603      	mov	r3, r0
 8002f9c:	80fb      	strh	r3, [r7, #6]
  uint8_t instance;
  uint8_t empty;
  
  /* Check if device instance already exists */
  instance = ft6x06_GetInstance(DeviceAddr);
 8002f9e:	88fb      	ldrh	r3, [r7, #6]
 8002fa0:	4618      	mov	r0, r3
 8002fa2:	f000 f909 	bl	80031b8 <ft6x06_GetInstance>
 8002fa6:	4603      	mov	r3, r0
 8002fa8:	73fb      	strb	r3, [r7, #15]
  
  /* To prevent double initialization */
  if(instance == 0xFF)
 8002faa:	7bfb      	ldrb	r3, [r7, #15]
 8002fac:	2bff      	cmp	r3, #255	; 0xff
 8002fae:	d10c      	bne.n	8002fca <ft6x06_Init+0x36>
  {
    /* Look for empty instance */
    empty = ft6x06_GetInstance(0);
 8002fb0:	2000      	movs	r0, #0
 8002fb2:	f000 f901 	bl	80031b8 <ft6x06_GetInstance>
 8002fb6:	4603      	mov	r3, r0
 8002fb8:	73bb      	strb	r3, [r7, #14]
    
    if(empty < FT6x06_MAX_INSTANCE)
 8002fba:	7bbb      	ldrb	r3, [r7, #14]
 8002fbc:	2b01      	cmp	r3, #1
 8002fbe:	d804      	bhi.n	8002fca <ft6x06_Init+0x36>
    {
      /* Register the current device instance */
      ft6x06[empty] = DeviceAddr;
 8002fc0:	7bbb      	ldrb	r3, [r7, #14]
 8002fc2:	88fa      	ldrh	r2, [r7, #6]
 8002fc4:	b2d1      	uxtb	r1, r2
 8002fc6:	4a03      	ldr	r2, [pc, #12]	; (8002fd4 <ft6x06_Init+0x40>)
 8002fc8:	54d1      	strb	r1, [r2, r3]
      
      /* Initialize IO BUS layer */
//      TS_IO_Init();
    }
  }
}
 8002fca:	bf00      	nop
 8002fcc:	3710      	adds	r7, #16
 8002fce:	46bd      	mov	sp, r7
 8002fd0:	bd80      	pop	{r7, pc}
 8002fd2:	bf00      	nop
 8002fd4:	2002fd1c 	.word	0x2002fd1c

08002fd8 <ft6x06_Reset>:
  *         @note : Not applicable to FT6xx6.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT6xx6).
  * @retval None
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
 8002fd8:	b480      	push	{r7}
 8002fda:	b083      	sub	sp, #12
 8002fdc:	af00      	add	r7, sp, #0
 8002fde:	4603      	mov	r3, r0
 8002fe0:	80fb      	strh	r3, [r7, #6]
  /* Do nothing */
  /* No software reset sequence available in FT6xx6 IC */
}
 8002fe2:	bf00      	nop
 8002fe4:	370c      	adds	r7, #12
 8002fe6:	46bd      	mov	sp, r7
 8002fe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fec:	4770      	bx	lr

08002fee <ft6x06_ReadID>:
  *         able to read the FT6xx6 device ID, and verify this is a FT6xx6.
  * @param  DeviceAddr: I2C FT6xx6 Slave address.
  * @retval The Device ID (two bytes).
  */
uint16_t ft6x06_ReadID(uint16_t DeviceAddr)
{
 8002fee:	b580      	push	{r7, lr}
 8002ff0:	b082      	sub	sp, #8
 8002ff2:	af00      	add	r7, sp, #0
 8002ff4:	4603      	mov	r3, r0
 8002ff6:	80fb      	strh	r3, [r7, #6]
  /* Initialize I2C link if needed */
//  TS_IO_Init();
  
  /* Return the device ID value */
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8002ff8:	88fb      	ldrh	r3, [r7, #6]
 8002ffa:	b2db      	uxtb	r3, r3
 8002ffc:	21a8      	movs	r1, #168	; 0xa8
 8002ffe:	4618      	mov	r0, r3
 8003000:	f009 fd90 	bl	800cb24 <TS_IO_Read>
 8003004:	4603      	mov	r3, r0
 8003006:	b29b      	uxth	r3, r3
}
 8003008:	4618      	mov	r0, r3
 800300a:	3708      	adds	r7, #8
 800300c:	46bd      	mov	sp, r7
 800300e:	bd80      	pop	{r7, pc}

08003010 <ft6x06_TS_Start>:
  *         the touch screen).
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address).
  * @retval None.
  */
void ft6x06_TS_Start(uint16_t DeviceAddr)
{
 8003010:	b580      	push	{r7, lr}
 8003012:	b082      	sub	sp, #8
 8003014:	af00      	add	r7, sp, #0
 8003016:	4603      	mov	r3, r0
 8003018:	80fb      	strh	r3, [r7, #6]
  /* Hw Calibration sequence start : should be done once after each power up */
  /* This is called internal calibration of the touch screen                 */
  ft6x06_TS_Calibration(DeviceAddr);
#endif
  /* Minimum static configuration of FT6xx6 */
  ft6x06_TS_Configure(DeviceAddr);
 800301a:	88fb      	ldrh	r3, [r7, #6]
 800301c:	4618      	mov	r0, r3
 800301e:	f000 f8bc 	bl	800319a <ft6x06_TS_Configure>

  /* By default set FT6xx6 IC in Polling mode : no INT generation on FT6xx6 for new touch available */
  /* Note TS_INT is active low                                                                      */
  ft6x06_TS_DisableIT(DeviceAddr);
 8003022:	88fb      	ldrh	r3, [r7, #6]
 8003024:	4618      	mov	r0, r3
 8003026:	f000 f88d 	bl	8003144 <ft6x06_TS_DisableIT>
}
 800302a:	bf00      	nop
 800302c:	3708      	adds	r7, #8
 800302e:	46bd      	mov	sp, r7
 8003030:	bd80      	pop	{r7, pc}
	...

08003034 <ft6x06_TS_DetectTouch>:
  *         variables).
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval : Number of active touches detected (can be 0, 1 or 2).
  */
uint8_t ft6x06_TS_DetectTouch(uint16_t DeviceAddr)
{
 8003034:	b580      	push	{r7, lr}
 8003036:	b084      	sub	sp, #16
 8003038:	af00      	add	r7, sp, #0
 800303a:	4603      	mov	r3, r0
 800303c:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t nbTouch = 0;
 800303e:	2300      	movs	r3, #0
 8003040:	73fb      	strb	r3, [r7, #15]

  /* Read register FT6206_TD_STAT_REG to check number of touches detection */
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8003042:	88fb      	ldrh	r3, [r7, #6]
 8003044:	b2db      	uxtb	r3, r3
 8003046:	2102      	movs	r1, #2
 8003048:	4618      	mov	r0, r3
 800304a:	f009 fd6b 	bl	800cb24 <TS_IO_Read>
 800304e:	4603      	mov	r3, r0
 8003050:	73fb      	strb	r3, [r7, #15]
  nbTouch &= FT6206_TD_STAT_MASK;
 8003052:	7bfb      	ldrb	r3, [r7, #15]
 8003054:	b2db      	uxtb	r3, r3
 8003056:	f003 030f 	and.w	r3, r3, #15
 800305a:	b2db      	uxtb	r3, r3
 800305c:	73fb      	strb	r3, [r7, #15]

  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 800305e:	7bfb      	ldrb	r3, [r7, #15]
 8003060:	b2db      	uxtb	r3, r3
 8003062:	2b02      	cmp	r3, #2
 8003064:	d901      	bls.n	800306a <ft6x06_TS_DetectTouch+0x36>
  {
    /* If invalid number of touch detected, set it to zero */
    nbTouch = 0;
 8003066:	2300      	movs	r3, #0
 8003068:	73fb      	strb	r3, [r7, #15]
  }

  /* Update ft6xx6 driver internal global : current number of active touches */
  ft6x06_handle.currActiveTouchNb = nbTouch;
 800306a:	7bfb      	ldrb	r3, [r7, #15]
 800306c:	b2da      	uxtb	r2, r3
 800306e:	4b05      	ldr	r3, [pc, #20]	; (8003084 <ft6x06_TS_DetectTouch+0x50>)
 8003070:	705a      	strb	r2, [r3, #1]

  /* Reset current active touch index on which to work on */
  ft6x06_handle.currActiveTouchIdx = 0;
 8003072:	4b04      	ldr	r3, [pc, #16]	; (8003084 <ft6x06_TS_DetectTouch+0x50>)
 8003074:	2200      	movs	r2, #0
 8003076:	709a      	strb	r2, [r3, #2]

  return(nbTouch);
 8003078:	7bfb      	ldrb	r3, [r7, #15]
 800307a:	b2db      	uxtb	r3, r3
}
 800307c:	4618      	mov	r0, r3
 800307e:	3710      	adds	r7, #16
 8003080:	46bd      	mov	sp, r7
 8003082:	bd80      	pop	{r7, pc}
 8003084:	2002fd20 	.word	0x2002fd20

08003088 <ft6x06_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value
  * @retval None.
  */
void ft6x06_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8003088:	b580      	push	{r7, lr}
 800308a:	b086      	sub	sp, #24
 800308c:	af00      	add	r7, sp, #0
 800308e:	4603      	mov	r3, r0
 8003090:	60b9      	str	r1, [r7, #8]
 8003092:	607a      	str	r2, [r7, #4]
 8003094:	81fb      	strh	r3, [r7, #14]
  uint8_t regAddress = 0;
 8003096:	2300      	movs	r3, #0
 8003098:	75fb      	strb	r3, [r7, #23]
  uint8_t  dataxy[4];
  
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800309a:	4b1f      	ldr	r3, [pc, #124]	; (8003118 <ft6x06_TS_GetXY+0x90>)
 800309c:	789a      	ldrb	r2, [r3, #2]
 800309e:	4b1e      	ldr	r3, [pc, #120]	; (8003118 <ft6x06_TS_GetXY+0x90>)
 80030a0:	785b      	ldrb	r3, [r3, #1]
 80030a2:	429a      	cmp	r2, r3
 80030a4:	d234      	bcs.n	8003110 <ft6x06_TS_GetXY+0x88>
  {
    switch(ft6x06_handle.currActiveTouchIdx)
 80030a6:	4b1c      	ldr	r3, [pc, #112]	; (8003118 <ft6x06_TS_GetXY+0x90>)
 80030a8:	789b      	ldrb	r3, [r3, #2]
 80030aa:	2b00      	cmp	r3, #0
 80030ac:	d002      	beq.n	80030b4 <ft6x06_TS_GetXY+0x2c>
 80030ae:	2b01      	cmp	r3, #1
 80030b0:	d003      	beq.n	80030ba <ft6x06_TS_GetXY+0x32>
    case 1 :
      regAddress = FT6206_P2_XH_REG; 
      break;

    default :
      break;
 80030b2:	e005      	b.n	80030c0 <ft6x06_TS_GetXY+0x38>
      regAddress = FT6206_P1_XH_REG; 
 80030b4:	2303      	movs	r3, #3
 80030b6:	75fb      	strb	r3, [r7, #23]
      break;
 80030b8:	e002      	b.n	80030c0 <ft6x06_TS_GetXY+0x38>
      regAddress = FT6206_P2_XH_REG; 
 80030ba:	2309      	movs	r3, #9
 80030bc:	75fb      	strb	r3, [r7, #23]
      break;
 80030be:	bf00      	nop
    }
    
    /* Read X and Y positions */
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 80030c0:	89fb      	ldrh	r3, [r7, #14]
 80030c2:	b2d8      	uxtb	r0, r3
 80030c4:	f107 0210 	add.w	r2, r7, #16
 80030c8:	7df9      	ldrb	r1, [r7, #23]
 80030ca:	2304      	movs	r3, #4
 80030cc:	f009 fd0a 	bl	800cae4 <TS_IO_ReadMultiple>

    /* Send back ready X position to caller */
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 80030d0:	7c3b      	ldrb	r3, [r7, #16]
 80030d2:	021b      	lsls	r3, r3, #8
 80030d4:	b21b      	sxth	r3, r3
 80030d6:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80030da:	b21a      	sxth	r2, r3
 80030dc:	7c7b      	ldrb	r3, [r7, #17]
 80030de:	b21b      	sxth	r3, r3
 80030e0:	4313      	orrs	r3, r2
 80030e2:	b21b      	sxth	r3, r3
 80030e4:	b29a      	uxth	r2, r3
 80030e6:	68bb      	ldr	r3, [r7, #8]
 80030e8:	801a      	strh	r2, [r3, #0]
    
    /* Send back ready Y position to caller */
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 80030ea:	7cbb      	ldrb	r3, [r7, #18]
 80030ec:	021b      	lsls	r3, r3, #8
 80030ee:	b21b      	sxth	r3, r3
 80030f0:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80030f4:	b21a      	sxth	r2, r3
 80030f6:	7cfb      	ldrb	r3, [r7, #19]
 80030f8:	b21b      	sxth	r3, r3
 80030fa:	4313      	orrs	r3, r2
 80030fc:	b21b      	sxth	r3, r3
 80030fe:	b29a      	uxth	r2, r3
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	801a      	strh	r2, [r3, #0]
    
    ft6x06_handle.currActiveTouchIdx++;
 8003104:	4b04      	ldr	r3, [pc, #16]	; (8003118 <ft6x06_TS_GetXY+0x90>)
 8003106:	789b      	ldrb	r3, [r3, #2]
 8003108:	3301      	adds	r3, #1
 800310a:	b2da      	uxtb	r2, r3
 800310c:	4b02      	ldr	r3, [pc, #8]	; (8003118 <ft6x06_TS_GetXY+0x90>)
 800310e:	709a      	strb	r2, [r3, #2]
  }
}
 8003110:	bf00      	nop
 8003112:	3718      	adds	r7, #24
 8003114:	46bd      	mov	sp, r7
 8003116:	bd80      	pop	{r7, pc}
 8003118:	2002fd20 	.word	0x2002fd20

0800311c <ft6x06_TS_EnableIT>:
  *         connected to MCU as EXTI.
  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT6xx6).
  * @retval None
  */
void ft6x06_TS_EnableIT(uint16_t DeviceAddr)
{
 800311c:	b580      	push	{r7, lr}
 800311e:	b084      	sub	sp, #16
 8003120:	af00      	add	r7, sp, #0
 8003122:	4603      	mov	r3, r0
 8003124:	80fb      	strh	r3, [r7, #6]
  uint8_t regValue = 0;
 8003126:	2300      	movs	r3, #0
 8003128:	73fb      	strb	r3, [r7, #15]
  regValue = (FT6206_G_MODE_INTERRUPT_TRIGGER & (FT6206_G_MODE_INTERRUPT_MASK >> FT6206_G_MODE_INTERRUPT_SHIFT)) << FT6206_G_MODE_INTERRUPT_SHIFT;
 800312a:	2301      	movs	r3, #1
 800312c:	73fb      	strb	r3, [r7, #15]
  
  /* Set interrupt trigger mode in FT6206_GMODE_REG */
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 800312e:	88fb      	ldrh	r3, [r7, #6]
 8003130:	b2db      	uxtb	r3, r3
 8003132:	7bfa      	ldrb	r2, [r7, #15]
 8003134:	21a4      	movs	r1, #164	; 0xa4
 8003136:	4618      	mov	r0, r3
 8003138:	f009 fcba 	bl	800cab0 <TS_IO_Write>
}
 800313c:	bf00      	nop
 800313e:	3710      	adds	r7, #16
 8003140:	46bd      	mov	sp, r7
 8003142:	bd80      	pop	{r7, pc}

08003144 <ft6x06_TS_DisableIT>:
  *         connected to MCU as EXTI.
  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT6xx6).
  * @retval None
  */
void ft6x06_TS_DisableIT(uint16_t DeviceAddr)
{
 8003144:	b580      	push	{r7, lr}
 8003146:	b084      	sub	sp, #16
 8003148:	af00      	add	r7, sp, #0
 800314a:	4603      	mov	r3, r0
 800314c:	80fb      	strh	r3, [r7, #6]
  uint8_t regValue = 0;
 800314e:	2300      	movs	r3, #0
 8003150:	73fb      	strb	r3, [r7, #15]
  regValue = (FT6206_G_MODE_INTERRUPT_POLLING & (FT6206_G_MODE_INTERRUPT_MASK >> FT6206_G_MODE_INTERRUPT_SHIFT)) << FT6206_G_MODE_INTERRUPT_SHIFT;
 8003152:	2300      	movs	r3, #0
 8003154:	73fb      	strb	r3, [r7, #15]

  /* Set interrupt polling mode in FT6206_GMODE_REG */
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8003156:	88fb      	ldrh	r3, [r7, #6]
 8003158:	b2db      	uxtb	r3, r3
 800315a:	7bfa      	ldrb	r2, [r7, #15]
 800315c:	21a4      	movs	r1, #164	; 0xa4
 800315e:	4618      	mov	r0, r3
 8003160:	f009 fca6 	bl	800cab0 <TS_IO_Write>
}
 8003164:	bf00      	nop
 8003166:	3710      	adds	r7, #16
 8003168:	46bd      	mov	sp, r7
 800316a:	bd80      	pop	{r7, pc}

0800316c <ft6x06_TS_ITStatus>:
  *         @note : This feature is not applicable to FT6xx6.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT6xx6).
  * @retval TS interrupts status : always return 0 here
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
 800316c:	b480      	push	{r7}
 800316e:	b083      	sub	sp, #12
 8003170:	af00      	add	r7, sp, #0
 8003172:	4603      	mov	r3, r0
 8003174:	80fb      	strh	r3, [r7, #6]
  /* Always return 0 as feature not applicable to FT6xx6 */
  return 0;
 8003176:	2300      	movs	r3, #0
}
 8003178:	4618      	mov	r0, r3
 800317a:	370c      	adds	r7, #12
 800317c:	46bd      	mov	sp, r7
 800317e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003182:	4770      	bx	lr

08003184 <ft6x06_TS_ClearIT>:
  *         @note : This feature is not applicable to FT6xx6.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT6xx6).
  * @retval None
  */
void ft6x06_TS_ClearIT(uint16_t DeviceAddr)
{
 8003184:	b480      	push	{r7}
 8003186:	b083      	sub	sp, #12
 8003188:	af00      	add	r7, sp, #0
 800318a:	4603      	mov	r3, r0
 800318c:	80fb      	strh	r3, [r7, #6]
  /* Nothing to be done here for FT6xx6 */
}
 800318e:	bf00      	nop
 8003190:	370c      	adds	r7, #12
 8003192:	46bd      	mov	sp, r7
 8003194:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003198:	4770      	bx	lr

0800319a <ft6x06_TS_Configure>:
  * @brief  Basic static configuration of TouchScreen
  * @param  DeviceAddr: FT6xx6 Device address for communication on I2C Bus.
  * @retval Status FT6206_STATUS_OK or FT6206_STATUS_NOT_OK.
  */
static uint32_t ft6x06_TS_Configure(uint16_t DeviceAddr)
{
 800319a:	b480      	push	{r7}
 800319c:	b085      	sub	sp, #20
 800319e:	af00      	add	r7, sp, #0
 80031a0:	4603      	mov	r3, r0
 80031a2:	80fb      	strh	r3, [r7, #6]
  uint32_t status = FT6206_STATUS_OK;
 80031a4:	2300      	movs	r3, #0
 80031a6:	60fb      	str	r3, [r7, #12]

  /* Nothing special to be done for FT6xx6 */

  return(status);
 80031a8:	68fb      	ldr	r3, [r7, #12]
}
 80031aa:	4618      	mov	r0, r3
 80031ac:	3714      	adds	r7, #20
 80031ae:	46bd      	mov	sp, r7
 80031b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031b4:	4770      	bx	lr
	...

080031b8 <ft6x06_GetInstance>:
  *         and return its index  
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Index of the device instance if registered, 0xFF if not.
  */
static uint8_t ft6x06_GetInstance(uint16_t DeviceAddr)
{
 80031b8:	b480      	push	{r7}
 80031ba:	b085      	sub	sp, #20
 80031bc:	af00      	add	r7, sp, #0
 80031be:	4603      	mov	r3, r0
 80031c0:	80fb      	strh	r3, [r7, #6]
  uint8_t idx = 0;
 80031c2:	2300      	movs	r3, #0
 80031c4:	73fb      	strb	r3, [r7, #15]
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 80031c6:	2300      	movs	r3, #0
 80031c8:	73fb      	strb	r3, [r7, #15]
 80031ca:	e00b      	b.n	80031e4 <ft6x06_GetInstance+0x2c>
  {
    if(ft6x06[idx] == DeviceAddr)
 80031cc:	7bfb      	ldrb	r3, [r7, #15]
 80031ce:	4a0a      	ldr	r2, [pc, #40]	; (80031f8 <ft6x06_GetInstance+0x40>)
 80031d0:	5cd3      	ldrb	r3, [r2, r3]
 80031d2:	b29b      	uxth	r3, r3
 80031d4:	88fa      	ldrh	r2, [r7, #6]
 80031d6:	429a      	cmp	r2, r3
 80031d8:	d101      	bne.n	80031de <ft6x06_GetInstance+0x26>
    {
      return idx; 
 80031da:	7bfb      	ldrb	r3, [r7, #15]
 80031dc:	e006      	b.n	80031ec <ft6x06_GetInstance+0x34>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 80031de:	7bfb      	ldrb	r3, [r7, #15]
 80031e0:	3301      	adds	r3, #1
 80031e2:	73fb      	strb	r3, [r7, #15]
 80031e4:	7bfb      	ldrb	r3, [r7, #15]
 80031e6:	2b01      	cmp	r3, #1
 80031e8:	d9f0      	bls.n	80031cc <ft6x06_GetInstance+0x14>
    }
  }
  
  return 0xFF;
 80031ea:	23ff      	movs	r3, #255	; 0xff
}
 80031ec:	4618      	mov	r0, r3
 80031ee:	3714      	adds	r7, #20
 80031f0:	46bd      	mov	sp, r7
 80031f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031f6:	4770      	bx	lr
 80031f8:	2002fd1c 	.word	0x2002fd1c

080031fc <I2Cx_Error>:
extern SAI_HandleTypeDef hsai_BlockA1;
extern SAI_HandleTypeDef hsai_BlockB1;
extern void MX_SAI1_Init();

static void I2Cx_Error(I2C_HandleTypeDef* i2c_handler, uint8_t Addr)
{
 80031fc:	b480      	push	{r7}
 80031fe:	b083      	sub	sp, #12
 8003200:	af00      	add	r7, sp, #0
 8003202:	6078      	str	r0, [r7, #4]
 8003204:	460b      	mov	r3, r1
 8003206:	70fb      	strb	r3, [r7, #3]
//	  HAL_GPIO_TogglePin(GPIOF, GPIO_PIN_14);
//    HAL_I2C_DeInit(i2c_handler);
//    HAL_I2C_Init(i2c_handler);
}
 8003208:	bf00      	nop
 800320a:	370c      	adds	r7, #12
 800320c:	46bd      	mov	sp, r7
 800320e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003212:	4770      	bx	lr

08003214 <WM8731I2CCommand>:

void WM8731I2CCommand(uint8_t reg, uint16_t cmd) {
 8003214:	b580      	push	{r7, lr}
 8003216:	b086      	sub	sp, #24
 8003218:	af02      	add	r7, sp, #8
 800321a:	4603      	mov	r3, r0
 800321c:	460a      	mov	r2, r1
 800321e:	71fb      	strb	r3, [r7, #7]
 8003220:	4613      	mov	r3, r2
 8003222:	80bb      	strh	r3, [r7, #4]
  //addresses are 7 bits, but 8 bits are transmitted each time in I2C, so shift address left. LSB should be MSB of register value
  uint8_t buff[2];
  buff[0] = (reg << 1) | (cmd >> 8);
 8003224:	79fb      	ldrb	r3, [r7, #7]
 8003226:	005b      	lsls	r3, r3, #1
 8003228:	b25a      	sxtb	r2, r3
 800322a:	88bb      	ldrh	r3, [r7, #4]
 800322c:	0a1b      	lsrs	r3, r3, #8
 800322e:	b29b      	uxth	r3, r3
 8003230:	b25b      	sxtb	r3, r3
 8003232:	4313      	orrs	r3, r2
 8003234:	b25b      	sxtb	r3, r3
 8003236:	b2db      	uxtb	r3, r3
 8003238:	733b      	strb	r3, [r7, #12]
  buff[1] = (uint8_t) cmd;
 800323a:	88bb      	ldrh	r3, [r7, #4]
 800323c:	b2db      	uxtb	r3, r3
 800323e:	737b      	strb	r3, [r7, #13]

  if (HAL_I2C_Master_Transmit(&hi2c2, WM8731_ADDRESS, buff, 2, HAL_MAX_DELAY) != HAL_OK) {
 8003240:	f107 020c 	add.w	r2, r7, #12
 8003244:	f04f 33ff 	mov.w	r3, #4294967295
 8003248:	9300      	str	r3, [sp, #0]
 800324a:	2302      	movs	r3, #2
 800324c:	2134      	movs	r1, #52	; 0x34
 800324e:	4807      	ldr	r0, [pc, #28]	; (800326c <WM8731I2CCommand+0x58>)
 8003250:	f001 f9de 	bl	8004610 <HAL_I2C_Master_Transmit>
 8003254:	4603      	mov	r3, r0
 8003256:	2b00      	cmp	r3, #0
 8003258:	d003      	beq.n	8003262 <WM8731I2CCommand+0x4e>
	  I2Cx_Error(&hi2c2, WM8731_ADDRESS);
 800325a:	2134      	movs	r1, #52	; 0x34
 800325c:	4803      	ldr	r0, [pc, #12]	; (800326c <WM8731I2CCommand+0x58>)
 800325e:	f7ff ffcd 	bl	80031fc <I2Cx_Error>
  }
}
 8003262:	bf00      	nop
 8003264:	3710      	adds	r7, #16
 8003266:	46bd      	mov	sp, r7
 8003268:	bd80      	pop	{r7, pc}
 800326a:	bf00      	nop
 800326c:	200001b4 	.word	0x200001b4

08003270 <WM8731_Init>:

void WM8731_Init() {
 8003270:	b580      	push	{r7, lr}
 8003272:	af00      	add	r7, sp, #0
	  WM8731I2CCommand(WM8731_REG_PDOWN_CTRL, _WM8731_power_off);
 8003274:	f240 11ff 	movw	r1, #511	; 0x1ff
 8003278:	2006      	movs	r0, #6
 800327a:	f7ff ffcb 	bl	8003214 <WM8731I2CCommand>
	  WM8731I2CCommand(WM8731_REG_RESET, _WM8731_Reset);
 800327e:	2100      	movs	r1, #0
 8003280:	200f      	movs	r0, #15
 8003282:	f7ff ffc7 	bl	8003214 <WM8731I2CCommand>
	   WM8731I2CCommand(WM8731_REG_LLINE, _WM8731_Left_line);
 8003286:	210f      	movs	r1, #15
 8003288:	2000      	movs	r0, #0
 800328a:	f7ff ffc3 	bl	8003214 <WM8731I2CCommand>
	   WM8731I2CCommand(WM8731_REG_RLINE, _WM8731_Right_line);
 800328e:	210f      	movs	r1, #15
 8003290:	2001      	movs	r0, #1
 8003292:	f7ff ffbf 	bl	8003214 <WM8731I2CCommand>
	   WM8731I2CCommand(WM8731_REG_LHPHONE_OUT, _WM8731_Left_hp);
 8003296:	21fb      	movs	r1, #251	; 0xfb
 8003298:	2002      	movs	r0, #2
 800329a:	f7ff ffbb 	bl	8003214 <WM8731I2CCommand>
	   WM8731I2CCommand(WM8731_REG_RHPHONE_OUT, _WM8731_Right_hp);
 800329e:	21fb      	movs	r1, #251	; 0xfb
 80032a0:	2003      	movs	r0, #3
 80032a2:	f7ff ffb7 	bl	8003214 <WM8731I2CCommand>
	//   //WM8731I2CCommand(WM8731_REG_ANALOG_PATH, _WM8731_AnalogAudio_Mic);
	  WM8731I2CCommand(WM8731_REG_ANALOG_PATH, _WM8731_AnalogAudio_Line);
 80032a6:	2112      	movs	r1, #18
 80032a8:	2004      	movs	r0, #4
 80032aa:	f7ff ffb3 	bl	8003214 <WM8731I2CCommand>
	   WM8731I2CCommand(WM8731_REG_DIGITAL_PATH, _WM8731_DigitalAudio);
 80032ae:	2107      	movs	r1, #7
 80032b0:	2005      	movs	r0, #5
 80032b2:	f7ff ffaf 	bl	8003214 <WM8731I2CCommand>
	   WM8731I2CCommand(WM8731_REG_PDOWN_CTRL, _WM8731_power | WM8731_MICPD);
 80032b6:	2102      	movs	r1, #2
 80032b8:	2006      	movs	r0, #6
 80032ba:	f7ff ffab 	bl	8003214 <WM8731I2CCommand>
	   WM8731I2CCommand(WM8731_REG_DIGITAL_IF, _WM8731_DAIF);
 80032be:	2142      	movs	r1, #66	; 0x42
 80032c0:	2007      	movs	r0, #7
 80032c2:	f7ff ffa7 	bl	8003214 <WM8731I2CCommand>
	//   //WM8731I2CCommand(WM8731_REG_SAMPLING_CTRL, _WM8731_Sampling);
	  WM8731I2CCommand(WM8731_REG_ACTIVE_CTRL, _WM8731_Activate);
 80032c6:	2101      	movs	r1, #1
 80032c8:	2009      	movs	r0, #9
 80032ca:	f7ff ffa3 	bl	8003214 <WM8731I2CCommand>
//	  WM8731_In_Mute();


}
 80032ce:	bf00      	nop
 80032d0:	bd80      	pop	{r7, pc}

080032d2 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80032d2:	b580      	push	{r7, lr}
 80032d4:	af00      	add	r7, sp, #0
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80032d6:	2003      	movs	r0, #3
 80032d8:	f000 f94c 	bl	8003574 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80032dc:	200f      	movs	r0, #15
 80032de:	f000 f805 	bl	80032ec <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80032e2:	f7ff f97d 	bl	80025e0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80032e6:	2300      	movs	r3, #0
}
 80032e8:	4618      	mov	r0, r3
 80032ea:	bd80      	pop	{r7, pc}

080032ec <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80032ec:	b580      	push	{r7, lr}
 80032ee:	b082      	sub	sp, #8
 80032f0:	af00      	add	r7, sp, #0
 80032f2:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80032f4:	4b12      	ldr	r3, [pc, #72]	; (8003340 <HAL_InitTick+0x54>)
 80032f6:	681a      	ldr	r2, [r3, #0]
 80032f8:	4b12      	ldr	r3, [pc, #72]	; (8003344 <HAL_InitTick+0x58>)
 80032fa:	781b      	ldrb	r3, [r3, #0]
 80032fc:	4619      	mov	r1, r3
 80032fe:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003302:	fbb3 f3f1 	udiv	r3, r3, r1
 8003306:	fbb2 f3f3 	udiv	r3, r2, r3
 800330a:	4618      	mov	r0, r3
 800330c:	f000 f967 	bl	80035de <HAL_SYSTICK_Config>
 8003310:	4603      	mov	r3, r0
 8003312:	2b00      	cmp	r3, #0
 8003314:	d001      	beq.n	800331a <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8003316:	2301      	movs	r3, #1
 8003318:	e00e      	b.n	8003338 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	2b0f      	cmp	r3, #15
 800331e:	d80a      	bhi.n	8003336 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8003320:	2200      	movs	r2, #0
 8003322:	6879      	ldr	r1, [r7, #4]
 8003324:	f04f 30ff 	mov.w	r0, #4294967295
 8003328:	f000 f92f 	bl	800358a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 800332c:	4a06      	ldr	r2, [pc, #24]	; (8003348 <HAL_InitTick+0x5c>)
 800332e:	687b      	ldr	r3, [r7, #4]
 8003330:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8003332:	2300      	movs	r3, #0
 8003334:	e000      	b.n	8003338 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8003336:	2301      	movs	r3, #1
}
 8003338:	4618      	mov	r0, r3
 800333a:	3708      	adds	r7, #8
 800333c:	46bd      	mov	sp, r7
 800333e:	bd80      	pop	{r7, pc}
 8003340:	20000008 	.word	0x20000008
 8003344:	20000038 	.word	0x20000038
 8003348:	20000034 	.word	0x20000034

0800334c <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 800334c:	b480      	push	{r7}
 800334e:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8003350:	4b06      	ldr	r3, [pc, #24]	; (800336c <HAL_IncTick+0x20>)
 8003352:	781b      	ldrb	r3, [r3, #0]
 8003354:	461a      	mov	r2, r3
 8003356:	4b06      	ldr	r3, [pc, #24]	; (8003370 <HAL_IncTick+0x24>)
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	4413      	add	r3, r2
 800335c:	4a04      	ldr	r2, [pc, #16]	; (8003370 <HAL_IncTick+0x24>)
 800335e:	6013      	str	r3, [r2, #0]
}
 8003360:	bf00      	nop
 8003362:	46bd      	mov	sp, r7
 8003364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003368:	4770      	bx	lr
 800336a:	bf00      	nop
 800336c:	20000038 	.word	0x20000038
 8003370:	2002fd24 	.word	0x2002fd24

08003374 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8003374:	b480      	push	{r7}
 8003376:	af00      	add	r7, sp, #0
  return uwTick;
 8003378:	4b03      	ldr	r3, [pc, #12]	; (8003388 <HAL_GetTick+0x14>)
 800337a:	681b      	ldr	r3, [r3, #0]
}
 800337c:	4618      	mov	r0, r3
 800337e:	46bd      	mov	sp, r7
 8003380:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003384:	4770      	bx	lr
 8003386:	bf00      	nop
 8003388:	2002fd24 	.word	0x2002fd24

0800338c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800338c:	b580      	push	{r7, lr}
 800338e:	b084      	sub	sp, #16
 8003390:	af00      	add	r7, sp, #0
 8003392:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8003394:	f7ff ffee 	bl	8003374 <HAL_GetTick>
 8003398:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 800339a:	687b      	ldr	r3, [r7, #4]
 800339c:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800339e:	68fb      	ldr	r3, [r7, #12]
 80033a0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80033a4:	d005      	beq.n	80033b2 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 80033a6:	4b0a      	ldr	r3, [pc, #40]	; (80033d0 <HAL_Delay+0x44>)
 80033a8:	781b      	ldrb	r3, [r3, #0]
 80033aa:	461a      	mov	r2, r3
 80033ac:	68fb      	ldr	r3, [r7, #12]
 80033ae:	4413      	add	r3, r2
 80033b0:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 80033b2:	bf00      	nop
 80033b4:	f7ff ffde 	bl	8003374 <HAL_GetTick>
 80033b8:	4602      	mov	r2, r0
 80033ba:	68bb      	ldr	r3, [r7, #8]
 80033bc:	1ad3      	subs	r3, r2, r3
 80033be:	68fa      	ldr	r2, [r7, #12]
 80033c0:	429a      	cmp	r2, r3
 80033c2:	d8f7      	bhi.n	80033b4 <HAL_Delay+0x28>
  {
  }
}
 80033c4:	bf00      	nop
 80033c6:	bf00      	nop
 80033c8:	3710      	adds	r7, #16
 80033ca:	46bd      	mov	sp, r7
 80033cc:	bd80      	pop	{r7, pc}
 80033ce:	bf00      	nop
 80033d0:	20000038 	.word	0x20000038

080033d4 <__NVIC_SetPriorityGrouping>:
{
 80033d4:	b480      	push	{r7}
 80033d6:	b085      	sub	sp, #20
 80033d8:	af00      	add	r7, sp, #0
 80033da:	6078      	str	r0, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	f003 0307 	and.w	r3, r3, #7
 80033e2:	60fb      	str	r3, [r7, #12]
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80033e4:	4b0b      	ldr	r3, [pc, #44]	; (8003414 <__NVIC_SetPriorityGrouping+0x40>)
 80033e6:	68db      	ldr	r3, [r3, #12]
 80033e8:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80033ea:	68ba      	ldr	r2, [r7, #8]
 80033ec:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80033f0:	4013      	ands	r3, r2
 80033f2:	60bb      	str	r3, [r7, #8]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80033f4:	68fb      	ldr	r3, [r7, #12]
 80033f6:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80033f8:	68bb      	ldr	r3, [r7, #8]
 80033fa:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 80033fc:	4b06      	ldr	r3, [pc, #24]	; (8003418 <__NVIC_SetPriorityGrouping+0x44>)
 80033fe:	4313      	orrs	r3, r2
 8003400:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8003402:	4a04      	ldr	r2, [pc, #16]	; (8003414 <__NVIC_SetPriorityGrouping+0x40>)
 8003404:	68bb      	ldr	r3, [r7, #8]
 8003406:	60d3      	str	r3, [r2, #12]
}
 8003408:	bf00      	nop
 800340a:	3714      	adds	r7, #20
 800340c:	46bd      	mov	sp, r7
 800340e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003412:	4770      	bx	lr
 8003414:	e000ed00 	.word	0xe000ed00
 8003418:	05fa0000 	.word	0x05fa0000

0800341c <__NVIC_GetPriorityGrouping>:
{
 800341c:	b480      	push	{r7}
 800341e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003420:	4b04      	ldr	r3, [pc, #16]	; (8003434 <__NVIC_GetPriorityGrouping+0x18>)
 8003422:	68db      	ldr	r3, [r3, #12]
 8003424:	0a1b      	lsrs	r3, r3, #8
 8003426:	f003 0307 	and.w	r3, r3, #7
}
 800342a:	4618      	mov	r0, r3
 800342c:	46bd      	mov	sp, r7
 800342e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003432:	4770      	bx	lr
 8003434:	e000ed00 	.word	0xe000ed00

08003438 <__NVIC_EnableIRQ>:
{
 8003438:	b480      	push	{r7}
 800343a:	b083      	sub	sp, #12
 800343c:	af00      	add	r7, sp, #0
 800343e:	4603      	mov	r3, r0
 8003440:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003442:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003446:	2b00      	cmp	r3, #0
 8003448:	db0b      	blt.n	8003462 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800344a:	79fb      	ldrb	r3, [r7, #7]
 800344c:	f003 021f 	and.w	r2, r3, #31
 8003450:	4907      	ldr	r1, [pc, #28]	; (8003470 <__NVIC_EnableIRQ+0x38>)
 8003452:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003456:	095b      	lsrs	r3, r3, #5
 8003458:	2001      	movs	r0, #1
 800345a:	fa00 f202 	lsl.w	r2, r0, r2
 800345e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8003462:	bf00      	nop
 8003464:	370c      	adds	r7, #12
 8003466:	46bd      	mov	sp, r7
 8003468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800346c:	4770      	bx	lr
 800346e:	bf00      	nop
 8003470:	e000e100 	.word	0xe000e100

08003474 <__NVIC_SetPriority>:
{
 8003474:	b480      	push	{r7}
 8003476:	b083      	sub	sp, #12
 8003478:	af00      	add	r7, sp, #0
 800347a:	4603      	mov	r3, r0
 800347c:	6039      	str	r1, [r7, #0]
 800347e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003480:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003484:	2b00      	cmp	r3, #0
 8003486:	db0a      	blt.n	800349e <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003488:	683b      	ldr	r3, [r7, #0]
 800348a:	b2da      	uxtb	r2, r3
 800348c:	490c      	ldr	r1, [pc, #48]	; (80034c0 <__NVIC_SetPriority+0x4c>)
 800348e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003492:	0112      	lsls	r2, r2, #4
 8003494:	b2d2      	uxtb	r2, r2
 8003496:	440b      	add	r3, r1
 8003498:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 800349c:	e00a      	b.n	80034b4 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800349e:	683b      	ldr	r3, [r7, #0]
 80034a0:	b2da      	uxtb	r2, r3
 80034a2:	4908      	ldr	r1, [pc, #32]	; (80034c4 <__NVIC_SetPriority+0x50>)
 80034a4:	79fb      	ldrb	r3, [r7, #7]
 80034a6:	f003 030f 	and.w	r3, r3, #15
 80034aa:	3b04      	subs	r3, #4
 80034ac:	0112      	lsls	r2, r2, #4
 80034ae:	b2d2      	uxtb	r2, r2
 80034b0:	440b      	add	r3, r1
 80034b2:	761a      	strb	r2, [r3, #24]
}
 80034b4:	bf00      	nop
 80034b6:	370c      	adds	r7, #12
 80034b8:	46bd      	mov	sp, r7
 80034ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034be:	4770      	bx	lr
 80034c0:	e000e100 	.word	0xe000e100
 80034c4:	e000ed00 	.word	0xe000ed00

080034c8 <NVIC_EncodePriority>:
{
 80034c8:	b480      	push	{r7}
 80034ca:	b089      	sub	sp, #36	; 0x24
 80034cc:	af00      	add	r7, sp, #0
 80034ce:	60f8      	str	r0, [r7, #12]
 80034d0:	60b9      	str	r1, [r7, #8]
 80034d2:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80034d4:	68fb      	ldr	r3, [r7, #12]
 80034d6:	f003 0307 	and.w	r3, r3, #7
 80034da:	61fb      	str	r3, [r7, #28]
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80034dc:	69fb      	ldr	r3, [r7, #28]
 80034de:	f1c3 0307 	rsb	r3, r3, #7
 80034e2:	2b04      	cmp	r3, #4
 80034e4:	bf28      	it	cs
 80034e6:	2304      	movcs	r3, #4
 80034e8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80034ea:	69fb      	ldr	r3, [r7, #28]
 80034ec:	3304      	adds	r3, #4
 80034ee:	2b06      	cmp	r3, #6
 80034f0:	d902      	bls.n	80034f8 <NVIC_EncodePriority+0x30>
 80034f2:	69fb      	ldr	r3, [r7, #28]
 80034f4:	3b03      	subs	r3, #3
 80034f6:	e000      	b.n	80034fa <NVIC_EncodePriority+0x32>
 80034f8:	2300      	movs	r3, #0
 80034fa:	617b      	str	r3, [r7, #20]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80034fc:	f04f 32ff 	mov.w	r2, #4294967295
 8003500:	69bb      	ldr	r3, [r7, #24]
 8003502:	fa02 f303 	lsl.w	r3, r2, r3
 8003506:	43da      	mvns	r2, r3
 8003508:	68bb      	ldr	r3, [r7, #8]
 800350a:	401a      	ands	r2, r3
 800350c:	697b      	ldr	r3, [r7, #20]
 800350e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003510:	f04f 31ff 	mov.w	r1, #4294967295
 8003514:	697b      	ldr	r3, [r7, #20]
 8003516:	fa01 f303 	lsl.w	r3, r1, r3
 800351a:	43d9      	mvns	r1, r3
 800351c:	687b      	ldr	r3, [r7, #4]
 800351e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003520:	4313      	orrs	r3, r2
}
 8003522:	4618      	mov	r0, r3
 8003524:	3724      	adds	r7, #36	; 0x24
 8003526:	46bd      	mov	sp, r7
 8003528:	f85d 7b04 	ldr.w	r7, [sp], #4
 800352c:	4770      	bx	lr
	...

08003530 <SysTick_Config>:
{
 8003530:	b580      	push	{r7, lr}
 8003532:	b082      	sub	sp, #8
 8003534:	af00      	add	r7, sp, #0
 8003536:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	3b01      	subs	r3, #1
 800353c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003540:	d301      	bcc.n	8003546 <SysTick_Config+0x16>
    return (1UL);                                                   /* Reload value impossible */
 8003542:	2301      	movs	r3, #1
 8003544:	e00f      	b.n	8003566 <SysTick_Config+0x36>
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003546:	4a0a      	ldr	r2, [pc, #40]	; (8003570 <SysTick_Config+0x40>)
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	3b01      	subs	r3, #1
 800354c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800354e:	210f      	movs	r1, #15
 8003550:	f04f 30ff 	mov.w	r0, #4294967295
 8003554:	f7ff ff8e 	bl	8003474 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003558:	4b05      	ldr	r3, [pc, #20]	; (8003570 <SysTick_Config+0x40>)
 800355a:	2200      	movs	r2, #0
 800355c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800355e:	4b04      	ldr	r3, [pc, #16]	; (8003570 <SysTick_Config+0x40>)
 8003560:	2207      	movs	r2, #7
 8003562:	601a      	str	r2, [r3, #0]
  return (0UL);                                                     /* Function successful */
 8003564:	2300      	movs	r3, #0
}
 8003566:	4618      	mov	r0, r3
 8003568:	3708      	adds	r7, #8
 800356a:	46bd      	mov	sp, r7
 800356c:	bd80      	pop	{r7, pc}
 800356e:	bf00      	nop
 8003570:	e000e010 	.word	0xe000e010

08003574 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003574:	b580      	push	{r7, lr}
 8003576:	b082      	sub	sp, #8
 8003578:	af00      	add	r7, sp, #0
 800357a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 800357c:	6878      	ldr	r0, [r7, #4]
 800357e:	f7ff ff29 	bl	80033d4 <__NVIC_SetPriorityGrouping>
}
 8003582:	bf00      	nop
 8003584:	3708      	adds	r7, #8
 8003586:	46bd      	mov	sp, r7
 8003588:	bd80      	pop	{r7, pc}

0800358a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800358a:	b580      	push	{r7, lr}
 800358c:	b086      	sub	sp, #24
 800358e:	af00      	add	r7, sp, #0
 8003590:	4603      	mov	r3, r0
 8003592:	60b9      	str	r1, [r7, #8]
 8003594:	607a      	str	r2, [r7, #4]
 8003596:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 8003598:	2300      	movs	r3, #0
 800359a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 800359c:	f7ff ff3e 	bl	800341c <__NVIC_GetPriorityGrouping>
 80035a0:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80035a2:	687a      	ldr	r2, [r7, #4]
 80035a4:	68b9      	ldr	r1, [r7, #8]
 80035a6:	6978      	ldr	r0, [r7, #20]
 80035a8:	f7ff ff8e 	bl	80034c8 <NVIC_EncodePriority>
 80035ac:	4602      	mov	r2, r0
 80035ae:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80035b2:	4611      	mov	r1, r2
 80035b4:	4618      	mov	r0, r3
 80035b6:	f7ff ff5d 	bl	8003474 <__NVIC_SetPriority>
}
 80035ba:	bf00      	nop
 80035bc:	3718      	adds	r7, #24
 80035be:	46bd      	mov	sp, r7
 80035c0:	bd80      	pop	{r7, pc}

080035c2 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80035c2:	b580      	push	{r7, lr}
 80035c4:	b082      	sub	sp, #8
 80035c6:	af00      	add	r7, sp, #0
 80035c8:	4603      	mov	r3, r0
 80035ca:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80035cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035d0:	4618      	mov	r0, r3
 80035d2:	f7ff ff31 	bl	8003438 <__NVIC_EnableIRQ>
}
 80035d6:	bf00      	nop
 80035d8:	3708      	adds	r7, #8
 80035da:	46bd      	mov	sp, r7
 80035dc:	bd80      	pop	{r7, pc}

080035de <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80035de:	b580      	push	{r7, lr}
 80035e0:	b082      	sub	sp, #8
 80035e2:	af00      	add	r7, sp, #0
 80035e4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80035e6:	6878      	ldr	r0, [r7, #4]
 80035e8:	f7ff ffa2 	bl	8003530 <SysTick_Config>
 80035ec:	4603      	mov	r3, r0
}
 80035ee:	4618      	mov	r0, r3
 80035f0:	3708      	adds	r7, #8
 80035f2:	46bd      	mov	sp, r7
 80035f4:	bd80      	pop	{r7, pc}
	...

080035f8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80035f8:	b580      	push	{r7, lr}
 80035fa:	b082      	sub	sp, #8
 80035fc:	af00      	add	r7, sp, #0
 80035fe:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	2b00      	cmp	r3, #0
 8003604:	d101      	bne.n	800360a <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8003606:	2301      	movs	r3, #1
 8003608:	e054      	b.n	80036b4 <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	7f5b      	ldrb	r3, [r3, #29]
 800360e:	b2db      	uxtb	r3, r3
 8003610:	2b00      	cmp	r3, #0
 8003612:	d105      	bne.n	8003620 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	2200      	movs	r2, #0
 8003618:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800361a:	6878      	ldr	r0, [r7, #4]
 800361c:	f7ff f80a 	bl	8002634 <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 8003620:	687b      	ldr	r3, [r7, #4]
 8003622:	2202      	movs	r2, #2
 8003624:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	791b      	ldrb	r3, [r3, #4]
 800362a:	2b00      	cmp	r3, #0
 800362c:	d10c      	bne.n	8003648 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	4a22      	ldr	r2, [pc, #136]	; (80036bc <HAL_CRC_Init+0xc4>)
 8003634:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	681b      	ldr	r3, [r3, #0]
 800363a:	689a      	ldr	r2, [r3, #8]
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	681b      	ldr	r3, [r3, #0]
 8003640:	f022 0218 	bic.w	r2, r2, #24
 8003644:	609a      	str	r2, [r3, #8]
 8003646:	e00c      	b.n	8003662 <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8003648:	687b      	ldr	r3, [r7, #4]
 800364a:	6899      	ldr	r1, [r3, #8]
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	68db      	ldr	r3, [r3, #12]
 8003650:	461a      	mov	r2, r3
 8003652:	6878      	ldr	r0, [r7, #4]
 8003654:	f000 f834 	bl	80036c0 <HAL_CRCEx_Polynomial_Set>
 8003658:	4603      	mov	r3, r0
 800365a:	2b00      	cmp	r3, #0
 800365c:	d001      	beq.n	8003662 <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 800365e:	2301      	movs	r3, #1
 8003660:	e028      	b.n	80036b4 <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	795b      	ldrb	r3, [r3, #5]
 8003666:	2b00      	cmp	r3, #0
 8003668:	d105      	bne.n	8003676 <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	681b      	ldr	r3, [r3, #0]
 800366e:	f04f 32ff 	mov.w	r2, #4294967295
 8003672:	611a      	str	r2, [r3, #16]
 8003674:	e004      	b.n	8003680 <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	681b      	ldr	r3, [r3, #0]
 800367a:	687a      	ldr	r2, [r7, #4]
 800367c:	6912      	ldr	r2, [r2, #16]
 800367e:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8003680:	687b      	ldr	r3, [r7, #4]
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	689b      	ldr	r3, [r3, #8]
 8003686:	f023 0160 	bic.w	r1, r3, #96	; 0x60
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	695a      	ldr	r2, [r3, #20]
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	430a      	orrs	r2, r1
 8003694:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	681b      	ldr	r3, [r3, #0]
 800369a:	689b      	ldr	r3, [r3, #8]
 800369c:	f023 0180 	bic.w	r1, r3, #128	; 0x80
 80036a0:	687b      	ldr	r3, [r7, #4]
 80036a2:	699a      	ldr	r2, [r3, #24]
 80036a4:	687b      	ldr	r3, [r7, #4]
 80036a6:	681b      	ldr	r3, [r3, #0]
 80036a8:	430a      	orrs	r2, r1
 80036aa:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80036ac:	687b      	ldr	r3, [r7, #4]
 80036ae:	2201      	movs	r2, #1
 80036b0:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 80036b2:	2300      	movs	r3, #0
}
 80036b4:	4618      	mov	r0, r3
 80036b6:	3708      	adds	r7, #8
 80036b8:	46bd      	mov	sp, r7
 80036ba:	bd80      	pop	{r7, pc}
 80036bc:	04c11db7 	.word	0x04c11db7

080036c0 <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 80036c0:	b480      	push	{r7}
 80036c2:	b087      	sub	sp, #28
 80036c4:	af00      	add	r7, sp, #0
 80036c6:	60f8      	str	r0, [r7, #12]
 80036c8:	60b9      	str	r1, [r7, #8]
 80036ca:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80036cc:	2300      	movs	r3, #0
 80036ce:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 80036d0:	231f      	movs	r3, #31
 80036d2:	613b      	str	r3, [r7, #16]
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 80036d4:	bf00      	nop
 80036d6:	693b      	ldr	r3, [r7, #16]
 80036d8:	1e5a      	subs	r2, r3, #1
 80036da:	613a      	str	r2, [r7, #16]
 80036dc:	2b00      	cmp	r3, #0
 80036de:	d009      	beq.n	80036f4 <HAL_CRCEx_Polynomial_Set+0x34>
 80036e0:	693b      	ldr	r3, [r7, #16]
 80036e2:	f003 031f 	and.w	r3, r3, #31
 80036e6:	68ba      	ldr	r2, [r7, #8]
 80036e8:	fa22 f303 	lsr.w	r3, r2, r3
 80036ec:	f003 0301 	and.w	r3, r3, #1
 80036f0:	2b00      	cmp	r3, #0
 80036f2:	d0f0      	beq.n	80036d6 <HAL_CRCEx_Polynomial_Set+0x16>
  {
  }

  switch (PolyLength)
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	2b18      	cmp	r3, #24
 80036f8:	d846      	bhi.n	8003788 <HAL_CRCEx_Polynomial_Set+0xc8>
 80036fa:	a201      	add	r2, pc, #4	; (adr r2, 8003700 <HAL_CRCEx_Polynomial_Set+0x40>)
 80036fc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003700:	0800378f 	.word	0x0800378f
 8003704:	08003789 	.word	0x08003789
 8003708:	08003789 	.word	0x08003789
 800370c:	08003789 	.word	0x08003789
 8003710:	08003789 	.word	0x08003789
 8003714:	08003789 	.word	0x08003789
 8003718:	08003789 	.word	0x08003789
 800371c:	08003789 	.word	0x08003789
 8003720:	0800377d 	.word	0x0800377d
 8003724:	08003789 	.word	0x08003789
 8003728:	08003789 	.word	0x08003789
 800372c:	08003789 	.word	0x08003789
 8003730:	08003789 	.word	0x08003789
 8003734:	08003789 	.word	0x08003789
 8003738:	08003789 	.word	0x08003789
 800373c:	08003789 	.word	0x08003789
 8003740:	08003771 	.word	0x08003771
 8003744:	08003789 	.word	0x08003789
 8003748:	08003789 	.word	0x08003789
 800374c:	08003789 	.word	0x08003789
 8003750:	08003789 	.word	0x08003789
 8003754:	08003789 	.word	0x08003789
 8003758:	08003789 	.word	0x08003789
 800375c:	08003789 	.word	0x08003789
 8003760:	08003765 	.word	0x08003765
  {
    case CRC_POLYLENGTH_7B:
      if (msb >= HAL_CRC_LENGTH_7B)
 8003764:	693b      	ldr	r3, [r7, #16]
 8003766:	2b06      	cmp	r3, #6
 8003768:	d913      	bls.n	8003792 <HAL_CRCEx_Polynomial_Set+0xd2>
      {
        status =   HAL_ERROR;
 800376a:	2301      	movs	r3, #1
 800376c:	75fb      	strb	r3, [r7, #23]
      }
      break;
 800376e:	e010      	b.n	8003792 <HAL_CRCEx_Polynomial_Set+0xd2>
    case CRC_POLYLENGTH_8B:
      if (msb >= HAL_CRC_LENGTH_8B)
 8003770:	693b      	ldr	r3, [r7, #16]
 8003772:	2b07      	cmp	r3, #7
 8003774:	d90f      	bls.n	8003796 <HAL_CRCEx_Polynomial_Set+0xd6>
      {
        status =   HAL_ERROR;
 8003776:	2301      	movs	r3, #1
 8003778:	75fb      	strb	r3, [r7, #23]
      }
      break;
 800377a:	e00c      	b.n	8003796 <HAL_CRCEx_Polynomial_Set+0xd6>
    case CRC_POLYLENGTH_16B:
      if (msb >= HAL_CRC_LENGTH_16B)
 800377c:	693b      	ldr	r3, [r7, #16]
 800377e:	2b0f      	cmp	r3, #15
 8003780:	d90b      	bls.n	800379a <HAL_CRCEx_Polynomial_Set+0xda>
      {
        status =   HAL_ERROR;
 8003782:	2301      	movs	r3, #1
 8003784:	75fb      	strb	r3, [r7, #23]
      }
      break;
 8003786:	e008      	b.n	800379a <HAL_CRCEx_Polynomial_Set+0xda>

    case CRC_POLYLENGTH_32B:
      /* no polynomial definition vs. polynomial length issue possible */
      break;
    default:
      status =  HAL_ERROR;
 8003788:	2301      	movs	r3, #1
 800378a:	75fb      	strb	r3, [r7, #23]
      break;
 800378c:	e006      	b.n	800379c <HAL_CRCEx_Polynomial_Set+0xdc>
      break;
 800378e:	bf00      	nop
 8003790:	e004      	b.n	800379c <HAL_CRCEx_Polynomial_Set+0xdc>
      break;
 8003792:	bf00      	nop
 8003794:	e002      	b.n	800379c <HAL_CRCEx_Polynomial_Set+0xdc>
      break;
 8003796:	bf00      	nop
 8003798:	e000      	b.n	800379c <HAL_CRCEx_Polynomial_Set+0xdc>
      break;
 800379a:	bf00      	nop
  }
  if (status == HAL_OK)
 800379c:	7dfb      	ldrb	r3, [r7, #23]
 800379e:	2b00      	cmp	r3, #0
 80037a0:	d10d      	bne.n	80037be <HAL_CRCEx_Polynomial_Set+0xfe>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 80037a2:	68fb      	ldr	r3, [r7, #12]
 80037a4:	681b      	ldr	r3, [r3, #0]
 80037a6:	68ba      	ldr	r2, [r7, #8]
 80037a8:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 80037aa:	68fb      	ldr	r3, [r7, #12]
 80037ac:	681b      	ldr	r3, [r3, #0]
 80037ae:	689b      	ldr	r3, [r3, #8]
 80037b0:	f023 0118 	bic.w	r1, r3, #24
 80037b4:	68fb      	ldr	r3, [r7, #12]
 80037b6:	681b      	ldr	r3, [r3, #0]
 80037b8:	687a      	ldr	r2, [r7, #4]
 80037ba:	430a      	orrs	r2, r1
 80037bc:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 80037be:	7dfb      	ldrb	r3, [r7, #23]
}
 80037c0:	4618      	mov	r0, r3
 80037c2:	371c      	adds	r7, #28
 80037c4:	46bd      	mov	sp, r7
 80037c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037ca:	4770      	bx	lr

080037cc <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 80037cc:	b580      	push	{r7, lr}
 80037ce:	b086      	sub	sp, #24
 80037d0:	af00      	add	r7, sp, #0
 80037d2:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 80037d4:	2300      	movs	r3, #0
 80037d6:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 80037d8:	f7ff fdcc 	bl	8003374 <HAL_GetTick>
 80037dc:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 80037de:	687b      	ldr	r3, [r7, #4]
 80037e0:	2b00      	cmp	r3, #0
 80037e2:	d101      	bne.n	80037e8 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 80037e4:	2301      	movs	r3, #1
 80037e6:	e099      	b.n	800391c <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }
  
  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	2202      	movs	r2, #2
 80037ec:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  
  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	2200      	movs	r2, #0
 80037f4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	681b      	ldr	r3, [r3, #0]
 80037fc:	681a      	ldr	r2, [r3, #0]
 80037fe:	687b      	ldr	r3, [r7, #4]
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	f022 0201 	bic.w	r2, r2, #1
 8003806:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003808:	e00f      	b.n	800382a <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800380a:	f7ff fdb3 	bl	8003374 <HAL_GetTick>
 800380e:	4602      	mov	r2, r0
 8003810:	693b      	ldr	r3, [r7, #16]
 8003812:	1ad3      	subs	r3, r2, r3
 8003814:	2b05      	cmp	r3, #5
 8003816:	d908      	bls.n	800382a <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	2220      	movs	r2, #32
 800381c:	655a      	str	r2, [r3, #84]	; 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	2203      	movs	r2, #3
 8003822:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
      
      return HAL_TIMEOUT;
 8003826:	2303      	movs	r3, #3
 8003828:	e078      	b.n	800391c <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	681b      	ldr	r3, [r3, #0]
 800382e:	681b      	ldr	r3, [r3, #0]
 8003830:	f003 0301 	and.w	r3, r3, #1
 8003834:	2b00      	cmp	r3, #0
 8003836:	d1e8      	bne.n	800380a <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	681b      	ldr	r3, [r3, #0]
 800383c:	681b      	ldr	r3, [r3, #0]
 800383e:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003840:	697a      	ldr	r2, [r7, #20]
 8003842:	4b38      	ldr	r3, [pc, #224]	; (8003924 <HAL_DMA_Init+0x158>)
 8003844:	4013      	ands	r3, r2
 8003846:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	685a      	ldr	r2, [r3, #4]
 800384c:	687b      	ldr	r3, [r7, #4]
 800384e:	689b      	ldr	r3, [r3, #8]
 8003850:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003856:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	691b      	ldr	r3, [r3, #16]
 800385c:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003862:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003864:	687b      	ldr	r3, [r7, #4]
 8003866:	699b      	ldr	r3, [r3, #24]
 8003868:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800386e:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8003870:	687b      	ldr	r3, [r7, #4]
 8003872:	6a1b      	ldr	r3, [r3, #32]
 8003874:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003876:	697a      	ldr	r2, [r7, #20]
 8003878:	4313      	orrs	r3, r2
 800387a:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800387c:	687b      	ldr	r3, [r7, #4]
 800387e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003880:	2b04      	cmp	r3, #4
 8003882:	d107      	bne.n	8003894 <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003888:	687b      	ldr	r3, [r7, #4]
 800388a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800388c:	4313      	orrs	r3, r2
 800388e:	697a      	ldr	r2, [r7, #20]
 8003890:	4313      	orrs	r3, r2
 8003892:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8003894:	687b      	ldr	r3, [r7, #4]
 8003896:	681b      	ldr	r3, [r3, #0]
 8003898:	697a      	ldr	r2, [r7, #20]
 800389a:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 800389c:	687b      	ldr	r3, [r7, #4]
 800389e:	681b      	ldr	r3, [r3, #0]
 80038a0:	695b      	ldr	r3, [r3, #20]
 80038a2:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 80038a4:	697b      	ldr	r3, [r7, #20]
 80038a6:	f023 0307 	bic.w	r3, r3, #7
 80038aa:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 80038ac:	687b      	ldr	r3, [r7, #4]
 80038ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038b0:	697a      	ldr	r2, [r7, #20]
 80038b2:	4313      	orrs	r3, r2
 80038b4:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80038b6:	687b      	ldr	r3, [r7, #4]
 80038b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038ba:	2b04      	cmp	r3, #4
 80038bc:	d117      	bne.n	80038ee <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 80038be:	687b      	ldr	r3, [r7, #4]
 80038c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80038c2:	697a      	ldr	r2, [r7, #20]
 80038c4:	4313      	orrs	r3, r2
 80038c6:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80038cc:	2b00      	cmp	r3, #0
 80038ce:	d00e      	beq.n	80038ee <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 80038d0:	6878      	ldr	r0, [r7, #4]
 80038d2:	f000 fa77 	bl	8003dc4 <DMA_CheckFifoParam>
 80038d6:	4603      	mov	r3, r0
 80038d8:	2b00      	cmp	r3, #0
 80038da:	d008      	beq.n	80038ee <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	2240      	movs	r2, #64	; 0x40
 80038e0:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	2201      	movs	r2, #1
 80038e6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        return HAL_ERROR; 
 80038ea:	2301      	movs	r3, #1
 80038ec:	e016      	b.n	800391c <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	681b      	ldr	r3, [r3, #0]
 80038f2:	697a      	ldr	r2, [r7, #20]
 80038f4:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80038f6:	6878      	ldr	r0, [r7, #4]
 80038f8:	f000 fa2e 	bl	8003d58 <DMA_CalcBaseAndBitshift>
 80038fc:	4603      	mov	r3, r0
 80038fe:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003904:	223f      	movs	r2, #63	; 0x3f
 8003906:	409a      	lsls	r2, r3
 8003908:	68fb      	ldr	r3, [r7, #12]
 800390a:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	2200      	movs	r2, #0
 8003910:	655a      	str	r2, [r3, #84]	; 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	2201      	movs	r2, #1
 8003916:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  return HAL_OK;
 800391a:	2300      	movs	r3, #0
}
 800391c:	4618      	mov	r0, r3
 800391e:	3718      	adds	r7, #24
 8003920:	46bd      	mov	sp, r7
 8003922:	bd80      	pop	{r7, pc}
 8003924:	f010803f 	.word	0xf010803f

08003928 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003928:	b580      	push	{r7, lr}
 800392a:	b086      	sub	sp, #24
 800392c:	af00      	add	r7, sp, #0
 800392e:	60f8      	str	r0, [r7, #12]
 8003930:	60b9      	str	r1, [r7, #8]
 8003932:	607a      	str	r2, [r7, #4]
 8003934:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8003936:	2300      	movs	r3, #0
 8003938:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800393a:	68fb      	ldr	r3, [r7, #12]
 800393c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800393e:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 8003940:	68fb      	ldr	r3, [r7, #12]
 8003942:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8003946:	2b01      	cmp	r3, #1
 8003948:	d101      	bne.n	800394e <HAL_DMA_Start_IT+0x26>
 800394a:	2302      	movs	r3, #2
 800394c:	e048      	b.n	80039e0 <HAL_DMA_Start_IT+0xb8>
 800394e:	68fb      	ldr	r3, [r7, #12]
 8003950:	2201      	movs	r2, #1
 8003952:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 8003956:	68fb      	ldr	r3, [r7, #12]
 8003958:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800395c:	b2db      	uxtb	r3, r3
 800395e:	2b01      	cmp	r3, #1
 8003960:	d137      	bne.n	80039d2 <HAL_DMA_Start_IT+0xaa>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8003962:	68fb      	ldr	r3, [r7, #12]
 8003964:	2202      	movs	r2, #2
 8003966:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800396a:	68fb      	ldr	r3, [r7, #12]
 800396c:	2200      	movs	r2, #0
 800396e:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 8003970:	683b      	ldr	r3, [r7, #0]
 8003972:	687a      	ldr	r2, [r7, #4]
 8003974:	68b9      	ldr	r1, [r7, #8]
 8003976:	68f8      	ldr	r0, [r7, #12]
 8003978:	f000 f9c0 	bl	8003cfc <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800397c:	68fb      	ldr	r3, [r7, #12]
 800397e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003980:	223f      	movs	r2, #63	; 0x3f
 8003982:	409a      	lsls	r2, r3
 8003984:	693b      	ldr	r3, [r7, #16]
 8003986:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8003988:	68fb      	ldr	r3, [r7, #12]
 800398a:	681b      	ldr	r3, [r3, #0]
 800398c:	681a      	ldr	r2, [r3, #0]
 800398e:	68fb      	ldr	r3, [r7, #12]
 8003990:	681b      	ldr	r3, [r3, #0]
 8003992:	f042 0216 	orr.w	r2, r2, #22
 8003996:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR |= DMA_IT_FE;
 8003998:	68fb      	ldr	r3, [r7, #12]
 800399a:	681b      	ldr	r3, [r3, #0]
 800399c:	695a      	ldr	r2, [r3, #20]
 800399e:	68fb      	ldr	r3, [r7, #12]
 80039a0:	681b      	ldr	r3, [r3, #0]
 80039a2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80039a6:	615a      	str	r2, [r3, #20]
    
    if(hdma->XferHalfCpltCallback != NULL)
 80039a8:	68fb      	ldr	r3, [r7, #12]
 80039aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80039ac:	2b00      	cmp	r3, #0
 80039ae:	d007      	beq.n	80039c0 <HAL_DMA_Start_IT+0x98>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 80039b0:	68fb      	ldr	r3, [r7, #12]
 80039b2:	681b      	ldr	r3, [r3, #0]
 80039b4:	681a      	ldr	r2, [r3, #0]
 80039b6:	68fb      	ldr	r3, [r7, #12]
 80039b8:	681b      	ldr	r3, [r3, #0]
 80039ba:	f042 0208 	orr.w	r2, r2, #8
 80039be:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 80039c0:	68fb      	ldr	r3, [r7, #12]
 80039c2:	681b      	ldr	r3, [r3, #0]
 80039c4:	681a      	ldr	r2, [r3, #0]
 80039c6:	68fb      	ldr	r3, [r7, #12]
 80039c8:	681b      	ldr	r3, [r3, #0]
 80039ca:	f042 0201 	orr.w	r2, r2, #1
 80039ce:	601a      	str	r2, [r3, #0]
 80039d0:	e005      	b.n	80039de <HAL_DMA_Start_IT+0xb6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 80039d2:	68fb      	ldr	r3, [r7, #12]
 80039d4:	2200      	movs	r2, #0
 80039d6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 80039da:	2302      	movs	r3, #2
 80039dc:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 80039de:	7dfb      	ldrb	r3, [r7, #23]
}
 80039e0:	4618      	mov	r0, r3
 80039e2:	3718      	adds	r7, #24
 80039e4:	46bd      	mov	sp, r7
 80039e6:	bd80      	pop	{r7, pc}

080039e8 <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 80039e8:	b580      	push	{r7, lr}
 80039ea:	b086      	sub	sp, #24
 80039ec:	af00      	add	r7, sp, #0
 80039ee:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0;
 80039f0:	2300      	movs	r3, #0
 80039f2:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600;
 80039f4:	4b8e      	ldr	r3, [pc, #568]	; (8003c30 <HAL_DMA_IRQHandler+0x248>)
 80039f6:	681b      	ldr	r3, [r3, #0]
 80039f8:	4a8e      	ldr	r2, [pc, #568]	; (8003c34 <HAL_DMA_IRQHandler+0x24c>)
 80039fa:	fba2 2303 	umull	r2, r3, r2, r3
 80039fe:	0a9b      	lsrs	r3, r3, #10
 8003a00:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003a06:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 8003a08:	693b      	ldr	r3, [r7, #16]
 8003a0a:	681b      	ldr	r3, [r3, #0]
 8003a0c:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8003a0e:	687b      	ldr	r3, [r7, #4]
 8003a10:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003a12:	2208      	movs	r2, #8
 8003a14:	409a      	lsls	r2, r3
 8003a16:	68fb      	ldr	r3, [r7, #12]
 8003a18:	4013      	ands	r3, r2
 8003a1a:	2b00      	cmp	r3, #0
 8003a1c:	d01a      	beq.n	8003a54 <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	681b      	ldr	r3, [r3, #0]
 8003a22:	681b      	ldr	r3, [r3, #0]
 8003a24:	f003 0304 	and.w	r3, r3, #4
 8003a28:	2b00      	cmp	r3, #0
 8003a2a:	d013      	beq.n	8003a54 <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	681b      	ldr	r3, [r3, #0]
 8003a30:	681a      	ldr	r2, [r3, #0]
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	681b      	ldr	r3, [r3, #0]
 8003a36:	f022 0204 	bic.w	r2, r2, #4
 8003a3a:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003a40:	2208      	movs	r2, #8
 8003a42:	409a      	lsls	r2, r3
 8003a44:	693b      	ldr	r3, [r7, #16]
 8003a46:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003a4c:	f043 0201 	orr.w	r2, r3, #1
 8003a50:	687b      	ldr	r3, [r7, #4]
 8003a52:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003a58:	2201      	movs	r2, #1
 8003a5a:	409a      	lsls	r2, r3
 8003a5c:	68fb      	ldr	r3, [r7, #12]
 8003a5e:	4013      	ands	r3, r2
 8003a60:	2b00      	cmp	r3, #0
 8003a62:	d012      	beq.n	8003a8a <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	681b      	ldr	r3, [r3, #0]
 8003a68:	695b      	ldr	r3, [r3, #20]
 8003a6a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003a6e:	2b00      	cmp	r3, #0
 8003a70:	d00b      	beq.n	8003a8a <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003a76:	2201      	movs	r2, #1
 8003a78:	409a      	lsls	r2, r3
 8003a7a:	693b      	ldr	r3, [r7, #16]
 8003a7c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003a82:	f043 0202 	orr.w	r2, r3, #2
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8003a8a:	687b      	ldr	r3, [r7, #4]
 8003a8c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003a8e:	2204      	movs	r2, #4
 8003a90:	409a      	lsls	r2, r3
 8003a92:	68fb      	ldr	r3, [r7, #12]
 8003a94:	4013      	ands	r3, r2
 8003a96:	2b00      	cmp	r3, #0
 8003a98:	d012      	beq.n	8003ac0 <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	681b      	ldr	r3, [r3, #0]
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	f003 0302 	and.w	r3, r3, #2
 8003aa4:	2b00      	cmp	r3, #0
 8003aa6:	d00b      	beq.n	8003ac0 <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003aac:	2204      	movs	r2, #4
 8003aae:	409a      	lsls	r2, r3
 8003ab0:	693b      	ldr	r3, [r7, #16]
 8003ab2:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003ab8:	f043 0204 	orr.w	r2, r3, #4
 8003abc:	687b      	ldr	r3, [r7, #4]
 8003abe:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003ac4:	2210      	movs	r2, #16
 8003ac6:	409a      	lsls	r2, r3
 8003ac8:	68fb      	ldr	r3, [r7, #12]
 8003aca:	4013      	ands	r3, r2
 8003acc:	2b00      	cmp	r3, #0
 8003ace:	d043      	beq.n	8003b58 <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	681b      	ldr	r3, [r3, #0]
 8003ad4:	681b      	ldr	r3, [r3, #0]
 8003ad6:	f003 0308 	and.w	r3, r3, #8
 8003ada:	2b00      	cmp	r3, #0
 8003adc:	d03c      	beq.n	8003b58 <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003ae2:	2210      	movs	r2, #16
 8003ae4:	409a      	lsls	r2, r3
 8003ae6:	693b      	ldr	r3, [r7, #16]
 8003ae8:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	681b      	ldr	r3, [r3, #0]
 8003af0:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003af4:	2b00      	cmp	r3, #0
 8003af6:	d018      	beq.n	8003b2a <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	681b      	ldr	r3, [r3, #0]
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003b02:	2b00      	cmp	r3, #0
 8003b04:	d108      	bne.n	8003b18 <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b0a:	2b00      	cmp	r3, #0
 8003b0c:	d024      	beq.n	8003b58 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b12:	6878      	ldr	r0, [r7, #4]
 8003b14:	4798      	blx	r3
 8003b16:	e01f      	b.n	8003b58 <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003b1c:	2b00      	cmp	r3, #0
 8003b1e:	d01b      	beq.n	8003b58 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003b24:	6878      	ldr	r0, [r7, #4]
 8003b26:	4798      	blx	r3
 8003b28:	e016      	b.n	8003b58 <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	681b      	ldr	r3, [r3, #0]
 8003b2e:	681b      	ldr	r3, [r3, #0]
 8003b30:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003b34:	2b00      	cmp	r3, #0
 8003b36:	d107      	bne.n	8003b48 <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	681b      	ldr	r3, [r3, #0]
 8003b3c:	681a      	ldr	r2, [r3, #0]
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	681b      	ldr	r3, [r3, #0]
 8003b42:	f022 0208 	bic.w	r2, r2, #8
 8003b46:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b4c:	2b00      	cmp	r3, #0
 8003b4e:	d003      	beq.n	8003b58 <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b54:	6878      	ldr	r0, [r7, #4]
 8003b56:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8003b58:	687b      	ldr	r3, [r7, #4]
 8003b5a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003b5c:	2220      	movs	r2, #32
 8003b5e:	409a      	lsls	r2, r3
 8003b60:	68fb      	ldr	r3, [r7, #12]
 8003b62:	4013      	ands	r3, r2
 8003b64:	2b00      	cmp	r3, #0
 8003b66:	f000 808f 	beq.w	8003c88 <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	681b      	ldr	r3, [r3, #0]
 8003b6e:	681b      	ldr	r3, [r3, #0]
 8003b70:	f003 0310 	and.w	r3, r3, #16
 8003b74:	2b00      	cmp	r3, #0
 8003b76:	f000 8087 	beq.w	8003c88 <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8003b7a:	687b      	ldr	r3, [r7, #4]
 8003b7c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003b7e:	2220      	movs	r2, #32
 8003b80:	409a      	lsls	r2, r3
 8003b82:	693b      	ldr	r3, [r7, #16]
 8003b84:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003b8c:	b2db      	uxtb	r3, r3
 8003b8e:	2b05      	cmp	r3, #5
 8003b90:	d136      	bne.n	8003c00 <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	681b      	ldr	r3, [r3, #0]
 8003b96:	681a      	ldr	r2, [r3, #0]
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	f022 0216 	bic.w	r2, r2, #22
 8003ba0:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	681b      	ldr	r3, [r3, #0]
 8003ba6:	695a      	ldr	r2, [r3, #20]
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	681b      	ldr	r3, [r3, #0]
 8003bac:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003bb0:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003bb6:	2b00      	cmp	r3, #0
 8003bb8:	d103      	bne.n	8003bc2 <HAL_DMA_IRQHandler+0x1da>
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003bbe:	2b00      	cmp	r3, #0
 8003bc0:	d007      	beq.n	8003bd2 <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	681b      	ldr	r3, [r3, #0]
 8003bc6:	681a      	ldr	r2, [r3, #0]
 8003bc8:	687b      	ldr	r3, [r7, #4]
 8003bca:	681b      	ldr	r3, [r3, #0]
 8003bcc:	f022 0208 	bic.w	r2, r2, #8
 8003bd0:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003bd6:	223f      	movs	r2, #63	; 0x3f
 8003bd8:	409a      	lsls	r2, r3
 8003bda:	693b      	ldr	r3, [r7, #16]
 8003bdc:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	2201      	movs	r2, #1
 8003be2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	2200      	movs	r2, #0
 8003bea:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

        if(hdma->XferAbortCallback != NULL)
 8003bee:	687b      	ldr	r3, [r7, #4]
 8003bf0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003bf2:	2b00      	cmp	r3, #0
 8003bf4:	d07e      	beq.n	8003cf4 <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003bfa:	6878      	ldr	r0, [r7, #4]
 8003bfc:	4798      	blx	r3
        }
        return;
 8003bfe:	e079      	b.n	8003cf4 <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	681b      	ldr	r3, [r3, #0]
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003c0a:	2b00      	cmp	r3, #0
 8003c0c:	d01d      	beq.n	8003c4a <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003c0e:	687b      	ldr	r3, [r7, #4]
 8003c10:	681b      	ldr	r3, [r3, #0]
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003c18:	2b00      	cmp	r3, #0
 8003c1a:	d10d      	bne.n	8003c38 <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 8003c1c:	687b      	ldr	r3, [r7, #4]
 8003c1e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c20:	2b00      	cmp	r3, #0
 8003c22:	d031      	beq.n	8003c88 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c28:	6878      	ldr	r0, [r7, #4]
 8003c2a:	4798      	blx	r3
 8003c2c:	e02c      	b.n	8003c88 <HAL_DMA_IRQHandler+0x2a0>
 8003c2e:	bf00      	nop
 8003c30:	20000008 	.word	0x20000008
 8003c34:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003c3c:	2b00      	cmp	r3, #0
 8003c3e:	d023      	beq.n	8003c88 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 8003c40:	687b      	ldr	r3, [r7, #4]
 8003c42:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003c44:	6878      	ldr	r0, [r7, #4]
 8003c46:	4798      	blx	r3
 8003c48:	e01e      	b.n	8003c88 <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003c4a:	687b      	ldr	r3, [r7, #4]
 8003c4c:	681b      	ldr	r3, [r3, #0]
 8003c4e:	681b      	ldr	r3, [r3, #0]
 8003c50:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003c54:	2b00      	cmp	r3, #0
 8003c56:	d10f      	bne.n	8003c78 <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8003c58:	687b      	ldr	r3, [r7, #4]
 8003c5a:	681b      	ldr	r3, [r3, #0]
 8003c5c:	681a      	ldr	r2, [r3, #0]
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	681b      	ldr	r3, [r3, #0]
 8003c62:	f022 0210 	bic.w	r2, r2, #16
 8003c66:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	2201      	movs	r2, #1
 8003c6c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	2200      	movs	r2, #0
 8003c74:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

        }

        if(hdma->XferCpltCallback != NULL)
 8003c78:	687b      	ldr	r3, [r7, #4]
 8003c7a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003c7c:	2b00      	cmp	r3, #0
 8003c7e:	d003      	beq.n	8003c88 <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003c84:	6878      	ldr	r0, [r7, #4]
 8003c86:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003c8c:	2b00      	cmp	r3, #0
 8003c8e:	d032      	beq.n	8003cf6 <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003c94:	f003 0301 	and.w	r3, r3, #1
 8003c98:	2b00      	cmp	r3, #0
 8003c9a:	d022      	beq.n	8003ce2 <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 8003c9c:	687b      	ldr	r3, [r7, #4]
 8003c9e:	2205      	movs	r2, #5
 8003ca0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8003ca4:	687b      	ldr	r3, [r7, #4]
 8003ca6:	681b      	ldr	r3, [r3, #0]
 8003ca8:	681a      	ldr	r2, [r3, #0]
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	681b      	ldr	r3, [r3, #0]
 8003cae:	f022 0201 	bic.w	r2, r2, #1
 8003cb2:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 8003cb4:	68bb      	ldr	r3, [r7, #8]
 8003cb6:	3301      	adds	r3, #1
 8003cb8:	60bb      	str	r3, [r7, #8]
 8003cba:	697a      	ldr	r2, [r7, #20]
 8003cbc:	429a      	cmp	r2, r3
 8003cbe:	d307      	bcc.n	8003cd0 <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8003cc0:	687b      	ldr	r3, [r7, #4]
 8003cc2:	681b      	ldr	r3, [r3, #0]
 8003cc4:	681b      	ldr	r3, [r3, #0]
 8003cc6:	f003 0301 	and.w	r3, r3, #1
 8003cca:	2b00      	cmp	r3, #0
 8003ccc:	d1f2      	bne.n	8003cb4 <HAL_DMA_IRQHandler+0x2cc>
 8003cce:	e000      	b.n	8003cd2 <HAL_DMA_IRQHandler+0x2ea>
          break;
 8003cd0:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8003cd2:	687b      	ldr	r3, [r7, #4]
 8003cd4:	2201      	movs	r2, #1
 8003cd6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8003cda:	687b      	ldr	r3, [r7, #4]
 8003cdc:	2200      	movs	r2, #0
 8003cde:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    }

    if(hdma->XferErrorCallback != NULL)
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003ce6:	2b00      	cmp	r3, #0
 8003ce8:	d005      	beq.n	8003cf6 <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8003cea:	687b      	ldr	r3, [r7, #4]
 8003cec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003cee:	6878      	ldr	r0, [r7, #4]
 8003cf0:	4798      	blx	r3
 8003cf2:	e000      	b.n	8003cf6 <HAL_DMA_IRQHandler+0x30e>
        return;
 8003cf4:	bf00      	nop
    }
  }
}
 8003cf6:	3718      	adds	r7, #24
 8003cf8:	46bd      	mov	sp, r7
 8003cfa:	bd80      	pop	{r7, pc}

08003cfc <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003cfc:	b480      	push	{r7}
 8003cfe:	b085      	sub	sp, #20
 8003d00:	af00      	add	r7, sp, #0
 8003d02:	60f8      	str	r0, [r7, #12]
 8003d04:	60b9      	str	r1, [r7, #8]
 8003d06:	607a      	str	r2, [r7, #4]
 8003d08:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003d0a:	68fb      	ldr	r3, [r7, #12]
 8003d0c:	681b      	ldr	r3, [r3, #0]
 8003d0e:	681a      	ldr	r2, [r3, #0]
 8003d10:	68fb      	ldr	r3, [r7, #12]
 8003d12:	681b      	ldr	r3, [r3, #0]
 8003d14:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003d18:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 8003d1a:	68fb      	ldr	r3, [r7, #12]
 8003d1c:	681b      	ldr	r3, [r3, #0]
 8003d1e:	683a      	ldr	r2, [r7, #0]
 8003d20:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8003d22:	68fb      	ldr	r3, [r7, #12]
 8003d24:	689b      	ldr	r3, [r3, #8]
 8003d26:	2b40      	cmp	r3, #64	; 0x40
 8003d28:	d108      	bne.n	8003d3c <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8003d2a:	68fb      	ldr	r3, [r7, #12]
 8003d2c:	681b      	ldr	r3, [r3, #0]
 8003d2e:	687a      	ldr	r2, [r7, #4]
 8003d30:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 8003d32:	68fb      	ldr	r3, [r7, #12]
 8003d34:	681b      	ldr	r3, [r3, #0]
 8003d36:	68ba      	ldr	r2, [r7, #8]
 8003d38:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 8003d3a:	e007      	b.n	8003d4c <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8003d3c:	68fb      	ldr	r3, [r7, #12]
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	68ba      	ldr	r2, [r7, #8]
 8003d42:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 8003d44:	68fb      	ldr	r3, [r7, #12]
 8003d46:	681b      	ldr	r3, [r3, #0]
 8003d48:	687a      	ldr	r2, [r7, #4]
 8003d4a:	60da      	str	r2, [r3, #12]
}
 8003d4c:	bf00      	nop
 8003d4e:	3714      	adds	r7, #20
 8003d50:	46bd      	mov	sp, r7
 8003d52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d56:	4770      	bx	lr

08003d58 <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8003d58:	b480      	push	{r7}
 8003d5a:	b085      	sub	sp, #20
 8003d5c:	af00      	add	r7, sp, #0
 8003d5e:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003d60:	687b      	ldr	r3, [r7, #4]
 8003d62:	681b      	ldr	r3, [r3, #0]
 8003d64:	b2db      	uxtb	r3, r3
 8003d66:	3b10      	subs	r3, #16
 8003d68:	4a13      	ldr	r2, [pc, #76]	; (8003db8 <DMA_CalcBaseAndBitshift+0x60>)
 8003d6a:	fba2 2303 	umull	r2, r3, r2, r3
 8003d6e:	091b      	lsrs	r3, r3, #4
 8003d70:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003d72:	4a12      	ldr	r2, [pc, #72]	; (8003dbc <DMA_CalcBaseAndBitshift+0x64>)
 8003d74:	68fb      	ldr	r3, [r7, #12]
 8003d76:	4413      	add	r3, r2
 8003d78:	781b      	ldrb	r3, [r3, #0]
 8003d7a:	461a      	mov	r2, r3
 8003d7c:	687b      	ldr	r3, [r7, #4]
 8003d7e:	65da      	str	r2, [r3, #92]	; 0x5c
  
  if (stream_number > 3U)
 8003d80:	68fb      	ldr	r3, [r7, #12]
 8003d82:	2b03      	cmp	r3, #3
 8003d84:	d908      	bls.n	8003d98 <DMA_CalcBaseAndBitshift+0x40>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003d86:	687b      	ldr	r3, [r7, #4]
 8003d88:	681b      	ldr	r3, [r3, #0]
 8003d8a:	461a      	mov	r2, r3
 8003d8c:	4b0c      	ldr	r3, [pc, #48]	; (8003dc0 <DMA_CalcBaseAndBitshift+0x68>)
 8003d8e:	4013      	ands	r3, r2
 8003d90:	1d1a      	adds	r2, r3, #4
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	659a      	str	r2, [r3, #88]	; 0x58
 8003d96:	e006      	b.n	8003da6 <DMA_CalcBaseAndBitshift+0x4e>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8003d98:	687b      	ldr	r3, [r7, #4]
 8003d9a:	681b      	ldr	r3, [r3, #0]
 8003d9c:	461a      	mov	r2, r3
 8003d9e:	4b08      	ldr	r3, [pc, #32]	; (8003dc0 <DMA_CalcBaseAndBitshift+0x68>)
 8003da0:	4013      	ands	r3, r2
 8003da2:	687a      	ldr	r2, [r7, #4]
 8003da4:	6593      	str	r3, [r2, #88]	; 0x58
  }
  
  return hdma->StreamBaseAddress;
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
 8003daa:	4618      	mov	r0, r3
 8003dac:	3714      	adds	r7, #20
 8003dae:	46bd      	mov	sp, r7
 8003db0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003db4:	4770      	bx	lr
 8003db6:	bf00      	nop
 8003db8:	aaaaaaab 	.word	0xaaaaaaab
 8003dbc:	080255a4 	.word	0x080255a4
 8003dc0:	fffffc00 	.word	0xfffffc00

08003dc4 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8003dc4:	b480      	push	{r7}
 8003dc6:	b085      	sub	sp, #20
 8003dc8:	af00      	add	r7, sp, #0
 8003dca:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003dcc:	2300      	movs	r3, #0
 8003dce:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 8003dd0:	687b      	ldr	r3, [r7, #4]
 8003dd2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003dd4:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003dd6:	687b      	ldr	r3, [r7, #4]
 8003dd8:	699b      	ldr	r3, [r3, #24]
 8003dda:	2b00      	cmp	r3, #0
 8003ddc:	d11f      	bne.n	8003e1e <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 8003dde:	68bb      	ldr	r3, [r7, #8]
 8003de0:	2b03      	cmp	r3, #3
 8003de2:	d856      	bhi.n	8003e92 <DMA_CheckFifoParam+0xce>
 8003de4:	a201      	add	r2, pc, #4	; (adr r2, 8003dec <DMA_CheckFifoParam+0x28>)
 8003de6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003dea:	bf00      	nop
 8003dec:	08003dfd 	.word	0x08003dfd
 8003df0:	08003e0f 	.word	0x08003e0f
 8003df4:	08003dfd 	.word	0x08003dfd
 8003df8:	08003e93 	.word	0x08003e93
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003e00:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003e04:	2b00      	cmp	r3, #0
 8003e06:	d046      	beq.n	8003e96 <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8003e08:	2301      	movs	r3, #1
 8003e0a:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003e0c:	e043      	b.n	8003e96 <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003e0e:	687b      	ldr	r3, [r7, #4]
 8003e10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003e12:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8003e16:	d140      	bne.n	8003e9a <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 8003e18:	2301      	movs	r3, #1
 8003e1a:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003e1c:	e03d      	b.n	8003e9a <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	699b      	ldr	r3, [r3, #24]
 8003e22:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003e26:	d121      	bne.n	8003e6c <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 8003e28:	68bb      	ldr	r3, [r7, #8]
 8003e2a:	2b03      	cmp	r3, #3
 8003e2c:	d837      	bhi.n	8003e9e <DMA_CheckFifoParam+0xda>
 8003e2e:	a201      	add	r2, pc, #4	; (adr r2, 8003e34 <DMA_CheckFifoParam+0x70>)
 8003e30:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003e34:	08003e45 	.word	0x08003e45
 8003e38:	08003e4b 	.word	0x08003e4b
 8003e3c:	08003e45 	.word	0x08003e45
 8003e40:	08003e5d 	.word	0x08003e5d
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 8003e44:	2301      	movs	r3, #1
 8003e46:	73fb      	strb	r3, [r7, #15]
      break;
 8003e48:	e030      	b.n	8003eac <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003e4e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003e52:	2b00      	cmp	r3, #0
 8003e54:	d025      	beq.n	8003ea2 <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 8003e56:	2301      	movs	r3, #1
 8003e58:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003e5a:	e022      	b.n	8003ea2 <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003e60:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8003e64:	d11f      	bne.n	8003ea6 <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 8003e66:	2301      	movs	r3, #1
 8003e68:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 8003e6a:	e01c      	b.n	8003ea6 <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8003e6c:	68bb      	ldr	r3, [r7, #8]
 8003e6e:	2b02      	cmp	r3, #2
 8003e70:	d903      	bls.n	8003e7a <DMA_CheckFifoParam+0xb6>
 8003e72:	68bb      	ldr	r3, [r7, #8]
 8003e74:	2b03      	cmp	r3, #3
 8003e76:	d003      	beq.n	8003e80 <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 8003e78:	e018      	b.n	8003eac <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 8003e7a:	2301      	movs	r3, #1
 8003e7c:	73fb      	strb	r3, [r7, #15]
      break;
 8003e7e:	e015      	b.n	8003eac <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003e84:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003e88:	2b00      	cmp	r3, #0
 8003e8a:	d00e      	beq.n	8003eaa <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 8003e8c:	2301      	movs	r3, #1
 8003e8e:	73fb      	strb	r3, [r7, #15]
      break;
 8003e90:	e00b      	b.n	8003eaa <DMA_CheckFifoParam+0xe6>
      break;
 8003e92:	bf00      	nop
 8003e94:	e00a      	b.n	8003eac <DMA_CheckFifoParam+0xe8>
      break;
 8003e96:	bf00      	nop
 8003e98:	e008      	b.n	8003eac <DMA_CheckFifoParam+0xe8>
      break;
 8003e9a:	bf00      	nop
 8003e9c:	e006      	b.n	8003eac <DMA_CheckFifoParam+0xe8>
      break;
 8003e9e:	bf00      	nop
 8003ea0:	e004      	b.n	8003eac <DMA_CheckFifoParam+0xe8>
      break;
 8003ea2:	bf00      	nop
 8003ea4:	e002      	b.n	8003eac <DMA_CheckFifoParam+0xe8>
      break;   
 8003ea6:	bf00      	nop
 8003ea8:	e000      	b.n	8003eac <DMA_CheckFifoParam+0xe8>
      break;
 8003eaa:	bf00      	nop
    }
  } 
  
  return status; 
 8003eac:	7bfb      	ldrb	r3, [r7, #15]
}
 8003eae:	4618      	mov	r0, r3
 8003eb0:	3714      	adds	r7, #20
 8003eb2:	46bd      	mov	sp, r7
 8003eb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eb8:	4770      	bx	lr
 8003eba:	bf00      	nop

08003ebc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003ebc:	b480      	push	{r7}
 8003ebe:	b089      	sub	sp, #36	; 0x24
 8003ec0:	af00      	add	r7, sp, #0
 8003ec2:	6078      	str	r0, [r7, #4]
 8003ec4:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00;
 8003ec6:	2300      	movs	r3, #0
 8003ec8:	61fb      	str	r3, [r7, #28]
  uint32_t ioposition = 0x00;
 8003eca:	2300      	movs	r3, #0
 8003ecc:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00;
 8003ece:	2300      	movs	r3, #0
 8003ed0:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00;
 8003ed2:	2300      	movs	r3, #0
 8003ed4:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8003ed6:	2300      	movs	r3, #0
 8003ed8:	61fb      	str	r3, [r7, #28]
 8003eda:	e175      	b.n	80041c8 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 8003edc:	2201      	movs	r2, #1
 8003ede:	69fb      	ldr	r3, [r7, #28]
 8003ee0:	fa02 f303 	lsl.w	r3, r2, r3
 8003ee4:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003ee6:	683b      	ldr	r3, [r7, #0]
 8003ee8:	681b      	ldr	r3, [r3, #0]
 8003eea:	697a      	ldr	r2, [r7, #20]
 8003eec:	4013      	ands	r3, r2
 8003eee:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8003ef0:	693a      	ldr	r2, [r7, #16]
 8003ef2:	697b      	ldr	r3, [r7, #20]
 8003ef4:	429a      	cmp	r2, r3
 8003ef6:	f040 8164 	bne.w	80041c2 <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8003efa:	683b      	ldr	r3, [r7, #0]
 8003efc:	685b      	ldr	r3, [r3, #4]
 8003efe:	f003 0303 	and.w	r3, r3, #3
 8003f02:	2b01      	cmp	r3, #1
 8003f04:	d005      	beq.n	8003f12 <HAL_GPIO_Init+0x56>
 8003f06:	683b      	ldr	r3, [r7, #0]
 8003f08:	685b      	ldr	r3, [r3, #4]
 8003f0a:	f003 0303 	and.w	r3, r3, #3
 8003f0e:	2b02      	cmp	r3, #2
 8003f10:	d130      	bne.n	8003f74 <HAL_GPIO_Init+0xb8>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8003f12:	687b      	ldr	r3, [r7, #4]
 8003f14:	689b      	ldr	r3, [r3, #8]
 8003f16:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8003f18:	69fb      	ldr	r3, [r7, #28]
 8003f1a:	005b      	lsls	r3, r3, #1
 8003f1c:	2203      	movs	r2, #3
 8003f1e:	fa02 f303 	lsl.w	r3, r2, r3
 8003f22:	43db      	mvns	r3, r3
 8003f24:	69ba      	ldr	r2, [r7, #24]
 8003f26:	4013      	ands	r3, r2
 8003f28:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2));
 8003f2a:	683b      	ldr	r3, [r7, #0]
 8003f2c:	68da      	ldr	r2, [r3, #12]
 8003f2e:	69fb      	ldr	r3, [r7, #28]
 8003f30:	005b      	lsls	r3, r3, #1
 8003f32:	fa02 f303 	lsl.w	r3, r2, r3
 8003f36:	69ba      	ldr	r2, [r7, #24]
 8003f38:	4313      	orrs	r3, r2
 8003f3a:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8003f3c:	687b      	ldr	r3, [r7, #4]
 8003f3e:	69ba      	ldr	r2, [r7, #24]
 8003f40:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003f42:	687b      	ldr	r3, [r7, #4]
 8003f44:	685b      	ldr	r3, [r3, #4]
 8003f46:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003f48:	2201      	movs	r2, #1
 8003f4a:	69fb      	ldr	r3, [r7, #28]
 8003f4c:	fa02 f303 	lsl.w	r3, r2, r3
 8003f50:	43db      	mvns	r3, r3
 8003f52:	69ba      	ldr	r2, [r7, #24]
 8003f54:	4013      	ands	r3, r2
 8003f56:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003f58:	683b      	ldr	r3, [r7, #0]
 8003f5a:	685b      	ldr	r3, [r3, #4]
 8003f5c:	091b      	lsrs	r3, r3, #4
 8003f5e:	f003 0201 	and.w	r2, r3, #1
 8003f62:	69fb      	ldr	r3, [r7, #28]
 8003f64:	fa02 f303 	lsl.w	r3, r2, r3
 8003f68:	69ba      	ldr	r2, [r7, #24]
 8003f6a:	4313      	orrs	r3, r2
 8003f6c:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8003f6e:	687b      	ldr	r3, [r7, #4]
 8003f70:	69ba      	ldr	r2, [r7, #24]
 8003f72:	605a      	str	r2, [r3, #4]
      }
      
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003f74:	683b      	ldr	r3, [r7, #0]
 8003f76:	685b      	ldr	r3, [r3, #4]
 8003f78:	f003 0303 	and.w	r3, r3, #3
 8003f7c:	2b03      	cmp	r3, #3
 8003f7e:	d017      	beq.n	8003fb0 <HAL_GPIO_Init+0xf4>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8003f80:	687b      	ldr	r3, [r7, #4]
 8003f82:	68db      	ldr	r3, [r3, #12]
 8003f84:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8003f86:	69fb      	ldr	r3, [r7, #28]
 8003f88:	005b      	lsls	r3, r3, #1
 8003f8a:	2203      	movs	r2, #3
 8003f8c:	fa02 f303 	lsl.w	r3, r2, r3
 8003f90:	43db      	mvns	r3, r3
 8003f92:	69ba      	ldr	r2, [r7, #24]
 8003f94:	4013      	ands	r3, r2
 8003f96:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2));
 8003f98:	683b      	ldr	r3, [r7, #0]
 8003f9a:	689a      	ldr	r2, [r3, #8]
 8003f9c:	69fb      	ldr	r3, [r7, #28]
 8003f9e:	005b      	lsls	r3, r3, #1
 8003fa0:	fa02 f303 	lsl.w	r3, r2, r3
 8003fa4:	69ba      	ldr	r2, [r7, #24]
 8003fa6:	4313      	orrs	r3, r2
 8003fa8:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8003faa:	687b      	ldr	r3, [r7, #4]
 8003fac:	69ba      	ldr	r2, [r7, #24]
 8003fae:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003fb0:	683b      	ldr	r3, [r7, #0]
 8003fb2:	685b      	ldr	r3, [r3, #4]
 8003fb4:	f003 0303 	and.w	r3, r3, #3
 8003fb8:	2b02      	cmp	r3, #2
 8003fba:	d123      	bne.n	8004004 <HAL_GPIO_Init+0x148>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 8003fbc:	69fb      	ldr	r3, [r7, #28]
 8003fbe:	08da      	lsrs	r2, r3, #3
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	3208      	adds	r2, #8
 8003fc4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003fc8:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8003fca:	69fb      	ldr	r3, [r7, #28]
 8003fcc:	f003 0307 	and.w	r3, r3, #7
 8003fd0:	009b      	lsls	r3, r3, #2
 8003fd2:	220f      	movs	r2, #15
 8003fd4:	fa02 f303 	lsl.w	r3, r2, r3
 8003fd8:	43db      	mvns	r3, r3
 8003fda:	69ba      	ldr	r2, [r7, #24]
 8003fdc:	4013      	ands	r3, r2
 8003fde:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8003fe0:	683b      	ldr	r3, [r7, #0]
 8003fe2:	691a      	ldr	r2, [r3, #16]
 8003fe4:	69fb      	ldr	r3, [r7, #28]
 8003fe6:	f003 0307 	and.w	r3, r3, #7
 8003fea:	009b      	lsls	r3, r3, #2
 8003fec:	fa02 f303 	lsl.w	r3, r2, r3
 8003ff0:	69ba      	ldr	r2, [r7, #24]
 8003ff2:	4313      	orrs	r3, r2
 8003ff4:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3] = temp;
 8003ff6:	69fb      	ldr	r3, [r7, #28]
 8003ff8:	08da      	lsrs	r2, r3, #3
 8003ffa:	687b      	ldr	r3, [r7, #4]
 8003ffc:	3208      	adds	r2, #8
 8003ffe:	69b9      	ldr	r1, [r7, #24]
 8004000:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }
      
      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	681b      	ldr	r3, [r3, #0]
 8004008:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 800400a:	69fb      	ldr	r3, [r7, #28]
 800400c:	005b      	lsls	r3, r3, #1
 800400e:	2203      	movs	r2, #3
 8004010:	fa02 f303 	lsl.w	r3, r2, r3
 8004014:	43db      	mvns	r3, r3
 8004016:	69ba      	ldr	r2, [r7, #24]
 8004018:	4013      	ands	r3, r2
 800401a:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 800401c:	683b      	ldr	r3, [r7, #0]
 800401e:	685b      	ldr	r3, [r3, #4]
 8004020:	f003 0203 	and.w	r2, r3, #3
 8004024:	69fb      	ldr	r3, [r7, #28]
 8004026:	005b      	lsls	r3, r3, #1
 8004028:	fa02 f303 	lsl.w	r3, r2, r3
 800402c:	69ba      	ldr	r2, [r7, #24]
 800402e:	4313      	orrs	r3, r2
 8004030:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8004032:	687b      	ldr	r3, [r7, #4]
 8004034:	69ba      	ldr	r2, [r7, #24]
 8004036:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8004038:	683b      	ldr	r3, [r7, #0]
 800403a:	685b      	ldr	r3, [r3, #4]
 800403c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004040:	2b00      	cmp	r3, #0
 8004042:	f000 80be 	beq.w	80041c2 <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004046:	4b66      	ldr	r3, [pc, #408]	; (80041e0 <HAL_GPIO_Init+0x324>)
 8004048:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800404a:	4a65      	ldr	r2, [pc, #404]	; (80041e0 <HAL_GPIO_Init+0x324>)
 800404c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004050:	6453      	str	r3, [r2, #68]	; 0x44
 8004052:	4b63      	ldr	r3, [pc, #396]	; (80041e0 <HAL_GPIO_Init+0x324>)
 8004054:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004056:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800405a:	60fb      	str	r3, [r7, #12]
 800405c:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2];
 800405e:	4a61      	ldr	r2, [pc, #388]	; (80041e4 <HAL_GPIO_Init+0x328>)
 8004060:	69fb      	ldr	r3, [r7, #28]
 8004062:	089b      	lsrs	r3, r3, #2
 8004064:	3302      	adds	r3, #2
 8004066:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800406a:	61bb      	str	r3, [r7, #24]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800406c:	69fb      	ldr	r3, [r7, #28]
 800406e:	f003 0303 	and.w	r3, r3, #3
 8004072:	009b      	lsls	r3, r3, #2
 8004074:	220f      	movs	r2, #15
 8004076:	fa02 f303 	lsl.w	r3, r2, r3
 800407a:	43db      	mvns	r3, r3
 800407c:	69ba      	ldr	r2, [r7, #24]
 800407e:	4013      	ands	r3, r2
 8004080:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8004082:	687b      	ldr	r3, [r7, #4]
 8004084:	4a58      	ldr	r2, [pc, #352]	; (80041e8 <HAL_GPIO_Init+0x32c>)
 8004086:	4293      	cmp	r3, r2
 8004088:	d037      	beq.n	80040fa <HAL_GPIO_Init+0x23e>
 800408a:	687b      	ldr	r3, [r7, #4]
 800408c:	4a57      	ldr	r2, [pc, #348]	; (80041ec <HAL_GPIO_Init+0x330>)
 800408e:	4293      	cmp	r3, r2
 8004090:	d031      	beq.n	80040f6 <HAL_GPIO_Init+0x23a>
 8004092:	687b      	ldr	r3, [r7, #4]
 8004094:	4a56      	ldr	r2, [pc, #344]	; (80041f0 <HAL_GPIO_Init+0x334>)
 8004096:	4293      	cmp	r3, r2
 8004098:	d02b      	beq.n	80040f2 <HAL_GPIO_Init+0x236>
 800409a:	687b      	ldr	r3, [r7, #4]
 800409c:	4a55      	ldr	r2, [pc, #340]	; (80041f4 <HAL_GPIO_Init+0x338>)
 800409e:	4293      	cmp	r3, r2
 80040a0:	d025      	beq.n	80040ee <HAL_GPIO_Init+0x232>
 80040a2:	687b      	ldr	r3, [r7, #4]
 80040a4:	4a54      	ldr	r2, [pc, #336]	; (80041f8 <HAL_GPIO_Init+0x33c>)
 80040a6:	4293      	cmp	r3, r2
 80040a8:	d01f      	beq.n	80040ea <HAL_GPIO_Init+0x22e>
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	4a53      	ldr	r2, [pc, #332]	; (80041fc <HAL_GPIO_Init+0x340>)
 80040ae:	4293      	cmp	r3, r2
 80040b0:	d019      	beq.n	80040e6 <HAL_GPIO_Init+0x22a>
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	4a52      	ldr	r2, [pc, #328]	; (8004200 <HAL_GPIO_Init+0x344>)
 80040b6:	4293      	cmp	r3, r2
 80040b8:	d013      	beq.n	80040e2 <HAL_GPIO_Init+0x226>
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	4a51      	ldr	r2, [pc, #324]	; (8004204 <HAL_GPIO_Init+0x348>)
 80040be:	4293      	cmp	r3, r2
 80040c0:	d00d      	beq.n	80040de <HAL_GPIO_Init+0x222>
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	4a50      	ldr	r2, [pc, #320]	; (8004208 <HAL_GPIO_Init+0x34c>)
 80040c6:	4293      	cmp	r3, r2
 80040c8:	d007      	beq.n	80040da <HAL_GPIO_Init+0x21e>
 80040ca:	687b      	ldr	r3, [r7, #4]
 80040cc:	4a4f      	ldr	r2, [pc, #316]	; (800420c <HAL_GPIO_Init+0x350>)
 80040ce:	4293      	cmp	r3, r2
 80040d0:	d101      	bne.n	80040d6 <HAL_GPIO_Init+0x21a>
 80040d2:	2309      	movs	r3, #9
 80040d4:	e012      	b.n	80040fc <HAL_GPIO_Init+0x240>
 80040d6:	230a      	movs	r3, #10
 80040d8:	e010      	b.n	80040fc <HAL_GPIO_Init+0x240>
 80040da:	2308      	movs	r3, #8
 80040dc:	e00e      	b.n	80040fc <HAL_GPIO_Init+0x240>
 80040de:	2307      	movs	r3, #7
 80040e0:	e00c      	b.n	80040fc <HAL_GPIO_Init+0x240>
 80040e2:	2306      	movs	r3, #6
 80040e4:	e00a      	b.n	80040fc <HAL_GPIO_Init+0x240>
 80040e6:	2305      	movs	r3, #5
 80040e8:	e008      	b.n	80040fc <HAL_GPIO_Init+0x240>
 80040ea:	2304      	movs	r3, #4
 80040ec:	e006      	b.n	80040fc <HAL_GPIO_Init+0x240>
 80040ee:	2303      	movs	r3, #3
 80040f0:	e004      	b.n	80040fc <HAL_GPIO_Init+0x240>
 80040f2:	2302      	movs	r3, #2
 80040f4:	e002      	b.n	80040fc <HAL_GPIO_Init+0x240>
 80040f6:	2301      	movs	r3, #1
 80040f8:	e000      	b.n	80040fc <HAL_GPIO_Init+0x240>
 80040fa:	2300      	movs	r3, #0
 80040fc:	69fa      	ldr	r2, [r7, #28]
 80040fe:	f002 0203 	and.w	r2, r2, #3
 8004102:	0092      	lsls	r2, r2, #2
 8004104:	4093      	lsls	r3, r2
 8004106:	69ba      	ldr	r2, [r7, #24]
 8004108:	4313      	orrs	r3, r2
 800410a:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2] = temp;
 800410c:	4935      	ldr	r1, [pc, #212]	; (80041e4 <HAL_GPIO_Init+0x328>)
 800410e:	69fb      	ldr	r3, [r7, #28]
 8004110:	089b      	lsrs	r3, r3, #2
 8004112:	3302      	adds	r3, #2
 8004114:	69ba      	ldr	r2, [r7, #24]
 8004116:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800411a:	4b3d      	ldr	r3, [pc, #244]	; (8004210 <HAL_GPIO_Init+0x354>)
 800411c:	689b      	ldr	r3, [r3, #8]
 800411e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004120:	693b      	ldr	r3, [r7, #16]
 8004122:	43db      	mvns	r3, r3
 8004124:	69ba      	ldr	r2, [r7, #24]
 8004126:	4013      	ands	r3, r2
 8004128:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 800412a:	683b      	ldr	r3, [r7, #0]
 800412c:	685b      	ldr	r3, [r3, #4]
 800412e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004132:	2b00      	cmp	r3, #0
 8004134:	d003      	beq.n	800413e <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 8004136:	69ba      	ldr	r2, [r7, #24]
 8004138:	693b      	ldr	r3, [r7, #16]
 800413a:	4313      	orrs	r3, r2
 800413c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 800413e:	4a34      	ldr	r2, [pc, #208]	; (8004210 <HAL_GPIO_Init+0x354>)
 8004140:	69bb      	ldr	r3, [r7, #24]
 8004142:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8004144:	4b32      	ldr	r3, [pc, #200]	; (8004210 <HAL_GPIO_Init+0x354>)
 8004146:	68db      	ldr	r3, [r3, #12]
 8004148:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800414a:	693b      	ldr	r3, [r7, #16]
 800414c:	43db      	mvns	r3, r3
 800414e:	69ba      	ldr	r2, [r7, #24]
 8004150:	4013      	ands	r3, r2
 8004152:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8004154:	683b      	ldr	r3, [r7, #0]
 8004156:	685b      	ldr	r3, [r3, #4]
 8004158:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800415c:	2b00      	cmp	r3, #0
 800415e:	d003      	beq.n	8004168 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8004160:	69ba      	ldr	r2, [r7, #24]
 8004162:	693b      	ldr	r3, [r7, #16]
 8004164:	4313      	orrs	r3, r2
 8004166:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8004168:	4a29      	ldr	r2, [pc, #164]	; (8004210 <HAL_GPIO_Init+0x354>)
 800416a:	69bb      	ldr	r3, [r7, #24]
 800416c:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 800416e:	4b28      	ldr	r3, [pc, #160]	; (8004210 <HAL_GPIO_Init+0x354>)
 8004170:	685b      	ldr	r3, [r3, #4]
 8004172:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004174:	693b      	ldr	r3, [r7, #16]
 8004176:	43db      	mvns	r3, r3
 8004178:	69ba      	ldr	r2, [r7, #24]
 800417a:	4013      	ands	r3, r2
 800417c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 800417e:	683b      	ldr	r3, [r7, #0]
 8004180:	685b      	ldr	r3, [r3, #4]
 8004182:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004186:	2b00      	cmp	r3, #0
 8004188:	d003      	beq.n	8004192 <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 800418a:	69ba      	ldr	r2, [r7, #24]
 800418c:	693b      	ldr	r3, [r7, #16]
 800418e:	4313      	orrs	r3, r2
 8004190:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8004192:	4a1f      	ldr	r2, [pc, #124]	; (8004210 <HAL_GPIO_Init+0x354>)
 8004194:	69bb      	ldr	r3, [r7, #24]
 8004196:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004198:	4b1d      	ldr	r3, [pc, #116]	; (8004210 <HAL_GPIO_Init+0x354>)
 800419a:	681b      	ldr	r3, [r3, #0]
 800419c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800419e:	693b      	ldr	r3, [r7, #16]
 80041a0:	43db      	mvns	r3, r3
 80041a2:	69ba      	ldr	r2, [r7, #24]
 80041a4:	4013      	ands	r3, r2
 80041a6:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 80041a8:	683b      	ldr	r3, [r7, #0]
 80041aa:	685b      	ldr	r3, [r3, #4]
 80041ac:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80041b0:	2b00      	cmp	r3, #0
 80041b2:	d003      	beq.n	80041bc <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 80041b4:	69ba      	ldr	r2, [r7, #24]
 80041b6:	693b      	ldr	r3, [r7, #16]
 80041b8:	4313      	orrs	r3, r2
 80041ba:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 80041bc:	4a14      	ldr	r2, [pc, #80]	; (8004210 <HAL_GPIO_Init+0x354>)
 80041be:	69bb      	ldr	r3, [r7, #24]
 80041c0:	6013      	str	r3, [r2, #0]
  for(position = 0; position < GPIO_NUMBER; position++)
 80041c2:	69fb      	ldr	r3, [r7, #28]
 80041c4:	3301      	adds	r3, #1
 80041c6:	61fb      	str	r3, [r7, #28]
 80041c8:	69fb      	ldr	r3, [r7, #28]
 80041ca:	2b0f      	cmp	r3, #15
 80041cc:	f67f ae86 	bls.w	8003edc <HAL_GPIO_Init+0x20>
      }
    }
  }
}
 80041d0:	bf00      	nop
 80041d2:	bf00      	nop
 80041d4:	3724      	adds	r7, #36	; 0x24
 80041d6:	46bd      	mov	sp, r7
 80041d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041dc:	4770      	bx	lr
 80041de:	bf00      	nop
 80041e0:	40023800 	.word	0x40023800
 80041e4:	40013800 	.word	0x40013800
 80041e8:	40020000 	.word	0x40020000
 80041ec:	40020400 	.word	0x40020400
 80041f0:	40020800 	.word	0x40020800
 80041f4:	40020c00 	.word	0x40020c00
 80041f8:	40021000 	.word	0x40021000
 80041fc:	40021400 	.word	0x40021400
 8004200:	40021800 	.word	0x40021800
 8004204:	40021c00 	.word	0x40021c00
 8004208:	40022000 	.word	0x40022000
 800420c:	40022400 	.word	0x40022400
 8004210:	40013c00 	.word	0x40013c00

08004214 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8004214:	b480      	push	{r7}
 8004216:	b087      	sub	sp, #28
 8004218:	af00      	add	r7, sp, #0
 800421a:	6078      	str	r0, [r7, #4]
 800421c:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00;
 800421e:	2300      	movs	r3, #0
 8004220:	613b      	str	r3, [r7, #16]
  uint32_t iocurrent = 0x00;
 8004222:	2300      	movs	r3, #0
 8004224:	60fb      	str	r3, [r7, #12]
  uint32_t tmp = 0x00;
 8004226:	2300      	movs	r3, #0
 8004228:	60bb      	str	r3, [r7, #8]

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 800422a:	2300      	movs	r3, #0
 800422c:	617b      	str	r3, [r7, #20]
 800422e:	e0d9      	b.n	80043e4 <HAL_GPIO_DeInit+0x1d0>
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 8004230:	2201      	movs	r2, #1
 8004232:	697b      	ldr	r3, [r7, #20]
 8004234:	fa02 f303 	lsl.w	r3, r2, r3
 8004238:	613b      	str	r3, [r7, #16]
    /* Get the current IO position */
    iocurrent = (GPIO_Pin) & ioposition;
 800423a:	683a      	ldr	r2, [r7, #0]
 800423c:	693b      	ldr	r3, [r7, #16]
 800423e:	4013      	ands	r3, r2
 8004240:	60fb      	str	r3, [r7, #12]

    if(iocurrent == ioposition)
 8004242:	68fa      	ldr	r2, [r7, #12]
 8004244:	693b      	ldr	r3, [r7, #16]
 8004246:	429a      	cmp	r2, r3
 8004248:	f040 80c9 	bne.w	80043de <HAL_GPIO_DeInit+0x1ca>
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2];
 800424c:	4a6b      	ldr	r2, [pc, #428]	; (80043fc <HAL_GPIO_DeInit+0x1e8>)
 800424e:	697b      	ldr	r3, [r7, #20]
 8004250:	089b      	lsrs	r3, r3, #2
 8004252:	3302      	adds	r3, #2
 8004254:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004258:	60bb      	str	r3, [r7, #8]
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 800425a:	697b      	ldr	r3, [r7, #20]
 800425c:	f003 0303 	and.w	r3, r3, #3
 8004260:	009b      	lsls	r3, r3, #2
 8004262:	220f      	movs	r2, #15
 8004264:	fa02 f303 	lsl.w	r3, r2, r3
 8004268:	68ba      	ldr	r2, [r7, #8]
 800426a:	4013      	ands	r3, r2
 800426c:	60bb      	str	r3, [r7, #8]
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	4a63      	ldr	r2, [pc, #396]	; (8004400 <HAL_GPIO_DeInit+0x1ec>)
 8004272:	4293      	cmp	r3, r2
 8004274:	d037      	beq.n	80042e6 <HAL_GPIO_DeInit+0xd2>
 8004276:	687b      	ldr	r3, [r7, #4]
 8004278:	4a62      	ldr	r2, [pc, #392]	; (8004404 <HAL_GPIO_DeInit+0x1f0>)
 800427a:	4293      	cmp	r3, r2
 800427c:	d031      	beq.n	80042e2 <HAL_GPIO_DeInit+0xce>
 800427e:	687b      	ldr	r3, [r7, #4]
 8004280:	4a61      	ldr	r2, [pc, #388]	; (8004408 <HAL_GPIO_DeInit+0x1f4>)
 8004282:	4293      	cmp	r3, r2
 8004284:	d02b      	beq.n	80042de <HAL_GPIO_DeInit+0xca>
 8004286:	687b      	ldr	r3, [r7, #4]
 8004288:	4a60      	ldr	r2, [pc, #384]	; (800440c <HAL_GPIO_DeInit+0x1f8>)
 800428a:	4293      	cmp	r3, r2
 800428c:	d025      	beq.n	80042da <HAL_GPIO_DeInit+0xc6>
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	4a5f      	ldr	r2, [pc, #380]	; (8004410 <HAL_GPIO_DeInit+0x1fc>)
 8004292:	4293      	cmp	r3, r2
 8004294:	d01f      	beq.n	80042d6 <HAL_GPIO_DeInit+0xc2>
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	4a5e      	ldr	r2, [pc, #376]	; (8004414 <HAL_GPIO_DeInit+0x200>)
 800429a:	4293      	cmp	r3, r2
 800429c:	d019      	beq.n	80042d2 <HAL_GPIO_DeInit+0xbe>
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	4a5d      	ldr	r2, [pc, #372]	; (8004418 <HAL_GPIO_DeInit+0x204>)
 80042a2:	4293      	cmp	r3, r2
 80042a4:	d013      	beq.n	80042ce <HAL_GPIO_DeInit+0xba>
 80042a6:	687b      	ldr	r3, [r7, #4]
 80042a8:	4a5c      	ldr	r2, [pc, #368]	; (800441c <HAL_GPIO_DeInit+0x208>)
 80042aa:	4293      	cmp	r3, r2
 80042ac:	d00d      	beq.n	80042ca <HAL_GPIO_DeInit+0xb6>
 80042ae:	687b      	ldr	r3, [r7, #4]
 80042b0:	4a5b      	ldr	r2, [pc, #364]	; (8004420 <HAL_GPIO_DeInit+0x20c>)
 80042b2:	4293      	cmp	r3, r2
 80042b4:	d007      	beq.n	80042c6 <HAL_GPIO_DeInit+0xb2>
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	4a5a      	ldr	r2, [pc, #360]	; (8004424 <HAL_GPIO_DeInit+0x210>)
 80042ba:	4293      	cmp	r3, r2
 80042bc:	d101      	bne.n	80042c2 <HAL_GPIO_DeInit+0xae>
 80042be:	2309      	movs	r3, #9
 80042c0:	e012      	b.n	80042e8 <HAL_GPIO_DeInit+0xd4>
 80042c2:	230a      	movs	r3, #10
 80042c4:	e010      	b.n	80042e8 <HAL_GPIO_DeInit+0xd4>
 80042c6:	2308      	movs	r3, #8
 80042c8:	e00e      	b.n	80042e8 <HAL_GPIO_DeInit+0xd4>
 80042ca:	2307      	movs	r3, #7
 80042cc:	e00c      	b.n	80042e8 <HAL_GPIO_DeInit+0xd4>
 80042ce:	2306      	movs	r3, #6
 80042d0:	e00a      	b.n	80042e8 <HAL_GPIO_DeInit+0xd4>
 80042d2:	2305      	movs	r3, #5
 80042d4:	e008      	b.n	80042e8 <HAL_GPIO_DeInit+0xd4>
 80042d6:	2304      	movs	r3, #4
 80042d8:	e006      	b.n	80042e8 <HAL_GPIO_DeInit+0xd4>
 80042da:	2303      	movs	r3, #3
 80042dc:	e004      	b.n	80042e8 <HAL_GPIO_DeInit+0xd4>
 80042de:	2302      	movs	r3, #2
 80042e0:	e002      	b.n	80042e8 <HAL_GPIO_DeInit+0xd4>
 80042e2:	2301      	movs	r3, #1
 80042e4:	e000      	b.n	80042e8 <HAL_GPIO_DeInit+0xd4>
 80042e6:	2300      	movs	r3, #0
 80042e8:	697a      	ldr	r2, [r7, #20]
 80042ea:	f002 0203 	and.w	r2, r2, #3
 80042ee:	0092      	lsls	r2, r2, #2
 80042f0:	4093      	lsls	r3, r2
 80042f2:	68ba      	ldr	r2, [r7, #8]
 80042f4:	429a      	cmp	r2, r3
 80042f6:	d132      	bne.n	800435e <HAL_GPIO_DeInit+0x14a>
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 80042f8:	4b4b      	ldr	r3, [pc, #300]	; (8004428 <HAL_GPIO_DeInit+0x214>)
 80042fa:	681a      	ldr	r2, [r3, #0]
 80042fc:	68fb      	ldr	r3, [r7, #12]
 80042fe:	43db      	mvns	r3, r3
 8004300:	4949      	ldr	r1, [pc, #292]	; (8004428 <HAL_GPIO_DeInit+0x214>)
 8004302:	4013      	ands	r3, r2
 8004304:	600b      	str	r3, [r1, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8004306:	4b48      	ldr	r3, [pc, #288]	; (8004428 <HAL_GPIO_DeInit+0x214>)
 8004308:	685a      	ldr	r2, [r3, #4]
 800430a:	68fb      	ldr	r3, [r7, #12]
 800430c:	43db      	mvns	r3, r3
 800430e:	4946      	ldr	r1, [pc, #280]	; (8004428 <HAL_GPIO_DeInit+0x214>)
 8004310:	4013      	ands	r3, r2
 8004312:	604b      	str	r3, [r1, #4]

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8004314:	4b44      	ldr	r3, [pc, #272]	; (8004428 <HAL_GPIO_DeInit+0x214>)
 8004316:	68da      	ldr	r2, [r3, #12]
 8004318:	68fb      	ldr	r3, [r7, #12]
 800431a:	43db      	mvns	r3, r3
 800431c:	4942      	ldr	r1, [pc, #264]	; (8004428 <HAL_GPIO_DeInit+0x214>)
 800431e:	4013      	ands	r3, r2
 8004320:	60cb      	str	r3, [r1, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8004322:	4b41      	ldr	r3, [pc, #260]	; (8004428 <HAL_GPIO_DeInit+0x214>)
 8004324:	689a      	ldr	r2, [r3, #8]
 8004326:	68fb      	ldr	r3, [r7, #12]
 8004328:	43db      	mvns	r3, r3
 800432a:	493f      	ldr	r1, [pc, #252]	; (8004428 <HAL_GPIO_DeInit+0x214>)
 800432c:	4013      	ands	r3, r2
 800432e:	608b      	str	r3, [r1, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = ((uint32_t)0x0F) << (4 * (position & 0x03));
 8004330:	697b      	ldr	r3, [r7, #20]
 8004332:	f003 0303 	and.w	r3, r3, #3
 8004336:	009b      	lsls	r3, r3, #2
 8004338:	220f      	movs	r2, #15
 800433a:	fa02 f303 	lsl.w	r3, r2, r3
 800433e:	60bb      	str	r3, [r7, #8]
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
 8004340:	4a2e      	ldr	r2, [pc, #184]	; (80043fc <HAL_GPIO_DeInit+0x1e8>)
 8004342:	697b      	ldr	r3, [r7, #20]
 8004344:	089b      	lsrs	r3, r3, #2
 8004346:	3302      	adds	r3, #2
 8004348:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800434c:	68bb      	ldr	r3, [r7, #8]
 800434e:	43da      	mvns	r2, r3
 8004350:	482a      	ldr	r0, [pc, #168]	; (80043fc <HAL_GPIO_DeInit+0x1e8>)
 8004352:	697b      	ldr	r3, [r7, #20]
 8004354:	089b      	lsrs	r3, r3, #2
 8004356:	400a      	ands	r2, r1
 8004358:	3302      	adds	r3, #2
 800435a:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
      }
      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	681a      	ldr	r2, [r3, #0]
 8004362:	697b      	ldr	r3, [r7, #20]
 8004364:	005b      	lsls	r3, r3, #1
 8004366:	2103      	movs	r1, #3
 8004368:	fa01 f303 	lsl.w	r3, r1, r3
 800436c:	43db      	mvns	r3, r3
 800436e:	401a      	ands	r2, r3
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	601a      	str	r2, [r3, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8004374:	697b      	ldr	r3, [r7, #20]
 8004376:	08da      	lsrs	r2, r3, #3
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	3208      	adds	r2, #8
 800437c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004380:	697b      	ldr	r3, [r7, #20]
 8004382:	f003 0307 	and.w	r3, r3, #7
 8004386:	009b      	lsls	r3, r3, #2
 8004388:	220f      	movs	r2, #15
 800438a:	fa02 f303 	lsl.w	r3, r2, r3
 800438e:	43db      	mvns	r3, r3
 8004390:	697a      	ldr	r2, [r7, #20]
 8004392:	08d2      	lsrs	r2, r2, #3
 8004394:	4019      	ands	r1, r3
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	3208      	adds	r2, #8
 800439a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 800439e:	687b      	ldr	r3, [r7, #4]
 80043a0:	68da      	ldr	r2, [r3, #12]
 80043a2:	697b      	ldr	r3, [r7, #20]
 80043a4:	005b      	lsls	r3, r3, #1
 80043a6:	2103      	movs	r1, #3
 80043a8:	fa01 f303 	lsl.w	r3, r1, r3
 80043ac:	43db      	mvns	r3, r3
 80043ae:	401a      	ands	r2, r3
 80043b0:	687b      	ldr	r3, [r7, #4]
 80043b2:	60da      	str	r2, [r3, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	685a      	ldr	r2, [r3, #4]
 80043b8:	2101      	movs	r1, #1
 80043ba:	697b      	ldr	r3, [r7, #20]
 80043bc:	fa01 f303 	lsl.w	r3, r1, r3
 80043c0:	43db      	mvns	r3, r3
 80043c2:	401a      	ands	r2, r3
 80043c4:	687b      	ldr	r3, [r7, #4]
 80043c6:	605a      	str	r2, [r3, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	689a      	ldr	r2, [r3, #8]
 80043cc:	697b      	ldr	r3, [r7, #20]
 80043ce:	005b      	lsls	r3, r3, #1
 80043d0:	2103      	movs	r1, #3
 80043d2:	fa01 f303 	lsl.w	r3, r1, r3
 80043d6:	43db      	mvns	r3, r3
 80043d8:	401a      	ands	r2, r3
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	609a      	str	r2, [r3, #8]
  for(position = 0; position < GPIO_NUMBER; position++)
 80043de:	697b      	ldr	r3, [r7, #20]
 80043e0:	3301      	adds	r3, #1
 80043e2:	617b      	str	r3, [r7, #20]
 80043e4:	697b      	ldr	r3, [r7, #20]
 80043e6:	2b0f      	cmp	r3, #15
 80043e8:	f67f af22 	bls.w	8004230 <HAL_GPIO_DeInit+0x1c>
    }
  }
}
 80043ec:	bf00      	nop
 80043ee:	bf00      	nop
 80043f0:	371c      	adds	r7, #28
 80043f2:	46bd      	mov	sp, r7
 80043f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043f8:	4770      	bx	lr
 80043fa:	bf00      	nop
 80043fc:	40013800 	.word	0x40013800
 8004400:	40020000 	.word	0x40020000
 8004404:	40020400 	.word	0x40020400
 8004408:	40020800 	.word	0x40020800
 800440c:	40020c00 	.word	0x40020c00
 8004410:	40021000 	.word	0x40021000
 8004414:	40021400 	.word	0x40021400
 8004418:	40021800 	.word	0x40021800
 800441c:	40021c00 	.word	0x40021c00
 8004420:	40022000 	.word	0x40022000
 8004424:	40022400 	.word	0x40022400
 8004428:	40013c00 	.word	0x40013c00

0800442c <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 800442c:	b480      	push	{r7}
 800442e:	b085      	sub	sp, #20
 8004430:	af00      	add	r7, sp, #0
 8004432:	6078      	str	r0, [r7, #4]
 8004434:	460b      	mov	r3, r1
 8004436:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004438:	687b      	ldr	r3, [r7, #4]
 800443a:	691a      	ldr	r2, [r3, #16]
 800443c:	887b      	ldrh	r3, [r7, #2]
 800443e:	4013      	ands	r3, r2
 8004440:	2b00      	cmp	r3, #0
 8004442:	d002      	beq.n	800444a <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 8004444:	2301      	movs	r3, #1
 8004446:	73fb      	strb	r3, [r7, #15]
 8004448:	e001      	b.n	800444e <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 800444a:	2300      	movs	r3, #0
 800444c:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 800444e:	7bfb      	ldrb	r3, [r7, #15]
}
 8004450:	4618      	mov	r0, r3
 8004452:	3714      	adds	r7, #20
 8004454:	46bd      	mov	sp, r7
 8004456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800445a:	4770      	bx	lr

0800445c <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 800445c:	b480      	push	{r7}
 800445e:	b083      	sub	sp, #12
 8004460:	af00      	add	r7, sp, #0
 8004462:	6078      	str	r0, [r7, #4]
 8004464:	460b      	mov	r3, r1
 8004466:	807b      	strh	r3, [r7, #2]
 8004468:	4613      	mov	r3, r2
 800446a:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800446c:	787b      	ldrb	r3, [r7, #1]
 800446e:	2b00      	cmp	r3, #0
 8004470:	d003      	beq.n	800447a <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8004472:	887a      	ldrh	r2, [r7, #2]
 8004474:	687b      	ldr	r3, [r7, #4]
 8004476:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
  }
}
 8004478:	e003      	b.n	8004482 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 800447a:	887b      	ldrh	r3, [r7, #2]
 800447c:	041a      	lsls	r2, r3, #16
 800447e:	687b      	ldr	r3, [r7, #4]
 8004480:	619a      	str	r2, [r3, #24]
}
 8004482:	bf00      	nop
 8004484:	370c      	adds	r7, #12
 8004486:	46bd      	mov	sp, r7
 8004488:	f85d 7b04 	ldr.w	r7, [sp], #4
 800448c:	4770      	bx	lr
	...

08004490 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8004490:	b580      	push	{r7, lr}
 8004492:	b082      	sub	sp, #8
 8004494:	af00      	add	r7, sp, #0
 8004496:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8004498:	687b      	ldr	r3, [r7, #4]
 800449a:	2b00      	cmp	r3, #0
 800449c:	d101      	bne.n	80044a2 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 800449e:	2301      	movs	r3, #1
 80044a0:	e07f      	b.n	80045a2 <HAL_I2C_Init+0x112>
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80044a8:	b2db      	uxtb	r3, r3
 80044aa:	2b00      	cmp	r3, #0
 80044ac:	d106      	bne.n	80044bc <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 80044ae:	687b      	ldr	r3, [r7, #4]
 80044b0:	2200      	movs	r2, #0
 80044b2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_I2C_MspInit(hi2c);
 80044b6:	6878      	ldr	r0, [r7, #4]
 80044b8:	f7fe f8dc 	bl	8002674 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	2224      	movs	r2, #36	; 0x24
 80044c0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	681b      	ldr	r3, [r3, #0]
 80044c8:	681a      	ldr	r2, [r3, #0]
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	681b      	ldr	r3, [r3, #0]
 80044ce:	f022 0201 	bic.w	r2, r2, #1
 80044d2:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	685a      	ldr	r2, [r3, #4]
 80044d8:	687b      	ldr	r3, [r7, #4]
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80044e0:	611a      	str	r2, [r3, #16]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Disable Own Address1 before set the Own Address1 configuration */
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 80044e2:	687b      	ldr	r3, [r7, #4]
 80044e4:	681b      	ldr	r3, [r3, #0]
 80044e6:	689a      	ldr	r2, [r3, #8]
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	681b      	ldr	r3, [r3, #0]
 80044ec:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80044f0:	609a      	str	r2, [r3, #8]

  /* Configure I2Cx: Own Address1 and ack own address1 mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 80044f2:	687b      	ldr	r3, [r7, #4]
 80044f4:	68db      	ldr	r3, [r3, #12]
 80044f6:	2b01      	cmp	r3, #1
 80044f8:	d107      	bne.n	800450a <HAL_I2C_Init+0x7a>
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	689a      	ldr	r2, [r3, #8]
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	681b      	ldr	r3, [r3, #0]
 8004502:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004506:	609a      	str	r2, [r3, #8]
 8004508:	e006      	b.n	8004518 <HAL_I2C_Init+0x88>
  }
  else /* I2C_ADDRESSINGMODE_10BIT */
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	689a      	ldr	r2, [r3, #8]
 800450e:	687b      	ldr	r3, [r7, #4]
 8004510:	681b      	ldr	r3, [r3, #0]
 8004512:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 8004516:	609a      	str	r2, [r3, #8]
  }

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Addressing Master mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8004518:	687b      	ldr	r3, [r7, #4]
 800451a:	68db      	ldr	r3, [r3, #12]
 800451c:	2b02      	cmp	r3, #2
 800451e:	d104      	bne.n	800452a <HAL_I2C_Init+0x9a>
  {
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 8004520:	687b      	ldr	r3, [r7, #4]
 8004522:	681b      	ldr	r3, [r3, #0]
 8004524:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004528:	605a      	str	r2, [r3, #4]
  }
  /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 800452a:	687b      	ldr	r3, [r7, #4]
 800452c:	681b      	ldr	r3, [r3, #0]
 800452e:	6859      	ldr	r1, [r3, #4]
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	681a      	ldr	r2, [r3, #0]
 8004534:	4b1d      	ldr	r3, [pc, #116]	; (80045ac <HAL_I2C_Init+0x11c>)
 8004536:	430b      	orrs	r3, r1
 8004538:	6053      	str	r3, [r2, #4]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Disable Own Address2 before set the Own Address2 configuration */
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	681b      	ldr	r3, [r3, #0]
 800453e:	68da      	ldr	r2, [r3, #12]
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	681b      	ldr	r3, [r3, #0]
 8004544:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004548:	60da      	str	r2, [r3, #12]

  /* Configure I2Cx: Dual mode and Own Address2 */
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	691a      	ldr	r2, [r3, #16]
 800454e:	687b      	ldr	r3, [r7, #4]
 8004550:	695b      	ldr	r3, [r3, #20]
 8004552:	ea42 0103 	orr.w	r1, r2, r3
                          (hi2c->Init.OwnAddress2Masks << 8));
 8004556:	687b      	ldr	r3, [r7, #4]
 8004558:	699b      	ldr	r3, [r3, #24]
 800455a:	021a      	lsls	r2, r3, #8
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	681b      	ldr	r3, [r3, #0]
 8004560:	430a      	orrs	r2, r1
 8004562:	60da      	str	r2, [r3, #12]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	69d9      	ldr	r1, [r3, #28]
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	6a1a      	ldr	r2, [r3, #32]
 800456c:	687b      	ldr	r3, [r7, #4]
 800456e:	681b      	ldr	r3, [r3, #0]
 8004570:	430a      	orrs	r2, r1
 8004572:	601a      	str	r2, [r3, #0]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	681b      	ldr	r3, [r3, #0]
 8004578:	681a      	ldr	r2, [r3, #0]
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	f042 0201 	orr.w	r2, r2, #1
 8004582:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	2200      	movs	r2, #0
 8004588:	645a      	str	r2, [r3, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	2220      	movs	r2, #32
 800458e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	2200      	movs	r2, #0
 8004596:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	2200      	movs	r2, #0
 800459c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

  return HAL_OK;
 80045a0:	2300      	movs	r3, #0
}
 80045a2:	4618      	mov	r0, r3
 80045a4:	3708      	adds	r7, #8
 80045a6:	46bd      	mov	sp, r7
 80045a8:	bd80      	pop	{r7, pc}
 80045aa:	bf00      	nop
 80045ac:	02008000 	.word	0x02008000

080045b0 <HAL_I2C_DeInit>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
{
 80045b0:	b580      	push	{r7, lr}
 80045b2:	b082      	sub	sp, #8
 80045b4:	af00      	add	r7, sp, #0
 80045b6:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	2b00      	cmp	r3, #0
 80045bc:	d101      	bne.n	80045c2 <HAL_I2C_DeInit+0x12>
  {
    return HAL_ERROR;
 80045be:	2301      	movs	r3, #1
 80045c0:	e021      	b.n	8004606 <HAL_I2C_DeInit+0x56>
  }

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));

  hi2c->State = HAL_I2C_STATE_BUSY;
 80045c2:	687b      	ldr	r3, [r7, #4]
 80045c4:	2224      	movs	r2, #36	; 0x24
 80045c6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Disable the I2C Peripheral Clock */
  __HAL_I2C_DISABLE(hi2c);
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	681a      	ldr	r2, [r3, #0]
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	681b      	ldr	r3, [r3, #0]
 80045d4:	f022 0201 	bic.w	r2, r2, #1
 80045d8:	601a      	str	r2, [r3, #0]

  /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
  hi2c->MspDeInitCallback(hi2c);
#else
  /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
  HAL_I2C_MspDeInit(hi2c);
 80045da:	6878      	ldr	r0, [r7, #4]
 80045dc:	f7fe f8f0 	bl	80027c0 <HAL_I2C_MspDeInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	2200      	movs	r2, #0
 80045e4:	645a      	str	r2, [r3, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_RESET;
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	2200      	movs	r2, #0
 80045ea:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 80045ee:	687b      	ldr	r3, [r7, #4]
 80045f0:	2200      	movs	r2, #0
 80045f2:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	2200      	movs	r2, #0
 80045f8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

  /* Release Lock */
  __HAL_UNLOCK(hi2c);
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	2200      	movs	r2, #0
 8004600:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  return HAL_OK;
 8004604:	2300      	movs	r3, #0
}
 8004606:	4618      	mov	r0, r3
 8004608:	3708      	adds	r7, #8
 800460a:	46bd      	mov	sp, r7
 800460c:	bd80      	pop	{r7, pc}
	...

08004610 <HAL_I2C_Master_Transmit>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData,
                                          uint16_t Size, uint32_t Timeout)
{
 8004610:	b580      	push	{r7, lr}
 8004612:	b088      	sub	sp, #32
 8004614:	af02      	add	r7, sp, #8
 8004616:	60f8      	str	r0, [r7, #12]
 8004618:	607a      	str	r2, [r7, #4]
 800461a:	461a      	mov	r2, r3
 800461c:	460b      	mov	r3, r1
 800461e:	817b      	strh	r3, [r7, #10]
 8004620:	4613      	mov	r3, r2
 8004622:	813b      	strh	r3, [r7, #8]
  uint32_t tickstart;

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004624:	68fb      	ldr	r3, [r7, #12]
 8004626:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800462a:	b2db      	uxtb	r3, r3
 800462c:	2b20      	cmp	r3, #32
 800462e:	f040 80da 	bne.w	80047e6 <HAL_I2C_Master_Transmit+0x1d6>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004632:	68fb      	ldr	r3, [r7, #12]
 8004634:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004638:	2b01      	cmp	r3, #1
 800463a:	d101      	bne.n	8004640 <HAL_I2C_Master_Transmit+0x30>
 800463c:	2302      	movs	r3, #2
 800463e:	e0d3      	b.n	80047e8 <HAL_I2C_Master_Transmit+0x1d8>
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	2201      	movs	r2, #1
 8004644:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8004648:	f7fe fe94 	bl	8003374 <HAL_GetTick>
 800464c:	6178      	str	r0, [r7, #20]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800464e:	697b      	ldr	r3, [r7, #20]
 8004650:	9300      	str	r3, [sp, #0]
 8004652:	2319      	movs	r3, #25
 8004654:	2201      	movs	r2, #1
 8004656:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800465a:	68f8      	ldr	r0, [r7, #12]
 800465c:	f000 fbc6 	bl	8004dec <I2C_WaitOnFlagUntilTimeout>
 8004660:	4603      	mov	r3, r0
 8004662:	2b00      	cmp	r3, #0
 8004664:	d001      	beq.n	800466a <HAL_I2C_Master_Transmit+0x5a>
    {
      return HAL_ERROR;
 8004666:	2301      	movs	r3, #1
 8004668:	e0be      	b.n	80047e8 <HAL_I2C_Master_Transmit+0x1d8>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800466a:	68fb      	ldr	r3, [r7, #12]
 800466c:	2221      	movs	r2, #33	; 0x21
 800466e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8004672:	68fb      	ldr	r3, [r7, #12]
 8004674:	2210      	movs	r2, #16
 8004676:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800467a:	68fb      	ldr	r3, [r7, #12]
 800467c:	2200      	movs	r2, #0
 800467e:	645a      	str	r2, [r3, #68]	; 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 8004680:	68fb      	ldr	r3, [r7, #12]
 8004682:	687a      	ldr	r2, [r7, #4]
 8004684:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount = Size;
 8004686:	68fb      	ldr	r3, [r7, #12]
 8004688:	893a      	ldrh	r2, [r7, #8]
 800468a:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 800468c:	68fb      	ldr	r3, [r7, #12]
 800468e:	2200      	movs	r2, #0
 8004690:	635a      	str	r2, [r3, #52]	; 0x34

    /* Send Slave Address */
    /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004692:	68fb      	ldr	r3, [r7, #12]
 8004694:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004696:	b29b      	uxth	r3, r3
 8004698:	2bff      	cmp	r3, #255	; 0xff
 800469a:	d90e      	bls.n	80046ba <HAL_I2C_Master_Transmit+0xaa>
    {
      hi2c->XferSize = MAX_NBYTE_SIZE;
 800469c:	68fb      	ldr	r3, [r7, #12]
 800469e:	22ff      	movs	r2, #255	; 0xff
 80046a0:	851a      	strh	r2, [r3, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80046a2:	68fb      	ldr	r3, [r7, #12]
 80046a4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80046a6:	b2da      	uxtb	r2, r3
 80046a8:	8979      	ldrh	r1, [r7, #10]
 80046aa:	4b51      	ldr	r3, [pc, #324]	; (80047f0 <HAL_I2C_Master_Transmit+0x1e0>)
 80046ac:	9300      	str	r3, [sp, #0]
 80046ae:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80046b2:	68f8      	ldr	r0, [r7, #12]
 80046b4:	f000 fd36 	bl	8005124 <I2C_TransferConfig>
 80046b8:	e06c      	b.n	8004794 <HAL_I2C_Master_Transmit+0x184>
                         I2C_GENERATE_START_WRITE);
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 80046ba:	68fb      	ldr	r3, [r7, #12]
 80046bc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80046be:	b29a      	uxth	r2, r3
 80046c0:	68fb      	ldr	r3, [r7, #12]
 80046c2:	851a      	strh	r2, [r3, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80046c4:	68fb      	ldr	r3, [r7, #12]
 80046c6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80046c8:	b2da      	uxtb	r2, r3
 80046ca:	8979      	ldrh	r1, [r7, #10]
 80046cc:	4b48      	ldr	r3, [pc, #288]	; (80047f0 <HAL_I2C_Master_Transmit+0x1e0>)
 80046ce:	9300      	str	r3, [sp, #0]
 80046d0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80046d4:	68f8      	ldr	r0, [r7, #12]
 80046d6:	f000 fd25 	bl	8005124 <I2C_TransferConfig>
                         I2C_GENERATE_START_WRITE);
    }

    while (hi2c->XferCount > 0U)
 80046da:	e05b      	b.n	8004794 <HAL_I2C_Master_Transmit+0x184>
    {
      /* Wait until TXIS flag is set */
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80046dc:	697a      	ldr	r2, [r7, #20]
 80046de:	6a39      	ldr	r1, [r7, #32]
 80046e0:	68f8      	ldr	r0, [r7, #12]
 80046e2:	f000 fbc3 	bl	8004e6c <I2C_WaitOnTXISFlagUntilTimeout>
 80046e6:	4603      	mov	r3, r0
 80046e8:	2b00      	cmp	r3, #0
 80046ea:	d001      	beq.n	80046f0 <HAL_I2C_Master_Transmit+0xe0>
      {
        return HAL_ERROR;
 80046ec:	2301      	movs	r3, #1
 80046ee:	e07b      	b.n	80047e8 <HAL_I2C_Master_Transmit+0x1d8>
      }
      /* Write data to TXDR */
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 80046f0:	68fb      	ldr	r3, [r7, #12]
 80046f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046f4:	781a      	ldrb	r2, [r3, #0]
 80046f6:	68fb      	ldr	r3, [r7, #12]
 80046f8:	681b      	ldr	r3, [r3, #0]
 80046fa:	629a      	str	r2, [r3, #40]	; 0x28

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 80046fc:	68fb      	ldr	r3, [r7, #12]
 80046fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004700:	1c5a      	adds	r2, r3, #1
 8004702:	68fb      	ldr	r3, [r7, #12]
 8004704:	625a      	str	r2, [r3, #36]	; 0x24

      hi2c->XferCount--;
 8004706:	68fb      	ldr	r3, [r7, #12]
 8004708:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800470a:	b29b      	uxth	r3, r3
 800470c:	3b01      	subs	r3, #1
 800470e:	b29a      	uxth	r2, r3
 8004710:	68fb      	ldr	r3, [r7, #12]
 8004712:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 8004714:	68fb      	ldr	r3, [r7, #12]
 8004716:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004718:	3b01      	subs	r3, #1
 800471a:	b29a      	uxth	r2, r3
 800471c:	68fb      	ldr	r3, [r7, #12]
 800471e:	851a      	strh	r2, [r3, #40]	; 0x28

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004720:	68fb      	ldr	r3, [r7, #12]
 8004722:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004724:	b29b      	uxth	r3, r3
 8004726:	2b00      	cmp	r3, #0
 8004728:	d034      	beq.n	8004794 <HAL_I2C_Master_Transmit+0x184>
 800472a:	68fb      	ldr	r3, [r7, #12]
 800472c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800472e:	2b00      	cmp	r3, #0
 8004730:	d130      	bne.n	8004794 <HAL_I2C_Master_Transmit+0x184>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8004732:	697b      	ldr	r3, [r7, #20]
 8004734:	9300      	str	r3, [sp, #0]
 8004736:	6a3b      	ldr	r3, [r7, #32]
 8004738:	2200      	movs	r2, #0
 800473a:	2180      	movs	r1, #128	; 0x80
 800473c:	68f8      	ldr	r0, [r7, #12]
 800473e:	f000 fb55 	bl	8004dec <I2C_WaitOnFlagUntilTimeout>
 8004742:	4603      	mov	r3, r0
 8004744:	2b00      	cmp	r3, #0
 8004746:	d001      	beq.n	800474c <HAL_I2C_Master_Transmit+0x13c>
        {
          return HAL_ERROR;
 8004748:	2301      	movs	r3, #1
 800474a:	e04d      	b.n	80047e8 <HAL_I2C_Master_Transmit+0x1d8>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800474c:	68fb      	ldr	r3, [r7, #12]
 800474e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004750:	b29b      	uxth	r3, r3
 8004752:	2bff      	cmp	r3, #255	; 0xff
 8004754:	d90e      	bls.n	8004774 <HAL_I2C_Master_Transmit+0x164>
        {
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004756:	68fb      	ldr	r3, [r7, #12]
 8004758:	22ff      	movs	r2, #255	; 0xff
 800475a:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800475c:	68fb      	ldr	r3, [r7, #12]
 800475e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004760:	b2da      	uxtb	r2, r3
 8004762:	8979      	ldrh	r1, [r7, #10]
 8004764:	2300      	movs	r3, #0
 8004766:	9300      	str	r3, [sp, #0]
 8004768:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800476c:	68f8      	ldr	r0, [r7, #12]
 800476e:	f000 fcd9 	bl	8005124 <I2C_TransferConfig>
 8004772:	e00f      	b.n	8004794 <HAL_I2C_Master_Transmit+0x184>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 8004774:	68fb      	ldr	r3, [r7, #12]
 8004776:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004778:	b29a      	uxth	r2, r3
 800477a:	68fb      	ldr	r3, [r7, #12]
 800477c:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800477e:	68fb      	ldr	r3, [r7, #12]
 8004780:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004782:	b2da      	uxtb	r2, r3
 8004784:	8979      	ldrh	r1, [r7, #10]
 8004786:	2300      	movs	r3, #0
 8004788:	9300      	str	r3, [sp, #0]
 800478a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800478e:	68f8      	ldr	r0, [r7, #12]
 8004790:	f000 fcc8 	bl	8005124 <I2C_TransferConfig>
    while (hi2c->XferCount > 0U)
 8004794:	68fb      	ldr	r3, [r7, #12]
 8004796:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004798:	b29b      	uxth	r3, r3
 800479a:	2b00      	cmp	r3, #0
 800479c:	d19e      	bne.n	80046dc <HAL_I2C_Master_Transmit+0xcc>
      }
    }

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is set */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800479e:	697a      	ldr	r2, [r7, #20]
 80047a0:	6a39      	ldr	r1, [r7, #32]
 80047a2:	68f8      	ldr	r0, [r7, #12]
 80047a4:	f000 fba2 	bl	8004eec <I2C_WaitOnSTOPFlagUntilTimeout>
 80047a8:	4603      	mov	r3, r0
 80047aa:	2b00      	cmp	r3, #0
 80047ac:	d001      	beq.n	80047b2 <HAL_I2C_Master_Transmit+0x1a2>
    {
      return HAL_ERROR;
 80047ae:	2301      	movs	r3, #1
 80047b0:	e01a      	b.n	80047e8 <HAL_I2C_Master_Transmit+0x1d8>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80047b2:	68fb      	ldr	r3, [r7, #12]
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	2220      	movs	r2, #32
 80047b8:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 80047ba:	68fb      	ldr	r3, [r7, #12]
 80047bc:	681b      	ldr	r3, [r3, #0]
 80047be:	6859      	ldr	r1, [r3, #4]
 80047c0:	68fb      	ldr	r3, [r7, #12]
 80047c2:	681a      	ldr	r2, [r3, #0]
 80047c4:	4b0b      	ldr	r3, [pc, #44]	; (80047f4 <HAL_I2C_Master_Transmit+0x1e4>)
 80047c6:	400b      	ands	r3, r1
 80047c8:	6053      	str	r3, [r2, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 80047ca:	68fb      	ldr	r3, [r7, #12]
 80047cc:	2220      	movs	r2, #32
 80047ce:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80047d2:	68fb      	ldr	r3, [r7, #12]
 80047d4:	2200      	movs	r2, #0
 80047d6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80047da:	68fb      	ldr	r3, [r7, #12]
 80047dc:	2200      	movs	r2, #0
 80047de:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 80047e2:	2300      	movs	r3, #0
 80047e4:	e000      	b.n	80047e8 <HAL_I2C_Master_Transmit+0x1d8>
  }
  else
  {
    return HAL_BUSY;
 80047e6:	2302      	movs	r3, #2
  }
}
 80047e8:	4618      	mov	r0, r3
 80047ea:	3718      	adds	r7, #24
 80047ec:	46bd      	mov	sp, r7
 80047ee:	bd80      	pop	{r7, pc}
 80047f0:	80002000 	.word	0x80002000
 80047f4:	fe00e800 	.word	0xfe00e800

080047f8 <HAL_I2C_Mem_Write>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress,
                                    uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80047f8:	b580      	push	{r7, lr}
 80047fa:	b088      	sub	sp, #32
 80047fc:	af02      	add	r7, sp, #8
 80047fe:	60f8      	str	r0, [r7, #12]
 8004800:	4608      	mov	r0, r1
 8004802:	4611      	mov	r1, r2
 8004804:	461a      	mov	r2, r3
 8004806:	4603      	mov	r3, r0
 8004808:	817b      	strh	r3, [r7, #10]
 800480a:	460b      	mov	r3, r1
 800480c:	813b      	strh	r3, [r7, #8]
 800480e:	4613      	mov	r3, r2
 8004810:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004812:	68fb      	ldr	r3, [r7, #12]
 8004814:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004818:	b2db      	uxtb	r3, r3
 800481a:	2b20      	cmp	r3, #32
 800481c:	f040 80f9 	bne.w	8004a12 <HAL_I2C_Mem_Write+0x21a>
  {
    if ((pData == NULL) || (Size == 0U))
 8004820:	6a3b      	ldr	r3, [r7, #32]
 8004822:	2b00      	cmp	r3, #0
 8004824:	d002      	beq.n	800482c <HAL_I2C_Mem_Write+0x34>
 8004826:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8004828:	2b00      	cmp	r3, #0
 800482a:	d105      	bne.n	8004838 <HAL_I2C_Mem_Write+0x40>
    {
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 800482c:	68fb      	ldr	r3, [r7, #12]
 800482e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004832:	645a      	str	r2, [r3, #68]	; 0x44
      return  HAL_ERROR;
 8004834:	2301      	movs	r3, #1
 8004836:	e0ed      	b.n	8004a14 <HAL_I2C_Mem_Write+0x21c>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004838:	68fb      	ldr	r3, [r7, #12]
 800483a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800483e:	2b01      	cmp	r3, #1
 8004840:	d101      	bne.n	8004846 <HAL_I2C_Mem_Write+0x4e>
 8004842:	2302      	movs	r3, #2
 8004844:	e0e6      	b.n	8004a14 <HAL_I2C_Mem_Write+0x21c>
 8004846:	68fb      	ldr	r3, [r7, #12]
 8004848:	2201      	movs	r2, #1
 800484a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 800484e:	f7fe fd91 	bl	8003374 <HAL_GetTick>
 8004852:	6178      	str	r0, [r7, #20]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004854:	697b      	ldr	r3, [r7, #20]
 8004856:	9300      	str	r3, [sp, #0]
 8004858:	2319      	movs	r3, #25
 800485a:	2201      	movs	r2, #1
 800485c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004860:	68f8      	ldr	r0, [r7, #12]
 8004862:	f000 fac3 	bl	8004dec <I2C_WaitOnFlagUntilTimeout>
 8004866:	4603      	mov	r3, r0
 8004868:	2b00      	cmp	r3, #0
 800486a:	d001      	beq.n	8004870 <HAL_I2C_Mem_Write+0x78>
    {
      return HAL_ERROR;
 800486c:	2301      	movs	r3, #1
 800486e:	e0d1      	b.n	8004a14 <HAL_I2C_Mem_Write+0x21c>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004870:	68fb      	ldr	r3, [r7, #12]
 8004872:	2221      	movs	r2, #33	; 0x21
 8004874:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004878:	68fb      	ldr	r3, [r7, #12]
 800487a:	2240      	movs	r2, #64	; 0x40
 800487c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004880:	68fb      	ldr	r3, [r7, #12]
 8004882:	2200      	movs	r2, #0
 8004884:	645a      	str	r2, [r3, #68]	; 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 8004886:	68fb      	ldr	r3, [r7, #12]
 8004888:	6a3a      	ldr	r2, [r7, #32]
 800488a:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount = Size;
 800488c:	68fb      	ldr	r3, [r7, #12]
 800488e:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8004890:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 8004892:	68fb      	ldr	r3, [r7, #12]
 8004894:	2200      	movs	r2, #0
 8004896:	635a      	str	r2, [r3, #52]	; 0x34

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004898:	88f8      	ldrh	r0, [r7, #6]
 800489a:	893a      	ldrh	r2, [r7, #8]
 800489c:	8979      	ldrh	r1, [r7, #10]
 800489e:	697b      	ldr	r3, [r7, #20]
 80048a0:	9301      	str	r3, [sp, #4]
 80048a2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80048a4:	9300      	str	r3, [sp, #0]
 80048a6:	4603      	mov	r3, r0
 80048a8:	68f8      	ldr	r0, [r7, #12]
 80048aa:	f000 f9d3 	bl	8004c54 <I2C_RequestMemoryWrite>
 80048ae:	4603      	mov	r3, r0
 80048b0:	2b00      	cmp	r3, #0
 80048b2:	d005      	beq.n	80048c0 <HAL_I2C_Mem_Write+0xc8>
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 80048b4:	68fb      	ldr	r3, [r7, #12]
 80048b6:	2200      	movs	r2, #0
 80048b8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
      return HAL_ERROR;
 80048bc:	2301      	movs	r3, #1
 80048be:	e0a9      	b.n	8004a14 <HAL_I2C_Mem_Write+0x21c>
    }

    /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80048c0:	68fb      	ldr	r3, [r7, #12]
 80048c2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80048c4:	b29b      	uxth	r3, r3
 80048c6:	2bff      	cmp	r3, #255	; 0xff
 80048c8:	d90e      	bls.n	80048e8 <HAL_I2C_Mem_Write+0xf0>
    {
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80048ca:	68fb      	ldr	r3, [r7, #12]
 80048cc:	22ff      	movs	r2, #255	; 0xff
 80048ce:	851a      	strh	r2, [r3, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 80048d0:	68fb      	ldr	r3, [r7, #12]
 80048d2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80048d4:	b2da      	uxtb	r2, r3
 80048d6:	8979      	ldrh	r1, [r7, #10]
 80048d8:	2300      	movs	r3, #0
 80048da:	9300      	str	r3, [sp, #0]
 80048dc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80048e0:	68f8      	ldr	r0, [r7, #12]
 80048e2:	f000 fc1f 	bl	8005124 <I2C_TransferConfig>
 80048e6:	e00f      	b.n	8004908 <HAL_I2C_Mem_Write+0x110>
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 80048e8:	68fb      	ldr	r3, [r7, #12]
 80048ea:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80048ec:	b29a      	uxth	r2, r3
 80048ee:	68fb      	ldr	r3, [r7, #12]
 80048f0:	851a      	strh	r2, [r3, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80048f2:	68fb      	ldr	r3, [r7, #12]
 80048f4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80048f6:	b2da      	uxtb	r2, r3
 80048f8:	8979      	ldrh	r1, [r7, #10]
 80048fa:	2300      	movs	r3, #0
 80048fc:	9300      	str	r3, [sp, #0]
 80048fe:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8004902:	68f8      	ldr	r0, [r7, #12]
 8004904:	f000 fc0e 	bl	8005124 <I2C_TransferConfig>
    }

    do
    {
      /* Wait until TXIS flag is set */
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004908:	697a      	ldr	r2, [r7, #20]
 800490a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800490c:	68f8      	ldr	r0, [r7, #12]
 800490e:	f000 faad 	bl	8004e6c <I2C_WaitOnTXISFlagUntilTimeout>
 8004912:	4603      	mov	r3, r0
 8004914:	2b00      	cmp	r3, #0
 8004916:	d001      	beq.n	800491c <HAL_I2C_Mem_Write+0x124>
      {
        return HAL_ERROR;
 8004918:	2301      	movs	r3, #1
 800491a:	e07b      	b.n	8004a14 <HAL_I2C_Mem_Write+0x21c>
      }

      /* Write data to TXDR */
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 800491c:	68fb      	ldr	r3, [r7, #12]
 800491e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004920:	781a      	ldrb	r2, [r3, #0]
 8004922:	68fb      	ldr	r3, [r7, #12]
 8004924:	681b      	ldr	r3, [r3, #0]
 8004926:	629a      	str	r2, [r3, #40]	; 0x28

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8004928:	68fb      	ldr	r3, [r7, #12]
 800492a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800492c:	1c5a      	adds	r2, r3, #1
 800492e:	68fb      	ldr	r3, [r7, #12]
 8004930:	625a      	str	r2, [r3, #36]	; 0x24

      hi2c->XferCount--;
 8004932:	68fb      	ldr	r3, [r7, #12]
 8004934:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004936:	b29b      	uxth	r3, r3
 8004938:	3b01      	subs	r3, #1
 800493a:	b29a      	uxth	r2, r3
 800493c:	68fb      	ldr	r3, [r7, #12]
 800493e:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 8004940:	68fb      	ldr	r3, [r7, #12]
 8004942:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004944:	3b01      	subs	r3, #1
 8004946:	b29a      	uxth	r2, r3
 8004948:	68fb      	ldr	r3, [r7, #12]
 800494a:	851a      	strh	r2, [r3, #40]	; 0x28

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800494c:	68fb      	ldr	r3, [r7, #12]
 800494e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004950:	b29b      	uxth	r3, r3
 8004952:	2b00      	cmp	r3, #0
 8004954:	d034      	beq.n	80049c0 <HAL_I2C_Mem_Write+0x1c8>
 8004956:	68fb      	ldr	r3, [r7, #12]
 8004958:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800495a:	2b00      	cmp	r3, #0
 800495c:	d130      	bne.n	80049c0 <HAL_I2C_Mem_Write+0x1c8>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 800495e:	697b      	ldr	r3, [r7, #20]
 8004960:	9300      	str	r3, [sp, #0]
 8004962:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004964:	2200      	movs	r2, #0
 8004966:	2180      	movs	r1, #128	; 0x80
 8004968:	68f8      	ldr	r0, [r7, #12]
 800496a:	f000 fa3f 	bl	8004dec <I2C_WaitOnFlagUntilTimeout>
 800496e:	4603      	mov	r3, r0
 8004970:	2b00      	cmp	r3, #0
 8004972:	d001      	beq.n	8004978 <HAL_I2C_Mem_Write+0x180>
        {
          return HAL_ERROR;
 8004974:	2301      	movs	r3, #1
 8004976:	e04d      	b.n	8004a14 <HAL_I2C_Mem_Write+0x21c>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004978:	68fb      	ldr	r3, [r7, #12]
 800497a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800497c:	b29b      	uxth	r3, r3
 800497e:	2bff      	cmp	r3, #255	; 0xff
 8004980:	d90e      	bls.n	80049a0 <HAL_I2C_Mem_Write+0x1a8>
        {
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004982:	68fb      	ldr	r3, [r7, #12]
 8004984:	22ff      	movs	r2, #255	; 0xff
 8004986:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004988:	68fb      	ldr	r3, [r7, #12]
 800498a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800498c:	b2da      	uxtb	r2, r3
 800498e:	8979      	ldrh	r1, [r7, #10]
 8004990:	2300      	movs	r3, #0
 8004992:	9300      	str	r3, [sp, #0]
 8004994:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004998:	68f8      	ldr	r0, [r7, #12]
 800499a:	f000 fbc3 	bl	8005124 <I2C_TransferConfig>
 800499e:	e00f      	b.n	80049c0 <HAL_I2C_Mem_Write+0x1c8>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 80049a0:	68fb      	ldr	r3, [r7, #12]
 80049a2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80049a4:	b29a      	uxth	r2, r3
 80049a6:	68fb      	ldr	r3, [r7, #12]
 80049a8:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80049aa:	68fb      	ldr	r3, [r7, #12]
 80049ac:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80049ae:	b2da      	uxtb	r2, r3
 80049b0:	8979      	ldrh	r1, [r7, #10]
 80049b2:	2300      	movs	r3, #0
 80049b4:	9300      	str	r3, [sp, #0]
 80049b6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80049ba:	68f8      	ldr	r0, [r7, #12]
 80049bc:	f000 fbb2 	bl	8005124 <I2C_TransferConfig>
                             I2C_NO_STARTSTOP);
        }
      }

    } while (hi2c->XferCount > 0U);
 80049c0:	68fb      	ldr	r3, [r7, #12]
 80049c2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80049c4:	b29b      	uxth	r3, r3
 80049c6:	2b00      	cmp	r3, #0
 80049c8:	d19e      	bne.n	8004908 <HAL_I2C_Mem_Write+0x110>

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is reset */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80049ca:	697a      	ldr	r2, [r7, #20]
 80049cc:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80049ce:	68f8      	ldr	r0, [r7, #12]
 80049d0:	f000 fa8c 	bl	8004eec <I2C_WaitOnSTOPFlagUntilTimeout>
 80049d4:	4603      	mov	r3, r0
 80049d6:	2b00      	cmp	r3, #0
 80049d8:	d001      	beq.n	80049de <HAL_I2C_Mem_Write+0x1e6>
    {
      return HAL_ERROR;
 80049da:	2301      	movs	r3, #1
 80049dc:	e01a      	b.n	8004a14 <HAL_I2C_Mem_Write+0x21c>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80049de:	68fb      	ldr	r3, [r7, #12]
 80049e0:	681b      	ldr	r3, [r3, #0]
 80049e2:	2220      	movs	r2, #32
 80049e4:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 80049e6:	68fb      	ldr	r3, [r7, #12]
 80049e8:	681b      	ldr	r3, [r3, #0]
 80049ea:	6859      	ldr	r1, [r3, #4]
 80049ec:	68fb      	ldr	r3, [r7, #12]
 80049ee:	681a      	ldr	r2, [r3, #0]
 80049f0:	4b0a      	ldr	r3, [pc, #40]	; (8004a1c <HAL_I2C_Mem_Write+0x224>)
 80049f2:	400b      	ands	r3, r1
 80049f4:	6053      	str	r3, [r2, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 80049f6:	68fb      	ldr	r3, [r7, #12]
 80049f8:	2220      	movs	r2, #32
 80049fa:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80049fe:	68fb      	ldr	r3, [r7, #12]
 8004a00:	2200      	movs	r2, #0
 8004a02:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004a06:	68fb      	ldr	r3, [r7, #12]
 8004a08:	2200      	movs	r2, #0
 8004a0a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 8004a0e:	2300      	movs	r3, #0
 8004a10:	e000      	b.n	8004a14 <HAL_I2C_Mem_Write+0x21c>
  }
  else
  {
    return HAL_BUSY;
 8004a12:	2302      	movs	r3, #2
  }
}
 8004a14:	4618      	mov	r0, r3
 8004a16:	3718      	adds	r7, #24
 8004a18:	46bd      	mov	sp, r7
 8004a1a:	bd80      	pop	{r7, pc}
 8004a1c:	fe00e800 	.word	0xfe00e800

08004a20 <HAL_I2C_Mem_Read>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress,
                                   uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004a20:	b580      	push	{r7, lr}
 8004a22:	b088      	sub	sp, #32
 8004a24:	af02      	add	r7, sp, #8
 8004a26:	60f8      	str	r0, [r7, #12]
 8004a28:	4608      	mov	r0, r1
 8004a2a:	4611      	mov	r1, r2
 8004a2c:	461a      	mov	r2, r3
 8004a2e:	4603      	mov	r3, r0
 8004a30:	817b      	strh	r3, [r7, #10]
 8004a32:	460b      	mov	r3, r1
 8004a34:	813b      	strh	r3, [r7, #8]
 8004a36:	4613      	mov	r3, r2
 8004a38:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004a3a:	68fb      	ldr	r3, [r7, #12]
 8004a3c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004a40:	b2db      	uxtb	r3, r3
 8004a42:	2b20      	cmp	r3, #32
 8004a44:	f040 80fd 	bne.w	8004c42 <HAL_I2C_Mem_Read+0x222>
  {
    if ((pData == NULL) || (Size == 0U))
 8004a48:	6a3b      	ldr	r3, [r7, #32]
 8004a4a:	2b00      	cmp	r3, #0
 8004a4c:	d002      	beq.n	8004a54 <HAL_I2C_Mem_Read+0x34>
 8004a4e:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8004a50:	2b00      	cmp	r3, #0
 8004a52:	d105      	bne.n	8004a60 <HAL_I2C_Mem_Read+0x40>
    {
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8004a54:	68fb      	ldr	r3, [r7, #12]
 8004a56:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004a5a:	645a      	str	r2, [r3, #68]	; 0x44
      return  HAL_ERROR;
 8004a5c:	2301      	movs	r3, #1
 8004a5e:	e0f1      	b.n	8004c44 <HAL_I2C_Mem_Read+0x224>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004a60:	68fb      	ldr	r3, [r7, #12]
 8004a62:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004a66:	2b01      	cmp	r3, #1
 8004a68:	d101      	bne.n	8004a6e <HAL_I2C_Mem_Read+0x4e>
 8004a6a:	2302      	movs	r3, #2
 8004a6c:	e0ea      	b.n	8004c44 <HAL_I2C_Mem_Read+0x224>
 8004a6e:	68fb      	ldr	r3, [r7, #12]
 8004a70:	2201      	movs	r2, #1
 8004a72:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8004a76:	f7fe fc7d 	bl	8003374 <HAL_GetTick>
 8004a7a:	6178      	str	r0, [r7, #20]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8004a7c:	697b      	ldr	r3, [r7, #20]
 8004a7e:	9300      	str	r3, [sp, #0]
 8004a80:	2319      	movs	r3, #25
 8004a82:	2201      	movs	r2, #1
 8004a84:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004a88:	68f8      	ldr	r0, [r7, #12]
 8004a8a:	f000 f9af 	bl	8004dec <I2C_WaitOnFlagUntilTimeout>
 8004a8e:	4603      	mov	r3, r0
 8004a90:	2b00      	cmp	r3, #0
 8004a92:	d001      	beq.n	8004a98 <HAL_I2C_Mem_Read+0x78>
    {
      return HAL_ERROR;
 8004a94:	2301      	movs	r3, #1
 8004a96:	e0d5      	b.n	8004c44 <HAL_I2C_Mem_Read+0x224>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004a98:	68fb      	ldr	r3, [r7, #12]
 8004a9a:	2222      	movs	r2, #34	; 0x22
 8004a9c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004aa0:	68fb      	ldr	r3, [r7, #12]
 8004aa2:	2240      	movs	r2, #64	; 0x40
 8004aa4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004aa8:	68fb      	ldr	r3, [r7, #12]
 8004aaa:	2200      	movs	r2, #0
 8004aac:	645a      	str	r2, [r3, #68]	; 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 8004aae:	68fb      	ldr	r3, [r7, #12]
 8004ab0:	6a3a      	ldr	r2, [r7, #32]
 8004ab2:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount = Size;
 8004ab4:	68fb      	ldr	r3, [r7, #12]
 8004ab6:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8004ab8:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 8004aba:	68fb      	ldr	r3, [r7, #12]
 8004abc:	2200      	movs	r2, #0
 8004abe:	635a      	str	r2, [r3, #52]	; 0x34

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004ac0:	88f8      	ldrh	r0, [r7, #6]
 8004ac2:	893a      	ldrh	r2, [r7, #8]
 8004ac4:	8979      	ldrh	r1, [r7, #10]
 8004ac6:	697b      	ldr	r3, [r7, #20]
 8004ac8:	9301      	str	r3, [sp, #4]
 8004aca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004acc:	9300      	str	r3, [sp, #0]
 8004ace:	4603      	mov	r3, r0
 8004ad0:	68f8      	ldr	r0, [r7, #12]
 8004ad2:	f000 f913 	bl	8004cfc <I2C_RequestMemoryRead>
 8004ad6:	4603      	mov	r3, r0
 8004ad8:	2b00      	cmp	r3, #0
 8004ada:	d005      	beq.n	8004ae8 <HAL_I2C_Mem_Read+0xc8>
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8004adc:	68fb      	ldr	r3, [r7, #12]
 8004ade:	2200      	movs	r2, #0
 8004ae0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
      return HAL_ERROR;
 8004ae4:	2301      	movs	r3, #1
 8004ae6:	e0ad      	b.n	8004c44 <HAL_I2C_Mem_Read+0x224>
    }

    /* Send Slave Address */
    /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004ae8:	68fb      	ldr	r3, [r7, #12]
 8004aea:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004aec:	b29b      	uxth	r3, r3
 8004aee:	2bff      	cmp	r3, #255	; 0xff
 8004af0:	d90e      	bls.n	8004b10 <HAL_I2C_Mem_Read+0xf0>
    {
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8004af2:	68fb      	ldr	r3, [r7, #12]
 8004af4:	22ff      	movs	r2, #255	; 0xff
 8004af6:	851a      	strh	r2, [r3, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004af8:	68fb      	ldr	r3, [r7, #12]
 8004afa:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004afc:	b2da      	uxtb	r2, r3
 8004afe:	8979      	ldrh	r1, [r7, #10]
 8004b00:	4b52      	ldr	r3, [pc, #328]	; (8004c4c <HAL_I2C_Mem_Read+0x22c>)
 8004b02:	9300      	str	r3, [sp, #0]
 8004b04:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004b08:	68f8      	ldr	r0, [r7, #12]
 8004b0a:	f000 fb0b 	bl	8005124 <I2C_TransferConfig>
 8004b0e:	e00f      	b.n	8004b30 <HAL_I2C_Mem_Read+0x110>
                         I2C_GENERATE_START_READ);
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 8004b10:	68fb      	ldr	r3, [r7, #12]
 8004b12:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004b14:	b29a      	uxth	r2, r3
 8004b16:	68fb      	ldr	r3, [r7, #12]
 8004b18:	851a      	strh	r2, [r3, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004b1a:	68fb      	ldr	r3, [r7, #12]
 8004b1c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004b1e:	b2da      	uxtb	r2, r3
 8004b20:	8979      	ldrh	r1, [r7, #10]
 8004b22:	4b4a      	ldr	r3, [pc, #296]	; (8004c4c <HAL_I2C_Mem_Read+0x22c>)
 8004b24:	9300      	str	r3, [sp, #0]
 8004b26:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8004b2a:	68f8      	ldr	r0, [r7, #12]
 8004b2c:	f000 fafa 	bl	8005124 <I2C_TransferConfig>
    }

    do
    {
      /* Wait until RXNE flag is set */
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8004b30:	697b      	ldr	r3, [r7, #20]
 8004b32:	9300      	str	r3, [sp, #0]
 8004b34:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b36:	2200      	movs	r2, #0
 8004b38:	2104      	movs	r1, #4
 8004b3a:	68f8      	ldr	r0, [r7, #12]
 8004b3c:	f000 f956 	bl	8004dec <I2C_WaitOnFlagUntilTimeout>
 8004b40:	4603      	mov	r3, r0
 8004b42:	2b00      	cmp	r3, #0
 8004b44:	d001      	beq.n	8004b4a <HAL_I2C_Mem_Read+0x12a>
      {
        return HAL_ERROR;
 8004b46:	2301      	movs	r3, #1
 8004b48:	e07c      	b.n	8004c44 <HAL_I2C_Mem_Read+0x224>
      }

      /* Read data from RXDR */
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8004b4a:	68fb      	ldr	r3, [r7, #12]
 8004b4c:	681b      	ldr	r3, [r3, #0]
 8004b4e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004b50:	68fb      	ldr	r3, [r7, #12]
 8004b52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b54:	b2d2      	uxtb	r2, r2
 8004b56:	701a      	strb	r2, [r3, #0]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8004b58:	68fb      	ldr	r3, [r7, #12]
 8004b5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b5c:	1c5a      	adds	r2, r3, #1
 8004b5e:	68fb      	ldr	r3, [r7, #12]
 8004b60:	625a      	str	r2, [r3, #36]	; 0x24

      hi2c->XferSize--;
 8004b62:	68fb      	ldr	r3, [r7, #12]
 8004b64:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004b66:	3b01      	subs	r3, #1
 8004b68:	b29a      	uxth	r2, r3
 8004b6a:	68fb      	ldr	r3, [r7, #12]
 8004b6c:	851a      	strh	r2, [r3, #40]	; 0x28
      hi2c->XferCount--;
 8004b6e:	68fb      	ldr	r3, [r7, #12]
 8004b70:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004b72:	b29b      	uxth	r3, r3
 8004b74:	3b01      	subs	r3, #1
 8004b76:	b29a      	uxth	r2, r3
 8004b78:	68fb      	ldr	r3, [r7, #12]
 8004b7a:	855a      	strh	r2, [r3, #42]	; 0x2a

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8004b7c:	68fb      	ldr	r3, [r7, #12]
 8004b7e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004b80:	b29b      	uxth	r3, r3
 8004b82:	2b00      	cmp	r3, #0
 8004b84:	d034      	beq.n	8004bf0 <HAL_I2C_Mem_Read+0x1d0>
 8004b86:	68fb      	ldr	r3, [r7, #12]
 8004b88:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004b8a:	2b00      	cmp	r3, #0
 8004b8c:	d130      	bne.n	8004bf0 <HAL_I2C_Mem_Read+0x1d0>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8004b8e:	697b      	ldr	r3, [r7, #20]
 8004b90:	9300      	str	r3, [sp, #0]
 8004b92:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b94:	2200      	movs	r2, #0
 8004b96:	2180      	movs	r1, #128	; 0x80
 8004b98:	68f8      	ldr	r0, [r7, #12]
 8004b9a:	f000 f927 	bl	8004dec <I2C_WaitOnFlagUntilTimeout>
 8004b9e:	4603      	mov	r3, r0
 8004ba0:	2b00      	cmp	r3, #0
 8004ba2:	d001      	beq.n	8004ba8 <HAL_I2C_Mem_Read+0x188>
        {
          return HAL_ERROR;
 8004ba4:	2301      	movs	r3, #1
 8004ba6:	e04d      	b.n	8004c44 <HAL_I2C_Mem_Read+0x224>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004ba8:	68fb      	ldr	r3, [r7, #12]
 8004baa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004bac:	b29b      	uxth	r3, r3
 8004bae:	2bff      	cmp	r3, #255	; 0xff
 8004bb0:	d90e      	bls.n	8004bd0 <HAL_I2C_Mem_Read+0x1b0>
        {
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004bb2:	68fb      	ldr	r3, [r7, #12]
 8004bb4:	22ff      	movs	r2, #255	; 0xff
 8004bb6:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8004bb8:	68fb      	ldr	r3, [r7, #12]
 8004bba:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004bbc:	b2da      	uxtb	r2, r3
 8004bbe:	8979      	ldrh	r1, [r7, #10]
 8004bc0:	2300      	movs	r3, #0
 8004bc2:	9300      	str	r3, [sp, #0]
 8004bc4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004bc8:	68f8      	ldr	r0, [r7, #12]
 8004bca:	f000 faab 	bl	8005124 <I2C_TransferConfig>
 8004bce:	e00f      	b.n	8004bf0 <HAL_I2C_Mem_Read+0x1d0>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 8004bd0:	68fb      	ldr	r3, [r7, #12]
 8004bd2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004bd4:	b29a      	uxth	r2, r3
 8004bd6:	68fb      	ldr	r3, [r7, #12]
 8004bd8:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8004bda:	68fb      	ldr	r3, [r7, #12]
 8004bdc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004bde:	b2da      	uxtb	r2, r3
 8004be0:	8979      	ldrh	r1, [r7, #10]
 8004be2:	2300      	movs	r3, #0
 8004be4:	9300      	str	r3, [sp, #0]
 8004be6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8004bea:	68f8      	ldr	r0, [r7, #12]
 8004bec:	f000 fa9a 	bl	8005124 <I2C_TransferConfig>
                             I2C_NO_STARTSTOP);
        }
      }
    } while (hi2c->XferCount > 0U);
 8004bf0:	68fb      	ldr	r3, [r7, #12]
 8004bf2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004bf4:	b29b      	uxth	r3, r3
 8004bf6:	2b00      	cmp	r3, #0
 8004bf8:	d19a      	bne.n	8004b30 <HAL_I2C_Mem_Read+0x110>

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is reset */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004bfa:	697a      	ldr	r2, [r7, #20]
 8004bfc:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8004bfe:	68f8      	ldr	r0, [r7, #12]
 8004c00:	f000 f974 	bl	8004eec <I2C_WaitOnSTOPFlagUntilTimeout>
 8004c04:	4603      	mov	r3, r0
 8004c06:	2b00      	cmp	r3, #0
 8004c08:	d001      	beq.n	8004c0e <HAL_I2C_Mem_Read+0x1ee>
    {
      return HAL_ERROR;
 8004c0a:	2301      	movs	r3, #1
 8004c0c:	e01a      	b.n	8004c44 <HAL_I2C_Mem_Read+0x224>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004c0e:	68fb      	ldr	r3, [r7, #12]
 8004c10:	681b      	ldr	r3, [r3, #0]
 8004c12:	2220      	movs	r2, #32
 8004c14:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8004c16:	68fb      	ldr	r3, [r7, #12]
 8004c18:	681b      	ldr	r3, [r3, #0]
 8004c1a:	6859      	ldr	r1, [r3, #4]
 8004c1c:	68fb      	ldr	r3, [r7, #12]
 8004c1e:	681a      	ldr	r2, [r3, #0]
 8004c20:	4b0b      	ldr	r3, [pc, #44]	; (8004c50 <HAL_I2C_Mem_Read+0x230>)
 8004c22:	400b      	ands	r3, r1
 8004c24:	6053      	str	r3, [r2, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 8004c26:	68fb      	ldr	r3, [r7, #12]
 8004c28:	2220      	movs	r2, #32
 8004c2a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8004c2e:	68fb      	ldr	r3, [r7, #12]
 8004c30:	2200      	movs	r2, #0
 8004c32:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004c36:	68fb      	ldr	r3, [r7, #12]
 8004c38:	2200      	movs	r2, #0
 8004c3a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 8004c3e:	2300      	movs	r3, #0
 8004c40:	e000      	b.n	8004c44 <HAL_I2C_Mem_Read+0x224>
  }
  else
  {
    return HAL_BUSY;
 8004c42:	2302      	movs	r3, #2
  }
}
 8004c44:	4618      	mov	r0, r3
 8004c46:	3718      	adds	r7, #24
 8004c48:	46bd      	mov	sp, r7
 8004c4a:	bd80      	pop	{r7, pc}
 8004c4c:	80002400 	.word	0x80002400
 8004c50:	fe00e800 	.word	0xfe00e800

08004c54 <I2C_RequestMemoryWrite>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
                                                uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout,
                                                uint32_t Tickstart)
{
 8004c54:	b580      	push	{r7, lr}
 8004c56:	b086      	sub	sp, #24
 8004c58:	af02      	add	r7, sp, #8
 8004c5a:	60f8      	str	r0, [r7, #12]
 8004c5c:	4608      	mov	r0, r1
 8004c5e:	4611      	mov	r1, r2
 8004c60:	461a      	mov	r2, r3
 8004c62:	4603      	mov	r3, r0
 8004c64:	817b      	strh	r3, [r7, #10]
 8004c66:	460b      	mov	r3, r1
 8004c68:	813b      	strh	r3, [r7, #8]
 8004c6a:	4613      	mov	r3, r2
 8004c6c:	80fb      	strh	r3, [r7, #6]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004c6e:	88fb      	ldrh	r3, [r7, #6]
 8004c70:	b2da      	uxtb	r2, r3
 8004c72:	8979      	ldrh	r1, [r7, #10]
 8004c74:	4b20      	ldr	r3, [pc, #128]	; (8004cf8 <I2C_RequestMemoryWrite+0xa4>)
 8004c76:	9300      	str	r3, [sp, #0]
 8004c78:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004c7c:	68f8      	ldr	r0, [r7, #12]
 8004c7e:	f000 fa51 	bl	8005124 <I2C_TransferConfig>

  /* Wait until TXIS flag is set */
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004c82:	69fa      	ldr	r2, [r7, #28]
 8004c84:	69b9      	ldr	r1, [r7, #24]
 8004c86:	68f8      	ldr	r0, [r7, #12]
 8004c88:	f000 f8f0 	bl	8004e6c <I2C_WaitOnTXISFlagUntilTimeout>
 8004c8c:	4603      	mov	r3, r0
 8004c8e:	2b00      	cmp	r3, #0
 8004c90:	d001      	beq.n	8004c96 <I2C_RequestMemoryWrite+0x42>
  {
    return HAL_ERROR;
 8004c92:	2301      	movs	r3, #1
 8004c94:	e02c      	b.n	8004cf0 <I2C_RequestMemoryWrite+0x9c>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004c96:	88fb      	ldrh	r3, [r7, #6]
 8004c98:	2b01      	cmp	r3, #1
 8004c9a:	d105      	bne.n	8004ca8 <I2C_RequestMemoryWrite+0x54>
  {
    /* Send Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004c9c:	893b      	ldrh	r3, [r7, #8]
 8004c9e:	b2da      	uxtb	r2, r3
 8004ca0:	68fb      	ldr	r3, [r7, #12]
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	629a      	str	r2, [r3, #40]	; 0x28
 8004ca6:	e015      	b.n	8004cd4 <I2C_RequestMemoryWrite+0x80>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004ca8:	893b      	ldrh	r3, [r7, #8]
 8004caa:	0a1b      	lsrs	r3, r3, #8
 8004cac:	b29b      	uxth	r3, r3
 8004cae:	b2da      	uxtb	r2, r3
 8004cb0:	68fb      	ldr	r3, [r7, #12]
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	629a      	str	r2, [r3, #40]	; 0x28

    /* Wait until TXIS flag is set */
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004cb6:	69fa      	ldr	r2, [r7, #28]
 8004cb8:	69b9      	ldr	r1, [r7, #24]
 8004cba:	68f8      	ldr	r0, [r7, #12]
 8004cbc:	f000 f8d6 	bl	8004e6c <I2C_WaitOnTXISFlagUntilTimeout>
 8004cc0:	4603      	mov	r3, r0
 8004cc2:	2b00      	cmp	r3, #0
 8004cc4:	d001      	beq.n	8004cca <I2C_RequestMemoryWrite+0x76>
    {
      return HAL_ERROR;
 8004cc6:	2301      	movs	r3, #1
 8004cc8:	e012      	b.n	8004cf0 <I2C_RequestMemoryWrite+0x9c>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004cca:	893b      	ldrh	r3, [r7, #8]
 8004ccc:	b2da      	uxtb	r2, r3
 8004cce:	68fb      	ldr	r3, [r7, #12]
 8004cd0:	681b      	ldr	r3, [r3, #0]
 8004cd2:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Wait until TCR flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8004cd4:	69fb      	ldr	r3, [r7, #28]
 8004cd6:	9300      	str	r3, [sp, #0]
 8004cd8:	69bb      	ldr	r3, [r7, #24]
 8004cda:	2200      	movs	r2, #0
 8004cdc:	2180      	movs	r1, #128	; 0x80
 8004cde:	68f8      	ldr	r0, [r7, #12]
 8004ce0:	f000 f884 	bl	8004dec <I2C_WaitOnFlagUntilTimeout>
 8004ce4:	4603      	mov	r3, r0
 8004ce6:	2b00      	cmp	r3, #0
 8004ce8:	d001      	beq.n	8004cee <I2C_RequestMemoryWrite+0x9a>
  {
    return HAL_ERROR;
 8004cea:	2301      	movs	r3, #1
 8004cec:	e000      	b.n	8004cf0 <I2C_RequestMemoryWrite+0x9c>
  }

  return HAL_OK;
 8004cee:	2300      	movs	r3, #0
}
 8004cf0:	4618      	mov	r0, r3
 8004cf2:	3710      	adds	r7, #16
 8004cf4:	46bd      	mov	sp, r7
 8004cf6:	bd80      	pop	{r7, pc}
 8004cf8:	80002000 	.word	0x80002000

08004cfc <I2C_RequestMemoryRead>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
                                               uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout,
                                               uint32_t Tickstart)
{
 8004cfc:	b580      	push	{r7, lr}
 8004cfe:	b086      	sub	sp, #24
 8004d00:	af02      	add	r7, sp, #8
 8004d02:	60f8      	str	r0, [r7, #12]
 8004d04:	4608      	mov	r0, r1
 8004d06:	4611      	mov	r1, r2
 8004d08:	461a      	mov	r2, r3
 8004d0a:	4603      	mov	r3, r0
 8004d0c:	817b      	strh	r3, [r7, #10]
 8004d0e:	460b      	mov	r3, r1
 8004d10:	813b      	strh	r3, [r7, #8]
 8004d12:	4613      	mov	r3, r2
 8004d14:	80fb      	strh	r3, [r7, #6]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8004d16:	88fb      	ldrh	r3, [r7, #6]
 8004d18:	b2da      	uxtb	r2, r3
 8004d1a:	8979      	ldrh	r1, [r7, #10]
 8004d1c:	4b20      	ldr	r3, [pc, #128]	; (8004da0 <I2C_RequestMemoryRead+0xa4>)
 8004d1e:	9300      	str	r3, [sp, #0]
 8004d20:	2300      	movs	r3, #0
 8004d22:	68f8      	ldr	r0, [r7, #12]
 8004d24:	f000 f9fe 	bl	8005124 <I2C_TransferConfig>

  /* Wait until TXIS flag is set */
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004d28:	69fa      	ldr	r2, [r7, #28]
 8004d2a:	69b9      	ldr	r1, [r7, #24]
 8004d2c:	68f8      	ldr	r0, [r7, #12]
 8004d2e:	f000 f89d 	bl	8004e6c <I2C_WaitOnTXISFlagUntilTimeout>
 8004d32:	4603      	mov	r3, r0
 8004d34:	2b00      	cmp	r3, #0
 8004d36:	d001      	beq.n	8004d3c <I2C_RequestMemoryRead+0x40>
  {
    return HAL_ERROR;
 8004d38:	2301      	movs	r3, #1
 8004d3a:	e02c      	b.n	8004d96 <I2C_RequestMemoryRead+0x9a>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004d3c:	88fb      	ldrh	r3, [r7, #6]
 8004d3e:	2b01      	cmp	r3, #1
 8004d40:	d105      	bne.n	8004d4e <I2C_RequestMemoryRead+0x52>
  {
    /* Send Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004d42:	893b      	ldrh	r3, [r7, #8]
 8004d44:	b2da      	uxtb	r2, r3
 8004d46:	68fb      	ldr	r3, [r7, #12]
 8004d48:	681b      	ldr	r3, [r3, #0]
 8004d4a:	629a      	str	r2, [r3, #40]	; 0x28
 8004d4c:	e015      	b.n	8004d7a <I2C_RequestMemoryRead+0x7e>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004d4e:	893b      	ldrh	r3, [r7, #8]
 8004d50:	0a1b      	lsrs	r3, r3, #8
 8004d52:	b29b      	uxth	r3, r3
 8004d54:	b2da      	uxtb	r2, r3
 8004d56:	68fb      	ldr	r3, [r7, #12]
 8004d58:	681b      	ldr	r3, [r3, #0]
 8004d5a:	629a      	str	r2, [r3, #40]	; 0x28

    /* Wait until TXIS flag is set */
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004d5c:	69fa      	ldr	r2, [r7, #28]
 8004d5e:	69b9      	ldr	r1, [r7, #24]
 8004d60:	68f8      	ldr	r0, [r7, #12]
 8004d62:	f000 f883 	bl	8004e6c <I2C_WaitOnTXISFlagUntilTimeout>
 8004d66:	4603      	mov	r3, r0
 8004d68:	2b00      	cmp	r3, #0
 8004d6a:	d001      	beq.n	8004d70 <I2C_RequestMemoryRead+0x74>
    {
      return HAL_ERROR;
 8004d6c:	2301      	movs	r3, #1
 8004d6e:	e012      	b.n	8004d96 <I2C_RequestMemoryRead+0x9a>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004d70:	893b      	ldrh	r3, [r7, #8]
 8004d72:	b2da      	uxtb	r2, r3
 8004d74:	68fb      	ldr	r3, [r7, #12]
 8004d76:	681b      	ldr	r3, [r3, #0]
 8004d78:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Wait until TC flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8004d7a:	69fb      	ldr	r3, [r7, #28]
 8004d7c:	9300      	str	r3, [sp, #0]
 8004d7e:	69bb      	ldr	r3, [r7, #24]
 8004d80:	2200      	movs	r2, #0
 8004d82:	2140      	movs	r1, #64	; 0x40
 8004d84:	68f8      	ldr	r0, [r7, #12]
 8004d86:	f000 f831 	bl	8004dec <I2C_WaitOnFlagUntilTimeout>
 8004d8a:	4603      	mov	r3, r0
 8004d8c:	2b00      	cmp	r3, #0
 8004d8e:	d001      	beq.n	8004d94 <I2C_RequestMemoryRead+0x98>
  {
    return HAL_ERROR;
 8004d90:	2301      	movs	r3, #1
 8004d92:	e000      	b.n	8004d96 <I2C_RequestMemoryRead+0x9a>
  }

  return HAL_OK;
 8004d94:	2300      	movs	r3, #0
}
 8004d96:	4618      	mov	r0, r3
 8004d98:	3710      	adds	r7, #16
 8004d9a:	46bd      	mov	sp, r7
 8004d9c:	bd80      	pop	{r7, pc}
 8004d9e:	bf00      	nop
 8004da0:	80002000 	.word	0x80002000

08004da4 <I2C_Flush_TXDR>:
  * @brief  I2C Tx data register flush process.
  * @param  hi2c I2C handle.
  * @retval None
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
 8004da4:	b480      	push	{r7}
 8004da6:	b083      	sub	sp, #12
 8004da8:	af00      	add	r7, sp, #0
 8004daa:	6078      	str	r0, [r7, #4]
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8004dac:	687b      	ldr	r3, [r7, #4]
 8004dae:	681b      	ldr	r3, [r3, #0]
 8004db0:	699b      	ldr	r3, [r3, #24]
 8004db2:	f003 0302 	and.w	r3, r3, #2
 8004db6:	2b02      	cmp	r3, #2
 8004db8:	d103      	bne.n	8004dc2 <I2C_Flush_TXDR+0x1e>
  {
    hi2c->Instance->TXDR = 0x00U;
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	681b      	ldr	r3, [r3, #0]
 8004dbe:	2200      	movs	r2, #0
 8004dc0:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004dc2:	687b      	ldr	r3, [r7, #4]
 8004dc4:	681b      	ldr	r3, [r3, #0]
 8004dc6:	699b      	ldr	r3, [r3, #24]
 8004dc8:	f003 0301 	and.w	r3, r3, #1
 8004dcc:	2b01      	cmp	r3, #1
 8004dce:	d007      	beq.n	8004de0 <I2C_Flush_TXDR+0x3c>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8004dd0:	687b      	ldr	r3, [r7, #4]
 8004dd2:	681b      	ldr	r3, [r3, #0]
 8004dd4:	699a      	ldr	r2, [r3, #24]
 8004dd6:	687b      	ldr	r3, [r7, #4]
 8004dd8:	681b      	ldr	r3, [r3, #0]
 8004dda:	f042 0201 	orr.w	r2, r2, #1
 8004dde:	619a      	str	r2, [r3, #24]
  }
}
 8004de0:	bf00      	nop
 8004de2:	370c      	adds	r7, #12
 8004de4:	46bd      	mov	sp, r7
 8004de6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dea:	4770      	bx	lr

08004dec <I2C_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 8004dec:	b580      	push	{r7, lr}
 8004dee:	b084      	sub	sp, #16
 8004df0:	af00      	add	r7, sp, #0
 8004df2:	60f8      	str	r0, [r7, #12]
 8004df4:	60b9      	str	r1, [r7, #8]
 8004df6:	603b      	str	r3, [r7, #0]
 8004df8:	4613      	mov	r3, r2
 8004dfa:	71fb      	strb	r3, [r7, #7]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004dfc:	e022      	b.n	8004e44 <I2C_WaitOnFlagUntilTimeout+0x58>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004dfe:	683b      	ldr	r3, [r7, #0]
 8004e00:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004e04:	d01e      	beq.n	8004e44 <I2C_WaitOnFlagUntilTimeout+0x58>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004e06:	f7fe fab5 	bl	8003374 <HAL_GetTick>
 8004e0a:	4602      	mov	r2, r0
 8004e0c:	69bb      	ldr	r3, [r7, #24]
 8004e0e:	1ad3      	subs	r3, r2, r3
 8004e10:	683a      	ldr	r2, [r7, #0]
 8004e12:	429a      	cmp	r2, r3
 8004e14:	d302      	bcc.n	8004e1c <I2C_WaitOnFlagUntilTimeout+0x30>
 8004e16:	683b      	ldr	r3, [r7, #0]
 8004e18:	2b00      	cmp	r3, #0
 8004e1a:	d113      	bne.n	8004e44 <I2C_WaitOnFlagUntilTimeout+0x58>
      {
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004e1c:	68fb      	ldr	r3, [r7, #12]
 8004e1e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004e20:	f043 0220 	orr.w	r2, r3, #32
 8004e24:	68fb      	ldr	r3, [r7, #12]
 8004e26:	645a      	str	r2, [r3, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8004e28:	68fb      	ldr	r3, [r7, #12]
 8004e2a:	2220      	movs	r2, #32
 8004e2c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8004e30:	68fb      	ldr	r3, [r7, #12]
 8004e32:	2200      	movs	r2, #0
 8004e34:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004e38:	68fb      	ldr	r3, [r7, #12]
 8004e3a:	2200      	movs	r2, #0
 8004e3c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
        return HAL_ERROR;
 8004e40:	2301      	movs	r3, #1
 8004e42:	e00f      	b.n	8004e64 <I2C_WaitOnFlagUntilTimeout+0x78>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004e44:	68fb      	ldr	r3, [r7, #12]
 8004e46:	681b      	ldr	r3, [r3, #0]
 8004e48:	699a      	ldr	r2, [r3, #24]
 8004e4a:	68bb      	ldr	r3, [r7, #8]
 8004e4c:	4013      	ands	r3, r2
 8004e4e:	68ba      	ldr	r2, [r7, #8]
 8004e50:	429a      	cmp	r2, r3
 8004e52:	bf0c      	ite	eq
 8004e54:	2301      	moveq	r3, #1
 8004e56:	2300      	movne	r3, #0
 8004e58:	b2db      	uxtb	r3, r3
 8004e5a:	461a      	mov	r2, r3
 8004e5c:	79fb      	ldrb	r3, [r7, #7]
 8004e5e:	429a      	cmp	r2, r3
 8004e60:	d0cd      	beq.n	8004dfe <I2C_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8004e62:	2300      	movs	r3, #0
}
 8004e64:	4618      	mov	r0, r3
 8004e66:	3710      	adds	r7, #16
 8004e68:	46bd      	mov	sp, r7
 8004e6a:	bd80      	pop	{r7, pc}

08004e6c <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 8004e6c:	b580      	push	{r7, lr}
 8004e6e:	b084      	sub	sp, #16
 8004e70:	af00      	add	r7, sp, #0
 8004e72:	60f8      	str	r0, [r7, #12]
 8004e74:	60b9      	str	r1, [r7, #8]
 8004e76:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8004e78:	e02c      	b.n	8004ed4 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004e7a:	687a      	ldr	r2, [r7, #4]
 8004e7c:	68b9      	ldr	r1, [r7, #8]
 8004e7e:	68f8      	ldr	r0, [r7, #12]
 8004e80:	f000 f870 	bl	8004f64 <I2C_IsErrorOccurred>
 8004e84:	4603      	mov	r3, r0
 8004e86:	2b00      	cmp	r3, #0
 8004e88:	d001      	beq.n	8004e8e <I2C_WaitOnTXISFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 8004e8a:	2301      	movs	r3, #1
 8004e8c:	e02a      	b.n	8004ee4 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004e8e:	68bb      	ldr	r3, [r7, #8]
 8004e90:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004e94:	d01e      	beq.n	8004ed4 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004e96:	f7fe fa6d 	bl	8003374 <HAL_GetTick>
 8004e9a:	4602      	mov	r2, r0
 8004e9c:	687b      	ldr	r3, [r7, #4]
 8004e9e:	1ad3      	subs	r3, r2, r3
 8004ea0:	68ba      	ldr	r2, [r7, #8]
 8004ea2:	429a      	cmp	r2, r3
 8004ea4:	d302      	bcc.n	8004eac <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8004ea6:	68bb      	ldr	r3, [r7, #8]
 8004ea8:	2b00      	cmp	r3, #0
 8004eaa:	d113      	bne.n	8004ed4 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
      {
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004eac:	68fb      	ldr	r3, [r7, #12]
 8004eae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004eb0:	f043 0220 	orr.w	r2, r3, #32
 8004eb4:	68fb      	ldr	r3, [r7, #12]
 8004eb6:	645a      	str	r2, [r3, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8004eb8:	68fb      	ldr	r3, [r7, #12]
 8004eba:	2220      	movs	r2, #32
 8004ebc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8004ec0:	68fb      	ldr	r3, [r7, #12]
 8004ec2:	2200      	movs	r2, #0
 8004ec4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004ec8:	68fb      	ldr	r3, [r7, #12]
 8004eca:	2200      	movs	r2, #0
 8004ecc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

        return HAL_ERROR;
 8004ed0:	2301      	movs	r3, #1
 8004ed2:	e007      	b.n	8004ee4 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8004ed4:	68fb      	ldr	r3, [r7, #12]
 8004ed6:	681b      	ldr	r3, [r3, #0]
 8004ed8:	699b      	ldr	r3, [r3, #24]
 8004eda:	f003 0302 	and.w	r3, r3, #2
 8004ede:	2b02      	cmp	r3, #2
 8004ee0:	d1cb      	bne.n	8004e7a <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8004ee2:	2300      	movs	r3, #0
}
 8004ee4:	4618      	mov	r0, r3
 8004ee6:	3710      	adds	r7, #16
 8004ee8:	46bd      	mov	sp, r7
 8004eea:	bd80      	pop	{r7, pc}

08004eec <I2C_WaitOnSTOPFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 8004eec:	b580      	push	{r7, lr}
 8004eee:	b084      	sub	sp, #16
 8004ef0:	af00      	add	r7, sp, #0
 8004ef2:	60f8      	str	r0, [r7, #12]
 8004ef4:	60b9      	str	r1, [r7, #8]
 8004ef6:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004ef8:	e028      	b.n	8004f4c <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004efa:	687a      	ldr	r2, [r7, #4]
 8004efc:	68b9      	ldr	r1, [r7, #8]
 8004efe:	68f8      	ldr	r0, [r7, #12]
 8004f00:	f000 f830 	bl	8004f64 <I2C_IsErrorOccurred>
 8004f04:	4603      	mov	r3, r0
 8004f06:	2b00      	cmp	r3, #0
 8004f08:	d001      	beq.n	8004f0e <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 8004f0a:	2301      	movs	r3, #1
 8004f0c:	e026      	b.n	8004f5c <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f0e:	f7fe fa31 	bl	8003374 <HAL_GetTick>
 8004f12:	4602      	mov	r2, r0
 8004f14:	687b      	ldr	r3, [r7, #4]
 8004f16:	1ad3      	subs	r3, r2, r3
 8004f18:	68ba      	ldr	r2, [r7, #8]
 8004f1a:	429a      	cmp	r2, r3
 8004f1c:	d302      	bcc.n	8004f24 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8004f1e:	68bb      	ldr	r3, [r7, #8]
 8004f20:	2b00      	cmp	r3, #0
 8004f22:	d113      	bne.n	8004f4c <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
    {
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004f24:	68fb      	ldr	r3, [r7, #12]
 8004f26:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004f28:	f043 0220 	orr.w	r2, r3, #32
 8004f2c:	68fb      	ldr	r3, [r7, #12]
 8004f2e:	645a      	str	r2, [r3, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 8004f30:	68fb      	ldr	r3, [r7, #12]
 8004f32:	2220      	movs	r2, #32
 8004f34:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8004f38:	68fb      	ldr	r3, [r7, #12]
 8004f3a:	2200      	movs	r2, #0
 8004f3c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8004f40:	68fb      	ldr	r3, [r7, #12]
 8004f42:	2200      	movs	r2, #0
 8004f44:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

      return HAL_ERROR;
 8004f48:	2301      	movs	r3, #1
 8004f4a:	e007      	b.n	8004f5c <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004f4c:	68fb      	ldr	r3, [r7, #12]
 8004f4e:	681b      	ldr	r3, [r3, #0]
 8004f50:	699b      	ldr	r3, [r3, #24]
 8004f52:	f003 0320 	and.w	r3, r3, #32
 8004f56:	2b20      	cmp	r3, #32
 8004f58:	d1cf      	bne.n	8004efa <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
    }
  }
  return HAL_OK;
 8004f5a:	2300      	movs	r3, #0
}
 8004f5c:	4618      	mov	r0, r3
 8004f5e:	3710      	adds	r7, #16
 8004f60:	46bd      	mov	sp, r7
 8004f62:	bd80      	pop	{r7, pc}

08004f64 <I2C_IsErrorOccurred>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsErrorOccurred(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004f64:	b580      	push	{r7, lr}
 8004f66:	b08a      	sub	sp, #40	; 0x28
 8004f68:	af00      	add	r7, sp, #0
 8004f6a:	60f8      	str	r0, [r7, #12]
 8004f6c:	60b9      	str	r1, [r7, #8]
 8004f6e:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8004f70:	2300      	movs	r3, #0
 8004f72:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  uint32_t itflag   = hi2c->Instance->ISR;
 8004f76:	68fb      	ldr	r3, [r7, #12]
 8004f78:	681b      	ldr	r3, [r3, #0]
 8004f7a:	699b      	ldr	r3, [r3, #24]
 8004f7c:	61bb      	str	r3, [r7, #24]
  uint32_t error_code = 0;
 8004f7e:	2300      	movs	r3, #0
 8004f80:	623b      	str	r3, [r7, #32]
  uint32_t tickstart = Tickstart;
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	61fb      	str	r3, [r7, #28]
  uint32_t tmp1;
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004f86:	69bb      	ldr	r3, [r7, #24]
 8004f88:	f003 0310 	and.w	r3, r3, #16
 8004f8c:	2b00      	cmp	r3, #0
 8004f8e:	d068      	beq.n	8005062 <I2C_IsErrorOccurred+0xfe>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004f90:	68fb      	ldr	r3, [r7, #12]
 8004f92:	681b      	ldr	r3, [r3, #0]
 8004f94:	2210      	movs	r2, #16
 8004f96:	61da      	str	r2, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8004f98:	e049      	b.n	800502e <I2C_IsErrorOccurred+0xca>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
 8004f9a:	68bb      	ldr	r3, [r7, #8]
 8004f9c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004fa0:	d045      	beq.n	800502e <I2C_IsErrorOccurred+0xca>
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8004fa2:	f7fe f9e7 	bl	8003374 <HAL_GetTick>
 8004fa6:	4602      	mov	r2, r0
 8004fa8:	69fb      	ldr	r3, [r7, #28]
 8004faa:	1ad3      	subs	r3, r2, r3
 8004fac:	68ba      	ldr	r2, [r7, #8]
 8004fae:	429a      	cmp	r2, r3
 8004fb0:	d302      	bcc.n	8004fb8 <I2C_IsErrorOccurred+0x54>
 8004fb2:	68bb      	ldr	r3, [r7, #8]
 8004fb4:	2b00      	cmp	r3, #0
 8004fb6:	d13a      	bne.n	800502e <I2C_IsErrorOccurred+0xca>
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8004fb8:	68fb      	ldr	r3, [r7, #12]
 8004fba:	681b      	ldr	r3, [r3, #0]
 8004fbc:	685b      	ldr	r3, [r3, #4]
 8004fbe:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004fc2:	617b      	str	r3, [r7, #20]
          tmp2 = hi2c->Mode;
 8004fc4:	68fb      	ldr	r3, [r7, #12]
 8004fc6:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8004fca:	74fb      	strb	r3, [r7, #19]

          /* In case of I2C still busy, try to regenerate a STOP manually */
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004fcc:	68fb      	ldr	r3, [r7, #12]
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	699b      	ldr	r3, [r3, #24]
 8004fd2:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8004fd6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004fda:	d121      	bne.n	8005020 <I2C_IsErrorOccurred+0xbc>
 8004fdc:	697b      	ldr	r3, [r7, #20]
 8004fde:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8004fe2:	d01d      	beq.n	8005020 <I2C_IsErrorOccurred+0xbc>
              (tmp1 != I2C_CR2_STOP) && \
 8004fe4:	7cfb      	ldrb	r3, [r7, #19]
 8004fe6:	2b20      	cmp	r3, #32
 8004fe8:	d01a      	beq.n	8005020 <I2C_IsErrorOccurred+0xbc>
              (tmp2 != HAL_I2C_MODE_SLAVE))
          {
            /* Generate Stop */
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8004fea:	68fb      	ldr	r3, [r7, #12]
 8004fec:	681b      	ldr	r3, [r3, #0]
 8004fee:	685a      	ldr	r2, [r3, #4]
 8004ff0:	68fb      	ldr	r3, [r7, #12]
 8004ff2:	681b      	ldr	r3, [r3, #0]
 8004ff4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004ff8:	605a      	str	r2, [r3, #4]

            /* Update Tick with new reference */
            tickstart = HAL_GetTick();
 8004ffa:	f7fe f9bb 	bl	8003374 <HAL_GetTick>
 8004ffe:	61f8      	str	r0, [r7, #28]
          }

          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8005000:	e00e      	b.n	8005020 <I2C_IsErrorOccurred+0xbc>
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8005002:	f7fe f9b7 	bl	8003374 <HAL_GetTick>
 8005006:	4602      	mov	r2, r0
 8005008:	69fb      	ldr	r3, [r7, #28]
 800500a:	1ad3      	subs	r3, r2, r3
 800500c:	2b19      	cmp	r3, #25
 800500e:	d907      	bls.n	8005020 <I2C_IsErrorOccurred+0xbc>
            {
              error_code |=HAL_I2C_ERROR_TIMEOUT;
 8005010:	6a3b      	ldr	r3, [r7, #32]
 8005012:	f043 0320 	orr.w	r3, r3, #32
 8005016:	623b      	str	r3, [r7, #32]

              status = HAL_ERROR;
 8005018:	2301      	movs	r3, #1
 800501a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

              break;
 800501e:	e006      	b.n	800502e <I2C_IsErrorOccurred+0xca>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8005020:	68fb      	ldr	r3, [r7, #12]
 8005022:	681b      	ldr	r3, [r3, #0]
 8005024:	699b      	ldr	r3, [r3, #24]
 8005026:	f003 0320 	and.w	r3, r3, #32
 800502a:	2b20      	cmp	r3, #32
 800502c:	d1e9      	bne.n	8005002 <I2C_IsErrorOccurred+0x9e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 800502e:	68fb      	ldr	r3, [r7, #12]
 8005030:	681b      	ldr	r3, [r3, #0]
 8005032:	699b      	ldr	r3, [r3, #24]
 8005034:	f003 0320 	and.w	r3, r3, #32
 8005038:	2b20      	cmp	r3, #32
 800503a:	d003      	beq.n	8005044 <I2C_IsErrorOccurred+0xe0>
 800503c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8005040:	2b00      	cmp	r3, #0
 8005042:	d0aa      	beq.n	8004f9a <I2C_IsErrorOccurred+0x36>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
 8005044:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8005048:	2b00      	cmp	r3, #0
 800504a:	d103      	bne.n	8005054 <I2C_IsErrorOccurred+0xf0>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800504c:	68fb      	ldr	r3, [r7, #12]
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	2220      	movs	r2, #32
 8005052:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
 8005054:	6a3b      	ldr	r3, [r7, #32]
 8005056:	f043 0304 	orr.w	r3, r3, #4
 800505a:	623b      	str	r3, [r7, #32]

    status = HAL_ERROR;
 800505c:	2301      	movs	r3, #1
 800505e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
 8005062:	68fb      	ldr	r3, [r7, #12]
 8005064:	681b      	ldr	r3, [r3, #0]
 8005066:	699b      	ldr	r3, [r3, #24]
 8005068:	61bb      	str	r3, [r7, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 800506a:	69bb      	ldr	r3, [r7, #24]
 800506c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005070:	2b00      	cmp	r3, #0
 8005072:	d00b      	beq.n	800508c <I2C_IsErrorOccurred+0x128>
  {
    error_code |= HAL_I2C_ERROR_BERR;
 8005074:	6a3b      	ldr	r3, [r7, #32]
 8005076:	f043 0301 	orr.w	r3, r3, #1
 800507a:	623b      	str	r3, [r7, #32]

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 800507c:	68fb      	ldr	r3, [r7, #12]
 800507e:	681b      	ldr	r3, [r3, #0]
 8005080:	f44f 7280 	mov.w	r2, #256	; 0x100
 8005084:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 8005086:	2301      	movs	r3, #1
 8005088:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 800508c:	69bb      	ldr	r3, [r7, #24]
 800508e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005092:	2b00      	cmp	r3, #0
 8005094:	d00b      	beq.n	80050ae <I2C_IsErrorOccurred+0x14a>
  {
    error_code |= HAL_I2C_ERROR_OVR;
 8005096:	6a3b      	ldr	r3, [r7, #32]
 8005098:	f043 0308 	orr.w	r3, r3, #8
 800509c:	623b      	str	r3, [r7, #32]

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 800509e:	68fb      	ldr	r3, [r7, #12]
 80050a0:	681b      	ldr	r3, [r3, #0]
 80050a2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80050a6:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 80050a8:	2301      	movs	r3, #1
 80050aa:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 80050ae:	69bb      	ldr	r3, [r7, #24]
 80050b0:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80050b4:	2b00      	cmp	r3, #0
 80050b6:	d00b      	beq.n	80050d0 <I2C_IsErrorOccurred+0x16c>
  {
    error_code |= HAL_I2C_ERROR_ARLO;
 80050b8:	6a3b      	ldr	r3, [r7, #32]
 80050ba:	f043 0302 	orr.w	r3, r3, #2
 80050be:	623b      	str	r3, [r7, #32]

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 80050c0:	68fb      	ldr	r3, [r7, #12]
 80050c2:	681b      	ldr	r3, [r3, #0]
 80050c4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80050c8:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 80050ca:	2301      	movs	r3, #1
 80050cc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  if (status != HAL_OK)
 80050d0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80050d4:	2b00      	cmp	r3, #0
 80050d6:	d01c      	beq.n	8005112 <I2C_IsErrorOccurred+0x1ae>
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);
 80050d8:	68f8      	ldr	r0, [r7, #12]
 80050da:	f7ff fe63 	bl	8004da4 <I2C_Flush_TXDR>

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 80050de:	68fb      	ldr	r3, [r7, #12]
 80050e0:	681b      	ldr	r3, [r3, #0]
 80050e2:	6859      	ldr	r1, [r3, #4]
 80050e4:	68fb      	ldr	r3, [r7, #12]
 80050e6:	681a      	ldr	r2, [r3, #0]
 80050e8:	4b0d      	ldr	r3, [pc, #52]	; (8005120 <I2C_IsErrorOccurred+0x1bc>)
 80050ea:	400b      	ands	r3, r1
 80050ec:	6053      	str	r3, [r2, #4]

    hi2c->ErrorCode |= error_code;
 80050ee:	68fb      	ldr	r3, [r7, #12]
 80050f0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80050f2:	6a3b      	ldr	r3, [r7, #32]
 80050f4:	431a      	orrs	r2, r3
 80050f6:	68fb      	ldr	r3, [r7, #12]
 80050f8:	645a      	str	r2, [r3, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 80050fa:	68fb      	ldr	r3, [r7, #12]
 80050fc:	2220      	movs	r2, #32
 80050fe:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005102:	68fb      	ldr	r3, [r7, #12]
 8005104:	2200      	movs	r2, #0
 8005106:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800510a:	68fb      	ldr	r3, [r7, #12]
 800510c:	2200      	movs	r2, #0
 800510e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
  }

  return status;
 8005112:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
}
 8005116:	4618      	mov	r0, r3
 8005118:	3728      	adds	r7, #40	; 0x28
 800511a:	46bd      	mov	sp, r7
 800511c:	bd80      	pop	{r7, pc}
 800511e:	bf00      	nop
 8005120:	fe00e800 	.word	0xfe00e800

08005124 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8005124:	b480      	push	{r7}
 8005126:	b087      	sub	sp, #28
 8005128:	af00      	add	r7, sp, #0
 800512a:	60f8      	str	r0, [r7, #12]
 800512c:	607b      	str	r3, [r7, #4]
 800512e:	460b      	mov	r3, r1
 8005130:	817b      	strh	r3, [r7, #10]
 8005132:	4613      	mov	r3, r2
 8005134:	727b      	strb	r3, [r7, #9]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005136:	897b      	ldrh	r3, [r7, #10]
 8005138:	f3c3 0209 	ubfx	r2, r3, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 800513c:	7a7b      	ldrb	r3, [r7, #9]
 800513e:	041b      	lsls	r3, r3, #16
 8005140:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005144:	431a      	orrs	r2, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	431a      	orrs	r2, r3
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800514a:	6a3b      	ldr	r3, [r7, #32]
 800514c:	4313      	orrs	r3, r2
 800514e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8005152:	617b      	str	r3, [r7, #20]
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8005154:	68fb      	ldr	r3, [r7, #12]
 8005156:	681b      	ldr	r3, [r3, #0]
 8005158:	685a      	ldr	r2, [r3, #4]
 800515a:	6a3b      	ldr	r3, [r7, #32]
 800515c:	0d5b      	lsrs	r3, r3, #21
 800515e:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 8005162:	4b08      	ldr	r3, [pc, #32]	; (8005184 <I2C_TransferConfig+0x60>)
 8005164:	430b      	orrs	r3, r1
 8005166:	43db      	mvns	r3, r3
 8005168:	ea02 0103 	and.w	r1, r2, r3
 800516c:	68fb      	ldr	r3, [r7, #12]
 800516e:	681b      	ldr	r3, [r3, #0]
 8005170:	697a      	ldr	r2, [r7, #20]
 8005172:	430a      	orrs	r2, r1
 8005174:	605a      	str	r2, [r3, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8005176:	bf00      	nop
 8005178:	371c      	adds	r7, #28
 800517a:	46bd      	mov	sp, r7
 800517c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005180:	4770      	bx	lr
 8005182:	bf00      	nop
 8005184:	03ff63ff 	.word	0x03ff63ff

08005188 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005188:	b480      	push	{r7}
 800518a:	b083      	sub	sp, #12
 800518c:	af00      	add	r7, sp, #0
 800518e:	6078      	str	r0, [r7, #4]
 8005190:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8005198:	b2db      	uxtb	r3, r3
 800519a:	2b20      	cmp	r3, #32
 800519c:	d138      	bne.n	8005210 <HAL_I2CEx_ConfigAnalogFilter+0x88>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 800519e:	687b      	ldr	r3, [r7, #4]
 80051a0:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80051a4:	2b01      	cmp	r3, #1
 80051a6:	d101      	bne.n	80051ac <HAL_I2CEx_ConfigAnalogFilter+0x24>
 80051a8:	2302      	movs	r3, #2
 80051aa:	e032      	b.n	8005212 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80051ac:	687b      	ldr	r3, [r7, #4]
 80051ae:	2201      	movs	r2, #1
 80051b0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 80051b4:	687b      	ldr	r3, [r7, #4]
 80051b6:	2224      	movs	r2, #36	; 0x24
 80051b8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80051bc:	687b      	ldr	r3, [r7, #4]
 80051be:	681b      	ldr	r3, [r3, #0]
 80051c0:	681a      	ldr	r2, [r3, #0]
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	681b      	ldr	r3, [r3, #0]
 80051c6:	f022 0201 	bic.w	r2, r2, #1
 80051ca:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	681b      	ldr	r3, [r3, #0]
 80051d0:	681a      	ldr	r2, [r3, #0]
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	681b      	ldr	r3, [r3, #0]
 80051d6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80051da:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	681b      	ldr	r3, [r3, #0]
 80051e0:	6819      	ldr	r1, [r3, #0]
 80051e2:	687b      	ldr	r3, [r7, #4]
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	683a      	ldr	r2, [r7, #0]
 80051e8:	430a      	orrs	r2, r1
 80051ea:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	681b      	ldr	r3, [r3, #0]
 80051f0:	681a      	ldr	r2, [r3, #0]
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	681b      	ldr	r3, [r3, #0]
 80051f6:	f042 0201 	orr.w	r2, r2, #1
 80051fa:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80051fc:	687b      	ldr	r3, [r7, #4]
 80051fe:	2220      	movs	r2, #32
 8005200:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	2200      	movs	r2, #0
 8005208:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 800520c:	2300      	movs	r3, #0
 800520e:	e000      	b.n	8005212 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
  }
  else
  {
    return HAL_BUSY;
 8005210:	2302      	movs	r3, #2
  }
}
 8005212:	4618      	mov	r0, r3
 8005214:	370c      	adds	r7, #12
 8005216:	46bd      	mov	sp, r7
 8005218:	f85d 7b04 	ldr.w	r7, [sp], #4
 800521c:	4770      	bx	lr

0800521e <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800521e:	b480      	push	{r7}
 8005220:	b085      	sub	sp, #20
 8005222:	af00      	add	r7, sp, #0
 8005224:	6078      	str	r0, [r7, #4]
 8005226:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005228:	687b      	ldr	r3, [r7, #4]
 800522a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800522e:	b2db      	uxtb	r3, r3
 8005230:	2b20      	cmp	r3, #32
 8005232:	d139      	bne.n	80052a8 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005234:	687b      	ldr	r3, [r7, #4]
 8005236:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800523a:	2b01      	cmp	r3, #1
 800523c:	d101      	bne.n	8005242 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 800523e:	2302      	movs	r3, #2
 8005240:	e033      	b.n	80052aa <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8005242:	687b      	ldr	r3, [r7, #4]
 8005244:	2201      	movs	r2, #1
 8005246:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 800524a:	687b      	ldr	r3, [r7, #4]
 800524c:	2224      	movs	r2, #36	; 0x24
 800524e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005252:	687b      	ldr	r3, [r7, #4]
 8005254:	681b      	ldr	r3, [r3, #0]
 8005256:	681a      	ldr	r2, [r3, #0]
 8005258:	687b      	ldr	r3, [r7, #4]
 800525a:	681b      	ldr	r3, [r3, #0]
 800525c:	f022 0201 	bic.w	r2, r2, #1
 8005260:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8005262:	687b      	ldr	r3, [r7, #4]
 8005264:	681b      	ldr	r3, [r3, #0]
 8005266:	681b      	ldr	r3, [r3, #0]
 8005268:	60fb      	str	r3, [r7, #12]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 800526a:	68fb      	ldr	r3, [r7, #12]
 800526c:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8005270:	60fb      	str	r3, [r7, #12]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8005272:	683b      	ldr	r3, [r7, #0]
 8005274:	021b      	lsls	r3, r3, #8
 8005276:	68fa      	ldr	r2, [r7, #12]
 8005278:	4313      	orrs	r3, r2
 800527a:	60fb      	str	r3, [r7, #12]

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 800527c:	687b      	ldr	r3, [r7, #4]
 800527e:	681b      	ldr	r3, [r3, #0]
 8005280:	68fa      	ldr	r2, [r7, #12]
 8005282:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	681b      	ldr	r3, [r3, #0]
 8005288:	681a      	ldr	r2, [r3, #0]
 800528a:	687b      	ldr	r3, [r7, #4]
 800528c:	681b      	ldr	r3, [r3, #0]
 800528e:	f042 0201 	orr.w	r2, r2, #1
 8005292:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005294:	687b      	ldr	r3, [r7, #4]
 8005296:	2220      	movs	r2, #32
 8005298:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800529c:	687b      	ldr	r3, [r7, #4]
 800529e:	2200      	movs	r2, #0
 80052a0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 80052a4:	2300      	movs	r3, #0
 80052a6:	e000      	b.n	80052aa <HAL_I2CEx_ConfigDigitalFilter+0x8c>
  }
  else
  {
    return HAL_BUSY;
 80052a8:	2302      	movs	r3, #2
  }
}
 80052aa:	4618      	mov	r0, r3
 80052ac:	3714      	adds	r7, #20
 80052ae:	46bd      	mov	sp, r7
 80052b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052b4:	4770      	bx	lr
	...

080052b8 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 80052b8:	b580      	push	{r7, lr}
 80052ba:	b082      	sub	sp, #8
 80052bc:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0;
 80052be:	2300      	movs	r3, #0
 80052c0:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 80052c2:	4b23      	ldr	r3, [pc, #140]	; (8005350 <HAL_PWREx_EnableOverDrive+0x98>)
 80052c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80052c6:	4a22      	ldr	r2, [pc, #136]	; (8005350 <HAL_PWREx_EnableOverDrive+0x98>)
 80052c8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80052cc:	6413      	str	r3, [r2, #64]	; 0x40
 80052ce:	4b20      	ldr	r3, [pc, #128]	; (8005350 <HAL_PWREx_EnableOverDrive+0x98>)
 80052d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80052d2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80052d6:	603b      	str	r3, [r7, #0]
 80052d8:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 80052da:	4b1e      	ldr	r3, [pc, #120]	; (8005354 <HAL_PWREx_EnableOverDrive+0x9c>)
 80052dc:	681b      	ldr	r3, [r3, #0]
 80052de:	4a1d      	ldr	r2, [pc, #116]	; (8005354 <HAL_PWREx_EnableOverDrive+0x9c>)
 80052e0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80052e4:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80052e6:	f7fe f845 	bl	8003374 <HAL_GetTick>
 80052ea:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80052ec:	e009      	b.n	8005302 <HAL_PWREx_EnableOverDrive+0x4a>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80052ee:	f7fe f841 	bl	8003374 <HAL_GetTick>
 80052f2:	4602      	mov	r2, r0
 80052f4:	687b      	ldr	r3, [r7, #4]
 80052f6:	1ad3      	subs	r3, r2, r3
 80052f8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80052fc:	d901      	bls.n	8005302 <HAL_PWREx_EnableOverDrive+0x4a>
    {
      return HAL_TIMEOUT;
 80052fe:	2303      	movs	r3, #3
 8005300:	e022      	b.n	8005348 <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005302:	4b14      	ldr	r3, [pc, #80]	; (8005354 <HAL_PWREx_EnableOverDrive+0x9c>)
 8005304:	685b      	ldr	r3, [r3, #4]
 8005306:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800530a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800530e:	d1ee      	bne.n	80052ee <HAL_PWREx_EnableOverDrive+0x36>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005310:	4b10      	ldr	r3, [pc, #64]	; (8005354 <HAL_PWREx_EnableOverDrive+0x9c>)
 8005312:	681b      	ldr	r3, [r3, #0]
 8005314:	4a0f      	ldr	r2, [pc, #60]	; (8005354 <HAL_PWREx_EnableOverDrive+0x9c>)
 8005316:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800531a:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 800531c:	f7fe f82a 	bl	8003374 <HAL_GetTick>
 8005320:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005322:	e009      	b.n	8005338 <HAL_PWREx_EnableOverDrive+0x80>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005324:	f7fe f826 	bl	8003374 <HAL_GetTick>
 8005328:	4602      	mov	r2, r0
 800532a:	687b      	ldr	r3, [r7, #4]
 800532c:	1ad3      	subs	r3, r2, r3
 800532e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005332:	d901      	bls.n	8005338 <HAL_PWREx_EnableOverDrive+0x80>
    {
      return HAL_TIMEOUT;
 8005334:	2303      	movs	r3, #3
 8005336:	e007      	b.n	8005348 <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005338:	4b06      	ldr	r3, [pc, #24]	; (8005354 <HAL_PWREx_EnableOverDrive+0x9c>)
 800533a:	685b      	ldr	r3, [r3, #4]
 800533c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005340:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8005344:	d1ee      	bne.n	8005324 <HAL_PWREx_EnableOverDrive+0x6c>
    }
  } 
  return HAL_OK;
 8005346:	2300      	movs	r3, #0
}
 8005348:	4618      	mov	r0, r3
 800534a:	3708      	adds	r7, #8
 800534c:	46bd      	mov	sp, r7
 800534e:	bd80      	pop	{r7, pc}
 8005350:	40023800 	.word	0x40023800
 8005354:	40007000 	.word	0x40007000

08005358 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005358:	b580      	push	{r7, lr}
 800535a:	b086      	sub	sp, #24
 800535c:	af00      	add	r7, sp, #0
 800535e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;
 8005360:	2300      	movs	r3, #0
 8005362:	75fb      	strb	r3, [r7, #23]

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005364:	687b      	ldr	r3, [r7, #4]
 8005366:	2b00      	cmp	r3, #0
 8005368:	d101      	bne.n	800536e <HAL_RCC_OscConfig+0x16>
  {
    return HAL_ERROR;
 800536a:	2301      	movs	r3, #1
 800536c:	e291      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800536e:	687b      	ldr	r3, [r7, #4]
 8005370:	681b      	ldr	r3, [r3, #0]
 8005372:	f003 0301 	and.w	r3, r3, #1
 8005376:	2b00      	cmp	r3, #0
 8005378:	f000 8087 	beq.w	800548a <HAL_RCC_OscConfig+0x132>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 800537c:	4b96      	ldr	r3, [pc, #600]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 800537e:	689b      	ldr	r3, [r3, #8]
 8005380:	f003 030c 	and.w	r3, r3, #12
 8005384:	2b04      	cmp	r3, #4
 8005386:	d00c      	beq.n	80053a2 <HAL_RCC_OscConfig+0x4a>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005388:	4b93      	ldr	r3, [pc, #588]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 800538a:	689b      	ldr	r3, [r3, #8]
 800538c:	f003 030c 	and.w	r3, r3, #12
 8005390:	2b08      	cmp	r3, #8
 8005392:	d112      	bne.n	80053ba <HAL_RCC_OscConfig+0x62>
 8005394:	4b90      	ldr	r3, [pc, #576]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 8005396:	685b      	ldr	r3, [r3, #4]
 8005398:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800539c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80053a0:	d10b      	bne.n	80053ba <HAL_RCC_OscConfig+0x62>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80053a2:	4b8d      	ldr	r3, [pc, #564]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80053a4:	681b      	ldr	r3, [r3, #0]
 80053a6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80053aa:	2b00      	cmp	r3, #0
 80053ac:	d06c      	beq.n	8005488 <HAL_RCC_OscConfig+0x130>
 80053ae:	687b      	ldr	r3, [r7, #4]
 80053b0:	685b      	ldr	r3, [r3, #4]
 80053b2:	2b00      	cmp	r3, #0
 80053b4:	d168      	bne.n	8005488 <HAL_RCC_OscConfig+0x130>
      {
        return HAL_ERROR;
 80053b6:	2301      	movs	r3, #1
 80053b8:	e26b      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	685b      	ldr	r3, [r3, #4]
 80053be:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80053c2:	d106      	bne.n	80053d2 <HAL_RCC_OscConfig+0x7a>
 80053c4:	4b84      	ldr	r3, [pc, #528]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80053c6:	681b      	ldr	r3, [r3, #0]
 80053c8:	4a83      	ldr	r2, [pc, #524]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80053ca:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80053ce:	6013      	str	r3, [r2, #0]
 80053d0:	e02e      	b.n	8005430 <HAL_RCC_OscConfig+0xd8>
 80053d2:	687b      	ldr	r3, [r7, #4]
 80053d4:	685b      	ldr	r3, [r3, #4]
 80053d6:	2b00      	cmp	r3, #0
 80053d8:	d10c      	bne.n	80053f4 <HAL_RCC_OscConfig+0x9c>
 80053da:	4b7f      	ldr	r3, [pc, #508]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80053dc:	681b      	ldr	r3, [r3, #0]
 80053de:	4a7e      	ldr	r2, [pc, #504]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80053e0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80053e4:	6013      	str	r3, [r2, #0]
 80053e6:	4b7c      	ldr	r3, [pc, #496]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80053e8:	681b      	ldr	r3, [r3, #0]
 80053ea:	4a7b      	ldr	r2, [pc, #492]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80053ec:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80053f0:	6013      	str	r3, [r2, #0]
 80053f2:	e01d      	b.n	8005430 <HAL_RCC_OscConfig+0xd8>
 80053f4:	687b      	ldr	r3, [r7, #4]
 80053f6:	685b      	ldr	r3, [r3, #4]
 80053f8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80053fc:	d10c      	bne.n	8005418 <HAL_RCC_OscConfig+0xc0>
 80053fe:	4b76      	ldr	r3, [pc, #472]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 8005400:	681b      	ldr	r3, [r3, #0]
 8005402:	4a75      	ldr	r2, [pc, #468]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 8005404:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005408:	6013      	str	r3, [r2, #0]
 800540a:	4b73      	ldr	r3, [pc, #460]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 800540c:	681b      	ldr	r3, [r3, #0]
 800540e:	4a72      	ldr	r2, [pc, #456]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 8005410:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005414:	6013      	str	r3, [r2, #0]
 8005416:	e00b      	b.n	8005430 <HAL_RCC_OscConfig+0xd8>
 8005418:	4b6f      	ldr	r3, [pc, #444]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 800541a:	681b      	ldr	r3, [r3, #0]
 800541c:	4a6e      	ldr	r2, [pc, #440]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 800541e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005422:	6013      	str	r3, [r2, #0]
 8005424:	4b6c      	ldr	r3, [pc, #432]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 8005426:	681b      	ldr	r3, [r3, #0]
 8005428:	4a6b      	ldr	r2, [pc, #428]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 800542a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800542e:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	685b      	ldr	r3, [r3, #4]
 8005434:	2b00      	cmp	r3, #0
 8005436:	d013      	beq.n	8005460 <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005438:	f7fd ff9c 	bl	8003374 <HAL_GetTick>
 800543c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800543e:	e008      	b.n	8005452 <HAL_RCC_OscConfig+0xfa>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005440:	f7fd ff98 	bl	8003374 <HAL_GetTick>
 8005444:	4602      	mov	r2, r0
 8005446:	693b      	ldr	r3, [r7, #16]
 8005448:	1ad3      	subs	r3, r2, r3
 800544a:	2b64      	cmp	r3, #100	; 0x64
 800544c:	d901      	bls.n	8005452 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 800544e:	2303      	movs	r3, #3
 8005450:	e21f      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005452:	4b61      	ldr	r3, [pc, #388]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 8005454:	681b      	ldr	r3, [r3, #0]
 8005456:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800545a:	2b00      	cmp	r3, #0
 800545c:	d0f0      	beq.n	8005440 <HAL_RCC_OscConfig+0xe8>
 800545e:	e014      	b.n	800548a <HAL_RCC_OscConfig+0x132>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005460:	f7fd ff88 	bl	8003374 <HAL_GetTick>
 8005464:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005466:	e008      	b.n	800547a <HAL_RCC_OscConfig+0x122>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005468:	f7fd ff84 	bl	8003374 <HAL_GetTick>
 800546c:	4602      	mov	r2, r0
 800546e:	693b      	ldr	r3, [r7, #16]
 8005470:	1ad3      	subs	r3, r2, r3
 8005472:	2b64      	cmp	r3, #100	; 0x64
 8005474:	d901      	bls.n	800547a <HAL_RCC_OscConfig+0x122>
          {
            return HAL_TIMEOUT;
 8005476:	2303      	movs	r3, #3
 8005478:	e20b      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800547a:	4b57      	ldr	r3, [pc, #348]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 800547c:	681b      	ldr	r3, [r3, #0]
 800547e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005482:	2b00      	cmp	r3, #0
 8005484:	d1f0      	bne.n	8005468 <HAL_RCC_OscConfig+0x110>
 8005486:	e000      	b.n	800548a <HAL_RCC_OscConfig+0x132>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005488:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800548a:	687b      	ldr	r3, [r7, #4]
 800548c:	681b      	ldr	r3, [r3, #0]
 800548e:	f003 0302 	and.w	r3, r3, #2
 8005492:	2b00      	cmp	r3, #0
 8005494:	d069      	beq.n	800556a <HAL_RCC_OscConfig+0x212>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8005496:	4b50      	ldr	r3, [pc, #320]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 8005498:	689b      	ldr	r3, [r3, #8]
 800549a:	f003 030c 	and.w	r3, r3, #12
 800549e:	2b00      	cmp	r3, #0
 80054a0:	d00b      	beq.n	80054ba <HAL_RCC_OscConfig+0x162>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80054a2:	4b4d      	ldr	r3, [pc, #308]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80054a4:	689b      	ldr	r3, [r3, #8]
 80054a6:	f003 030c 	and.w	r3, r3, #12
 80054aa:	2b08      	cmp	r3, #8
 80054ac:	d11c      	bne.n	80054e8 <HAL_RCC_OscConfig+0x190>
 80054ae:	4b4a      	ldr	r3, [pc, #296]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80054b0:	685b      	ldr	r3, [r3, #4]
 80054b2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80054b6:	2b00      	cmp	r3, #0
 80054b8:	d116      	bne.n	80054e8 <HAL_RCC_OscConfig+0x190>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80054ba:	4b47      	ldr	r3, [pc, #284]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80054bc:	681b      	ldr	r3, [r3, #0]
 80054be:	f003 0302 	and.w	r3, r3, #2
 80054c2:	2b00      	cmp	r3, #0
 80054c4:	d005      	beq.n	80054d2 <HAL_RCC_OscConfig+0x17a>
 80054c6:	687b      	ldr	r3, [r7, #4]
 80054c8:	68db      	ldr	r3, [r3, #12]
 80054ca:	2b01      	cmp	r3, #1
 80054cc:	d001      	beq.n	80054d2 <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 80054ce:	2301      	movs	r3, #1
 80054d0:	e1df      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80054d2:	4b41      	ldr	r3, [pc, #260]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80054d4:	681b      	ldr	r3, [r3, #0]
 80054d6:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80054da:	687b      	ldr	r3, [r7, #4]
 80054dc:	691b      	ldr	r3, [r3, #16]
 80054de:	00db      	lsls	r3, r3, #3
 80054e0:	493d      	ldr	r1, [pc, #244]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80054e2:	4313      	orrs	r3, r2
 80054e4:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80054e6:	e040      	b.n	800556a <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 80054e8:	687b      	ldr	r3, [r7, #4]
 80054ea:	68db      	ldr	r3, [r3, #12]
 80054ec:	2b00      	cmp	r3, #0
 80054ee:	d023      	beq.n	8005538 <HAL_RCC_OscConfig+0x1e0>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80054f0:	4b39      	ldr	r3, [pc, #228]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80054f2:	681b      	ldr	r3, [r3, #0]
 80054f4:	4a38      	ldr	r2, [pc, #224]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80054f6:	f043 0301 	orr.w	r3, r3, #1
 80054fa:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80054fc:	f7fd ff3a 	bl	8003374 <HAL_GetTick>
 8005500:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005502:	e008      	b.n	8005516 <HAL_RCC_OscConfig+0x1be>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005504:	f7fd ff36 	bl	8003374 <HAL_GetTick>
 8005508:	4602      	mov	r2, r0
 800550a:	693b      	ldr	r3, [r7, #16]
 800550c:	1ad3      	subs	r3, r2, r3
 800550e:	2b02      	cmp	r3, #2
 8005510:	d901      	bls.n	8005516 <HAL_RCC_OscConfig+0x1be>
          {
            return HAL_TIMEOUT;
 8005512:	2303      	movs	r3, #3
 8005514:	e1bd      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005516:	4b30      	ldr	r3, [pc, #192]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 8005518:	681b      	ldr	r3, [r3, #0]
 800551a:	f003 0302 	and.w	r3, r3, #2
 800551e:	2b00      	cmp	r3, #0
 8005520:	d0f0      	beq.n	8005504 <HAL_RCC_OscConfig+0x1ac>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005522:	4b2d      	ldr	r3, [pc, #180]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 8005524:	681b      	ldr	r3, [r3, #0]
 8005526:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800552a:	687b      	ldr	r3, [r7, #4]
 800552c:	691b      	ldr	r3, [r3, #16]
 800552e:	00db      	lsls	r3, r3, #3
 8005530:	4929      	ldr	r1, [pc, #164]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 8005532:	4313      	orrs	r3, r2
 8005534:	600b      	str	r3, [r1, #0]
 8005536:	e018      	b.n	800556a <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8005538:	4b27      	ldr	r3, [pc, #156]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 800553a:	681b      	ldr	r3, [r3, #0]
 800553c:	4a26      	ldr	r2, [pc, #152]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 800553e:	f023 0301 	bic.w	r3, r3, #1
 8005542:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005544:	f7fd ff16 	bl	8003374 <HAL_GetTick>
 8005548:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800554a:	e008      	b.n	800555e <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800554c:	f7fd ff12 	bl	8003374 <HAL_GetTick>
 8005550:	4602      	mov	r2, r0
 8005552:	693b      	ldr	r3, [r7, #16]
 8005554:	1ad3      	subs	r3, r2, r3
 8005556:	2b02      	cmp	r3, #2
 8005558:	d901      	bls.n	800555e <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 800555a:	2303      	movs	r3, #3
 800555c:	e199      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800555e:	4b1e      	ldr	r3, [pc, #120]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 8005560:	681b      	ldr	r3, [r3, #0]
 8005562:	f003 0302 	and.w	r3, r3, #2
 8005566:	2b00      	cmp	r3, #0
 8005568:	d1f0      	bne.n	800554c <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800556a:	687b      	ldr	r3, [r7, #4]
 800556c:	681b      	ldr	r3, [r3, #0]
 800556e:	f003 0308 	and.w	r3, r3, #8
 8005572:	2b00      	cmp	r3, #0
 8005574:	d038      	beq.n	80055e8 <HAL_RCC_OscConfig+0x290>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8005576:	687b      	ldr	r3, [r7, #4]
 8005578:	695b      	ldr	r3, [r3, #20]
 800557a:	2b00      	cmp	r3, #0
 800557c:	d019      	beq.n	80055b2 <HAL_RCC_OscConfig+0x25a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800557e:	4b16      	ldr	r3, [pc, #88]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 8005580:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005582:	4a15      	ldr	r2, [pc, #84]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 8005584:	f043 0301 	orr.w	r3, r3, #1
 8005588:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800558a:	f7fd fef3 	bl	8003374 <HAL_GetTick>
 800558e:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005590:	e008      	b.n	80055a4 <HAL_RCC_OscConfig+0x24c>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005592:	f7fd feef 	bl	8003374 <HAL_GetTick>
 8005596:	4602      	mov	r2, r0
 8005598:	693b      	ldr	r3, [r7, #16]
 800559a:	1ad3      	subs	r3, r2, r3
 800559c:	2b02      	cmp	r3, #2
 800559e:	d901      	bls.n	80055a4 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 80055a0:	2303      	movs	r3, #3
 80055a2:	e176      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80055a4:	4b0c      	ldr	r3, [pc, #48]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80055a6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80055a8:	f003 0302 	and.w	r3, r3, #2
 80055ac:	2b00      	cmp	r3, #0
 80055ae:	d0f0      	beq.n	8005592 <HAL_RCC_OscConfig+0x23a>
 80055b0:	e01a      	b.n	80055e8 <HAL_RCC_OscConfig+0x290>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80055b2:	4b09      	ldr	r3, [pc, #36]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80055b4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80055b6:	4a08      	ldr	r2, [pc, #32]	; (80055d8 <HAL_RCC_OscConfig+0x280>)
 80055b8:	f023 0301 	bic.w	r3, r3, #1
 80055bc:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80055be:	f7fd fed9 	bl	8003374 <HAL_GetTick>
 80055c2:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80055c4:	e00a      	b.n	80055dc <HAL_RCC_OscConfig+0x284>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80055c6:	f7fd fed5 	bl	8003374 <HAL_GetTick>
 80055ca:	4602      	mov	r2, r0
 80055cc:	693b      	ldr	r3, [r7, #16]
 80055ce:	1ad3      	subs	r3, r2, r3
 80055d0:	2b02      	cmp	r3, #2
 80055d2:	d903      	bls.n	80055dc <HAL_RCC_OscConfig+0x284>
        {
          return HAL_TIMEOUT;
 80055d4:	2303      	movs	r3, #3
 80055d6:	e15c      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
 80055d8:	40023800 	.word	0x40023800
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80055dc:	4b91      	ldr	r3, [pc, #580]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80055de:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80055e0:	f003 0302 	and.w	r3, r3, #2
 80055e4:	2b00      	cmp	r3, #0
 80055e6:	d1ee      	bne.n	80055c6 <HAL_RCC_OscConfig+0x26e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80055e8:	687b      	ldr	r3, [r7, #4]
 80055ea:	681b      	ldr	r3, [r3, #0]
 80055ec:	f003 0304 	and.w	r3, r3, #4
 80055f0:	2b00      	cmp	r3, #0
 80055f2:	f000 80a4 	beq.w	800573e <HAL_RCC_OscConfig+0x3e6>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80055f6:	4b8b      	ldr	r3, [pc, #556]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80055f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80055fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80055fe:	2b00      	cmp	r3, #0
 8005600:	d10d      	bne.n	800561e <HAL_RCC_OscConfig+0x2c6>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 8005602:	4b88      	ldr	r3, [pc, #544]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 8005604:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005606:	4a87      	ldr	r2, [pc, #540]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 8005608:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800560c:	6413      	str	r3, [r2, #64]	; 0x40
 800560e:	4b85      	ldr	r3, [pc, #532]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 8005610:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005612:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005616:	60bb      	str	r3, [r7, #8]
 8005618:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 800561a:	2301      	movs	r3, #1
 800561c:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 800561e:	4b82      	ldr	r3, [pc, #520]	; (8005828 <HAL_RCC_OscConfig+0x4d0>)
 8005620:	681b      	ldr	r3, [r3, #0]
 8005622:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005626:	2b00      	cmp	r3, #0
 8005628:	d118      	bne.n	800565c <HAL_RCC_OscConfig+0x304>
    {
      /* Enable write access to Backup domain */
      PWR->CR1 |= PWR_CR1_DBP;
 800562a:	4b7f      	ldr	r3, [pc, #508]	; (8005828 <HAL_RCC_OscConfig+0x4d0>)
 800562c:	681b      	ldr	r3, [r3, #0]
 800562e:	4a7e      	ldr	r2, [pc, #504]	; (8005828 <HAL_RCC_OscConfig+0x4d0>)
 8005630:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005634:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8005636:	f7fd fe9d 	bl	8003374 <HAL_GetTick>
 800563a:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 800563c:	e008      	b.n	8005650 <HAL_RCC_OscConfig+0x2f8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800563e:	f7fd fe99 	bl	8003374 <HAL_GetTick>
 8005642:	4602      	mov	r2, r0
 8005644:	693b      	ldr	r3, [r7, #16]
 8005646:	1ad3      	subs	r3, r2, r3
 8005648:	2b64      	cmp	r3, #100	; 0x64
 800564a:	d901      	bls.n	8005650 <HAL_RCC_OscConfig+0x2f8>
        {
          return HAL_TIMEOUT;
 800564c:	2303      	movs	r3, #3
 800564e:	e120      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8005650:	4b75      	ldr	r3, [pc, #468]	; (8005828 <HAL_RCC_OscConfig+0x4d0>)
 8005652:	681b      	ldr	r3, [r3, #0]
 8005654:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005658:	2b00      	cmp	r3, #0
 800565a:	d0f0      	beq.n	800563e <HAL_RCC_OscConfig+0x2e6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800565c:	687b      	ldr	r3, [r7, #4]
 800565e:	689b      	ldr	r3, [r3, #8]
 8005660:	2b01      	cmp	r3, #1
 8005662:	d106      	bne.n	8005672 <HAL_RCC_OscConfig+0x31a>
 8005664:	4b6f      	ldr	r3, [pc, #444]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 8005666:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005668:	4a6e      	ldr	r2, [pc, #440]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 800566a:	f043 0301 	orr.w	r3, r3, #1
 800566e:	6713      	str	r3, [r2, #112]	; 0x70
 8005670:	e02d      	b.n	80056ce <HAL_RCC_OscConfig+0x376>
 8005672:	687b      	ldr	r3, [r7, #4]
 8005674:	689b      	ldr	r3, [r3, #8]
 8005676:	2b00      	cmp	r3, #0
 8005678:	d10c      	bne.n	8005694 <HAL_RCC_OscConfig+0x33c>
 800567a:	4b6a      	ldr	r3, [pc, #424]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 800567c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800567e:	4a69      	ldr	r2, [pc, #420]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 8005680:	f023 0301 	bic.w	r3, r3, #1
 8005684:	6713      	str	r3, [r2, #112]	; 0x70
 8005686:	4b67      	ldr	r3, [pc, #412]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 8005688:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800568a:	4a66      	ldr	r2, [pc, #408]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 800568c:	f023 0304 	bic.w	r3, r3, #4
 8005690:	6713      	str	r3, [r2, #112]	; 0x70
 8005692:	e01c      	b.n	80056ce <HAL_RCC_OscConfig+0x376>
 8005694:	687b      	ldr	r3, [r7, #4]
 8005696:	689b      	ldr	r3, [r3, #8]
 8005698:	2b05      	cmp	r3, #5
 800569a:	d10c      	bne.n	80056b6 <HAL_RCC_OscConfig+0x35e>
 800569c:	4b61      	ldr	r3, [pc, #388]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 800569e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80056a0:	4a60      	ldr	r2, [pc, #384]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80056a2:	f043 0304 	orr.w	r3, r3, #4
 80056a6:	6713      	str	r3, [r2, #112]	; 0x70
 80056a8:	4b5e      	ldr	r3, [pc, #376]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80056aa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80056ac:	4a5d      	ldr	r2, [pc, #372]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80056ae:	f043 0301 	orr.w	r3, r3, #1
 80056b2:	6713      	str	r3, [r2, #112]	; 0x70
 80056b4:	e00b      	b.n	80056ce <HAL_RCC_OscConfig+0x376>
 80056b6:	4b5b      	ldr	r3, [pc, #364]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80056b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80056ba:	4a5a      	ldr	r2, [pc, #360]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80056bc:	f023 0301 	bic.w	r3, r3, #1
 80056c0:	6713      	str	r3, [r2, #112]	; 0x70
 80056c2:	4b58      	ldr	r3, [pc, #352]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80056c4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80056c6:	4a57      	ldr	r2, [pc, #348]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80056c8:	f023 0304 	bic.w	r3, r3, #4
 80056cc:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80056ce:	687b      	ldr	r3, [r7, #4]
 80056d0:	689b      	ldr	r3, [r3, #8]
 80056d2:	2b00      	cmp	r3, #0
 80056d4:	d015      	beq.n	8005702 <HAL_RCC_OscConfig+0x3aa>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80056d6:	f7fd fe4d 	bl	8003374 <HAL_GetTick>
 80056da:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80056dc:	e00a      	b.n	80056f4 <HAL_RCC_OscConfig+0x39c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80056de:	f7fd fe49 	bl	8003374 <HAL_GetTick>
 80056e2:	4602      	mov	r2, r0
 80056e4:	693b      	ldr	r3, [r7, #16]
 80056e6:	1ad3      	subs	r3, r2, r3
 80056e8:	f241 3288 	movw	r2, #5000	; 0x1388
 80056ec:	4293      	cmp	r3, r2
 80056ee:	d901      	bls.n	80056f4 <HAL_RCC_OscConfig+0x39c>
        {
          return HAL_TIMEOUT;
 80056f0:	2303      	movs	r3, #3
 80056f2:	e0ce      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80056f4:	4b4b      	ldr	r3, [pc, #300]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80056f6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80056f8:	f003 0302 	and.w	r3, r3, #2
 80056fc:	2b00      	cmp	r3, #0
 80056fe:	d0ee      	beq.n	80056de <HAL_RCC_OscConfig+0x386>
 8005700:	e014      	b.n	800572c <HAL_RCC_OscConfig+0x3d4>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005702:	f7fd fe37 	bl	8003374 <HAL_GetTick>
 8005706:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005708:	e00a      	b.n	8005720 <HAL_RCC_OscConfig+0x3c8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800570a:	f7fd fe33 	bl	8003374 <HAL_GetTick>
 800570e:	4602      	mov	r2, r0
 8005710:	693b      	ldr	r3, [r7, #16]
 8005712:	1ad3      	subs	r3, r2, r3
 8005714:	f241 3288 	movw	r2, #5000	; 0x1388
 8005718:	4293      	cmp	r3, r2
 800571a:	d901      	bls.n	8005720 <HAL_RCC_OscConfig+0x3c8>
        {
          return HAL_TIMEOUT;
 800571c:	2303      	movs	r3, #3
 800571e:	e0b8      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005720:	4b40      	ldr	r3, [pc, #256]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 8005722:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005724:	f003 0302 	and.w	r3, r3, #2
 8005728:	2b00      	cmp	r3, #0
 800572a:	d1ee      	bne.n	800570a <HAL_RCC_OscConfig+0x3b2>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 800572c:	7dfb      	ldrb	r3, [r7, #23]
 800572e:	2b01      	cmp	r3, #1
 8005730:	d105      	bne.n	800573e <HAL_RCC_OscConfig+0x3e6>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8005732:	4b3c      	ldr	r3, [pc, #240]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 8005734:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005736:	4a3b      	ldr	r2, [pc, #236]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 8005738:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800573c:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800573e:	687b      	ldr	r3, [r7, #4]
 8005740:	699b      	ldr	r3, [r3, #24]
 8005742:	2b00      	cmp	r3, #0
 8005744:	f000 80a4 	beq.w	8005890 <HAL_RCC_OscConfig+0x538>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8005748:	4b36      	ldr	r3, [pc, #216]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 800574a:	689b      	ldr	r3, [r3, #8]
 800574c:	f003 030c 	and.w	r3, r3, #12
 8005750:	2b08      	cmp	r3, #8
 8005752:	d06b      	beq.n	800582c <HAL_RCC_OscConfig+0x4d4>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005754:	687b      	ldr	r3, [r7, #4]
 8005756:	699b      	ldr	r3, [r3, #24]
 8005758:	2b02      	cmp	r3, #2
 800575a:	d149      	bne.n	80057f0 <HAL_RCC_OscConfig+0x498>
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800575c:	4b31      	ldr	r3, [pc, #196]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 800575e:	681b      	ldr	r3, [r3, #0]
 8005760:	4a30      	ldr	r2, [pc, #192]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 8005762:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8005766:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005768:	f7fd fe04 	bl	8003374 <HAL_GetTick>
 800576c:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800576e:	e008      	b.n	8005782 <HAL_RCC_OscConfig+0x42a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005770:	f7fd fe00 	bl	8003374 <HAL_GetTick>
 8005774:	4602      	mov	r2, r0
 8005776:	693b      	ldr	r3, [r7, #16]
 8005778:	1ad3      	subs	r3, r2, r3
 800577a:	2b02      	cmp	r3, #2
 800577c:	d901      	bls.n	8005782 <HAL_RCC_OscConfig+0x42a>
          {
            return HAL_TIMEOUT;
 800577e:	2303      	movs	r3, #3
 8005780:	e087      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005782:	4b28      	ldr	r3, [pc, #160]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 8005784:	681b      	ldr	r3, [r3, #0]
 8005786:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800578a:	2b00      	cmp	r3, #0
 800578c:	d1f0      	bne.n	8005770 <HAL_RCC_OscConfig+0x418>
                             RCC_OscInitStruct->PLL.PLLN,
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);
#else
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800578e:	687b      	ldr	r3, [r7, #4]
 8005790:	69da      	ldr	r2, [r3, #28]
 8005792:	687b      	ldr	r3, [r7, #4]
 8005794:	6a1b      	ldr	r3, [r3, #32]
 8005796:	431a      	orrs	r2, r3
 8005798:	687b      	ldr	r3, [r7, #4]
 800579a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800579c:	019b      	lsls	r3, r3, #6
 800579e:	431a      	orrs	r2, r3
 80057a0:	687b      	ldr	r3, [r7, #4]
 80057a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80057a4:	085b      	lsrs	r3, r3, #1
 80057a6:	3b01      	subs	r3, #1
 80057a8:	041b      	lsls	r3, r3, #16
 80057aa:	431a      	orrs	r2, r3
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80057b0:	061b      	lsls	r3, r3, #24
 80057b2:	4313      	orrs	r3, r2
 80057b4:	4a1b      	ldr	r2, [pc, #108]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80057b6:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80057ba:	6053      	str	r3, [r2, #4]
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ);
#endif

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80057bc:	4b19      	ldr	r3, [pc, #100]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80057be:	681b      	ldr	r3, [r3, #0]
 80057c0:	4a18      	ldr	r2, [pc, #96]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80057c2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80057c6:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80057c8:	f7fd fdd4 	bl	8003374 <HAL_GetTick>
 80057cc:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80057ce:	e008      	b.n	80057e2 <HAL_RCC_OscConfig+0x48a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80057d0:	f7fd fdd0 	bl	8003374 <HAL_GetTick>
 80057d4:	4602      	mov	r2, r0
 80057d6:	693b      	ldr	r3, [r7, #16]
 80057d8:	1ad3      	subs	r3, r2, r3
 80057da:	2b02      	cmp	r3, #2
 80057dc:	d901      	bls.n	80057e2 <HAL_RCC_OscConfig+0x48a>
          {
            return HAL_TIMEOUT;
 80057de:	2303      	movs	r3, #3
 80057e0:	e057      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80057e2:	4b10      	ldr	r3, [pc, #64]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80057e4:	681b      	ldr	r3, [r3, #0]
 80057e6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80057ea:	2b00      	cmp	r3, #0
 80057ec:	d0f0      	beq.n	80057d0 <HAL_RCC_OscConfig+0x478>
 80057ee:	e04f      	b.n	8005890 <HAL_RCC_OscConfig+0x538>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80057f0:	4b0c      	ldr	r3, [pc, #48]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80057f2:	681b      	ldr	r3, [r3, #0]
 80057f4:	4a0b      	ldr	r2, [pc, #44]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 80057f6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80057fa:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80057fc:	f7fd fdba 	bl	8003374 <HAL_GetTick>
 8005800:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005802:	e008      	b.n	8005816 <HAL_RCC_OscConfig+0x4be>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005804:	f7fd fdb6 	bl	8003374 <HAL_GetTick>
 8005808:	4602      	mov	r2, r0
 800580a:	693b      	ldr	r3, [r7, #16]
 800580c:	1ad3      	subs	r3, r2, r3
 800580e:	2b02      	cmp	r3, #2
 8005810:	d901      	bls.n	8005816 <HAL_RCC_OscConfig+0x4be>
          {
            return HAL_TIMEOUT;
 8005812:	2303      	movs	r3, #3
 8005814:	e03d      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005816:	4b03      	ldr	r3, [pc, #12]	; (8005824 <HAL_RCC_OscConfig+0x4cc>)
 8005818:	681b      	ldr	r3, [r3, #0]
 800581a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800581e:	2b00      	cmp	r3, #0
 8005820:	d1f0      	bne.n	8005804 <HAL_RCC_OscConfig+0x4ac>
 8005822:	e035      	b.n	8005890 <HAL_RCC_OscConfig+0x538>
 8005824:	40023800 	.word	0x40023800
 8005828:	40007000 	.word	0x40007000
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      pll_config = RCC->PLLCFGR;
 800582c:	4b1b      	ldr	r3, [pc, #108]	; (800589c <HAL_RCC_OscConfig+0x544>)
 800582e:	685b      	ldr	r3, [r3, #4]
 8005830:	60fb      	str	r3, [r7, #12]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005832:	687b      	ldr	r3, [r7, #4]
 8005834:	699b      	ldr	r3, [r3, #24]
 8005836:	2b01      	cmp	r3, #1
 8005838:	d028      	beq.n	800588c <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800583a:	68fb      	ldr	r3, [r7, #12]
 800583c:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8005840:	687b      	ldr	r3, [r7, #4]
 8005842:	69db      	ldr	r3, [r3, #28]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005844:	429a      	cmp	r2, r3
 8005846:	d121      	bne.n	800588c <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005848:	68fb      	ldr	r3, [r7, #12]
 800584a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	6a1b      	ldr	r3, [r3, #32]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005852:	429a      	cmp	r2, r3
 8005854:	d11a      	bne.n	800588c <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8005856:	68fa      	ldr	r2, [r7, #12]
 8005858:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800585c:	4013      	ands	r3, r2
 800585e:	687a      	ldr	r2, [r7, #4]
 8005860:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8005862:	0192      	lsls	r2, r2, #6
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005864:	4293      	cmp	r3, r2
 8005866:	d111      	bne.n	800588c <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8005868:	68fb      	ldr	r3, [r7, #12]
 800586a:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800586e:	687b      	ldr	r3, [r7, #4]
 8005870:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005872:	085b      	lsrs	r3, r3, #1
 8005874:	3b01      	subs	r3, #1
 8005876:	041b      	lsls	r3, r3, #16
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8005878:	429a      	cmp	r2, r3
 800587a:	d107      	bne.n	800588c <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800587c:	68fb      	ldr	r3, [r7, #12]
 800587e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8005882:	687b      	ldr	r3, [r7, #4]
 8005884:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005886:	061b      	lsls	r3, r3, #24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8005888:	429a      	cmp	r2, r3
 800588a:	d001      	beq.n	8005890 <HAL_RCC_OscConfig+0x538>
#endif
      {
        return HAL_ERROR;
 800588c:	2301      	movs	r3, #1
 800588e:	e000      	b.n	8005892 <HAL_RCC_OscConfig+0x53a>
      }
    }
  }
  return HAL_OK;
 8005890:	2300      	movs	r3, #0
}
 8005892:	4618      	mov	r0, r3
 8005894:	3718      	adds	r7, #24
 8005896:	46bd      	mov	sp, r7
 8005898:	bd80      	pop	{r7, pc}
 800589a:	bf00      	nop
 800589c:	40023800 	.word	0x40023800

080058a0 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80058a0:	b580      	push	{r7, lr}
 80058a2:	b084      	sub	sp, #16
 80058a4:	af00      	add	r7, sp, #0
 80058a6:	6078      	str	r0, [r7, #4]
 80058a8:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0;
 80058aa:	2300      	movs	r3, #0
 80058ac:	60fb      	str	r3, [r7, #12]

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 80058ae:	687b      	ldr	r3, [r7, #4]
 80058b0:	2b00      	cmp	r3, #0
 80058b2:	d101      	bne.n	80058b8 <HAL_RCC_ClockConfig+0x18>
  {
    return HAL_ERROR;
 80058b4:	2301      	movs	r3, #1
 80058b6:	e0d0      	b.n	8005a5a <HAL_RCC_ClockConfig+0x1ba>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 80058b8:	4b6a      	ldr	r3, [pc, #424]	; (8005a64 <HAL_RCC_ClockConfig+0x1c4>)
 80058ba:	681b      	ldr	r3, [r3, #0]
 80058bc:	f003 030f 	and.w	r3, r3, #15
 80058c0:	683a      	ldr	r2, [r7, #0]
 80058c2:	429a      	cmp	r2, r3
 80058c4:	d910      	bls.n	80058e8 <HAL_RCC_ClockConfig+0x48>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80058c6:	4b67      	ldr	r3, [pc, #412]	; (8005a64 <HAL_RCC_ClockConfig+0x1c4>)
 80058c8:	681b      	ldr	r3, [r3, #0]
 80058ca:	f023 020f 	bic.w	r2, r3, #15
 80058ce:	4965      	ldr	r1, [pc, #404]	; (8005a64 <HAL_RCC_ClockConfig+0x1c4>)
 80058d0:	683b      	ldr	r3, [r7, #0]
 80058d2:	4313      	orrs	r3, r2
 80058d4:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80058d6:	4b63      	ldr	r3, [pc, #396]	; (8005a64 <HAL_RCC_ClockConfig+0x1c4>)
 80058d8:	681b      	ldr	r3, [r3, #0]
 80058da:	f003 030f 	and.w	r3, r3, #15
 80058de:	683a      	ldr	r2, [r7, #0]
 80058e0:	429a      	cmp	r2, r3
 80058e2:	d001      	beq.n	80058e8 <HAL_RCC_ClockConfig+0x48>
    {
      return HAL_ERROR;
 80058e4:	2301      	movs	r3, #1
 80058e6:	e0b8      	b.n	8005a5a <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80058e8:	687b      	ldr	r3, [r7, #4]
 80058ea:	681b      	ldr	r3, [r3, #0]
 80058ec:	f003 0302 	and.w	r3, r3, #2
 80058f0:	2b00      	cmp	r3, #0
 80058f2:	d020      	beq.n	8005936 <HAL_RCC_ClockConfig+0x96>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80058f4:	687b      	ldr	r3, [r7, #4]
 80058f6:	681b      	ldr	r3, [r3, #0]
 80058f8:	f003 0304 	and.w	r3, r3, #4
 80058fc:	2b00      	cmp	r3, #0
 80058fe:	d005      	beq.n	800590c <HAL_RCC_ClockConfig+0x6c>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005900:	4b59      	ldr	r3, [pc, #356]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 8005902:	689b      	ldr	r3, [r3, #8]
 8005904:	4a58      	ldr	r2, [pc, #352]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 8005906:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800590a:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800590c:	687b      	ldr	r3, [r7, #4]
 800590e:	681b      	ldr	r3, [r3, #0]
 8005910:	f003 0308 	and.w	r3, r3, #8
 8005914:	2b00      	cmp	r3, #0
 8005916:	d005      	beq.n	8005924 <HAL_RCC_ClockConfig+0x84>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005918:	4b53      	ldr	r3, [pc, #332]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 800591a:	689b      	ldr	r3, [r3, #8]
 800591c:	4a52      	ldr	r2, [pc, #328]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 800591e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8005922:	6093      	str	r3, [r2, #8]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005924:	4b50      	ldr	r3, [pc, #320]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 8005926:	689b      	ldr	r3, [r3, #8]
 8005928:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800592c:	687b      	ldr	r3, [r7, #4]
 800592e:	689b      	ldr	r3, [r3, #8]
 8005930:	494d      	ldr	r1, [pc, #308]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 8005932:	4313      	orrs	r3, r2
 8005934:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005936:	687b      	ldr	r3, [r7, #4]
 8005938:	681b      	ldr	r3, [r3, #0]
 800593a:	f003 0301 	and.w	r3, r3, #1
 800593e:	2b00      	cmp	r3, #0
 8005940:	d040      	beq.n	80059c4 <HAL_RCC_ClockConfig+0x124>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005942:	687b      	ldr	r3, [r7, #4]
 8005944:	685b      	ldr	r3, [r3, #4]
 8005946:	2b01      	cmp	r3, #1
 8005948:	d107      	bne.n	800595a <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800594a:	4b47      	ldr	r3, [pc, #284]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 800594c:	681b      	ldr	r3, [r3, #0]
 800594e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005952:	2b00      	cmp	r3, #0
 8005954:	d115      	bne.n	8005982 <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 8005956:	2301      	movs	r3, #1
 8005958:	e07f      	b.n	8005a5a <HAL_RCC_ClockConfig+0x1ba>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800595a:	687b      	ldr	r3, [r7, #4]
 800595c:	685b      	ldr	r3, [r3, #4]
 800595e:	2b02      	cmp	r3, #2
 8005960:	d107      	bne.n	8005972 <HAL_RCC_ClockConfig+0xd2>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005962:	4b41      	ldr	r3, [pc, #260]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 8005964:	681b      	ldr	r3, [r3, #0]
 8005966:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800596a:	2b00      	cmp	r3, #0
 800596c:	d109      	bne.n	8005982 <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 800596e:	2301      	movs	r3, #1
 8005970:	e073      	b.n	8005a5a <HAL_RCC_ClockConfig+0x1ba>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005972:	4b3d      	ldr	r3, [pc, #244]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 8005974:	681b      	ldr	r3, [r3, #0]
 8005976:	f003 0302 	and.w	r3, r3, #2
 800597a:	2b00      	cmp	r3, #0
 800597c:	d101      	bne.n	8005982 <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 800597e:	2301      	movs	r3, #1
 8005980:	e06b      	b.n	8005a5a <HAL_RCC_ClockConfig+0x1ba>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005982:	4b39      	ldr	r3, [pc, #228]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 8005984:	689b      	ldr	r3, [r3, #8]
 8005986:	f023 0203 	bic.w	r2, r3, #3
 800598a:	687b      	ldr	r3, [r7, #4]
 800598c:	685b      	ldr	r3, [r3, #4]
 800598e:	4936      	ldr	r1, [pc, #216]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 8005990:	4313      	orrs	r3, r2
 8005992:	608b      	str	r3, [r1, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8005994:	f7fd fcee 	bl	8003374 <HAL_GetTick>
 8005998:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800599a:	e00a      	b.n	80059b2 <HAL_RCC_ClockConfig+0x112>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800599c:	f7fd fcea 	bl	8003374 <HAL_GetTick>
 80059a0:	4602      	mov	r2, r0
 80059a2:	68fb      	ldr	r3, [r7, #12]
 80059a4:	1ad3      	subs	r3, r2, r3
 80059a6:	f241 3288 	movw	r2, #5000	; 0x1388
 80059aa:	4293      	cmp	r3, r2
 80059ac:	d901      	bls.n	80059b2 <HAL_RCC_ClockConfig+0x112>
      {
        return HAL_TIMEOUT;
 80059ae:	2303      	movs	r3, #3
 80059b0:	e053      	b.n	8005a5a <HAL_RCC_ClockConfig+0x1ba>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80059b2:	4b2d      	ldr	r3, [pc, #180]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 80059b4:	689b      	ldr	r3, [r3, #8]
 80059b6:	f003 020c 	and.w	r2, r3, #12
 80059ba:	687b      	ldr	r3, [r7, #4]
 80059bc:	685b      	ldr	r3, [r3, #4]
 80059be:	009b      	lsls	r3, r3, #2
 80059c0:	429a      	cmp	r2, r3
 80059c2:	d1eb      	bne.n	800599c <HAL_RCC_ClockConfig+0xfc>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80059c4:	4b27      	ldr	r3, [pc, #156]	; (8005a64 <HAL_RCC_ClockConfig+0x1c4>)
 80059c6:	681b      	ldr	r3, [r3, #0]
 80059c8:	f003 030f 	and.w	r3, r3, #15
 80059cc:	683a      	ldr	r2, [r7, #0]
 80059ce:	429a      	cmp	r2, r3
 80059d0:	d210      	bcs.n	80059f4 <HAL_RCC_ClockConfig+0x154>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80059d2:	4b24      	ldr	r3, [pc, #144]	; (8005a64 <HAL_RCC_ClockConfig+0x1c4>)
 80059d4:	681b      	ldr	r3, [r3, #0]
 80059d6:	f023 020f 	bic.w	r2, r3, #15
 80059da:	4922      	ldr	r1, [pc, #136]	; (8005a64 <HAL_RCC_ClockConfig+0x1c4>)
 80059dc:	683b      	ldr	r3, [r7, #0]
 80059de:	4313      	orrs	r3, r2
 80059e0:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80059e2:	4b20      	ldr	r3, [pc, #128]	; (8005a64 <HAL_RCC_ClockConfig+0x1c4>)
 80059e4:	681b      	ldr	r3, [r3, #0]
 80059e6:	f003 030f 	and.w	r3, r3, #15
 80059ea:	683a      	ldr	r2, [r7, #0]
 80059ec:	429a      	cmp	r2, r3
 80059ee:	d001      	beq.n	80059f4 <HAL_RCC_ClockConfig+0x154>
    {
      return HAL_ERROR;
 80059f0:	2301      	movs	r3, #1
 80059f2:	e032      	b.n	8005a5a <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80059f4:	687b      	ldr	r3, [r7, #4]
 80059f6:	681b      	ldr	r3, [r3, #0]
 80059f8:	f003 0304 	and.w	r3, r3, #4
 80059fc:	2b00      	cmp	r3, #0
 80059fe:	d008      	beq.n	8005a12 <HAL_RCC_ClockConfig+0x172>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005a00:	4b19      	ldr	r3, [pc, #100]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 8005a02:	689b      	ldr	r3, [r3, #8]
 8005a04:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8005a08:	687b      	ldr	r3, [r7, #4]
 8005a0a:	68db      	ldr	r3, [r3, #12]
 8005a0c:	4916      	ldr	r1, [pc, #88]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 8005a0e:	4313      	orrs	r3, r2
 8005a10:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005a12:	687b      	ldr	r3, [r7, #4]
 8005a14:	681b      	ldr	r3, [r3, #0]
 8005a16:	f003 0308 	and.w	r3, r3, #8
 8005a1a:	2b00      	cmp	r3, #0
 8005a1c:	d009      	beq.n	8005a32 <HAL_RCC_ClockConfig+0x192>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8005a1e:	4b12      	ldr	r3, [pc, #72]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 8005a20:	689b      	ldr	r3, [r3, #8]
 8005a22:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	691b      	ldr	r3, [r3, #16]
 8005a2a:	00db      	lsls	r3, r3, #3
 8005a2c:	490e      	ldr	r1, [pc, #56]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 8005a2e:	4313      	orrs	r3, r2
 8005a30:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8005a32:	f000 f831 	bl	8005a98 <HAL_RCC_GetSysClockFreq>
 8005a36:	4602      	mov	r2, r0
 8005a38:	4b0b      	ldr	r3, [pc, #44]	; (8005a68 <HAL_RCC_ClockConfig+0x1c8>)
 8005a3a:	689b      	ldr	r3, [r3, #8]
 8005a3c:	091b      	lsrs	r3, r3, #4
 8005a3e:	f003 030f 	and.w	r3, r3, #15
 8005a42:	490a      	ldr	r1, [pc, #40]	; (8005a6c <HAL_RCC_ClockConfig+0x1cc>)
 8005a44:	5ccb      	ldrb	r3, [r1, r3]
 8005a46:	fa22 f303 	lsr.w	r3, r2, r3
 8005a4a:	4a09      	ldr	r2, [pc, #36]	; (8005a70 <HAL_RCC_ClockConfig+0x1d0>)
 8005a4c:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 8005a4e:	4b09      	ldr	r3, [pc, #36]	; (8005a74 <HAL_RCC_ClockConfig+0x1d4>)
 8005a50:	681b      	ldr	r3, [r3, #0]
 8005a52:	4618      	mov	r0, r3
 8005a54:	f7fd fc4a 	bl	80032ec <HAL_InitTick>

  return HAL_OK;
 8005a58:	2300      	movs	r3, #0
}
 8005a5a:	4618      	mov	r0, r3
 8005a5c:	3710      	adds	r7, #16
 8005a5e:	46bd      	mov	sp, r7
 8005a60:	bd80      	pop	{r7, pc}
 8005a62:	bf00      	nop
 8005a64:	40023c00 	.word	0x40023c00
 8005a68:	40023800 	.word	0x40023800
 8005a6c:	08025594 	.word	0x08025594
 8005a70:	20000008 	.word	0x20000008
 8005a74:	20000034 	.word	0x20000034

08005a78 <HAL_RCC_EnableCSS>:
  *         allowing the MCU to perform rescue operations. The CSSI is linked to
  *         the Cortex-M7 NMI (Non-Maskable Interrupt) exception vector.
  * @retval None
  */
void HAL_RCC_EnableCSS(void)
{
 8005a78:	b480      	push	{r7}
 8005a7a:	af00      	add	r7, sp, #0
  SET_BIT(RCC->CR, RCC_CR_CSSON);
 8005a7c:	4b05      	ldr	r3, [pc, #20]	; (8005a94 <HAL_RCC_EnableCSS+0x1c>)
 8005a7e:	681b      	ldr	r3, [r3, #0]
 8005a80:	4a04      	ldr	r2, [pc, #16]	; (8005a94 <HAL_RCC_EnableCSS+0x1c>)
 8005a82:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8005a86:	6013      	str	r3, [r2, #0]
}
 8005a88:	bf00      	nop
 8005a8a:	46bd      	mov	sp, r7
 8005a8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a90:	4770      	bx	lr
 8005a92:	bf00      	nop
 8005a94:	40023800 	.word	0x40023800

08005a98 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8005a98:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005a9c:	b090      	sub	sp, #64	; 0x40
 8005a9e:	af00      	add	r7, sp, #0
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
 8005aa0:	2300      	movs	r3, #0
 8005aa2:	637b      	str	r3, [r7, #52]	; 0x34
 8005aa4:	2300      	movs	r3, #0
 8005aa6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005aa8:	2300      	movs	r3, #0
 8005aaa:	633b      	str	r3, [r7, #48]	; 0x30
  uint32_t sysclockfreq = 0;
 8005aac:	2300      	movs	r3, #0
 8005aae:	63bb      	str	r3, [r7, #56]	; 0x38

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005ab0:	4b59      	ldr	r3, [pc, #356]	; (8005c18 <HAL_RCC_GetSysClockFreq+0x180>)
 8005ab2:	689b      	ldr	r3, [r3, #8]
 8005ab4:	f003 030c 	and.w	r3, r3, #12
 8005ab8:	2b08      	cmp	r3, #8
 8005aba:	d00d      	beq.n	8005ad8 <HAL_RCC_GetSysClockFreq+0x40>
 8005abc:	2b08      	cmp	r3, #8
 8005abe:	f200 80a1 	bhi.w	8005c04 <HAL_RCC_GetSysClockFreq+0x16c>
 8005ac2:	2b00      	cmp	r3, #0
 8005ac4:	d002      	beq.n	8005acc <HAL_RCC_GetSysClockFreq+0x34>
 8005ac6:	2b04      	cmp	r3, #4
 8005ac8:	d003      	beq.n	8005ad2 <HAL_RCC_GetSysClockFreq+0x3a>
 8005aca:	e09b      	b.n	8005c04 <HAL_RCC_GetSysClockFreq+0x16c>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8005acc:	4b53      	ldr	r3, [pc, #332]	; (8005c1c <HAL_RCC_GetSysClockFreq+0x184>)
 8005ace:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8005ad0:	e09b      	b.n	8005c0a <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8005ad2:	4b53      	ldr	r3, [pc, #332]	; (8005c20 <HAL_RCC_GetSysClockFreq+0x188>)
 8005ad4:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8005ad6:	e098      	b.n	8005c0a <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005ad8:	4b4f      	ldr	r3, [pc, #316]	; (8005c18 <HAL_RCC_GetSysClockFreq+0x180>)
 8005ada:	685b      	ldr	r3, [r3, #4]
 8005adc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8005ae0:	637b      	str	r3, [r7, #52]	; 0x34
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8005ae2:	4b4d      	ldr	r3, [pc, #308]	; (8005c18 <HAL_RCC_GetSysClockFreq+0x180>)
 8005ae4:	685b      	ldr	r3, [r3, #4]
 8005ae6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005aea:	2b00      	cmp	r3, #0
 8005aec:	d028      	beq.n	8005b40 <HAL_RCC_GetSysClockFreq+0xa8>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005aee:	4b4a      	ldr	r3, [pc, #296]	; (8005c18 <HAL_RCC_GetSysClockFreq+0x180>)
 8005af0:	685b      	ldr	r3, [r3, #4]
 8005af2:	099b      	lsrs	r3, r3, #6
 8005af4:	2200      	movs	r2, #0
 8005af6:	623b      	str	r3, [r7, #32]
 8005af8:	627a      	str	r2, [r7, #36]	; 0x24
 8005afa:	6a3b      	ldr	r3, [r7, #32]
 8005afc:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8005b00:	2100      	movs	r1, #0
 8005b02:	4b47      	ldr	r3, [pc, #284]	; (8005c20 <HAL_RCC_GetSysClockFreq+0x188>)
 8005b04:	fb03 f201 	mul.w	r2, r3, r1
 8005b08:	2300      	movs	r3, #0
 8005b0a:	fb00 f303 	mul.w	r3, r0, r3
 8005b0e:	4413      	add	r3, r2
 8005b10:	4a43      	ldr	r2, [pc, #268]	; (8005c20 <HAL_RCC_GetSysClockFreq+0x188>)
 8005b12:	fba0 1202 	umull	r1, r2, r0, r2
 8005b16:	62fa      	str	r2, [r7, #44]	; 0x2c
 8005b18:	460a      	mov	r2, r1
 8005b1a:	62ba      	str	r2, [r7, #40]	; 0x28
 8005b1c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8005b1e:	4413      	add	r3, r2
 8005b20:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005b22:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005b24:	2200      	movs	r2, #0
 8005b26:	61bb      	str	r3, [r7, #24]
 8005b28:	61fa      	str	r2, [r7, #28]
 8005b2a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005b2e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8005b32:	f7fa ffdb 	bl	8000aec <__aeabi_uldivmod>
 8005b36:	4602      	mov	r2, r0
 8005b38:	460b      	mov	r3, r1
 8005b3a:	4613      	mov	r3, r2
 8005b3c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005b3e:	e053      	b.n	8005be8 <HAL_RCC_GetSysClockFreq+0x150>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005b40:	4b35      	ldr	r3, [pc, #212]	; (8005c18 <HAL_RCC_GetSysClockFreq+0x180>)
 8005b42:	685b      	ldr	r3, [r3, #4]
 8005b44:	099b      	lsrs	r3, r3, #6
 8005b46:	2200      	movs	r2, #0
 8005b48:	613b      	str	r3, [r7, #16]
 8005b4a:	617a      	str	r2, [r7, #20]
 8005b4c:	693b      	ldr	r3, [r7, #16]
 8005b4e:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8005b52:	f04f 0b00 	mov.w	fp, #0
 8005b56:	4652      	mov	r2, sl
 8005b58:	465b      	mov	r3, fp
 8005b5a:	f04f 0000 	mov.w	r0, #0
 8005b5e:	f04f 0100 	mov.w	r1, #0
 8005b62:	0159      	lsls	r1, r3, #5
 8005b64:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005b68:	0150      	lsls	r0, r2, #5
 8005b6a:	4602      	mov	r2, r0
 8005b6c:	460b      	mov	r3, r1
 8005b6e:	ebb2 080a 	subs.w	r8, r2, sl
 8005b72:	eb63 090b 	sbc.w	r9, r3, fp
 8005b76:	f04f 0200 	mov.w	r2, #0
 8005b7a:	f04f 0300 	mov.w	r3, #0
 8005b7e:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8005b82:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8005b86:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8005b8a:	ebb2 0408 	subs.w	r4, r2, r8
 8005b8e:	eb63 0509 	sbc.w	r5, r3, r9
 8005b92:	f04f 0200 	mov.w	r2, #0
 8005b96:	f04f 0300 	mov.w	r3, #0
 8005b9a:	00eb      	lsls	r3, r5, #3
 8005b9c:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005ba0:	00e2      	lsls	r2, r4, #3
 8005ba2:	4614      	mov	r4, r2
 8005ba4:	461d      	mov	r5, r3
 8005ba6:	eb14 030a 	adds.w	r3, r4, sl
 8005baa:	603b      	str	r3, [r7, #0]
 8005bac:	eb45 030b 	adc.w	r3, r5, fp
 8005bb0:	607b      	str	r3, [r7, #4]
 8005bb2:	f04f 0200 	mov.w	r2, #0
 8005bb6:	f04f 0300 	mov.w	r3, #0
 8005bba:	e9d7 4500 	ldrd	r4, r5, [r7]
 8005bbe:	4629      	mov	r1, r5
 8005bc0:	028b      	lsls	r3, r1, #10
 8005bc2:	4621      	mov	r1, r4
 8005bc4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005bc8:	4621      	mov	r1, r4
 8005bca:	028a      	lsls	r2, r1, #10
 8005bcc:	4610      	mov	r0, r2
 8005bce:	4619      	mov	r1, r3
 8005bd0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005bd2:	2200      	movs	r2, #0
 8005bd4:	60bb      	str	r3, [r7, #8]
 8005bd6:	60fa      	str	r2, [r7, #12]
 8005bd8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8005bdc:	f7fa ff86 	bl	8000aec <__aeabi_uldivmod>
 8005be0:	4602      	mov	r2, r0
 8005be2:	460b      	mov	r3, r1
 8005be4:	4613      	mov	r3, r2
 8005be6:	63fb      	str	r3, [r7, #60]	; 0x3c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8005be8:	4b0b      	ldr	r3, [pc, #44]	; (8005c18 <HAL_RCC_GetSysClockFreq+0x180>)
 8005bea:	685b      	ldr	r3, [r3, #4]
 8005bec:	0c1b      	lsrs	r3, r3, #16
 8005bee:	f003 0303 	and.w	r3, r3, #3
 8005bf2:	3301      	adds	r3, #1
 8005bf4:	005b      	lsls	r3, r3, #1
 8005bf6:	633b      	str	r3, [r7, #48]	; 0x30

      sysclockfreq = pllvco / pllp;
 8005bf8:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8005bfa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005bfc:	fbb2 f3f3 	udiv	r3, r2, r3
 8005c00:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8005c02:	e002      	b.n	8005c0a <HAL_RCC_GetSysClockFreq+0x172>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8005c04:	4b05      	ldr	r3, [pc, #20]	; (8005c1c <HAL_RCC_GetSysClockFreq+0x184>)
 8005c06:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8005c08:	bf00      	nop
    }
  }
  return sysclockfreq;
 8005c0a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
}
 8005c0c:	4618      	mov	r0, r3
 8005c0e:	3740      	adds	r7, #64	; 0x40
 8005c10:	46bd      	mov	sp, r7
 8005c12:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005c16:	bf00      	nop
 8005c18:	40023800 	.word	0x40023800
 8005c1c:	00f42400 	.word	0x00f42400
 8005c20:	016e3600 	.word	0x016e3600

08005c24 <HAL_RCC_NMI_IRQHandler>:
  * @brief This function handles the RCC CSS interrupt request.
  * @note This API should be called under the NMI_Handler().
  * @retval None
  */
void HAL_RCC_NMI_IRQHandler(void)
{
 8005c24:	b580      	push	{r7, lr}
 8005c26:	af00      	add	r7, sp, #0
  /* Check RCC CSSF flag  */
  if (__HAL_RCC_GET_IT(RCC_IT_CSS))
 8005c28:	4b06      	ldr	r3, [pc, #24]	; (8005c44 <HAL_RCC_NMI_IRQHandler+0x20>)
 8005c2a:	68db      	ldr	r3, [r3, #12]
 8005c2c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005c30:	2b80      	cmp	r3, #128	; 0x80
 8005c32:	d104      	bne.n	8005c3e <HAL_RCC_NMI_IRQHandler+0x1a>
  {
    /* RCC Clock Security System interrupt user callback */
    HAL_RCC_CSSCallback();
 8005c34:	f000 f80a 	bl	8005c4c <HAL_RCC_CSSCallback>

    /* Clear RCC CSS pending bit */
    __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 8005c38:	4b03      	ldr	r3, [pc, #12]	; (8005c48 <HAL_RCC_NMI_IRQHandler+0x24>)
 8005c3a:	2280      	movs	r2, #128	; 0x80
 8005c3c:	701a      	strb	r2, [r3, #0]
  }
}
 8005c3e:	bf00      	nop
 8005c40:	bd80      	pop	{r7, pc}
 8005c42:	bf00      	nop
 8005c44:	40023800 	.word	0x40023800
 8005c48:	4002380e 	.word	0x4002380e

08005c4c <HAL_RCC_CSSCallback>:
/**
  * @brief  RCC Clock Security System interrupt callback
  * @retval None
  */
__weak void HAL_RCC_CSSCallback(void)
{
 8005c4c:	b480      	push	{r7}
 8005c4e:	af00      	add	r7, sp, #0
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_RCC_CSSCallback could be implemented in the user file
   */
}
 8005c50:	bf00      	nop
 8005c52:	46bd      	mov	sp, r7
 8005c54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c58:	4770      	bx	lr
	...

08005c5c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8005c5c:	b580      	push	{r7, lr}
 8005c5e:	b088      	sub	sp, #32
 8005c60:	af00      	add	r7, sp, #0
 8005c62:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0;
 8005c64:	2300      	movs	r3, #0
 8005c66:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg0 = 0;
 8005c68:	2300      	movs	r3, #0
 8005c6a:	613b      	str	r3, [r7, #16]
  uint32_t tmpreg1 = 0;
 8005c6c:	2300      	movs	r3, #0
 8005c6e:	60fb      	str	r3, [r7, #12]
  uint32_t plli2sused = 0;
 8005c70:	2300      	movs	r3, #0
 8005c72:	61fb      	str	r3, [r7, #28]
  uint32_t pllsaiused = 0;
 8005c74:	2300      	movs	r3, #0
 8005c76:	61bb      	str	r3, [r7, #24]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005c78:	687b      	ldr	r3, [r7, #4]
 8005c7a:	681b      	ldr	r3, [r3, #0]
 8005c7c:	f003 0301 	and.w	r3, r3, #1
 8005c80:	2b00      	cmp	r3, #0
 8005c82:	d012      	beq.n	8005caa <HAL_RCCEx_PeriphCLKConfig+0x4e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8005c84:	4b69      	ldr	r3, [pc, #420]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005c86:	689b      	ldr	r3, [r3, #8]
 8005c88:	4a68      	ldr	r2, [pc, #416]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005c8a:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8005c8e:	6093      	str	r3, [r2, #8]
 8005c90:	4b66      	ldr	r3, [pc, #408]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005c92:	689a      	ldr	r2, [r3, #8]
 8005c94:	687b      	ldr	r3, [r7, #4]
 8005c96:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005c98:	4964      	ldr	r1, [pc, #400]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005c9a:	4313      	orrs	r3, r2
 8005c9c:	608b      	str	r3, [r1, #8]

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 8005c9e:	687b      	ldr	r3, [r7, #4]
 8005ca0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005ca2:	2b00      	cmp	r3, #0
 8005ca4:	d101      	bne.n	8005caa <HAL_RCCEx_PeriphCLKConfig+0x4e>
    {
      plli2sused = 1;
 8005ca6:	2301      	movs	r3, #1
 8005ca8:	61fb      	str	r3, [r7, #28]
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 8005caa:	687b      	ldr	r3, [r7, #4]
 8005cac:	681b      	ldr	r3, [r3, #0]
 8005cae:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8005cb2:	2b00      	cmp	r3, #0
 8005cb4:	d017      	beq.n	8005ce6 <HAL_RCCEx_PeriphCLKConfig+0x8a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8005cb6:	4b5d      	ldr	r3, [pc, #372]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005cb8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005cbc:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8005cc0:	687b      	ldr	r3, [r7, #4]
 8005cc2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005cc4:	4959      	ldr	r1, [pc, #356]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005cc6:	4313      	orrs	r3, r2
 8005cc8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005cd0:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8005cd4:	d101      	bne.n	8005cda <HAL_RCCEx_PeriphCLKConfig+0x7e>
    {
      plli2sused = 1;
 8005cd6:	2301      	movs	r3, #1
 8005cd8:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005cde:	2b00      	cmp	r3, #0
 8005ce0:	d101      	bne.n	8005ce6 <HAL_RCCEx_PeriphCLKConfig+0x8a>
    {
      pllsaiused = 1;
 8005ce2:	2301      	movs	r3, #1
 8005ce4:	61bb      	str	r3, [r7, #24]
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 8005ce6:	687b      	ldr	r3, [r7, #4]
 8005ce8:	681b      	ldr	r3, [r3, #0]
 8005cea:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005cee:	2b00      	cmp	r3, #0
 8005cf0:	d017      	beq.n	8005d22 <HAL_RCCEx_PeriphCLKConfig+0xc6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8005cf2:	4b4e      	ldr	r3, [pc, #312]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005cf4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005cf8:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8005cfc:	687b      	ldr	r3, [r7, #4]
 8005cfe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d00:	494a      	ldr	r1, [pc, #296]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005d02:	4313      	orrs	r3, r2
 8005d04:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8005d08:	687b      	ldr	r3, [r7, #4]
 8005d0a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d0c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005d10:	d101      	bne.n	8005d16 <HAL_RCCEx_PeriphCLKConfig+0xba>
    {
      plli2sused = 1;
 8005d12:	2301      	movs	r3, #1
 8005d14:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
 8005d16:	687b      	ldr	r3, [r7, #4]
 8005d18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d1a:	2b00      	cmp	r3, #0
 8005d1c:	d101      	bne.n	8005d22 <HAL_RCCEx_PeriphCLKConfig+0xc6>
    {
      pllsaiused = 1;
 8005d1e:	2301      	movs	r3, #1
 8005d20:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8005d22:	687b      	ldr	r3, [r7, #4]
 8005d24:	681b      	ldr	r3, [r3, #0]
 8005d26:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005d2a:	2b00      	cmp	r3, #0
 8005d2c:	d001      	beq.n	8005d32 <HAL_RCCEx_PeriphCLKConfig+0xd6>
  {
      plli2sused = 1;
 8005d2e:	2301      	movs	r3, #1
 8005d30:	61fb      	str	r3, [r7, #28]
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005d32:	687b      	ldr	r3, [r7, #4]
 8005d34:	681b      	ldr	r3, [r3, #0]
 8005d36:	f003 0320 	and.w	r3, r3, #32
 8005d3a:	2b00      	cmp	r3, #0
 8005d3c:	f000 808b 	beq.w	8005e56 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8005d40:	4b3a      	ldr	r3, [pc, #232]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005d42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d44:	4a39      	ldr	r2, [pc, #228]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005d46:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005d4a:	6413      	str	r3, [r2, #64]	; 0x40
 8005d4c:	4b37      	ldr	r3, [pc, #220]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005d4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d50:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005d54:	60bb      	str	r3, [r7, #8]
 8005d56:	68bb      	ldr	r3, [r7, #8]

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8005d58:	4b35      	ldr	r3, [pc, #212]	; (8005e30 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8005d5a:	681b      	ldr	r3, [r3, #0]
 8005d5c:	4a34      	ldr	r2, [pc, #208]	; (8005e30 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8005d5e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005d62:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8005d64:	f7fd fb06 	bl	8003374 <HAL_GetTick>
 8005d68:	6178      	str	r0, [r7, #20]

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8005d6a:	e008      	b.n	8005d7e <HAL_RCCEx_PeriphCLKConfig+0x122>
    {
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005d6c:	f7fd fb02 	bl	8003374 <HAL_GetTick>
 8005d70:	4602      	mov	r2, r0
 8005d72:	697b      	ldr	r3, [r7, #20]
 8005d74:	1ad3      	subs	r3, r2, r3
 8005d76:	2b64      	cmp	r3, #100	; 0x64
 8005d78:	d901      	bls.n	8005d7e <HAL_RCCEx_PeriphCLKConfig+0x122>
      {
        return HAL_TIMEOUT;
 8005d7a:	2303      	movs	r3, #3
 8005d7c:	e357      	b.n	800642e <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8005d7e:	4b2c      	ldr	r3, [pc, #176]	; (8005e30 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8005d80:	681b      	ldr	r3, [r3, #0]
 8005d82:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005d86:	2b00      	cmp	r3, #0
 8005d88:	d0f0      	beq.n	8005d6c <HAL_RCCEx_PeriphCLKConfig+0x110>
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8005d8a:	4b28      	ldr	r3, [pc, #160]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005d8c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005d8e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005d92:	613b      	str	r3, [r7, #16]

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005d94:	693b      	ldr	r3, [r7, #16]
 8005d96:	2b00      	cmp	r3, #0
 8005d98:	d035      	beq.n	8005e06 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8005d9a:	687b      	ldr	r3, [r7, #4]
 8005d9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005d9e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005da2:	693a      	ldr	r2, [r7, #16]
 8005da4:	429a      	cmp	r2, r3
 8005da6:	d02e      	beq.n	8005e06 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005da8:	4b20      	ldr	r3, [pc, #128]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005daa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005dac:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005db0:	613b      	str	r3, [r7, #16]

      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8005db2:	4b1e      	ldr	r3, [pc, #120]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005db4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005db6:	4a1d      	ldr	r2, [pc, #116]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005db8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005dbc:	6713      	str	r3, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8005dbe:	4b1b      	ldr	r3, [pc, #108]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005dc0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005dc2:	4a1a      	ldr	r2, [pc, #104]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005dc4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005dc8:	6713      	str	r3, [r2, #112]	; 0x70

      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg0;
 8005dca:	4a18      	ldr	r2, [pc, #96]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005dcc:	693b      	ldr	r3, [r7, #16]
 8005dce:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8005dd0:	4b16      	ldr	r3, [pc, #88]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005dd2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005dd4:	f003 0301 	and.w	r3, r3, #1
 8005dd8:	2b01      	cmp	r3, #1
 8005dda:	d114      	bne.n	8005e06 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005ddc:	f7fd faca 	bl	8003374 <HAL_GetTick>
 8005de0:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005de2:	e00a      	b.n	8005dfa <HAL_RCCEx_PeriphCLKConfig+0x19e>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005de4:	f7fd fac6 	bl	8003374 <HAL_GetTick>
 8005de8:	4602      	mov	r2, r0
 8005dea:	697b      	ldr	r3, [r7, #20]
 8005dec:	1ad3      	subs	r3, r2, r3
 8005dee:	f241 3288 	movw	r2, #5000	; 0x1388
 8005df2:	4293      	cmp	r3, r2
 8005df4:	d901      	bls.n	8005dfa <HAL_RCCEx_PeriphCLKConfig+0x19e>
          {
            return HAL_TIMEOUT;
 8005df6:	2303      	movs	r3, #3
 8005df8:	e319      	b.n	800642e <HAL_RCCEx_PeriphCLKConfig+0x7d2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005dfa:	4b0c      	ldr	r3, [pc, #48]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005dfc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005dfe:	f003 0302 	and.w	r3, r3, #2
 8005e02:	2b00      	cmp	r3, #0
 8005e04:	d0ee      	beq.n	8005de4 <HAL_RCCEx_PeriphCLKConfig+0x188>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005e06:	687b      	ldr	r3, [r7, #4]
 8005e08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e0a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005e0e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8005e12:	d111      	bne.n	8005e38 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8005e14:	4b05      	ldr	r3, [pc, #20]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005e16:	689b      	ldr	r3, [r3, #8]
 8005e18:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8005e1c:	687b      	ldr	r3, [r7, #4]
 8005e1e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8005e20:	4b04      	ldr	r3, [pc, #16]	; (8005e34 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8005e22:	400b      	ands	r3, r1
 8005e24:	4901      	ldr	r1, [pc, #4]	; (8005e2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005e26:	4313      	orrs	r3, r2
 8005e28:	608b      	str	r3, [r1, #8]
 8005e2a:	e00b      	b.n	8005e44 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8005e2c:	40023800 	.word	0x40023800
 8005e30:	40007000 	.word	0x40007000
 8005e34:	0ffffcff 	.word	0x0ffffcff
 8005e38:	4baa      	ldr	r3, [pc, #680]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005e3a:	689b      	ldr	r3, [r3, #8]
 8005e3c:	4aa9      	ldr	r2, [pc, #676]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005e3e:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8005e42:	6093      	str	r3, [r2, #8]
 8005e44:	4ba7      	ldr	r3, [pc, #668]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005e46:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8005e48:	687b      	ldr	r3, [r7, #4]
 8005e4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e4c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005e50:	49a4      	ldr	r1, [pc, #656]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005e52:	4313      	orrs	r3, r2
 8005e54:	670b      	str	r3, [r1, #112]	; 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8005e56:	687b      	ldr	r3, [r7, #4]
 8005e58:	681b      	ldr	r3, [r3, #0]
 8005e5a:	f003 0310 	and.w	r3, r3, #16
 8005e5e:	2b00      	cmp	r3, #0
 8005e60:	d010      	beq.n	8005e84 <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005e62:	4ba0      	ldr	r3, [pc, #640]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005e64:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005e68:	4a9e      	ldr	r2, [pc, #632]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005e6a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8005e6e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 8005e72:	4b9c      	ldr	r3, [pc, #624]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005e74:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8005e78:	687b      	ldr	r3, [r7, #4]
 8005e7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005e7c:	4999      	ldr	r1, [pc, #612]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005e7e:	4313      	orrs	r3, r2
 8005e80:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8005e84:	687b      	ldr	r3, [r7, #4]
 8005e86:	681b      	ldr	r3, [r3, #0]
 8005e88:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005e8c:	2b00      	cmp	r3, #0
 8005e8e:	d00a      	beq.n	8005ea6 <HAL_RCCEx_PeriphCLKConfig+0x24a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8005e90:	4b94      	ldr	r3, [pc, #592]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005e92:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005e96:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8005e9a:	687b      	ldr	r3, [r7, #4]
 8005e9c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005e9e:	4991      	ldr	r1, [pc, #580]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005ea0:	4313      	orrs	r3, r2
 8005ea2:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8005ea6:	687b      	ldr	r3, [r7, #4]
 8005ea8:	681b      	ldr	r3, [r3, #0]
 8005eaa:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8005eae:	2b00      	cmp	r3, #0
 8005eb0:	d00a      	beq.n	8005ec8 <HAL_RCCEx_PeriphCLKConfig+0x26c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8005eb2:	4b8c      	ldr	r3, [pc, #560]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005eb4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005eb8:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8005ebc:	687b      	ldr	r3, [r7, #4]
 8005ebe:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8005ec0:	4988      	ldr	r1, [pc, #544]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005ec2:	4313      	orrs	r3, r2
 8005ec4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8005ec8:	687b      	ldr	r3, [r7, #4]
 8005eca:	681b      	ldr	r3, [r3, #0]
 8005ecc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005ed0:	2b00      	cmp	r3, #0
 8005ed2:	d00a      	beq.n	8005eea <HAL_RCCEx_PeriphCLKConfig+0x28e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8005ed4:	4b83      	ldr	r3, [pc, #524]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005ed6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005eda:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8005ede:	687b      	ldr	r3, [r7, #4]
 8005ee0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005ee2:	4980      	ldr	r1, [pc, #512]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005ee4:	4313      	orrs	r3, r2
 8005ee6:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8005eea:	687b      	ldr	r3, [r7, #4]
 8005eec:	681b      	ldr	r3, [r3, #0]
 8005eee:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005ef2:	2b00      	cmp	r3, #0
 8005ef4:	d00a      	beq.n	8005f0c <HAL_RCCEx_PeriphCLKConfig+0x2b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8005ef6:	4b7b      	ldr	r3, [pc, #492]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005ef8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005efc:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8005f00:	687b      	ldr	r3, [r7, #4]
 8005f02:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005f04:	4977      	ldr	r1, [pc, #476]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005f06:	4313      	orrs	r3, r2
 8005f08:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	681b      	ldr	r3, [r3, #0]
 8005f10:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005f14:	2b00      	cmp	r3, #0
 8005f16:	d00a      	beq.n	8005f2e <HAL_RCCEx_PeriphCLKConfig+0x2d2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8005f18:	4b72      	ldr	r3, [pc, #456]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005f1a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005f1e:	f023 0203 	bic.w	r2, r3, #3
 8005f22:	687b      	ldr	r3, [r7, #4]
 8005f24:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005f26:	496f      	ldr	r1, [pc, #444]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005f28:	4313      	orrs	r3, r2
 8005f2a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8005f2e:	687b      	ldr	r3, [r7, #4]
 8005f30:	681b      	ldr	r3, [r3, #0]
 8005f32:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005f36:	2b00      	cmp	r3, #0
 8005f38:	d00a      	beq.n	8005f50 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8005f3a:	4b6a      	ldr	r3, [pc, #424]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005f3c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005f40:	f023 020c 	bic.w	r2, r3, #12
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005f48:	4966      	ldr	r1, [pc, #408]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005f4a:	4313      	orrs	r3, r2
 8005f4c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8005f50:	687b      	ldr	r3, [r7, #4]
 8005f52:	681b      	ldr	r3, [r3, #0]
 8005f54:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005f58:	2b00      	cmp	r3, #0
 8005f5a:	d00a      	beq.n	8005f72 <HAL_RCCEx_PeriphCLKConfig+0x316>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8005f5c:	4b61      	ldr	r3, [pc, #388]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005f5e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005f62:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8005f66:	687b      	ldr	r3, [r7, #4]
 8005f68:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005f6a:	495e      	ldr	r1, [pc, #376]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005f6c:	4313      	orrs	r3, r2
 8005f6e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8005f72:	687b      	ldr	r3, [r7, #4]
 8005f74:	681b      	ldr	r3, [r3, #0]
 8005f76:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005f7a:	2b00      	cmp	r3, #0
 8005f7c:	d00a      	beq.n	8005f94 <HAL_RCCEx_PeriphCLKConfig+0x338>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8005f7e:	4b59      	ldr	r3, [pc, #356]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005f80:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005f84:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8005f88:	687b      	ldr	r3, [r7, #4]
 8005f8a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005f8c:	4955      	ldr	r1, [pc, #340]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005f8e:	4313      	orrs	r3, r2
 8005f90:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8005f94:	687b      	ldr	r3, [r7, #4]
 8005f96:	681b      	ldr	r3, [r3, #0]
 8005f98:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005f9c:	2b00      	cmp	r3, #0
 8005f9e:	d00a      	beq.n	8005fb6 <HAL_RCCEx_PeriphCLKConfig+0x35a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8005fa0:	4b50      	ldr	r3, [pc, #320]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005fa2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005fa6:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8005faa:	687b      	ldr	r3, [r7, #4]
 8005fac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005fae:	494d      	ldr	r1, [pc, #308]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005fb0:	4313      	orrs	r3, r2
 8005fb2:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8005fb6:	687b      	ldr	r3, [r7, #4]
 8005fb8:	681b      	ldr	r3, [r3, #0]
 8005fba:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8005fbe:	2b00      	cmp	r3, #0
 8005fc0:	d00a      	beq.n	8005fd8 <HAL_RCCEx_PeriphCLKConfig+0x37c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 8005fc2:	4b48      	ldr	r3, [pc, #288]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005fc4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005fc8:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8005fcc:	687b      	ldr	r3, [r7, #4]
 8005fce:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005fd0:	4944      	ldr	r1, [pc, #272]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005fd2:	4313      	orrs	r3, r2
 8005fd4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8005fd8:	687b      	ldr	r3, [r7, #4]
 8005fda:	681b      	ldr	r3, [r3, #0]
 8005fdc:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8005fe0:	2b00      	cmp	r3, #0
 8005fe2:	d00a      	beq.n	8005ffa <HAL_RCCEx_PeriphCLKConfig+0x39e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8005fe4:	4b3f      	ldr	r3, [pc, #252]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005fe6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005fea:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8005fee:	687b      	ldr	r3, [r7, #4]
 8005ff0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005ff2:	493c      	ldr	r1, [pc, #240]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005ff4:	4313      	orrs	r3, r2
 8005ff6:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8005ffa:	687b      	ldr	r3, [r7, #4]
 8005ffc:	681b      	ldr	r3, [r3, #0]
 8005ffe:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8006002:	2b00      	cmp	r3, #0
 8006004:	d00a      	beq.n	800601c <HAL_RCCEx_PeriphCLKConfig+0x3c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8006006:	4b37      	ldr	r3, [pc, #220]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006008:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800600c:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8006010:	687b      	ldr	r3, [r7, #4]
 8006012:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006014:	4933      	ldr	r1, [pc, #204]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006016:	4313      	orrs	r3, r2
 8006018:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 800601c:	687b      	ldr	r3, [r7, #4]
 800601e:	681b      	ldr	r3, [r3, #0]
 8006020:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006024:	2b00      	cmp	r3, #0
 8006026:	d00a      	beq.n	800603e <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8006028:	4b2e      	ldr	r3, [pc, #184]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800602a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800602e:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 8006032:	687b      	ldr	r3, [r7, #4]
 8006034:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8006036:	492b      	ldr	r1, [pc, #172]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006038:	4313      	orrs	r3, r2
 800603a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800603e:	687b      	ldr	r3, [r7, #4]
 8006040:	681b      	ldr	r3, [r3, #0]
 8006042:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8006046:	2b00      	cmp	r3, #0
 8006048:	d011      	beq.n	800606e <HAL_RCCEx_PeriphCLKConfig+0x412>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800604a:	4b26      	ldr	r3, [pc, #152]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800604c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8006050:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 8006054:	687b      	ldr	r3, [r7, #4]
 8006056:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8006058:	4922      	ldr	r1, [pc, #136]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800605a:	4313      	orrs	r3, r2
 800605c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
 8006060:	687b      	ldr	r3, [r7, #4]
 8006062:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8006064:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8006068:	d101      	bne.n	800606e <HAL_RCCEx_PeriphCLKConfig+0x412>
    {
      pllsaiused = 1;
 800606a:	2301      	movs	r3, #1
 800606c:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 800606e:	687b      	ldr	r3, [r7, #4]
 8006070:	681b      	ldr	r3, [r3, #0]
 8006072:	f003 0308 	and.w	r3, r3, #8
 8006076:	2b00      	cmp	r3, #0
 8006078:	d001      	beq.n	800607e <HAL_RCCEx_PeriphCLKConfig+0x422>
  {
    pllsaiused = 1;
 800607a:	2301      	movs	r3, #1
 800607c:	61bb      	str	r3, [r7, #24]
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 800607e:	687b      	ldr	r3, [r7, #4]
 8006080:	681b      	ldr	r3, [r3, #0]
 8006082:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8006086:	2b00      	cmp	r3, #0
 8006088:	d00a      	beq.n	80060a0 <HAL_RCCEx_PeriphCLKConfig+0x444>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 800608a:	4b16      	ldr	r3, [pc, #88]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800608c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8006090:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 8006094:	687b      	ldr	r3, [r7, #4]
 8006096:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8006098:	4912      	ldr	r1, [pc, #72]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800609a:	4313      	orrs	r3, r2
 800609c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 80060a0:	687b      	ldr	r3, [r7, #4]
 80060a2:	681b      	ldr	r3, [r3, #0]
 80060a4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80060a8:	2b00      	cmp	r3, #0
 80060aa:	d00b      	beq.n	80060c4 <HAL_RCCEx_PeriphCLKConfig+0x468>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 80060ac:	4b0d      	ldr	r3, [pc, #52]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80060ae:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80060b2:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 80060b6:	687b      	ldr	r3, [r7, #4]
 80060b8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80060bc:	4909      	ldr	r1, [pc, #36]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80060be:	4313      	orrs	r3, r2
 80060c0:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 80060c4:	69fb      	ldr	r3, [r7, #28]
 80060c6:	2b01      	cmp	r3, #1
 80060c8:	d006      	beq.n	80060d8 <HAL_RCCEx_PeriphCLKConfig+0x47c>
 80060ca:	687b      	ldr	r3, [r7, #4]
 80060cc:	681b      	ldr	r3, [r3, #0]
 80060ce:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80060d2:	2b00      	cmp	r3, #0
 80060d4:	f000 80d9 	beq.w	800628a <HAL_RCCEx_PeriphCLKConfig+0x62e>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 80060d8:	4b02      	ldr	r3, [pc, #8]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80060da:	681b      	ldr	r3, [r3, #0]
 80060dc:	4a01      	ldr	r2, [pc, #4]	; (80060e4 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80060de:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80060e2:	e001      	b.n	80060e8 <HAL_RCCEx_PeriphCLKConfig+0x48c>
 80060e4:	40023800 	.word	0x40023800
 80060e8:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80060ea:	f7fd f943 	bl	8003374 <HAL_GetTick>
 80060ee:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80060f0:	e008      	b.n	8006104 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80060f2:	f7fd f93f 	bl	8003374 <HAL_GetTick>
 80060f6:	4602      	mov	r2, r0
 80060f8:	697b      	ldr	r3, [r7, #20]
 80060fa:	1ad3      	subs	r3, r2, r3
 80060fc:	2b64      	cmp	r3, #100	; 0x64
 80060fe:	d901      	bls.n	8006104 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006100:	2303      	movs	r3, #3
 8006102:	e194      	b.n	800642e <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006104:	4b6c      	ldr	r3, [pc, #432]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006106:	681b      	ldr	r3, [r3, #0]
 8006108:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800610c:	2b00      	cmp	r3, #0
 800610e:	d1f0      	bne.n	80060f2 <HAL_RCCEx_PeriphCLKConfig+0x496>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8006110:	687b      	ldr	r3, [r7, #4]
 8006112:	681b      	ldr	r3, [r3, #0]
 8006114:	f003 0301 	and.w	r3, r3, #1
 8006118:	2b00      	cmp	r3, #0
 800611a:	d021      	beq.n	8006160 <HAL_RCCEx_PeriphCLKConfig+0x504>
 800611c:	687b      	ldr	r3, [r7, #4]
 800611e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006120:	2b00      	cmp	r3, #0
 8006122:	d11d      	bne.n	8006160 <HAL_RCCEx_PeriphCLKConfig+0x504>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8006124:	4b64      	ldr	r3, [pc, #400]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006126:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800612a:	0c1b      	lsrs	r3, r3, #16
 800612c:	f003 0303 	and.w	r3, r3, #3
 8006130:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8006132:	4b61      	ldr	r3, [pc, #388]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006134:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006138:	0e1b      	lsrs	r3, r3, #24
 800613a:	f003 030f 	and.w	r3, r3, #15
 800613e:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8006140:	687b      	ldr	r3, [r7, #4]
 8006142:	685b      	ldr	r3, [r3, #4]
 8006144:	019a      	lsls	r2, r3, #6
 8006146:	693b      	ldr	r3, [r7, #16]
 8006148:	041b      	lsls	r3, r3, #16
 800614a:	431a      	orrs	r2, r3
 800614c:	68fb      	ldr	r3, [r7, #12]
 800614e:	061b      	lsls	r3, r3, #24
 8006150:	431a      	orrs	r2, r3
 8006152:	687b      	ldr	r3, [r7, #4]
 8006154:	689b      	ldr	r3, [r3, #8]
 8006156:	071b      	lsls	r3, r3, #28
 8006158:	4957      	ldr	r1, [pc, #348]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 800615a:	4313      	orrs	r3, r2
 800615c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8006160:	687b      	ldr	r3, [r7, #4]
 8006162:	681b      	ldr	r3, [r3, #0]
 8006164:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8006168:	2b00      	cmp	r3, #0
 800616a:	d004      	beq.n	8006176 <HAL_RCCEx_PeriphCLKConfig+0x51a>
 800616c:	687b      	ldr	r3, [r7, #4]
 800616e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006170:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8006174:	d00a      	beq.n	800618c <HAL_RCCEx_PeriphCLKConfig+0x530>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8006176:	687b      	ldr	r3, [r7, #4]
 8006178:	681b      	ldr	r3, [r3, #0]
 800617a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 800617e:	2b00      	cmp	r3, #0
 8006180:	d02e      	beq.n	80061e0 <HAL_RCCEx_PeriphCLKConfig+0x584>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8006182:	687b      	ldr	r3, [r7, #4]
 8006184:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006186:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800618a:	d129      	bne.n	80061e0 <HAL_RCCEx_PeriphCLKConfig+0x584>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      /* Check for PLLI2S/DIVQ parameters */
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SP and PLLI2SR values from PLLI2SCFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 800618c:	4b4a      	ldr	r3, [pc, #296]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 800618e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006192:	0c1b      	lsrs	r3, r3, #16
 8006194:	f003 0303 	and.w	r3, r3, #3
 8006198:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800619a:	4b47      	ldr	r3, [pc, #284]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 800619c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80061a0:	0f1b      	lsrs	r3, r3, #28
 80061a2:	f003 0307 	and.w	r3, r3, #7
 80061a6:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 80061a8:	687b      	ldr	r3, [r7, #4]
 80061aa:	685b      	ldr	r3, [r3, #4]
 80061ac:	019a      	lsls	r2, r3, #6
 80061ae:	693b      	ldr	r3, [r7, #16]
 80061b0:	041b      	lsls	r3, r3, #16
 80061b2:	431a      	orrs	r2, r3
 80061b4:	687b      	ldr	r3, [r7, #4]
 80061b6:	68db      	ldr	r3, [r3, #12]
 80061b8:	061b      	lsls	r3, r3, #24
 80061ba:	431a      	orrs	r2, r3
 80061bc:	68fb      	ldr	r3, [r7, #12]
 80061be:	071b      	lsls	r3, r3, #28
 80061c0:	493d      	ldr	r1, [pc, #244]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80061c2:	4313      	orrs	r3, r2
 80061c4:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84

      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80061c8:	4b3b      	ldr	r3, [pc, #236]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80061ca:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80061ce:	f023 021f 	bic.w	r2, r3, #31
 80061d2:	687b      	ldr	r3, [r7, #4]
 80061d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80061d6:	3b01      	subs	r3, #1
 80061d8:	4937      	ldr	r1, [pc, #220]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80061da:	4313      	orrs	r3, r2
 80061dc:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80061e0:	687b      	ldr	r3, [r7, #4]
 80061e2:	681b      	ldr	r3, [r3, #0]
 80061e4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80061e8:	2b00      	cmp	r3, #0
 80061ea:	d01d      	beq.n	8006228 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 80061ec:	4b32      	ldr	r3, [pc, #200]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80061ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80061f2:	0e1b      	lsrs	r3, r3, #24
 80061f4:	f003 030f 	and.w	r3, r3, #15
 80061f8:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80061fa:	4b2f      	ldr	r3, [pc, #188]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80061fc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006200:	0f1b      	lsrs	r3, r3, #28
 8006202:	f003 0307 	and.w	r3, r3, #7
 8006206:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8006208:	687b      	ldr	r3, [r7, #4]
 800620a:	685b      	ldr	r3, [r3, #4]
 800620c:	019a      	lsls	r2, r3, #6
 800620e:	687b      	ldr	r3, [r7, #4]
 8006210:	691b      	ldr	r3, [r3, #16]
 8006212:	041b      	lsls	r3, r3, #16
 8006214:	431a      	orrs	r2, r3
 8006216:	693b      	ldr	r3, [r7, #16]
 8006218:	061b      	lsls	r3, r3, #24
 800621a:	431a      	orrs	r2, r3
 800621c:	68fb      	ldr	r3, [r7, #12]
 800621e:	071b      	lsls	r3, r3, #28
 8006220:	4925      	ldr	r1, [pc, #148]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006222:	4313      	orrs	r3, r2
 8006224:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006228:	687b      	ldr	r3, [r7, #4]
 800622a:	681b      	ldr	r3, [r3, #0]
 800622c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006230:	2b00      	cmp	r3, #0
 8006232:	d011      	beq.n	8006258 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));

      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLI2SM) */
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006234:	687b      	ldr	r3, [r7, #4]
 8006236:	685b      	ldr	r3, [r3, #4]
 8006238:	019a      	lsls	r2, r3, #6
 800623a:	687b      	ldr	r3, [r7, #4]
 800623c:	691b      	ldr	r3, [r3, #16]
 800623e:	041b      	lsls	r3, r3, #16
 8006240:	431a      	orrs	r2, r3
 8006242:	687b      	ldr	r3, [r7, #4]
 8006244:	68db      	ldr	r3, [r3, #12]
 8006246:	061b      	lsls	r3, r3, #24
 8006248:	431a      	orrs	r2, r3
 800624a:	687b      	ldr	r3, [r7, #4]
 800624c:	689b      	ldr	r3, [r3, #8]
 800624e:	071b      	lsls	r3, r3, #28
 8006250:	4919      	ldr	r1, [pc, #100]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006252:	4313      	orrs	r3, r2
 8006254:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8006258:	4b17      	ldr	r3, [pc, #92]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 800625a:	681b      	ldr	r3, [r3, #0]
 800625c:	4a16      	ldr	r2, [pc, #88]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 800625e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8006262:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006264:	f7fd f886 	bl	8003374 <HAL_GetTick>
 8006268:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800626a:	e008      	b.n	800627e <HAL_RCCEx_PeriphCLKConfig+0x622>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800626c:	f7fd f882 	bl	8003374 <HAL_GetTick>
 8006270:	4602      	mov	r2, r0
 8006272:	697b      	ldr	r3, [r7, #20]
 8006274:	1ad3      	subs	r3, r2, r3
 8006276:	2b64      	cmp	r3, #100	; 0x64
 8006278:	d901      	bls.n	800627e <HAL_RCCEx_PeriphCLKConfig+0x622>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 800627a:	2303      	movs	r3, #3
 800627c:	e0d7      	b.n	800642e <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800627e:	4b0e      	ldr	r3, [pc, #56]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006280:	681b      	ldr	r3, [r3, #0]
 8006282:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8006286:	2b00      	cmp	r3, #0
 8006288:	d0f0      	beq.n	800626c <HAL_RCCEx_PeriphCLKConfig+0x610>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 800628a:	69bb      	ldr	r3, [r7, #24]
 800628c:	2b01      	cmp	r3, #1
 800628e:	f040 80cd 	bne.w	800642c <HAL_RCCEx_PeriphCLKConfig+0x7d0>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006292:	4b09      	ldr	r3, [pc, #36]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006294:	681b      	ldr	r3, [r3, #0]
 8006296:	4a08      	ldr	r2, [pc, #32]	; (80062b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006298:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800629c:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800629e:	f7fd f869 	bl	8003374 <HAL_GetTick>
 80062a2:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80062a4:	e00a      	b.n	80062bc <HAL_RCCEx_PeriphCLKConfig+0x660>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80062a6:	f7fd f865 	bl	8003374 <HAL_GetTick>
 80062aa:	4602      	mov	r2, r0
 80062ac:	697b      	ldr	r3, [r7, #20]
 80062ae:	1ad3      	subs	r3, r2, r3
 80062b0:	2b64      	cmp	r3, #100	; 0x64
 80062b2:	d903      	bls.n	80062bc <HAL_RCCEx_PeriphCLKConfig+0x660>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 80062b4:	2303      	movs	r3, #3
 80062b6:	e0ba      	b.n	800642e <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 80062b8:	40023800 	.word	0x40023800
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80062bc:	4b5e      	ldr	r3, [pc, #376]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80062be:	681b      	ldr	r3, [r3, #0]
 80062c0:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80062c4:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80062c8:	d0ed      	beq.n	80062a6 <HAL_RCCEx_PeriphCLKConfig+0x64a>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 80062ca:	687b      	ldr	r3, [r7, #4]
 80062cc:	681b      	ldr	r3, [r3, #0]
 80062ce:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80062d2:	2b00      	cmp	r3, #0
 80062d4:	d003      	beq.n	80062de <HAL_RCCEx_PeriphCLKConfig+0x682>
 80062d6:	687b      	ldr	r3, [r7, #4]
 80062d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80062da:	2b00      	cmp	r3, #0
 80062dc:	d009      	beq.n	80062f2 <HAL_RCCEx_PeriphCLKConfig+0x696>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 80062de:	687b      	ldr	r3, [r7, #4]
 80062e0:	681b      	ldr	r3, [r3, #0]
 80062e2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 80062e6:	2b00      	cmp	r3, #0
 80062e8:	d02e      	beq.n	8006348 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 80062ea:	687b      	ldr	r3, [r7, #4]
 80062ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80062ee:	2b00      	cmp	r3, #0
 80062f0:	d12a      	bne.n	8006348 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 80062f2:	4b51      	ldr	r3, [pc, #324]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80062f4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80062f8:	0c1b      	lsrs	r3, r3, #16
 80062fa:	f003 0303 	and.w	r3, r3, #3
 80062fe:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006300:	4b4d      	ldr	r3, [pc, #308]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006302:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006306:	0f1b      	lsrs	r3, r3, #28
 8006308:	f003 0307 	and.w	r3, r3, #7
 800630c:	60fb      	str	r3, [r7, #12]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800630e:	687b      	ldr	r3, [r7, #4]
 8006310:	695b      	ldr	r3, [r3, #20]
 8006312:	019a      	lsls	r2, r3, #6
 8006314:	693b      	ldr	r3, [r7, #16]
 8006316:	041b      	lsls	r3, r3, #16
 8006318:	431a      	orrs	r2, r3
 800631a:	687b      	ldr	r3, [r7, #4]
 800631c:	699b      	ldr	r3, [r3, #24]
 800631e:	061b      	lsls	r3, r3, #24
 8006320:	431a      	orrs	r2, r3
 8006322:	68fb      	ldr	r3, [r7, #12]
 8006324:	071b      	lsls	r3, r3, #28
 8006326:	4944      	ldr	r1, [pc, #272]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006328:	4313      	orrs	r3, r2
 800632a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800632e:	4b42      	ldr	r3, [pc, #264]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006330:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006334:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8006338:	687b      	ldr	r3, [r7, #4]
 800633a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800633c:	3b01      	subs	r3, #1
 800633e:	021b      	lsls	r3, r3, #8
 8006340:	493d      	ldr	r1, [pc, #244]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006342:	4313      	orrs	r3, r2
 8006344:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 8006348:	687b      	ldr	r3, [r7, #4]
 800634a:	681b      	ldr	r3, [r3, #0]
 800634c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8006350:	2b00      	cmp	r3, #0
 8006352:	d022      	beq.n	800639a <HAL_RCCEx_PeriphCLKConfig+0x73e>
 8006354:	687b      	ldr	r3, [r7, #4]
 8006356:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8006358:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800635c:	d11d      	bne.n	800639a <HAL_RCCEx_PeriphCLKConfig+0x73e>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800635e:	4b36      	ldr	r3, [pc, #216]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006360:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006364:	0e1b      	lsrs	r3, r3, #24
 8006366:	f003 030f 	and.w	r3, r3, #15
 800636a:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800636c:	4b32      	ldr	r3, [pc, #200]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800636e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006372:	0f1b      	lsrs	r3, r3, #28
 8006374:	f003 0307 	and.w	r3, r3, #7
 8006378:	60fb      	str	r3, [r7, #12]

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 800637a:	687b      	ldr	r3, [r7, #4]
 800637c:	695b      	ldr	r3, [r3, #20]
 800637e:	019a      	lsls	r2, r3, #6
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	6a1b      	ldr	r3, [r3, #32]
 8006384:	041b      	lsls	r3, r3, #16
 8006386:	431a      	orrs	r2, r3
 8006388:	693b      	ldr	r3, [r7, #16]
 800638a:	061b      	lsls	r3, r3, #24
 800638c:	431a      	orrs	r2, r3
 800638e:	68fb      	ldr	r3, [r7, #12]
 8006390:	071b      	lsls	r3, r3, #28
 8006392:	4929      	ldr	r1, [pc, #164]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006394:	4313      	orrs	r3, r2
 8006396:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800639a:	687b      	ldr	r3, [r7, #4]
 800639c:	681b      	ldr	r3, [r3, #0]
 800639e:	f003 0308 	and.w	r3, r3, #8
 80063a2:	2b00      	cmp	r3, #0
 80063a4:	d028      	beq.n	80063f8 <HAL_RCCEx_PeriphCLKConfig+0x79c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80063a6:	4b24      	ldr	r3, [pc, #144]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80063a8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80063ac:	0e1b      	lsrs	r3, r3, #24
 80063ae:	f003 030f 	and.w	r3, r3, #15
 80063b2:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 80063b4:	4b20      	ldr	r3, [pc, #128]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80063b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80063ba:	0c1b      	lsrs	r3, r3, #16
 80063bc:	f003 0303 	and.w	r3, r3, #3
 80063c0:	60fb      	str	r3, [r7, #12]

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 80063c2:	687b      	ldr	r3, [r7, #4]
 80063c4:	695b      	ldr	r3, [r3, #20]
 80063c6:	019a      	lsls	r2, r3, #6
 80063c8:	68fb      	ldr	r3, [r7, #12]
 80063ca:	041b      	lsls	r3, r3, #16
 80063cc:	431a      	orrs	r2, r3
 80063ce:	693b      	ldr	r3, [r7, #16]
 80063d0:	061b      	lsls	r3, r3, #24
 80063d2:	431a      	orrs	r2, r3
 80063d4:	687b      	ldr	r3, [r7, #4]
 80063d6:	69db      	ldr	r3, [r3, #28]
 80063d8:	071b      	lsls	r3, r3, #28
 80063da:	4917      	ldr	r1, [pc, #92]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80063dc:	4313      	orrs	r3, r2
 80063de:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80063e2:	4b15      	ldr	r3, [pc, #84]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80063e4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80063e8:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80063ec:	687b      	ldr	r3, [r7, #4]
 80063ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80063f0:	4911      	ldr	r1, [pc, #68]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80063f2:	4313      	orrs	r3, r2
 80063f4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80063f8:	4b0f      	ldr	r3, [pc, #60]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80063fa:	681b      	ldr	r3, [r3, #0]
 80063fc:	4a0e      	ldr	r2, [pc, #56]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80063fe:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006402:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006404:	f7fc ffb6 	bl	8003374 <HAL_GetTick>
 8006408:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800640a:	e008      	b.n	800641e <HAL_RCCEx_PeriphCLKConfig+0x7c2>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800640c:	f7fc ffb2 	bl	8003374 <HAL_GetTick>
 8006410:	4602      	mov	r2, r0
 8006412:	697b      	ldr	r3, [r7, #20]
 8006414:	1ad3      	subs	r3, r2, r3
 8006416:	2b64      	cmp	r3, #100	; 0x64
 8006418:	d901      	bls.n	800641e <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 800641a:	2303      	movs	r3, #3
 800641c:	e007      	b.n	800642e <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800641e:	4b06      	ldr	r3, [pc, #24]	; (8006438 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006420:	681b      	ldr	r3, [r3, #0]
 8006422:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8006426:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800642a:	d1ef      	bne.n	800640c <HAL_RCCEx_PeriphCLKConfig+0x7b0>
      }
    }
  }
  return HAL_OK;
 800642c:	2300      	movs	r3, #0
}
 800642e:	4618      	mov	r0, r3
 8006430:	3720      	adds	r7, #32
 8006432:	46bd      	mov	sp, r7
 8006434:	bd80      	pop	{r7, pc}
 8006436:	bf00      	nop
 8006438:	40023800 	.word	0x40023800

0800643c <HAL_RCCEx_GetPeriphCLKFreq>:
  *            @arg RCC_PERIPHCLK_SAI1: SAI1 peripheral clock
  *            @arg RCC_PERIPHCLK_SAI2: SAI2 peripheral clock
  * @retval Frequency in KHz
  */
uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint32_t PeriphClk)
{
 800643c:	b480      	push	{r7}
 800643e:	b087      	sub	sp, #28
 8006440:	af00      	add	r7, sp, #0
 8006442:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg = 0;
 8006444:	2300      	movs	r3, #0
 8006446:	60fb      	str	r3, [r7, #12]
  /* This variable is used to store the SAI clock frequency (value in Hz) */
  uint32_t frequency = 0;
 8006448:	2300      	movs	r3, #0
 800644a:	617b      	str	r3, [r7, #20]
  /* This variable is used to store the VCO Input (value in Hz) */
  uint32_t vcoinput = 0;
 800644c:	2300      	movs	r3, #0
 800644e:	613b      	str	r3, [r7, #16]
  /* This variable is used to store the SAI clock source */
  uint32_t saiclocksource = 0;
 8006450:	2300      	movs	r3, #0
 8006452:	60bb      	str	r3, [r7, #8]

  if (PeriphClk == RCC_PERIPHCLK_SAI1)
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 800645a:	f040 808d 	bne.w	8006578 <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
  {
    saiclocksource = RCC->DCKCFGR1;
 800645e:	4b93      	ldr	r3, [pc, #588]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 8006460:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006464:	60bb      	str	r3, [r7, #8]
    saiclocksource &= RCC_DCKCFGR1_SAI1SEL;
 8006466:	68bb      	ldr	r3, [r7, #8]
 8006468:	f403 1340 	and.w	r3, r3, #3145728	; 0x300000
 800646c:	60bb      	str	r3, [r7, #8]
    switch (saiclocksource)
 800646e:	68bb      	ldr	r3, [r7, #8]
 8006470:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8006474:	d07c      	beq.n	8006570 <HAL_RCCEx_GetPeriphCLKFreq+0x134>
 8006476:	68bb      	ldr	r3, [r7, #8]
 8006478:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 800647c:	d87b      	bhi.n	8006576 <HAL_RCCEx_GetPeriphCLKFreq+0x13a>
 800647e:	68bb      	ldr	r3, [r7, #8]
 8006480:	2b00      	cmp	r3, #0
 8006482:	d004      	beq.n	800648e <HAL_RCCEx_GetPeriphCLKFreq+0x52>
 8006484:	68bb      	ldr	r3, [r7, #8]
 8006486:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800648a:	d039      	beq.n	8006500 <HAL_RCCEx_GetPeriphCLKFreq+0xc4>
        break;
      }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */
    default :
      {
        break;
 800648c:	e073      	b.n	8006576 <HAL_RCCEx_GetPeriphCLKFreq+0x13a>
        if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 800648e:	4b87      	ldr	r3, [pc, #540]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 8006490:	685b      	ldr	r3, [r3, #4]
 8006492:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006496:	2b00      	cmp	r3, #0
 8006498:	d108      	bne.n	80064ac <HAL_RCCEx_GetPeriphCLKFreq+0x70>
          vcoinput = (HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 800649a:	4b84      	ldr	r3, [pc, #528]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 800649c:	685b      	ldr	r3, [r3, #4]
 800649e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80064a2:	4a83      	ldr	r2, [pc, #524]	; (80066b0 <HAL_RCCEx_GetPeriphCLKFreq+0x274>)
 80064a4:	fbb2 f3f3 	udiv	r3, r2, r3
 80064a8:	613b      	str	r3, [r7, #16]
 80064aa:	e007      	b.n	80064bc <HAL_RCCEx_GetPeriphCLKFreq+0x80>
          vcoinput = ((HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM)));
 80064ac:	4b7f      	ldr	r3, [pc, #508]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 80064ae:	685b      	ldr	r3, [r3, #4]
 80064b0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80064b4:	4a7f      	ldr	r2, [pc, #508]	; (80066b4 <HAL_RCCEx_GetPeriphCLKFreq+0x278>)
 80064b6:	fbb2 f3f3 	udiv	r3, r2, r3
 80064ba:	613b      	str	r3, [r7, #16]
        tmpreg = (RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> 24;
 80064bc:	4b7b      	ldr	r3, [pc, #492]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 80064be:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80064c2:	0e1b      	lsrs	r3, r3, #24
 80064c4:	f003 030f 	and.w	r3, r3, #15
 80064c8:	60fb      	str	r3, [r7, #12]
        frequency = (vcoinput * ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIN) >> 6))/(tmpreg);
 80064ca:	4b78      	ldr	r3, [pc, #480]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 80064cc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80064d0:	099b      	lsrs	r3, r3, #6
 80064d2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80064d6:	693a      	ldr	r2, [r7, #16]
 80064d8:	fb03 f202 	mul.w	r2, r3, r2
 80064dc:	68fb      	ldr	r3, [r7, #12]
 80064de:	fbb2 f3f3 	udiv	r3, r2, r3
 80064e2:	617b      	str	r3, [r7, #20]
        tmpreg = (((RCC->DCKCFGR1 & RCC_DCKCFGR1_PLLSAIDIVQ) >> 8) + 1);
 80064e4:	4b71      	ldr	r3, [pc, #452]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 80064e6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80064ea:	0a1b      	lsrs	r3, r3, #8
 80064ec:	f003 031f 	and.w	r3, r3, #31
 80064f0:	3301      	adds	r3, #1
 80064f2:	60fb      	str	r3, [r7, #12]
        frequency = frequency/(tmpreg);
 80064f4:	697a      	ldr	r2, [r7, #20]
 80064f6:	68fb      	ldr	r3, [r7, #12]
 80064f8:	fbb2 f3f3 	udiv	r3, r2, r3
 80064fc:	617b      	str	r3, [r7, #20]
        break;
 80064fe:	e03b      	b.n	8006578 <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
        if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 8006500:	4b6a      	ldr	r3, [pc, #424]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 8006502:	685b      	ldr	r3, [r3, #4]
 8006504:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006508:	2b00      	cmp	r3, #0
 800650a:	d108      	bne.n	800651e <HAL_RCCEx_GetPeriphCLKFreq+0xe2>
          vcoinput = (HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 800650c:	4b67      	ldr	r3, [pc, #412]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 800650e:	685b      	ldr	r3, [r3, #4]
 8006510:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006514:	4a66      	ldr	r2, [pc, #408]	; (80066b0 <HAL_RCCEx_GetPeriphCLKFreq+0x274>)
 8006516:	fbb2 f3f3 	udiv	r3, r2, r3
 800651a:	613b      	str	r3, [r7, #16]
 800651c:	e007      	b.n	800652e <HAL_RCCEx_GetPeriphCLKFreq+0xf2>
          vcoinput = ((HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM)));
 800651e:	4b63      	ldr	r3, [pc, #396]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 8006520:	685b      	ldr	r3, [r3, #4]
 8006522:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006526:	4a63      	ldr	r2, [pc, #396]	; (80066b4 <HAL_RCCEx_GetPeriphCLKFreq+0x278>)
 8006528:	fbb2 f3f3 	udiv	r3, r2, r3
 800652c:	613b      	str	r3, [r7, #16]
        tmpreg = (RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> 24;
 800652e:	4b5f      	ldr	r3, [pc, #380]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 8006530:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006534:	0e1b      	lsrs	r3, r3, #24
 8006536:	f003 030f 	and.w	r3, r3, #15
 800653a:	60fb      	str	r3, [r7, #12]
        frequency = (vcoinput * ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6))/(tmpreg);
 800653c:	4b5b      	ldr	r3, [pc, #364]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 800653e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006542:	099b      	lsrs	r3, r3, #6
 8006544:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006548:	693a      	ldr	r2, [r7, #16]
 800654a:	fb03 f202 	mul.w	r2, r3, r2
 800654e:	68fb      	ldr	r3, [r7, #12]
 8006550:	fbb2 f3f3 	udiv	r3, r2, r3
 8006554:	617b      	str	r3, [r7, #20]
        tmpreg = ((RCC->DCKCFGR1 & RCC_DCKCFGR1_PLLI2SDIVQ) + 1);
 8006556:	4b55      	ldr	r3, [pc, #340]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 8006558:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800655c:	f003 031f 	and.w	r3, r3, #31
 8006560:	3301      	adds	r3, #1
 8006562:	60fb      	str	r3, [r7, #12]
        frequency = frequency/(tmpreg);
 8006564:	697a      	ldr	r2, [r7, #20]
 8006566:	68fb      	ldr	r3, [r7, #12]
 8006568:	fbb2 f3f3 	udiv	r3, r2, r3
 800656c:	617b      	str	r3, [r7, #20]
        break;
 800656e:	e003      	b.n	8006578 <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
        frequency = EXTERNAL_CLOCK_VALUE;
 8006570:	4b51      	ldr	r3, [pc, #324]	; (80066b8 <HAL_RCCEx_GetPeriphCLKFreq+0x27c>)
 8006572:	617b      	str	r3, [r7, #20]
        break;
 8006574:	e000      	b.n	8006578 <HAL_RCCEx_GetPeriphCLKFreq+0x13c>
        break;
 8006576:	bf00      	nop
      }
    }
  }

  if (PeriphClk == RCC_PERIPHCLK_SAI2)
 8006578:	687b      	ldr	r3, [r7, #4]
 800657a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800657e:	f040 808d 	bne.w	800669c <HAL_RCCEx_GetPeriphCLKFreq+0x260>
  {
    saiclocksource = RCC->DCKCFGR1;
 8006582:	4b4a      	ldr	r3, [pc, #296]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 8006584:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006588:	60bb      	str	r3, [r7, #8]
    saiclocksource &= RCC_DCKCFGR1_SAI2SEL;
 800658a:	68bb      	ldr	r3, [r7, #8]
 800658c:	f403 0340 	and.w	r3, r3, #12582912	; 0xc00000
 8006590:	60bb      	str	r3, [r7, #8]
    switch (saiclocksource)
 8006592:	68bb      	ldr	r3, [r7, #8]
 8006594:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8006598:	d07c      	beq.n	8006694 <HAL_RCCEx_GetPeriphCLKFreq+0x258>
 800659a:	68bb      	ldr	r3, [r7, #8]
 800659c:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80065a0:	d87b      	bhi.n	800669a <HAL_RCCEx_GetPeriphCLKFreq+0x25e>
 80065a2:	68bb      	ldr	r3, [r7, #8]
 80065a4:	2b00      	cmp	r3, #0
 80065a6:	d004      	beq.n	80065b2 <HAL_RCCEx_GetPeriphCLKFreq+0x176>
 80065a8:	68bb      	ldr	r3, [r7, #8]
 80065aa:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80065ae:	d039      	beq.n	8006624 <HAL_RCCEx_GetPeriphCLKFreq+0x1e8>
        break;
      }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */
    default :
      {
        break;
 80065b0:	e073      	b.n	800669a <HAL_RCCEx_GetPeriphCLKFreq+0x25e>
        if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 80065b2:	4b3e      	ldr	r3, [pc, #248]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 80065b4:	685b      	ldr	r3, [r3, #4]
 80065b6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80065ba:	2b00      	cmp	r3, #0
 80065bc:	d108      	bne.n	80065d0 <HAL_RCCEx_GetPeriphCLKFreq+0x194>
          vcoinput = (HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 80065be:	4b3b      	ldr	r3, [pc, #236]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 80065c0:	685b      	ldr	r3, [r3, #4]
 80065c2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80065c6:	4a3a      	ldr	r2, [pc, #232]	; (80066b0 <HAL_RCCEx_GetPeriphCLKFreq+0x274>)
 80065c8:	fbb2 f3f3 	udiv	r3, r2, r3
 80065cc:	613b      	str	r3, [r7, #16]
 80065ce:	e007      	b.n	80065e0 <HAL_RCCEx_GetPeriphCLKFreq+0x1a4>
          vcoinput = ((HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM)));
 80065d0:	4b36      	ldr	r3, [pc, #216]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 80065d2:	685b      	ldr	r3, [r3, #4]
 80065d4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80065d8:	4a36      	ldr	r2, [pc, #216]	; (80066b4 <HAL_RCCEx_GetPeriphCLKFreq+0x278>)
 80065da:	fbb2 f3f3 	udiv	r3, r2, r3
 80065de:	613b      	str	r3, [r7, #16]
        tmpreg = (RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> 24;
 80065e0:	4b32      	ldr	r3, [pc, #200]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 80065e2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80065e6:	0e1b      	lsrs	r3, r3, #24
 80065e8:	f003 030f 	and.w	r3, r3, #15
 80065ec:	60fb      	str	r3, [r7, #12]
        frequency = (vcoinput * ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIN) >> 6))/(tmpreg);
 80065ee:	4b2f      	ldr	r3, [pc, #188]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 80065f0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80065f4:	099b      	lsrs	r3, r3, #6
 80065f6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80065fa:	693a      	ldr	r2, [r7, #16]
 80065fc:	fb03 f202 	mul.w	r2, r3, r2
 8006600:	68fb      	ldr	r3, [r7, #12]
 8006602:	fbb2 f3f3 	udiv	r3, r2, r3
 8006606:	617b      	str	r3, [r7, #20]
        tmpreg = (((RCC->DCKCFGR1 & RCC_DCKCFGR1_PLLSAIDIVQ) >> 8) + 1);
 8006608:	4b28      	ldr	r3, [pc, #160]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 800660a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800660e:	0a1b      	lsrs	r3, r3, #8
 8006610:	f003 031f 	and.w	r3, r3, #31
 8006614:	3301      	adds	r3, #1
 8006616:	60fb      	str	r3, [r7, #12]
        frequency = frequency/(tmpreg);
 8006618:	697a      	ldr	r2, [r7, #20]
 800661a:	68fb      	ldr	r3, [r7, #12]
 800661c:	fbb2 f3f3 	udiv	r3, r2, r3
 8006620:	617b      	str	r3, [r7, #20]
        break;
 8006622:	e03b      	b.n	800669c <HAL_RCCEx_GetPeriphCLKFreq+0x260>
        if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLSOURCE_HSI)
 8006624:	4b21      	ldr	r3, [pc, #132]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 8006626:	685b      	ldr	r3, [r3, #4]
 8006628:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800662c:	2b00      	cmp	r3, #0
 800662e:	d108      	bne.n	8006642 <HAL_RCCEx_GetPeriphCLKFreq+0x206>
          vcoinput = (HSI_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM));
 8006630:	4b1e      	ldr	r3, [pc, #120]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 8006632:	685b      	ldr	r3, [r3, #4]
 8006634:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006638:	4a1d      	ldr	r2, [pc, #116]	; (80066b0 <HAL_RCCEx_GetPeriphCLKFreq+0x274>)
 800663a:	fbb2 f3f3 	udiv	r3, r2, r3
 800663e:	613b      	str	r3, [r7, #16]
 8006640:	e007      	b.n	8006652 <HAL_RCCEx_GetPeriphCLKFreq+0x216>
          vcoinput = ((HSE_VALUE / (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM)));
 8006642:	4b1a      	ldr	r3, [pc, #104]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 8006644:	685b      	ldr	r3, [r3, #4]
 8006646:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800664a:	4a1a      	ldr	r2, [pc, #104]	; (80066b4 <HAL_RCCEx_GetPeriphCLKFreq+0x278>)
 800664c:	fbb2 f3f3 	udiv	r3, r2, r3
 8006650:	613b      	str	r3, [r7, #16]
        tmpreg = (RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> 24;
 8006652:	4b16      	ldr	r3, [pc, #88]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 8006654:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006658:	0e1b      	lsrs	r3, r3, #24
 800665a:	f003 030f 	and.w	r3, r3, #15
 800665e:	60fb      	str	r3, [r7, #12]
        frequency = (vcoinput * ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SN) >> 6))/(tmpreg);
 8006660:	4b12      	ldr	r3, [pc, #72]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 8006662:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006666:	099b      	lsrs	r3, r3, #6
 8006668:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800666c:	693a      	ldr	r2, [r7, #16]
 800666e:	fb03 f202 	mul.w	r2, r3, r2
 8006672:	68fb      	ldr	r3, [r7, #12]
 8006674:	fbb2 f3f3 	udiv	r3, r2, r3
 8006678:	617b      	str	r3, [r7, #20]
        tmpreg = ((RCC->DCKCFGR1 & RCC_DCKCFGR1_PLLI2SDIVQ) + 1);
 800667a:	4b0c      	ldr	r3, [pc, #48]	; (80066ac <HAL_RCCEx_GetPeriphCLKFreq+0x270>)
 800667c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006680:	f003 031f 	and.w	r3, r3, #31
 8006684:	3301      	adds	r3, #1
 8006686:	60fb      	str	r3, [r7, #12]
        frequency = frequency/(tmpreg);
 8006688:	697a      	ldr	r2, [r7, #20]
 800668a:	68fb      	ldr	r3, [r7, #12]
 800668c:	fbb2 f3f3 	udiv	r3, r2, r3
 8006690:	617b      	str	r3, [r7, #20]
        break;
 8006692:	e003      	b.n	800669c <HAL_RCCEx_GetPeriphCLKFreq+0x260>
        frequency = EXTERNAL_CLOCK_VALUE;
 8006694:	4b08      	ldr	r3, [pc, #32]	; (80066b8 <HAL_RCCEx_GetPeriphCLKFreq+0x27c>)
 8006696:	617b      	str	r3, [r7, #20]
        break;
 8006698:	e000      	b.n	800669c <HAL_RCCEx_GetPeriphCLKFreq+0x260>
        break;
 800669a:	bf00      	nop
      }
    }
  }

  return frequency;
 800669c:	697b      	ldr	r3, [r7, #20]
}
 800669e:	4618      	mov	r0, r3
 80066a0:	371c      	adds	r7, #28
 80066a2:	46bd      	mov	sp, r7
 80066a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066a8:	4770      	bx	lr
 80066aa:	bf00      	nop
 80066ac:	40023800 	.word	0x40023800
 80066b0:	00f42400 	.word	0x00f42400
 80066b4:	016e3600 	.word	0x016e3600
 80066b8:	00bb8000 	.word	0x00bb8000

080066bc <HAL_SAI_InitProtocol>:
  *                   the configuration information for SAI module.
  * @param  nbslot Number of slot.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SAI_InitProtocol(SAI_HandleTypeDef *hsai, uint32_t protocol, uint32_t datasize, uint32_t nbslot)
{
 80066bc:	b580      	push	{r7, lr}
 80066be:	b086      	sub	sp, #24
 80066c0:	af00      	add	r7, sp, #0
 80066c2:	60f8      	str	r0, [r7, #12]
 80066c4:	60b9      	str	r1, [r7, #8]
 80066c6:	607a      	str	r2, [r7, #4]
 80066c8:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80066ca:	2300      	movs	r3, #0
 80066cc:	75fb      	strb	r3, [r7, #23]

  /* Check the parameters */
  assert_param(IS_SAI_SUPPORTED_PROTOCOL(protocol));
  assert_param(IS_SAI_PROTOCOL_DATASIZE(datasize));

  switch (protocol)
 80066ce:	68bb      	ldr	r3, [r7, #8]
 80066d0:	2b02      	cmp	r3, #2
 80066d2:	d904      	bls.n	80066de <HAL_SAI_InitProtocol+0x22>
 80066d4:	68bb      	ldr	r3, [r7, #8]
 80066d6:	3b03      	subs	r3, #3
 80066d8:	2b01      	cmp	r3, #1
 80066da:	d812      	bhi.n	8006702 <HAL_SAI_InitProtocol+0x46>
 80066dc:	e008      	b.n	80066f0 <HAL_SAI_InitProtocol+0x34>
  {
    case SAI_I2S_STANDARD :
    case SAI_I2S_MSBJUSTIFIED :
    case SAI_I2S_LSBJUSTIFIED :
      status = SAI_InitI2S(hsai, protocol, datasize, nbslot);
 80066de:	683b      	ldr	r3, [r7, #0]
 80066e0:	687a      	ldr	r2, [r7, #4]
 80066e2:	68b9      	ldr	r1, [r7, #8]
 80066e4:	68f8      	ldr	r0, [r7, #12]
 80066e6:	f000 faf7 	bl	8006cd8 <SAI_InitI2S>
 80066ea:	4603      	mov	r3, r0
 80066ec:	75fb      	strb	r3, [r7, #23]
      break;
 80066ee:	e00b      	b.n	8006708 <HAL_SAI_InitProtocol+0x4c>
    case SAI_PCM_LONG :
    case SAI_PCM_SHORT :
      status = SAI_InitPCM(hsai, protocol, datasize, nbslot);
 80066f0:	683b      	ldr	r3, [r7, #0]
 80066f2:	687a      	ldr	r2, [r7, #4]
 80066f4:	68b9      	ldr	r1, [r7, #8]
 80066f6:	68f8      	ldr	r0, [r7, #12]
 80066f8:	f000 fb9c 	bl	8006e34 <SAI_InitPCM>
 80066fc:	4603      	mov	r3, r0
 80066fe:	75fb      	strb	r3, [r7, #23]
      break;
 8006700:	e002      	b.n	8006708 <HAL_SAI_InitProtocol+0x4c>
    default :
      status = HAL_ERROR;
 8006702:	2301      	movs	r3, #1
 8006704:	75fb      	strb	r3, [r7, #23]
      break;
 8006706:	bf00      	nop
  }

  if (status == HAL_OK)
 8006708:	7dfb      	ldrb	r3, [r7, #23]
 800670a:	2b00      	cmp	r3, #0
 800670c:	d104      	bne.n	8006718 <HAL_SAI_InitProtocol+0x5c>
  {
    status = HAL_SAI_Init(hsai);
 800670e:	68f8      	ldr	r0, [r7, #12]
 8006710:	f000 f808 	bl	8006724 <HAL_SAI_Init>
 8006714:	4603      	mov	r3, r0
 8006716:	75fb      	strb	r3, [r7, #23]
  }

  return status;
 8006718:	7dfb      	ldrb	r3, [r7, #23]
}
 800671a:	4618      	mov	r0, r3
 800671c:	3718      	adds	r7, #24
 800671e:	46bd      	mov	sp, r7
 8006720:	bd80      	pop	{r7, pc}
	...

08006724 <HAL_SAI_Init>:
  * @param  hsai pointer to a SAI_HandleTypeDef structure that contains
  *                the configuration information for SAI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SAI_Init(SAI_HandleTypeDef *hsai)
{
 8006724:	b580      	push	{r7, lr}
 8006726:	b088      	sub	sp, #32
 8006728:	af00      	add	r7, sp, #0
 800672a:	6078      	str	r0, [r7, #4]
  uint32_t tmpregisterGCR = 0;
 800672c:	2300      	movs	r3, #0
 800672e:	61fb      	str	r3, [r7, #28]
  uint32_t ckstr_bits = 0;
 8006730:	2300      	movs	r3, #0
 8006732:	61bb      	str	r3, [r7, #24]
  uint32_t syncen_bits = 0;
 8006734:	2300      	movs	r3, #0
 8006736:	617b      	str	r3, [r7, #20]

  /* Check the SAI handle allocation */
  if (hsai == NULL)
 8006738:	687b      	ldr	r3, [r7, #4]
 800673a:	2b00      	cmp	r3, #0
 800673c:	d101      	bne.n	8006742 <HAL_SAI_Init+0x1e>
  {
    return HAL_ERROR;
 800673e:	2301      	movs	r3, #1
 8006740:	e156      	b.n	80069f0 <HAL_SAI_Init+0x2cc>
  assert_param(IS_SAI_BLOCK_FIRSTBIT_OFFSET(hsai->SlotInit.FirstBitOffset));
  assert_param(IS_SAI_BLOCK_SLOT_SIZE(hsai->SlotInit.SlotSize));
  assert_param(IS_SAI_BLOCK_SLOT_NUMBER(hsai->SlotInit.SlotNumber));
  assert_param(IS_SAI_SLOT_ACTIVE(hsai->SlotInit.SlotActive));

  if (hsai->State == HAL_SAI_STATE_RESET)
 8006742:	687b      	ldr	r3, [r7, #4]
 8006744:	f893 307d 	ldrb.w	r3, [r3, #125]	; 0x7d
 8006748:	b2db      	uxtb	r3, r3
 800674a:	2b00      	cmp	r3, #0
 800674c:	d106      	bne.n	800675c <HAL_SAI_Init+0x38>
  {
    /* Allocate lock resource and initialize it */
    hsai->Lock = HAL_UNLOCKED;
 800674e:	687b      	ldr	r3, [r7, #4]
 8006750:	2200      	movs	r2, #0
 8006752:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
      hsai->MspInitCallback = HAL_SAI_MspInit;
    }
    hsai->MspInitCallback(hsai);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_SAI_MspInit(hsai);
 8006756:	6878      	ldr	r0, [r7, #4]
 8006758:	f7fc f9f4 	bl	8002b44 <HAL_SAI_MspInit>
#endif /* USE_HAL_SAI_REGISTER_CALLBACKS */
  }

  hsai->State = HAL_SAI_STATE_BUSY;
 800675c:	687b      	ldr	r3, [r7, #4]
 800675e:	2202      	movs	r2, #2
 8006760:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d

  /* Disable the selected SAI peripheral */
  SAI_Disable(hsai);
 8006764:	6878      	ldr	r0, [r7, #4]
 8006766:	f000 fc1b 	bl	8006fa0 <SAI_Disable>

  /* SAI Block Synchro Configuration -----------------------------------------*/
  /* This setting must be done with both audio block (A & B) disabled         */
  switch (hsai->Init.SynchroExt)
 800676a:	687b      	ldr	r3, [r7, #4]
 800676c:	68db      	ldr	r3, [r3, #12]
 800676e:	2b02      	cmp	r3, #2
 8006770:	d00c      	beq.n	800678c <HAL_SAI_Init+0x68>
 8006772:	2b02      	cmp	r3, #2
 8006774:	d80d      	bhi.n	8006792 <HAL_SAI_Init+0x6e>
 8006776:	2b00      	cmp	r3, #0
 8006778:	d002      	beq.n	8006780 <HAL_SAI_Init+0x5c>
 800677a:	2b01      	cmp	r3, #1
 800677c:	d003      	beq.n	8006786 <HAL_SAI_Init+0x62>
      break;
    case SAI_SYNCEXT_OUTBLOCKB_ENABLE :
      tmpregisterGCR = SAI_GCR_SYNCOUT_1;
      break;
    default:
      break;
 800677e:	e008      	b.n	8006792 <HAL_SAI_Init+0x6e>
      tmpregisterGCR = 0;
 8006780:	2300      	movs	r3, #0
 8006782:	61fb      	str	r3, [r7, #28]
      break;
 8006784:	e006      	b.n	8006794 <HAL_SAI_Init+0x70>
      tmpregisterGCR = SAI_GCR_SYNCOUT_0;
 8006786:	2310      	movs	r3, #16
 8006788:	61fb      	str	r3, [r7, #28]
      break;
 800678a:	e003      	b.n	8006794 <HAL_SAI_Init+0x70>
      tmpregisterGCR = SAI_GCR_SYNCOUT_1;
 800678c:	2320      	movs	r3, #32
 800678e:	61fb      	str	r3, [r7, #28]
      break;
 8006790:	e000      	b.n	8006794 <HAL_SAI_Init+0x70>
      break;
 8006792:	bf00      	nop
  }

  switch (hsai->Init.Synchro)
 8006794:	687b      	ldr	r3, [r7, #4]
 8006796:	689b      	ldr	r3, [r3, #8]
 8006798:	2b03      	cmp	r3, #3
 800679a:	d81e      	bhi.n	80067da <HAL_SAI_Init+0xb6>
 800679c:	a201      	add	r2, pc, #4	; (adr r2, 80067a4 <HAL_SAI_Init+0x80>)
 800679e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80067a2:	bf00      	nop
 80067a4:	080067b5 	.word	0x080067b5
 80067a8:	080067bb 	.word	0x080067bb
 80067ac:	080067c3 	.word	0x080067c3
 80067b0:	080067cb 	.word	0x080067cb
  {
    case SAI_ASYNCHRONOUS :
    {
      syncen_bits = 0;
 80067b4:	2300      	movs	r3, #0
 80067b6:	617b      	str	r3, [r7, #20]
    }
    break;
 80067b8:	e010      	b.n	80067dc <HAL_SAI_Init+0xb8>
    case SAI_SYNCHRONOUS :
    {
      syncen_bits = SAI_xCR1_SYNCEN_0;
 80067ba:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80067be:	617b      	str	r3, [r7, #20]
    }
    break;
 80067c0:	e00c      	b.n	80067dc <HAL_SAI_Init+0xb8>
    case SAI_SYNCHRONOUS_EXT_SAI1 :
    {
      syncen_bits = SAI_xCR1_SYNCEN_1;
 80067c2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80067c6:	617b      	str	r3, [r7, #20]
    }
    break;
 80067c8:	e008      	b.n	80067dc <HAL_SAI_Init+0xb8>
    case SAI_SYNCHRONOUS_EXT_SAI2 :
    {
      syncen_bits = SAI_xCR1_SYNCEN_1;
 80067ca:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80067ce:	617b      	str	r3, [r7, #20]
      tmpregisterGCR |= SAI_GCR_SYNCIN_0;
 80067d0:	69fb      	ldr	r3, [r7, #28]
 80067d2:	f043 0301 	orr.w	r3, r3, #1
 80067d6:	61fb      	str	r3, [r7, #28]
    }
    break;
 80067d8:	e000      	b.n	80067dc <HAL_SAI_Init+0xb8>
    default:
      break;
 80067da:	bf00      	nop
  }

  if ((hsai->Instance == SAI1_Block_A) || (hsai->Instance == SAI1_Block_B))
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	681b      	ldr	r3, [r3, #0]
 80067e0:	4a85      	ldr	r2, [pc, #532]	; (80069f8 <HAL_SAI_Init+0x2d4>)
 80067e2:	4293      	cmp	r3, r2
 80067e4:	d004      	beq.n	80067f0 <HAL_SAI_Init+0xcc>
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	681b      	ldr	r3, [r3, #0]
 80067ea:	4a84      	ldr	r2, [pc, #528]	; (80069fc <HAL_SAI_Init+0x2d8>)
 80067ec:	4293      	cmp	r3, r2
 80067ee:	d103      	bne.n	80067f8 <HAL_SAI_Init+0xd4>
  {
    SAI1->GCR = tmpregisterGCR;
 80067f0:	4a83      	ldr	r2, [pc, #524]	; (8006a00 <HAL_SAI_Init+0x2dc>)
 80067f2:	69fb      	ldr	r3, [r7, #28]
 80067f4:	6013      	str	r3, [r2, #0]
 80067f6:	e002      	b.n	80067fe <HAL_SAI_Init+0xda>
  }
  else
  {
    SAI2->GCR = tmpregisterGCR;
 80067f8:	4a82      	ldr	r2, [pc, #520]	; (8006a04 <HAL_SAI_Init+0x2e0>)
 80067fa:	69fb      	ldr	r3, [r7, #28]
 80067fc:	6013      	str	r3, [r2, #0]
  }

  if (hsai->Init.AudioFrequency != SAI_AUDIO_FREQUENCY_MCKDIV)
 80067fe:	687b      	ldr	r3, [r7, #4]
 8006800:	69db      	ldr	r3, [r3, #28]
 8006802:	2b00      	cmp	r3, #0
 8006804:	d04c      	beq.n	80068a0 <HAL_SAI_Init+0x17c>
  {
    uint32_t freq = 0;
 8006806:	2300      	movs	r3, #0
 8006808:	613b      	str	r3, [r7, #16]
    uint32_t tmpval;

    if ((hsai->Instance == SAI1_Block_A) || (hsai->Instance == SAI1_Block_B))
 800680a:	687b      	ldr	r3, [r7, #4]
 800680c:	681b      	ldr	r3, [r3, #0]
 800680e:	4a7a      	ldr	r2, [pc, #488]	; (80069f8 <HAL_SAI_Init+0x2d4>)
 8006810:	4293      	cmp	r3, r2
 8006812:	d004      	beq.n	800681e <HAL_SAI_Init+0xfa>
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	681b      	ldr	r3, [r3, #0]
 8006818:	4a78      	ldr	r2, [pc, #480]	; (80069fc <HAL_SAI_Init+0x2d8>)
 800681a:	4293      	cmp	r3, r2
 800681c:	d104      	bne.n	8006828 <HAL_SAI_Init+0x104>
    {
      freq = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_SAI1);
 800681e:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 8006822:	f7ff fe0b 	bl	800643c <HAL_RCCEx_GetPeriphCLKFreq>
 8006826:	6138      	str	r0, [r7, #16]
    }
    if ((hsai->Instance == SAI2_Block_A) || (hsai->Instance == SAI2_Block_B))
 8006828:	687b      	ldr	r3, [r7, #4]
 800682a:	681b      	ldr	r3, [r3, #0]
 800682c:	4a76      	ldr	r2, [pc, #472]	; (8006a08 <HAL_SAI_Init+0x2e4>)
 800682e:	4293      	cmp	r3, r2
 8006830:	d004      	beq.n	800683c <HAL_SAI_Init+0x118>
 8006832:	687b      	ldr	r3, [r7, #4]
 8006834:	681b      	ldr	r3, [r3, #0]
 8006836:	4a75      	ldr	r2, [pc, #468]	; (8006a0c <HAL_SAI_Init+0x2e8>)
 8006838:	4293      	cmp	r3, r2
 800683a:	d104      	bne.n	8006846 <HAL_SAI_Init+0x122>
    {
      freq = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_SAI2);
 800683c:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8006840:	f7ff fdfc 	bl	800643c <HAL_RCCEx_GetPeriphCLKFreq>
 8006844:	6138      	str	r0, [r7, #16]
    /* Configure Master Clock using the following formula :
       MCLK_x = SAI_CK_x / (MCKDIV[3:0] * 2) with MCLK_x = 256 * FS
       FS = SAI_CK_x / (MCKDIV[3:0] * 2) * 256
       MCKDIV[3:0] = SAI_CK_x / FS * 512 */
    /* (freq x 10) to keep Significant digits */
    tmpval = (freq * 10) / (hsai->Init.AudioFrequency * 2 * 256);
 8006846:	693a      	ldr	r2, [r7, #16]
 8006848:	4613      	mov	r3, r2
 800684a:	009b      	lsls	r3, r3, #2
 800684c:	4413      	add	r3, r2
 800684e:	005b      	lsls	r3, r3, #1
 8006850:	461a      	mov	r2, r3
 8006852:	687b      	ldr	r3, [r7, #4]
 8006854:	69db      	ldr	r3, [r3, #28]
 8006856:	025b      	lsls	r3, r3, #9
 8006858:	fbb2 f3f3 	udiv	r3, r2, r3
 800685c:	60fb      	str	r3, [r7, #12]
    hsai->Init.Mckdiv = tmpval / 10;
 800685e:	68fb      	ldr	r3, [r7, #12]
 8006860:	4a6b      	ldr	r2, [pc, #428]	; (8006a10 <HAL_SAI_Init+0x2ec>)
 8006862:	fba2 2303 	umull	r2, r3, r2, r3
 8006866:	08da      	lsrs	r2, r3, #3
 8006868:	687b      	ldr	r3, [r7, #4]
 800686a:	621a      	str	r2, [r3, #32]

    /* Round result to the nearest integer */
    if ((tmpval % 10) > 8)
 800686c:	68f9      	ldr	r1, [r7, #12]
 800686e:	4b68      	ldr	r3, [pc, #416]	; (8006a10 <HAL_SAI_Init+0x2ec>)
 8006870:	fba3 2301 	umull	r2, r3, r3, r1
 8006874:	08da      	lsrs	r2, r3, #3
 8006876:	4613      	mov	r3, r2
 8006878:	009b      	lsls	r3, r3, #2
 800687a:	4413      	add	r3, r2
 800687c:	005b      	lsls	r3, r3, #1
 800687e:	1aca      	subs	r2, r1, r3
 8006880:	2a08      	cmp	r2, #8
 8006882:	d904      	bls.n	800688e <HAL_SAI_Init+0x16a>
    {
      hsai->Init.Mckdiv += 1;
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	6a1b      	ldr	r3, [r3, #32]
 8006888:	1c5a      	adds	r2, r3, #1
 800688a:	687b      	ldr	r3, [r7, #4]
 800688c:	621a      	str	r2, [r3, #32]
    }

    /* For SPDIF protocol, SAI shall provide a bit clock twice faster the symbol-rate */
    if (hsai->Init.Protocol == SAI_SPDIF_PROTOCOL)
 800688e:	687b      	ldr	r3, [r7, #4]
 8006890:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006892:	2b04      	cmp	r3, #4
 8006894:	d104      	bne.n	80068a0 <HAL_SAI_Init+0x17c>
    {
      hsai->Init.Mckdiv = hsai->Init.Mckdiv >> 1;
 8006896:	687b      	ldr	r3, [r7, #4]
 8006898:	6a1b      	ldr	r3, [r3, #32]
 800689a:	085a      	lsrs	r2, r3, #1
 800689c:	687b      	ldr	r3, [r7, #4]
 800689e:	621a      	str	r2, [r3, #32]
  }
  /* Check the SAI Block master clock divider parameter */
  assert_param(IS_SAI_BLOCK_MASTER_DIVIDER(hsai->Init.Mckdiv));

  /* Compute CKSTR bits of SAI CR1 according ClockStrobing and AudioMode */
  if ((hsai->Init.AudioMode == SAI_MODEMASTER_TX) || (hsai->Init.AudioMode == SAI_MODESLAVE_TX))
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	685b      	ldr	r3, [r3, #4]
 80068a4:	2b00      	cmp	r3, #0
 80068a6:	d003      	beq.n	80068b0 <HAL_SAI_Init+0x18c>
 80068a8:	687b      	ldr	r3, [r7, #4]
 80068aa:	685b      	ldr	r3, [r3, #4]
 80068ac:	2b02      	cmp	r3, #2
 80068ae:	d109      	bne.n	80068c4 <HAL_SAI_Init+0x1a0>
  {
    /* Transmit */
    ckstr_bits = (hsai->Init.ClockStrobing == SAI_CLOCKSTROBING_RISINGEDGE) ? 0 : SAI_xCR1_CKSTR;
 80068b0:	687b      	ldr	r3, [r7, #4]
 80068b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80068b4:	2b01      	cmp	r3, #1
 80068b6:	d101      	bne.n	80068bc <HAL_SAI_Init+0x198>
 80068b8:	2300      	movs	r3, #0
 80068ba:	e001      	b.n	80068c0 <HAL_SAI_Init+0x19c>
 80068bc:	f44f 7300 	mov.w	r3, #512	; 0x200
 80068c0:	61bb      	str	r3, [r7, #24]
 80068c2:	e008      	b.n	80068d6 <HAL_SAI_Init+0x1b2>
  }
  else
  {
    /* Receive */
    ckstr_bits = (hsai->Init.ClockStrobing == SAI_CLOCKSTROBING_RISINGEDGE) ? SAI_xCR1_CKSTR : 0;
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80068c8:	2b01      	cmp	r3, #1
 80068ca:	d102      	bne.n	80068d2 <HAL_SAI_Init+0x1ae>
 80068cc:	f44f 7300 	mov.w	r3, #512	; 0x200
 80068d0:	e000      	b.n	80068d4 <HAL_SAI_Init+0x1b0>
 80068d2:	2300      	movs	r3, #0
 80068d4:	61bb      	str	r3, [r7, #24]
  }

  /* SAI Block Configuration -------------------------------------------------*/
  /* SAI CR1 Configuration */
  hsai->Instance->CR1 &= ~(SAI_xCR1_MODE | SAI_xCR1_PRTCFG |  SAI_xCR1_DS |      \
 80068d6:	687b      	ldr	r3, [r7, #4]
 80068d8:	681b      	ldr	r3, [r3, #0]
 80068da:	6819      	ldr	r1, [r3, #0]
 80068dc:	687b      	ldr	r3, [r7, #4]
 80068de:	681a      	ldr	r2, [r3, #0]
 80068e0:	4b4c      	ldr	r3, [pc, #304]	; (8006a14 <HAL_SAI_Init+0x2f0>)
 80068e2:	400b      	ands	r3, r1
 80068e4:	6013      	str	r3, [r2, #0]
                           SAI_xCR1_LSBFIRST | SAI_xCR1_CKSTR | SAI_xCR1_SYNCEN | \
                           SAI_xCR1_MONO | SAI_xCR1_OUTDRIV  | SAI_xCR1_DMAEN |  \
                           SAI_xCR1_NODIV | SAI_xCR1_MCKDIV);

  hsai->Instance->CR1 |= (hsai->Init.AudioMode | hsai->Init.Protocol |           \
 80068e6:	687b      	ldr	r3, [r7, #4]
 80068e8:	681b      	ldr	r3, [r3, #0]
 80068ea:	6819      	ldr	r1, [r3, #0]
 80068ec:	687b      	ldr	r3, [r7, #4]
 80068ee:	685a      	ldr	r2, [r3, #4]
 80068f0:	687b      	ldr	r3, [r7, #4]
 80068f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80068f4:	431a      	orrs	r2, r3
                          hsai->Init.DataSize | hsai->Init.FirstBit  |           \
 80068f6:	687b      	ldr	r3, [r7, #4]
 80068f8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  hsai->Instance->CR1 |= (hsai->Init.AudioMode | hsai->Init.Protocol |           \
 80068fa:	431a      	orrs	r2, r3
                          hsai->Init.DataSize | hsai->Init.FirstBit  |           \
 80068fc:	687b      	ldr	r3, [r7, #4]
 80068fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006900:	431a      	orrs	r2, r3
 8006902:	69bb      	ldr	r3, [r7, #24]
 8006904:	431a      	orrs	r2, r3
                          ckstr_bits | syncen_bits |                               \
 8006906:	697b      	ldr	r3, [r7, #20]
 8006908:	431a      	orrs	r2, r3
                          hsai->Init.MonoStereoMode | hsai->Init.OutputDrive |   \
 800690a:	687b      	ldr	r3, [r7, #4]
 800690c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
                          ckstr_bits | syncen_bits |                               \
 800690e:	431a      	orrs	r2, r3
                          hsai->Init.MonoStereoMode | hsai->Init.OutputDrive |   \
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	691b      	ldr	r3, [r3, #16]
 8006914:	431a      	orrs	r2, r3
                          hsai->Init.NoDivider | (hsai->Init.Mckdiv << 20));
 8006916:	687b      	ldr	r3, [r7, #4]
 8006918:	695b      	ldr	r3, [r3, #20]
                          hsai->Init.MonoStereoMode | hsai->Init.OutputDrive |   \
 800691a:	431a      	orrs	r2, r3
                          hsai->Init.NoDivider | (hsai->Init.Mckdiv << 20));
 800691c:	687b      	ldr	r3, [r7, #4]
 800691e:	6a1b      	ldr	r3, [r3, #32]
 8006920:	051b      	lsls	r3, r3, #20
 8006922:	431a      	orrs	r2, r3
  hsai->Instance->CR1 |= (hsai->Init.AudioMode | hsai->Init.Protocol |           \
 8006924:	687b      	ldr	r3, [r7, #4]
 8006926:	681b      	ldr	r3, [r3, #0]
 8006928:	430a      	orrs	r2, r1
 800692a:	601a      	str	r2, [r3, #0]

  /* SAI CR2 Configuration */
  hsai->Instance->CR2 &= ~(SAI_xCR2_FTH | SAI_xCR2_FFLUSH | SAI_xCR2_COMP | SAI_xCR2_CPL);
 800692c:	687b      	ldr	r3, [r7, #4]
 800692e:	681b      	ldr	r3, [r3, #0]
 8006930:	6859      	ldr	r1, [r3, #4]
 8006932:	687b      	ldr	r3, [r7, #4]
 8006934:	681a      	ldr	r2, [r3, #0]
 8006936:	4b38      	ldr	r3, [pc, #224]	; (8006a18 <HAL_SAI_Init+0x2f4>)
 8006938:	400b      	ands	r3, r1
 800693a:	6053      	str	r3, [r2, #4]
  hsai->Instance->CR2 |= (hsai->Init.FIFOThreshold | hsai->Init.CompandingMode | hsai->Init.TriState);
 800693c:	687b      	ldr	r3, [r7, #4]
 800693e:	681b      	ldr	r3, [r3, #0]
 8006940:	6859      	ldr	r1, [r3, #4]
 8006942:	687b      	ldr	r3, [r7, #4]
 8006944:	699a      	ldr	r2, [r3, #24]
 8006946:	687b      	ldr	r3, [r7, #4]
 8006948:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800694a:	431a      	orrs	r2, r3
 800694c:	687b      	ldr	r3, [r7, #4]
 800694e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006950:	431a      	orrs	r2, r3
 8006952:	687b      	ldr	r3, [r7, #4]
 8006954:	681b      	ldr	r3, [r3, #0]
 8006956:	430a      	orrs	r2, r1
 8006958:	605a      	str	r2, [r3, #4]

  /* SAI Frame Configuration -----------------------------------------*/
  hsai->Instance->FRCR &= (~(SAI_xFRCR_FRL | SAI_xFRCR_FSALL | SAI_xFRCR_FSDEF | \
 800695a:	687b      	ldr	r3, [r7, #4]
 800695c:	681b      	ldr	r3, [r3, #0]
 800695e:	6899      	ldr	r1, [r3, #8]
 8006960:	687b      	ldr	r3, [r7, #4]
 8006962:	681a      	ldr	r2, [r3, #0]
 8006964:	4b2d      	ldr	r3, [pc, #180]	; (8006a1c <HAL_SAI_Init+0x2f8>)
 8006966:	400b      	ands	r3, r1
 8006968:	6093      	str	r3, [r2, #8]
                             SAI_xFRCR_FSPOL | SAI_xFRCR_FSOFF));
  hsai->Instance->FRCR |= ((hsai->FrameInit.FrameLength - 1) |
 800696a:	687b      	ldr	r3, [r7, #4]
 800696c:	681b      	ldr	r3, [r3, #0]
 800696e:	6899      	ldr	r1, [r3, #8]
 8006970:	687b      	ldr	r3, [r7, #4]
 8006972:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006974:	1e5a      	subs	r2, r3, #1
                           hsai->FrameInit.FSOffset |
 8006976:	687b      	ldr	r3, [r7, #4]
 8006978:	6d1b      	ldr	r3, [r3, #80]	; 0x50
  hsai->Instance->FRCR |= ((hsai->FrameInit.FrameLength - 1) |
 800697a:	431a      	orrs	r2, r3
                           hsai->FrameInit.FSDefinition |
 800697c:	687b      	ldr	r3, [r7, #4]
 800697e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
                           hsai->FrameInit.FSOffset |
 8006980:	431a      	orrs	r2, r3
                           hsai->FrameInit.FSPolarity   |
 8006982:	687b      	ldr	r3, [r7, #4]
 8006984:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
                           hsai->FrameInit.FSDefinition |
 8006986:	431a      	orrs	r2, r3
                           ((hsai->FrameInit.ActiveFrameLength - 1) << 8));
 8006988:	687b      	ldr	r3, [r7, #4]
 800698a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800698c:	3b01      	subs	r3, #1
 800698e:	021b      	lsls	r3, r3, #8
                           hsai->FrameInit.FSPolarity   |
 8006990:	431a      	orrs	r2, r3
  hsai->Instance->FRCR |= ((hsai->FrameInit.FrameLength - 1) |
 8006992:	687b      	ldr	r3, [r7, #4]
 8006994:	681b      	ldr	r3, [r3, #0]
 8006996:	430a      	orrs	r2, r1
 8006998:	609a      	str	r2, [r3, #8]

  /* SAI Block_x SLOT Configuration ------------------------------------------*/
  /* This register has no meaning in AC 97 and SPDIF audio protocol */
  hsai->Instance->SLOTR &= (~(SAI_xSLOTR_FBOFF | SAI_xSLOTR_SLOTSZ |            \
 800699a:	687b      	ldr	r3, [r7, #4]
 800699c:	681b      	ldr	r3, [r3, #0]
 800699e:	68d9      	ldr	r1, [r3, #12]
 80069a0:	687b      	ldr	r3, [r7, #4]
 80069a2:	681a      	ldr	r2, [r3, #0]
 80069a4:	f24f 0320 	movw	r3, #61472	; 0xf020
 80069a8:	400b      	ands	r3, r1
 80069aa:	60d3      	str	r3, [r2, #12]
                              SAI_xSLOTR_NBSLOT | SAI_xSLOTR_SLOTEN));

  hsai->Instance->SLOTR |=  hsai->SlotInit.FirstBitOffset |  hsai->SlotInit.SlotSize
 80069ac:	687b      	ldr	r3, [r7, #4]
 80069ae:	681b      	ldr	r3, [r3, #0]
 80069b0:	68d9      	ldr	r1, [r3, #12]
 80069b2:	687b      	ldr	r3, [r7, #4]
 80069b4:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80069b6:	687b      	ldr	r3, [r7, #4]
 80069b8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80069ba:	431a      	orrs	r2, r3
                            | (hsai->SlotInit.SlotActive << 16) | ((hsai->SlotInit.SlotNumber - 1) <<  8);
 80069bc:	687b      	ldr	r3, [r7, #4]
 80069be:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80069c0:	041b      	lsls	r3, r3, #16
 80069c2:	431a      	orrs	r2, r3
 80069c4:	687b      	ldr	r3, [r7, #4]
 80069c6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80069c8:	3b01      	subs	r3, #1
 80069ca:	021b      	lsls	r3, r3, #8
 80069cc:	431a      	orrs	r2, r3
  hsai->Instance->SLOTR |=  hsai->SlotInit.FirstBitOffset |  hsai->SlotInit.SlotSize
 80069ce:	687b      	ldr	r3, [r7, #4]
 80069d0:	681b      	ldr	r3, [r3, #0]
 80069d2:	430a      	orrs	r2, r1
 80069d4:	60da      	str	r2, [r3, #12]

  /* Initialize the error code */
  hsai->ErrorCode = HAL_SAI_ERROR_NONE;
 80069d6:	687b      	ldr	r3, [r7, #4]
 80069d8:	2200      	movs	r2, #0
 80069da:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Initialize the SAI state */
  hsai->State = HAL_SAI_STATE_READY;
 80069de:	687b      	ldr	r3, [r7, #4]
 80069e0:	2201      	movs	r2, #1
 80069e2:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d

  /* Release Lock */
  __HAL_UNLOCK(hsai);
 80069e6:	687b      	ldr	r3, [r7, #4]
 80069e8:	2200      	movs	r2, #0
 80069ea:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

  return HAL_OK;
 80069ee:	2300      	movs	r3, #0
}
 80069f0:	4618      	mov	r0, r3
 80069f2:	3720      	adds	r7, #32
 80069f4:	46bd      	mov	sp, r7
 80069f6:	bd80      	pop	{r7, pc}
 80069f8:	40015804 	.word	0x40015804
 80069fc:	40015824 	.word	0x40015824
 8006a00:	40015800 	.word	0x40015800
 8006a04:	40015c00 	.word	0x40015c00
 8006a08:	40015c04 	.word	0x40015c04
 8006a0c:	40015c24 	.word	0x40015c24
 8006a10:	cccccccd 	.word	0xcccccccd
 8006a14:	ff05c010 	.word	0xff05c010
 8006a18:	ffff1ff0 	.word	0xffff1ff0
 8006a1c:	fff88000 	.word	0xfff88000

08006a20 <HAL_SAI_Transmit_DMA>:
  * @param  pData Pointer to data buffer
  * @param  Size Amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SAI_Transmit_DMA(SAI_HandleTypeDef *hsai, uint8_t *pData, uint16_t Size)
{
 8006a20:	b580      	push	{r7, lr}
 8006a22:	b086      	sub	sp, #24
 8006a24:	af00      	add	r7, sp, #0
 8006a26:	60f8      	str	r0, [r7, #12]
 8006a28:	60b9      	str	r1, [r7, #8]
 8006a2a:	4613      	mov	r3, r2
 8006a2c:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart = HAL_GetTick();
 8006a2e:	f7fc fca1 	bl	8003374 <HAL_GetTick>
 8006a32:	6178      	str	r0, [r7, #20]

  if ((pData == NULL) || (Size == 0))
 8006a34:	68bb      	ldr	r3, [r7, #8]
 8006a36:	2b00      	cmp	r3, #0
 8006a38:	d002      	beq.n	8006a40 <HAL_SAI_Transmit_DMA+0x20>
 8006a3a:	88fb      	ldrh	r3, [r7, #6]
 8006a3c:	2b00      	cmp	r3, #0
 8006a3e:	d101      	bne.n	8006a44 <HAL_SAI_Transmit_DMA+0x24>
  {
    return  HAL_ERROR;
 8006a40:	2301      	movs	r3, #1
 8006a42:	e093      	b.n	8006b6c <HAL_SAI_Transmit_DMA+0x14c>
  }

  if (hsai->State == HAL_SAI_STATE_READY)
 8006a44:	68fb      	ldr	r3, [r7, #12]
 8006a46:	f893 307d 	ldrb.w	r3, [r3, #125]	; 0x7d
 8006a4a:	b2db      	uxtb	r3, r3
 8006a4c:	2b01      	cmp	r3, #1
 8006a4e:	f040 808c 	bne.w	8006b6a <HAL_SAI_Transmit_DMA+0x14a>
  {
    /* Process Locked */
    __HAL_LOCK(hsai);
 8006a52:	68fb      	ldr	r3, [r7, #12]
 8006a54:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8006a58:	2b01      	cmp	r3, #1
 8006a5a:	d101      	bne.n	8006a60 <HAL_SAI_Transmit_DMA+0x40>
 8006a5c:	2302      	movs	r3, #2
 8006a5e:	e085      	b.n	8006b6c <HAL_SAI_Transmit_DMA+0x14c>
 8006a60:	68fb      	ldr	r3, [r7, #12]
 8006a62:	2201      	movs	r2, #1
 8006a64:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

    hsai->pBuffPtr = pData;
 8006a68:	68fb      	ldr	r3, [r7, #12]
 8006a6a:	68ba      	ldr	r2, [r7, #8]
 8006a6c:	665a      	str	r2, [r3, #100]	; 0x64
    hsai->XferSize = Size;
 8006a6e:	68fb      	ldr	r3, [r7, #12]
 8006a70:	88fa      	ldrh	r2, [r7, #6]
 8006a72:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
    hsai->XferCount = Size;
 8006a76:	68fb      	ldr	r3, [r7, #12]
 8006a78:	88fa      	ldrh	r2, [r7, #6]
 8006a7a:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
    hsai->ErrorCode = HAL_SAI_ERROR_NONE;
 8006a7e:	68fb      	ldr	r3, [r7, #12]
 8006a80:	2200      	movs	r2, #0
 8006a82:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    hsai->State = HAL_SAI_STATE_BUSY_TX;
 8006a86:	68fb      	ldr	r3, [r7, #12]
 8006a88:	2212      	movs	r2, #18
 8006a8a:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d

    /* Set the SAI Tx DMA Half transfer complete callback */
    hsai->hdmatx->XferHalfCpltCallback = SAI_DMATxHalfCplt;
 8006a8e:	68fb      	ldr	r3, [r7, #12]
 8006a90:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8006a92:	4a38      	ldr	r2, [pc, #224]	; (8006b74 <HAL_SAI_Transmit_DMA+0x154>)
 8006a94:	641a      	str	r2, [r3, #64]	; 0x40

    /* Set the SAI TxDMA transfer complete callback */
    hsai->hdmatx->XferCpltCallback = SAI_DMATxCplt;
 8006a96:	68fb      	ldr	r3, [r7, #12]
 8006a98:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8006a9a:	4a37      	ldr	r2, [pc, #220]	; (8006b78 <HAL_SAI_Transmit_DMA+0x158>)
 8006a9c:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Set the DMA error callback */
    hsai->hdmatx->XferErrorCallback = SAI_DMAError;
 8006a9e:	68fb      	ldr	r3, [r7, #12]
 8006aa0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8006aa2:	4a36      	ldr	r2, [pc, #216]	; (8006b7c <HAL_SAI_Transmit_DMA+0x15c>)
 8006aa4:	64da      	str	r2, [r3, #76]	; 0x4c

    /* Set the DMA Tx abort callback */
    hsai->hdmatx->XferAbortCallback = NULL;
 8006aa6:	68fb      	ldr	r3, [r7, #12]
 8006aa8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8006aaa:	2200      	movs	r2, #0
 8006aac:	651a      	str	r2, [r3, #80]	; 0x50

    /* Enable the Tx DMA Stream */
    if (HAL_DMA_Start_IT(hsai->hdmatx, (uint32_t)hsai->pBuffPtr, (uint32_t)&hsai->Instance->DR, hsai->XferSize) != HAL_OK)
 8006aae:	68fb      	ldr	r3, [r7, #12]
 8006ab0:	6ed8      	ldr	r0, [r3, #108]	; 0x6c
 8006ab2:	68fb      	ldr	r3, [r7, #12]
 8006ab4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8006ab6:	4619      	mov	r1, r3
 8006ab8:	68fb      	ldr	r3, [r7, #12]
 8006aba:	681b      	ldr	r3, [r3, #0]
 8006abc:	331c      	adds	r3, #28
 8006abe:	461a      	mov	r2, r3
 8006ac0:	68fb      	ldr	r3, [r7, #12]
 8006ac2:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 8006ac6:	f7fc ff2f 	bl	8003928 <HAL_DMA_Start_IT>
 8006aca:	4603      	mov	r3, r0
 8006acc:	2b00      	cmp	r3, #0
 8006ace:	d005      	beq.n	8006adc <HAL_SAI_Transmit_DMA+0xbc>
    {
      __HAL_UNLOCK(hsai);
 8006ad0:	68fb      	ldr	r3, [r7, #12]
 8006ad2:	2200      	movs	r2, #0
 8006ad4:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
      return  HAL_ERROR;
 8006ad8:	2301      	movs	r3, #1
 8006ada:	e047      	b.n	8006b6c <HAL_SAI_Transmit_DMA+0x14c>
    }

    /* Enable the interrupts for error handling */
    __HAL_SAI_ENABLE_IT(hsai, SAI_InterruptFlag(hsai, SAI_MODE_DMA));
 8006adc:	2100      	movs	r1, #0
 8006ade:	68f8      	ldr	r0, [r7, #12]
 8006ae0:	f000 fa28 	bl	8006f34 <SAI_InterruptFlag>
 8006ae4:	4601      	mov	r1, r0
 8006ae6:	68fb      	ldr	r3, [r7, #12]
 8006ae8:	681b      	ldr	r3, [r3, #0]
 8006aea:	691a      	ldr	r2, [r3, #16]
 8006aec:	68fb      	ldr	r3, [r7, #12]
 8006aee:	681b      	ldr	r3, [r3, #0]
 8006af0:	430a      	orrs	r2, r1
 8006af2:	611a      	str	r2, [r3, #16]

    /* Enable SAI Tx DMA Request */
    hsai->Instance->CR1 |= SAI_xCR1_DMAEN;
 8006af4:	68fb      	ldr	r3, [r7, #12]
 8006af6:	681b      	ldr	r3, [r3, #0]
 8006af8:	681a      	ldr	r2, [r3, #0]
 8006afa:	68fb      	ldr	r3, [r7, #12]
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8006b02:	601a      	str	r2, [r3, #0]

    /* Wait until FIFO is not empty */
    while ((hsai->Instance->SR & SAI_xSR_FLVL) == SAI_FIFOSTATUS_EMPTY)
 8006b04:	e015      	b.n	8006b32 <HAL_SAI_Transmit_DMA+0x112>
    {
      /* Check for the Timeout */
      if ((HAL_GetTick() - tickstart) > SAI_LONG_TIMEOUT)
 8006b06:	f7fc fc35 	bl	8003374 <HAL_GetTick>
 8006b0a:	4602      	mov	r2, r0
 8006b0c:	697b      	ldr	r3, [r7, #20]
 8006b0e:	1ad3      	subs	r3, r2, r3
 8006b10:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8006b14:	d90d      	bls.n	8006b32 <HAL_SAI_Transmit_DMA+0x112>
      {
        /* Update error code */
        hsai->ErrorCode |= HAL_SAI_ERROR_TIMEOUT;
 8006b16:	68fb      	ldr	r3, [r7, #12]
 8006b18:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8006b1c:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8006b20:	68fb      	ldr	r3, [r7, #12]
 8006b22:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

        /* Process Unlocked */
        __HAL_UNLOCK(hsai);
 8006b26:	68fb      	ldr	r3, [r7, #12]
 8006b28:	2200      	movs	r2, #0
 8006b2a:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

        return HAL_TIMEOUT;
 8006b2e:	2303      	movs	r3, #3
 8006b30:	e01c      	b.n	8006b6c <HAL_SAI_Transmit_DMA+0x14c>
    while ((hsai->Instance->SR & SAI_xSR_FLVL) == SAI_FIFOSTATUS_EMPTY)
 8006b32:	68fb      	ldr	r3, [r7, #12]
 8006b34:	681b      	ldr	r3, [r3, #0]
 8006b36:	695b      	ldr	r3, [r3, #20]
 8006b38:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
 8006b3c:	2b00      	cmp	r3, #0
 8006b3e:	d0e2      	beq.n	8006b06 <HAL_SAI_Transmit_DMA+0xe6>
      }
    }

    /* Check if the SAI is already enabled */
    if ((hsai->Instance->CR1 & SAI_xCR1_SAIEN) == 0U)
 8006b40:	68fb      	ldr	r3, [r7, #12]
 8006b42:	681b      	ldr	r3, [r3, #0]
 8006b44:	681b      	ldr	r3, [r3, #0]
 8006b46:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006b4a:	2b00      	cmp	r3, #0
 8006b4c:	d107      	bne.n	8006b5e <HAL_SAI_Transmit_DMA+0x13e>
    {
      /* Enable SAI peripheral */
      __HAL_SAI_ENABLE(hsai);
 8006b4e:	68fb      	ldr	r3, [r7, #12]
 8006b50:	681b      	ldr	r3, [r3, #0]
 8006b52:	681a      	ldr	r2, [r3, #0]
 8006b54:	68fb      	ldr	r3, [r7, #12]
 8006b56:	681b      	ldr	r3, [r3, #0]
 8006b58:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006b5c:	601a      	str	r2, [r3, #0]
    }

    /* Process Unlocked */
    __HAL_UNLOCK(hsai);
 8006b5e:	68fb      	ldr	r3, [r7, #12]
 8006b60:	2200      	movs	r2, #0
 8006b62:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

    return HAL_OK;
 8006b66:	2300      	movs	r3, #0
 8006b68:	e000      	b.n	8006b6c <HAL_SAI_Transmit_DMA+0x14c>
  }
  else
  {
    return HAL_BUSY;
 8006b6a:	2302      	movs	r3, #2
  }
}
 8006b6c:	4618      	mov	r0, r3
 8006b6e:	3718      	adds	r7, #24
 8006b70:	46bd      	mov	sp, r7
 8006b72:	bd80      	pop	{r7, pc}
 8006b74:	08007071 	.word	0x08007071
 8006b78:	08007011 	.word	0x08007011
 8006b7c:	08007109 	.word	0x08007109

08006b80 <HAL_SAI_Receive_DMA>:
  * @param  pData Pointer to data buffer
  * @param  Size Amount of data to be received
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SAI_Receive_DMA(SAI_HandleTypeDef *hsai, uint8_t *pData, uint16_t Size)
{
 8006b80:	b580      	push	{r7, lr}
 8006b82:	b084      	sub	sp, #16
 8006b84:	af00      	add	r7, sp, #0
 8006b86:	60f8      	str	r0, [r7, #12]
 8006b88:	60b9      	str	r1, [r7, #8]
 8006b8a:	4613      	mov	r3, r2
 8006b8c:	80fb      	strh	r3, [r7, #6]

  if ((pData == NULL) || (Size == 0))
 8006b8e:	68bb      	ldr	r3, [r7, #8]
 8006b90:	2b00      	cmp	r3, #0
 8006b92:	d002      	beq.n	8006b9a <HAL_SAI_Receive_DMA+0x1a>
 8006b94:	88fb      	ldrh	r3, [r7, #6]
 8006b96:	2b00      	cmp	r3, #0
 8006b98:	d101      	bne.n	8006b9e <HAL_SAI_Receive_DMA+0x1e>
  {
    return  HAL_ERROR;
 8006b9a:	2301      	movs	r3, #1
 8006b9c:	e074      	b.n	8006c88 <HAL_SAI_Receive_DMA+0x108>
  }

  if (hsai->State == HAL_SAI_STATE_READY)
 8006b9e:	68fb      	ldr	r3, [r7, #12]
 8006ba0:	f893 307d 	ldrb.w	r3, [r3, #125]	; 0x7d
 8006ba4:	b2db      	uxtb	r3, r3
 8006ba6:	2b01      	cmp	r3, #1
 8006ba8:	d16d      	bne.n	8006c86 <HAL_SAI_Receive_DMA+0x106>
  {
    /* Process Locked */
    __HAL_LOCK(hsai);
 8006baa:	68fb      	ldr	r3, [r7, #12]
 8006bac:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8006bb0:	2b01      	cmp	r3, #1
 8006bb2:	d101      	bne.n	8006bb8 <HAL_SAI_Receive_DMA+0x38>
 8006bb4:	2302      	movs	r3, #2
 8006bb6:	e067      	b.n	8006c88 <HAL_SAI_Receive_DMA+0x108>
 8006bb8:	68fb      	ldr	r3, [r7, #12]
 8006bba:	2201      	movs	r2, #1
 8006bbc:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

    hsai->pBuffPtr = pData;
 8006bc0:	68fb      	ldr	r3, [r7, #12]
 8006bc2:	68ba      	ldr	r2, [r7, #8]
 8006bc4:	665a      	str	r2, [r3, #100]	; 0x64
    hsai->XferSize = Size;
 8006bc6:	68fb      	ldr	r3, [r7, #12]
 8006bc8:	88fa      	ldrh	r2, [r7, #6]
 8006bca:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
    hsai->XferCount = Size;
 8006bce:	68fb      	ldr	r3, [r7, #12]
 8006bd0:	88fa      	ldrh	r2, [r7, #6]
 8006bd2:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
    hsai->ErrorCode = HAL_SAI_ERROR_NONE;
 8006bd6:	68fb      	ldr	r3, [r7, #12]
 8006bd8:	2200      	movs	r2, #0
 8006bda:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    hsai->State = HAL_SAI_STATE_BUSY_RX;
 8006bde:	68fb      	ldr	r3, [r7, #12]
 8006be0:	2222      	movs	r2, #34	; 0x22
 8006be2:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d

    /* Set the SAI Rx DMA Half transfer complete callback */
    hsai->hdmarx->XferHalfCpltCallback = SAI_DMARxHalfCplt;
 8006be6:	68fb      	ldr	r3, [r7, #12]
 8006be8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006bea:	4a29      	ldr	r2, [pc, #164]	; (8006c90 <HAL_SAI_Receive_DMA+0x110>)
 8006bec:	641a      	str	r2, [r3, #64]	; 0x40

    /* Set the SAI Rx DMA transfer complete callback */
    hsai->hdmarx->XferCpltCallback = SAI_DMARxCplt;
 8006bee:	68fb      	ldr	r3, [r7, #12]
 8006bf0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006bf2:	4a28      	ldr	r2, [pc, #160]	; (8006c94 <HAL_SAI_Receive_DMA+0x114>)
 8006bf4:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Set the DMA error callback */
    hsai->hdmarx->XferErrorCallback = SAI_DMAError;
 8006bf6:	68fb      	ldr	r3, [r7, #12]
 8006bf8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006bfa:	4a27      	ldr	r2, [pc, #156]	; (8006c98 <HAL_SAI_Receive_DMA+0x118>)
 8006bfc:	64da      	str	r2, [r3, #76]	; 0x4c

    /* Set the DMA Rx abort callback */
    hsai->hdmarx->XferAbortCallback = NULL;
 8006bfe:	68fb      	ldr	r3, [r7, #12]
 8006c00:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006c02:	2200      	movs	r2, #0
 8006c04:	651a      	str	r2, [r3, #80]	; 0x50

    /* Enable the Rx DMA Stream */
    if (HAL_DMA_Start_IT(hsai->hdmarx, (uint32_t)&hsai->Instance->DR, (uint32_t)hsai->pBuffPtr, hsai->XferSize) != HAL_OK)
 8006c06:	68fb      	ldr	r3, [r7, #12]
 8006c08:	6f18      	ldr	r0, [r3, #112]	; 0x70
 8006c0a:	68fb      	ldr	r3, [r7, #12]
 8006c0c:	681b      	ldr	r3, [r3, #0]
 8006c0e:	331c      	adds	r3, #28
 8006c10:	4619      	mov	r1, r3
 8006c12:	68fb      	ldr	r3, [r7, #12]
 8006c14:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8006c16:	461a      	mov	r2, r3
 8006c18:	68fb      	ldr	r3, [r7, #12]
 8006c1a:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 8006c1e:	f7fc fe83 	bl	8003928 <HAL_DMA_Start_IT>
 8006c22:	4603      	mov	r3, r0
 8006c24:	2b00      	cmp	r3, #0
 8006c26:	d005      	beq.n	8006c34 <HAL_SAI_Receive_DMA+0xb4>
    {
      __HAL_UNLOCK(hsai);
 8006c28:	68fb      	ldr	r3, [r7, #12]
 8006c2a:	2200      	movs	r2, #0
 8006c2c:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
      return  HAL_ERROR;
 8006c30:	2301      	movs	r3, #1
 8006c32:	e029      	b.n	8006c88 <HAL_SAI_Receive_DMA+0x108>
    }

    /* Enable the interrupts for error handling */
    __HAL_SAI_ENABLE_IT(hsai, SAI_InterruptFlag(hsai, SAI_MODE_DMA));
 8006c34:	2100      	movs	r1, #0
 8006c36:	68f8      	ldr	r0, [r7, #12]
 8006c38:	f000 f97c 	bl	8006f34 <SAI_InterruptFlag>
 8006c3c:	4601      	mov	r1, r0
 8006c3e:	68fb      	ldr	r3, [r7, #12]
 8006c40:	681b      	ldr	r3, [r3, #0]
 8006c42:	691a      	ldr	r2, [r3, #16]
 8006c44:	68fb      	ldr	r3, [r7, #12]
 8006c46:	681b      	ldr	r3, [r3, #0]
 8006c48:	430a      	orrs	r2, r1
 8006c4a:	611a      	str	r2, [r3, #16]

    /* Enable SAI Rx DMA Request */
    hsai->Instance->CR1 |= SAI_xCR1_DMAEN;
 8006c4c:	68fb      	ldr	r3, [r7, #12]
 8006c4e:	681b      	ldr	r3, [r3, #0]
 8006c50:	681a      	ldr	r2, [r3, #0]
 8006c52:	68fb      	ldr	r3, [r7, #12]
 8006c54:	681b      	ldr	r3, [r3, #0]
 8006c56:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8006c5a:	601a      	str	r2, [r3, #0]

    /* Check if the SAI is already enabled */
    if ((hsai->Instance->CR1 & SAI_xCR1_SAIEN) == RESET)
 8006c5c:	68fb      	ldr	r3, [r7, #12]
 8006c5e:	681b      	ldr	r3, [r3, #0]
 8006c60:	681b      	ldr	r3, [r3, #0]
 8006c62:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006c66:	2b00      	cmp	r3, #0
 8006c68:	d107      	bne.n	8006c7a <HAL_SAI_Receive_DMA+0xfa>
    {
      /* Enable SAI peripheral */
      __HAL_SAI_ENABLE(hsai);
 8006c6a:	68fb      	ldr	r3, [r7, #12]
 8006c6c:	681b      	ldr	r3, [r3, #0]
 8006c6e:	681a      	ldr	r2, [r3, #0]
 8006c70:	68fb      	ldr	r3, [r7, #12]
 8006c72:	681b      	ldr	r3, [r3, #0]
 8006c74:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006c78:	601a      	str	r2, [r3, #0]
    }

    /* Process Unlocked */
    __HAL_UNLOCK(hsai);
 8006c7a:	68fb      	ldr	r3, [r7, #12]
 8006c7c:	2200      	movs	r2, #0
 8006c7e:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

    return HAL_OK;
 8006c82:	2300      	movs	r3, #0
 8006c84:	e000      	b.n	8006c88 <HAL_SAI_Receive_DMA+0x108>
  }
  else
  {
    return HAL_BUSY;
 8006c86:	2302      	movs	r3, #2
  }
}
 8006c88:	4618      	mov	r0, r3
 8006c8a:	3710      	adds	r7, #16
 8006c8c:	46bd      	mov	sp, r7
 8006c8e:	bd80      	pop	{r7, pc}
 8006c90:	080070ed 	.word	0x080070ed
 8006c94:	0800708d 	.word	0x0800708d
 8006c98:	08007109 	.word	0x08007109

08006c9c <HAL_SAI_TxCpltCallback>:
  * @param  hsai pointer to a SAI_HandleTypeDef structure that contains
  *                the configuration information for SAI module.
  * @retval None
  */
__weak void HAL_SAI_TxCpltCallback(SAI_HandleTypeDef *hsai)
{
 8006c9c:	b480      	push	{r7}
 8006c9e:	b083      	sub	sp, #12
 8006ca0:	af00      	add	r7, sp, #0
 8006ca2:	6078      	str	r0, [r7, #4]
  UNUSED(hsai);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SAI_TxCpltCallback could be implemented in the user file
   */
}
 8006ca4:	bf00      	nop
 8006ca6:	370c      	adds	r7, #12
 8006ca8:	46bd      	mov	sp, r7
 8006caa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cae:	4770      	bx	lr

08006cb0 <HAL_SAI_TxHalfCpltCallback>:
  * @param  hsai pointer to a SAI_HandleTypeDef structure that contains
  *                the configuration information for SAI module.
  * @retval None
  */
__weak void HAL_SAI_TxHalfCpltCallback(SAI_HandleTypeDef *hsai)
{
 8006cb0:	b480      	push	{r7}
 8006cb2:	b083      	sub	sp, #12
 8006cb4:	af00      	add	r7, sp, #0
 8006cb6:	6078      	str	r0, [r7, #4]
  UNUSED(hsai);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SAI_TxHalfCpltCallback could be implemented in the user file
   */
}
 8006cb8:	bf00      	nop
 8006cba:	370c      	adds	r7, #12
 8006cbc:	46bd      	mov	sp, r7
 8006cbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cc2:	4770      	bx	lr

08006cc4 <HAL_SAI_ErrorCallback>:
  * @param  hsai pointer to a SAI_HandleTypeDef structure that contains
  *                the configuration information for SAI module.
  * @retval None
  */
__weak void HAL_SAI_ErrorCallback(SAI_HandleTypeDef *hsai)
{
 8006cc4:	b480      	push	{r7}
 8006cc6:	b083      	sub	sp, #12
 8006cc8:	af00      	add	r7, sp, #0
 8006cca:	6078      	str	r0, [r7, #4]
  UNUSED(hsai);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SAI_ErrorCallback could be implemented in the user file
   */
}
 8006ccc:	bf00      	nop
 8006cce:	370c      	adds	r7, #12
 8006cd0:	46bd      	mov	sp, r7
 8006cd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cd6:	4770      	bx	lr

08006cd8 <SAI_InitI2S>:
  * @param  nbslot number of slot minimum value is 2 and max is 16.
  *                    the value must be a multiple of 2.
  * @retval HAL status
  */
static HAL_StatusTypeDef SAI_InitI2S(SAI_HandleTypeDef *hsai, uint32_t protocol, uint32_t datasize, uint32_t nbslot)
{
 8006cd8:	b480      	push	{r7}
 8006cda:	b085      	sub	sp, #20
 8006cdc:	af00      	add	r7, sp, #0
 8006cde:	60f8      	str	r0, [r7, #12]
 8006ce0:	60b9      	str	r1, [r7, #8]
 8006ce2:	607a      	str	r2, [r7, #4]
 8006ce4:	603b      	str	r3, [r7, #0]
  hsai->Init.Protocol            = SAI_FREE_PROTOCOL;
 8006ce6:	68fb      	ldr	r3, [r7, #12]
 8006ce8:	2200      	movs	r2, #0
 8006cea:	631a      	str	r2, [r3, #48]	; 0x30
  hsai->Init.FirstBit            = SAI_FIRSTBIT_MSB;
 8006cec:	68fb      	ldr	r3, [r7, #12]
 8006cee:	2200      	movs	r2, #0
 8006cf0:	639a      	str	r2, [r3, #56]	; 0x38
  /* Compute ClockStrobing according AudioMode */
  if ((hsai->Init.AudioMode == SAI_MODEMASTER_TX) || (hsai->Init.AudioMode == SAI_MODESLAVE_TX))
 8006cf2:	68fb      	ldr	r3, [r7, #12]
 8006cf4:	685b      	ldr	r3, [r3, #4]
 8006cf6:	2b00      	cmp	r3, #0
 8006cf8:	d003      	beq.n	8006d02 <SAI_InitI2S+0x2a>
 8006cfa:	68fb      	ldr	r3, [r7, #12]
 8006cfc:	685b      	ldr	r3, [r3, #4]
 8006cfe:	2b02      	cmp	r3, #2
 8006d00:	d103      	bne.n	8006d0a <SAI_InitI2S+0x32>
  {
    /* Transmit */
    hsai->Init.ClockStrobing     = SAI_CLOCKSTROBING_FALLINGEDGE;
 8006d02:	68fb      	ldr	r3, [r7, #12]
 8006d04:	2200      	movs	r2, #0
 8006d06:	63da      	str	r2, [r3, #60]	; 0x3c
 8006d08:	e002      	b.n	8006d10 <SAI_InitI2S+0x38>
  }
  else
  {
    /* Receive */
    hsai->Init.ClockStrobing     = SAI_CLOCKSTROBING_RISINGEDGE;
 8006d0a:	68fb      	ldr	r3, [r7, #12]
 8006d0c:	2201      	movs	r2, #1
 8006d0e:	63da      	str	r2, [r3, #60]	; 0x3c
  }
  hsai->FrameInit.FSDefinition   = SAI_FS_CHANNEL_IDENTIFICATION;
 8006d10:	68fb      	ldr	r3, [r7, #12]
 8006d12:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8006d16:	649a      	str	r2, [r3, #72]	; 0x48
  hsai->SlotInit.SlotActive      = SAI_SLOTACTIVE_ALL;
 8006d18:	68fb      	ldr	r3, [r7, #12]
 8006d1a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8006d1e:	661a      	str	r2, [r3, #96]	; 0x60
  hsai->SlotInit.FirstBitOffset  = 0;
 8006d20:	68fb      	ldr	r3, [r7, #12]
 8006d22:	2200      	movs	r2, #0
 8006d24:	655a      	str	r2, [r3, #84]	; 0x54
  hsai->SlotInit.SlotNumber      = nbslot;
 8006d26:	68fb      	ldr	r3, [r7, #12]
 8006d28:	683a      	ldr	r2, [r7, #0]
 8006d2a:	65da      	str	r2, [r3, #92]	; 0x5c

  /* in IS2 the number of slot must be even */
  if ((nbslot & 0x1) != 0)
 8006d2c:	683b      	ldr	r3, [r7, #0]
 8006d2e:	f003 0301 	and.w	r3, r3, #1
 8006d32:	2b00      	cmp	r3, #0
 8006d34:	d001      	beq.n	8006d3a <SAI_InitI2S+0x62>
  {
    return HAL_ERROR;
 8006d36:	2301      	movs	r3, #1
 8006d38:	e076      	b.n	8006e28 <SAI_InitI2S+0x150>
  }

  if (protocol == SAI_I2S_STANDARD)
 8006d3a:	68bb      	ldr	r3, [r7, #8]
 8006d3c:	2b00      	cmp	r3, #0
 8006d3e:	d107      	bne.n	8006d50 <SAI_InitI2S+0x78>
  {
    hsai->FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 8006d40:	68fb      	ldr	r3, [r7, #12]
 8006d42:	2200      	movs	r2, #0
 8006d44:	64da      	str	r2, [r3, #76]	; 0x4c
    hsai->FrameInit.FSOffset   = SAI_FS_BEFOREFIRSTBIT;
 8006d46:	68fb      	ldr	r3, [r7, #12]
 8006d48:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8006d4c:	651a      	str	r2, [r3, #80]	; 0x50
 8006d4e:	e006      	b.n	8006d5e <SAI_InitI2S+0x86>
  }
  else
  {
    /* SAI_I2S_MSBJUSTIFIED or SAI_I2S_LSBJUSTIFIED */
    hsai->FrameInit.FSPolarity = SAI_FS_ACTIVE_HIGH;
 8006d50:	68fb      	ldr	r3, [r7, #12]
 8006d52:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8006d56:	64da      	str	r2, [r3, #76]	; 0x4c
    hsai->FrameInit.FSOffset   = SAI_FS_FIRSTBIT;
 8006d58:	68fb      	ldr	r3, [r7, #12]
 8006d5a:	2200      	movs	r2, #0
 8006d5c:	651a      	str	r2, [r3, #80]	; 0x50
  }

  /* Frame definition */
  switch (datasize)
 8006d5e:	687b      	ldr	r3, [r7, #4]
 8006d60:	2b03      	cmp	r3, #3
 8006d62:	d84f      	bhi.n	8006e04 <SAI_InitI2S+0x12c>
 8006d64:	a201      	add	r2, pc, #4	; (adr r2, 8006d6c <SAI_InitI2S+0x94>)
 8006d66:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006d6a:	bf00      	nop
 8006d6c:	08006d7d 	.word	0x08006d7d
 8006d70:	08006d9f 	.word	0x08006d9f
 8006d74:	08006dc1 	.word	0x08006dc1
 8006d78:	08006de3 	.word	0x08006de3
  {
    case SAI_PROTOCOL_DATASIZE_16BIT:
      hsai->Init.DataSize = SAI_DATASIZE_16;
 8006d7c:	68fb      	ldr	r3, [r7, #12]
 8006d7e:	2280      	movs	r2, #128	; 0x80
 8006d80:	635a      	str	r2, [r3, #52]	; 0x34
      hsai->FrameInit.FrameLength = 32 * (nbslot / 2);
 8006d82:	683b      	ldr	r3, [r7, #0]
 8006d84:	085b      	lsrs	r3, r3, #1
 8006d86:	015a      	lsls	r2, r3, #5
 8006d88:	68fb      	ldr	r3, [r7, #12]
 8006d8a:	641a      	str	r2, [r3, #64]	; 0x40
      hsai->FrameInit.ActiveFrameLength = 16 * (nbslot / 2);
 8006d8c:	683b      	ldr	r3, [r7, #0]
 8006d8e:	085b      	lsrs	r3, r3, #1
 8006d90:	011a      	lsls	r2, r3, #4
 8006d92:	68fb      	ldr	r3, [r7, #12]
 8006d94:	645a      	str	r2, [r3, #68]	; 0x44
      hsai->SlotInit.SlotSize = SAI_SLOTSIZE_16B;
 8006d96:	68fb      	ldr	r3, [r7, #12]
 8006d98:	2240      	movs	r2, #64	; 0x40
 8006d9a:	659a      	str	r2, [r3, #88]	; 0x58
      break;
 8006d9c:	e034      	b.n	8006e08 <SAI_InitI2S+0x130>
    case SAI_PROTOCOL_DATASIZE_16BITEXTENDED :
      hsai->Init.DataSize = SAI_DATASIZE_16;
 8006d9e:	68fb      	ldr	r3, [r7, #12]
 8006da0:	2280      	movs	r2, #128	; 0x80
 8006da2:	635a      	str	r2, [r3, #52]	; 0x34
      hsai->FrameInit.FrameLength = 64 * (nbslot / 2);
 8006da4:	683b      	ldr	r3, [r7, #0]
 8006da6:	085b      	lsrs	r3, r3, #1
 8006da8:	019a      	lsls	r2, r3, #6
 8006daa:	68fb      	ldr	r3, [r7, #12]
 8006dac:	641a      	str	r2, [r3, #64]	; 0x40
      hsai->FrameInit.ActiveFrameLength = 32 * (nbslot / 2);
 8006dae:	683b      	ldr	r3, [r7, #0]
 8006db0:	085b      	lsrs	r3, r3, #1
 8006db2:	015a      	lsls	r2, r3, #5
 8006db4:	68fb      	ldr	r3, [r7, #12]
 8006db6:	645a      	str	r2, [r3, #68]	; 0x44
      hsai->SlotInit.SlotSize = SAI_SLOTSIZE_32B;
 8006db8:	68fb      	ldr	r3, [r7, #12]
 8006dba:	2280      	movs	r2, #128	; 0x80
 8006dbc:	659a      	str	r2, [r3, #88]	; 0x58
      break;
 8006dbe:	e023      	b.n	8006e08 <SAI_InitI2S+0x130>
    case SAI_PROTOCOL_DATASIZE_24BIT:
      hsai->Init.DataSize = SAI_DATASIZE_24;
 8006dc0:	68fb      	ldr	r3, [r7, #12]
 8006dc2:	22c0      	movs	r2, #192	; 0xc0
 8006dc4:	635a      	str	r2, [r3, #52]	; 0x34
      hsai->FrameInit.FrameLength = 64 * (nbslot / 2);
 8006dc6:	683b      	ldr	r3, [r7, #0]
 8006dc8:	085b      	lsrs	r3, r3, #1
 8006dca:	019a      	lsls	r2, r3, #6
 8006dcc:	68fb      	ldr	r3, [r7, #12]
 8006dce:	641a      	str	r2, [r3, #64]	; 0x40
      hsai->FrameInit.ActiveFrameLength = 32 * (nbslot / 2);
 8006dd0:	683b      	ldr	r3, [r7, #0]
 8006dd2:	085b      	lsrs	r3, r3, #1
 8006dd4:	015a      	lsls	r2, r3, #5
 8006dd6:	68fb      	ldr	r3, [r7, #12]
 8006dd8:	645a      	str	r2, [r3, #68]	; 0x44
      hsai->SlotInit.SlotSize = SAI_SLOTSIZE_32B;
 8006dda:	68fb      	ldr	r3, [r7, #12]
 8006ddc:	2280      	movs	r2, #128	; 0x80
 8006dde:	659a      	str	r2, [r3, #88]	; 0x58
      break;
 8006de0:	e012      	b.n	8006e08 <SAI_InitI2S+0x130>
    case SAI_PROTOCOL_DATASIZE_32BIT:
      hsai->Init.DataSize = SAI_DATASIZE_32;
 8006de2:	68fb      	ldr	r3, [r7, #12]
 8006de4:	22e0      	movs	r2, #224	; 0xe0
 8006de6:	635a      	str	r2, [r3, #52]	; 0x34
      hsai->FrameInit.FrameLength = 64 * (nbslot / 2);
 8006de8:	683b      	ldr	r3, [r7, #0]
 8006dea:	085b      	lsrs	r3, r3, #1
 8006dec:	019a      	lsls	r2, r3, #6
 8006dee:	68fb      	ldr	r3, [r7, #12]
 8006df0:	641a      	str	r2, [r3, #64]	; 0x40
      hsai->FrameInit.ActiveFrameLength = 32 * (nbslot / 2);
 8006df2:	683b      	ldr	r3, [r7, #0]
 8006df4:	085b      	lsrs	r3, r3, #1
 8006df6:	015a      	lsls	r2, r3, #5
 8006df8:	68fb      	ldr	r3, [r7, #12]
 8006dfa:	645a      	str	r2, [r3, #68]	; 0x44
      hsai->SlotInit.SlotSize = SAI_SLOTSIZE_32B;
 8006dfc:	68fb      	ldr	r3, [r7, #12]
 8006dfe:	2280      	movs	r2, #128	; 0x80
 8006e00:	659a      	str	r2, [r3, #88]	; 0x58
      break;
 8006e02:	e001      	b.n	8006e08 <SAI_InitI2S+0x130>
    default :
      return HAL_ERROR;
 8006e04:	2301      	movs	r3, #1
 8006e06:	e00f      	b.n	8006e28 <SAI_InitI2S+0x150>
  }
  if (protocol == SAI_I2S_LSBJUSTIFIED)
 8006e08:	68bb      	ldr	r3, [r7, #8]
 8006e0a:	2b02      	cmp	r3, #2
 8006e0c:	d10b      	bne.n	8006e26 <SAI_InitI2S+0x14e>
  {
    if (datasize == SAI_PROTOCOL_DATASIZE_16BITEXTENDED)
 8006e0e:	687b      	ldr	r3, [r7, #4]
 8006e10:	2b01      	cmp	r3, #1
 8006e12:	d102      	bne.n	8006e1a <SAI_InitI2S+0x142>
    {
      hsai->SlotInit.FirstBitOffset = 16;
 8006e14:	68fb      	ldr	r3, [r7, #12]
 8006e16:	2210      	movs	r2, #16
 8006e18:	655a      	str	r2, [r3, #84]	; 0x54
    }
    if (datasize == SAI_PROTOCOL_DATASIZE_24BIT)
 8006e1a:	687b      	ldr	r3, [r7, #4]
 8006e1c:	2b02      	cmp	r3, #2
 8006e1e:	d102      	bne.n	8006e26 <SAI_InitI2S+0x14e>
    {
      hsai->SlotInit.FirstBitOffset = 8;
 8006e20:	68fb      	ldr	r3, [r7, #12]
 8006e22:	2208      	movs	r2, #8
 8006e24:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  return HAL_OK;
 8006e26:	2300      	movs	r3, #0
}
 8006e28:	4618      	mov	r0, r3
 8006e2a:	3714      	adds	r7, #20
 8006e2c:	46bd      	mov	sp, r7
 8006e2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e32:	4770      	bx	lr

08006e34 <SAI_InitPCM>:
  * @param  datasize one of the supported datasize @ref SAI_Protocol_DataSize
  * @param  nbslot number of slot minimum value is 1 and the max is 16.
  * @retval HAL status
  */
static HAL_StatusTypeDef SAI_InitPCM(SAI_HandleTypeDef *hsai, uint32_t protocol, uint32_t datasize, uint32_t nbslot)
{
 8006e34:	b480      	push	{r7}
 8006e36:	b085      	sub	sp, #20
 8006e38:	af00      	add	r7, sp, #0
 8006e3a:	60f8      	str	r0, [r7, #12]
 8006e3c:	60b9      	str	r1, [r7, #8]
 8006e3e:	607a      	str	r2, [r7, #4]
 8006e40:	603b      	str	r3, [r7, #0]
  hsai->Init.Protocol            = SAI_FREE_PROTOCOL;
 8006e42:	68fb      	ldr	r3, [r7, #12]
 8006e44:	2200      	movs	r2, #0
 8006e46:	631a      	str	r2, [r3, #48]	; 0x30
  hsai->Init.FirstBit            = SAI_FIRSTBIT_MSB;
 8006e48:	68fb      	ldr	r3, [r7, #12]
 8006e4a:	2200      	movs	r2, #0
 8006e4c:	639a      	str	r2, [r3, #56]	; 0x38
  /* Compute ClockStrobing according AudioMode */
  if ((hsai->Init.AudioMode == SAI_MODEMASTER_TX) || (hsai->Init.AudioMode == SAI_MODESLAVE_TX))
 8006e4e:	68fb      	ldr	r3, [r7, #12]
 8006e50:	685b      	ldr	r3, [r3, #4]
 8006e52:	2b00      	cmp	r3, #0
 8006e54:	d003      	beq.n	8006e5e <SAI_InitPCM+0x2a>
 8006e56:	68fb      	ldr	r3, [r7, #12]
 8006e58:	685b      	ldr	r3, [r3, #4]
 8006e5a:	2b02      	cmp	r3, #2
 8006e5c:	d103      	bne.n	8006e66 <SAI_InitPCM+0x32>
  {
    /* Transmit */
    hsai->Init.ClockStrobing     = SAI_CLOCKSTROBING_RISINGEDGE;
 8006e5e:	68fb      	ldr	r3, [r7, #12]
 8006e60:	2201      	movs	r2, #1
 8006e62:	63da      	str	r2, [r3, #60]	; 0x3c
 8006e64:	e002      	b.n	8006e6c <SAI_InitPCM+0x38>
  }
  else
  {
    /* Receive */
    hsai->Init.ClockStrobing     = SAI_CLOCKSTROBING_FALLINGEDGE;
 8006e66:	68fb      	ldr	r3, [r7, #12]
 8006e68:	2200      	movs	r2, #0
 8006e6a:	63da      	str	r2, [r3, #60]	; 0x3c
  }
  hsai->FrameInit.FSDefinition   = SAI_FS_STARTFRAME;
 8006e6c:	68fb      	ldr	r3, [r7, #12]
 8006e6e:	2200      	movs	r2, #0
 8006e70:	649a      	str	r2, [r3, #72]	; 0x48
  hsai->FrameInit.FSPolarity     = SAI_FS_ACTIVE_HIGH;
 8006e72:	68fb      	ldr	r3, [r7, #12]
 8006e74:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8006e78:	64da      	str	r2, [r3, #76]	; 0x4c
  hsai->FrameInit.FSOffset       = SAI_FS_BEFOREFIRSTBIT;
 8006e7a:	68fb      	ldr	r3, [r7, #12]
 8006e7c:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8006e80:	651a      	str	r2, [r3, #80]	; 0x50
  hsai->SlotInit.FirstBitOffset  = 0;
 8006e82:	68fb      	ldr	r3, [r7, #12]
 8006e84:	2200      	movs	r2, #0
 8006e86:	655a      	str	r2, [r3, #84]	; 0x54
  hsai->SlotInit.SlotNumber      = nbslot;
 8006e88:	68fb      	ldr	r3, [r7, #12]
 8006e8a:	683a      	ldr	r2, [r7, #0]
 8006e8c:	65da      	str	r2, [r3, #92]	; 0x5c
  hsai->SlotInit.SlotActive      = SAI_SLOTACTIVE_ALL;
 8006e8e:	68fb      	ldr	r3, [r7, #12]
 8006e90:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8006e94:	661a      	str	r2, [r3, #96]	; 0x60

  if (protocol == SAI_PCM_SHORT)
 8006e96:	68bb      	ldr	r3, [r7, #8]
 8006e98:	2b04      	cmp	r3, #4
 8006e9a:	d103      	bne.n	8006ea4 <SAI_InitPCM+0x70>
  {
    hsai->FrameInit.ActiveFrameLength = 1;
 8006e9c:	68fb      	ldr	r3, [r7, #12]
 8006e9e:	2201      	movs	r2, #1
 8006ea0:	645a      	str	r2, [r3, #68]	; 0x44
 8006ea2:	e002      	b.n	8006eaa <SAI_InitPCM+0x76>
  }
  else
  {
    /* SAI_PCM_LONG */
    hsai->FrameInit.ActiveFrameLength = 13;
 8006ea4:	68fb      	ldr	r3, [r7, #12]
 8006ea6:	220d      	movs	r2, #13
 8006ea8:	645a      	str	r2, [r3, #68]	; 0x44
  }

  switch (datasize)
 8006eaa:	687b      	ldr	r3, [r7, #4]
 8006eac:	2b03      	cmp	r3, #3
 8006eae:	d837      	bhi.n	8006f20 <SAI_InitPCM+0xec>
 8006eb0:	a201      	add	r2, pc, #4	; (adr r2, 8006eb8 <SAI_InitPCM+0x84>)
 8006eb2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006eb6:	bf00      	nop
 8006eb8:	08006ec9 	.word	0x08006ec9
 8006ebc:	08006edf 	.word	0x08006edf
 8006ec0:	08006ef5 	.word	0x08006ef5
 8006ec4:	08006f0b 	.word	0x08006f0b
  {
    case SAI_PROTOCOL_DATASIZE_16BIT:
      hsai->Init.DataSize = SAI_DATASIZE_16;
 8006ec8:	68fb      	ldr	r3, [r7, #12]
 8006eca:	2280      	movs	r2, #128	; 0x80
 8006ecc:	635a      	str	r2, [r3, #52]	; 0x34
      hsai->FrameInit.FrameLength = 16 * nbslot;
 8006ece:	683b      	ldr	r3, [r7, #0]
 8006ed0:	011a      	lsls	r2, r3, #4
 8006ed2:	68fb      	ldr	r3, [r7, #12]
 8006ed4:	641a      	str	r2, [r3, #64]	; 0x40
      hsai->SlotInit.SlotSize = SAI_SLOTSIZE_16B;
 8006ed6:	68fb      	ldr	r3, [r7, #12]
 8006ed8:	2240      	movs	r2, #64	; 0x40
 8006eda:	659a      	str	r2, [r3, #88]	; 0x58
      break;
 8006edc:	e022      	b.n	8006f24 <SAI_InitPCM+0xf0>
    case SAI_PROTOCOL_DATASIZE_16BITEXTENDED :
      hsai->Init.DataSize = SAI_DATASIZE_16;
 8006ede:	68fb      	ldr	r3, [r7, #12]
 8006ee0:	2280      	movs	r2, #128	; 0x80
 8006ee2:	635a      	str	r2, [r3, #52]	; 0x34
      hsai->FrameInit.FrameLength = 32 * nbslot;
 8006ee4:	683b      	ldr	r3, [r7, #0]
 8006ee6:	015a      	lsls	r2, r3, #5
 8006ee8:	68fb      	ldr	r3, [r7, #12]
 8006eea:	641a      	str	r2, [r3, #64]	; 0x40
      hsai->SlotInit.SlotSize = SAI_SLOTSIZE_32B;
 8006eec:	68fb      	ldr	r3, [r7, #12]
 8006eee:	2280      	movs	r2, #128	; 0x80
 8006ef0:	659a      	str	r2, [r3, #88]	; 0x58
      break;
 8006ef2:	e017      	b.n	8006f24 <SAI_InitPCM+0xf0>
    case SAI_PROTOCOL_DATASIZE_24BIT :
      hsai->Init.DataSize = SAI_DATASIZE_24;
 8006ef4:	68fb      	ldr	r3, [r7, #12]
 8006ef6:	22c0      	movs	r2, #192	; 0xc0
 8006ef8:	635a      	str	r2, [r3, #52]	; 0x34
      hsai->FrameInit.FrameLength = 32 * nbslot;
 8006efa:	683b      	ldr	r3, [r7, #0]
 8006efc:	015a      	lsls	r2, r3, #5
 8006efe:	68fb      	ldr	r3, [r7, #12]
 8006f00:	641a      	str	r2, [r3, #64]	; 0x40
      hsai->SlotInit.SlotSize = SAI_SLOTSIZE_32B;
 8006f02:	68fb      	ldr	r3, [r7, #12]
 8006f04:	2280      	movs	r2, #128	; 0x80
 8006f06:	659a      	str	r2, [r3, #88]	; 0x58
      break;
 8006f08:	e00c      	b.n	8006f24 <SAI_InitPCM+0xf0>
    case SAI_PROTOCOL_DATASIZE_32BIT:
      hsai->Init.DataSize = SAI_DATASIZE_32;
 8006f0a:	68fb      	ldr	r3, [r7, #12]
 8006f0c:	22e0      	movs	r2, #224	; 0xe0
 8006f0e:	635a      	str	r2, [r3, #52]	; 0x34
      hsai->FrameInit.FrameLength = 32 * nbslot;
 8006f10:	683b      	ldr	r3, [r7, #0]
 8006f12:	015a      	lsls	r2, r3, #5
 8006f14:	68fb      	ldr	r3, [r7, #12]
 8006f16:	641a      	str	r2, [r3, #64]	; 0x40
      hsai->SlotInit.SlotSize = SAI_SLOTSIZE_32B;
 8006f18:	68fb      	ldr	r3, [r7, #12]
 8006f1a:	2280      	movs	r2, #128	; 0x80
 8006f1c:	659a      	str	r2, [r3, #88]	; 0x58
      break;
 8006f1e:	e001      	b.n	8006f24 <SAI_InitPCM+0xf0>
    default :
      return HAL_ERROR;
 8006f20:	2301      	movs	r3, #1
 8006f22:	e000      	b.n	8006f26 <SAI_InitPCM+0xf2>
  }

  return HAL_OK;
 8006f24:	2300      	movs	r3, #0
}
 8006f26:	4618      	mov	r0, r3
 8006f28:	3714      	adds	r7, #20
 8006f2a:	46bd      	mov	sp, r7
 8006f2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f30:	4770      	bx	lr
 8006f32:	bf00      	nop

08006f34 <SAI_InterruptFlag>:
  *                the configuration information for SAI module.
  * @param  mode SAI_MODE_DMA or SAI_MODE_IT
  * @retval the list of the IT flag to enable
 */
static uint32_t SAI_InterruptFlag(const SAI_HandleTypeDef *hsai, uint32_t mode)
{
 8006f34:	b480      	push	{r7}
 8006f36:	b085      	sub	sp, #20
 8006f38:	af00      	add	r7, sp, #0
 8006f3a:	6078      	str	r0, [r7, #4]
 8006f3c:	6039      	str	r1, [r7, #0]
  uint32_t tmpIT = SAI_IT_OVRUDR;
 8006f3e:	2301      	movs	r3, #1
 8006f40:	60fb      	str	r3, [r7, #12]

  if (mode == SAI_MODE_IT)
 8006f42:	683b      	ldr	r3, [r7, #0]
 8006f44:	2b01      	cmp	r3, #1
 8006f46:	d103      	bne.n	8006f50 <SAI_InterruptFlag+0x1c>
  {
    tmpIT |= SAI_IT_FREQ;
 8006f48:	68fb      	ldr	r3, [r7, #12]
 8006f4a:	f043 0308 	orr.w	r3, r3, #8
 8006f4e:	60fb      	str	r3, [r7, #12]
  }

  if ((hsai->Init.Protocol == SAI_AC97_PROTOCOL) &&
 8006f50:	687b      	ldr	r3, [r7, #4]
 8006f52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f54:	2b08      	cmp	r3, #8
 8006f56:	d10b      	bne.n	8006f70 <SAI_InterruptFlag+0x3c>
      ((hsai->Init.AudioMode == SAI_MODESLAVE_RX) || (hsai->Init.AudioMode == SAI_MODEMASTER_RX)))
 8006f58:	687b      	ldr	r3, [r7, #4]
 8006f5a:	685b      	ldr	r3, [r3, #4]
  if ((hsai->Init.Protocol == SAI_AC97_PROTOCOL) &&
 8006f5c:	2b03      	cmp	r3, #3
 8006f5e:	d003      	beq.n	8006f68 <SAI_InterruptFlag+0x34>
      ((hsai->Init.AudioMode == SAI_MODESLAVE_RX) || (hsai->Init.AudioMode == SAI_MODEMASTER_RX)))
 8006f60:	687b      	ldr	r3, [r7, #4]
 8006f62:	685b      	ldr	r3, [r3, #4]
 8006f64:	2b01      	cmp	r3, #1
 8006f66:	d103      	bne.n	8006f70 <SAI_InterruptFlag+0x3c>
  {
    tmpIT |= SAI_IT_CNRDY;
 8006f68:	68fb      	ldr	r3, [r7, #12]
 8006f6a:	f043 0310 	orr.w	r3, r3, #16
 8006f6e:	60fb      	str	r3, [r7, #12]
  }

  if ((hsai->Init.AudioMode == SAI_MODESLAVE_RX) || (hsai->Init.AudioMode == SAI_MODESLAVE_TX))
 8006f70:	687b      	ldr	r3, [r7, #4]
 8006f72:	685b      	ldr	r3, [r3, #4]
 8006f74:	2b03      	cmp	r3, #3
 8006f76:	d003      	beq.n	8006f80 <SAI_InterruptFlag+0x4c>
 8006f78:	687b      	ldr	r3, [r7, #4]
 8006f7a:	685b      	ldr	r3, [r3, #4]
 8006f7c:	2b02      	cmp	r3, #2
 8006f7e:	d104      	bne.n	8006f8a <SAI_InterruptFlag+0x56>
  {
    tmpIT |= SAI_IT_AFSDET | SAI_IT_LFSDET;
 8006f80:	68fb      	ldr	r3, [r7, #12]
 8006f82:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8006f86:	60fb      	str	r3, [r7, #12]
 8006f88:	e003      	b.n	8006f92 <SAI_InterruptFlag+0x5e>
  }
  else
  {
    /* hsai has been configured in master mode */
    tmpIT |= SAI_IT_WCKCFG;
 8006f8a:	68fb      	ldr	r3, [r7, #12]
 8006f8c:	f043 0304 	orr.w	r3, r3, #4
 8006f90:	60fb      	str	r3, [r7, #12]
  }
  return tmpIT;
 8006f92:	68fb      	ldr	r3, [r7, #12]
}
 8006f94:	4618      	mov	r0, r3
 8006f96:	3714      	adds	r7, #20
 8006f98:	46bd      	mov	sp, r7
 8006f9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f9e:	4770      	bx	lr

08006fa0 <SAI_Disable>:
  * @param  hsai  pointer to a SAI_HandleTypeDef structure that contains
  *                the configuration information for SAI module.
  * @retval None
  */
static HAL_StatusTypeDef SAI_Disable(SAI_HandleTypeDef *hsai)
{
 8006fa0:	b480      	push	{r7}
 8006fa2:	b085      	sub	sp, #20
 8006fa4:	af00      	add	r7, sp, #0
 8006fa6:	6078      	str	r0, [r7, #4]
  uint32_t count = SAI_DEFAULT_TIMEOUT * (SystemCoreClock / 7 / 1000);
 8006fa8:	4b17      	ldr	r3, [pc, #92]	; (8007008 <SAI_Disable+0x68>)
 8006faa:	681b      	ldr	r3, [r3, #0]
 8006fac:	4a17      	ldr	r2, [pc, #92]	; (800700c <SAI_Disable+0x6c>)
 8006fae:	fba2 2303 	umull	r2, r3, r2, r3
 8006fb2:	0b1b      	lsrs	r3, r3, #12
 8006fb4:	009b      	lsls	r3, r3, #2
 8006fb6:	60fb      	str	r3, [r7, #12]
  HAL_StatusTypeDef status = HAL_OK;
 8006fb8:	2300      	movs	r3, #0
 8006fba:	72fb      	strb	r3, [r7, #11]

  /* Disable the SAI instance */
  __HAL_SAI_DISABLE(hsai);
 8006fbc:	687b      	ldr	r3, [r7, #4]
 8006fbe:	681b      	ldr	r3, [r3, #0]
 8006fc0:	681a      	ldr	r2, [r3, #0]
 8006fc2:	687b      	ldr	r3, [r7, #4]
 8006fc4:	681b      	ldr	r3, [r3, #0]
 8006fc6:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8006fca:	601a      	str	r2, [r3, #0]

  do
  {
    /* Check for the Timeout */
    if (count-- == 0)
 8006fcc:	68fb      	ldr	r3, [r7, #12]
 8006fce:	1e5a      	subs	r2, r3, #1
 8006fd0:	60fa      	str	r2, [r7, #12]
 8006fd2:	2b00      	cmp	r3, #0
 8006fd4:	d10a      	bne.n	8006fec <SAI_Disable+0x4c>
    {
      /* Update error code */
      hsai->ErrorCode |= HAL_SAI_ERROR_TIMEOUT;
 8006fd6:	687b      	ldr	r3, [r7, #4]
 8006fd8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8006fdc:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8006fe0:	687b      	ldr	r3, [r7, #4]
 8006fe2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
      status = HAL_TIMEOUT;
 8006fe6:	2303      	movs	r3, #3
 8006fe8:	72fb      	strb	r3, [r7, #11]
      break;
 8006fea:	e006      	b.n	8006ffa <SAI_Disable+0x5a>
    }
  }
  while ((hsai->Instance->CR1 & SAI_xCR1_SAIEN) != RESET);
 8006fec:	687b      	ldr	r3, [r7, #4]
 8006fee:	681b      	ldr	r3, [r3, #0]
 8006ff0:	681b      	ldr	r3, [r3, #0]
 8006ff2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006ff6:	2b00      	cmp	r3, #0
 8006ff8:	d1e8      	bne.n	8006fcc <SAI_Disable+0x2c>

  return status;
 8006ffa:	7afb      	ldrb	r3, [r7, #11]
}
 8006ffc:	4618      	mov	r0, r3
 8006ffe:	3714      	adds	r7, #20
 8007000:	46bd      	mov	sp, r7
 8007002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007006:	4770      	bx	lr
 8007008:	20000008 	.word	0x20000008
 800700c:	95cbec1b 	.word	0x95cbec1b

08007010 <SAI_DMATxCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void SAI_DMATxCplt(DMA_HandleTypeDef *hdma)
{
 8007010:	b580      	push	{r7, lr}
 8007012:	b084      	sub	sp, #16
 8007014:	af00      	add	r7, sp, #0
 8007016:	6078      	str	r0, [r7, #4]
  SAI_HandleTypeDef *hsai = (SAI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800701c:	60fb      	str	r3, [r7, #12]

  if (hdma->Init.Mode != DMA_CIRCULAR)
 800701e:	687b      	ldr	r3, [r7, #4]
 8007020:	69db      	ldr	r3, [r3, #28]
 8007022:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007026:	d01c      	beq.n	8007062 <SAI_DMATxCplt+0x52>
  {
    hsai->XferCount = 0;
 8007028:	68fb      	ldr	r3, [r7, #12]
 800702a:	2200      	movs	r2, #0
 800702c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a

    /* Disable SAI Tx DMA Request */
    hsai->Instance->CR1 &= (uint32_t)(~SAI_xCR1_DMAEN);
 8007030:	68fb      	ldr	r3, [r7, #12]
 8007032:	681b      	ldr	r3, [r3, #0]
 8007034:	681a      	ldr	r2, [r3, #0]
 8007036:	68fb      	ldr	r3, [r7, #12]
 8007038:	681b      	ldr	r3, [r3, #0]
 800703a:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 800703e:	601a      	str	r2, [r3, #0]

    /* Stop the interrupts error handling */
    __HAL_SAI_DISABLE_IT(hsai, SAI_InterruptFlag(hsai, SAI_MODE_DMA));
 8007040:	2100      	movs	r1, #0
 8007042:	68f8      	ldr	r0, [r7, #12]
 8007044:	f7ff ff76 	bl	8006f34 <SAI_InterruptFlag>
 8007048:	4603      	mov	r3, r0
 800704a:	43d9      	mvns	r1, r3
 800704c:	68fb      	ldr	r3, [r7, #12]
 800704e:	681b      	ldr	r3, [r3, #0]
 8007050:	691a      	ldr	r2, [r3, #16]
 8007052:	68fb      	ldr	r3, [r7, #12]
 8007054:	681b      	ldr	r3, [r3, #0]
 8007056:	400a      	ands	r2, r1
 8007058:	611a      	str	r2, [r3, #16]

    hsai->State = HAL_SAI_STATE_READY;
 800705a:	68fb      	ldr	r3, [r7, #12]
 800705c:	2201      	movs	r2, #1
 800705e:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d
  }
#if (USE_HAL_SAI_REGISTER_CALLBACKS == 1)
  hsai->TxCpltCallback(hsai);
#else
  HAL_SAI_TxCpltCallback(hsai);
 8007062:	68f8      	ldr	r0, [r7, #12]
 8007064:	f7ff fe1a 	bl	8006c9c <HAL_SAI_TxCpltCallback>
#endif /* USE_HAL_SAI_REGISTER_CALLBACKS */
}
 8007068:	bf00      	nop
 800706a:	3710      	adds	r7, #16
 800706c:	46bd      	mov	sp, r7
 800706e:	bd80      	pop	{r7, pc}

08007070 <SAI_DMATxHalfCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void SAI_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
{
 8007070:	b580      	push	{r7, lr}
 8007072:	b084      	sub	sp, #16
 8007074:	af00      	add	r7, sp, #0
 8007076:	6078      	str	r0, [r7, #4]
  SAI_HandleTypeDef *hsai = (SAI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8007078:	687b      	ldr	r3, [r7, #4]
 800707a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800707c:	60fb      	str	r3, [r7, #12]

#if (USE_HAL_SAI_REGISTER_CALLBACKS == 1)
  hsai->TxHalfCpltCallback(hsai);
#else
  HAL_SAI_TxHalfCpltCallback(hsai);
 800707e:	68f8      	ldr	r0, [r7, #12]
 8007080:	f7ff fe16 	bl	8006cb0 <HAL_SAI_TxHalfCpltCallback>
#endif /* USE_HAL_SAI_REGISTER_CALLBACKS */
}
 8007084:	bf00      	nop
 8007086:	3710      	adds	r7, #16
 8007088:	46bd      	mov	sp, r7
 800708a:	bd80      	pop	{r7, pc}

0800708c <SAI_DMARxCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void SAI_DMARxCplt(DMA_HandleTypeDef *hdma)
{
 800708c:	b580      	push	{r7, lr}
 800708e:	b084      	sub	sp, #16
 8007090:	af00      	add	r7, sp, #0
 8007092:	6078      	str	r0, [r7, #4]
  SAI_HandleTypeDef *hsai = (SAI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8007094:	687b      	ldr	r3, [r7, #4]
 8007096:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007098:	60fb      	str	r3, [r7, #12]

  if (hdma->Init.Mode != DMA_CIRCULAR)
 800709a:	687b      	ldr	r3, [r7, #4]
 800709c:	69db      	ldr	r3, [r3, #28]
 800709e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80070a2:	d01c      	beq.n	80070de <SAI_DMARxCplt+0x52>
  {
    /* Disable Rx DMA Request */
    hsai->Instance->CR1 &= (uint32_t)(~SAI_xCR1_DMAEN);
 80070a4:	68fb      	ldr	r3, [r7, #12]
 80070a6:	681b      	ldr	r3, [r3, #0]
 80070a8:	681a      	ldr	r2, [r3, #0]
 80070aa:	68fb      	ldr	r3, [r7, #12]
 80070ac:	681b      	ldr	r3, [r3, #0]
 80070ae:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 80070b2:	601a      	str	r2, [r3, #0]
    hsai->XferCount = 0;
 80070b4:	68fb      	ldr	r3, [r7, #12]
 80070b6:	2200      	movs	r2, #0
 80070b8:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a

    /* Stop the interrupts error handling */
    __HAL_SAI_DISABLE_IT(hsai, SAI_InterruptFlag(hsai, SAI_MODE_DMA));
 80070bc:	2100      	movs	r1, #0
 80070be:	68f8      	ldr	r0, [r7, #12]
 80070c0:	f7ff ff38 	bl	8006f34 <SAI_InterruptFlag>
 80070c4:	4603      	mov	r3, r0
 80070c6:	43d9      	mvns	r1, r3
 80070c8:	68fb      	ldr	r3, [r7, #12]
 80070ca:	681b      	ldr	r3, [r3, #0]
 80070cc:	691a      	ldr	r2, [r3, #16]
 80070ce:	68fb      	ldr	r3, [r7, #12]
 80070d0:	681b      	ldr	r3, [r3, #0]
 80070d2:	400a      	ands	r2, r1
 80070d4:	611a      	str	r2, [r3, #16]

    hsai->State = HAL_SAI_STATE_READY;
 80070d6:	68fb      	ldr	r3, [r7, #12]
 80070d8:	2201      	movs	r2, #1
 80070da:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d
  }
#if (USE_HAL_SAI_REGISTER_CALLBACKS == 1)
  hsai->RxCpltCallback(hsai);
#else
  HAL_SAI_RxCpltCallback(hsai);
 80070de:	68f8      	ldr	r0, [r7, #12]
 80070e0:	f7fa fc94 	bl	8001a0c <HAL_SAI_RxCpltCallback>
#endif /* USE_HAL_SAI_REGISTER_CALLBACKS */
}
 80070e4:	bf00      	nop
 80070e6:	3710      	adds	r7, #16
 80070e8:	46bd      	mov	sp, r7
 80070ea:	bd80      	pop	{r7, pc}

080070ec <SAI_DMARxHalfCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void SAI_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
{
 80070ec:	b580      	push	{r7, lr}
 80070ee:	b084      	sub	sp, #16
 80070f0:	af00      	add	r7, sp, #0
 80070f2:	6078      	str	r0, [r7, #4]
  SAI_HandleTypeDef *hsai = (SAI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80070f4:	687b      	ldr	r3, [r7, #4]
 80070f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80070f8:	60fb      	str	r3, [r7, #12]

#if (USE_HAL_SAI_REGISTER_CALLBACKS == 1)
  hsai->RxHalfCpltCallback(hsai);
#else
  HAL_SAI_RxHalfCpltCallback(hsai);
 80070fa:	68f8      	ldr	r0, [r7, #12]
 80070fc:	f7fa fc66 	bl	80019cc <HAL_SAI_RxHalfCpltCallback>
#endif /* USE_HAL_SAI_REGISTER_CALLBACKS */
}
 8007100:	bf00      	nop
 8007102:	3710      	adds	r7, #16
 8007104:	46bd      	mov	sp, r7
 8007106:	bd80      	pop	{r7, pc}

08007108 <SAI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void SAI_DMAError(DMA_HandleTypeDef *hdma)
{
 8007108:	b580      	push	{r7, lr}
 800710a:	b084      	sub	sp, #16
 800710c:	af00      	add	r7, sp, #0
 800710e:	6078      	str	r0, [r7, #4]
  SAI_HandleTypeDef *hsai = (SAI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007114:	60fb      	str	r3, [r7, #12]

  /* Set SAI error code */
  hsai->ErrorCode |= HAL_SAI_ERROR_DMA;
 8007116:	68fb      	ldr	r3, [r7, #12]
 8007118:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800711c:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8007120:	68fb      	ldr	r3, [r7, #12]
 8007122:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  if ((hsai->hdmatx->ErrorCode == HAL_DMA_ERROR_TE) || (hsai->hdmarx->ErrorCode == HAL_DMA_ERROR_TE))
 8007126:	68fb      	ldr	r3, [r7, #12]
 8007128:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800712a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800712c:	2b01      	cmp	r3, #1
 800712e:	d004      	beq.n	800713a <SAI_DMAError+0x32>
 8007130:	68fb      	ldr	r3, [r7, #12]
 8007132:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007134:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007136:	2b01      	cmp	r3, #1
 8007138:	d112      	bne.n	8007160 <SAI_DMAError+0x58>
  {
    /* Disable the SAI DMA request */
    hsai->Instance->CR1 &= ~SAI_xCR1_DMAEN;
 800713a:	68fb      	ldr	r3, [r7, #12]
 800713c:	681b      	ldr	r3, [r3, #0]
 800713e:	681a      	ldr	r2, [r3, #0]
 8007140:	68fb      	ldr	r3, [r7, #12]
 8007142:	681b      	ldr	r3, [r3, #0]
 8007144:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8007148:	601a      	str	r2, [r3, #0]

    /* Disable SAI peripheral */
    SAI_Disable(hsai);
 800714a:	68f8      	ldr	r0, [r7, #12]
 800714c:	f7ff ff28 	bl	8006fa0 <SAI_Disable>

    /* Set the SAI state ready to be able to start again the process */
    hsai->State = HAL_SAI_STATE_READY;
 8007150:	68fb      	ldr	r3, [r7, #12]
 8007152:	2201      	movs	r2, #1
 8007154:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d

    /* Initialize XferCount */
    hsai->XferCount = 0U;
 8007158:	68fb      	ldr	r3, [r7, #12]
 800715a:	2200      	movs	r2, #0
 800715c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
  }
  /* SAI error Callback */
#if (USE_HAL_SAI_REGISTER_CALLBACKS == 1)
  hsai->ErrorCallback(hsai);
#else
  HAL_SAI_ErrorCallback(hsai);
 8007160:	68f8      	ldr	r0, [r7, #12]
 8007162:	f7ff fdaf 	bl	8006cc4 <HAL_SAI_ErrorCallback>
#endif /* USE_HAL_SAI_REGISTER_CALLBACKS */
}
 8007166:	bf00      	nop
 8007168:	3710      	adds	r7, #16
 800716a:	46bd      	mov	sp, r7
 800716c:	bd80      	pop	{r7, pc}

0800716e <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 800716e:	b580      	push	{r7, lr}
 8007170:	b084      	sub	sp, #16
 8007172:	af00      	add	r7, sp, #0
 8007174:	6078      	str	r0, [r7, #4]
  uint32_t frxth;

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8007176:	687b      	ldr	r3, [r7, #4]
 8007178:	2b00      	cmp	r3, #0
 800717a:	d101      	bne.n	8007180 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 800717c:	2301      	movs	r3, #1
 800717e:	e09d      	b.n	80072bc <HAL_SPI_Init+0x14e>
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8007180:	687b      	ldr	r3, [r7, #4]
 8007182:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007184:	2b00      	cmp	r3, #0
 8007186:	d108      	bne.n	800719a <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007188:	687b      	ldr	r3, [r7, #4]
 800718a:	685b      	ldr	r3, [r3, #4]
 800718c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007190:	d009      	beq.n	80071a6 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8007192:	687b      	ldr	r3, [r7, #4]
 8007194:	2200      	movs	r2, #0
 8007196:	61da      	str	r2, [r3, #28]
 8007198:	e005      	b.n	80071a6 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800719a:	687b      	ldr	r3, [r7, #4]
 800719c:	2200      	movs	r2, #0
 800719e:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 80071a0:	687b      	ldr	r3, [r7, #4]
 80071a2:	2200      	movs	r2, #0
 80071a4:	615a      	str	r2, [r3, #20]
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80071a6:	687b      	ldr	r3, [r7, #4]
 80071a8:	2200      	movs	r2, #0
 80071aa:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 80071ac:	687b      	ldr	r3, [r7, #4]
 80071ae:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 80071b2:	b2db      	uxtb	r3, r3
 80071b4:	2b00      	cmp	r3, #0
 80071b6:	d106      	bne.n	80071c6 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 80071b8:	687b      	ldr	r3, [r7, #4]
 80071ba:	2200      	movs	r2, #0
 80071bc:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 80071c0:	6878      	ldr	r0, [r7, #4]
 80071c2:	f7fb fb37 	bl	8002834 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 80071c6:	687b      	ldr	r3, [r7, #4]
 80071c8:	2202      	movs	r2, #2
 80071ca:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 80071ce:	687b      	ldr	r3, [r7, #4]
 80071d0:	681b      	ldr	r3, [r3, #0]
 80071d2:	681a      	ldr	r2, [r3, #0]
 80071d4:	687b      	ldr	r3, [r7, #4]
 80071d6:	681b      	ldr	r3, [r3, #0]
 80071d8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80071dc:	601a      	str	r2, [r3, #0]

  /* Align by default the rs fifo threshold on the data size */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80071de:	687b      	ldr	r3, [r7, #4]
 80071e0:	68db      	ldr	r3, [r3, #12]
 80071e2:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80071e6:	d902      	bls.n	80071ee <HAL_SPI_Init+0x80>
  {
    frxth = SPI_RXFIFO_THRESHOLD_HF;
 80071e8:	2300      	movs	r3, #0
 80071ea:	60fb      	str	r3, [r7, #12]
 80071ec:	e002      	b.n	80071f4 <HAL_SPI_Init+0x86>
  }
  else
  {
    frxth = SPI_RXFIFO_THRESHOLD_QF;
 80071ee:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80071f2:	60fb      	str	r3, [r7, #12]
  }

  /* CRC calculation is valid only for 16Bit and 8 Bit */
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 80071f4:	687b      	ldr	r3, [r7, #4]
 80071f6:	68db      	ldr	r3, [r3, #12]
 80071f8:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 80071fc:	d007      	beq.n	800720e <HAL_SPI_Init+0xa0>
 80071fe:	687b      	ldr	r3, [r7, #4]
 8007200:	68db      	ldr	r3, [r3, #12]
 8007202:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8007206:	d002      	beq.n	800720e <HAL_SPI_Init+0xa0>
  {
    /* CRC must be disabled */
    hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	2200      	movs	r2, #0
 800720c:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800720e:	687b      	ldr	r3, [r7, #4]
 8007210:	685b      	ldr	r3, [r3, #4]
 8007212:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8007216:	687b      	ldr	r3, [r7, #4]
 8007218:	689b      	ldr	r3, [r3, #8]
 800721a:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 800721e:	431a      	orrs	r2, r3
 8007220:	687b      	ldr	r3, [r7, #4]
 8007222:	691b      	ldr	r3, [r3, #16]
 8007224:	f003 0302 	and.w	r3, r3, #2
 8007228:	431a      	orrs	r2, r3
 800722a:	687b      	ldr	r3, [r7, #4]
 800722c:	695b      	ldr	r3, [r3, #20]
 800722e:	f003 0301 	and.w	r3, r3, #1
 8007232:	431a      	orrs	r2, r3
 8007234:	687b      	ldr	r3, [r7, #4]
 8007236:	699b      	ldr	r3, [r3, #24]
 8007238:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800723c:	431a      	orrs	r2, r3
 800723e:	687b      	ldr	r3, [r7, #4]
 8007240:	69db      	ldr	r3, [r3, #28]
 8007242:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8007246:	431a      	orrs	r2, r3
 8007248:	687b      	ldr	r3, [r7, #4]
 800724a:	6a1b      	ldr	r3, [r3, #32]
 800724c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007250:	ea42 0103 	orr.w	r1, r2, r3
 8007254:	687b      	ldr	r3, [r7, #4]
 8007256:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007258:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 800725c:	687b      	ldr	r3, [r7, #4]
 800725e:	681b      	ldr	r3, [r3, #0]
 8007260:	430a      	orrs	r2, r1
 8007262:	601a      	str	r2, [r3, #0]
    }
  }
#endif /* USE_SPI_CRC */

  /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 8007264:	687b      	ldr	r3, [r7, #4]
 8007266:	699b      	ldr	r3, [r3, #24]
 8007268:	0c1b      	lsrs	r3, r3, #16
 800726a:	f003 0204 	and.w	r2, r3, #4
 800726e:	687b      	ldr	r3, [r7, #4]
 8007270:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007272:	f003 0310 	and.w	r3, r3, #16
 8007276:	431a      	orrs	r2, r3
 8007278:	687b      	ldr	r3, [r7, #4]
 800727a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800727c:	f003 0308 	and.w	r3, r3, #8
 8007280:	431a      	orrs	r2, r3
 8007282:	687b      	ldr	r3, [r7, #4]
 8007284:	68db      	ldr	r3, [r3, #12]
 8007286:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800728a:	ea42 0103 	orr.w	r1, r2, r3
 800728e:	68fb      	ldr	r3, [r7, #12]
 8007290:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
 8007294:	687b      	ldr	r3, [r7, #4]
 8007296:	681b      	ldr	r3, [r3, #0]
 8007298:	430a      	orrs	r2, r1
 800729a:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800729c:	687b      	ldr	r3, [r7, #4]
 800729e:	681b      	ldr	r3, [r3, #0]
 80072a0:	69da      	ldr	r2, [r3, #28]
 80072a2:	687b      	ldr	r3, [r7, #4]
 80072a4:	681b      	ldr	r3, [r3, #0]
 80072a6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80072aa:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80072ac:	687b      	ldr	r3, [r7, #4]
 80072ae:	2200      	movs	r2, #0
 80072b0:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->State     = HAL_SPI_STATE_READY;
 80072b2:	687b      	ldr	r3, [r7, #4]
 80072b4:	2201      	movs	r2, #1
 80072b6:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

  return HAL_OK;
 80072ba:	2300      	movs	r3, #0
}
 80072bc:	4618      	mov	r0, r3
 80072be:	3710      	adds	r7, #16
 80072c0:	46bd      	mov	sp, r7
 80072c2:	bd80      	pop	{r7, pc}

080072c4 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80072c4:	b580      	push	{r7, lr}
 80072c6:	b088      	sub	sp, #32
 80072c8:	af00      	add	r7, sp, #0
 80072ca:	60f8      	str	r0, [r7, #12]
 80072cc:	60b9      	str	r1, [r7, #8]
 80072ce:	603b      	str	r3, [r7, #0]
 80072d0:	4613      	mov	r3, r2
 80072d2:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 80072d4:	2300      	movs	r3, #0
 80072d6:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 80072d8:	68fb      	ldr	r3, [r7, #12]
 80072da:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 80072de:	2b01      	cmp	r3, #1
 80072e0:	d101      	bne.n	80072e6 <HAL_SPI_Transmit+0x22>
 80072e2:	2302      	movs	r3, #2
 80072e4:	e158      	b.n	8007598 <HAL_SPI_Transmit+0x2d4>
 80072e6:	68fb      	ldr	r3, [r7, #12]
 80072e8:	2201      	movs	r2, #1
 80072ea:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80072ee:	f7fc f841 	bl	8003374 <HAL_GetTick>
 80072f2:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 80072f4:	88fb      	ldrh	r3, [r7, #6]
 80072f6:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 80072f8:	68fb      	ldr	r3, [r7, #12]
 80072fa:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 80072fe:	b2db      	uxtb	r3, r3
 8007300:	2b01      	cmp	r3, #1
 8007302:	d002      	beq.n	800730a <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 8007304:	2302      	movs	r3, #2
 8007306:	77fb      	strb	r3, [r7, #31]
    goto error;
 8007308:	e13d      	b.n	8007586 <HAL_SPI_Transmit+0x2c2>
  }

  if ((pData == NULL) || (Size == 0U))
 800730a:	68bb      	ldr	r3, [r7, #8]
 800730c:	2b00      	cmp	r3, #0
 800730e:	d002      	beq.n	8007316 <HAL_SPI_Transmit+0x52>
 8007310:	88fb      	ldrh	r3, [r7, #6]
 8007312:	2b00      	cmp	r3, #0
 8007314:	d102      	bne.n	800731c <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 8007316:	2301      	movs	r3, #1
 8007318:	77fb      	strb	r3, [r7, #31]
    goto error;
 800731a:	e134      	b.n	8007586 <HAL_SPI_Transmit+0x2c2>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800731c:	68fb      	ldr	r3, [r7, #12]
 800731e:	2203      	movs	r2, #3
 8007320:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007324:	68fb      	ldr	r3, [r7, #12]
 8007326:	2200      	movs	r2, #0
 8007328:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800732a:	68fb      	ldr	r3, [r7, #12]
 800732c:	68ba      	ldr	r2, [r7, #8]
 800732e:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->TxXferSize  = Size;
 8007330:	68fb      	ldr	r3, [r7, #12]
 8007332:	88fa      	ldrh	r2, [r7, #6]
 8007334:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->TxXferCount = Size;
 8007336:	68fb      	ldr	r3, [r7, #12]
 8007338:	88fa      	ldrh	r2, [r7, #6]
 800733a:	87da      	strh	r2, [r3, #62]	; 0x3e

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800733c:	68fb      	ldr	r3, [r7, #12]
 800733e:	2200      	movs	r2, #0
 8007340:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->RxXferSize  = 0U;
 8007342:	68fb      	ldr	r3, [r7, #12]
 8007344:	2200      	movs	r2, #0
 8007346:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  hspi->RxXferCount = 0U;
 800734a:	68fb      	ldr	r3, [r7, #12]
 800734c:	2200      	movs	r2, #0
 800734e:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
  hspi->TxISR       = NULL;
 8007352:	68fb      	ldr	r3, [r7, #12]
 8007354:	2200      	movs	r2, #0
 8007356:	651a      	str	r2, [r3, #80]	; 0x50
  hspi->RxISR       = NULL;
 8007358:	68fb      	ldr	r3, [r7, #12]
 800735a:	2200      	movs	r2, #0
 800735c:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800735e:	68fb      	ldr	r3, [r7, #12]
 8007360:	689b      	ldr	r3, [r3, #8]
 8007362:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007366:	d10f      	bne.n	8007388 <HAL_SPI_Transmit+0xc4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8007368:	68fb      	ldr	r3, [r7, #12]
 800736a:	681b      	ldr	r3, [r3, #0]
 800736c:	681a      	ldr	r2, [r3, #0]
 800736e:	68fb      	ldr	r3, [r7, #12]
 8007370:	681b      	ldr	r3, [r3, #0]
 8007372:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007376:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8007378:	68fb      	ldr	r3, [r7, #12]
 800737a:	681b      	ldr	r3, [r3, #0]
 800737c:	681a      	ldr	r2, [r3, #0]
 800737e:	68fb      	ldr	r3, [r7, #12]
 8007380:	681b      	ldr	r3, [r3, #0]
 8007382:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8007386:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007388:	68fb      	ldr	r3, [r7, #12]
 800738a:	681b      	ldr	r3, [r3, #0]
 800738c:	681b      	ldr	r3, [r3, #0]
 800738e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007392:	2b40      	cmp	r3, #64	; 0x40
 8007394:	d007      	beq.n	80073a6 <HAL_SPI_Transmit+0xe2>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8007396:	68fb      	ldr	r3, [r7, #12]
 8007398:	681b      	ldr	r3, [r3, #0]
 800739a:	681a      	ldr	r2, [r3, #0]
 800739c:	68fb      	ldr	r3, [r7, #12]
 800739e:	681b      	ldr	r3, [r3, #0]
 80073a0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80073a4:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80073a6:	68fb      	ldr	r3, [r7, #12]
 80073a8:	68db      	ldr	r3, [r3, #12]
 80073aa:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80073ae:	d94b      	bls.n	8007448 <HAL_SPI_Transmit+0x184>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80073b0:	68fb      	ldr	r3, [r7, #12]
 80073b2:	685b      	ldr	r3, [r3, #4]
 80073b4:	2b00      	cmp	r3, #0
 80073b6:	d002      	beq.n	80073be <HAL_SPI_Transmit+0xfa>
 80073b8:	8afb      	ldrh	r3, [r7, #22]
 80073ba:	2b01      	cmp	r3, #1
 80073bc:	d13e      	bne.n	800743c <HAL_SPI_Transmit+0x178>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80073be:	68fb      	ldr	r3, [r7, #12]
 80073c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80073c2:	881a      	ldrh	r2, [r3, #0]
 80073c4:	68fb      	ldr	r3, [r7, #12]
 80073c6:	681b      	ldr	r3, [r3, #0]
 80073c8:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80073ca:	68fb      	ldr	r3, [r7, #12]
 80073cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80073ce:	1c9a      	adds	r2, r3, #2
 80073d0:	68fb      	ldr	r3, [r7, #12]
 80073d2:	639a      	str	r2, [r3, #56]	; 0x38
      hspi->TxXferCount--;
 80073d4:	68fb      	ldr	r3, [r7, #12]
 80073d6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80073d8:	b29b      	uxth	r3, r3
 80073da:	3b01      	subs	r3, #1
 80073dc:	b29a      	uxth	r2, r3
 80073de:	68fb      	ldr	r3, [r7, #12]
 80073e0:	87da      	strh	r2, [r3, #62]	; 0x3e
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 80073e2:	e02b      	b.n	800743c <HAL_SPI_Transmit+0x178>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80073e4:	68fb      	ldr	r3, [r7, #12]
 80073e6:	681b      	ldr	r3, [r3, #0]
 80073e8:	689b      	ldr	r3, [r3, #8]
 80073ea:	f003 0302 	and.w	r3, r3, #2
 80073ee:	2b02      	cmp	r3, #2
 80073f0:	d112      	bne.n	8007418 <HAL_SPI_Transmit+0x154>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80073f2:	68fb      	ldr	r3, [r7, #12]
 80073f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80073f6:	881a      	ldrh	r2, [r3, #0]
 80073f8:	68fb      	ldr	r3, [r7, #12]
 80073fa:	681b      	ldr	r3, [r3, #0]
 80073fc:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80073fe:	68fb      	ldr	r3, [r7, #12]
 8007400:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007402:	1c9a      	adds	r2, r3, #2
 8007404:	68fb      	ldr	r3, [r7, #12]
 8007406:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount--;
 8007408:	68fb      	ldr	r3, [r7, #12]
 800740a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800740c:	b29b      	uxth	r3, r3
 800740e:	3b01      	subs	r3, #1
 8007410:	b29a      	uxth	r2, r3
 8007412:	68fb      	ldr	r3, [r7, #12]
 8007414:	87da      	strh	r2, [r3, #62]	; 0x3e
 8007416:	e011      	b.n	800743c <HAL_SPI_Transmit+0x178>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007418:	f7fb ffac 	bl	8003374 <HAL_GetTick>
 800741c:	4602      	mov	r2, r0
 800741e:	69bb      	ldr	r3, [r7, #24]
 8007420:	1ad3      	subs	r3, r2, r3
 8007422:	683a      	ldr	r2, [r7, #0]
 8007424:	429a      	cmp	r2, r3
 8007426:	d803      	bhi.n	8007430 <HAL_SPI_Transmit+0x16c>
 8007428:	683b      	ldr	r3, [r7, #0]
 800742a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800742e:	d102      	bne.n	8007436 <HAL_SPI_Transmit+0x172>
 8007430:	683b      	ldr	r3, [r7, #0]
 8007432:	2b00      	cmp	r3, #0
 8007434:	d102      	bne.n	800743c <HAL_SPI_Transmit+0x178>
        {
          errorcode = HAL_TIMEOUT;
 8007436:	2303      	movs	r3, #3
 8007438:	77fb      	strb	r3, [r7, #31]
          goto error;
 800743a:	e0a4      	b.n	8007586 <HAL_SPI_Transmit+0x2c2>
    while (hspi->TxXferCount > 0U)
 800743c:	68fb      	ldr	r3, [r7, #12]
 800743e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007440:	b29b      	uxth	r3, r3
 8007442:	2b00      	cmp	r3, #0
 8007444:	d1ce      	bne.n	80073e4 <HAL_SPI_Transmit+0x120>
 8007446:	e07c      	b.n	8007542 <HAL_SPI_Transmit+0x27e>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007448:	68fb      	ldr	r3, [r7, #12]
 800744a:	685b      	ldr	r3, [r3, #4]
 800744c:	2b00      	cmp	r3, #0
 800744e:	d002      	beq.n	8007456 <HAL_SPI_Transmit+0x192>
 8007450:	8afb      	ldrh	r3, [r7, #22]
 8007452:	2b01      	cmp	r3, #1
 8007454:	d170      	bne.n	8007538 <HAL_SPI_Transmit+0x274>
    {
      if (hspi->TxXferCount > 1U)
 8007456:	68fb      	ldr	r3, [r7, #12]
 8007458:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800745a:	b29b      	uxth	r3, r3
 800745c:	2b01      	cmp	r3, #1
 800745e:	d912      	bls.n	8007486 <HAL_SPI_Transmit+0x1c2>
      {
        /* write on the data register in packing mode */
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007460:	68fb      	ldr	r3, [r7, #12]
 8007462:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007464:	881a      	ldrh	r2, [r3, #0]
 8007466:	68fb      	ldr	r3, [r7, #12]
 8007468:	681b      	ldr	r3, [r3, #0]
 800746a:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800746c:	68fb      	ldr	r3, [r7, #12]
 800746e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007470:	1c9a      	adds	r2, r3, #2
 8007472:	68fb      	ldr	r3, [r7, #12]
 8007474:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount -= 2U;
 8007476:	68fb      	ldr	r3, [r7, #12]
 8007478:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800747a:	b29b      	uxth	r3, r3
 800747c:	3b02      	subs	r3, #2
 800747e:	b29a      	uxth	r2, r3
 8007480:	68fb      	ldr	r3, [r7, #12]
 8007482:	87da      	strh	r2, [r3, #62]	; 0x3e
 8007484:	e058      	b.n	8007538 <HAL_SPI_Transmit+0x274>
      }
      else
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007486:	68fb      	ldr	r3, [r7, #12]
 8007488:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800748a:	68fb      	ldr	r3, [r7, #12]
 800748c:	681b      	ldr	r3, [r3, #0]
 800748e:	330c      	adds	r3, #12
 8007490:	7812      	ldrb	r2, [r2, #0]
 8007492:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr ++;
 8007494:	68fb      	ldr	r3, [r7, #12]
 8007496:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007498:	1c5a      	adds	r2, r3, #1
 800749a:	68fb      	ldr	r3, [r7, #12]
 800749c:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount--;
 800749e:	68fb      	ldr	r3, [r7, #12]
 80074a0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80074a2:	b29b      	uxth	r3, r3
 80074a4:	3b01      	subs	r3, #1
 80074a6:	b29a      	uxth	r2, r3
 80074a8:	68fb      	ldr	r3, [r7, #12]
 80074aa:	87da      	strh	r2, [r3, #62]	; 0x3e
      }
    }
    while (hspi->TxXferCount > 0U)
 80074ac:	e044      	b.n	8007538 <HAL_SPI_Transmit+0x274>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80074ae:	68fb      	ldr	r3, [r7, #12]
 80074b0:	681b      	ldr	r3, [r3, #0]
 80074b2:	689b      	ldr	r3, [r3, #8]
 80074b4:	f003 0302 	and.w	r3, r3, #2
 80074b8:	2b02      	cmp	r3, #2
 80074ba:	d12b      	bne.n	8007514 <HAL_SPI_Transmit+0x250>
      {
        if (hspi->TxXferCount > 1U)
 80074bc:	68fb      	ldr	r3, [r7, #12]
 80074be:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80074c0:	b29b      	uxth	r3, r3
 80074c2:	2b01      	cmp	r3, #1
 80074c4:	d912      	bls.n	80074ec <HAL_SPI_Transmit+0x228>
        {
          /* write on the data register in packing mode */
          hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80074c6:	68fb      	ldr	r3, [r7, #12]
 80074c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074ca:	881a      	ldrh	r2, [r3, #0]
 80074cc:	68fb      	ldr	r3, [r7, #12]
 80074ce:	681b      	ldr	r3, [r3, #0]
 80074d0:	60da      	str	r2, [r3, #12]
          hspi->pTxBuffPtr += sizeof(uint16_t);
 80074d2:	68fb      	ldr	r3, [r7, #12]
 80074d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074d6:	1c9a      	adds	r2, r3, #2
 80074d8:	68fb      	ldr	r3, [r7, #12]
 80074da:	639a      	str	r2, [r3, #56]	; 0x38
          hspi->TxXferCount -= 2U;
 80074dc:	68fb      	ldr	r3, [r7, #12]
 80074de:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80074e0:	b29b      	uxth	r3, r3
 80074e2:	3b02      	subs	r3, #2
 80074e4:	b29a      	uxth	r2, r3
 80074e6:	68fb      	ldr	r3, [r7, #12]
 80074e8:	87da      	strh	r2, [r3, #62]	; 0x3e
 80074ea:	e025      	b.n	8007538 <HAL_SPI_Transmit+0x274>
        }
        else
        {
          *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80074ec:	68fb      	ldr	r3, [r7, #12]
 80074ee:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80074f0:	68fb      	ldr	r3, [r7, #12]
 80074f2:	681b      	ldr	r3, [r3, #0]
 80074f4:	330c      	adds	r3, #12
 80074f6:	7812      	ldrb	r2, [r2, #0]
 80074f8:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr++;
 80074fa:	68fb      	ldr	r3, [r7, #12]
 80074fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074fe:	1c5a      	adds	r2, r3, #1
 8007500:	68fb      	ldr	r3, [r7, #12]
 8007502:	639a      	str	r2, [r3, #56]	; 0x38
          hspi->TxXferCount--;
 8007504:	68fb      	ldr	r3, [r7, #12]
 8007506:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007508:	b29b      	uxth	r3, r3
 800750a:	3b01      	subs	r3, #1
 800750c:	b29a      	uxth	r2, r3
 800750e:	68fb      	ldr	r3, [r7, #12]
 8007510:	87da      	strh	r2, [r3, #62]	; 0x3e
 8007512:	e011      	b.n	8007538 <HAL_SPI_Transmit+0x274>
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007514:	f7fb ff2e 	bl	8003374 <HAL_GetTick>
 8007518:	4602      	mov	r2, r0
 800751a:	69bb      	ldr	r3, [r7, #24]
 800751c:	1ad3      	subs	r3, r2, r3
 800751e:	683a      	ldr	r2, [r7, #0]
 8007520:	429a      	cmp	r2, r3
 8007522:	d803      	bhi.n	800752c <HAL_SPI_Transmit+0x268>
 8007524:	683b      	ldr	r3, [r7, #0]
 8007526:	f1b3 3fff 	cmp.w	r3, #4294967295
 800752a:	d102      	bne.n	8007532 <HAL_SPI_Transmit+0x26e>
 800752c:	683b      	ldr	r3, [r7, #0]
 800752e:	2b00      	cmp	r3, #0
 8007530:	d102      	bne.n	8007538 <HAL_SPI_Transmit+0x274>
        {
          errorcode = HAL_TIMEOUT;
 8007532:	2303      	movs	r3, #3
 8007534:	77fb      	strb	r3, [r7, #31]
          goto error;
 8007536:	e026      	b.n	8007586 <HAL_SPI_Transmit+0x2c2>
    while (hspi->TxXferCount > 0U)
 8007538:	68fb      	ldr	r3, [r7, #12]
 800753a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800753c:	b29b      	uxth	r3, r3
 800753e:	2b00      	cmp	r3, #0
 8007540:	d1b5      	bne.n	80074ae <HAL_SPI_Transmit+0x1ea>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007542:	69ba      	ldr	r2, [r7, #24]
 8007544:	6839      	ldr	r1, [r7, #0]
 8007546:	68f8      	ldr	r0, [r7, #12]
 8007548:	f000 fad2 	bl	8007af0 <SPI_EndRxTxTransaction>
 800754c:	4603      	mov	r3, r0
 800754e:	2b00      	cmp	r3, #0
 8007550:	d002      	beq.n	8007558 <HAL_SPI_Transmit+0x294>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007552:	68fb      	ldr	r3, [r7, #12]
 8007554:	2220      	movs	r2, #32
 8007556:	661a      	str	r2, [r3, #96]	; 0x60
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007558:	68fb      	ldr	r3, [r7, #12]
 800755a:	689b      	ldr	r3, [r3, #8]
 800755c:	2b00      	cmp	r3, #0
 800755e:	d10a      	bne.n	8007576 <HAL_SPI_Transmit+0x2b2>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007560:	2300      	movs	r3, #0
 8007562:	613b      	str	r3, [r7, #16]
 8007564:	68fb      	ldr	r3, [r7, #12]
 8007566:	681b      	ldr	r3, [r3, #0]
 8007568:	68db      	ldr	r3, [r3, #12]
 800756a:	613b      	str	r3, [r7, #16]
 800756c:	68fb      	ldr	r3, [r7, #12]
 800756e:	681b      	ldr	r3, [r3, #0]
 8007570:	689b      	ldr	r3, [r3, #8]
 8007572:	613b      	str	r3, [r7, #16]
 8007574:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007576:	68fb      	ldr	r3, [r7, #12]
 8007578:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800757a:	2b00      	cmp	r3, #0
 800757c:	d002      	beq.n	8007584 <HAL_SPI_Transmit+0x2c0>
  {
    errorcode = HAL_ERROR;
 800757e:	2301      	movs	r3, #1
 8007580:	77fb      	strb	r3, [r7, #31]
 8007582:	e000      	b.n	8007586 <HAL_SPI_Transmit+0x2c2>
  }

error:
 8007584:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8007586:	68fb      	ldr	r3, [r7, #12]
 8007588:	2201      	movs	r2, #1
 800758a:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 800758e:	68fb      	ldr	r3, [r7, #12]
 8007590:	2200      	movs	r2, #0
 8007592:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  return errorcode;
 8007596:	7ffb      	ldrb	r3, [r7, #31]
}
 8007598:	4618      	mov	r0, r3
 800759a:	3720      	adds	r7, #32
 800759c:	46bd      	mov	sp, r7
 800759e:	bd80      	pop	{r7, pc}

080075a0 <HAL_SPI_Transmit_DMA>:
  * @param  pData pointer to data buffer
  * @param  Size amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
{
 80075a0:	b580      	push	{r7, lr}
 80075a2:	b086      	sub	sp, #24
 80075a4:	af00      	add	r7, sp, #0
 80075a6:	60f8      	str	r0, [r7, #12]
 80075a8:	60b9      	str	r1, [r7, #8]
 80075aa:	4613      	mov	r3, r2
 80075ac:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef errorcode = HAL_OK;
 80075ae:	2300      	movs	r3, #0
 80075b0:	75fb      	strb	r3, [r7, #23]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 80075b2:	68fb      	ldr	r3, [r7, #12]
 80075b4:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 80075b8:	2b01      	cmp	r3, #1
 80075ba:	d101      	bne.n	80075c0 <HAL_SPI_Transmit_DMA+0x20>
 80075bc:	2302      	movs	r3, #2
 80075be:	e0d8      	b.n	8007772 <HAL_SPI_Transmit_DMA+0x1d2>
 80075c0:	68fb      	ldr	r3, [r7, #12]
 80075c2:	2201      	movs	r2, #1
 80075c4:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  if (hspi->State != HAL_SPI_STATE_READY)
 80075c8:	68fb      	ldr	r3, [r7, #12]
 80075ca:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 80075ce:	b2db      	uxtb	r3, r3
 80075d0:	2b01      	cmp	r3, #1
 80075d2:	d002      	beq.n	80075da <HAL_SPI_Transmit_DMA+0x3a>
  {
    errorcode = HAL_BUSY;
 80075d4:	2302      	movs	r3, #2
 80075d6:	75fb      	strb	r3, [r7, #23]
    goto error;
 80075d8:	e0c6      	b.n	8007768 <HAL_SPI_Transmit_DMA+0x1c8>
  }

  if ((pData == NULL) || (Size == 0U))
 80075da:	68bb      	ldr	r3, [r7, #8]
 80075dc:	2b00      	cmp	r3, #0
 80075de:	d002      	beq.n	80075e6 <HAL_SPI_Transmit_DMA+0x46>
 80075e0:	88fb      	ldrh	r3, [r7, #6]
 80075e2:	2b00      	cmp	r3, #0
 80075e4:	d102      	bne.n	80075ec <HAL_SPI_Transmit_DMA+0x4c>
  {
    errorcode = HAL_ERROR;
 80075e6:	2301      	movs	r3, #1
 80075e8:	75fb      	strb	r3, [r7, #23]
    goto error;
 80075ea:	e0bd      	b.n	8007768 <HAL_SPI_Transmit_DMA+0x1c8>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80075ec:	68fb      	ldr	r3, [r7, #12]
 80075ee:	2203      	movs	r2, #3
 80075f0:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80075f4:	68fb      	ldr	r3, [r7, #12]
 80075f6:	2200      	movs	r2, #0
 80075f8:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80075fa:	68fb      	ldr	r3, [r7, #12]
 80075fc:	68ba      	ldr	r2, [r7, #8]
 80075fe:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->TxXferSize  = Size;
 8007600:	68fb      	ldr	r3, [r7, #12]
 8007602:	88fa      	ldrh	r2, [r7, #6]
 8007604:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->TxXferCount = Size;
 8007606:	68fb      	ldr	r3, [r7, #12]
 8007608:	88fa      	ldrh	r2, [r7, #6]
 800760a:	87da      	strh	r2, [r3, #62]	; 0x3e

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800760c:	68fb      	ldr	r3, [r7, #12]
 800760e:	2200      	movs	r2, #0
 8007610:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 8007612:	68fb      	ldr	r3, [r7, #12]
 8007614:	2200      	movs	r2, #0
 8007616:	651a      	str	r2, [r3, #80]	; 0x50
  hspi->RxISR       = NULL;
 8007618:	68fb      	ldr	r3, [r7, #12]
 800761a:	2200      	movs	r2, #0
 800761c:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi->RxXferSize  = 0U;
 800761e:	68fb      	ldr	r3, [r7, #12]
 8007620:	2200      	movs	r2, #0
 8007622:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  hspi->RxXferCount = 0U;
 8007626:	68fb      	ldr	r3, [r7, #12]
 8007628:	2200      	movs	r2, #0
 800762a:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800762e:	68fb      	ldr	r3, [r7, #12]
 8007630:	689b      	ldr	r3, [r3, #8]
 8007632:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007636:	d10f      	bne.n	8007658 <HAL_SPI_Transmit_DMA+0xb8>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8007638:	68fb      	ldr	r3, [r7, #12]
 800763a:	681b      	ldr	r3, [r3, #0]
 800763c:	681a      	ldr	r2, [r3, #0]
 800763e:	68fb      	ldr	r3, [r7, #12]
 8007640:	681b      	ldr	r3, [r3, #0]
 8007642:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007646:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8007648:	68fb      	ldr	r3, [r7, #12]
 800764a:	681b      	ldr	r3, [r3, #0]
 800764c:	681a      	ldr	r2, [r3, #0]
 800764e:	68fb      	ldr	r3, [r7, #12]
 8007650:	681b      	ldr	r3, [r3, #0]
 8007652:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8007656:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 8007658:	68fb      	ldr	r3, [r7, #12]
 800765a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800765c:	4a47      	ldr	r2, [pc, #284]	; (800777c <HAL_SPI_Transmit_DMA+0x1dc>)
 800765e:	641a      	str	r2, [r3, #64]	; 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 8007660:	68fb      	ldr	r3, [r7, #12]
 8007662:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007664:	4a46      	ldr	r2, [pc, #280]	; (8007780 <HAL_SPI_Transmit_DMA+0x1e0>)
 8007666:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 8007668:	68fb      	ldr	r3, [r7, #12]
 800766a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800766c:	4a45      	ldr	r2, [pc, #276]	; (8007784 <HAL_SPI_Transmit_DMA+0x1e4>)
 800766e:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 8007670:	68fb      	ldr	r3, [r7, #12]
 8007672:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007674:	2200      	movs	r2, #0
 8007676:	651a      	str	r2, [r3, #80]	; 0x50

  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 8007678:	68fb      	ldr	r3, [r7, #12]
 800767a:	681b      	ldr	r3, [r3, #0]
 800767c:	685a      	ldr	r2, [r3, #4]
 800767e:	68fb      	ldr	r3, [r7, #12]
 8007680:	681b      	ldr	r3, [r3, #0]
 8007682:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8007686:	605a      	str	r2, [r3, #4]
  /* Packing mode is enabled only if the DMA setting is HALWORD */
  if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD))
 8007688:	68fb      	ldr	r3, [r7, #12]
 800768a:	68db      	ldr	r3, [r3, #12]
 800768c:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8007690:	d82d      	bhi.n	80076ee <HAL_SPI_Transmit_DMA+0x14e>
 8007692:	68fb      	ldr	r3, [r7, #12]
 8007694:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007696:	699b      	ldr	r3, [r3, #24]
 8007698:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800769c:	d127      	bne.n	80076ee <HAL_SPI_Transmit_DMA+0x14e>
  {
    /* Check the even/odd of the data size + crc if enabled */
    if ((hspi->TxXferCount & 0x1U) == 0U)
 800769e:	68fb      	ldr	r3, [r7, #12]
 80076a0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80076a2:	b29b      	uxth	r3, r3
 80076a4:	f003 0301 	and.w	r3, r3, #1
 80076a8:	2b00      	cmp	r3, #0
 80076aa:	d10f      	bne.n	80076cc <HAL_SPI_Transmit_DMA+0x12c>
    {
      CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 80076ac:	68fb      	ldr	r3, [r7, #12]
 80076ae:	681b      	ldr	r3, [r3, #0]
 80076b0:	685a      	ldr	r2, [r3, #4]
 80076b2:	68fb      	ldr	r3, [r7, #12]
 80076b4:	681b      	ldr	r3, [r3, #0]
 80076b6:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80076ba:	605a      	str	r2, [r3, #4]
      hspi->TxXferCount = (hspi->TxXferCount >> 1U);
 80076bc:	68fb      	ldr	r3, [r7, #12]
 80076be:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80076c0:	b29b      	uxth	r3, r3
 80076c2:	085b      	lsrs	r3, r3, #1
 80076c4:	b29a      	uxth	r2, r3
 80076c6:	68fb      	ldr	r3, [r7, #12]
 80076c8:	87da      	strh	r2, [r3, #62]	; 0x3e
 80076ca:	e010      	b.n	80076ee <HAL_SPI_Transmit_DMA+0x14e>
    }
    else
    {
      SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
 80076cc:	68fb      	ldr	r3, [r7, #12]
 80076ce:	681b      	ldr	r3, [r3, #0]
 80076d0:	685a      	ldr	r2, [r3, #4]
 80076d2:	68fb      	ldr	r3, [r7, #12]
 80076d4:	681b      	ldr	r3, [r3, #0]
 80076d6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80076da:	605a      	str	r2, [r3, #4]
      hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 80076dc:	68fb      	ldr	r3, [r7, #12]
 80076de:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80076e0:	b29b      	uxth	r3, r3
 80076e2:	085b      	lsrs	r3, r3, #1
 80076e4:	b29b      	uxth	r3, r3
 80076e6:	3301      	adds	r3, #1
 80076e8:	b29a      	uxth	r2, r3
 80076ea:	68fb      	ldr	r3, [r7, #12]
 80076ec:	87da      	strh	r2, [r3, #62]	; 0x3e
    }
  }

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 80076ee:	68fb      	ldr	r3, [r7, #12]
 80076f0:	6d58      	ldr	r0, [r3, #84]	; 0x54
 80076f2:	68fb      	ldr	r3, [r7, #12]
 80076f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80076f6:	4619      	mov	r1, r3
 80076f8:	68fb      	ldr	r3, [r7, #12]
 80076fa:	681b      	ldr	r3, [r3, #0]
 80076fc:	330c      	adds	r3, #12
 80076fe:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 8007700:	68fb      	ldr	r3, [r7, #12]
 8007702:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007704:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8007706:	f7fc f90f 	bl	8003928 <HAL_DMA_Start_IT>
 800770a:	4603      	mov	r3, r0
 800770c:	2b00      	cmp	r3, #0
 800770e:	d00c      	beq.n	800772a <HAL_SPI_Transmit_DMA+0x18a>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8007710:	68fb      	ldr	r3, [r7, #12]
 8007712:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007714:	f043 0210 	orr.w	r2, r3, #16
 8007718:	68fb      	ldr	r3, [r7, #12]
 800771a:	661a      	str	r2, [r3, #96]	; 0x60
    errorcode = HAL_ERROR;
 800771c:	2301      	movs	r3, #1
 800771e:	75fb      	strb	r3, [r7, #23]

    hspi->State = HAL_SPI_STATE_READY;
 8007720:	68fb      	ldr	r3, [r7, #12]
 8007722:	2201      	movs	r2, #1
 8007724:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
    goto error;
 8007728:	e01e      	b.n	8007768 <HAL_SPI_Transmit_DMA+0x1c8>
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800772a:	68fb      	ldr	r3, [r7, #12]
 800772c:	681b      	ldr	r3, [r3, #0]
 800772e:	681b      	ldr	r3, [r3, #0]
 8007730:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007734:	2b40      	cmp	r3, #64	; 0x40
 8007736:	d007      	beq.n	8007748 <HAL_SPI_Transmit_DMA+0x1a8>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8007738:	68fb      	ldr	r3, [r7, #12]
 800773a:	681b      	ldr	r3, [r3, #0]
 800773c:	681a      	ldr	r2, [r3, #0]
 800773e:	68fb      	ldr	r3, [r7, #12]
 8007740:	681b      	ldr	r3, [r3, #0]
 8007742:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007746:	601a      	str	r2, [r3, #0]
  }

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 8007748:	68fb      	ldr	r3, [r7, #12]
 800774a:	681b      	ldr	r3, [r3, #0]
 800774c:	685a      	ldr	r2, [r3, #4]
 800774e:	68fb      	ldr	r3, [r7, #12]
 8007750:	681b      	ldr	r3, [r3, #0]
 8007752:	f042 0220 	orr.w	r2, r2, #32
 8007756:	605a      	str	r2, [r3, #4]

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8007758:	68fb      	ldr	r3, [r7, #12]
 800775a:	681b      	ldr	r3, [r3, #0]
 800775c:	685a      	ldr	r2, [r3, #4]
 800775e:	68fb      	ldr	r3, [r7, #12]
 8007760:	681b      	ldr	r3, [r3, #0]
 8007762:	f042 0202 	orr.w	r2, r2, #2
 8007766:	605a      	str	r2, [r3, #4]

error :
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8007768:	68fb      	ldr	r3, [r7, #12]
 800776a:	2200      	movs	r2, #0
 800776c:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  return errorcode;
 8007770:	7dfb      	ldrb	r3, [r7, #23]
}
 8007772:	4618      	mov	r0, r3
 8007774:	3718      	adds	r7, #24
 8007776:	46bd      	mov	sp, r7
 8007778:	bd80      	pop	{r7, pc}
 800777a:	bf00      	nop
 800777c:	08007859 	.word	0x08007859
 8007780:	080077b1 	.word	0x080077b1
 8007784:	08007875 	.word	0x08007875

08007788 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 8007788:	b480      	push	{r7}
 800778a:	b083      	sub	sp, #12
 800778c:	af00      	add	r7, sp, #0
 800778e:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 8007790:	bf00      	nop
 8007792:	370c      	adds	r7, #12
 8007794:	46bd      	mov	sp, r7
 8007796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800779a:	4770      	bx	lr

0800779c <HAL_SPI_ErrorCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
{
 800779c:	b480      	push	{r7}
 800779e:	b083      	sub	sp, #12
 80077a0:	af00      	add	r7, sp, #0
 80077a2:	6078      	str	r0, [r7, #4]
            the HAL_SPI_ErrorCallback should be implemented in the user file
   */
  /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
            and user can use HAL_SPI_GetError() API to check the latest error occurred
   */
}
 80077a4:	bf00      	nop
 80077a6:	370c      	adds	r7, #12
 80077a8:	46bd      	mov	sp, r7
 80077aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077ae:	4770      	bx	lr

080077b0 <SPI_DMATransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 80077b0:	b580      	push	{r7, lr}
 80077b2:	b086      	sub	sp, #24
 80077b4:	af00      	add	r7, sp, #0
 80077b6:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 80077b8:	687b      	ldr	r3, [r7, #4]
 80077ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80077bc:	617b      	str	r3, [r7, #20]
  uint32_t tickstart;

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80077be:	f7fb fdd9 	bl	8003374 <HAL_GetTick>
 80077c2:	6138      	str	r0, [r7, #16]

  /* DMA Normal Mode */
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 80077c4:	687b      	ldr	r3, [r7, #4]
 80077c6:	681b      	ldr	r3, [r3, #0]
 80077c8:	681b      	ldr	r3, [r3, #0]
 80077ca:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80077ce:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80077d2:	d03b      	beq.n	800784c <SPI_DMATransmitCplt+0x9c>
  {
    /* Disable ERR interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 80077d4:	697b      	ldr	r3, [r7, #20]
 80077d6:	681b      	ldr	r3, [r3, #0]
 80077d8:	685a      	ldr	r2, [r3, #4]
 80077da:	697b      	ldr	r3, [r7, #20]
 80077dc:	681b      	ldr	r3, [r3, #0]
 80077de:	f022 0220 	bic.w	r2, r2, #32
 80077e2:	605a      	str	r2, [r3, #4]

    /* Disable Tx DMA Request */
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 80077e4:	697b      	ldr	r3, [r7, #20]
 80077e6:	681b      	ldr	r3, [r3, #0]
 80077e8:	685a      	ldr	r2, [r3, #4]
 80077ea:	697b      	ldr	r3, [r7, #20]
 80077ec:	681b      	ldr	r3, [r3, #0]
 80077ee:	f022 0202 	bic.w	r2, r2, #2
 80077f2:	605a      	str	r2, [r3, #4]

    /* Check the end of the transaction */
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 80077f4:	693a      	ldr	r2, [r7, #16]
 80077f6:	2164      	movs	r1, #100	; 0x64
 80077f8:	6978      	ldr	r0, [r7, #20]
 80077fa:	f000 f979 	bl	8007af0 <SPI_EndRxTxTransaction>
 80077fe:	4603      	mov	r3, r0
 8007800:	2b00      	cmp	r3, #0
 8007802:	d005      	beq.n	8007810 <SPI_DMATransmitCplt+0x60>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007804:	697b      	ldr	r3, [r7, #20]
 8007806:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007808:	f043 0220 	orr.w	r2, r3, #32
 800780c:	697b      	ldr	r3, [r7, #20]
 800780e:	661a      	str	r2, [r3, #96]	; 0x60
    }

    /* Clear overrun flag in 2 Lines communication mode because received data is not read */
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007810:	697b      	ldr	r3, [r7, #20]
 8007812:	689b      	ldr	r3, [r3, #8]
 8007814:	2b00      	cmp	r3, #0
 8007816:	d10a      	bne.n	800782e <SPI_DMATransmitCplt+0x7e>
    {
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007818:	2300      	movs	r3, #0
 800781a:	60fb      	str	r3, [r7, #12]
 800781c:	697b      	ldr	r3, [r7, #20]
 800781e:	681b      	ldr	r3, [r3, #0]
 8007820:	68db      	ldr	r3, [r3, #12]
 8007822:	60fb      	str	r3, [r7, #12]
 8007824:	697b      	ldr	r3, [r7, #20]
 8007826:	681b      	ldr	r3, [r3, #0]
 8007828:	689b      	ldr	r3, [r3, #8]
 800782a:	60fb      	str	r3, [r7, #12]
 800782c:	68fb      	ldr	r3, [r7, #12]
    }

    hspi->TxXferCount = 0U;
 800782e:	697b      	ldr	r3, [r7, #20]
 8007830:	2200      	movs	r2, #0
 8007832:	87da      	strh	r2, [r3, #62]	; 0x3e
    hspi->State = HAL_SPI_STATE_READY;
 8007834:	697b      	ldr	r3, [r7, #20]
 8007836:	2201      	movs	r2, #1
 8007838:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800783c:	697b      	ldr	r3, [r7, #20]
 800783e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007840:	2b00      	cmp	r3, #0
 8007842:	d003      	beq.n	800784c <SPI_DMATransmitCplt+0x9c>
    {
      /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 8007844:	6978      	ldr	r0, [r7, #20]
 8007846:	f7ff ffa9 	bl	800779c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 800784a:	e002      	b.n	8007852 <SPI_DMATransmitCplt+0xa2>
  }
  /* Call user Tx complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxCpltCallback(hspi);
#else
  HAL_SPI_TxCpltCallback(hspi);
 800784c:	6978      	ldr	r0, [r7, #20]
 800784e:	f005 fc87 	bl	800d160 <HAL_SPI_TxCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8007852:	3718      	adds	r7, #24
 8007854:	46bd      	mov	sp, r7
 8007856:	bd80      	pop	{r7, pc}

08007858 <SPI_DMAHalfTransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 8007858:	b580      	push	{r7, lr}
 800785a:	b084      	sub	sp, #16
 800785c:	af00      	add	r7, sp, #0
 800785e:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8007860:	687b      	ldr	r3, [r7, #4]
 8007862:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007864:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 8007866:	68f8      	ldr	r0, [r7, #12]
 8007868:	f7ff ff8e 	bl	8007788 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800786c:	bf00      	nop
 800786e:	3710      	adds	r7, #16
 8007870:	46bd      	mov	sp, r7
 8007872:	bd80      	pop	{r7, pc}

08007874 <SPI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 8007874:	b580      	push	{r7, lr}
 8007876:	b084      	sub	sp, #16
 8007878:	af00      	add	r7, sp, #0
 800787a:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 800787c:	687b      	ldr	r3, [r7, #4]
 800787e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007880:	60fb      	str	r3, [r7, #12]

  /* Stop the disable DMA transfer on SPI side */
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 8007882:	68fb      	ldr	r3, [r7, #12]
 8007884:	681b      	ldr	r3, [r3, #0]
 8007886:	685a      	ldr	r2, [r3, #4]
 8007888:	68fb      	ldr	r3, [r7, #12]
 800788a:	681b      	ldr	r3, [r3, #0]
 800788c:	f022 0203 	bic.w	r2, r2, #3
 8007890:	605a      	str	r2, [r3, #4]

  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8007892:	68fb      	ldr	r3, [r7, #12]
 8007894:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007896:	f043 0210 	orr.w	r2, r3, #16
 800789a:	68fb      	ldr	r3, [r7, #12]
 800789c:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->State = HAL_SPI_STATE_READY;
 800789e:	68fb      	ldr	r3, [r7, #12]
 80078a0:	2201      	movs	r2, #1
 80078a2:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 80078a6:	68f8      	ldr	r0, [r7, #12]
 80078a8:	f7ff ff78 	bl	800779c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 80078ac:	bf00      	nop
 80078ae:	3710      	adds	r7, #16
 80078b0:	46bd      	mov	sp, r7
 80078b2:	bd80      	pop	{r7, pc}

080078b4 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 80078b4:	b580      	push	{r7, lr}
 80078b6:	b088      	sub	sp, #32
 80078b8:	af00      	add	r7, sp, #0
 80078ba:	60f8      	str	r0, [r7, #12]
 80078bc:	60b9      	str	r1, [r7, #8]
 80078be:	603b      	str	r3, [r7, #0]
 80078c0:	4613      	mov	r3, r2
 80078c2:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 80078c4:	f7fb fd56 	bl	8003374 <HAL_GetTick>
 80078c8:	4602      	mov	r2, r0
 80078ca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80078cc:	1a9b      	subs	r3, r3, r2
 80078ce:	683a      	ldr	r2, [r7, #0]
 80078d0:	4413      	add	r3, r2
 80078d2:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 80078d4:	f7fb fd4e 	bl	8003374 <HAL_GetTick>
 80078d8:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80078da:	4b39      	ldr	r3, [pc, #228]	; (80079c0 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80078dc:	681b      	ldr	r3, [r3, #0]
 80078de:	015b      	lsls	r3, r3, #5
 80078e0:	0d1b      	lsrs	r3, r3, #20
 80078e2:	69fa      	ldr	r2, [r7, #28]
 80078e4:	fb02 f303 	mul.w	r3, r2, r3
 80078e8:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80078ea:	e054      	b.n	8007996 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 80078ec:	683b      	ldr	r3, [r7, #0]
 80078ee:	f1b3 3fff 	cmp.w	r3, #4294967295
 80078f2:	d050      	beq.n	8007996 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 80078f4:	f7fb fd3e 	bl	8003374 <HAL_GetTick>
 80078f8:	4602      	mov	r2, r0
 80078fa:	69bb      	ldr	r3, [r7, #24]
 80078fc:	1ad3      	subs	r3, r2, r3
 80078fe:	69fa      	ldr	r2, [r7, #28]
 8007900:	429a      	cmp	r2, r3
 8007902:	d902      	bls.n	800790a <SPI_WaitFlagStateUntilTimeout+0x56>
 8007904:	69fb      	ldr	r3, [r7, #28]
 8007906:	2b00      	cmp	r3, #0
 8007908:	d13d      	bne.n	8007986 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800790a:	68fb      	ldr	r3, [r7, #12]
 800790c:	681b      	ldr	r3, [r3, #0]
 800790e:	685a      	ldr	r2, [r3, #4]
 8007910:	68fb      	ldr	r3, [r7, #12]
 8007912:	681b      	ldr	r3, [r3, #0]
 8007914:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007918:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800791a:	68fb      	ldr	r3, [r7, #12]
 800791c:	685b      	ldr	r3, [r3, #4]
 800791e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007922:	d111      	bne.n	8007948 <SPI_WaitFlagStateUntilTimeout+0x94>
 8007924:	68fb      	ldr	r3, [r7, #12]
 8007926:	689b      	ldr	r3, [r3, #8]
 8007928:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800792c:	d004      	beq.n	8007938 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800792e:	68fb      	ldr	r3, [r7, #12]
 8007930:	689b      	ldr	r3, [r3, #8]
 8007932:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007936:	d107      	bne.n	8007948 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8007938:	68fb      	ldr	r3, [r7, #12]
 800793a:	681b      	ldr	r3, [r3, #0]
 800793c:	681a      	ldr	r2, [r3, #0]
 800793e:	68fb      	ldr	r3, [r7, #12]
 8007940:	681b      	ldr	r3, [r3, #0]
 8007942:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007946:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007948:	68fb      	ldr	r3, [r7, #12]
 800794a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800794c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007950:	d10f      	bne.n	8007972 <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8007952:	68fb      	ldr	r3, [r7, #12]
 8007954:	681b      	ldr	r3, [r3, #0]
 8007956:	681a      	ldr	r2, [r3, #0]
 8007958:	68fb      	ldr	r3, [r7, #12]
 800795a:	681b      	ldr	r3, [r3, #0]
 800795c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007960:	601a      	str	r2, [r3, #0]
 8007962:	68fb      	ldr	r3, [r7, #12]
 8007964:	681b      	ldr	r3, [r3, #0]
 8007966:	681a      	ldr	r2, [r3, #0]
 8007968:	68fb      	ldr	r3, [r7, #12]
 800796a:	681b      	ldr	r3, [r3, #0]
 800796c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007970:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8007972:	68fb      	ldr	r3, [r7, #12]
 8007974:	2201      	movs	r2, #1
 8007976:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 800797a:	68fb      	ldr	r3, [r7, #12]
 800797c:	2200      	movs	r2, #0
 800797e:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

        return HAL_TIMEOUT;
 8007982:	2303      	movs	r3, #3
 8007984:	e017      	b.n	80079b6 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8007986:	697b      	ldr	r3, [r7, #20]
 8007988:	2b00      	cmp	r3, #0
 800798a:	d101      	bne.n	8007990 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 800798c:	2300      	movs	r3, #0
 800798e:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8007990:	697b      	ldr	r3, [r7, #20]
 8007992:	3b01      	subs	r3, #1
 8007994:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007996:	68fb      	ldr	r3, [r7, #12]
 8007998:	681b      	ldr	r3, [r3, #0]
 800799a:	689a      	ldr	r2, [r3, #8]
 800799c:	68bb      	ldr	r3, [r7, #8]
 800799e:	4013      	ands	r3, r2
 80079a0:	68ba      	ldr	r2, [r7, #8]
 80079a2:	429a      	cmp	r2, r3
 80079a4:	bf0c      	ite	eq
 80079a6:	2301      	moveq	r3, #1
 80079a8:	2300      	movne	r3, #0
 80079aa:	b2db      	uxtb	r3, r3
 80079ac:	461a      	mov	r2, r3
 80079ae:	79fb      	ldrb	r3, [r7, #7]
 80079b0:	429a      	cmp	r2, r3
 80079b2:	d19b      	bne.n	80078ec <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 80079b4:	2300      	movs	r3, #0
}
 80079b6:	4618      	mov	r0, r3
 80079b8:	3720      	adds	r7, #32
 80079ba:	46bd      	mov	sp, r7
 80079bc:	bd80      	pop	{r7, pc}
 80079be:	bf00      	nop
 80079c0:	20000008 	.word	0x20000008

080079c4 <SPI_WaitFifoStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint32_t State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 80079c4:	b580      	push	{r7, lr}
 80079c6:	b08a      	sub	sp, #40	; 0x28
 80079c8:	af00      	add	r7, sp, #0
 80079ca:	60f8      	str	r0, [r7, #12]
 80079cc:	60b9      	str	r1, [r7, #8]
 80079ce:	607a      	str	r2, [r7, #4]
 80079d0:	603b      	str	r3, [r7, #0]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;
  __IO uint8_t  *ptmpreg8;
  __IO uint8_t  tmpreg8 = 0;
 80079d2:	2300      	movs	r3, #0
 80079d4:	75fb      	strb	r3, [r7, #23]

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout = Timeout - (HAL_GetTick() - Tickstart);
 80079d6:	f7fb fccd 	bl	8003374 <HAL_GetTick>
 80079da:	4602      	mov	r2, r0
 80079dc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80079de:	1a9b      	subs	r3, r3, r2
 80079e0:	683a      	ldr	r2, [r7, #0]
 80079e2:	4413      	add	r3, r2
 80079e4:	627b      	str	r3, [r7, #36]	; 0x24
  tmp_tickstart = HAL_GetTick();
 80079e6:	f7fb fcc5 	bl	8003374 <HAL_GetTick>
 80079ea:	6238      	str	r0, [r7, #32]

  /* Initialize the 8bit temporary pointer */
  ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
 80079ec:	68fb      	ldr	r3, [r7, #12]
 80079ee:	681b      	ldr	r3, [r3, #0]
 80079f0:	330c      	adds	r3, #12
 80079f2:	61fb      	str	r3, [r7, #28]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 35U) >> 20U);
 80079f4:	4b3d      	ldr	r3, [pc, #244]	; (8007aec <SPI_WaitFifoStateUntilTimeout+0x128>)
 80079f6:	681a      	ldr	r2, [r3, #0]
 80079f8:	4613      	mov	r3, r2
 80079fa:	009b      	lsls	r3, r3, #2
 80079fc:	4413      	add	r3, r2
 80079fe:	00da      	lsls	r2, r3, #3
 8007a00:	1ad3      	subs	r3, r2, r3
 8007a02:	0d1b      	lsrs	r3, r3, #20
 8007a04:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007a06:	fb02 f303 	mul.w	r3, r2, r3
 8007a0a:	61bb      	str	r3, [r7, #24]

  while ((hspi->Instance->SR & Fifo) != State)
 8007a0c:	e060      	b.n	8007ad0 <SPI_WaitFifoStateUntilTimeout+0x10c>
  {
    if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
 8007a0e:	68bb      	ldr	r3, [r7, #8]
 8007a10:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8007a14:	d107      	bne.n	8007a26 <SPI_WaitFifoStateUntilTimeout+0x62>
 8007a16:	687b      	ldr	r3, [r7, #4]
 8007a18:	2b00      	cmp	r3, #0
 8007a1a:	d104      	bne.n	8007a26 <SPI_WaitFifoStateUntilTimeout+0x62>
    {
      /* Flush Data Register by a blank read */
      tmpreg8 = *ptmpreg8;
 8007a1c:	69fb      	ldr	r3, [r7, #28]
 8007a1e:	781b      	ldrb	r3, [r3, #0]
 8007a20:	b2db      	uxtb	r3, r3
 8007a22:	75fb      	strb	r3, [r7, #23]
      /* To avoid GCC warning */
      UNUSED(tmpreg8);
 8007a24:	7dfb      	ldrb	r3, [r7, #23]
    }

    if (Timeout != HAL_MAX_DELAY)
 8007a26:	683b      	ldr	r3, [r7, #0]
 8007a28:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007a2c:	d050      	beq.n	8007ad0 <SPI_WaitFifoStateUntilTimeout+0x10c>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8007a2e:	f7fb fca1 	bl	8003374 <HAL_GetTick>
 8007a32:	4602      	mov	r2, r0
 8007a34:	6a3b      	ldr	r3, [r7, #32]
 8007a36:	1ad3      	subs	r3, r2, r3
 8007a38:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007a3a:	429a      	cmp	r2, r3
 8007a3c:	d902      	bls.n	8007a44 <SPI_WaitFifoStateUntilTimeout+0x80>
 8007a3e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007a40:	2b00      	cmp	r3, #0
 8007a42:	d13d      	bne.n	8007ac0 <SPI_WaitFifoStateUntilTimeout+0xfc>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007a44:	68fb      	ldr	r3, [r7, #12]
 8007a46:	681b      	ldr	r3, [r3, #0]
 8007a48:	685a      	ldr	r2, [r3, #4]
 8007a4a:	68fb      	ldr	r3, [r7, #12]
 8007a4c:	681b      	ldr	r3, [r3, #0]
 8007a4e:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007a52:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007a54:	68fb      	ldr	r3, [r7, #12]
 8007a56:	685b      	ldr	r3, [r3, #4]
 8007a58:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007a5c:	d111      	bne.n	8007a82 <SPI_WaitFifoStateUntilTimeout+0xbe>
 8007a5e:	68fb      	ldr	r3, [r7, #12]
 8007a60:	689b      	ldr	r3, [r3, #8]
 8007a62:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007a66:	d004      	beq.n	8007a72 <SPI_WaitFifoStateUntilTimeout+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007a68:	68fb      	ldr	r3, [r7, #12]
 8007a6a:	689b      	ldr	r3, [r3, #8]
 8007a6c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007a70:	d107      	bne.n	8007a82 <SPI_WaitFifoStateUntilTimeout+0xbe>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8007a72:	68fb      	ldr	r3, [r7, #12]
 8007a74:	681b      	ldr	r3, [r3, #0]
 8007a76:	681a      	ldr	r2, [r3, #0]
 8007a78:	68fb      	ldr	r3, [r7, #12]
 8007a7a:	681b      	ldr	r3, [r3, #0]
 8007a7c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007a80:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007a82:	68fb      	ldr	r3, [r7, #12]
 8007a84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007a86:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007a8a:	d10f      	bne.n	8007aac <SPI_WaitFifoStateUntilTimeout+0xe8>
        {
          SPI_RESET_CRC(hspi);
 8007a8c:	68fb      	ldr	r3, [r7, #12]
 8007a8e:	681b      	ldr	r3, [r3, #0]
 8007a90:	681a      	ldr	r2, [r3, #0]
 8007a92:	68fb      	ldr	r3, [r7, #12]
 8007a94:	681b      	ldr	r3, [r3, #0]
 8007a96:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007a9a:	601a      	str	r2, [r3, #0]
 8007a9c:	68fb      	ldr	r3, [r7, #12]
 8007a9e:	681b      	ldr	r3, [r3, #0]
 8007aa0:	681a      	ldr	r2, [r3, #0]
 8007aa2:	68fb      	ldr	r3, [r7, #12]
 8007aa4:	681b      	ldr	r3, [r3, #0]
 8007aa6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007aaa:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8007aac:	68fb      	ldr	r3, [r7, #12]
 8007aae:	2201      	movs	r2, #1
 8007ab0:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8007ab4:	68fb      	ldr	r3, [r7, #12]
 8007ab6:	2200      	movs	r2, #0
 8007ab8:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

        return HAL_TIMEOUT;
 8007abc:	2303      	movs	r3, #3
 8007abe:	e010      	b.n	8007ae2 <SPI_WaitFifoStateUntilTimeout+0x11e>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8007ac0:	69bb      	ldr	r3, [r7, #24]
 8007ac2:	2b00      	cmp	r3, #0
 8007ac4:	d101      	bne.n	8007aca <SPI_WaitFifoStateUntilTimeout+0x106>
      {
        tmp_timeout = 0U;
 8007ac6:	2300      	movs	r3, #0
 8007ac8:	627b      	str	r3, [r7, #36]	; 0x24
      }
      count--;
 8007aca:	69bb      	ldr	r3, [r7, #24]
 8007acc:	3b01      	subs	r3, #1
 8007ace:	61bb      	str	r3, [r7, #24]
  while ((hspi->Instance->SR & Fifo) != State)
 8007ad0:	68fb      	ldr	r3, [r7, #12]
 8007ad2:	681b      	ldr	r3, [r3, #0]
 8007ad4:	689a      	ldr	r2, [r3, #8]
 8007ad6:	68bb      	ldr	r3, [r7, #8]
 8007ad8:	4013      	ands	r3, r2
 8007ada:	687a      	ldr	r2, [r7, #4]
 8007adc:	429a      	cmp	r2, r3
 8007ade:	d196      	bne.n	8007a0e <SPI_WaitFifoStateUntilTimeout+0x4a>
    }
  }

  return HAL_OK;
 8007ae0:	2300      	movs	r3, #0
}
 8007ae2:	4618      	mov	r0, r3
 8007ae4:	3728      	adds	r7, #40	; 0x28
 8007ae6:	46bd      	mov	sp, r7
 8007ae8:	bd80      	pop	{r7, pc}
 8007aea:	bf00      	nop
 8007aec:	20000008 	.word	0x20000008

08007af0 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007af0:	b580      	push	{r7, lr}
 8007af2:	b088      	sub	sp, #32
 8007af4:	af02      	add	r7, sp, #8
 8007af6:	60f8      	str	r0, [r7, #12]
 8007af8:	60b9      	str	r1, [r7, #8]
 8007afa:	607a      	str	r2, [r7, #4]
  /* Control if the TX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8007afc:	687b      	ldr	r3, [r7, #4]
 8007afe:	9300      	str	r3, [sp, #0]
 8007b00:	68bb      	ldr	r3, [r7, #8]
 8007b02:	2200      	movs	r2, #0
 8007b04:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 8007b08:	68f8      	ldr	r0, [r7, #12]
 8007b0a:	f7ff ff5b 	bl	80079c4 <SPI_WaitFifoStateUntilTimeout>
 8007b0e:	4603      	mov	r3, r0
 8007b10:	2b00      	cmp	r3, #0
 8007b12:	d007      	beq.n	8007b24 <SPI_EndRxTxTransaction+0x34>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007b14:	68fb      	ldr	r3, [r7, #12]
 8007b16:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007b18:	f043 0220 	orr.w	r2, r3, #32
 8007b1c:	68fb      	ldr	r3, [r7, #12]
 8007b1e:	661a      	str	r2, [r3, #96]	; 0x60
    return HAL_TIMEOUT;
 8007b20:	2303      	movs	r3, #3
 8007b22:	e046      	b.n	8007bb2 <SPI_EndRxTxTransaction+0xc2>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007b24:	4b25      	ldr	r3, [pc, #148]	; (8007bbc <SPI_EndRxTxTransaction+0xcc>)
 8007b26:	681b      	ldr	r3, [r3, #0]
 8007b28:	4a25      	ldr	r2, [pc, #148]	; (8007bc0 <SPI_EndRxTxTransaction+0xd0>)
 8007b2a:	fba2 2303 	umull	r2, r3, r2, r3
 8007b2e:	0d5b      	lsrs	r3, r3, #21
 8007b30:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007b34:	fb02 f303 	mul.w	r3, r2, r3
 8007b38:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b3a:	68fb      	ldr	r3, [r7, #12]
 8007b3c:	685b      	ldr	r3, [r3, #4]
 8007b3e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007b42:	d112      	bne.n	8007b6a <SPI_EndRxTxTransaction+0x7a>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007b44:	687b      	ldr	r3, [r7, #4]
 8007b46:	9300      	str	r3, [sp, #0]
 8007b48:	68bb      	ldr	r3, [r7, #8]
 8007b4a:	2200      	movs	r2, #0
 8007b4c:	2180      	movs	r1, #128	; 0x80
 8007b4e:	68f8      	ldr	r0, [r7, #12]
 8007b50:	f7ff feb0 	bl	80078b4 <SPI_WaitFlagStateUntilTimeout>
 8007b54:	4603      	mov	r3, r0
 8007b56:	2b00      	cmp	r3, #0
 8007b58:	d016      	beq.n	8007b88 <SPI_EndRxTxTransaction+0x98>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007b5a:	68fb      	ldr	r3, [r7, #12]
 8007b5c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007b5e:	f043 0220 	orr.w	r2, r3, #32
 8007b62:	68fb      	ldr	r3, [r7, #12]
 8007b64:	661a      	str	r2, [r3, #96]	; 0x60
      return HAL_TIMEOUT;
 8007b66:	2303      	movs	r3, #3
 8007b68:	e023      	b.n	8007bb2 <SPI_EndRxTxTransaction+0xc2>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8007b6a:	697b      	ldr	r3, [r7, #20]
 8007b6c:	2b00      	cmp	r3, #0
 8007b6e:	d00a      	beq.n	8007b86 <SPI_EndRxTxTransaction+0x96>
      {
        break;
      }
      count--;
 8007b70:	697b      	ldr	r3, [r7, #20]
 8007b72:	3b01      	subs	r3, #1
 8007b74:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8007b76:	68fb      	ldr	r3, [r7, #12]
 8007b78:	681b      	ldr	r3, [r3, #0]
 8007b7a:	689b      	ldr	r3, [r3, #8]
 8007b7c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007b80:	2b80      	cmp	r3, #128	; 0x80
 8007b82:	d0f2      	beq.n	8007b6a <SPI_EndRxTxTransaction+0x7a>
 8007b84:	e000      	b.n	8007b88 <SPI_EndRxTxTransaction+0x98>
        break;
 8007b86:	bf00      	nop
  }


  /* Control if the RX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8007b88:	687b      	ldr	r3, [r7, #4]
 8007b8a:	9300      	str	r3, [sp, #0]
 8007b8c:	68bb      	ldr	r3, [r7, #8]
 8007b8e:	2200      	movs	r2, #0
 8007b90:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8007b94:	68f8      	ldr	r0, [r7, #12]
 8007b96:	f7ff ff15 	bl	80079c4 <SPI_WaitFifoStateUntilTimeout>
 8007b9a:	4603      	mov	r3, r0
 8007b9c:	2b00      	cmp	r3, #0
 8007b9e:	d007      	beq.n	8007bb0 <SPI_EndRxTxTransaction+0xc0>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007ba0:	68fb      	ldr	r3, [r7, #12]
 8007ba2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007ba4:	f043 0220 	orr.w	r2, r3, #32
 8007ba8:	68fb      	ldr	r3, [r7, #12]
 8007baa:	661a      	str	r2, [r3, #96]	; 0x60
    return HAL_TIMEOUT;
 8007bac:	2303      	movs	r3, #3
 8007bae:	e000      	b.n	8007bb2 <SPI_EndRxTxTransaction+0xc2>
  }

  return HAL_OK;
 8007bb0:	2300      	movs	r3, #0
}
 8007bb2:	4618      	mov	r0, r3
 8007bb4:	3718      	adds	r7, #24
 8007bb6:	46bd      	mov	sp, r7
 8007bb8:	bd80      	pop	{r7, pc}
 8007bba:	bf00      	nop
 8007bbc:	20000008 	.word	0x20000008
 8007bc0:	165e9f81 	.word	0x165e9f81

08007bc4 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8007bc4:	b580      	push	{r7, lr}
 8007bc6:	b082      	sub	sp, #8
 8007bc8:	af00      	add	r7, sp, #0
 8007bca:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8007bcc:	687b      	ldr	r3, [r7, #4]
 8007bce:	2b00      	cmp	r3, #0
 8007bd0:	d101      	bne.n	8007bd6 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8007bd2:	2301      	movs	r3, #1
 8007bd4:	e049      	b.n	8007c6a <HAL_TIM_Base_Init+0xa6>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8007bd6:	687b      	ldr	r3, [r7, #4]
 8007bd8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007bdc:	b2db      	uxtb	r3, r3
 8007bde:	2b00      	cmp	r3, #0
 8007be0:	d106      	bne.n	8007bf0 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8007be2:	687b      	ldr	r3, [r7, #4]
 8007be4:	2200      	movs	r2, #0
 8007be6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8007bea:	6878      	ldr	r0, [r7, #4]
 8007bec:	f7fa ff6a 	bl	8002ac4 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007bf0:	687b      	ldr	r3, [r7, #4]
 8007bf2:	2202      	movs	r2, #2
 8007bf4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007bf8:	687b      	ldr	r3, [r7, #4]
 8007bfa:	681a      	ldr	r2, [r3, #0]
 8007bfc:	687b      	ldr	r3, [r7, #4]
 8007bfe:	3304      	adds	r3, #4
 8007c00:	4619      	mov	r1, r3
 8007c02:	4610      	mov	r0, r2
 8007c04:	f000 fbf4 	bl	80083f0 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007c08:	687b      	ldr	r3, [r7, #4]
 8007c0a:	2201      	movs	r2, #1
 8007c0c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007c10:	687b      	ldr	r3, [r7, #4]
 8007c12:	2201      	movs	r2, #1
 8007c14:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007c18:	687b      	ldr	r3, [r7, #4]
 8007c1a:	2201      	movs	r2, #1
 8007c1c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8007c20:	687b      	ldr	r3, [r7, #4]
 8007c22:	2201      	movs	r2, #1
 8007c24:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8007c28:	687b      	ldr	r3, [r7, #4]
 8007c2a:	2201      	movs	r2, #1
 8007c2c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007c30:	687b      	ldr	r3, [r7, #4]
 8007c32:	2201      	movs	r2, #1
 8007c34:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8007c38:	687b      	ldr	r3, [r7, #4]
 8007c3a:	2201      	movs	r2, #1
 8007c3c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007c40:	687b      	ldr	r3, [r7, #4]
 8007c42:	2201      	movs	r2, #1
 8007c44:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8007c48:	687b      	ldr	r3, [r7, #4]
 8007c4a:	2201      	movs	r2, #1
 8007c4c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8007c50:	687b      	ldr	r3, [r7, #4]
 8007c52:	2201      	movs	r2, #1
 8007c54:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8007c58:	687b      	ldr	r3, [r7, #4]
 8007c5a:	2201      	movs	r2, #1
 8007c5c:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8007c60:	687b      	ldr	r3, [r7, #4]
 8007c62:	2201      	movs	r2, #1
 8007c64:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8007c68:	2300      	movs	r3, #0
}
 8007c6a:	4618      	mov	r0, r3
 8007c6c:	3708      	adds	r7, #8
 8007c6e:	46bd      	mov	sp, r7
 8007c70:	bd80      	pop	{r7, pc}
	...

08007c74 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 8007c74:	b480      	push	{r7}
 8007c76:	b085      	sub	sp, #20
 8007c78:	af00      	add	r7, sp, #0
 8007c7a:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8007c7c:	687b      	ldr	r3, [r7, #4]
 8007c7e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007c82:	b2db      	uxtb	r3, r3
 8007c84:	2b01      	cmp	r3, #1
 8007c86:	d001      	beq.n	8007c8c <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 8007c88:	2301      	movs	r3, #1
 8007c8a:	e054      	b.n	8007d36 <HAL_TIM_Base_Start_IT+0xc2>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007c8c:	687b      	ldr	r3, [r7, #4]
 8007c8e:	2202      	movs	r2, #2
 8007c90:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8007c94:	687b      	ldr	r3, [r7, #4]
 8007c96:	681b      	ldr	r3, [r3, #0]
 8007c98:	68da      	ldr	r2, [r3, #12]
 8007c9a:	687b      	ldr	r3, [r7, #4]
 8007c9c:	681b      	ldr	r3, [r3, #0]
 8007c9e:	f042 0201 	orr.w	r2, r2, #1
 8007ca2:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007ca4:	687b      	ldr	r3, [r7, #4]
 8007ca6:	681b      	ldr	r3, [r3, #0]
 8007ca8:	4a26      	ldr	r2, [pc, #152]	; (8007d44 <HAL_TIM_Base_Start_IT+0xd0>)
 8007caa:	4293      	cmp	r3, r2
 8007cac:	d022      	beq.n	8007cf4 <HAL_TIM_Base_Start_IT+0x80>
 8007cae:	687b      	ldr	r3, [r7, #4]
 8007cb0:	681b      	ldr	r3, [r3, #0]
 8007cb2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007cb6:	d01d      	beq.n	8007cf4 <HAL_TIM_Base_Start_IT+0x80>
 8007cb8:	687b      	ldr	r3, [r7, #4]
 8007cba:	681b      	ldr	r3, [r3, #0]
 8007cbc:	4a22      	ldr	r2, [pc, #136]	; (8007d48 <HAL_TIM_Base_Start_IT+0xd4>)
 8007cbe:	4293      	cmp	r3, r2
 8007cc0:	d018      	beq.n	8007cf4 <HAL_TIM_Base_Start_IT+0x80>
 8007cc2:	687b      	ldr	r3, [r7, #4]
 8007cc4:	681b      	ldr	r3, [r3, #0]
 8007cc6:	4a21      	ldr	r2, [pc, #132]	; (8007d4c <HAL_TIM_Base_Start_IT+0xd8>)
 8007cc8:	4293      	cmp	r3, r2
 8007cca:	d013      	beq.n	8007cf4 <HAL_TIM_Base_Start_IT+0x80>
 8007ccc:	687b      	ldr	r3, [r7, #4]
 8007cce:	681b      	ldr	r3, [r3, #0]
 8007cd0:	4a1f      	ldr	r2, [pc, #124]	; (8007d50 <HAL_TIM_Base_Start_IT+0xdc>)
 8007cd2:	4293      	cmp	r3, r2
 8007cd4:	d00e      	beq.n	8007cf4 <HAL_TIM_Base_Start_IT+0x80>
 8007cd6:	687b      	ldr	r3, [r7, #4]
 8007cd8:	681b      	ldr	r3, [r3, #0]
 8007cda:	4a1e      	ldr	r2, [pc, #120]	; (8007d54 <HAL_TIM_Base_Start_IT+0xe0>)
 8007cdc:	4293      	cmp	r3, r2
 8007cde:	d009      	beq.n	8007cf4 <HAL_TIM_Base_Start_IT+0x80>
 8007ce0:	687b      	ldr	r3, [r7, #4]
 8007ce2:	681b      	ldr	r3, [r3, #0]
 8007ce4:	4a1c      	ldr	r2, [pc, #112]	; (8007d58 <HAL_TIM_Base_Start_IT+0xe4>)
 8007ce6:	4293      	cmp	r3, r2
 8007ce8:	d004      	beq.n	8007cf4 <HAL_TIM_Base_Start_IT+0x80>
 8007cea:	687b      	ldr	r3, [r7, #4]
 8007cec:	681b      	ldr	r3, [r3, #0]
 8007cee:	4a1b      	ldr	r2, [pc, #108]	; (8007d5c <HAL_TIM_Base_Start_IT+0xe8>)
 8007cf0:	4293      	cmp	r3, r2
 8007cf2:	d115      	bne.n	8007d20 <HAL_TIM_Base_Start_IT+0xac>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007cf4:	687b      	ldr	r3, [r7, #4]
 8007cf6:	681b      	ldr	r3, [r3, #0]
 8007cf8:	689a      	ldr	r2, [r3, #8]
 8007cfa:	4b19      	ldr	r3, [pc, #100]	; (8007d60 <HAL_TIM_Base_Start_IT+0xec>)
 8007cfc:	4013      	ands	r3, r2
 8007cfe:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007d00:	68fb      	ldr	r3, [r7, #12]
 8007d02:	2b06      	cmp	r3, #6
 8007d04:	d015      	beq.n	8007d32 <HAL_TIM_Base_Start_IT+0xbe>
 8007d06:	68fb      	ldr	r3, [r7, #12]
 8007d08:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007d0c:	d011      	beq.n	8007d32 <HAL_TIM_Base_Start_IT+0xbe>
    {
      __HAL_TIM_ENABLE(htim);
 8007d0e:	687b      	ldr	r3, [r7, #4]
 8007d10:	681b      	ldr	r3, [r3, #0]
 8007d12:	681a      	ldr	r2, [r3, #0]
 8007d14:	687b      	ldr	r3, [r7, #4]
 8007d16:	681b      	ldr	r3, [r3, #0]
 8007d18:	f042 0201 	orr.w	r2, r2, #1
 8007d1c:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007d1e:	e008      	b.n	8007d32 <HAL_TIM_Base_Start_IT+0xbe>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8007d20:	687b      	ldr	r3, [r7, #4]
 8007d22:	681b      	ldr	r3, [r3, #0]
 8007d24:	681a      	ldr	r2, [r3, #0]
 8007d26:	687b      	ldr	r3, [r7, #4]
 8007d28:	681b      	ldr	r3, [r3, #0]
 8007d2a:	f042 0201 	orr.w	r2, r2, #1
 8007d2e:	601a      	str	r2, [r3, #0]
 8007d30:	e000      	b.n	8007d34 <HAL_TIM_Base_Start_IT+0xc0>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007d32:	bf00      	nop
  }

  /* Return function status */
  return HAL_OK;
 8007d34:	2300      	movs	r3, #0
}
 8007d36:	4618      	mov	r0, r3
 8007d38:	3714      	adds	r7, #20
 8007d3a:	46bd      	mov	sp, r7
 8007d3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d40:	4770      	bx	lr
 8007d42:	bf00      	nop
 8007d44:	40010000 	.word	0x40010000
 8007d48:	40000400 	.word	0x40000400
 8007d4c:	40000800 	.word	0x40000800
 8007d50:	40000c00 	.word	0x40000c00
 8007d54:	40010400 	.word	0x40010400
 8007d58:	40014000 	.word	0x40014000
 8007d5c:	40001800 	.word	0x40001800
 8007d60:	00010007 	.word	0x00010007

08007d64 <HAL_TIM_Encoder_Init>:
  * @param  htim TIM Encoder Interface handle
  * @param  sConfig TIM Encoder Interface configuration structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Encoder_Init(TIM_HandleTypeDef *htim,  TIM_Encoder_InitTypeDef *sConfig)
{
 8007d64:	b580      	push	{r7, lr}
 8007d66:	b086      	sub	sp, #24
 8007d68:	af00      	add	r7, sp, #0
 8007d6a:	6078      	str	r0, [r7, #4]
 8007d6c:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Check the TIM handle allocation */
  if (htim == NULL)
 8007d6e:	687b      	ldr	r3, [r7, #4]
 8007d70:	2b00      	cmp	r3, #0
 8007d72:	d101      	bne.n	8007d78 <HAL_TIM_Encoder_Init+0x14>
  {
    return HAL_ERROR;
 8007d74:	2301      	movs	r3, #1
 8007d76:	e08f      	b.n	8007e98 <HAL_TIM_Encoder_Init+0x134>
  assert_param(IS_TIM_IC_PRESCALER(sConfig->IC2Prescaler));
  assert_param(IS_TIM_IC_FILTER(sConfig->IC1Filter));
  assert_param(IS_TIM_IC_FILTER(sConfig->IC2Filter));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));

  if (htim->State == HAL_TIM_STATE_RESET)
 8007d78:	687b      	ldr	r3, [r7, #4]
 8007d7a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007d7e:	b2db      	uxtb	r3, r3
 8007d80:	2b00      	cmp	r3, #0
 8007d82:	d106      	bne.n	8007d92 <HAL_TIM_Encoder_Init+0x2e>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8007d84:	687b      	ldr	r3, [r7, #4]
 8007d86:	2200      	movs	r2, #0
 8007d88:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Encoder_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_Encoder_MspInit(htim);
 8007d8c:	6878      	ldr	r0, [r7, #4]
 8007d8e:	f7fa fdd1 	bl	8002934 <HAL_TIM_Encoder_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007d92:	687b      	ldr	r3, [r7, #4]
 8007d94:	2202      	movs	r2, #2
 8007d96:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Reset the SMS and ECE bits */
  htim->Instance->SMCR &= ~(TIM_SMCR_SMS | TIM_SMCR_ECE);
 8007d9a:	687b      	ldr	r3, [r7, #4]
 8007d9c:	681b      	ldr	r3, [r3, #0]
 8007d9e:	6899      	ldr	r1, [r3, #8]
 8007da0:	687b      	ldr	r3, [r7, #4]
 8007da2:	681a      	ldr	r2, [r3, #0]
 8007da4:	4b3e      	ldr	r3, [pc, #248]	; (8007ea0 <HAL_TIM_Encoder_Init+0x13c>)
 8007da6:	400b      	ands	r3, r1
 8007da8:	6093      	str	r3, [r2, #8]

  /* Configure the Time base in the Encoder Mode */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007daa:	687b      	ldr	r3, [r7, #4]
 8007dac:	681a      	ldr	r2, [r3, #0]
 8007dae:	687b      	ldr	r3, [r7, #4]
 8007db0:	3304      	adds	r3, #4
 8007db2:	4619      	mov	r1, r3
 8007db4:	4610      	mov	r0, r2
 8007db6:	f000 fb1b 	bl	80083f0 <TIM_Base_SetConfig>

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8007dba:	687b      	ldr	r3, [r7, #4]
 8007dbc:	681b      	ldr	r3, [r3, #0]
 8007dbe:	689b      	ldr	r3, [r3, #8]
 8007dc0:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR1 register value */
  tmpccmr1 = htim->Instance->CCMR1;
 8007dc2:	687b      	ldr	r3, [r7, #4]
 8007dc4:	681b      	ldr	r3, [r3, #0]
 8007dc6:	699b      	ldr	r3, [r3, #24]
 8007dc8:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCER register value */
  tmpccer = htim->Instance->CCER;
 8007dca:	687b      	ldr	r3, [r7, #4]
 8007dcc:	681b      	ldr	r3, [r3, #0]
 8007dce:	6a1b      	ldr	r3, [r3, #32]
 8007dd0:	60fb      	str	r3, [r7, #12]

  /* Set the encoder Mode */
  tmpsmcr |= sConfig->EncoderMode;
 8007dd2:	683b      	ldr	r3, [r7, #0]
 8007dd4:	681b      	ldr	r3, [r3, #0]
 8007dd6:	697a      	ldr	r2, [r7, #20]
 8007dd8:	4313      	orrs	r3, r2
 8007dda:	617b      	str	r3, [r7, #20]

  /* Select the Capture Compare 1 and the Capture Compare 2 as input */
  tmpccmr1 &= ~(TIM_CCMR1_CC1S | TIM_CCMR1_CC2S);
 8007ddc:	693a      	ldr	r2, [r7, #16]
 8007dde:	4b31      	ldr	r3, [pc, #196]	; (8007ea4 <HAL_TIM_Encoder_Init+0x140>)
 8007de0:	4013      	ands	r3, r2
 8007de2:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (sConfig->IC1Selection | (sConfig->IC2Selection << 8U));
 8007de4:	683b      	ldr	r3, [r7, #0]
 8007de6:	689a      	ldr	r2, [r3, #8]
 8007de8:	683b      	ldr	r3, [r7, #0]
 8007dea:	699b      	ldr	r3, [r3, #24]
 8007dec:	021b      	lsls	r3, r3, #8
 8007dee:	4313      	orrs	r3, r2
 8007df0:	693a      	ldr	r2, [r7, #16]
 8007df2:	4313      	orrs	r3, r2
 8007df4:	613b      	str	r3, [r7, #16]

  /* Set the Capture Compare 1 and the Capture Compare 2 prescalers and filters */
  tmpccmr1 &= ~(TIM_CCMR1_IC1PSC | TIM_CCMR1_IC2PSC);
 8007df6:	693a      	ldr	r2, [r7, #16]
 8007df8:	4b2b      	ldr	r3, [pc, #172]	; (8007ea8 <HAL_TIM_Encoder_Init+0x144>)
 8007dfa:	4013      	ands	r3, r2
 8007dfc:	613b      	str	r3, [r7, #16]
  tmpccmr1 &= ~(TIM_CCMR1_IC1F | TIM_CCMR1_IC2F);
 8007dfe:	693a      	ldr	r2, [r7, #16]
 8007e00:	4b2a      	ldr	r3, [pc, #168]	; (8007eac <HAL_TIM_Encoder_Init+0x148>)
 8007e02:	4013      	ands	r3, r2
 8007e04:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
 8007e06:	683b      	ldr	r3, [r7, #0]
 8007e08:	68da      	ldr	r2, [r3, #12]
 8007e0a:	683b      	ldr	r3, [r7, #0]
 8007e0c:	69db      	ldr	r3, [r3, #28]
 8007e0e:	021b      	lsls	r3, r3, #8
 8007e10:	4313      	orrs	r3, r2
 8007e12:	693a      	ldr	r2, [r7, #16]
 8007e14:	4313      	orrs	r3, r2
 8007e16:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);
 8007e18:	683b      	ldr	r3, [r7, #0]
 8007e1a:	691b      	ldr	r3, [r3, #16]
 8007e1c:	011a      	lsls	r2, r3, #4
 8007e1e:	683b      	ldr	r3, [r7, #0]
 8007e20:	6a1b      	ldr	r3, [r3, #32]
 8007e22:	031b      	lsls	r3, r3, #12
 8007e24:	4313      	orrs	r3, r2
 8007e26:	693a      	ldr	r2, [r7, #16]
 8007e28:	4313      	orrs	r3, r2
 8007e2a:	613b      	str	r3, [r7, #16]

  /* Set the TI1 and the TI2 Polarities */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC2P);
 8007e2c:	68fb      	ldr	r3, [r7, #12]
 8007e2e:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 8007e32:	60fb      	str	r3, [r7, #12]
  tmpccer &= ~(TIM_CCER_CC1NP | TIM_CCER_CC2NP);
 8007e34:	68fb      	ldr	r3, [r7, #12]
 8007e36:	f023 0388 	bic.w	r3, r3, #136	; 0x88
 8007e3a:	60fb      	str	r3, [r7, #12]
  tmpccer |= sConfig->IC1Polarity | (sConfig->IC2Polarity << 4U);
 8007e3c:	683b      	ldr	r3, [r7, #0]
 8007e3e:	685a      	ldr	r2, [r3, #4]
 8007e40:	683b      	ldr	r3, [r7, #0]
 8007e42:	695b      	ldr	r3, [r3, #20]
 8007e44:	011b      	lsls	r3, r3, #4
 8007e46:	4313      	orrs	r3, r2
 8007e48:	68fa      	ldr	r2, [r7, #12]
 8007e4a:	4313      	orrs	r3, r2
 8007e4c:	60fb      	str	r3, [r7, #12]

  /* Write to TIMx SMCR */
  htim->Instance->SMCR = tmpsmcr;
 8007e4e:	687b      	ldr	r3, [r7, #4]
 8007e50:	681b      	ldr	r3, [r3, #0]
 8007e52:	697a      	ldr	r2, [r7, #20]
 8007e54:	609a      	str	r2, [r3, #8]

  /* Write to TIMx CCMR1 */
  htim->Instance->CCMR1 = tmpccmr1;
 8007e56:	687b      	ldr	r3, [r7, #4]
 8007e58:	681b      	ldr	r3, [r3, #0]
 8007e5a:	693a      	ldr	r2, [r7, #16]
 8007e5c:	619a      	str	r2, [r3, #24]

  /* Write to TIMx CCER */
  htim->Instance->CCER = tmpccer;
 8007e5e:	687b      	ldr	r3, [r7, #4]
 8007e60:	681b      	ldr	r3, [r3, #0]
 8007e62:	68fa      	ldr	r2, [r7, #12]
 8007e64:	621a      	str	r2, [r3, #32]

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007e66:	687b      	ldr	r3, [r7, #4]
 8007e68:	2201      	movs	r2, #1
 8007e6a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48

  /* Set the TIM channels state */
  TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 8007e6e:	687b      	ldr	r3, [r7, #4]
 8007e70:	2201      	movs	r2, #1
 8007e72:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
  TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 8007e76:	687b      	ldr	r3, [r7, #4]
 8007e78:	2201      	movs	r2, #1
 8007e7a:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
  TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 8007e7e:	687b      	ldr	r3, [r7, #4]
 8007e80:	2201      	movs	r2, #1
 8007e82:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
  TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 8007e86:	687b      	ldr	r3, [r7, #4]
 8007e88:	2201      	movs	r2, #1
 8007e8a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8007e8e:	687b      	ldr	r3, [r7, #4]
 8007e90:	2201      	movs	r2, #1
 8007e92:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8007e96:	2300      	movs	r3, #0
}
 8007e98:	4618      	mov	r0, r3
 8007e9a:	3718      	adds	r7, #24
 8007e9c:	46bd      	mov	sp, r7
 8007e9e:	bd80      	pop	{r7, pc}
 8007ea0:	fffebff8 	.word	0xfffebff8
 8007ea4:	fffffcfc 	.word	0xfffffcfc
 8007ea8:	fffff3f3 	.word	0xfffff3f3
 8007eac:	ffff0f0f 	.word	0xffff0f0f

08007eb0 <HAL_TIM_Encoder_Start>:
  *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
  *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Encoder_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8007eb0:	b580      	push	{r7, lr}
 8007eb2:	b084      	sub	sp, #16
 8007eb4:	af00      	add	r7, sp, #0
 8007eb6:	6078      	str	r0, [r7, #4]
 8007eb8:	6039      	str	r1, [r7, #0]
  HAL_TIM_ChannelStateTypeDef channel_1_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_1);
 8007eba:	687b      	ldr	r3, [r7, #4]
 8007ebc:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8007ec0:	73fb      	strb	r3, [r7, #15]
  HAL_TIM_ChannelStateTypeDef channel_2_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_2);
 8007ec2:	687b      	ldr	r3, [r7, #4]
 8007ec4:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8007ec8:	73bb      	strb	r3, [r7, #14]
  HAL_TIM_ChannelStateTypeDef complementary_channel_1_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHANNEL_1);
 8007eca:	687b      	ldr	r3, [r7, #4]
 8007ecc:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8007ed0:	737b      	strb	r3, [r7, #13]
  HAL_TIM_ChannelStateTypeDef complementary_channel_2_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHANNEL_2);
 8007ed2:	687b      	ldr	r3, [r7, #4]
 8007ed4:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8007ed8:	733b      	strb	r3, [r7, #12]

  /* Check the parameters */
  assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));

  /* Set the TIM channel(s) state */
  if (Channel == TIM_CHANNEL_1)
 8007eda:	683b      	ldr	r3, [r7, #0]
 8007edc:	2b00      	cmp	r3, #0
 8007ede:	d110      	bne.n	8007f02 <HAL_TIM_Encoder_Start+0x52>
  {
    if ((channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
 8007ee0:	7bfb      	ldrb	r3, [r7, #15]
 8007ee2:	2b01      	cmp	r3, #1
 8007ee4:	d102      	bne.n	8007eec <HAL_TIM_Encoder_Start+0x3c>
        || (complementary_channel_1_state != HAL_TIM_CHANNEL_STATE_READY))
 8007ee6:	7b7b      	ldrb	r3, [r7, #13]
 8007ee8:	2b01      	cmp	r3, #1
 8007eea:	d001      	beq.n	8007ef0 <HAL_TIM_Encoder_Start+0x40>
    {
      return HAL_ERROR;
 8007eec:	2301      	movs	r3, #1
 8007eee:	e069      	b.n	8007fc4 <HAL_TIM_Encoder_Start+0x114>
    }
    else
    {
      TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 8007ef0:	687b      	ldr	r3, [r7, #4]
 8007ef2:	2202      	movs	r2, #2
 8007ef4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 8007ef8:	687b      	ldr	r3, [r7, #4]
 8007efa:	2202      	movs	r2, #2
 8007efc:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8007f00:	e031      	b.n	8007f66 <HAL_TIM_Encoder_Start+0xb6>
    }
  }
  else if (Channel == TIM_CHANNEL_2)
 8007f02:	683b      	ldr	r3, [r7, #0]
 8007f04:	2b04      	cmp	r3, #4
 8007f06:	d110      	bne.n	8007f2a <HAL_TIM_Encoder_Start+0x7a>
  {
    if ((channel_2_state != HAL_TIM_CHANNEL_STATE_READY)
 8007f08:	7bbb      	ldrb	r3, [r7, #14]
 8007f0a:	2b01      	cmp	r3, #1
 8007f0c:	d102      	bne.n	8007f14 <HAL_TIM_Encoder_Start+0x64>
        || (complementary_channel_2_state != HAL_TIM_CHANNEL_STATE_READY))
 8007f0e:	7b3b      	ldrb	r3, [r7, #12]
 8007f10:	2b01      	cmp	r3, #1
 8007f12:	d001      	beq.n	8007f18 <HAL_TIM_Encoder_Start+0x68>
    {
      return HAL_ERROR;
 8007f14:	2301      	movs	r3, #1
 8007f16:	e055      	b.n	8007fc4 <HAL_TIM_Encoder_Start+0x114>
    }
    else
    {
      TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 8007f18:	687b      	ldr	r3, [r7, #4]
 8007f1a:	2202      	movs	r2, #2
 8007f1c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
      TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 8007f20:	687b      	ldr	r3, [r7, #4]
 8007f22:	2202      	movs	r2, #2
 8007f24:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8007f28:	e01d      	b.n	8007f66 <HAL_TIM_Encoder_Start+0xb6>
    }
  }
  else
  {
    if ((channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
 8007f2a:	7bfb      	ldrb	r3, [r7, #15]
 8007f2c:	2b01      	cmp	r3, #1
 8007f2e:	d108      	bne.n	8007f42 <HAL_TIM_Encoder_Start+0x92>
        || (channel_2_state != HAL_TIM_CHANNEL_STATE_READY)
 8007f30:	7bbb      	ldrb	r3, [r7, #14]
 8007f32:	2b01      	cmp	r3, #1
 8007f34:	d105      	bne.n	8007f42 <HAL_TIM_Encoder_Start+0x92>
        || (complementary_channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
 8007f36:	7b7b      	ldrb	r3, [r7, #13]
 8007f38:	2b01      	cmp	r3, #1
 8007f3a:	d102      	bne.n	8007f42 <HAL_TIM_Encoder_Start+0x92>
        || (complementary_channel_2_state != HAL_TIM_CHANNEL_STATE_READY))
 8007f3c:	7b3b      	ldrb	r3, [r7, #12]
 8007f3e:	2b01      	cmp	r3, #1
 8007f40:	d001      	beq.n	8007f46 <HAL_TIM_Encoder_Start+0x96>
    {
      return HAL_ERROR;
 8007f42:	2301      	movs	r3, #1
 8007f44:	e03e      	b.n	8007fc4 <HAL_TIM_Encoder_Start+0x114>
    }
    else
    {
      TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 8007f46:	687b      	ldr	r3, [r7, #4]
 8007f48:	2202      	movs	r2, #2
 8007f4a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 8007f4e:	687b      	ldr	r3, [r7, #4]
 8007f50:	2202      	movs	r2, #2
 8007f52:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
      TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 8007f56:	687b      	ldr	r3, [r7, #4]
 8007f58:	2202      	movs	r2, #2
 8007f5a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
      TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 8007f5e:	687b      	ldr	r3, [r7, #4]
 8007f60:	2202      	movs	r2, #2
 8007f62:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
    }
  }

  /* Enable the encoder interface channels */
  switch (Channel)
 8007f66:	683b      	ldr	r3, [r7, #0]
 8007f68:	2b00      	cmp	r3, #0
 8007f6a:	d003      	beq.n	8007f74 <HAL_TIM_Encoder_Start+0xc4>
 8007f6c:	683b      	ldr	r3, [r7, #0]
 8007f6e:	2b04      	cmp	r3, #4
 8007f70:	d008      	beq.n	8007f84 <HAL_TIM_Encoder_Start+0xd4>
 8007f72:	e00f      	b.n	8007f94 <HAL_TIM_Encoder_Start+0xe4>
  {
    case TIM_CHANNEL_1:
    {
      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8007f74:	687b      	ldr	r3, [r7, #4]
 8007f76:	681b      	ldr	r3, [r3, #0]
 8007f78:	2201      	movs	r2, #1
 8007f7a:	2100      	movs	r1, #0
 8007f7c:	4618      	mov	r0, r3
 8007f7e:	f000 fb71 	bl	8008664 <TIM_CCxChannelCmd>
      break;
 8007f82:	e016      	b.n	8007fb2 <HAL_TIM_Encoder_Start+0x102>
    }

    case TIM_CHANNEL_2:
    {
      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 8007f84:	687b      	ldr	r3, [r7, #4]
 8007f86:	681b      	ldr	r3, [r3, #0]
 8007f88:	2201      	movs	r2, #1
 8007f8a:	2104      	movs	r1, #4
 8007f8c:	4618      	mov	r0, r3
 8007f8e:	f000 fb69 	bl	8008664 <TIM_CCxChannelCmd>
      break;
 8007f92:	e00e      	b.n	8007fb2 <HAL_TIM_Encoder_Start+0x102>
    }

    default :
    {
      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8007f94:	687b      	ldr	r3, [r7, #4]
 8007f96:	681b      	ldr	r3, [r3, #0]
 8007f98:	2201      	movs	r2, #1
 8007f9a:	2100      	movs	r1, #0
 8007f9c:	4618      	mov	r0, r3
 8007f9e:	f000 fb61 	bl	8008664 <TIM_CCxChannelCmd>
      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 8007fa2:	687b      	ldr	r3, [r7, #4]
 8007fa4:	681b      	ldr	r3, [r3, #0]
 8007fa6:	2201      	movs	r2, #1
 8007fa8:	2104      	movs	r1, #4
 8007faa:	4618      	mov	r0, r3
 8007fac:	f000 fb5a 	bl	8008664 <TIM_CCxChannelCmd>
      break;
 8007fb0:	bf00      	nop
    }
  }
  /* Enable the Peripheral */
  __HAL_TIM_ENABLE(htim);
 8007fb2:	687b      	ldr	r3, [r7, #4]
 8007fb4:	681b      	ldr	r3, [r3, #0]
 8007fb6:	681a      	ldr	r2, [r3, #0]
 8007fb8:	687b      	ldr	r3, [r7, #4]
 8007fba:	681b      	ldr	r3, [r3, #0]
 8007fbc:	f042 0201 	orr.w	r2, r2, #1
 8007fc0:	601a      	str	r2, [r3, #0]

  /* Return function status */
  return HAL_OK;
 8007fc2:	2300      	movs	r3, #0
}
 8007fc4:	4618      	mov	r0, r3
 8007fc6:	3710      	adds	r7, #16
 8007fc8:	46bd      	mov	sp, r7
 8007fca:	bd80      	pop	{r7, pc}

08007fcc <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8007fcc:	b580      	push	{r7, lr}
 8007fce:	b082      	sub	sp, #8
 8007fd0:	af00      	add	r7, sp, #0
 8007fd2:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007fd4:	687b      	ldr	r3, [r7, #4]
 8007fd6:	681b      	ldr	r3, [r3, #0]
 8007fd8:	691b      	ldr	r3, [r3, #16]
 8007fda:	f003 0302 	and.w	r3, r3, #2
 8007fde:	2b02      	cmp	r3, #2
 8007fe0:	d122      	bne.n	8008028 <HAL_TIM_IRQHandler+0x5c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8007fe2:	687b      	ldr	r3, [r7, #4]
 8007fe4:	681b      	ldr	r3, [r3, #0]
 8007fe6:	68db      	ldr	r3, [r3, #12]
 8007fe8:	f003 0302 	and.w	r3, r3, #2
 8007fec:	2b02      	cmp	r3, #2
 8007fee:	d11b      	bne.n	8008028 <HAL_TIM_IRQHandler+0x5c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8007ff0:	687b      	ldr	r3, [r7, #4]
 8007ff2:	681b      	ldr	r3, [r3, #0]
 8007ff4:	f06f 0202 	mvn.w	r2, #2
 8007ff8:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007ffa:	687b      	ldr	r3, [r7, #4]
 8007ffc:	2201      	movs	r2, #1
 8007ffe:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8008000:	687b      	ldr	r3, [r7, #4]
 8008002:	681b      	ldr	r3, [r3, #0]
 8008004:	699b      	ldr	r3, [r3, #24]
 8008006:	f003 0303 	and.w	r3, r3, #3
 800800a:	2b00      	cmp	r3, #0
 800800c:	d003      	beq.n	8008016 <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800800e:	6878      	ldr	r0, [r7, #4]
 8008010:	f000 f9d0 	bl	80083b4 <HAL_TIM_IC_CaptureCallback>
 8008014:	e005      	b.n	8008022 <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8008016:	6878      	ldr	r0, [r7, #4]
 8008018:	f000 f9c2 	bl	80083a0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800801c:	6878      	ldr	r0, [r7, #4]
 800801e:	f000 f9d3 	bl	80083c8 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008022:	687b      	ldr	r3, [r7, #4]
 8008024:	2200      	movs	r2, #0
 8008026:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8008028:	687b      	ldr	r3, [r7, #4]
 800802a:	681b      	ldr	r3, [r3, #0]
 800802c:	691b      	ldr	r3, [r3, #16]
 800802e:	f003 0304 	and.w	r3, r3, #4
 8008032:	2b04      	cmp	r3, #4
 8008034:	d122      	bne.n	800807c <HAL_TIM_IRQHandler+0xb0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8008036:	687b      	ldr	r3, [r7, #4]
 8008038:	681b      	ldr	r3, [r3, #0]
 800803a:	68db      	ldr	r3, [r3, #12]
 800803c:	f003 0304 	and.w	r3, r3, #4
 8008040:	2b04      	cmp	r3, #4
 8008042:	d11b      	bne.n	800807c <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8008044:	687b      	ldr	r3, [r7, #4]
 8008046:	681b      	ldr	r3, [r3, #0]
 8008048:	f06f 0204 	mvn.w	r2, #4
 800804c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800804e:	687b      	ldr	r3, [r7, #4]
 8008050:	2202      	movs	r2, #2
 8008052:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8008054:	687b      	ldr	r3, [r7, #4]
 8008056:	681b      	ldr	r3, [r3, #0]
 8008058:	699b      	ldr	r3, [r3, #24]
 800805a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800805e:	2b00      	cmp	r3, #0
 8008060:	d003      	beq.n	800806a <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008062:	6878      	ldr	r0, [r7, #4]
 8008064:	f000 f9a6 	bl	80083b4 <HAL_TIM_IC_CaptureCallback>
 8008068:	e005      	b.n	8008076 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800806a:	6878      	ldr	r0, [r7, #4]
 800806c:	f000 f998 	bl	80083a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008070:	6878      	ldr	r0, [r7, #4]
 8008072:	f000 f9a9 	bl	80083c8 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008076:	687b      	ldr	r3, [r7, #4]
 8008078:	2200      	movs	r2, #0
 800807a:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800807c:	687b      	ldr	r3, [r7, #4]
 800807e:	681b      	ldr	r3, [r3, #0]
 8008080:	691b      	ldr	r3, [r3, #16]
 8008082:	f003 0308 	and.w	r3, r3, #8
 8008086:	2b08      	cmp	r3, #8
 8008088:	d122      	bne.n	80080d0 <HAL_TIM_IRQHandler+0x104>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800808a:	687b      	ldr	r3, [r7, #4]
 800808c:	681b      	ldr	r3, [r3, #0]
 800808e:	68db      	ldr	r3, [r3, #12]
 8008090:	f003 0308 	and.w	r3, r3, #8
 8008094:	2b08      	cmp	r3, #8
 8008096:	d11b      	bne.n	80080d0 <HAL_TIM_IRQHandler+0x104>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8008098:	687b      	ldr	r3, [r7, #4]
 800809a:	681b      	ldr	r3, [r3, #0]
 800809c:	f06f 0208 	mvn.w	r2, #8
 80080a0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80080a2:	687b      	ldr	r3, [r7, #4]
 80080a4:	2204      	movs	r2, #4
 80080a6:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80080a8:	687b      	ldr	r3, [r7, #4]
 80080aa:	681b      	ldr	r3, [r3, #0]
 80080ac:	69db      	ldr	r3, [r3, #28]
 80080ae:	f003 0303 	and.w	r3, r3, #3
 80080b2:	2b00      	cmp	r3, #0
 80080b4:	d003      	beq.n	80080be <HAL_TIM_IRQHandler+0xf2>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80080b6:	6878      	ldr	r0, [r7, #4]
 80080b8:	f000 f97c 	bl	80083b4 <HAL_TIM_IC_CaptureCallback>
 80080bc:	e005      	b.n	80080ca <HAL_TIM_IRQHandler+0xfe>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80080be:	6878      	ldr	r0, [r7, #4]
 80080c0:	f000 f96e 	bl	80083a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80080c4:	6878      	ldr	r0, [r7, #4]
 80080c6:	f000 f97f 	bl	80083c8 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080ca:	687b      	ldr	r3, [r7, #4]
 80080cc:	2200      	movs	r2, #0
 80080ce:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80080d0:	687b      	ldr	r3, [r7, #4]
 80080d2:	681b      	ldr	r3, [r3, #0]
 80080d4:	691b      	ldr	r3, [r3, #16]
 80080d6:	f003 0310 	and.w	r3, r3, #16
 80080da:	2b10      	cmp	r3, #16
 80080dc:	d122      	bne.n	8008124 <HAL_TIM_IRQHandler+0x158>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80080de:	687b      	ldr	r3, [r7, #4]
 80080e0:	681b      	ldr	r3, [r3, #0]
 80080e2:	68db      	ldr	r3, [r3, #12]
 80080e4:	f003 0310 	and.w	r3, r3, #16
 80080e8:	2b10      	cmp	r3, #16
 80080ea:	d11b      	bne.n	8008124 <HAL_TIM_IRQHandler+0x158>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80080ec:	687b      	ldr	r3, [r7, #4]
 80080ee:	681b      	ldr	r3, [r3, #0]
 80080f0:	f06f 0210 	mvn.w	r2, #16
 80080f4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80080f6:	687b      	ldr	r3, [r7, #4]
 80080f8:	2208      	movs	r2, #8
 80080fa:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80080fc:	687b      	ldr	r3, [r7, #4]
 80080fe:	681b      	ldr	r3, [r3, #0]
 8008100:	69db      	ldr	r3, [r3, #28]
 8008102:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008106:	2b00      	cmp	r3, #0
 8008108:	d003      	beq.n	8008112 <HAL_TIM_IRQHandler+0x146>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800810a:	6878      	ldr	r0, [r7, #4]
 800810c:	f000 f952 	bl	80083b4 <HAL_TIM_IC_CaptureCallback>
 8008110:	e005      	b.n	800811e <HAL_TIM_IRQHandler+0x152>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008112:	6878      	ldr	r0, [r7, #4]
 8008114:	f000 f944 	bl	80083a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008118:	6878      	ldr	r0, [r7, #4]
 800811a:	f000 f955 	bl	80083c8 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800811e:	687b      	ldr	r3, [r7, #4]
 8008120:	2200      	movs	r2, #0
 8008122:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008124:	687b      	ldr	r3, [r7, #4]
 8008126:	681b      	ldr	r3, [r3, #0]
 8008128:	691b      	ldr	r3, [r3, #16]
 800812a:	f003 0301 	and.w	r3, r3, #1
 800812e:	2b01      	cmp	r3, #1
 8008130:	d10e      	bne.n	8008150 <HAL_TIM_IRQHandler+0x184>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8008132:	687b      	ldr	r3, [r7, #4]
 8008134:	681b      	ldr	r3, [r3, #0]
 8008136:	68db      	ldr	r3, [r3, #12]
 8008138:	f003 0301 	and.w	r3, r3, #1
 800813c:	2b01      	cmp	r3, #1
 800813e:	d107      	bne.n	8008150 <HAL_TIM_IRQHandler+0x184>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008140:	687b      	ldr	r3, [r7, #4]
 8008142:	681b      	ldr	r3, [r3, #0]
 8008144:	f06f 0201 	mvn.w	r2, #1
 8008148:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800814a:	6878      	ldr	r0, [r7, #4]
 800814c:	f7fa f9e6 	bl	800251c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8008150:	687b      	ldr	r3, [r7, #4]
 8008152:	681b      	ldr	r3, [r3, #0]
 8008154:	691b      	ldr	r3, [r3, #16]
 8008156:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800815a:	2b80      	cmp	r3, #128	; 0x80
 800815c:	d10e      	bne.n	800817c <HAL_TIM_IRQHandler+0x1b0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800815e:	687b      	ldr	r3, [r7, #4]
 8008160:	681b      	ldr	r3, [r3, #0]
 8008162:	68db      	ldr	r3, [r3, #12]
 8008164:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008168:	2b80      	cmp	r3, #128	; 0x80
 800816a:	d107      	bne.n	800817c <HAL_TIM_IRQHandler+0x1b0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800816c:	687b      	ldr	r3, [r7, #4]
 800816e:	681b      	ldr	r3, [r3, #0]
 8008170:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008174:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8008176:	6878      	ldr	r0, [r7, #4]
 8008178:	f000 fb32 	bl	80087e0 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 800817c:	687b      	ldr	r3, [r7, #4]
 800817e:	681b      	ldr	r3, [r3, #0]
 8008180:	691b      	ldr	r3, [r3, #16]
 8008182:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008186:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800818a:	d10e      	bne.n	80081aa <HAL_TIM_IRQHandler+0x1de>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800818c:	687b      	ldr	r3, [r7, #4]
 800818e:	681b      	ldr	r3, [r3, #0]
 8008190:	68db      	ldr	r3, [r3, #12]
 8008192:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008196:	2b80      	cmp	r3, #128	; 0x80
 8008198:	d107      	bne.n	80081aa <HAL_TIM_IRQHandler+0x1de>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 800819a:	687b      	ldr	r3, [r7, #4]
 800819c:	681b      	ldr	r3, [r3, #0]
 800819e:	f46f 7280 	mvn.w	r2, #256	; 0x100
 80081a2:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 80081a4:	6878      	ldr	r0, [r7, #4]
 80081a6:	f000 fb25 	bl	80087f4 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80081aa:	687b      	ldr	r3, [r7, #4]
 80081ac:	681b      	ldr	r3, [r3, #0]
 80081ae:	691b      	ldr	r3, [r3, #16]
 80081b0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80081b4:	2b40      	cmp	r3, #64	; 0x40
 80081b6:	d10e      	bne.n	80081d6 <HAL_TIM_IRQHandler+0x20a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80081b8:	687b      	ldr	r3, [r7, #4]
 80081ba:	681b      	ldr	r3, [r3, #0]
 80081bc:	68db      	ldr	r3, [r3, #12]
 80081be:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80081c2:	2b40      	cmp	r3, #64	; 0x40
 80081c4:	d107      	bne.n	80081d6 <HAL_TIM_IRQHandler+0x20a>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80081c6:	687b      	ldr	r3, [r7, #4]
 80081c8:	681b      	ldr	r3, [r3, #0]
 80081ca:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80081ce:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80081d0:	6878      	ldr	r0, [r7, #4]
 80081d2:	f000 f903 	bl	80083dc <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80081d6:	687b      	ldr	r3, [r7, #4]
 80081d8:	681b      	ldr	r3, [r3, #0]
 80081da:	691b      	ldr	r3, [r3, #16]
 80081dc:	f003 0320 	and.w	r3, r3, #32
 80081e0:	2b20      	cmp	r3, #32
 80081e2:	d10e      	bne.n	8008202 <HAL_TIM_IRQHandler+0x236>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80081e4:	687b      	ldr	r3, [r7, #4]
 80081e6:	681b      	ldr	r3, [r3, #0]
 80081e8:	68db      	ldr	r3, [r3, #12]
 80081ea:	f003 0320 	and.w	r3, r3, #32
 80081ee:	2b20      	cmp	r3, #32
 80081f0:	d107      	bne.n	8008202 <HAL_TIM_IRQHandler+0x236>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80081f2:	687b      	ldr	r3, [r7, #4]
 80081f4:	681b      	ldr	r3, [r3, #0]
 80081f6:	f06f 0220 	mvn.w	r2, #32
 80081fa:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80081fc:	6878      	ldr	r0, [r7, #4]
 80081fe:	f000 fae5 	bl	80087cc <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8008202:	bf00      	nop
 8008204:	3708      	adds	r7, #8
 8008206:	46bd      	mov	sp, r7
 8008208:	bd80      	pop	{r7, pc}
	...

0800820c <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 800820c:	b580      	push	{r7, lr}
 800820e:	b084      	sub	sp, #16
 8008210:	af00      	add	r7, sp, #0
 8008212:	6078      	str	r0, [r7, #4]
 8008214:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8008216:	2300      	movs	r3, #0
 8008218:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 800821a:	687b      	ldr	r3, [r7, #4]
 800821c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008220:	2b01      	cmp	r3, #1
 8008222:	d101      	bne.n	8008228 <HAL_TIM_ConfigClockSource+0x1c>
 8008224:	2302      	movs	r3, #2
 8008226:	e0b4      	b.n	8008392 <HAL_TIM_ConfigClockSource+0x186>
 8008228:	687b      	ldr	r3, [r7, #4]
 800822a:	2201      	movs	r2, #1
 800822c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8008230:	687b      	ldr	r3, [r7, #4]
 8008232:	2202      	movs	r2, #2
 8008234:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8008238:	687b      	ldr	r3, [r7, #4]
 800823a:	681b      	ldr	r3, [r3, #0]
 800823c:	689b      	ldr	r3, [r3, #8]
 800823e:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8008240:	68ba      	ldr	r2, [r7, #8]
 8008242:	4b56      	ldr	r3, [pc, #344]	; (800839c <HAL_TIM_ConfigClockSource+0x190>)
 8008244:	4013      	ands	r3, r2
 8008246:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8008248:	68bb      	ldr	r3, [r7, #8]
 800824a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800824e:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 8008250:	687b      	ldr	r3, [r7, #4]
 8008252:	681b      	ldr	r3, [r3, #0]
 8008254:	68ba      	ldr	r2, [r7, #8]
 8008256:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8008258:	683b      	ldr	r3, [r7, #0]
 800825a:	681b      	ldr	r3, [r3, #0]
 800825c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008260:	d03e      	beq.n	80082e0 <HAL_TIM_ConfigClockSource+0xd4>
 8008262:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008266:	f200 8087 	bhi.w	8008378 <HAL_TIM_ConfigClockSource+0x16c>
 800826a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800826e:	f000 8086 	beq.w	800837e <HAL_TIM_ConfigClockSource+0x172>
 8008272:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008276:	d87f      	bhi.n	8008378 <HAL_TIM_ConfigClockSource+0x16c>
 8008278:	2b70      	cmp	r3, #112	; 0x70
 800827a:	d01a      	beq.n	80082b2 <HAL_TIM_ConfigClockSource+0xa6>
 800827c:	2b70      	cmp	r3, #112	; 0x70
 800827e:	d87b      	bhi.n	8008378 <HAL_TIM_ConfigClockSource+0x16c>
 8008280:	2b60      	cmp	r3, #96	; 0x60
 8008282:	d050      	beq.n	8008326 <HAL_TIM_ConfigClockSource+0x11a>
 8008284:	2b60      	cmp	r3, #96	; 0x60
 8008286:	d877      	bhi.n	8008378 <HAL_TIM_ConfigClockSource+0x16c>
 8008288:	2b50      	cmp	r3, #80	; 0x50
 800828a:	d03c      	beq.n	8008306 <HAL_TIM_ConfigClockSource+0xfa>
 800828c:	2b50      	cmp	r3, #80	; 0x50
 800828e:	d873      	bhi.n	8008378 <HAL_TIM_ConfigClockSource+0x16c>
 8008290:	2b40      	cmp	r3, #64	; 0x40
 8008292:	d058      	beq.n	8008346 <HAL_TIM_ConfigClockSource+0x13a>
 8008294:	2b40      	cmp	r3, #64	; 0x40
 8008296:	d86f      	bhi.n	8008378 <HAL_TIM_ConfigClockSource+0x16c>
 8008298:	2b30      	cmp	r3, #48	; 0x30
 800829a:	d064      	beq.n	8008366 <HAL_TIM_ConfigClockSource+0x15a>
 800829c:	2b30      	cmp	r3, #48	; 0x30
 800829e:	d86b      	bhi.n	8008378 <HAL_TIM_ConfigClockSource+0x16c>
 80082a0:	2b20      	cmp	r3, #32
 80082a2:	d060      	beq.n	8008366 <HAL_TIM_ConfigClockSource+0x15a>
 80082a4:	2b20      	cmp	r3, #32
 80082a6:	d867      	bhi.n	8008378 <HAL_TIM_ConfigClockSource+0x16c>
 80082a8:	2b00      	cmp	r3, #0
 80082aa:	d05c      	beq.n	8008366 <HAL_TIM_ConfigClockSource+0x15a>
 80082ac:	2b10      	cmp	r3, #16
 80082ae:	d05a      	beq.n	8008366 <HAL_TIM_ConfigClockSource+0x15a>
 80082b0:	e062      	b.n	8008378 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80082b2:	687b      	ldr	r3, [r7, #4]
 80082b4:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 80082b6:	683b      	ldr	r3, [r7, #0]
 80082b8:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80082ba:	683b      	ldr	r3, [r7, #0]
 80082bc:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80082be:	683b      	ldr	r3, [r7, #0]
 80082c0:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 80082c2:	f000 f9af 	bl	8008624 <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 80082c6:	687b      	ldr	r3, [r7, #4]
 80082c8:	681b      	ldr	r3, [r3, #0]
 80082ca:	689b      	ldr	r3, [r3, #8]
 80082cc:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80082ce:	68bb      	ldr	r3, [r7, #8]
 80082d0:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80082d4:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 80082d6:	687b      	ldr	r3, [r7, #4]
 80082d8:	681b      	ldr	r3, [r3, #0]
 80082da:	68ba      	ldr	r2, [r7, #8]
 80082dc:	609a      	str	r2, [r3, #8]
      break;
 80082de:	e04f      	b.n	8008380 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80082e0:	687b      	ldr	r3, [r7, #4]
 80082e2:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 80082e4:	683b      	ldr	r3, [r7, #0]
 80082e6:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80082e8:	683b      	ldr	r3, [r7, #0]
 80082ea:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80082ec:	683b      	ldr	r3, [r7, #0]
 80082ee:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 80082f0:	f000 f998 	bl	8008624 <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 80082f4:	687b      	ldr	r3, [r7, #4]
 80082f6:	681b      	ldr	r3, [r3, #0]
 80082f8:	689a      	ldr	r2, [r3, #8]
 80082fa:	687b      	ldr	r3, [r7, #4]
 80082fc:	681b      	ldr	r3, [r3, #0]
 80082fe:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8008302:	609a      	str	r2, [r3, #8]
      break;
 8008304:	e03c      	b.n	8008380 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8008306:	687b      	ldr	r3, [r7, #4]
 8008308:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800830a:	683b      	ldr	r3, [r7, #0]
 800830c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800830e:	683b      	ldr	r3, [r7, #0]
 8008310:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 8008312:	461a      	mov	r2, r3
 8008314:	f000 f90c 	bl	8008530 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8008318:	687b      	ldr	r3, [r7, #4]
 800831a:	681b      	ldr	r3, [r3, #0]
 800831c:	2150      	movs	r1, #80	; 0x50
 800831e:	4618      	mov	r0, r3
 8008320:	f000 f965 	bl	80085ee <TIM_ITRx_SetConfig>
      break;
 8008324:	e02c      	b.n	8008380 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 8008326:	687b      	ldr	r3, [r7, #4]
 8008328:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800832a:	683b      	ldr	r3, [r7, #0]
 800832c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800832e:	683b      	ldr	r3, [r7, #0]
 8008330:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 8008332:	461a      	mov	r2, r3
 8008334:	f000 f92b 	bl	800858e <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8008338:	687b      	ldr	r3, [r7, #4]
 800833a:	681b      	ldr	r3, [r3, #0]
 800833c:	2160      	movs	r1, #96	; 0x60
 800833e:	4618      	mov	r0, r3
 8008340:	f000 f955 	bl	80085ee <TIM_ITRx_SetConfig>
      break;
 8008344:	e01c      	b.n	8008380 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8008346:	687b      	ldr	r3, [r7, #4]
 8008348:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800834a:	683b      	ldr	r3, [r7, #0]
 800834c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800834e:	683b      	ldr	r3, [r7, #0]
 8008350:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 8008352:	461a      	mov	r2, r3
 8008354:	f000 f8ec 	bl	8008530 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8008358:	687b      	ldr	r3, [r7, #4]
 800835a:	681b      	ldr	r3, [r3, #0]
 800835c:	2140      	movs	r1, #64	; 0x40
 800835e:	4618      	mov	r0, r3
 8008360:	f000 f945 	bl	80085ee <TIM_ITRx_SetConfig>
      break;
 8008364:	e00c      	b.n	8008380 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 8008366:	687b      	ldr	r3, [r7, #4]
 8008368:	681a      	ldr	r2, [r3, #0]
 800836a:	683b      	ldr	r3, [r7, #0]
 800836c:	681b      	ldr	r3, [r3, #0]
 800836e:	4619      	mov	r1, r3
 8008370:	4610      	mov	r0, r2
 8008372:	f000 f93c 	bl	80085ee <TIM_ITRx_SetConfig>
      break;
 8008376:	e003      	b.n	8008380 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 8008378:	2301      	movs	r3, #1
 800837a:	73fb      	strb	r3, [r7, #15]
      break;
 800837c:	e000      	b.n	8008380 <HAL_TIM_ConfigClockSource+0x174>
      break;
 800837e:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8008380:	687b      	ldr	r3, [r7, #4]
 8008382:	2201      	movs	r2, #1
 8008384:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8008388:	687b      	ldr	r3, [r7, #4]
 800838a:	2200      	movs	r2, #0
 800838c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 8008390:	7bfb      	ldrb	r3, [r7, #15]
}
 8008392:	4618      	mov	r0, r3
 8008394:	3710      	adds	r7, #16
 8008396:	46bd      	mov	sp, r7
 8008398:	bd80      	pop	{r7, pc}
 800839a:	bf00      	nop
 800839c:	fffeff88 	.word	0xfffeff88

080083a0 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 80083a0:	b480      	push	{r7}
 80083a2:	b083      	sub	sp, #12
 80083a4:	af00      	add	r7, sp, #0
 80083a6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 80083a8:	bf00      	nop
 80083aa:	370c      	adds	r7, #12
 80083ac:	46bd      	mov	sp, r7
 80083ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083b2:	4770      	bx	lr

080083b4 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 80083b4:	b480      	push	{r7}
 80083b6:	b083      	sub	sp, #12
 80083b8:	af00      	add	r7, sp, #0
 80083ba:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 80083bc:	bf00      	nop
 80083be:	370c      	adds	r7, #12
 80083c0:	46bd      	mov	sp, r7
 80083c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083c6:	4770      	bx	lr

080083c8 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 80083c8:	b480      	push	{r7}
 80083ca:	b083      	sub	sp, #12
 80083cc:	af00      	add	r7, sp, #0
 80083ce:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 80083d0:	bf00      	nop
 80083d2:	370c      	adds	r7, #12
 80083d4:	46bd      	mov	sp, r7
 80083d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083da:	4770      	bx	lr

080083dc <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 80083dc:	b480      	push	{r7}
 80083de:	b083      	sub	sp, #12
 80083e0:	af00      	add	r7, sp, #0
 80083e2:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 80083e4:	bf00      	nop
 80083e6:	370c      	adds	r7, #12
 80083e8:	46bd      	mov	sp, r7
 80083ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083ee:	4770      	bx	lr

080083f0 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 80083f0:	b480      	push	{r7}
 80083f2:	b085      	sub	sp, #20
 80083f4:	af00      	add	r7, sp, #0
 80083f6:	6078      	str	r0, [r7, #4]
 80083f8:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 80083fa:	687b      	ldr	r3, [r7, #4]
 80083fc:	681b      	ldr	r3, [r3, #0]
 80083fe:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	4a40      	ldr	r2, [pc, #256]	; (8008504 <TIM_Base_SetConfig+0x114>)
 8008404:	4293      	cmp	r3, r2
 8008406:	d013      	beq.n	8008430 <TIM_Base_SetConfig+0x40>
 8008408:	687b      	ldr	r3, [r7, #4]
 800840a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800840e:	d00f      	beq.n	8008430 <TIM_Base_SetConfig+0x40>
 8008410:	687b      	ldr	r3, [r7, #4]
 8008412:	4a3d      	ldr	r2, [pc, #244]	; (8008508 <TIM_Base_SetConfig+0x118>)
 8008414:	4293      	cmp	r3, r2
 8008416:	d00b      	beq.n	8008430 <TIM_Base_SetConfig+0x40>
 8008418:	687b      	ldr	r3, [r7, #4]
 800841a:	4a3c      	ldr	r2, [pc, #240]	; (800850c <TIM_Base_SetConfig+0x11c>)
 800841c:	4293      	cmp	r3, r2
 800841e:	d007      	beq.n	8008430 <TIM_Base_SetConfig+0x40>
 8008420:	687b      	ldr	r3, [r7, #4]
 8008422:	4a3b      	ldr	r2, [pc, #236]	; (8008510 <TIM_Base_SetConfig+0x120>)
 8008424:	4293      	cmp	r3, r2
 8008426:	d003      	beq.n	8008430 <TIM_Base_SetConfig+0x40>
 8008428:	687b      	ldr	r3, [r7, #4]
 800842a:	4a3a      	ldr	r2, [pc, #232]	; (8008514 <TIM_Base_SetConfig+0x124>)
 800842c:	4293      	cmp	r3, r2
 800842e:	d108      	bne.n	8008442 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008430:	68fb      	ldr	r3, [r7, #12]
 8008432:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008436:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8008438:	683b      	ldr	r3, [r7, #0]
 800843a:	685b      	ldr	r3, [r3, #4]
 800843c:	68fa      	ldr	r2, [r7, #12]
 800843e:	4313      	orrs	r3, r2
 8008440:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8008442:	687b      	ldr	r3, [r7, #4]
 8008444:	4a2f      	ldr	r2, [pc, #188]	; (8008504 <TIM_Base_SetConfig+0x114>)
 8008446:	4293      	cmp	r3, r2
 8008448:	d02b      	beq.n	80084a2 <TIM_Base_SetConfig+0xb2>
 800844a:	687b      	ldr	r3, [r7, #4]
 800844c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008450:	d027      	beq.n	80084a2 <TIM_Base_SetConfig+0xb2>
 8008452:	687b      	ldr	r3, [r7, #4]
 8008454:	4a2c      	ldr	r2, [pc, #176]	; (8008508 <TIM_Base_SetConfig+0x118>)
 8008456:	4293      	cmp	r3, r2
 8008458:	d023      	beq.n	80084a2 <TIM_Base_SetConfig+0xb2>
 800845a:	687b      	ldr	r3, [r7, #4]
 800845c:	4a2b      	ldr	r2, [pc, #172]	; (800850c <TIM_Base_SetConfig+0x11c>)
 800845e:	4293      	cmp	r3, r2
 8008460:	d01f      	beq.n	80084a2 <TIM_Base_SetConfig+0xb2>
 8008462:	687b      	ldr	r3, [r7, #4]
 8008464:	4a2a      	ldr	r2, [pc, #168]	; (8008510 <TIM_Base_SetConfig+0x120>)
 8008466:	4293      	cmp	r3, r2
 8008468:	d01b      	beq.n	80084a2 <TIM_Base_SetConfig+0xb2>
 800846a:	687b      	ldr	r3, [r7, #4]
 800846c:	4a29      	ldr	r2, [pc, #164]	; (8008514 <TIM_Base_SetConfig+0x124>)
 800846e:	4293      	cmp	r3, r2
 8008470:	d017      	beq.n	80084a2 <TIM_Base_SetConfig+0xb2>
 8008472:	687b      	ldr	r3, [r7, #4]
 8008474:	4a28      	ldr	r2, [pc, #160]	; (8008518 <TIM_Base_SetConfig+0x128>)
 8008476:	4293      	cmp	r3, r2
 8008478:	d013      	beq.n	80084a2 <TIM_Base_SetConfig+0xb2>
 800847a:	687b      	ldr	r3, [r7, #4]
 800847c:	4a27      	ldr	r2, [pc, #156]	; (800851c <TIM_Base_SetConfig+0x12c>)
 800847e:	4293      	cmp	r3, r2
 8008480:	d00f      	beq.n	80084a2 <TIM_Base_SetConfig+0xb2>
 8008482:	687b      	ldr	r3, [r7, #4]
 8008484:	4a26      	ldr	r2, [pc, #152]	; (8008520 <TIM_Base_SetConfig+0x130>)
 8008486:	4293      	cmp	r3, r2
 8008488:	d00b      	beq.n	80084a2 <TIM_Base_SetConfig+0xb2>
 800848a:	687b      	ldr	r3, [r7, #4]
 800848c:	4a25      	ldr	r2, [pc, #148]	; (8008524 <TIM_Base_SetConfig+0x134>)
 800848e:	4293      	cmp	r3, r2
 8008490:	d007      	beq.n	80084a2 <TIM_Base_SetConfig+0xb2>
 8008492:	687b      	ldr	r3, [r7, #4]
 8008494:	4a24      	ldr	r2, [pc, #144]	; (8008528 <TIM_Base_SetConfig+0x138>)
 8008496:	4293      	cmp	r3, r2
 8008498:	d003      	beq.n	80084a2 <TIM_Base_SetConfig+0xb2>
 800849a:	687b      	ldr	r3, [r7, #4]
 800849c:	4a23      	ldr	r2, [pc, #140]	; (800852c <TIM_Base_SetConfig+0x13c>)
 800849e:	4293      	cmp	r3, r2
 80084a0:	d108      	bne.n	80084b4 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 80084a2:	68fb      	ldr	r3, [r7, #12]
 80084a4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80084a8:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80084aa:	683b      	ldr	r3, [r7, #0]
 80084ac:	68db      	ldr	r3, [r3, #12]
 80084ae:	68fa      	ldr	r2, [r7, #12]
 80084b0:	4313      	orrs	r3, r2
 80084b2:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80084b4:	68fb      	ldr	r3, [r7, #12]
 80084b6:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80084ba:	683b      	ldr	r3, [r7, #0]
 80084bc:	695b      	ldr	r3, [r3, #20]
 80084be:	4313      	orrs	r3, r2
 80084c0:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 80084c2:	687b      	ldr	r3, [r7, #4]
 80084c4:	68fa      	ldr	r2, [r7, #12]
 80084c6:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80084c8:	683b      	ldr	r3, [r7, #0]
 80084ca:	689a      	ldr	r2, [r3, #8]
 80084cc:	687b      	ldr	r3, [r7, #4]
 80084ce:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80084d0:	683b      	ldr	r3, [r7, #0]
 80084d2:	681a      	ldr	r2, [r3, #0]
 80084d4:	687b      	ldr	r3, [r7, #4]
 80084d6:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80084d8:	687b      	ldr	r3, [r7, #4]
 80084da:	4a0a      	ldr	r2, [pc, #40]	; (8008504 <TIM_Base_SetConfig+0x114>)
 80084dc:	4293      	cmp	r3, r2
 80084de:	d003      	beq.n	80084e8 <TIM_Base_SetConfig+0xf8>
 80084e0:	687b      	ldr	r3, [r7, #4]
 80084e2:	4a0c      	ldr	r2, [pc, #48]	; (8008514 <TIM_Base_SetConfig+0x124>)
 80084e4:	4293      	cmp	r3, r2
 80084e6:	d103      	bne.n	80084f0 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80084e8:	683b      	ldr	r3, [r7, #0]
 80084ea:	691a      	ldr	r2, [r3, #16]
 80084ec:	687b      	ldr	r3, [r7, #4]
 80084ee:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80084f0:	687b      	ldr	r3, [r7, #4]
 80084f2:	2201      	movs	r2, #1
 80084f4:	615a      	str	r2, [r3, #20]
}
 80084f6:	bf00      	nop
 80084f8:	3714      	adds	r7, #20
 80084fa:	46bd      	mov	sp, r7
 80084fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008500:	4770      	bx	lr
 8008502:	bf00      	nop
 8008504:	40010000 	.word	0x40010000
 8008508:	40000400 	.word	0x40000400
 800850c:	40000800 	.word	0x40000800
 8008510:	40000c00 	.word	0x40000c00
 8008514:	40010400 	.word	0x40010400
 8008518:	40014000 	.word	0x40014000
 800851c:	40014400 	.word	0x40014400
 8008520:	40014800 	.word	0x40014800
 8008524:	40001800 	.word	0x40001800
 8008528:	40001c00 	.word	0x40001c00
 800852c:	40002000 	.word	0x40002000

08008530 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8008530:	b480      	push	{r7}
 8008532:	b087      	sub	sp, #28
 8008534:	af00      	add	r7, sp, #0
 8008536:	60f8      	str	r0, [r7, #12]
 8008538:	60b9      	str	r1, [r7, #8]
 800853a:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800853c:	68fb      	ldr	r3, [r7, #12]
 800853e:	6a1b      	ldr	r3, [r3, #32]
 8008540:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008542:	68fb      	ldr	r3, [r7, #12]
 8008544:	6a1b      	ldr	r3, [r3, #32]
 8008546:	f023 0201 	bic.w	r2, r3, #1
 800854a:	68fb      	ldr	r3, [r7, #12]
 800854c:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800854e:	68fb      	ldr	r3, [r7, #12]
 8008550:	699b      	ldr	r3, [r3, #24]
 8008552:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8008554:	693b      	ldr	r3, [r7, #16]
 8008556:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800855a:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800855c:	687b      	ldr	r3, [r7, #4]
 800855e:	011b      	lsls	r3, r3, #4
 8008560:	693a      	ldr	r2, [r7, #16]
 8008562:	4313      	orrs	r3, r2
 8008564:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8008566:	697b      	ldr	r3, [r7, #20]
 8008568:	f023 030a 	bic.w	r3, r3, #10
 800856c:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 800856e:	697a      	ldr	r2, [r7, #20]
 8008570:	68bb      	ldr	r3, [r7, #8]
 8008572:	4313      	orrs	r3, r2
 8008574:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8008576:	68fb      	ldr	r3, [r7, #12]
 8008578:	693a      	ldr	r2, [r7, #16]
 800857a:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 800857c:	68fb      	ldr	r3, [r7, #12]
 800857e:	697a      	ldr	r2, [r7, #20]
 8008580:	621a      	str	r2, [r3, #32]
}
 8008582:	bf00      	nop
 8008584:	371c      	adds	r7, #28
 8008586:	46bd      	mov	sp, r7
 8008588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800858c:	4770      	bx	lr

0800858e <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 800858e:	b480      	push	{r7}
 8008590:	b087      	sub	sp, #28
 8008592:	af00      	add	r7, sp, #0
 8008594:	60f8      	str	r0, [r7, #12]
 8008596:	60b9      	str	r1, [r7, #8]
 8008598:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800859a:	68fb      	ldr	r3, [r7, #12]
 800859c:	6a1b      	ldr	r3, [r3, #32]
 800859e:	f023 0210 	bic.w	r2, r3, #16
 80085a2:	68fb      	ldr	r3, [r7, #12]
 80085a4:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80085a6:	68fb      	ldr	r3, [r7, #12]
 80085a8:	699b      	ldr	r3, [r3, #24]
 80085aa:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 80085ac:	68fb      	ldr	r3, [r7, #12]
 80085ae:	6a1b      	ldr	r3, [r3, #32]
 80085b0:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80085b2:	697b      	ldr	r3, [r7, #20]
 80085b4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80085b8:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 80085ba:	687b      	ldr	r3, [r7, #4]
 80085bc:	031b      	lsls	r3, r3, #12
 80085be:	697a      	ldr	r2, [r7, #20]
 80085c0:	4313      	orrs	r3, r2
 80085c2:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 80085c4:	693b      	ldr	r3, [r7, #16]
 80085c6:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80085ca:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 80085cc:	68bb      	ldr	r3, [r7, #8]
 80085ce:	011b      	lsls	r3, r3, #4
 80085d0:	693a      	ldr	r2, [r7, #16]
 80085d2:	4313      	orrs	r3, r2
 80085d4:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 80085d6:	68fb      	ldr	r3, [r7, #12]
 80085d8:	697a      	ldr	r2, [r7, #20]
 80085da:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 80085dc:	68fb      	ldr	r3, [r7, #12]
 80085de:	693a      	ldr	r2, [r7, #16]
 80085e0:	621a      	str	r2, [r3, #32]
}
 80085e2:	bf00      	nop
 80085e4:	371c      	adds	r7, #28
 80085e6:	46bd      	mov	sp, r7
 80085e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085ec:	4770      	bx	lr

080085ee <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 80085ee:	b480      	push	{r7}
 80085f0:	b085      	sub	sp, #20
 80085f2:	af00      	add	r7, sp, #0
 80085f4:	6078      	str	r0, [r7, #4]
 80085f6:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 80085f8:	687b      	ldr	r3, [r7, #4]
 80085fa:	689b      	ldr	r3, [r3, #8]
 80085fc:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 80085fe:	68fb      	ldr	r3, [r7, #12]
 8008600:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008604:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8008606:	683a      	ldr	r2, [r7, #0]
 8008608:	68fb      	ldr	r3, [r7, #12]
 800860a:	4313      	orrs	r3, r2
 800860c:	f043 0307 	orr.w	r3, r3, #7
 8008610:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8008612:	687b      	ldr	r3, [r7, #4]
 8008614:	68fa      	ldr	r2, [r7, #12]
 8008616:	609a      	str	r2, [r3, #8]
}
 8008618:	bf00      	nop
 800861a:	3714      	adds	r7, #20
 800861c:	46bd      	mov	sp, r7
 800861e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008622:	4770      	bx	lr

08008624 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8008624:	b480      	push	{r7}
 8008626:	b087      	sub	sp, #28
 8008628:	af00      	add	r7, sp, #0
 800862a:	60f8      	str	r0, [r7, #12]
 800862c:	60b9      	str	r1, [r7, #8]
 800862e:	607a      	str	r2, [r7, #4]
 8008630:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8008632:	68fb      	ldr	r3, [r7, #12]
 8008634:	689b      	ldr	r3, [r3, #8]
 8008636:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8008638:	697b      	ldr	r3, [r7, #20]
 800863a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800863e:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8008640:	683b      	ldr	r3, [r7, #0]
 8008642:	021a      	lsls	r2, r3, #8
 8008644:	687b      	ldr	r3, [r7, #4]
 8008646:	431a      	orrs	r2, r3
 8008648:	68bb      	ldr	r3, [r7, #8]
 800864a:	4313      	orrs	r3, r2
 800864c:	697a      	ldr	r2, [r7, #20]
 800864e:	4313      	orrs	r3, r2
 8008650:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8008652:	68fb      	ldr	r3, [r7, #12]
 8008654:	697a      	ldr	r2, [r7, #20]
 8008656:	609a      	str	r2, [r3, #8]
}
 8008658:	bf00      	nop
 800865a:	371c      	adds	r7, #28
 800865c:	46bd      	mov	sp, r7
 800865e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008662:	4770      	bx	lr

08008664 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8008664:	b480      	push	{r7}
 8008666:	b087      	sub	sp, #28
 8008668:	af00      	add	r7, sp, #0
 800866a:	60f8      	str	r0, [r7, #12]
 800866c:	60b9      	str	r1, [r7, #8]
 800866e:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8008670:	68bb      	ldr	r3, [r7, #8]
 8008672:	f003 031f 	and.w	r3, r3, #31
 8008676:	2201      	movs	r2, #1
 8008678:	fa02 f303 	lsl.w	r3, r2, r3
 800867c:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 800867e:	68fb      	ldr	r3, [r7, #12]
 8008680:	6a1a      	ldr	r2, [r3, #32]
 8008682:	697b      	ldr	r3, [r7, #20]
 8008684:	43db      	mvns	r3, r3
 8008686:	401a      	ands	r2, r3
 8008688:	68fb      	ldr	r3, [r7, #12]
 800868a:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 800868c:	68fb      	ldr	r3, [r7, #12]
 800868e:	6a1a      	ldr	r2, [r3, #32]
 8008690:	68bb      	ldr	r3, [r7, #8]
 8008692:	f003 031f 	and.w	r3, r3, #31
 8008696:	6879      	ldr	r1, [r7, #4]
 8008698:	fa01 f303 	lsl.w	r3, r1, r3
 800869c:	431a      	orrs	r2, r3
 800869e:	68fb      	ldr	r3, [r7, #12]
 80086a0:	621a      	str	r2, [r3, #32]
}
 80086a2:	bf00      	nop
 80086a4:	371c      	adds	r7, #28
 80086a6:	46bd      	mov	sp, r7
 80086a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086ac:	4770      	bx	lr
	...

080086b0 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 80086b0:	b480      	push	{r7}
 80086b2:	b085      	sub	sp, #20
 80086b4:	af00      	add	r7, sp, #0
 80086b6:	6078      	str	r0, [r7, #4]
 80086b8:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80086ba:	687b      	ldr	r3, [r7, #4]
 80086bc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80086c0:	2b01      	cmp	r3, #1
 80086c2:	d101      	bne.n	80086c8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80086c4:	2302      	movs	r3, #2
 80086c6:	e06d      	b.n	80087a4 <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 80086c8:	687b      	ldr	r3, [r7, #4]
 80086ca:	2201      	movs	r2, #1
 80086cc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80086d0:	687b      	ldr	r3, [r7, #4]
 80086d2:	2202      	movs	r2, #2
 80086d4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80086d8:	687b      	ldr	r3, [r7, #4]
 80086da:	681b      	ldr	r3, [r3, #0]
 80086dc:	685b      	ldr	r3, [r3, #4]
 80086de:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 80086e0:	687b      	ldr	r3, [r7, #4]
 80086e2:	681b      	ldr	r3, [r3, #0]
 80086e4:	689b      	ldr	r3, [r3, #8]
 80086e6:	60bb      	str	r3, [r7, #8]

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 80086e8:	687b      	ldr	r3, [r7, #4]
 80086ea:	681b      	ldr	r3, [r3, #0]
 80086ec:	4a30      	ldr	r2, [pc, #192]	; (80087b0 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 80086ee:	4293      	cmp	r3, r2
 80086f0:	d004      	beq.n	80086fc <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 80086f2:	687b      	ldr	r3, [r7, #4]
 80086f4:	681b      	ldr	r3, [r3, #0]
 80086f6:	4a2f      	ldr	r2, [pc, #188]	; (80087b4 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 80086f8:	4293      	cmp	r3, r2
 80086fa:	d108      	bne.n	800870e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 80086fc:	68fb      	ldr	r3, [r7, #12]
 80086fe:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8008702:	60fb      	str	r3, [r7, #12]
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 8008704:	683b      	ldr	r3, [r7, #0]
 8008706:	685b      	ldr	r3, [r3, #4]
 8008708:	68fa      	ldr	r2, [r7, #12]
 800870a:	4313      	orrs	r3, r2
 800870c:	60fb      	str	r3, [r7, #12]
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 800870e:	68fb      	ldr	r3, [r7, #12]
 8008710:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008714:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8008716:	683b      	ldr	r3, [r7, #0]
 8008718:	681b      	ldr	r3, [r3, #0]
 800871a:	68fa      	ldr	r2, [r7, #12]
 800871c:	4313      	orrs	r3, r2
 800871e:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8008720:	687b      	ldr	r3, [r7, #4]
 8008722:	681b      	ldr	r3, [r3, #0]
 8008724:	68fa      	ldr	r2, [r7, #12]
 8008726:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008728:	687b      	ldr	r3, [r7, #4]
 800872a:	681b      	ldr	r3, [r3, #0]
 800872c:	4a20      	ldr	r2, [pc, #128]	; (80087b0 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800872e:	4293      	cmp	r3, r2
 8008730:	d022      	beq.n	8008778 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008732:	687b      	ldr	r3, [r7, #4]
 8008734:	681b      	ldr	r3, [r3, #0]
 8008736:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800873a:	d01d      	beq.n	8008778 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800873c:	687b      	ldr	r3, [r7, #4]
 800873e:	681b      	ldr	r3, [r3, #0]
 8008740:	4a1d      	ldr	r2, [pc, #116]	; (80087b8 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 8008742:	4293      	cmp	r3, r2
 8008744:	d018      	beq.n	8008778 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008746:	687b      	ldr	r3, [r7, #4]
 8008748:	681b      	ldr	r3, [r3, #0]
 800874a:	4a1c      	ldr	r2, [pc, #112]	; (80087bc <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 800874c:	4293      	cmp	r3, r2
 800874e:	d013      	beq.n	8008778 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008750:	687b      	ldr	r3, [r7, #4]
 8008752:	681b      	ldr	r3, [r3, #0]
 8008754:	4a1a      	ldr	r2, [pc, #104]	; (80087c0 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 8008756:	4293      	cmp	r3, r2
 8008758:	d00e      	beq.n	8008778 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800875a:	687b      	ldr	r3, [r7, #4]
 800875c:	681b      	ldr	r3, [r3, #0]
 800875e:	4a15      	ldr	r2, [pc, #84]	; (80087b4 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8008760:	4293      	cmp	r3, r2
 8008762:	d009      	beq.n	8008778 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008764:	687b      	ldr	r3, [r7, #4]
 8008766:	681b      	ldr	r3, [r3, #0]
 8008768:	4a16      	ldr	r2, [pc, #88]	; (80087c4 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 800876a:	4293      	cmp	r3, r2
 800876c:	d004      	beq.n	8008778 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800876e:	687b      	ldr	r3, [r7, #4]
 8008770:	681b      	ldr	r3, [r3, #0]
 8008772:	4a15      	ldr	r2, [pc, #84]	; (80087c8 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 8008774:	4293      	cmp	r3, r2
 8008776:	d10c      	bne.n	8008792 <HAL_TIMEx_MasterConfigSynchronization+0xe2>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008778:	68bb      	ldr	r3, [r7, #8]
 800877a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800877e:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008780:	683b      	ldr	r3, [r7, #0]
 8008782:	689b      	ldr	r3, [r3, #8]
 8008784:	68ba      	ldr	r2, [r7, #8]
 8008786:	4313      	orrs	r3, r2
 8008788:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800878a:	687b      	ldr	r3, [r7, #4]
 800878c:	681b      	ldr	r3, [r3, #0]
 800878e:	68ba      	ldr	r2, [r7, #8]
 8008790:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8008792:	687b      	ldr	r3, [r7, #4]
 8008794:	2201      	movs	r2, #1
 8008796:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800879a:	687b      	ldr	r3, [r7, #4]
 800879c:	2200      	movs	r2, #0
 800879e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 80087a2:	2300      	movs	r3, #0
}
 80087a4:	4618      	mov	r0, r3
 80087a6:	3714      	adds	r7, #20
 80087a8:	46bd      	mov	sp, r7
 80087aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087ae:	4770      	bx	lr
 80087b0:	40010000 	.word	0x40010000
 80087b4:	40010400 	.word	0x40010400
 80087b8:	40000400 	.word	0x40000400
 80087bc:	40000800 	.word	0x40000800
 80087c0:	40000c00 	.word	0x40000c00
 80087c4:	40014000 	.word	0x40014000
 80087c8:	40001800 	.word	0x40001800

080087cc <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 80087cc:	b480      	push	{r7}
 80087ce:	b083      	sub	sp, #12
 80087d0:	af00      	add	r7, sp, #0
 80087d2:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 80087d4:	bf00      	nop
 80087d6:	370c      	adds	r7, #12
 80087d8:	46bd      	mov	sp, r7
 80087da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087de:	4770      	bx	lr

080087e0 <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 80087e0:	b480      	push	{r7}
 80087e2:	b083      	sub	sp, #12
 80087e4:	af00      	add	r7, sp, #0
 80087e6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 80087e8:	bf00      	nop
 80087ea:	370c      	adds	r7, #12
 80087ec:	46bd      	mov	sp, r7
 80087ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087f2:	4770      	bx	lr

080087f4 <HAL_TIMEx_Break2Callback>:
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
{
 80087f4:	b480      	push	{r7}
 80087f6:	b083      	sub	sp, #12
 80087f8:	af00      	add	r7, sp, #0
 80087fa:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_TIMEx_Break2Callback could be implemented in the user file
   */
}
 80087fc:	bf00      	nop
 80087fe:	370c      	adds	r7, #12
 8008800:	46bd      	mov	sp, r7
 8008802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008806:	4770      	bx	lr

08008808 <ILI9341_Init>:
	RESET_L();
}

// Initialization
void ILI9341_Init(void)
{
 8008808:	b580      	push	{r7, lr}
 800880a:	af00      	add	r7, sp, #0
	ILI9341_Reset();
 800880c:	f000 f9a7 	bl	8008b5e <ILI9341_Reset>
	ILI9341_SoftReset();
 8008810:	f000 f9b8 	bl	8008b84 <ILI9341_SoftReset>

	HAL_Delay(500);
 8008814:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8008818:	f7fa fdb8 	bl	800338c <HAL_Delay>

	/* Power Control A */
	LCD_WR_REG(0xCB);
 800881c:	20cb      	movs	r0, #203	; 0xcb
 800881e:	f000 f9cb 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x39);
 8008822:	2039      	movs	r0, #57	; 0x39
 8008824:	f000 f9e2 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x2C);
 8008828:	202c      	movs	r0, #44	; 0x2c
 800882a:	f000 f9df 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 800882e:	2000      	movs	r0, #0
 8008830:	f000 f9dc 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x34);
 8008834:	2034      	movs	r0, #52	; 0x34
 8008836:	f000 f9d9 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x02);
 800883a:	2002      	movs	r0, #2
 800883c:	f000 f9d6 	bl	8008bec <LCD_WR_DATA>
	/* Power Control B */
	LCD_WR_REG(0xCF);
 8008840:	20cf      	movs	r0, #207	; 0xcf
 8008842:	f000 f9b9 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8008846:	2000      	movs	r0, #0
 8008848:	f000 f9d0 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 800884c:	20c1      	movs	r0, #193	; 0xc1
 800884e:	f000 f9cd 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x30);
 8008852:	2030      	movs	r0, #48	; 0x30
 8008854:	f000 f9ca 	bl	8008bec <LCD_WR_DATA>
	/* Driver timing control A */
	LCD_WR_REG(0xE8);
 8008858:	20e8      	movs	r0, #232	; 0xe8
 800885a:	f000 f9ad 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x85);
 800885e:	2085      	movs	r0, #133	; 0x85
 8008860:	f000 f9c4 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8008864:	2000      	movs	r0, #0
 8008866:	f000 f9c1 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x78);
 800886a:	2078      	movs	r0, #120	; 0x78
 800886c:	f000 f9be 	bl	8008bec <LCD_WR_DATA>
	/* Driver timing control B */
	LCD_WR_REG(0xEA);
 8008870:	20ea      	movs	r0, #234	; 0xea
 8008872:	f000 f9a1 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8008876:	2000      	movs	r0, #0
 8008878:	f000 f9b8 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 800887c:	2000      	movs	r0, #0
 800887e:	f000 f9b5 	bl	8008bec <LCD_WR_DATA>
	/* Power on Sequence control */
	LCD_WR_REG(0xED);
 8008882:	20ed      	movs	r0, #237	; 0xed
 8008884:	f000 f998 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x64);
 8008888:	2064      	movs	r0, #100	; 0x64
 800888a:	f000 f9af 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 800888e:	2003      	movs	r0, #3
 8008890:	f000 f9ac 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x12);
 8008894:	2012      	movs	r0, #18
 8008896:	f000 f9a9 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x81);
 800889a:	2081      	movs	r0, #129	; 0x81
 800889c:	f000 f9a6 	bl	8008bec <LCD_WR_DATA>
	/* Pump ratio control */
	LCD_WR_REG(0xF7);
 80088a0:	20f7      	movs	r0, #247	; 0xf7
 80088a2:	f000 f989 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x20);
 80088a6:	2020      	movs	r0, #32
 80088a8:	f000 f9a0 	bl	8008bec <LCD_WR_DATA>
	/* Power Control 1 */
	LCD_WR_REG(0xC0);
 80088ac:	20c0      	movs	r0, #192	; 0xc0
 80088ae:	f000 f983 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x10);
 80088b2:	2010      	movs	r0, #16
 80088b4:	f000 f99a 	bl	8008bec <LCD_WR_DATA>
	/* Power Control 2 */
	LCD_WR_REG(0xC1);
 80088b8:	20c1      	movs	r0, #193	; 0xc1
 80088ba:	f000 f97d 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x10);
 80088be:	2010      	movs	r0, #16
 80088c0:	f000 f994 	bl	8008bec <LCD_WR_DATA>
	/* VCOM Control 1 */
	LCD_WR_REG(0xC5);
 80088c4:	20c5      	movs	r0, #197	; 0xc5
 80088c6:	f000 f977 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x3E);
 80088ca:	203e      	movs	r0, #62	; 0x3e
 80088cc:	f000 f98e 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x28);
 80088d0:	2028      	movs	r0, #40	; 0x28
 80088d2:	f000 f98b 	bl	8008bec <LCD_WR_DATA>
	/* VCOM Control 2 */
	LCD_WR_REG(0xC7);
 80088d6:	20c7      	movs	r0, #199	; 0xc7
 80088d8:	f000 f96e 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x86);
 80088dc:	2086      	movs	r0, #134	; 0x86
 80088de:	f000 f985 	bl	8008bec <LCD_WR_DATA>
	/* VCOM Control 2 */
	LCD_WR_REG(0x36);
 80088e2:	2036      	movs	r0, #54	; 0x36
 80088e4:	f000 f968 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x48);
 80088e8:	2048      	movs	r0, #72	; 0x48
 80088ea:	f000 f97f 	bl	8008bec <LCD_WR_DATA>
	/* Pixel Format Set */
	LCD_WR_REG(0x3A);
 80088ee:	203a      	movs	r0, #58	; 0x3a
 80088f0:	f000 f962 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x55);    //16bit
 80088f4:	2055      	movs	r0, #85	; 0x55
 80088f6:	f000 f979 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_REG(0xB1);
 80088fa:	20b1      	movs	r0, #177	; 0xb1
 80088fc:	f000 f95c 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8008900:	2000      	movs	r0, #0
 8008902:	f000 f973 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x18);
 8008906:	2018      	movs	r0, #24
 8008908:	f000 f970 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x01);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x20); // Little Endian
#endif
	/* Display Function Control */
	LCD_WR_REG(0xB6);
 800890c:	20b6      	movs	r0, #182	; 0xb6
 800890e:	f000 f953 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x08);
 8008912:	2008      	movs	r0, #8
 8008914:	f000 f96a 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x82);
 8008918:	2082      	movs	r0, #130	; 0x82
 800891a:	f000 f967 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x27);
 800891e:	2027      	movs	r0, #39	; 0x27
 8008920:	f000 f964 	bl	8008bec <LCD_WR_DATA>
	/* 3GAMMA FUNCTION DISABLE */
	LCD_WR_REG(0xF2);
 8008924:	20f2      	movs	r0, #242	; 0xf2
 8008926:	f000 f947 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 800892a:	2000      	movs	r0, #0
 800892c:	f000 f95e 	bl	8008bec <LCD_WR_DATA>
	/* GAMMA CURVE SELECTED */
	LCD_WR_REG(0x26); //Gamma set
 8008930:	2026      	movs	r0, #38	; 0x26
 8008932:	f000 f941 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x01); 	//Gamma Curve (G2.2)
 8008936:	2001      	movs	r0, #1
 8008938:	f000 f958 	bl	8008bec <LCD_WR_DATA>
	//Positive Gamma  Correction
	LCD_WR_REG(0xE0);
 800893c:	20e0      	movs	r0, #224	; 0xe0
 800893e:	f000 f93b 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x0F);
 8008942:	200f      	movs	r0, #15
 8008944:	f000 f952 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 8008948:	2031      	movs	r0, #49	; 0x31
 800894a:	f000 f94f 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x2B);
 800894e:	202b      	movs	r0, #43	; 0x2b
 8008950:	f000 f94c 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x0C);
 8008954:	200c      	movs	r0, #12
 8008956:	f000 f949 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 800895a:	200e      	movs	r0, #14
 800895c:	f000 f946 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 8008960:	2008      	movs	r0, #8
 8008962:	f000 f943 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x4E);
 8008966:	204e      	movs	r0, #78	; 0x4e
 8008968:	f000 f940 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0xF1);
 800896c:	20f1      	movs	r0, #241	; 0xf1
 800896e:	f000 f93d 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x37);
 8008972:	2037      	movs	r0, #55	; 0x37
 8008974:	f000 f93a 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 8008978:	2007      	movs	r0, #7
 800897a:	f000 f937 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x10);
 800897e:	2010      	movs	r0, #16
 8008980:	f000 f934 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8008984:	2003      	movs	r0, #3
 8008986:	f000 f931 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 800898a:	200e      	movs	r0, #14
 800898c:	f000 f92e 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x09);
 8008990:	2009      	movs	r0, #9
 8008992:	f000 f92b 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8008996:	2000      	movs	r0, #0
 8008998:	f000 f928 	bl	8008bec <LCD_WR_DATA>
	//Negative Gamma  Correction
	LCD_WR_REG(0xE1);
 800899c:	20e1      	movs	r0, #225	; 0xe1
 800899e:	f000 f90b 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80089a2:	2000      	movs	r0, #0
 80089a4:	f000 f922 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 80089a8:	200e      	movs	r0, #14
 80089aa:	f000 f91f 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x14);
 80089ae:	2014      	movs	r0, #20
 80089b0:	f000 f91c 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 80089b4:	2003      	movs	r0, #3
 80089b6:	f000 f919 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x11);
 80089ba:	2011      	movs	r0, #17
 80089bc:	f000 f916 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 80089c0:	2007      	movs	r0, #7
 80089c2:	f000 f913 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 80089c6:	2031      	movs	r0, #49	; 0x31
 80089c8:	f000 f910 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 80089cc:	20c1      	movs	r0, #193	; 0xc1
 80089ce:	f000 f90d 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x48);
 80089d2:	2048      	movs	r0, #72	; 0x48
 80089d4:	f000 f90a 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 80089d8:	2008      	movs	r0, #8
 80089da:	f000 f907 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 80089de:	200f      	movs	r0, #15
 80089e0:	f000 f904 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x0C);
 80089e4:	200c      	movs	r0, #12
 80089e6:	f000 f901 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 80089ea:	2031      	movs	r0, #49	; 0x31
 80089ec:	f000 f8fe 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x36);
 80089f0:	2036      	movs	r0, #54	; 0x36
 80089f2:	f000 f8fb 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 80089f6:	200f      	movs	r0, #15
 80089f8:	f000 f8f8 	bl	8008bec <LCD_WR_DATA>
	//EXIT SLEEP
	LCD_WR_REG(0x11);
 80089fc:	2011      	movs	r0, #17
 80089fe:	f000 f8db 	bl	8008bb8 <LCD_WR_REG>

	HAL_Delay(120);
 8008a02:	2078      	movs	r0, #120	; 0x78
 8008a04:	f7fa fcc2 	bl	800338c <HAL_Delay>

	//TURN ON DISPLAY
	LCD_WR_REG(0x29);
 8008a08:	2029      	movs	r0, #41	; 0x29
 8008a0a:	f000 f8d5 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(0x2C);
 8008a0e:	202c      	movs	r0, #44	; 0x2c
 8008a10:	f000 f8ec 	bl	8008bec <LCD_WR_DATA>

	LCD_direction(ROTATE_270);
 8008a14:	2003      	movs	r0, #3
 8008a16:	f000 f903 	bl	8008c20 <LCD_direction>

}
 8008a1a:	bf00      	nop
 8008a1c:	bd80      	pop	{r7, pc}

08008a1e <ILI9341_SetWindow>:

void ILI9341_SetWindow(uint16_t start_x, uint16_t start_y, uint16_t end_x, uint16_t end_y)
{
 8008a1e:	b590      	push	{r4, r7, lr}
 8008a20:	b083      	sub	sp, #12
 8008a22:	af00      	add	r7, sp, #0
 8008a24:	4604      	mov	r4, r0
 8008a26:	4608      	mov	r0, r1
 8008a28:	4611      	mov	r1, r2
 8008a2a:	461a      	mov	r2, r3
 8008a2c:	4623      	mov	r3, r4
 8008a2e:	80fb      	strh	r3, [r7, #6]
 8008a30:	4603      	mov	r3, r0
 8008a32:	80bb      	strh	r3, [r7, #4]
 8008a34:	460b      	mov	r3, r1
 8008a36:	807b      	strh	r3, [r7, #2]
 8008a38:	4613      	mov	r3, r2
 8008a3a:	803b      	strh	r3, [r7, #0]
	// Set Window
	LCD_WR_REG(0x2a);
 8008a3c:	202a      	movs	r0, #42	; 0x2a
 8008a3e:	f000 f8bb 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(start_x >> 8);
 8008a42:	88fb      	ldrh	r3, [r7, #6]
 8008a44:	0a1b      	lsrs	r3, r3, #8
 8008a46:	b29b      	uxth	r3, r3
 8008a48:	b2db      	uxtb	r3, r3
 8008a4a:	4618      	mov	r0, r3
 8008a4c:	f000 f8ce 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & start_x);
 8008a50:	88fb      	ldrh	r3, [r7, #6]
 8008a52:	b2db      	uxtb	r3, r3
 8008a54:	4618      	mov	r0, r3
 8008a56:	f000 f8c9 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(end_x >> 8);
 8008a5a:	887b      	ldrh	r3, [r7, #2]
 8008a5c:	0a1b      	lsrs	r3, r3, #8
 8008a5e:	b29b      	uxth	r3, r3
 8008a60:	b2db      	uxtb	r3, r3
 8008a62:	4618      	mov	r0, r3
 8008a64:	f000 f8c2 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & end_x);
 8008a68:	887b      	ldrh	r3, [r7, #2]
 8008a6a:	b2db      	uxtb	r3, r3
 8008a6c:	4618      	mov	r0, r3
 8008a6e:	f000 f8bd 	bl	8008bec <LCD_WR_DATA>

	LCD_WR_REG(0x2b);
 8008a72:	202b      	movs	r0, #43	; 0x2b
 8008a74:	f000 f8a0 	bl	8008bb8 <LCD_WR_REG>
	LCD_WR_DATA(start_y >> 8);
 8008a78:	88bb      	ldrh	r3, [r7, #4]
 8008a7a:	0a1b      	lsrs	r3, r3, #8
 8008a7c:	b29b      	uxth	r3, r3
 8008a7e:	b2db      	uxtb	r3, r3
 8008a80:	4618      	mov	r0, r3
 8008a82:	f000 f8b3 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & start_y);
 8008a86:	88bb      	ldrh	r3, [r7, #4]
 8008a88:	b2db      	uxtb	r3, r3
 8008a8a:	4618      	mov	r0, r3
 8008a8c:	f000 f8ae 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(end_y >> 8);
 8008a90:	883b      	ldrh	r3, [r7, #0]
 8008a92:	0a1b      	lsrs	r3, r3, #8
 8008a94:	b29b      	uxth	r3, r3
 8008a96:	b2db      	uxtb	r3, r3
 8008a98:	4618      	mov	r0, r3
 8008a9a:	f000 f8a7 	bl	8008bec <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & end_y);
 8008a9e:	883b      	ldrh	r3, [r7, #0]
 8008aa0:	b2db      	uxtb	r3, r3
 8008aa2:	4618      	mov	r0, r3
 8008aa4:	f000 f8a2 	bl	8008bec <LCD_WR_DATA>

}
 8008aa8:	bf00      	nop
 8008aaa:	370c      	adds	r7, #12
 8008aac:	46bd      	mov	sp, r7
 8008aae:	bd90      	pop	{r4, r7, pc}

08008ab0 <ConvHL>:
		Error_Handler();
	}
}

static void ConvHL(uint8_t *s, int32_t l)
{
 8008ab0:	b480      	push	{r7}
 8008ab2:	b085      	sub	sp, #20
 8008ab4:	af00      	add	r7, sp, #0
 8008ab6:	6078      	str	r0, [r7, #4]
 8008ab8:	6039      	str	r1, [r7, #0]
	uint8_t v;
	while (l > 0) {
 8008aba:	e010      	b.n	8008ade <ConvHL+0x2e>
		v = *(s+1);
 8008abc:	687b      	ldr	r3, [r7, #4]
 8008abe:	785b      	ldrb	r3, [r3, #1]
 8008ac0:	73fb      	strb	r3, [r7, #15]
		*(s+1) = *s;
 8008ac2:	687b      	ldr	r3, [r7, #4]
 8008ac4:	3301      	adds	r3, #1
 8008ac6:	687a      	ldr	r2, [r7, #4]
 8008ac8:	7812      	ldrb	r2, [r2, #0]
 8008aca:	701a      	strb	r2, [r3, #0]
		*s = v;
 8008acc:	687b      	ldr	r3, [r7, #4]
 8008ace:	7bfa      	ldrb	r2, [r7, #15]
 8008ad0:	701a      	strb	r2, [r3, #0]
		s += 2;
 8008ad2:	687b      	ldr	r3, [r7, #4]
 8008ad4:	3302      	adds	r3, #2
 8008ad6:	607b      	str	r3, [r7, #4]
		l -= 2;
 8008ad8:	683b      	ldr	r3, [r7, #0]
 8008ada:	3b02      	subs	r3, #2
 8008adc:	603b      	str	r3, [r7, #0]
	while (l > 0) {
 8008ade:	683b      	ldr	r3, [r7, #0]
 8008ae0:	2b00      	cmp	r3, #0
 8008ae2:	dceb      	bgt.n	8008abc <ConvHL+0xc>
	}
}
 8008ae4:	bf00      	nop
 8008ae6:	bf00      	nop
 8008ae8:	3714      	adds	r7, #20
 8008aea:	46bd      	mov	sp, r7
 8008aec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008af0:	4770      	bx	lr
	...

08008af4 <ILI9341_DrawBitmap>:

// Call this function after ILI9341_SetWindow
// This function is non blocked
// The variable for Callback is open. User should set by himself
void ILI9341_DrawBitmap(uint16_t w, uint16_t h, uint8_t *s)
{
 8008af4:	b580      	push	{r7, lr}
 8008af6:	b082      	sub	sp, #8
 8008af8:	af00      	add	r7, sp, #0
 8008afa:	4603      	mov	r3, r0
 8008afc:	603a      	str	r2, [r7, #0]
 8008afe:	80fb      	strh	r3, [r7, #6]
 8008b00:	460b      	mov	r3, r1
 8008b02:	80bb      	strh	r3, [r7, #4]
	// Enable to access GRAM
	LCD_WR_REG(0x2c);
 8008b04:	202c      	movs	r0, #44	; 0x2c
 8008b06:	f000 f857 	bl	8008bb8 <LCD_WR_REG>

	DC_H();
 8008b0a:	f000 f8ed 	bl	8008ce8 <DC_H>
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 |= SPI_DATASIZE_16BIT; // Set 16 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
	ConvHL(s, (int32_t)w*h*2);
 8008b0e:	88fb      	ldrh	r3, [r7, #6]
 8008b10:	88ba      	ldrh	r2, [r7, #4]
 8008b12:	fb02 f303 	mul.w	r3, r2, r3
 8008b16:	005b      	lsls	r3, r3, #1
 8008b18:	4619      	mov	r1, r3
 8008b1a:	6838      	ldr	r0, [r7, #0]
 8008b1c:	f7ff ffc8 	bl	8008ab0 <ConvHL>
	if((HAL_SPI_Transmit_DMA(&hspi5, (uint8_t*)s, w * h *2)) != HAL_OK) {
 8008b20:	88fa      	ldrh	r2, [r7, #6]
 8008b22:	88bb      	ldrh	r3, [r7, #4]
 8008b24:	fb12 f303 	smulbb	r3, r2, r3
 8008b28:	b29b      	uxth	r3, r3
 8008b2a:	005b      	lsls	r3, r3, #1
 8008b2c:	b29b      	uxth	r3, r3
 8008b2e:	461a      	mov	r2, r3
 8008b30:	6839      	ldr	r1, [r7, #0]
 8008b32:	4806      	ldr	r0, [pc, #24]	; (8008b4c <ILI9341_DrawBitmap+0x58>)
 8008b34:	f7fe fd34 	bl	80075a0 <HAL_SPI_Transmit_DMA>
 8008b38:	4603      	mov	r3, r0
 8008b3a:	2b00      	cmp	r3, #0
 8008b3c:	d001      	beq.n	8008b42 <ILI9341_DrawBitmap+0x4e>
		Error_Handler();
 8008b3e:	f7f9 fd49 	bl	80025d4 <Error_Handler>
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
}
 8008b42:	bf00      	nop
 8008b44:	3708      	adds	r7, #8
 8008b46:	46bd      	mov	sp, r7
 8008b48:	bd80      	pop	{r7, pc}
 8008b4a:	bf00      	nop
 8008b4c:	200003d0 	.word	0x200003d0

08008b50 <ILI9341_EndOfDrawBitmap>:

// User should call it at callback
void ILI9341_EndOfDrawBitmap(void)
{
 8008b50:	b480      	push	{r7}
 8008b52:	af00      	add	r7, sp, #0
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
}
 8008b54:	bf00      	nop
 8008b56:	46bd      	mov	sp, r7
 8008b58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b5c:	4770      	bx	lr

08008b5e <ILI9341_Reset>:

void ILI9341_Reset(void)
{
 8008b5e:	b580      	push	{r7, lr}
 8008b60:	af00      	add	r7, sp, #0
	RESET_L();
 8008b62:	f000 f891 	bl	8008c88 <RESET_L>
	HAL_Delay(100);
 8008b66:	2064      	movs	r0, #100	; 0x64
 8008b68:	f7fa fc10 	bl	800338c <HAL_Delay>
	RESET_H();
 8008b6c:	f000 f898 	bl	8008ca0 <RESET_H>
	HAL_Delay(100);
 8008b70:	2064      	movs	r0, #100	; 0x64
 8008b72:	f7fa fc0b 	bl	800338c <HAL_Delay>
	CS_L();
 8008b76:	f000 f89f 	bl	8008cb8 <CS_L>
	LED_H();
 8008b7a:	f000 f8c1 	bl	8008d00 <LED_H>
}
 8008b7e:	bf00      	nop
 8008b80:	bd80      	pop	{r7, pc}
	...

08008b84 <ILI9341_SoftReset>:

void ILI9341_SoftReset(void)
{
 8008b84:	b580      	push	{r7, lr}
 8008b86:	b082      	sub	sp, #8
 8008b88:	af00      	add	r7, sp, #0
	uint8_t cmd;
	cmd = 0x01; //Software reset
 8008b8a:	2301      	movs	r3, #1
 8008b8c:	71fb      	strb	r3, [r7, #7]
	DC_L();
 8008b8e:	f000 f89f 	bl	8008cd0 <DC_L>
	if (HAL_SPI_Transmit(&hspi5, &cmd, 1, 1000) != HAL_OK) {
 8008b92:	1df9      	adds	r1, r7, #7
 8008b94:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8008b98:	2201      	movs	r2, #1
 8008b9a:	4806      	ldr	r0, [pc, #24]	; (8008bb4 <ILI9341_SoftReset+0x30>)
 8008b9c:	f7fe fb92 	bl	80072c4 <HAL_SPI_Transmit>
 8008ba0:	4603      	mov	r3, r0
 8008ba2:	2b00      	cmp	r3, #0
 8008ba4:	d001      	beq.n	8008baa <ILI9341_SoftReset+0x26>
		Error_Handler();
 8008ba6:	f7f9 fd15 	bl	80025d4 <Error_Handler>
	}
}
 8008baa:	bf00      	nop
 8008bac:	3708      	adds	r7, #8
 8008bae:	46bd      	mov	sp, r7
 8008bb0:	bd80      	pop	{r7, pc}
 8008bb2:	bf00      	nop
 8008bb4:	200003d0 	.word	0x200003d0

08008bb8 <LCD_WR_REG>:


void LCD_WR_REG(uint8_t data)
{
 8008bb8:	b580      	push	{r7, lr}
 8008bba:	b082      	sub	sp, #8
 8008bbc:	af00      	add	r7, sp, #0
 8008bbe:	4603      	mov	r3, r0
 8008bc0:	71fb      	strb	r3, [r7, #7]
	DC_L();
 8008bc2:	f000 f885 	bl	8008cd0 <DC_L>
	if (HAL_SPI_Transmit(&hspi5, &data, 1, 1000) != HAL_OK) {
 8008bc6:	1df9      	adds	r1, r7, #7
 8008bc8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8008bcc:	2201      	movs	r2, #1
 8008bce:	4806      	ldr	r0, [pc, #24]	; (8008be8 <LCD_WR_REG+0x30>)
 8008bd0:	f7fe fb78 	bl	80072c4 <HAL_SPI_Transmit>
 8008bd4:	4603      	mov	r3, r0
 8008bd6:	2b00      	cmp	r3, #0
 8008bd8:	d001      	beq.n	8008bde <LCD_WR_REG+0x26>
		Error_Handler();
 8008bda:	f7f9 fcfb 	bl	80025d4 <Error_Handler>
	}
}
 8008bde:	bf00      	nop
 8008be0:	3708      	adds	r7, #8
 8008be2:	46bd      	mov	sp, r7
 8008be4:	bd80      	pop	{r7, pc}
 8008be6:	bf00      	nop
 8008be8:	200003d0 	.word	0x200003d0

08008bec <LCD_WR_DATA>:

static void LCD_WR_DATA(uint8_t data)
{
 8008bec:	b580      	push	{r7, lr}
 8008bee:	b082      	sub	sp, #8
 8008bf0:	af00      	add	r7, sp, #0
 8008bf2:	4603      	mov	r3, r0
 8008bf4:	71fb      	strb	r3, [r7, #7]
	DC_H();
 8008bf6:	f000 f877 	bl	8008ce8 <DC_H>
	if (HAL_SPI_Transmit(&hspi5, &data, 1, 1000) != HAL_OK) {
 8008bfa:	1df9      	adds	r1, r7, #7
 8008bfc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8008c00:	2201      	movs	r2, #1
 8008c02:	4806      	ldr	r0, [pc, #24]	; (8008c1c <LCD_WR_DATA+0x30>)
 8008c04:	f7fe fb5e 	bl	80072c4 <HAL_SPI_Transmit>
 8008c08:	4603      	mov	r3, r0
 8008c0a:	2b00      	cmp	r3, #0
 8008c0c:	d001      	beq.n	8008c12 <LCD_WR_DATA+0x26>
		Error_Handler();
 8008c0e:	f7f9 fce1 	bl	80025d4 <Error_Handler>
	}
}
 8008c12:	bf00      	nop
 8008c14:	3708      	adds	r7, #8
 8008c16:	46bd      	mov	sp, r7
 8008c18:	bd80      	pop	{r7, pc}
 8008c1a:	bf00      	nop
 8008c1c:	200003d0 	.word	0x200003d0

08008c20 <LCD_direction>:
	spiDmaTransferComplete = 1;
}
*/

static void LCD_direction(LCD_Horizontal_t direction)
{
 8008c20:	b580      	push	{r7, lr}
 8008c22:	b082      	sub	sp, #8
 8008c24:	af00      	add	r7, sp, #0
 8008c26:	4603      	mov	r3, r0
 8008c28:	71fb      	strb	r3, [r7, #7]
	switch (direction) {
 8008c2a:	79fb      	ldrb	r3, [r7, #7]
 8008c2c:	2b03      	cmp	r3, #3
 8008c2e:	d827      	bhi.n	8008c80 <LCD_direction+0x60>
 8008c30:	a201      	add	r2, pc, #4	; (adr r2, 8008c38 <LCD_direction+0x18>)
 8008c32:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008c36:	bf00      	nop
 8008c38:	08008c49 	.word	0x08008c49
 8008c3c:	08008c57 	.word	0x08008c57
 8008c40:	08008c65 	.word	0x08008c65
 8008c44:	08008c73 	.word	0x08008c73
	case ROTATE_0:
		LCD_WR_REG(0x36);
 8008c48:	2036      	movs	r0, #54	; 0x36
 8008c4a:	f7ff ffb5 	bl	8008bb8 <LCD_WR_REG>
		LCD_WR_DATA(0x48);
 8008c4e:	2048      	movs	r0, #72	; 0x48
 8008c50:	f7ff ffcc 	bl	8008bec <LCD_WR_DATA>
		break;
 8008c54:	e014      	b.n	8008c80 <LCD_direction+0x60>
	case ROTATE_90:
		LCD_WR_REG(0x36);
 8008c56:	2036      	movs	r0, #54	; 0x36
 8008c58:	f7ff ffae 	bl	8008bb8 <LCD_WR_REG>
		LCD_WR_DATA(0x28);
 8008c5c:	2028      	movs	r0, #40	; 0x28
 8008c5e:	f7ff ffc5 	bl	8008bec <LCD_WR_DATA>
		break;
 8008c62:	e00d      	b.n	8008c80 <LCD_direction+0x60>
	case ROTATE_180:
		LCD_WR_REG(0x36);
 8008c64:	2036      	movs	r0, #54	; 0x36
 8008c66:	f7ff ffa7 	bl	8008bb8 <LCD_WR_REG>
		LCD_WR_DATA(0x88);
 8008c6a:	2088      	movs	r0, #136	; 0x88
 8008c6c:	f7ff ffbe 	bl	8008bec <LCD_WR_DATA>
		break;
 8008c70:	e006      	b.n	8008c80 <LCD_direction+0x60>
	case ROTATE_270:
		LCD_WR_REG(0x36);
 8008c72:	2036      	movs	r0, #54	; 0x36
 8008c74:	f7ff ffa0 	bl	8008bb8 <LCD_WR_REG>
		LCD_WR_DATA(0xE8);
 8008c78:	20e8      	movs	r0, #232	; 0xe8
 8008c7a:	f7ff ffb7 	bl	8008bec <LCD_WR_DATA>
		break;
 8008c7e:	bf00      	nop
	}
}
 8008c80:	bf00      	nop
 8008c82:	3708      	adds	r7, #8
 8008c84:	46bd      	mov	sp, r7
 8008c86:	bd80      	pop	{r7, pc}

08008c88 <RESET_L>:

static void RESET_L(void)
{
 8008c88:	b580      	push	{r7, lr}
 8008c8a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RST_GPIO_Port, RST_Pin, GPIO_PIN_RESET);
 8008c8c:	2200      	movs	r2, #0
 8008c8e:	2140      	movs	r1, #64	; 0x40
 8008c90:	4802      	ldr	r0, [pc, #8]	; (8008c9c <RESET_L+0x14>)
 8008c92:	f7fb fbe3 	bl	800445c <HAL_GPIO_WritePin>
}
 8008c96:	bf00      	nop
 8008c98:	bd80      	pop	{r7, pc}
 8008c9a:	bf00      	nop
 8008c9c:	40020800 	.word	0x40020800

08008ca0 <RESET_H>:

static void RESET_H(void)
{
 8008ca0:	b580      	push	{r7, lr}
 8008ca2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RST_GPIO_Port, RST_Pin, GPIO_PIN_SET);
 8008ca4:	2201      	movs	r2, #1
 8008ca6:	2140      	movs	r1, #64	; 0x40
 8008ca8:	4802      	ldr	r0, [pc, #8]	; (8008cb4 <RESET_H+0x14>)
 8008caa:	f7fb fbd7 	bl	800445c <HAL_GPIO_WritePin>
}
 8008cae:	bf00      	nop
 8008cb0:	bd80      	pop	{r7, pc}
 8008cb2:	bf00      	nop
 8008cb4:	40020800 	.word	0x40020800

08008cb8 <CS_L>:

static void CS_L(void)
{
 8008cb8:	b580      	push	{r7, lr}
 8008cba:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(SPI5_NSS_GPIO_Port, SPI5_NSS_Pin, GPIO_PIN_RESET);
 8008cbc:	2200      	movs	r2, #0
 8008cbe:	2106      	movs	r1, #6
 8008cc0:	4802      	ldr	r0, [pc, #8]	; (8008ccc <CS_L+0x14>)
 8008cc2:	f7fb fbcb 	bl	800445c <HAL_GPIO_WritePin>
}
 8008cc6:	bf00      	nop
 8008cc8:	bd80      	pop	{r7, pc}
 8008cca:	bf00      	nop
 8008ccc:	40021400 	.word	0x40021400

08008cd0 <DC_L>:

static void DC_L(void)
{
 8008cd0:	b580      	push	{r7, lr}
 8008cd2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(D_C_GPIO_Port, D_C_Pin, GPIO_PIN_RESET);
 8008cd4:	2200      	movs	r2, #0
 8008cd6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8008cda:	4802      	ldr	r0, [pc, #8]	; (8008ce4 <DC_L+0x14>)
 8008cdc:	f7fb fbbe 	bl	800445c <HAL_GPIO_WritePin>
}
 8008ce0:	bf00      	nop
 8008ce2:	bd80      	pop	{r7, pc}
 8008ce4:	40020800 	.word	0x40020800

08008ce8 <DC_H>:

static void DC_H(void)
{
 8008ce8:	b580      	push	{r7, lr}
 8008cea:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(D_C_GPIO_Port, D_C_Pin, GPIO_PIN_SET);
 8008cec:	2201      	movs	r2, #1
 8008cee:	f44f 7180 	mov.w	r1, #256	; 0x100
 8008cf2:	4802      	ldr	r0, [pc, #8]	; (8008cfc <DC_H+0x14>)
 8008cf4:	f7fb fbb2 	bl	800445c <HAL_GPIO_WritePin>
}
 8008cf8:	bf00      	nop
 8008cfa:	bd80      	pop	{r7, pc}
 8008cfc:	40020800 	.word	0x40020800

08008d00 <LED_H>:

static void LED_H(void)
{
 8008d00:	b480      	push	{r7}
 8008d02:	af00      	add	r7, sp, #0
	//HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
}
 8008d04:	bf00      	nop
 8008d06:	46bd      	mov	sp, r7
 8008d08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d0c:	4770      	bx	lr

08008d0e <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8008d0e:	b580      	push	{r7, lr}
 8008d10:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8008d12:	f004 feef 	bl	800daf4 <touchgfx_components_init>
    touchgfx_init();
 8008d16:	f004 fec3 	bl	800daa0 <touchgfx_init>
}
 8008d1a:	bf00      	nop
 8008d1c:	bd80      	pop	{r7, pc}

08008d1e <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 8008d1e:	b580      	push	{r7, lr}
 8008d20:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8008d22:	f004 feef 	bl	800db04 <touchgfx_taskEntry>
}
 8008d26:	bf00      	nop
 8008d28:	bd80      	pop	{r7, pc}
	...

08008d2c <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 8008d2c:	b480      	push	{r7}
 8008d2e:	b083      	sub	sp, #12
 8008d30:	af00      	add	r7, sp, #0
 8008d32:	6078      	str	r0, [r7, #4]
    {
 8008d34:	4a04      	ldr	r2, [pc, #16]	; (8008d48 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 8008d36:	687b      	ldr	r3, [r7, #4]
 8008d38:	601a      	str	r2, [r3, #0]
    }
 8008d3a:	687b      	ldr	r3, [r7, #4]
 8008d3c:	4618      	mov	r0, r3
 8008d3e:	370c      	adds	r7, #12
 8008d40:	46bd      	mov	sp, r7
 8008d42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d46:	4770      	bx	lr
 8008d48:	080255c8 	.word	0x080255c8

08008d4c <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8008d4c:	b580      	push	{r7, lr}
 8008d4e:	b082      	sub	sp, #8
 8008d50:	af00      	add	r7, sp, #0
 8008d52:	6078      	str	r0, [r7, #4]
    }
 8008d54:	6878      	ldr	r0, [r7, #4]
 8008d56:	f7ff ffe9 	bl	8008d2c <_ZN8touchgfx12FontProviderD1Ev>
 8008d5a:	2104      	movs	r1, #4
 8008d5c:	6878      	ldr	r0, [r7, #4]
 8008d5e:	f019 fd60 	bl	8022822 <_ZdlPvj>
 8008d62:	687b      	ldr	r3, [r7, #4]
 8008d64:	4618      	mov	r0, r3
 8008d66:	3708      	adds	r7, #8
 8008d68:	46bd      	mov	sp, r7
 8008d6a:	bd80      	pop	{r7, pc}

08008d6c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8008d6c:	b580      	push	{r7, lr}
 8008d6e:	b082      	sub	sp, #8
 8008d70:	af00      	add	r7, sp, #0
 8008d72:	6078      	str	r0, [r7, #4]
 8008d74:	460b      	mov	r3, r1
 8008d76:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8008d78:	887b      	ldrh	r3, [r7, #2]
 8008d7a:	2b03      	cmp	r3, #3
 8008d7c:	d81e      	bhi.n	8008dbc <_ZN23ApplicationFontProvider7getFontEt+0x50>
 8008d7e:	a201      	add	r2, pc, #4	; (adr r2, 8008d84 <_ZN23ApplicationFontProvider7getFontEt+0x18>)
 8008d80:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008d84:	08008d95 	.word	0x08008d95
 8008d88:	08008d9f 	.word	0x08008d9f
 8008d8c:	08008da9 	.word	0x08008da9
 8008d90:	08008db3 	.word	0x08008db3
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8008d94:	f003 fbd2 	bl	800c53c <_ZN17TypedTextDatabase8getFontsEv>
 8008d98:	4603      	mov	r3, r0
 8008d9a:	681b      	ldr	r3, [r3, #0]
 8008d9c:	e00f      	b.n	8008dbe <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8008d9e:	f003 fbcd 	bl	800c53c <_ZN17TypedTextDatabase8getFontsEv>
 8008da2:	4603      	mov	r3, r0
 8008da4:	685b      	ldr	r3, [r3, #4]
 8008da6:	e00a      	b.n	8008dbe <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8008da8:	f003 fbc8 	bl	800c53c <_ZN17TypedTextDatabase8getFontsEv>
 8008dac:	4603      	mov	r3, r0
 8008dae:	689b      	ldr	r3, [r3, #8]
 8008db0:	e005      	b.n	8008dbe <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::TYPOGRAPHY_00:
        // SegUIVar_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8008db2:	f003 fbc3 	bl	800c53c <_ZN17TypedTextDatabase8getFontsEv>
 8008db6:	4603      	mov	r3, r0
 8008db8:	68db      	ldr	r3, [r3, #12]
 8008dba:	e000      	b.n	8008dbe <_ZN23ApplicationFontProvider7getFontEt+0x52>
    default:
        return 0;
 8008dbc:	2300      	movs	r3, #0
    }
}
 8008dbe:	4618      	mov	r0, r3
 8008dc0:	3708      	adds	r7, #8
 8008dc2:	46bd      	mov	sp, r7
 8008dc4:	bd80      	pop	{r7, pc}
 8008dc6:	bf00      	nop

08008dc8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;         // verdana_10_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 3; // SegUIVar_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8008dc8:	b580      	push	{r7, lr}
 8008dca:	b082      	sub	sp, #8
 8008dcc:	af00      	add	r7, sp, #0
 8008dce:	6078      	str	r0, [r7, #4]
 8008dd0:	4a05      	ldr	r2, [pc, #20]	; (8008de8 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8008dd2:	687b      	ldr	r3, [r7, #4]
 8008dd4:	601a      	str	r2, [r3, #0]
 8008dd6:	687b      	ldr	r3, [r7, #4]
 8008dd8:	4618      	mov	r0, r3
 8008dda:	f7ff ffa7 	bl	8008d2c <_ZN8touchgfx12FontProviderD1Ev>
 8008dde:	687b      	ldr	r3, [r7, #4]
 8008de0:	4618      	mov	r0, r3
 8008de2:	3708      	adds	r7, #8
 8008de4:	46bd      	mov	sp, r7
 8008de6:	bd80      	pop	{r7, pc}
 8008de8:	080255b4 	.word	0x080255b4

08008dec <_ZN23ApplicationFontProviderD0Ev>:
 8008dec:	b580      	push	{r7, lr}
 8008dee:	b082      	sub	sp, #8
 8008df0:	af00      	add	r7, sp, #0
 8008df2:	6078      	str	r0, [r7, #4]
 8008df4:	6878      	ldr	r0, [r7, #4]
 8008df6:	f7ff ffe7 	bl	8008dc8 <_ZN23ApplicationFontProviderD1Ev>
 8008dfa:	2104      	movs	r1, #4
 8008dfc:	6878      	ldr	r0, [r7, #4]
 8008dfe:	f019 fd10 	bl	8022822 <_ZdlPvj>
 8008e02:	687b      	ldr	r3, [r7, #4]
 8008e04:	4618      	mov	r0, r3
 8008e06:	3708      	adds	r7, #8
 8008e08:	46bd      	mov	sp, r7
 8008e0a:	bd80      	pop	{r7, pc}

08008e0c <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 8008e0c:	b480      	push	{r7}
 8008e0e:	b083      	sub	sp, #12
 8008e10:	af00      	add	r7, sp, #0
 8008e12:	6078      	str	r0, [r7, #4]
    {
 8008e14:	4a04      	ldr	r2, [pc, #16]	; (8008e28 <_ZN8touchgfx4FontD1Ev+0x1c>)
 8008e16:	687b      	ldr	r3, [r7, #4]
 8008e18:	601a      	str	r2, [r3, #0]
    }
 8008e1a:	687b      	ldr	r3, [r7, #4]
 8008e1c:	4618      	mov	r0, r3
 8008e1e:	370c      	adds	r7, #12
 8008e20:	46bd      	mov	sp, r7
 8008e22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e26:	4770      	bx	lr
 8008e28:	080259a4 	.word	0x080259a4

08008e2c <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 8008e2c:	b580      	push	{r7, lr}
 8008e2e:	b082      	sub	sp, #8
 8008e30:	af00      	add	r7, sp, #0
 8008e32:	6078      	str	r0, [r7, #4]
    }
 8008e34:	6878      	ldr	r0, [r7, #4]
 8008e36:	f7ff ffe9 	bl	8008e0c <_ZN8touchgfx4FontD1Ev>
 8008e3a:	2114      	movs	r1, #20
 8008e3c:	6878      	ldr	r0, [r7, #4]
 8008e3e:	f019 fcf0 	bl	8022822 <_ZdlPvj>
 8008e42:	687b      	ldr	r3, [r7, #4]
 8008e44:	4618      	mov	r0, r3
 8008e46:	3708      	adds	r7, #8
 8008e48:	46bd      	mov	sp, r7
 8008e4a:	bd80      	pop	{r7, pc}

08008e4c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8008e4c:	b590      	push	{r4, r7, lr}
 8008e4e:	b087      	sub	sp, #28
 8008e50:	af00      	add	r7, sp, #0
 8008e52:	6078      	str	r0, [r7, #4]
 8008e54:	460b      	mov	r3, r1
 8008e56:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 8008e58:	887b      	ldrh	r3, [r7, #2]
 8008e5a:	2b00      	cmp	r3, #0
 8008e5c:	d101      	bne.n	8008e62 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 8008e5e:	2300      	movs	r3, #0
 8008e60:	e010      	b.n	8008e84 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 8008e62:	2300      	movs	r3, #0
 8008e64:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8008e66:	2300      	movs	r3, #0
 8008e68:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8008e6a:	687b      	ldr	r3, [r7, #4]
 8008e6c:	681b      	ldr	r3, [r3, #0]
 8008e6e:	3308      	adds	r3, #8
 8008e70:	681c      	ldr	r4, [r3, #0]
 8008e72:	f107 030f 	add.w	r3, r7, #15
 8008e76:	f107 0210 	add.w	r2, r7, #16
 8008e7a:	8879      	ldrh	r1, [r7, #2]
 8008e7c:	6878      	ldr	r0, [r7, #4]
 8008e7e:	47a0      	blx	r4
 8008e80:	6178      	str	r0, [r7, #20]
        return glyph;
 8008e82:	697b      	ldr	r3, [r7, #20]
    }
 8008e84:	4618      	mov	r0, r3
 8008e86:	371c      	adds	r7, #28
 8008e88:	46bd      	mov	sp, r7
 8008e8a:	bd90      	pop	{r4, r7, pc}

08008e8c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8008e8c:	b480      	push	{r7}
 8008e8e:	b083      	sub	sp, #12
 8008e90:	af00      	add	r7, sp, #0
 8008e92:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 8008e94:	687b      	ldr	r3, [r7, #4]
 8008e96:	89db      	ldrh	r3, [r3, #14]
    }
 8008e98:	4618      	mov	r0, r3
 8008e9a:	370c      	adds	r7, #12
 8008e9c:	46bd      	mov	sp, r7
 8008e9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ea2:	4770      	bx	lr

08008ea4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8008ea4:	b480      	push	{r7}
 8008ea6:	b083      	sub	sp, #12
 8008ea8:	af00      	add	r7, sp, #0
 8008eaa:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8008eac:	687b      	ldr	r3, [r7, #4]
 8008eae:	8a1b      	ldrh	r3, [r3, #16]
    }
 8008eb0:	4618      	mov	r0, r3
 8008eb2:	370c      	adds	r7, #12
 8008eb4:	46bd      	mov	sp, r7
 8008eb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008eba:	4770      	bx	lr

08008ebc <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 8008ebc:	b480      	push	{r7}
 8008ebe:	b083      	sub	sp, #12
 8008ec0:	af00      	add	r7, sp, #0
 8008ec2:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 8008ec4:	687b      	ldr	r3, [r7, #4]
 8008ec6:	88db      	ldrh	r3, [r3, #6]
    }
 8008ec8:	4618      	mov	r0, r3
 8008eca:	370c      	adds	r7, #12
 8008ecc:	46bd      	mov	sp, r7
 8008ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ed2:	4770      	bx	lr

08008ed4 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 8008ed4:	b480      	push	{r7}
 8008ed6:	b083      	sub	sp, #12
 8008ed8:	af00      	add	r7, sp, #0
 8008eda:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 8008edc:	687b      	ldr	r3, [r7, #4]
 8008ede:	889b      	ldrh	r3, [r3, #4]
    }
 8008ee0:	4618      	mov	r0, r3
 8008ee2:	370c      	adds	r7, #12
 8008ee4:	46bd      	mov	sp, r7
 8008ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008eea:	4770      	bx	lr

08008eec <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 8008eec:	b480      	push	{r7}
 8008eee:	b083      	sub	sp, #12
 8008ef0:	af00      	add	r7, sp, #0
 8008ef2:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8008ef4:	687b      	ldr	r3, [r7, #4]
 8008ef6:	7a9b      	ldrb	r3, [r3, #10]
 8008ef8:	f3c3 0306 	ubfx	r3, r3, #0, #7
 8008efc:	b2db      	uxtb	r3, r3
    }
 8008efe:	4618      	mov	r0, r3
 8008f00:	370c      	adds	r7, #12
 8008f02:	46bd      	mov	sp, r7
 8008f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f08:	4770      	bx	lr

08008f0a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 8008f0a:	b480      	push	{r7}
 8008f0c:	b083      	sub	sp, #12
 8008f0e:	af00      	add	r7, sp, #0
 8008f10:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 8008f12:	687b      	ldr	r3, [r7, #4]
 8008f14:	7a9b      	ldrb	r3, [r3, #10]
 8008f16:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8008f1a:	b2db      	uxtb	r3, r3
    }
 8008f1c:	4618      	mov	r0, r3
 8008f1e:	370c      	adds	r7, #12
 8008f20:	46bd      	mov	sp, r7
 8008f22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f26:	4770      	bx	lr

08008f28 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 8008f28:	b480      	push	{r7}
 8008f2a:	b083      	sub	sp, #12
 8008f2c:	af00      	add	r7, sp, #0
 8008f2e:	6078      	str	r0, [r7, #4]
    {
        return false;
 8008f30:	2300      	movs	r3, #0
    }
 8008f32:	4618      	mov	r0, r3
 8008f34:	370c      	adds	r7, #12
 8008f36:	46bd      	mov	sp, r7
 8008f38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f3c:	4770      	bx	lr

08008f3e <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 8008f3e:	b480      	push	{r7}
 8008f40:	b083      	sub	sp, #12
 8008f42:	af00      	add	r7, sp, #0
 8008f44:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8008f46:	f04f 0300 	mov.w	r3, #0
 8008f4a:	ee07 3a90 	vmov	s15, r3
    }
 8008f4e:	eeb0 0a67 	vmov.f32	s0, s15
 8008f52:	370c      	adds	r7, #12
 8008f54:	46bd      	mov	sp, r7
 8008f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f5a:	4770      	bx	lr

08008f5c <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 8008f5c:	b580      	push	{r7, lr}
 8008f5e:	b082      	sub	sp, #8
 8008f60:	af00      	add	r7, sp, #0
 8008f62:	6078      	str	r0, [r7, #4]
 8008f64:	4a05      	ldr	r2, [pc, #20]	; (8008f7c <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8008f66:	687b      	ldr	r3, [r7, #4]
 8008f68:	601a      	str	r2, [r3, #0]
 8008f6a:	687b      	ldr	r3, [r7, #4]
 8008f6c:	4618      	mov	r0, r3
 8008f6e:	f7ff ff4d 	bl	8008e0c <_ZN8touchgfx4FontD1Ev>
 8008f72:	687b      	ldr	r3, [r7, #4]
 8008f74:	4618      	mov	r0, r3
 8008f76:	3708      	adds	r7, #8
 8008f78:	46bd      	mov	sp, r7
 8008f7a:	bd80      	pop	{r7, pc}
 8008f7c:	08026414 	.word	0x08026414

08008f80 <_ZN8touchgfx9ConstFontD0Ev>:
 8008f80:	b580      	push	{r7, lr}
 8008f82:	b082      	sub	sp, #8
 8008f84:	af00      	add	r7, sp, #0
 8008f86:	6078      	str	r0, [r7, #4]
 8008f88:	6878      	ldr	r0, [r7, #4]
 8008f8a:	f7ff ffe7 	bl	8008f5c <_ZN8touchgfx9ConstFontD1Ev>
 8008f8e:	211c      	movs	r1, #28
 8008f90:	6878      	ldr	r0, [r7, #4]
 8008f92:	f019 fc46 	bl	8022822 <_ZdlPvj>
 8008f96:	687b      	ldr	r3, [r7, #4]
 8008f98:	4618      	mov	r0, r3
 8008f9a:	3708      	adds	r7, #8
 8008f9c:	46bd      	mov	sp, r7
 8008f9e:	bd80      	pop	{r7, pc}

08008fa0 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 8008fa0:	b580      	push	{r7, lr}
 8008fa2:	b082      	sub	sp, #8
 8008fa4:	af00      	add	r7, sp, #0
 8008fa6:	6078      	str	r0, [r7, #4]
 8008fa8:	4a05      	ldr	r2, [pc, #20]	; (8008fc0 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 8008faa:	687b      	ldr	r3, [r7, #4]
 8008fac:	601a      	str	r2, [r3, #0]
 8008fae:	687b      	ldr	r3, [r7, #4]
 8008fb0:	4618      	mov	r0, r3
 8008fb2:	f7ff ffd3 	bl	8008f5c <_ZN8touchgfx9ConstFontD1Ev>
 8008fb6:	687b      	ldr	r3, [r7, #4]
 8008fb8:	4618      	mov	r0, r3
 8008fba:	3708      	adds	r7, #8
 8008fbc:	46bd      	mov	sp, r7
 8008fbe:	bd80      	pop	{r7, pc}
 8008fc0:	080255ec 	.word	0x080255ec

08008fc4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8008fc4:	b580      	push	{r7, lr}
 8008fc6:	b082      	sub	sp, #8
 8008fc8:	af00      	add	r7, sp, #0
 8008fca:	6078      	str	r0, [r7, #4]
 8008fcc:	6878      	ldr	r0, [r7, #4]
 8008fce:	f7ff ffe7 	bl	8008fa0 <_ZN8touchgfx13GeneratedFontD1Ev>
 8008fd2:	212c      	movs	r1, #44	; 0x2c
 8008fd4:	6878      	ldr	r0, [r7, #4]
 8008fd6:	f019 fc24 	bl	8022822 <_ZdlPvj>
 8008fda:	687b      	ldr	r3, [r7, #4]
 8008fdc:	4618      	mov	r0, r3
 8008fde:	3708      	adds	r7, #8
 8008fe0:	46bd      	mov	sp, r7
 8008fe2:	bd80      	pop	{r7, pc}

08008fe4 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 8008fe4:	b480      	push	{r7}
 8008fe6:	b083      	sub	sp, #12
 8008fe8:	af00      	add	r7, sp, #0
 8008fea:	6078      	str	r0, [r7, #4]
    {
 8008fec:	4a04      	ldr	r2, [pc, #16]	; (8009000 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 8008fee:	687b      	ldr	r3, [r7, #4]
 8008ff0:	601a      	str	r2, [r3, #0]
    }
 8008ff2:	687b      	ldr	r3, [r7, #4]
 8008ff4:	4618      	mov	r0, r3
 8008ff6:	370c      	adds	r7, #12
 8008ff8:	46bd      	mov	sp, r7
 8008ffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ffe:	4770      	bx	lr
 8009000:	080255dc 	.word	0x080255dc

08009004 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8009004:	b580      	push	{r7, lr}
 8009006:	b082      	sub	sp, #8
 8009008:	af00      	add	r7, sp, #0
 800900a:	6078      	str	r0, [r7, #4]
    }
 800900c:	6878      	ldr	r0, [r7, #4]
 800900e:	f7ff ffe9 	bl	8008fe4 <_ZN8touchgfx9TypedTextD1Ev>
 8009012:	2108      	movs	r1, #8
 8009014:	6878      	ldr	r0, [r7, #4]
 8009016:	f019 fc04 	bl	8022822 <_ZdlPvj>
 800901a:	687b      	ldr	r3, [r7, #4]
 800901c:	4618      	mov	r0, r3
 800901e:	3708      	adds	r7, #8
 8009020:	46bd      	mov	sp, r7
 8009022:	bd80      	pop	{r7, pc}

08009024 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 8009024:	b480      	push	{r7}
 8009026:	b083      	sub	sp, #12
 8009028:	af00      	add	r7, sp, #0
 800902a:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800902c:	687b      	ldr	r3, [r7, #4]
 800902e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    }
 8009030:	4618      	mov	r0, r3
 8009032:	370c      	adds	r7, #12
 8009034:	46bd      	mov	sp, r7
 8009036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800903a:	4770      	bx	lr

0800903c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800903c:	b480      	push	{r7}
 800903e:	b083      	sub	sp, #12
 8009040:	af00      	add	r7, sp, #0
 8009042:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 8009044:	687b      	ldr	r3, [r7, #4]
 8009046:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 8009048:	4618      	mov	r0, r3
 800904a:	370c      	adds	r7, #12
 800904c:	46bd      	mov	sp, r7
 800904e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009052:	4770      	bx	lr

08009054 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <fonts/GeneratedFont.hpp>
#include <math.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8009054:	b580      	push	{r7, lr}
 8009056:	b08e      	sub	sp, #56	; 0x38
 8009058:	af0a      	add	r7, sp, #40	; 0x28
 800905a:	60f8      	str	r0, [r7, #12]
 800905c:	60b9      	str	r1, [r7, #8]
 800905e:	4611      	mov	r1, r2
 8009060:	461a      	mov	r2, r3
 8009062:	460b      	mov	r3, r1
 8009064:	80fb      	strh	r3, [r7, #6]
 8009066:	4613      	mov	r3, r2
 8009068:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800906a:	68f8      	ldr	r0, [r7, #12]
 800906c:	88b9      	ldrh	r1, [r7, #4]
 800906e:	88fa      	ldrh	r2, [r7, #6]
 8009070:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 8009074:	9308      	str	r3, [sp, #32]
 8009076:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 8009078:	9307      	str	r3, [sp, #28]
 800907a:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 800907e:	9306      	str	r3, [sp, #24]
 8009080:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8009084:	9305      	str	r3, [sp, #20]
 8009086:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800908a:	9304      	str	r3, [sp, #16]
 800908c:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8009090:	9303      	str	r3, [sp, #12]
 8009092:	f897 3020 	ldrb.w	r3, [r7, #32]
 8009096:	9302      	str	r3, [sp, #8]
 8009098:	7f3b      	ldrb	r3, [r7, #28]
 800909a:	9301      	str	r3, [sp, #4]
 800909c:	8b3b      	ldrh	r3, [r7, #24]
 800909e:	9300      	str	r3, [sp, #0]
 80090a0:	460b      	mov	r3, r1
 80090a2:	68b9      	ldr	r1, [r7, #8]
 80090a4:	f00a f844 	bl	8013130 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80090a8:	4a09      	ldr	r2, [pc, #36]	; (80090d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 80090aa:	68fb      	ldr	r3, [r7, #12]
 80090ac:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 80090ae:	68fb      	ldr	r3, [r7, #12]
 80090b0:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80090b2:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 80090b4:	68fb      	ldr	r3, [r7, #12]
 80090b6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80090b8:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 80090ba:	68fb      	ldr	r3, [r7, #12]
 80090bc:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80090be:	625a      	str	r2, [r3, #36]	; 0x24
      arabicTable(formsTable)
 80090c0:	68fb      	ldr	r3, [r7, #12]
 80090c2:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80090c4:	629a      	str	r2, [r3, #40]	; 0x28
{
}
 80090c6:	68fb      	ldr	r3, [r7, #12]
 80090c8:	4618      	mov	r0, r3
 80090ca:	3710      	adds	r7, #16
 80090cc:	46bd      	mov	sp, r7
 80090ce:	bd80      	pop	{r7, pc}
 80090d0:	080255ec 	.word	0x080255ec

080090d4 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 80090d4:	b480      	push	{r7}
 80090d6:	b085      	sub	sp, #20
 80090d8:	af00      	add	r7, sp, #0
 80090da:	6078      	str	r0, [r7, #4]
 80090dc:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 80090de:	687b      	ldr	r3, [r7, #4]
 80090e0:	69db      	ldr	r3, [r3, #28]
 80090e2:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80090e4:	683b      	ldr	r3, [r7, #0]
 80090e6:	889b      	ldrh	r3, [r3, #4]
 80090e8:	0adb      	lsrs	r3, r3, #11
 80090ea:	b29b      	uxth	r3, r3
 80090ec:	009b      	lsls	r3, r3, #2
 80090ee:	68fa      	ldr	r2, [r7, #12]
 80090f0:	4413      	add	r3, r2
 80090f2:	681a      	ldr	r2, [r3, #0]
 80090f4:	683b      	ldr	r3, [r7, #0]
 80090f6:	681b      	ldr	r3, [r3, #0]
 80090f8:	4413      	add	r3, r2
}
 80090fa:	4618      	mov	r0, r3
 80090fc:	3714      	adds	r7, #20
 80090fe:	46bd      	mov	sp, r7
 8009100:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009104:	4770      	bx	lr

08009106 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8009106:	b480      	push	{r7}
 8009108:	b089      	sub	sp, #36	; 0x24
 800910a:	af00      	add	r7, sp, #0
 800910c:	60f8      	str	r0, [r7, #12]
 800910e:	460b      	mov	r3, r1
 8009110:	607a      	str	r2, [r7, #4]
 8009112:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 8009114:	687b      	ldr	r3, [r7, #4]
 8009116:	2b00      	cmp	r3, #0
 8009118:	d003      	beq.n	8009122 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800911a:	687b      	ldr	r3, [r7, #4]
 800911c:	7b1b      	ldrb	r3, [r3, #12]
 800911e:	2b00      	cmp	r3, #0
 8009120:	d101      	bne.n	8009126 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 8009122:	2300      	movs	r3, #0
 8009124:	e031      	b.n	800918a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8009126:	68fb      	ldr	r3, [r7, #12]
 8009128:	6a1a      	ldr	r2, [r3, #32]
 800912a:	687b      	ldr	r3, [r7, #4]
 800912c:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800912e:	697b      	ldr	r3, [r7, #20]
 8009130:	7b5b      	ldrb	r3, [r3, #13]
 8009132:	021b      	lsls	r3, r3, #8
 8009134:	b21b      	sxth	r3, r3
 8009136:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800913a:	b219      	sxth	r1, r3
 800913c:	697b      	ldr	r3, [r7, #20]
 800913e:	7adb      	ldrb	r3, [r3, #11]
 8009140:	b21b      	sxth	r3, r3
 8009142:	430b      	orrs	r3, r1
 8009144:	b21b      	sxth	r3, r3
 8009146:	b29b      	uxth	r3, r3
 8009148:	009b      	lsls	r3, r3, #2
 800914a:	4413      	add	r3, r2
 800914c:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800914e:	687b      	ldr	r3, [r7, #4]
 8009150:	7b1b      	ldrb	r3, [r3, #12]
 8009152:	837b      	strh	r3, [r7, #26]
 8009154:	e013      	b.n	800917e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 8009156:	69fb      	ldr	r3, [r7, #28]
 8009158:	881b      	ldrh	r3, [r3, #0]
 800915a:	897a      	ldrh	r2, [r7, #10]
 800915c:	429a      	cmp	r2, r3
 800915e:	d103      	bne.n	8009168 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 8009160:	69fb      	ldr	r3, [r7, #28]
 8009162:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8009166:	e010      	b.n	800918a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 8009168:	69fb      	ldr	r3, [r7, #28]
 800916a:	881b      	ldrh	r3, [r3, #0]
 800916c:	897a      	ldrh	r2, [r7, #10]
 800916e:	429a      	cmp	r2, r3
 8009170:	d309      	bcc.n	8009186 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8009172:	8b7b      	ldrh	r3, [r7, #26]
 8009174:	3b01      	subs	r3, #1
 8009176:	837b      	strh	r3, [r7, #26]
 8009178:	69fb      	ldr	r3, [r7, #28]
 800917a:	3304      	adds	r3, #4
 800917c:	61fb      	str	r3, [r7, #28]
 800917e:	8b7b      	ldrh	r3, [r7, #26]
 8009180:	2b00      	cmp	r3, #0
 8009182:	d1e8      	bne.n	8009156 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 8009184:	e000      	b.n	8009188 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 8009186:	bf00      	nop
        }
    }
    return 0;
 8009188:	2300      	movs	r3, #0
}
 800918a:	4618      	mov	r0, r3
 800918c:	3724      	adds	r7, #36	; 0x24
 800918e:	46bd      	mov	sp, r7
 8009190:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009194:	4770      	bx	lr
	...

08009198 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_SegUIVar_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_SegUIVar_10_4bpp();

touchgfx::GeneratedFont& getFont_SegUIVar_10_4bpp()
{
    static touchgfx::GeneratedFont SegUIVar_10_4bpp(glyphs_SegUIVar_10_4bpp, 43, 12, 10, 0, 0, 4, 1, 0, 1, unicodes_SegUIVar_10_4bpp, kerning_SegUIVar_10_4bpp, 63, 0, 0, 0);
 8009198:	b580      	push	{r7, lr}
 800919a:	af00      	add	r7, sp, #0
 800919c:	4801      	ldr	r0, [pc, #4]	; (80091a4 <__tcf_0+0xc>)
 800919e:	f7ff feff 	bl	8008fa0 <_ZN8touchgfx13GeneratedFontD1Ev>
 80091a2:	bd80      	pop	{r7, pc}
 80091a4:	2002fd28 	.word	0x2002fd28

080091a8 <_Z24getFont_SegUIVar_10_4bppv>:
{
 80091a8:	b580      	push	{r7, lr}
 80091aa:	b08e      	sub	sp, #56	; 0x38
 80091ac:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont SegUIVar_10_4bpp(glyphs_SegUIVar_10_4bpp, 43, 12, 10, 0, 0, 4, 1, 0, 1, unicodes_SegUIVar_10_4bpp, kerning_SegUIVar_10_4bpp, 63, 0, 0, 0);
 80091ae:	4b21      	ldr	r3, [pc, #132]	; (8009234 <_Z24getFont_SegUIVar_10_4bppv+0x8c>)
 80091b0:	681b      	ldr	r3, [r3, #0]
 80091b2:	f3bf 8f5b 	dmb	ish
 80091b6:	f003 0301 	and.w	r3, r3, #1
 80091ba:	2b00      	cmp	r3, #0
 80091bc:	bf0c      	ite	eq
 80091be:	2301      	moveq	r3, #1
 80091c0:	2300      	movne	r3, #0
 80091c2:	b2db      	uxtb	r3, r3
 80091c4:	2b00      	cmp	r3, #0
 80091c6:	d030      	beq.n	800922a <_Z24getFont_SegUIVar_10_4bppv+0x82>
 80091c8:	481a      	ldr	r0, [pc, #104]	; (8009234 <_Z24getFont_SegUIVar_10_4bppv+0x8c>)
 80091ca:	f019 fb2c 	bl	8022826 <__cxa_guard_acquire>
 80091ce:	4603      	mov	r3, r0
 80091d0:	2b00      	cmp	r3, #0
 80091d2:	bf14      	ite	ne
 80091d4:	2301      	movne	r3, #1
 80091d6:	2300      	moveq	r3, #0
 80091d8:	b2db      	uxtb	r3, r3
 80091da:	2b00      	cmp	r3, #0
 80091dc:	d025      	beq.n	800922a <_Z24getFont_SegUIVar_10_4bppv+0x82>
 80091de:	2300      	movs	r3, #0
 80091e0:	930c      	str	r3, [sp, #48]	; 0x30
 80091e2:	2300      	movs	r3, #0
 80091e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80091e6:	2300      	movs	r3, #0
 80091e8:	930a      	str	r3, [sp, #40]	; 0x28
 80091ea:	233f      	movs	r3, #63	; 0x3f
 80091ec:	9309      	str	r3, [sp, #36]	; 0x24
 80091ee:	4b12      	ldr	r3, [pc, #72]	; (8009238 <_Z24getFont_SegUIVar_10_4bppv+0x90>)
 80091f0:	9308      	str	r3, [sp, #32]
 80091f2:	4b12      	ldr	r3, [pc, #72]	; (800923c <_Z24getFont_SegUIVar_10_4bppv+0x94>)
 80091f4:	9307      	str	r3, [sp, #28]
 80091f6:	2301      	movs	r3, #1
 80091f8:	9306      	str	r3, [sp, #24]
 80091fa:	2300      	movs	r3, #0
 80091fc:	9305      	str	r3, [sp, #20]
 80091fe:	2301      	movs	r3, #1
 8009200:	9304      	str	r3, [sp, #16]
 8009202:	2304      	movs	r3, #4
 8009204:	9303      	str	r3, [sp, #12]
 8009206:	2300      	movs	r3, #0
 8009208:	9302      	str	r3, [sp, #8]
 800920a:	2300      	movs	r3, #0
 800920c:	9301      	str	r3, [sp, #4]
 800920e:	230a      	movs	r3, #10
 8009210:	9300      	str	r3, [sp, #0]
 8009212:	230c      	movs	r3, #12
 8009214:	222b      	movs	r2, #43	; 0x2b
 8009216:	490a      	ldr	r1, [pc, #40]	; (8009240 <_Z24getFont_SegUIVar_10_4bppv+0x98>)
 8009218:	480a      	ldr	r0, [pc, #40]	; (8009244 <_Z24getFont_SegUIVar_10_4bppv+0x9c>)
 800921a:	f7ff ff1b 	bl	8009054 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800921e:	480a      	ldr	r0, [pc, #40]	; (8009248 <_Z24getFont_SegUIVar_10_4bppv+0xa0>)
 8009220:	f01a f8a8 	bl	8023374 <atexit>
 8009224:	4803      	ldr	r0, [pc, #12]	; (8009234 <_Z24getFont_SegUIVar_10_4bppv+0x8c>)
 8009226:	f019 fb0a 	bl	802283e <__cxa_guard_release>
    return SegUIVar_10_4bpp;
 800922a:	4b06      	ldr	r3, [pc, #24]	; (8009244 <_Z24getFont_SegUIVar_10_4bppv+0x9c>)
}
 800922c:	4618      	mov	r0, r3
 800922e:	46bd      	mov	sp, r7
 8009230:	bd80      	pop	{r7, pc}
 8009232:	bf00      	nop
 8009234:	2002fd54 	.word	0x2002fd54
 8009238:	08027654 	.word	0x08027654
 800923c:	08027664 	.word	0x08027664
 8009240:	08027278 	.word	0x08027278
 8009244:	2002fd28 	.word	0x2002fd28
 8009248:	08009199 	.word	0x08009199

0800924c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 25, 12, 10, 0, 0, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800924c:	b580      	push	{r7, lr}
 800924e:	af00      	add	r7, sp, #0
 8009250:	4801      	ldr	r0, [pc, #4]	; (8009258 <__tcf_0+0xc>)
 8009252:	f7ff fea5 	bl	8008fa0 <_ZN8touchgfx13GeneratedFontD1Ev>
 8009256:	bd80      	pop	{r7, pc}
 8009258:	2002fd58 	.word	0x2002fd58

0800925c <_Z23getFont_verdana_10_4bppv>:
{
 800925c:	b580      	push	{r7, lr}
 800925e:	b08e      	sub	sp, #56	; 0x38
 8009260:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 25, 12, 10, 0, 0, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8009262:	4b21      	ldr	r3, [pc, #132]	; (80092e8 <_Z23getFont_verdana_10_4bppv+0x8c>)
 8009264:	681b      	ldr	r3, [r3, #0]
 8009266:	f3bf 8f5b 	dmb	ish
 800926a:	f003 0301 	and.w	r3, r3, #1
 800926e:	2b00      	cmp	r3, #0
 8009270:	bf0c      	ite	eq
 8009272:	2301      	moveq	r3, #1
 8009274:	2300      	movne	r3, #0
 8009276:	b2db      	uxtb	r3, r3
 8009278:	2b00      	cmp	r3, #0
 800927a:	d030      	beq.n	80092de <_Z23getFont_verdana_10_4bppv+0x82>
 800927c:	481a      	ldr	r0, [pc, #104]	; (80092e8 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800927e:	f019 fad2 	bl	8022826 <__cxa_guard_acquire>
 8009282:	4603      	mov	r3, r0
 8009284:	2b00      	cmp	r3, #0
 8009286:	bf14      	ite	ne
 8009288:	2301      	movne	r3, #1
 800928a:	2300      	moveq	r3, #0
 800928c:	b2db      	uxtb	r3, r3
 800928e:	2b00      	cmp	r3, #0
 8009290:	d025      	beq.n	80092de <_Z23getFont_verdana_10_4bppv+0x82>
 8009292:	2300      	movs	r3, #0
 8009294:	930c      	str	r3, [sp, #48]	; 0x30
 8009296:	2300      	movs	r3, #0
 8009298:	930b      	str	r3, [sp, #44]	; 0x2c
 800929a:	2300      	movs	r3, #0
 800929c:	930a      	str	r3, [sp, #40]	; 0x28
 800929e:	233f      	movs	r3, #63	; 0x3f
 80092a0:	9309      	str	r3, [sp, #36]	; 0x24
 80092a2:	4b12      	ldr	r3, [pc, #72]	; (80092ec <_Z23getFont_verdana_10_4bppv+0x90>)
 80092a4:	9308      	str	r3, [sp, #32]
 80092a6:	4b12      	ldr	r3, [pc, #72]	; (80092f0 <_Z23getFont_verdana_10_4bppv+0x94>)
 80092a8:	9307      	str	r3, [sp, #28]
 80092aa:	2301      	movs	r3, #1
 80092ac:	9306      	str	r3, [sp, #24]
 80092ae:	2300      	movs	r3, #0
 80092b0:	9305      	str	r3, [sp, #20]
 80092b2:	2301      	movs	r3, #1
 80092b4:	9304      	str	r3, [sp, #16]
 80092b6:	2304      	movs	r3, #4
 80092b8:	9303      	str	r3, [sp, #12]
 80092ba:	2300      	movs	r3, #0
 80092bc:	9302      	str	r3, [sp, #8]
 80092be:	2300      	movs	r3, #0
 80092c0:	9301      	str	r3, [sp, #4]
 80092c2:	230a      	movs	r3, #10
 80092c4:	9300      	str	r3, [sp, #0]
 80092c6:	230c      	movs	r3, #12
 80092c8:	2219      	movs	r2, #25
 80092ca:	490a      	ldr	r1, [pc, #40]	; (80092f4 <_Z23getFont_verdana_10_4bppv+0x98>)
 80092cc:	480a      	ldr	r0, [pc, #40]	; (80092f8 <_Z23getFont_verdana_10_4bppv+0x9c>)
 80092ce:	f7ff fec1 	bl	8009054 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80092d2:	480a      	ldr	r0, [pc, #40]	; (80092fc <_Z23getFont_verdana_10_4bppv+0xa0>)
 80092d4:	f01a f84e 	bl	8023374 <atexit>
 80092d8:	4803      	ldr	r0, [pc, #12]	; (80092e8 <_Z23getFont_verdana_10_4bppv+0x8c>)
 80092da:	f019 fab0 	bl	802283e <__cxa_guard_release>
    return verdana_10_4bpp;
 80092de:	4b06      	ldr	r3, [pc, #24]	; (80092f8 <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 80092e0:	4618      	mov	r0, r3
 80092e2:	46bd      	mov	sp, r7
 80092e4:	bd80      	pop	{r7, pc}
 80092e6:	bf00      	nop
 80092e8:	2002fd84 	.word	0x2002fd84
 80092ec:	08027658 	.word	0x08027658
 80092f0:	08027668 	.word	0x08027668
 80092f4:	080274d4 	.word	0x080274d4
 80092f8:	2002fd58 	.word	0x2002fd58
 80092fc:	0800924d 	.word	0x0800924d

08009300 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8009300:	b580      	push	{r7, lr}
 8009302:	af00      	add	r7, sp, #0
 8009304:	4801      	ldr	r0, [pc, #4]	; (800930c <__tcf_0+0xc>)
 8009306:	f7ff fe4b 	bl	8008fa0 <_ZN8touchgfx13GeneratedFontD1Ev>
 800930a:	bd80      	pop	{r7, pc}
 800930c:	2002fd88 	.word	0x2002fd88

08009310 <_Z23getFont_verdana_20_4bppv>:
{
 8009310:	b580      	push	{r7, lr}
 8009312:	b08e      	sub	sp, #56	; 0x38
 8009314:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8009316:	4b21      	ldr	r3, [pc, #132]	; (800939c <_Z23getFont_verdana_20_4bppv+0x8c>)
 8009318:	681b      	ldr	r3, [r3, #0]
 800931a:	f3bf 8f5b 	dmb	ish
 800931e:	f003 0301 	and.w	r3, r3, #1
 8009322:	2b00      	cmp	r3, #0
 8009324:	bf0c      	ite	eq
 8009326:	2301      	moveq	r3, #1
 8009328:	2300      	movne	r3, #0
 800932a:	b2db      	uxtb	r3, r3
 800932c:	2b00      	cmp	r3, #0
 800932e:	d030      	beq.n	8009392 <_Z23getFont_verdana_20_4bppv+0x82>
 8009330:	481a      	ldr	r0, [pc, #104]	; (800939c <_Z23getFont_verdana_20_4bppv+0x8c>)
 8009332:	f019 fa78 	bl	8022826 <__cxa_guard_acquire>
 8009336:	4603      	mov	r3, r0
 8009338:	2b00      	cmp	r3, #0
 800933a:	bf14      	ite	ne
 800933c:	2301      	movne	r3, #1
 800933e:	2300      	moveq	r3, #0
 8009340:	b2db      	uxtb	r3, r3
 8009342:	2b00      	cmp	r3, #0
 8009344:	d025      	beq.n	8009392 <_Z23getFont_verdana_20_4bppv+0x82>
 8009346:	2300      	movs	r3, #0
 8009348:	930c      	str	r3, [sp, #48]	; 0x30
 800934a:	2300      	movs	r3, #0
 800934c:	930b      	str	r3, [sp, #44]	; 0x2c
 800934e:	2300      	movs	r3, #0
 8009350:	930a      	str	r3, [sp, #40]	; 0x28
 8009352:	233f      	movs	r3, #63	; 0x3f
 8009354:	9309      	str	r3, [sp, #36]	; 0x24
 8009356:	4b12      	ldr	r3, [pc, #72]	; (80093a0 <_Z23getFont_verdana_20_4bppv+0x90>)
 8009358:	9308      	str	r3, [sp, #32]
 800935a:	4b12      	ldr	r3, [pc, #72]	; (80093a4 <_Z23getFont_verdana_20_4bppv+0x94>)
 800935c:	9307      	str	r3, [sp, #28]
 800935e:	2300      	movs	r3, #0
 8009360:	9306      	str	r3, [sp, #24]
 8009362:	2300      	movs	r3, #0
 8009364:	9305      	str	r3, [sp, #20]
 8009366:	2301      	movs	r3, #1
 8009368:	9304      	str	r3, [sp, #16]
 800936a:	2304      	movs	r3, #4
 800936c:	9303      	str	r3, [sp, #12]
 800936e:	2300      	movs	r3, #0
 8009370:	9302      	str	r3, [sp, #8]
 8009372:	2300      	movs	r3, #0
 8009374:	9301      	str	r3, [sp, #4]
 8009376:	2314      	movs	r3, #20
 8009378:	9300      	str	r3, [sp, #0]
 800937a:	2314      	movs	r3, #20
 800937c:	2201      	movs	r2, #1
 800937e:	490a      	ldr	r1, [pc, #40]	; (80093a8 <_Z23getFont_verdana_20_4bppv+0x98>)
 8009380:	480a      	ldr	r0, [pc, #40]	; (80093ac <_Z23getFont_verdana_20_4bppv+0x9c>)
 8009382:	f7ff fe67 	bl	8009054 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009386:	480a      	ldr	r0, [pc, #40]	; (80093b0 <_Z23getFont_verdana_20_4bppv+0xa0>)
 8009388:	f019 fff4 	bl	8023374 <atexit>
 800938c:	4803      	ldr	r0, [pc, #12]	; (800939c <_Z23getFont_verdana_20_4bppv+0x8c>)
 800938e:	f019 fa56 	bl	802283e <__cxa_guard_release>
    return verdana_20_4bpp;
 8009392:	4b06      	ldr	r3, [pc, #24]	; (80093ac <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 8009394:	4618      	mov	r0, r3
 8009396:	46bd      	mov	sp, r7
 8009398:	bd80      	pop	{r7, pc}
 800939a:	bf00      	nop
 800939c:	2002fdb4 	.word	0x2002fdb4
 80093a0:	0802765c 	.word	0x0802765c
 80093a4:	0802766c 	.word	0x0802766c
 80093a8:	08027634 	.word	0x08027634
 80093ac:	2002fd88 	.word	0x2002fd88
 80093b0:	08009301 	.word	0x08009301

080093b4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80093b4:	b580      	push	{r7, lr}
 80093b6:	af00      	add	r7, sp, #0
 80093b8:	4801      	ldr	r0, [pc, #4]	; (80093c0 <__tcf_0+0xc>)
 80093ba:	f7ff fdf1 	bl	8008fa0 <_ZN8touchgfx13GeneratedFontD1Ev>
 80093be:	bd80      	pop	{r7, pc}
 80093c0:	2002fdb8 	.word	0x2002fdb8

080093c4 <_Z23getFont_verdana_40_4bppv>:
{
 80093c4:	b580      	push	{r7, lr}
 80093c6:	b08e      	sub	sp, #56	; 0x38
 80093c8:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80093ca:	4b21      	ldr	r3, [pc, #132]	; (8009450 <_Z23getFont_verdana_40_4bppv+0x8c>)
 80093cc:	681b      	ldr	r3, [r3, #0]
 80093ce:	f3bf 8f5b 	dmb	ish
 80093d2:	f003 0301 	and.w	r3, r3, #1
 80093d6:	2b00      	cmp	r3, #0
 80093d8:	bf0c      	ite	eq
 80093da:	2301      	moveq	r3, #1
 80093dc:	2300      	movne	r3, #0
 80093de:	b2db      	uxtb	r3, r3
 80093e0:	2b00      	cmp	r3, #0
 80093e2:	d030      	beq.n	8009446 <_Z23getFont_verdana_40_4bppv+0x82>
 80093e4:	481a      	ldr	r0, [pc, #104]	; (8009450 <_Z23getFont_verdana_40_4bppv+0x8c>)
 80093e6:	f019 fa1e 	bl	8022826 <__cxa_guard_acquire>
 80093ea:	4603      	mov	r3, r0
 80093ec:	2b00      	cmp	r3, #0
 80093ee:	bf14      	ite	ne
 80093f0:	2301      	movne	r3, #1
 80093f2:	2300      	moveq	r3, #0
 80093f4:	b2db      	uxtb	r3, r3
 80093f6:	2b00      	cmp	r3, #0
 80093f8:	d025      	beq.n	8009446 <_Z23getFont_verdana_40_4bppv+0x82>
 80093fa:	2300      	movs	r3, #0
 80093fc:	930c      	str	r3, [sp, #48]	; 0x30
 80093fe:	2300      	movs	r3, #0
 8009400:	930b      	str	r3, [sp, #44]	; 0x2c
 8009402:	2300      	movs	r3, #0
 8009404:	930a      	str	r3, [sp, #40]	; 0x28
 8009406:	233f      	movs	r3, #63	; 0x3f
 8009408:	9309      	str	r3, [sp, #36]	; 0x24
 800940a:	4b12      	ldr	r3, [pc, #72]	; (8009454 <_Z23getFont_verdana_40_4bppv+0x90>)
 800940c:	9308      	str	r3, [sp, #32]
 800940e:	4b12      	ldr	r3, [pc, #72]	; (8009458 <_Z23getFont_verdana_40_4bppv+0x94>)
 8009410:	9307      	str	r3, [sp, #28]
 8009412:	2300      	movs	r3, #0
 8009414:	9306      	str	r3, [sp, #24]
 8009416:	2300      	movs	r3, #0
 8009418:	9305      	str	r3, [sp, #20]
 800941a:	2301      	movs	r3, #1
 800941c:	9304      	str	r3, [sp, #16]
 800941e:	2304      	movs	r3, #4
 8009420:	9303      	str	r3, [sp, #12]
 8009422:	2300      	movs	r3, #0
 8009424:	9302      	str	r3, [sp, #8]
 8009426:	2300      	movs	r3, #0
 8009428:	9301      	str	r3, [sp, #4]
 800942a:	2328      	movs	r3, #40	; 0x28
 800942c:	9300      	str	r3, [sp, #0]
 800942e:	2328      	movs	r3, #40	; 0x28
 8009430:	2201      	movs	r2, #1
 8009432:	490a      	ldr	r1, [pc, #40]	; (800945c <_Z23getFont_verdana_40_4bppv+0x98>)
 8009434:	480a      	ldr	r0, [pc, #40]	; (8009460 <_Z23getFont_verdana_40_4bppv+0x9c>)
 8009436:	f7ff fe0d 	bl	8009054 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800943a:	480a      	ldr	r0, [pc, #40]	; (8009464 <_Z23getFont_verdana_40_4bppv+0xa0>)
 800943c:	f019 ff9a 	bl	8023374 <atexit>
 8009440:	4803      	ldr	r0, [pc, #12]	; (8009450 <_Z23getFont_verdana_40_4bppv+0x8c>)
 8009442:	f019 f9fc 	bl	802283e <__cxa_guard_release>
    return verdana_40_4bpp;
 8009446:	4b06      	ldr	r3, [pc, #24]	; (8009460 <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 8009448:	4618      	mov	r0, r3
 800944a:	46bd      	mov	sp, r7
 800944c:	bd80      	pop	{r7, pc}
 800944e:	bf00      	nop
 8009450:	2002fde4 	.word	0x2002fde4
 8009454:	08027660 	.word	0x08027660
 8009458:	08027670 	.word	0x08027670
 800945c:	08027644 	.word	0x08027644
 8009460:	2002fdb8 	.word	0x2002fdb8
 8009464:	080093b5 	.word	0x080093b5

08009468 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8009468:	b480      	push	{r7}
 800946a:	b083      	sub	sp, #12
 800946c:	af00      	add	r7, sp, #0
 800946e:	6078      	str	r0, [r7, #4]
 8009470:	6039      	str	r1, [r7, #0]
 8009472:	683b      	ldr	r3, [r7, #0]
 8009474:	4618      	mov	r0, r3
 8009476:	370c      	adds	r7, #12
 8009478:	46bd      	mov	sp, r7
 800947a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800947e:	4770      	bx	lr

08009480 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8009480:	b480      	push	{r7}
 8009482:	b083      	sub	sp, #12
 8009484:	af00      	add	r7, sp, #0
 8009486:	6078      	str	r0, [r7, #4]
 8009488:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800948a:	bf00      	nop
 800948c:	370c      	adds	r7, #12
 800948e:	46bd      	mov	sp, r7
 8009490:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009494:	4770      	bx	lr

08009496 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8009496:	b480      	push	{r7}
 8009498:	b083      	sub	sp, #12
 800949a:	af00      	add	r7, sp, #0
 800949c:	6078      	str	r0, [r7, #4]
 800949e:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 80094a0:	bf00      	nop
 80094a2:	370c      	adds	r7, #12
 80094a4:	46bd      	mov	sp, r7
 80094a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094aa:	4770      	bx	lr

080094ac <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 80094ac:	b480      	push	{r7}
 80094ae:	b083      	sub	sp, #12
 80094b0:	af00      	add	r7, sp, #0
 80094b2:	6078      	str	r0, [r7, #4]
 80094b4:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 80094b6:	bf00      	nop
 80094b8:	370c      	adds	r7, #12
 80094ba:	46bd      	mov	sp, r7
 80094bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094c0:	4770      	bx	lr

080094c2 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 80094c2:	b480      	push	{r7}
 80094c4:	b083      	sub	sp, #12
 80094c6:	af00      	add	r7, sp, #0
 80094c8:	6078      	str	r0, [r7, #4]
 80094ca:	460b      	mov	r3, r1
 80094cc:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 80094ce:	bf00      	nop
 80094d0:	370c      	adds	r7, #12
 80094d2:	46bd      	mov	sp, r7
 80094d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094d8:	4770      	bx	lr

080094da <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 80094da:	b480      	push	{r7}
 80094dc:	b083      	sub	sp, #12
 80094de:	af00      	add	r7, sp, #0
 80094e0:	6078      	str	r0, [r7, #4]
    {
    }
 80094e2:	bf00      	nop
 80094e4:	370c      	adds	r7, #12
 80094e6:	46bd      	mov	sp, r7
 80094e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094ec:	4770      	bx	lr

080094ee <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 80094ee:	b480      	push	{r7}
 80094f0:	b083      	sub	sp, #12
 80094f2:	af00      	add	r7, sp, #0
 80094f4:	6078      	str	r0, [r7, #4]
    {
    }
 80094f6:	bf00      	nop
 80094f8:	370c      	adds	r7, #12
 80094fa:	46bd      	mov	sp, r7
 80094fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009500:	4770      	bx	lr
	...

08009504 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 8009504:	b480      	push	{r7}
 8009506:	b083      	sub	sp, #12
 8009508:	af00      	add	r7, sp, #0
 800950a:	6078      	str	r0, [r7, #4]
    {
 800950c:	4a04      	ldr	r2, [pc, #16]	; (8009520 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800950e:	687b      	ldr	r3, [r7, #4]
 8009510:	601a      	str	r2, [r3, #0]
    }
 8009512:	687b      	ldr	r3, [r7, #4]
 8009514:	4618      	mov	r0, r3
 8009516:	370c      	adds	r7, #12
 8009518:	46bd      	mov	sp, r7
 800951a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800951e:	4770      	bx	lr
 8009520:	08025774 	.word	0x08025774

08009524 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 8009524:	b580      	push	{r7, lr}
 8009526:	b082      	sub	sp, #8
 8009528:	af00      	add	r7, sp, #0
 800952a:	6078      	str	r0, [r7, #4]
    }
 800952c:	6878      	ldr	r0, [r7, #4]
 800952e:	f7ff ffe9 	bl	8009504 <_ZN8touchgfx15UIEventListenerD1Ev>
 8009532:	2104      	movs	r1, #4
 8009534:	6878      	ldr	r0, [r7, #4]
 8009536:	f019 f974 	bl	8022822 <_ZdlPvj>
 800953a:	687b      	ldr	r3, [r7, #4]
 800953c:	4618      	mov	r0, r3
 800953e:	3708      	adds	r7, #8
 8009540:	46bd      	mov	sp, r7
 8009542:	bd80      	pop	{r7, pc}

08009544 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 8009544:	b480      	push	{r7}
 8009546:	b083      	sub	sp, #12
 8009548:	af00      	add	r7, sp, #0
 800954a:	6078      	str	r0, [r7, #4]
    {
    }
 800954c:	bf00      	nop
 800954e:	370c      	adds	r7, #12
 8009550:	46bd      	mov	sp, r7
 8009552:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009556:	4770      	bx	lr

08009558 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8009558:	b480      	push	{r7}
 800955a:	b083      	sub	sp, #12
 800955c:	af00      	add	r7, sp, #0
 800955e:	6078      	str	r0, [r7, #4]
 8009560:	460b      	mov	r3, r1
 8009562:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 8009564:	bf00      	nop
 8009566:	370c      	adds	r7, #12
 8009568:	46bd      	mov	sp, r7
 800956a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800956e:	4770      	bx	lr

08009570 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 8009570:	b480      	push	{r7}
 8009572:	b083      	sub	sp, #12
 8009574:	af00      	add	r7, sp, #0
 8009576:	6078      	str	r0, [r7, #4]
 8009578:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800957a:	687b      	ldr	r3, [r7, #4]
 800957c:	683a      	ldr	r2, [r7, #0]
 800957e:	f503 7398 	add.w	r3, r3, #304	; 0x130
 8009582:	6810      	ldr	r0, [r2, #0]
 8009584:	6851      	ldr	r1, [r2, #4]
 8009586:	c303      	stmia	r3!, {r0, r1}
    }
 8009588:	bf00      	nop
 800958a:	370c      	adds	r7, #12
 800958c:	46bd      	mov	sp, r7
 800958e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009592:	4770      	bx	lr

08009594 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 8009594:	b580      	push	{r7, lr}
 8009596:	b082      	sub	sp, #8
 8009598:	af00      	add	r7, sp, #0
 800959a:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800959c:	687b      	ldr	r3, [r7, #4]
 800959e:	3304      	adds	r3, #4
 80095a0:	4618      	mov	r0, r3
 80095a2:	f008 fcc4 	bl	8011f2e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 80095a6:	bf00      	nop
 80095a8:	3708      	adds	r7, #8
 80095aa:	46bd      	mov	sp, r7
 80095ac:	bd80      	pop	{r7, pc}
	...

080095b0 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 80095b0:	b480      	push	{r7}
 80095b2:	b083      	sub	sp, #12
 80095b4:	af00      	add	r7, sp, #0
 80095b6:	6078      	str	r0, [r7, #4]
    {
 80095b8:	4a04      	ldr	r2, [pc, #16]	; (80095cc <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 80095ba:	687b      	ldr	r3, [r7, #4]
 80095bc:	601a      	str	r2, [r3, #0]
    }
 80095be:	687b      	ldr	r3, [r7, #4]
 80095c0:	4618      	mov	r0, r3
 80095c2:	370c      	adds	r7, #12
 80095c4:	46bd      	mov	sp, r7
 80095c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095ca:	4770      	bx	lr
 80095cc:	0802575c 	.word	0x0802575c

080095d0 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 80095d0:	b580      	push	{r7, lr}
 80095d2:	b082      	sub	sp, #8
 80095d4:	af00      	add	r7, sp, #0
 80095d6:	6078      	str	r0, [r7, #4]
    }
 80095d8:	6878      	ldr	r0, [r7, #4]
 80095da:	f7ff ffe9 	bl	80095b0 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 80095de:	2104      	movs	r1, #4
 80095e0:	6878      	ldr	r0, [r7, #4]
 80095e2:	f019 f91e 	bl	8022822 <_ZdlPvj>
 80095e6:	687b      	ldr	r3, [r7, #4]
 80095e8:	4618      	mov	r0, r3
 80095ea:	3708      	adds	r7, #8
 80095ec:	46bd      	mov	sp, r7
 80095ee:	bd80      	pop	{r7, pc}

080095f0 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 80095f0:	b480      	push	{r7}
 80095f2:	af00      	add	r7, sp, #0
    {
        return instance;
 80095f4:	4b03      	ldr	r3, [pc, #12]	; (8009604 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 80095f6:	681b      	ldr	r3, [r3, #0]
    }
 80095f8:	4618      	mov	r0, r3
 80095fa:	46bd      	mov	sp, r7
 80095fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009600:	4770      	bx	lr
 8009602:	bf00      	nop
 8009604:	2003242c 	.word	0x2003242c

08009608 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 8009608:	b480      	push	{r7}
 800960a:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800960c:	4b0b      	ldr	r3, [pc, #44]	; (800963c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800960e:	681b      	ldr	r3, [r3, #0]
 8009610:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 8009614:	2b00      	cmp	r3, #0
 8009616:	d008      	beq.n	800962a <_ZN8touchgfx3HAL3lcdEv+0x22>
 8009618:	4b08      	ldr	r3, [pc, #32]	; (800963c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800961a:	681b      	ldr	r3, [r3, #0]
 800961c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800961e:	2b00      	cmp	r3, #0
 8009620:	d003      	beq.n	800962a <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 8009622:	4b06      	ldr	r3, [pc, #24]	; (800963c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8009624:	681b      	ldr	r3, [r3, #0]
 8009626:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009628:	e002      	b.n	8009630 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800962a:	4b04      	ldr	r3, [pc, #16]	; (800963c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800962c:	681b      	ldr	r3, [r3, #0]
 800962e:	689b      	ldr	r3, [r3, #8]
    }
 8009630:	4618      	mov	r0, r3
 8009632:	46bd      	mov	sp, r7
 8009634:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009638:	4770      	bx	lr
 800963a:	bf00      	nop
 800963c:	2003242c 	.word	0x2003242c

08009640 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 8009640:	b480      	push	{r7}
 8009642:	b083      	sub	sp, #12
 8009644:	af00      	add	r7, sp, #0
 8009646:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 8009648:	4a07      	ldr	r2, [pc, #28]	; (8009668 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800964a:	687b      	ldr	r3, [r7, #4]
 800964c:	601a      	str	r2, [r3, #0]
 800964e:	687b      	ldr	r3, [r7, #4]
 8009650:	2200      	movs	r2, #0
 8009652:	605a      	str	r2, [r3, #4]
 8009654:	687b      	ldr	r3, [r7, #4]
 8009656:	2200      	movs	r2, #0
 8009658:	721a      	strb	r2, [r3, #8]
    {
    }
 800965a:	687b      	ldr	r3, [r7, #4]
 800965c:	4618      	mov	r0, r3
 800965e:	370c      	adds	r7, #12
 8009660:	46bd      	mov	sp, r7
 8009662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009666:	4770      	bx	lr
 8009668:	08025738 	.word	0x08025738

0800966c <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800966c:	b480      	push	{r7}
 800966e:	b083      	sub	sp, #12
 8009670:	af00      	add	r7, sp, #0
 8009672:	6078      	str	r0, [r7, #4]
    {
 8009674:	4a04      	ldr	r2, [pc, #16]	; (8009688 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 8009676:	687b      	ldr	r3, [r7, #4]
 8009678:	601a      	str	r2, [r3, #0]
    }
 800967a:	687b      	ldr	r3, [r7, #4]
 800967c:	4618      	mov	r0, r3
 800967e:	370c      	adds	r7, #12
 8009680:	46bd      	mov	sp, r7
 8009682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009686:	4770      	bx	lr
 8009688:	08025738 	.word	0x08025738

0800968c <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800968c:	b580      	push	{r7, lr}
 800968e:	b082      	sub	sp, #8
 8009690:	af00      	add	r7, sp, #0
 8009692:	6078      	str	r0, [r7, #4]
    }
 8009694:	6878      	ldr	r0, [r7, #4]
 8009696:	f7ff ffe9 	bl	800966c <_ZN8touchgfx10TransitionD1Ev>
 800969a:	210c      	movs	r1, #12
 800969c:	6878      	ldr	r0, [r7, #4]
 800969e:	f019 f8c0 	bl	8022822 <_ZdlPvj>
 80096a2:	687b      	ldr	r3, [r7, #4]
 80096a4:	4618      	mov	r0, r3
 80096a6:	3708      	adds	r7, #8
 80096a8:	46bd      	mov	sp, r7
 80096aa:	bd80      	pop	{r7, pc}

080096ac <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 80096ac:	b480      	push	{r7}
 80096ae:	b083      	sub	sp, #12
 80096b0:	af00      	add	r7, sp, #0
 80096b2:	6078      	str	r0, [r7, #4]
    {
    }
 80096b4:	bf00      	nop
 80096b6:	370c      	adds	r7, #12
 80096b8:	46bd      	mov	sp, r7
 80096ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096be:	4770      	bx	lr

080096c0 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 80096c0:	b480      	push	{r7}
 80096c2:	b083      	sub	sp, #12
 80096c4:	af00      	add	r7, sp, #0
 80096c6:	6078      	str	r0, [r7, #4]
    {
    }
 80096c8:	bf00      	nop
 80096ca:	370c      	adds	r7, #12
 80096cc:	46bd      	mov	sp, r7
 80096ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096d2:	4770      	bx	lr

080096d4 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 80096d4:	b480      	push	{r7}
 80096d6:	b083      	sub	sp, #12
 80096d8:	af00      	add	r7, sp, #0
 80096da:	6078      	str	r0, [r7, #4]
    {
    }
 80096dc:	bf00      	nop
 80096de:	370c      	adds	r7, #12
 80096e0:	46bd      	mov	sp, r7
 80096e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096e6:	4770      	bx	lr

080096e8 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 80096e8:	b580      	push	{r7, lr}
 80096ea:	b082      	sub	sp, #8
 80096ec:	af00      	add	r7, sp, #0
 80096ee:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 80096f0:	f008 fbf8 	bl	8011ee4 <_ZN8touchgfx11Application11getInstanceEv>
 80096f4:	4603      	mov	r3, r0
 80096f6:	681a      	ldr	r2, [r3, #0]
 80096f8:	323c      	adds	r2, #60	; 0x3c
 80096fa:	6812      	ldr	r2, [r2, #0]
 80096fc:	4618      	mov	r0, r3
 80096fe:	4790      	blx	r2
    }
 8009700:	bf00      	nop
 8009702:	3708      	adds	r7, #8
 8009704:	46bd      	mov	sp, r7
 8009706:	bd80      	pop	{r7, pc}

08009708 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 8009708:	b480      	push	{r7}
 800970a:	b083      	sub	sp, #12
 800970c:	af00      	add	r7, sp, #0
 800970e:	6078      	str	r0, [r7, #4]
 8009710:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 8009712:	687b      	ldr	r3, [r7, #4]
 8009714:	683a      	ldr	r2, [r7, #0]
 8009716:	605a      	str	r2, [r3, #4]
    }
 8009718:	bf00      	nop
 800971a:	370c      	adds	r7, #12
 800971c:	46bd      	mov	sp, r7
 800971e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009722:	4770      	bx	lr

08009724 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 8009724:	b580      	push	{r7, lr}
 8009726:	b082      	sub	sp, #8
 8009728:	af00      	add	r7, sp, #0
 800972a:	6078      	str	r0, [r7, #4]
 800972c:	4a05      	ldr	r2, [pc, #20]	; (8009744 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800972e:	687b      	ldr	r3, [r7, #4]
 8009730:	601a      	str	r2, [r3, #0]
 8009732:	687b      	ldr	r3, [r7, #4]
 8009734:	4618      	mov	r0, r3
 8009736:	f7ff fee5 	bl	8009504 <_ZN8touchgfx15UIEventListenerD1Ev>
 800973a:	687b      	ldr	r3, [r7, #4]
 800973c:	4618      	mov	r0, r3
 800973e:	3708      	adds	r7, #8
 8009740:	46bd      	mov	sp, r7
 8009742:	bd80      	pop	{r7, pc}
 8009744:	08026358 	.word	0x08026358

08009748 <_ZN8touchgfx11ApplicationD0Ev>:
 8009748:	b580      	push	{r7, lr}
 800974a:	b082      	sub	sp, #8
 800974c:	af00      	add	r7, sp, #0
 800974e:	6078      	str	r0, [r7, #4]
 8009750:	6878      	ldr	r0, [r7, #4]
 8009752:	f7ff ffe7 	bl	8009724 <_ZN8touchgfx11ApplicationD1Ev>
 8009756:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800975a:	6878      	ldr	r0, [r7, #4]
 800975c:	f019 f861 	bl	8022822 <_ZdlPvj>
 8009760:	687b      	ldr	r3, [r7, #4]
 8009762:	4618      	mov	r0, r3
 8009764:	3708      	adds	r7, #8
 8009766:	46bd      	mov	sp, r7
 8009768:	bd80      	pop	{r7, pc}
	...

0800976c <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800976c:	b580      	push	{r7, lr}
 800976e:	b082      	sub	sp, #8
 8009770:	af00      	add	r7, sp, #0
 8009772:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 8009774:	687b      	ldr	r3, [r7, #4]
 8009776:	4618      	mov	r0, r3
 8009778:	f008 fc7a 	bl	8012070 <_ZN8touchgfx11ApplicationC1Ev>
 800977c:	4a09      	ldr	r2, [pc, #36]	; (80097a4 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800977e:	687b      	ldr	r3, [r7, #4]
 8009780:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 8009782:	687b      	ldr	r3, [r7, #4]
 8009784:	2200      	movs	r2, #0
 8009786:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
          pendingScreenTransitionCallback(0)
 800978a:	687b      	ldr	r3, [r7, #4]
 800978c:	2200      	movs	r2, #0
 800978e:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
    {
        instance = this;
 8009792:	687b      	ldr	r3, [r7, #4]
 8009794:	4a04      	ldr	r2, [pc, #16]	; (80097a8 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 8009796:	6013      	str	r3, [r2, #0]
    }
 8009798:	687b      	ldr	r3, [r7, #4]
 800979a:	4618      	mov	r0, r3
 800979c:	3708      	adds	r7, #8
 800979e:	46bd      	mov	sp, r7
 80097a0:	bd80      	pop	{r7, pc}
 80097a2:	bf00      	nop
 80097a4:	080256e4 	.word	0x080256e4
 80097a8:	20032478 	.word	0x20032478

080097ac <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80097ac:	b580      	push	{r7, lr}
 80097ae:	b082      	sub	sp, #8
 80097b0:	af00      	add	r7, sp, #0
 80097b2:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 80097b4:	6878      	ldr	r0, [r7, #4]
 80097b6:	f000 f804 	bl	80097c2 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 80097ba:	bf00      	nop
 80097bc:	3708      	adds	r7, #8
 80097be:	46bd      	mov	sp, r7
 80097c0:	bd80      	pop	{r7, pc}

080097c2 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 80097c2:	b580      	push	{r7, lr}
 80097c4:	b082      	sub	sp, #8
 80097c6:	af00      	add	r7, sp, #0
 80097c8:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80097ca:	687b      	ldr	r3, [r7, #4]
 80097cc:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 80097d0:	2b00      	cmp	r3, #0
 80097d2:	d00f      	beq.n	80097f4 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80097d4:	687b      	ldr	r3, [r7, #4]
 80097d6:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 80097da:	687b      	ldr	r3, [r7, #4]
 80097dc:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 80097e0:	681b      	ldr	r3, [r3, #0]
 80097e2:	330c      	adds	r3, #12
 80097e4:	681b      	ldr	r3, [r3, #0]
 80097e6:	4610      	mov	r0, r2
 80097e8:	4798      	blx	r3
 80097ea:	4603      	mov	r3, r0
 80097ec:	2b00      	cmp	r3, #0
 80097ee:	d001      	beq.n	80097f4 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80097f0:	2301      	movs	r3, #1
 80097f2:	e000      	b.n	80097f6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 80097f4:	2300      	movs	r3, #0
 80097f6:	2b00      	cmp	r3, #0
 80097f8:	d00e      	beq.n	8009818 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 80097fa:	687b      	ldr	r3, [r7, #4]
 80097fc:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8009800:	687b      	ldr	r3, [r7, #4]
 8009802:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 8009806:	681b      	ldr	r3, [r3, #0]
 8009808:	3308      	adds	r3, #8
 800980a:	681b      	ldr	r3, [r3, #0]
 800980c:	4610      	mov	r0, r2
 800980e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8009810:	687b      	ldr	r3, [r7, #4]
 8009812:	2200      	movs	r2, #0
 8009814:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
        }
    }
 8009818:	bf00      	nop
 800981a:	3708      	adds	r7, #8
 800981c:	46bd      	mov	sp, r7
 800981e:	bd80      	pop	{r7, pc}

08009820 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 8009820:	b480      	push	{r7}
 8009822:	b083      	sub	sp, #12
 8009824:	af00      	add	r7, sp, #0
 8009826:	6078      	str	r0, [r7, #4]
 8009828:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800982a:	687b      	ldr	r3, [r7, #4]
 800982c:	683a      	ldr	r2, [r7, #0]
 800982e:	601a      	str	r2, [r3, #0]
    }
 8009830:	bf00      	nop
 8009832:	370c      	adds	r7, #12
 8009834:	46bd      	mov	sp, r7
 8009836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800983a:	4770      	bx	lr

0800983c <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800983c:	b580      	push	{r7, lr}
 800983e:	b082      	sub	sp, #8
 8009840:	af00      	add	r7, sp, #0
 8009842:	6078      	str	r0, [r7, #4]
 8009844:	4a05      	ldr	r2, [pc, #20]	; (800985c <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 8009846:	687b      	ldr	r3, [r7, #4]
 8009848:	601a      	str	r2, [r3, #0]
 800984a:	687b      	ldr	r3, [r7, #4]
 800984c:	4618      	mov	r0, r3
 800984e:	f7ff ff69 	bl	8009724 <_ZN8touchgfx11ApplicationD1Ev>
 8009852:	687b      	ldr	r3, [r7, #4]
 8009854:	4618      	mov	r0, r3
 8009856:	3708      	adds	r7, #8
 8009858:	46bd      	mov	sp, r7
 800985a:	bd80      	pop	{r7, pc}
 800985c:	080256e4 	.word	0x080256e4

08009860 <_ZN8touchgfx14MVPApplicationD0Ev>:
 8009860:	b580      	push	{r7, lr}
 8009862:	b082      	sub	sp, #8
 8009864:	af00      	add	r7, sp, #0
 8009866:	6078      	str	r0, [r7, #4]
 8009868:	6878      	ldr	r0, [r7, #4]
 800986a:	f7ff ffe7 	bl	800983c <_ZN8touchgfx14MVPApplicationD1Ev>
 800986e:	f44f 71a2 	mov.w	r1, #324	; 0x144
 8009872:	6878      	ldr	r0, [r7, #4]
 8009874:	f018 ffd5 	bl	8022822 <_ZdlPvj>
 8009878:	687b      	ldr	r3, [r7, #4]
 800987a:	4618      	mov	r0, r3
 800987c:	3708      	adds	r7, #8
 800987e:	46bd      	mov	sp, r7
 8009880:	bd80      	pop	{r7, pc}
	...

08009884 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8009884:	b580      	push	{r7, lr}
 8009886:	b082      	sub	sp, #8
 8009888:	af00      	add	r7, sp, #0
 800988a:	6078      	str	r0, [r7, #4]
 800988c:	4a08      	ldr	r2, [pc, #32]	; (80098b0 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800988e:	687b      	ldr	r3, [r7, #4]
 8009890:	601a      	str	r2, [r3, #0]
 8009892:	687b      	ldr	r3, [r7, #4]
 8009894:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 8009898:	4618      	mov	r0, r3
 800989a:	f000 facd 	bl	8009e38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800989e:	687b      	ldr	r3, [r7, #4]
 80098a0:	4618      	mov	r0, r3
 80098a2:	f7ff ffcb 	bl	800983c <_ZN8touchgfx14MVPApplicationD1Ev>
 80098a6:	687b      	ldr	r3, [r7, #4]
 80098a8:	4618      	mov	r0, r3
 80098aa:	3708      	adds	r7, #8
 80098ac:	46bd      	mov	sp, r7
 80098ae:	bd80      	pop	{r7, pc}
 80098b0:	08025678 	.word	0x08025678

080098b4 <_ZN23FrontendApplicationBaseD0Ev>:
 80098b4:	b580      	push	{r7, lr}
 80098b6:	b082      	sub	sp, #8
 80098b8:	af00      	add	r7, sp, #0
 80098ba:	6078      	str	r0, [r7, #4]
 80098bc:	6878      	ldr	r0, [r7, #4]
 80098be:	f7ff ffe1 	bl	8009884 <_ZN23FrontendApplicationBaseD1Ev>
 80098c2:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80098c6:	6878      	ldr	r0, [r7, #4]
 80098c8:	f018 ffab 	bl	8022822 <_ZdlPvj>
 80098cc:	687b      	ldr	r3, [r7, #4]
 80098ce:	4618      	mov	r0, r3
 80098d0:	3708      	adds	r7, #8
 80098d2:	46bd      	mov	sp, r7
 80098d4:	bd80      	pop	{r7, pc}

080098d6 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 80098d6:	b580      	push	{r7, lr}
 80098d8:	b082      	sub	sp, #8
 80098da:	af00      	add	r7, sp, #0
 80098dc:	6078      	str	r0, [r7, #4]
    {
        gotoScreen1ScreenNoTransition();
 80098de:	6878      	ldr	r0, [r7, #4]
 80098e0:	f000 f882 	bl	80099e8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 80098e4:	bf00      	nop
 80098e6:	3708      	adds	r7, #8
 80098e8:	46bd      	mov	sp, r7
 80098ea:	bd80      	pop	{r7, pc}

080098ec <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 80098ec:	b480      	push	{r7}
 80098ee:	b083      	sub	sp, #12
 80098f0:	af00      	add	r7, sp, #0
 80098f2:	6078      	str	r0, [r7, #4]
    {
        done = true;
 80098f4:	687b      	ldr	r3, [r7, #4]
 80098f6:	2201      	movs	r2, #1
 80098f8:	721a      	strb	r2, [r3, #8]
    }
 80098fa:	bf00      	nop
 80098fc:	370c      	adds	r7, #12
 80098fe:	46bd      	mov	sp, r7
 8009900:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009904:	4770      	bx	lr

08009906 <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 8009906:	b480      	push	{r7}
 8009908:	b083      	sub	sp, #12
 800990a:	af00      	add	r7, sp, #0
 800990c:	6078      	str	r0, [r7, #4]
 800990e:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8009910:	687b      	ldr	r3, [r7, #4]
 8009912:	683a      	ldr	r2, [r7, #0]
 8009914:	605a      	str	r2, [r3, #4]
    }
 8009916:	bf00      	nop
 8009918:	370c      	adds	r7, #12
 800991a:	46bd      	mov	sp, r7
 800991c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009920:	4770      	bx	lr
	...

08009924 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen2_screen/Screen2View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8009924:	b580      	push	{r7, lr}
 8009926:	b084      	sub	sp, #16
 8009928:	af00      	add	r7, sp, #0
 800992a:	60f8      	str	r0, [r7, #12]
 800992c:	60b9      	str	r1, [r7, #8]
 800992e:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8009930:	68fb      	ldr	r3, [r7, #12]
 8009932:	4618      	mov	r0, r3
 8009934:	f7ff ff1a 	bl	800976c <_ZN8touchgfx14MVPApplicationC1Ev>
 8009938:	4a16      	ldr	r2, [pc, #88]	; (8009994 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 800993a:	68fb      	ldr	r3, [r7, #12]
 800993c:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800993e:	68fb      	ldr	r3, [r7, #12]
 8009940:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 8009944:	4618      	mov	r0, r3
 8009946:	f000 f8a5 	bl	8009a94 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800994a:	68fb      	ldr	r3, [r7, #12]
 800994c:	687a      	ldr	r2, [r7, #4]
 800994e:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
      model(m)
 8009952:	68fb      	ldr	r3, [r7, #12]
 8009954:	68ba      	ldr	r2, [r7, #8]
 8009956:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800995a:	f7ff fe49 	bl	80095f0 <_ZN8touchgfx3HAL11getInstanceEv>
 800995e:	4603      	mov	r3, r0
 8009960:	681a      	ldr	r2, [r3, #0]
 8009962:	3208      	adds	r2, #8
 8009964:	6812      	ldr	r2, [r2, #0]
 8009966:	2100      	movs	r1, #0
 8009968:	4618      	mov	r0, r3
 800996a:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 800996c:	2000      	movs	r0, #0
 800996e:	f002 fd6d 	bl	800c44c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8009972:	f7ff fe49 	bl	8009608 <_ZN8touchgfx3HAL3lcdEv>
 8009976:	4603      	mov	r3, r0
 8009978:	4618      	mov	r0, r3
 800997a:	f011 fbf8 	bl	801b16e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800997e:	f7ff fe43 	bl	8009608 <_ZN8touchgfx3HAL3lcdEv>
 8009982:	4603      	mov	r3, r0
 8009984:	4618      	mov	r0, r3
 8009986:	f011 fc6d 	bl	801b264 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800998a:	68fb      	ldr	r3, [r7, #12]
 800998c:	4618      	mov	r0, r3
 800998e:	3710      	adds	r7, #16
 8009990:	46bd      	mov	sp, r7
 8009992:	bd80      	pop	{r7, pc}
 8009994:	08025678 	.word	0x08025678

08009998 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8009998:	b480      	push	{r7}
 800999a:	b083      	sub	sp, #12
 800999c:	af00      	add	r7, sp, #0
 800999e:	6078      	str	r0, [r7, #4]
 80099a0:	6039      	str	r1, [r7, #0]
 80099a2:	687b      	ldr	r3, [r7, #4]
 80099a4:	4618      	mov	r0, r3
 80099a6:	370c      	adds	r7, #12
 80099a8:	46bd      	mov	sp, r7
 80099aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099ae:	4770      	bx	lr

080099b0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80099b0:	b580      	push	{r7, lr}
 80099b2:	b082      	sub	sp, #8
 80099b4:	af00      	add	r7, sp, #0
 80099b6:	6078      	str	r0, [r7, #4]
 80099b8:	6039      	str	r1, [r7, #0]
 80099ba:	687b      	ldr	r3, [r7, #4]
 80099bc:	683a      	ldr	r2, [r7, #0]
 80099be:	4611      	mov	r1, r2
 80099c0:	4618      	mov	r0, r3
 80099c2:	f7ff ffe9 	bl	8009998 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 80099c6:	683b      	ldr	r3, [r7, #0]
 80099c8:	685a      	ldr	r2, [r3, #4]
 80099ca:	687b      	ldr	r3, [r7, #4]
 80099cc:	605a      	str	r2, [r3, #4]
 80099ce:	687b      	ldr	r3, [r7, #4]
 80099d0:	683a      	ldr	r2, [r7, #0]
 80099d2:	3308      	adds	r3, #8
 80099d4:	3208      	adds	r2, #8
 80099d6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80099da:	e883 0003 	stmia.w	r3, {r0, r1}
 80099de:	687b      	ldr	r3, [r7, #4]
 80099e0:	4618      	mov	r0, r3
 80099e2:	3708      	adds	r7, #8
 80099e4:	46bd      	mov	sp, r7
 80099e6:	bd80      	pop	{r7, pc}

080099e8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 */

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
 80099e8:	b590      	push	{r4, r7, lr}
 80099ea:	b089      	sub	sp, #36	; 0x24
 80099ec:	af00      	add	r7, sp, #0
 80099ee:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
 80099f0:	687b      	ldr	r3, [r7, #4]
 80099f2:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 80099f6:	4b10      	ldr	r3, [pc, #64]	; (8009a38 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x50>)
 80099f8:	61bb      	str	r3, [r7, #24]
 80099fa:	2300      	movs	r3, #0
 80099fc:	61fb      	str	r3, [r7, #28]
 80099fe:	f107 0008 	add.w	r0, r7, #8
 8009a02:	f107 0318 	add.w	r3, r7, #24
 8009a06:	cb0c      	ldmia	r3, {r2, r3}
 8009a08:	6879      	ldr	r1, [r7, #4]
 8009a0a:	f000 f85f 	bl	8009acc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8009a0e:	f107 0308 	add.w	r3, r7, #8
 8009a12:	4619      	mov	r1, r3
 8009a14:	4620      	mov	r0, r4
 8009a16:	f7ff ffcb 	bl	80099b0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8009a1a:	f107 0308 	add.w	r3, r7, #8
 8009a1e:	4618      	mov	r0, r3
 8009a20:	f000 fa0a 	bl	8009e38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8009a24:	687b      	ldr	r3, [r7, #4]
 8009a26:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 8009a2a:	687b      	ldr	r3, [r7, #4]
 8009a2c:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 8009a30:	bf00      	nop
 8009a32:	3724      	adds	r7, #36	; 0x24
 8009a34:	46bd      	mov	sp, r7
 8009a36:	bd90      	pop	{r4, r7, pc}
 8009a38:	08009a3d 	.word	0x08009a3d

08009a3c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8009a3c:	b580      	push	{r7, lr}
 8009a3e:	b084      	sub	sp, #16
 8009a40:	af02      	add	r7, sp, #8
 8009a42:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8009a44:	687b      	ldr	r3, [r7, #4]
 8009a46:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 8009a4a:	687b      	ldr	r3, [r7, #4]
 8009a4c:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 8009a50:	461a      	mov	r2, r3
 8009a52:	687b      	ldr	r3, [r7, #4]
 8009a54:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8009a58:	9300      	str	r3, [sp, #0]
 8009a5a:	4b04      	ldr	r3, [pc, #16]	; (8009a6c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x30>)
 8009a5c:	4804      	ldr	r0, [pc, #16]	; (8009a70 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x34>)
 8009a5e:	f000 f867 	bl	8009b30 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8009a62:	bf00      	nop
 8009a64:	3708      	adds	r7, #8
 8009a66:	46bd      	mov	sp, r7
 8009a68:	bd80      	pop	{r7, pc}
 8009a6a:	bf00      	nop
 8009a6c:	2003246c 	.word	0x2003246c
 8009a70:	20032468 	.word	0x20032468

08009a74 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8009a74:	b480      	push	{r7}
 8009a76:	b083      	sub	sp, #12
 8009a78:	af00      	add	r7, sp, #0
 8009a7a:	6078      	str	r0, [r7, #4]
 8009a7c:	4a04      	ldr	r2, [pc, #16]	; (8009a90 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8009a7e:	687b      	ldr	r3, [r7, #4]
 8009a80:	601a      	str	r2, [r3, #0]
 8009a82:	687b      	ldr	r3, [r7, #4]
 8009a84:	4618      	mov	r0, r3
 8009a86:	370c      	adds	r7, #12
 8009a88:	46bd      	mov	sp, r7
 8009a8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a8e:	4770      	bx	lr
 8009a90:	0802575c 	.word	0x0802575c

08009a94 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 8009a94:	b580      	push	{r7, lr}
 8009a96:	b082      	sub	sp, #8
 8009a98:	af00      	add	r7, sp, #0
 8009a9a:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 8009a9c:	687b      	ldr	r3, [r7, #4]
 8009a9e:	4618      	mov	r0, r3
 8009aa0:	f7ff ffe8 	bl	8009a74 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8009aa4:	4a08      	ldr	r2, [pc, #32]	; (8009ac8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8009aa6:	687b      	ldr	r3, [r7, #4]
 8009aa8:	601a      	str	r2, [r3, #0]
 8009aaa:	687b      	ldr	r3, [r7, #4]
 8009aac:	2200      	movs	r2, #0
 8009aae:	605a      	str	r2, [r3, #4]
 8009ab0:	687b      	ldr	r3, [r7, #4]
 8009ab2:	2200      	movs	r2, #0
 8009ab4:	609a      	str	r2, [r3, #8]
 8009ab6:	687b      	ldr	r3, [r7, #4]
 8009ab8:	2200      	movs	r2, #0
 8009aba:	60da      	str	r2, [r3, #12]
    {
    }
 8009abc:	687b      	ldr	r3, [r7, #4]
 8009abe:	4618      	mov	r0, r3
 8009ac0:	3708      	adds	r7, #8
 8009ac2:	46bd      	mov	sp, r7
 8009ac4:	bd80      	pop	{r7, pc}
 8009ac6:	bf00      	nop
 8009ac8:	080256cc 	.word	0x080256cc

08009acc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 8009acc:	b580      	push	{r7, lr}
 8009ace:	b084      	sub	sp, #16
 8009ad0:	af00      	add	r7, sp, #0
 8009ad2:	60f8      	str	r0, [r7, #12]
 8009ad4:	60b9      	str	r1, [r7, #8]
 8009ad6:	4639      	mov	r1, r7
 8009ad8:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 8009adc:	68fb      	ldr	r3, [r7, #12]
 8009ade:	4618      	mov	r0, r3
 8009ae0:	f7ff ffc8 	bl	8009a74 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8009ae4:	4a08      	ldr	r2, [pc, #32]	; (8009b08 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8009ae6:	68fb      	ldr	r3, [r7, #12]
 8009ae8:	601a      	str	r2, [r3, #0]
 8009aea:	68fb      	ldr	r3, [r7, #12]
 8009aec:	68ba      	ldr	r2, [r7, #8]
 8009aee:	605a      	str	r2, [r3, #4]
 8009af0:	68fb      	ldr	r3, [r7, #12]
 8009af2:	3308      	adds	r3, #8
 8009af4:	463a      	mov	r2, r7
 8009af6:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009afa:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 8009afe:	68fb      	ldr	r3, [r7, #12]
 8009b00:	4618      	mov	r0, r3
 8009b02:	3710      	adds	r7, #16
 8009b04:	46bd      	mov	sp, r7
 8009b06:	bd80      	pop	{r7, pc}
 8009b08:	080256cc 	.word	0x080256cc

08009b0c <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 8009b0c:	b580      	push	{r7, lr}
 8009b0e:	b082      	sub	sp, #8
 8009b10:	af00      	add	r7, sp, #0
 8009b12:	6078      	str	r0, [r7, #4]
 8009b14:	687b      	ldr	r3, [r7, #4]
 8009b16:	4618      	mov	r0, r3
 8009b18:	f7ff fd92 	bl	8009640 <_ZN8touchgfx10TransitionC1Ev>
 8009b1c:	4a03      	ldr	r2, [pc, #12]	; (8009b2c <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8009b1e:	687b      	ldr	r3, [r7, #4]
 8009b20:	601a      	str	r2, [r3, #0]
 8009b22:	687b      	ldr	r3, [r7, #4]
 8009b24:	4618      	mov	r0, r3
 8009b26:	3708      	adds	r7, #8
 8009b28:	46bd      	mov	sp, r7
 8009b2a:	bd80      	pop	{r7, pc}
 8009b2c:	08025654 	.word	0x08025654

08009b30 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8009b30:	b590      	push	{r4, r7, lr}
 8009b32:	b08f      	sub	sp, #60	; 0x3c
 8009b34:	af00      	add	r7, sp, #0
 8009b36:	60f8      	str	r0, [r7, #12]
 8009b38:	60b9      	str	r1, [r7, #8]
 8009b3a:	607a      	str	r2, [r7, #4]
 8009b3c:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8009b3e:	687b      	ldr	r3, [r7, #4]
 8009b40:	689a      	ldr	r2, [r3, #8]
 8009b42:	687b      	ldr	r3, [r7, #4]
 8009b44:	689b      	ldr	r3, [r3, #8]
 8009b46:	681b      	ldr	r3, [r3, #0]
 8009b48:	3320      	adds	r3, #32
 8009b4a:	681b      	ldr	r3, [r3, #0]
 8009b4c:	4610      	mov	r0, r2
 8009b4e:	4798      	blx	r3
 8009b50:	4603      	mov	r3, r0
 8009b52:	f640 4263 	movw	r2, #3171	; 0xc63
 8009b56:	4293      	cmp	r3, r2
 8009b58:	d805      	bhi.n	8009b66 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x36>
 8009b5a:	4b7d      	ldr	r3, [pc, #500]	; (8009d50 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 8009b5c:	4a7d      	ldr	r2, [pc, #500]	; (8009d54 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009b5e:	21a3      	movs	r1, #163	; 0xa3
 8009b60:	487d      	ldr	r0, [pc, #500]	; (8009d58 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009b62:	f019 fbe9 	bl	8023338 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8009b66:	687b      	ldr	r3, [r7, #4]
 8009b68:	685a      	ldr	r2, [r3, #4]
 8009b6a:	687b      	ldr	r3, [r7, #4]
 8009b6c:	685b      	ldr	r3, [r3, #4]
 8009b6e:	681b      	ldr	r3, [r3, #0]
 8009b70:	3320      	adds	r3, #32
 8009b72:	681b      	ldr	r3, [r3, #0]
 8009b74:	4610      	mov	r0, r2
 8009b76:	4798      	blx	r3
 8009b78:	4603      	mov	r3, r0
 8009b7a:	2b0f      	cmp	r3, #15
 8009b7c:	d805      	bhi.n	8009b8a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5a>
 8009b7e:	4b77      	ldr	r3, [pc, #476]	; (8009d5c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8009b80:	4a74      	ldr	r2, [pc, #464]	; (8009d54 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009b82:	21a4      	movs	r1, #164	; 0xa4
 8009b84:	4874      	ldr	r0, [pc, #464]	; (8009d58 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009b86:	f019 fbd7 	bl	8023338 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8009b8a:	687b      	ldr	r3, [r7, #4]
 8009b8c:	68da      	ldr	r2, [r3, #12]
 8009b8e:	687b      	ldr	r3, [r7, #4]
 8009b90:	68db      	ldr	r3, [r3, #12]
 8009b92:	681b      	ldr	r3, [r3, #0]
 8009b94:	3320      	adds	r3, #32
 8009b96:	681b      	ldr	r3, [r3, #0]
 8009b98:	4610      	mov	r0, r2
 8009b9a:	4798      	blx	r3
 8009b9c:	4603      	mov	r3, r0
 8009b9e:	2b0b      	cmp	r3, #11
 8009ba0:	d805      	bhi.n	8009bae <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
 8009ba2:	4b6f      	ldr	r3, [pc, #444]	; (8009d60 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8009ba4:	4a6b      	ldr	r2, [pc, #428]	; (8009d54 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009ba6:	21a5      	movs	r1, #165	; 0xa5
 8009ba8:	486b      	ldr	r0, [pc, #428]	; (8009d58 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009baa:	f019 fbc5 	bl	8023338 <__assert_func>
 8009bae:	68fb      	ldr	r3, [r7, #12]
 8009bb0:	62bb      	str	r3, [r7, #40]	; 0x28
 8009bb2:	68bb      	ldr	r3, [r7, #8]
 8009bb4:	627b      	str	r3, [r7, #36]	; 0x24
 8009bb6:	683b      	ldr	r3, [r7, #0]
 8009bb8:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8009bba:	f008 f993 	bl	8011ee4 <_ZN8touchgfx11Application11getInstanceEv>
 8009bbe:	4603      	mov	r3, r0
 8009bc0:	4618      	mov	r0, r3
 8009bc2:	f7ff fce7 	bl	8009594 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8009bc6:	6a3b      	ldr	r3, [r7, #32]
 8009bc8:	681b      	ldr	r3, [r3, #0]
 8009bca:	2b00      	cmp	r3, #0
 8009bcc:	d008      	beq.n	8009be0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb0>
        (*currentTrans)->tearDown();
 8009bce:	6a3b      	ldr	r3, [r7, #32]
 8009bd0:	681a      	ldr	r2, [r3, #0]
 8009bd2:	6a3b      	ldr	r3, [r7, #32]
 8009bd4:	681b      	ldr	r3, [r3, #0]
 8009bd6:	681b      	ldr	r3, [r3, #0]
 8009bd8:	330c      	adds	r3, #12
 8009bda:	681b      	ldr	r3, [r3, #0]
 8009bdc:	4610      	mov	r0, r2
 8009bde:	4798      	blx	r3
    if (*currentTrans)
 8009be0:	6a3b      	ldr	r3, [r7, #32]
 8009be2:	681b      	ldr	r3, [r3, #0]
 8009be4:	2b00      	cmp	r3, #0
 8009be6:	d007      	beq.n	8009bf8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
        (*currentTrans)->~Transition();
 8009be8:	6a3b      	ldr	r3, [r7, #32]
 8009bea:	681a      	ldr	r2, [r3, #0]
 8009bec:	6a3b      	ldr	r3, [r7, #32]
 8009bee:	681b      	ldr	r3, [r3, #0]
 8009bf0:	681b      	ldr	r3, [r3, #0]
 8009bf2:	681b      	ldr	r3, [r3, #0]
 8009bf4:	4610      	mov	r0, r2
 8009bf6:	4798      	blx	r3
    if (*currentScreen)
 8009bf8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009bfa:	681b      	ldr	r3, [r3, #0]
 8009bfc:	2b00      	cmp	r3, #0
 8009bfe:	d008      	beq.n	8009c12 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe2>
        (*currentScreen)->tearDownScreen();
 8009c00:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009c02:	681a      	ldr	r2, [r3, #0]
 8009c04:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009c06:	681b      	ldr	r3, [r3, #0]
 8009c08:	681b      	ldr	r3, [r3, #0]
 8009c0a:	3314      	adds	r3, #20
 8009c0c:	681b      	ldr	r3, [r3, #0]
 8009c0e:	4610      	mov	r0, r2
 8009c10:	4798      	blx	r3
    if (*currentPresenter)
 8009c12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009c14:	681b      	ldr	r3, [r3, #0]
 8009c16:	2b00      	cmp	r3, #0
 8009c18:	d008      	beq.n	8009c2c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfc>
        (*currentPresenter)->deactivate();
 8009c1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009c1c:	681a      	ldr	r2, [r3, #0]
 8009c1e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009c20:	681b      	ldr	r3, [r3, #0]
 8009c22:	681b      	ldr	r3, [r3, #0]
 8009c24:	3304      	adds	r3, #4
 8009c26:	681b      	ldr	r3, [r3, #0]
 8009c28:	4610      	mov	r0, r2
 8009c2a:	4798      	blx	r3
    if (*currentScreen)
 8009c2c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009c2e:	681b      	ldr	r3, [r3, #0]
 8009c30:	2b00      	cmp	r3, #0
 8009c32:	d007      	beq.n	8009c44 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x114>
        (*currentScreen)->~Screen();
 8009c34:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009c36:	681a      	ldr	r2, [r3, #0]
 8009c38:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009c3a:	681b      	ldr	r3, [r3, #0]
 8009c3c:	681b      	ldr	r3, [r3, #0]
 8009c3e:	681b      	ldr	r3, [r3, #0]
 8009c40:	4610      	mov	r0, r2
 8009c42:	4798      	blx	r3
    if (*currentPresenter)
 8009c44:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009c46:	681b      	ldr	r3, [r3, #0]
 8009c48:	2b00      	cmp	r3, #0
 8009c4a:	d008      	beq.n	8009c5e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12e>
        (*currentPresenter)->~Presenter();
 8009c4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009c4e:	681a      	ldr	r2, [r3, #0]
 8009c50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009c52:	681b      	ldr	r3, [r3, #0]
 8009c54:	681b      	ldr	r3, [r3, #0]
 8009c56:	3308      	adds	r3, #8
 8009c58:	681b      	ldr	r3, [r3, #0]
 8009c5a:	4610      	mov	r0, r2
 8009c5c:	4798      	blx	r3
}
 8009c5e:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8009c60:	687b      	ldr	r3, [r7, #4]
 8009c62:	68db      	ldr	r3, [r3, #12]
 8009c64:	2100      	movs	r1, #0
 8009c66:	4618      	mov	r0, r3
 8009c68:	f000 f87c 	bl	8009d64 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8009c6c:	4603      	mov	r3, r0
 8009c6e:	4619      	mov	r1, r3
 8009c70:	200c      	movs	r0, #12
 8009c72:	f7ff fbf9 	bl	8009468 <_ZnwjPv>
 8009c76:	4604      	mov	r4, r0
 8009c78:	4620      	mov	r0, r4
 8009c7a:	f7ff ff47 	bl	8009b0c <_ZN8touchgfx12NoTransitionC1Ev>
 8009c7e:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8009c80:	687b      	ldr	r3, [r7, #4]
 8009c82:	689b      	ldr	r3, [r3, #8]
 8009c84:	2100      	movs	r1, #0
 8009c86:	4618      	mov	r0, r3
 8009c88:	f000 f87f 	bl	8009d8a <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 8009c8c:	4603      	mov	r3, r0
 8009c8e:	4619      	mov	r1, r3
 8009c90:	f640 4064 	movw	r0, #3172	; 0xc64
 8009c94:	f7ff fbe8 	bl	8009468 <_ZnwjPv>
 8009c98:	4604      	mov	r4, r0
 8009c9a:	4620      	mov	r0, r4
 8009c9c:	f002 fe0e 	bl	800c8bc <_ZN11Screen1ViewC1Ev>
 8009ca0:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8009ca2:	687b      	ldr	r3, [r7, #4]
 8009ca4:	685b      	ldr	r3, [r3, #4]
 8009ca6:	2100      	movs	r1, #0
 8009ca8:	4618      	mov	r0, r3
 8009caa:	f000 f881 	bl	8009db0 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 8009cae:	4603      	mov	r3, r0
 8009cb0:	4619      	mov	r1, r3
 8009cb2:	2010      	movs	r0, #16
 8009cb4:	f7ff fbd8 	bl	8009468 <_ZnwjPv>
 8009cb8:	4604      	mov	r4, r0
 8009cba:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8009cbc:	4620      	mov	r0, r4
 8009cbe:	f002 fda5 	bl	800c80c <_ZN16Screen1PresenterC1ER11Screen1View>
 8009cc2:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 8009cc4:	683b      	ldr	r3, [r7, #0]
 8009cc6:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8009cc8:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8009cca:	68bb      	ldr	r3, [r7, #8]
 8009ccc:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8009cce:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8009cd0:	68fb      	ldr	r3, [r7, #12]
 8009cd2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009cd4:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8009cd6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009cd8:	2b00      	cmp	r3, #0
 8009cda:	d002      	beq.n	8009ce2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8009cdc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009cde:	3304      	adds	r3, #4
 8009ce0:	e000      	b.n	8009ce4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 8009ce2:	2300      	movs	r3, #0
 8009ce4:	4619      	mov	r1, r3
 8009ce6:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8009ce8:	f7ff fd9a 	bl	8009820 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8009cec:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009cee:	3304      	adds	r3, #4
 8009cf0:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8009cf2:	4618      	mov	r0, r3
 8009cf4:	f7ff fe07 	bl	8009906 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8009cf8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009cfa:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8009cfc:	4618      	mov	r0, r3
 8009cfe:	f000 f86a 	bl	8009dd6 <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>
 8009d02:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009d04:	61fb      	str	r3, [r7, #28]
 8009d06:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009d08:	61bb      	str	r3, [r7, #24]
 8009d0a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009d0c:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8009d0e:	69fb      	ldr	r3, [r7, #28]
 8009d10:	681b      	ldr	r3, [r3, #0]
 8009d12:	330c      	adds	r3, #12
 8009d14:	681b      	ldr	r3, [r3, #0]
 8009d16:	69f8      	ldr	r0, [r7, #28]
 8009d18:	4798      	blx	r3
    newPresenter->activate();
 8009d1a:	69bb      	ldr	r3, [r7, #24]
 8009d1c:	681b      	ldr	r3, [r3, #0]
 8009d1e:	681b      	ldr	r3, [r3, #0]
 8009d20:	69b8      	ldr	r0, [r7, #24]
 8009d22:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8009d24:	6979      	ldr	r1, [r7, #20]
 8009d26:	69f8      	ldr	r0, [r7, #28]
 8009d28:	f009 fda0 	bl	801386c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8009d2c:	697b      	ldr	r3, [r7, #20]
 8009d2e:	681b      	ldr	r3, [r3, #0]
 8009d30:	3310      	adds	r3, #16
 8009d32:	681b      	ldr	r3, [r3, #0]
 8009d34:	6978      	ldr	r0, [r7, #20]
 8009d36:	4798      	blx	r3
    newTransition->invalidate();
 8009d38:	697b      	ldr	r3, [r7, #20]
 8009d3a:	681b      	ldr	r3, [r3, #0]
 8009d3c:	3314      	adds	r3, #20
 8009d3e:	681b      	ldr	r3, [r3, #0]
 8009d40:	6978      	ldr	r0, [r7, #20]
 8009d42:	4798      	blx	r3
}
 8009d44:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 8009d46:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 8009d48:	4618      	mov	r0, r3
 8009d4a:	373c      	adds	r7, #60	; 0x3c
 8009d4c:	46bd      	mov	sp, r7
 8009d4e:	bd90      	pop	{r4, r7, pc}
 8009d50:	080243a4 	.word	0x080243a4
 8009d54:	08024434 	.word	0x08024434
 8009d58:	08024538 	.word	0x08024538
 8009d5c:	0802457c 	.word	0x0802457c
 8009d60:	08024620 	.word	0x08024620

08009d64 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 8009d64:	b580      	push	{r7, lr}
 8009d66:	b082      	sub	sp, #8
 8009d68:	af00      	add	r7, sp, #0
 8009d6a:	6078      	str	r0, [r7, #4]
 8009d6c:	460b      	mov	r3, r1
 8009d6e:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8009d70:	687b      	ldr	r3, [r7, #4]
 8009d72:	681b      	ldr	r3, [r3, #0]
 8009d74:	3324      	adds	r3, #36	; 0x24
 8009d76:	681b      	ldr	r3, [r3, #0]
 8009d78:	887a      	ldrh	r2, [r7, #2]
 8009d7a:	4611      	mov	r1, r2
 8009d7c:	6878      	ldr	r0, [r7, #4]
 8009d7e:	4798      	blx	r3
 8009d80:	4603      	mov	r3, r0
    }
 8009d82:	4618      	mov	r0, r3
 8009d84:	3708      	adds	r7, #8
 8009d86:	46bd      	mov	sp, r7
 8009d88:	bd80      	pop	{r7, pc}

08009d8a <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 8009d8a:	b580      	push	{r7, lr}
 8009d8c:	b082      	sub	sp, #8
 8009d8e:	af00      	add	r7, sp, #0
 8009d90:	6078      	str	r0, [r7, #4]
 8009d92:	460b      	mov	r3, r1
 8009d94:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009d96:	687b      	ldr	r3, [r7, #4]
 8009d98:	681b      	ldr	r3, [r3, #0]
 8009d9a:	3324      	adds	r3, #36	; 0x24
 8009d9c:	681b      	ldr	r3, [r3, #0]
 8009d9e:	887a      	ldrh	r2, [r7, #2]
 8009da0:	4611      	mov	r1, r2
 8009da2:	6878      	ldr	r0, [r7, #4]
 8009da4:	4798      	blx	r3
 8009da6:	4603      	mov	r3, r0
    }
 8009da8:	4618      	mov	r0, r3
 8009daa:	3708      	adds	r7, #8
 8009dac:	46bd      	mov	sp, r7
 8009dae:	bd80      	pop	{r7, pc}

08009db0 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 8009db0:	b580      	push	{r7, lr}
 8009db2:	b082      	sub	sp, #8
 8009db4:	af00      	add	r7, sp, #0
 8009db6:	6078      	str	r0, [r7, #4]
 8009db8:	460b      	mov	r3, r1
 8009dba:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009dbc:	687b      	ldr	r3, [r7, #4]
 8009dbe:	681b      	ldr	r3, [r3, #0]
 8009dc0:	3324      	adds	r3, #36	; 0x24
 8009dc2:	681b      	ldr	r3, [r3, #0]
 8009dc4:	887a      	ldrh	r2, [r7, #2]
 8009dc6:	4611      	mov	r1, r2
 8009dc8:	6878      	ldr	r0, [r7, #4]
 8009dca:	4798      	blx	r3
 8009dcc:	4603      	mov	r3, r0
    }
 8009dce:	4618      	mov	r0, r3
 8009dd0:	3708      	adds	r7, #8
 8009dd2:	46bd      	mov	sp, r7
 8009dd4:	bd80      	pop	{r7, pc}

08009dd6 <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 8009dd6:	b480      	push	{r7}
 8009dd8:	b083      	sub	sp, #12
 8009dda:	af00      	add	r7, sp, #0
 8009ddc:	6078      	str	r0, [r7, #4]
 8009dde:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 8009de0:	687b      	ldr	r3, [r7, #4]
 8009de2:	683a      	ldr	r2, [r7, #0]
 8009de4:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8009de6:	bf00      	nop
 8009de8:	370c      	adds	r7, #12
 8009dea:	46bd      	mov	sp, r7
 8009dec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009df0:	4770      	bx	lr
	...

08009df4 <_ZN8touchgfx12NoTransitionD1Ev>:
 8009df4:	b580      	push	{r7, lr}
 8009df6:	b082      	sub	sp, #8
 8009df8:	af00      	add	r7, sp, #0
 8009dfa:	6078      	str	r0, [r7, #4]
 8009dfc:	4a05      	ldr	r2, [pc, #20]	; (8009e14 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 8009dfe:	687b      	ldr	r3, [r7, #4]
 8009e00:	601a      	str	r2, [r3, #0]
 8009e02:	687b      	ldr	r3, [r7, #4]
 8009e04:	4618      	mov	r0, r3
 8009e06:	f7ff fc31 	bl	800966c <_ZN8touchgfx10TransitionD1Ev>
 8009e0a:	687b      	ldr	r3, [r7, #4]
 8009e0c:	4618      	mov	r0, r3
 8009e0e:	3708      	adds	r7, #8
 8009e10:	46bd      	mov	sp, r7
 8009e12:	bd80      	pop	{r7, pc}
 8009e14:	08025654 	.word	0x08025654

08009e18 <_ZN8touchgfx12NoTransitionD0Ev>:
 8009e18:	b580      	push	{r7, lr}
 8009e1a:	b082      	sub	sp, #8
 8009e1c:	af00      	add	r7, sp, #0
 8009e1e:	6078      	str	r0, [r7, #4]
 8009e20:	6878      	ldr	r0, [r7, #4]
 8009e22:	f7ff ffe7 	bl	8009df4 <_ZN8touchgfx12NoTransitionD1Ev>
 8009e26:	210c      	movs	r1, #12
 8009e28:	6878      	ldr	r0, [r7, #4]
 8009e2a:	f018 fcfa 	bl	8022822 <_ZdlPvj>
 8009e2e:	687b      	ldr	r3, [r7, #4]
 8009e30:	4618      	mov	r0, r3
 8009e32:	3708      	adds	r7, #8
 8009e34:	46bd      	mov	sp, r7
 8009e36:	bd80      	pop	{r7, pc}

08009e38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8009e38:	b580      	push	{r7, lr}
 8009e3a:	b082      	sub	sp, #8
 8009e3c:	af00      	add	r7, sp, #0
 8009e3e:	6078      	str	r0, [r7, #4]
 8009e40:	4a05      	ldr	r2, [pc, #20]	; (8009e58 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8009e42:	687b      	ldr	r3, [r7, #4]
 8009e44:	601a      	str	r2, [r3, #0]
 8009e46:	687b      	ldr	r3, [r7, #4]
 8009e48:	4618      	mov	r0, r3
 8009e4a:	f7ff fbb1 	bl	80095b0 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8009e4e:	687b      	ldr	r3, [r7, #4]
 8009e50:	4618      	mov	r0, r3
 8009e52:	3708      	adds	r7, #8
 8009e54:	46bd      	mov	sp, r7
 8009e56:	bd80      	pop	{r7, pc}
 8009e58:	080256cc 	.word	0x080256cc

08009e5c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 8009e5c:	b580      	push	{r7, lr}
 8009e5e:	b082      	sub	sp, #8
 8009e60:	af00      	add	r7, sp, #0
 8009e62:	6078      	str	r0, [r7, #4]
 8009e64:	6878      	ldr	r0, [r7, #4]
 8009e66:	f7ff ffe7 	bl	8009e38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8009e6a:	2110      	movs	r1, #16
 8009e6c:	6878      	ldr	r0, [r7, #4]
 8009e6e:	f018 fcd8 	bl	8022822 <_ZdlPvj>
 8009e72:	687b      	ldr	r3, [r7, #4]
 8009e74:	4618      	mov	r0, r3
 8009e76:	3708      	adds	r7, #8
 8009e78:	46bd      	mov	sp, r7
 8009e7a:	bd80      	pop	{r7, pc}

08009e7c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8009e7c:	b580      	push	{r7, lr}
 8009e7e:	b082      	sub	sp, #8
 8009e80:	af00      	add	r7, sp, #0
 8009e82:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 8009e84:	687b      	ldr	r3, [r7, #4]
 8009e86:	685b      	ldr	r3, [r3, #4]
 8009e88:	687a      	ldr	r2, [r7, #4]
 8009e8a:	68d2      	ldr	r2, [r2, #12]
 8009e8c:	1052      	asrs	r2, r2, #1
 8009e8e:	1899      	adds	r1, r3, r2
 8009e90:	687b      	ldr	r3, [r7, #4]
 8009e92:	68db      	ldr	r3, [r3, #12]
 8009e94:	f003 0301 	and.w	r3, r3, #1
 8009e98:	2b00      	cmp	r3, #0
 8009e9a:	d102      	bne.n	8009ea2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 8009e9c:	687b      	ldr	r3, [r7, #4]
 8009e9e:	689b      	ldr	r3, [r3, #8]
 8009ea0:	e00a      	b.n	8009eb8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 8009ea2:	687b      	ldr	r3, [r7, #4]
 8009ea4:	685b      	ldr	r3, [r3, #4]
 8009ea6:	687a      	ldr	r2, [r7, #4]
 8009ea8:	68d2      	ldr	r2, [r2, #12]
 8009eaa:	1052      	asrs	r2, r2, #1
 8009eac:	4413      	add	r3, r2
 8009eae:	681b      	ldr	r3, [r3, #0]
 8009eb0:	687a      	ldr	r2, [r7, #4]
 8009eb2:	6892      	ldr	r2, [r2, #8]
 8009eb4:	4413      	add	r3, r2
 8009eb6:	681b      	ldr	r3, [r3, #0]
 8009eb8:	4608      	mov	r0, r1
 8009eba:	4798      	blx	r3
    }
 8009ebc:	bf00      	nop
 8009ebe:	3708      	adds	r7, #8
 8009ec0:	46bd      	mov	sp, r7
 8009ec2:	bd80      	pop	{r7, pc}

08009ec4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8009ec4:	b480      	push	{r7}
 8009ec6:	b083      	sub	sp, #12
 8009ec8:	af00      	add	r7, sp, #0
 8009eca:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 8009ecc:	687b      	ldr	r3, [r7, #4]
 8009ece:	685b      	ldr	r3, [r3, #4]
 8009ed0:	2b00      	cmp	r3, #0
 8009ed2:	d010      	beq.n	8009ef6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8009ed4:	687b      	ldr	r3, [r7, #4]
 8009ed6:	689b      	ldr	r3, [r3, #8]
 8009ed8:	2b00      	cmp	r3, #0
 8009eda:	d107      	bne.n	8009eec <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8009edc:	687b      	ldr	r3, [r7, #4]
 8009ede:	68db      	ldr	r3, [r3, #12]
 8009ee0:	f003 0301 	and.w	r3, r3, #1
 8009ee4:	2b00      	cmp	r3, #0
 8009ee6:	d101      	bne.n	8009eec <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8009ee8:	2301      	movs	r3, #1
 8009eea:	e000      	b.n	8009eee <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 8009eec:	2300      	movs	r3, #0
 8009eee:	2b01      	cmp	r3, #1
 8009ef0:	d001      	beq.n	8009ef6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8009ef2:	2301      	movs	r3, #1
 8009ef4:	e000      	b.n	8009ef8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 8009ef6:	2300      	movs	r3, #0
    }
 8009ef8:	4618      	mov	r0, r3
 8009efa:	370c      	adds	r7, #12
 8009efc:	46bd      	mov	sp, r7
 8009efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f02:	4770      	bx	lr

08009f04 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 8009f04:	b480      	push	{r7}
 8009f06:	b083      	sub	sp, #12
 8009f08:	af00      	add	r7, sp, #0
 8009f0a:	6078      	str	r0, [r7, #4]
 8009f0c:	6039      	str	r1, [r7, #0]
        : color(col)
 8009f0e:	687b      	ldr	r3, [r7, #4]
 8009f10:	683a      	ldr	r2, [r7, #0]
 8009f12:	601a      	str	r2, [r3, #0]
    {
    }
 8009f14:	687b      	ldr	r3, [r7, #4]
 8009f16:	4618      	mov	r0, r3
 8009f18:	370c      	adds	r7, #12
 8009f1a:	46bd      	mov	sp, r7
 8009f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f20:	4770      	bx	lr

08009f22 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 8009f22:	b480      	push	{r7}
 8009f24:	b083      	sub	sp, #12
 8009f26:	af00      	add	r7, sp, #0
 8009f28:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 8009f2a:	687b      	ldr	r3, [r7, #4]
 8009f2c:	2200      	movs	r2, #0
 8009f2e:	801a      	strh	r2, [r3, #0]
 8009f30:	687b      	ldr	r3, [r7, #4]
 8009f32:	2200      	movs	r2, #0
 8009f34:	805a      	strh	r2, [r3, #2]
 8009f36:	687b      	ldr	r3, [r7, #4]
 8009f38:	2200      	movs	r2, #0
 8009f3a:	809a      	strh	r2, [r3, #4]
 8009f3c:	687b      	ldr	r3, [r7, #4]
 8009f3e:	2200      	movs	r2, #0
 8009f40:	80da      	strh	r2, [r3, #6]
    {
    }
 8009f42:	687b      	ldr	r3, [r7, #4]
 8009f44:	4618      	mov	r0, r3
 8009f46:	370c      	adds	r7, #12
 8009f48:	46bd      	mov	sp, r7
 8009f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f4e:	4770      	bx	lr

08009f50 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 8009f50:	b480      	push	{r7}
 8009f52:	b085      	sub	sp, #20
 8009f54:	af00      	add	r7, sp, #0
 8009f56:	60f8      	str	r0, [r7, #12]
 8009f58:	4608      	mov	r0, r1
 8009f5a:	4611      	mov	r1, r2
 8009f5c:	461a      	mov	r2, r3
 8009f5e:	4603      	mov	r3, r0
 8009f60:	817b      	strh	r3, [r7, #10]
 8009f62:	460b      	mov	r3, r1
 8009f64:	813b      	strh	r3, [r7, #8]
 8009f66:	4613      	mov	r3, r2
 8009f68:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8009f6a:	68fb      	ldr	r3, [r7, #12]
 8009f6c:	897a      	ldrh	r2, [r7, #10]
 8009f6e:	801a      	strh	r2, [r3, #0]
 8009f70:	68fb      	ldr	r3, [r7, #12]
 8009f72:	893a      	ldrh	r2, [r7, #8]
 8009f74:	805a      	strh	r2, [r3, #2]
 8009f76:	68fb      	ldr	r3, [r7, #12]
 8009f78:	88fa      	ldrh	r2, [r7, #6]
 8009f7a:	809a      	strh	r2, [r3, #4]
 8009f7c:	68fb      	ldr	r3, [r7, #12]
 8009f7e:	8b3a      	ldrh	r2, [r7, #24]
 8009f80:	80da      	strh	r2, [r3, #6]
    {
    }
 8009f82:	68fb      	ldr	r3, [r7, #12]
 8009f84:	4618      	mov	r0, r3
 8009f86:	3714      	adds	r7, #20
 8009f88:	46bd      	mov	sp, r7
 8009f8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f8e:	4770      	bx	lr

08009f90 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 8009f90:	b580      	push	{r7, lr}
 8009f92:	b082      	sub	sp, #8
 8009f94:	af00      	add	r7, sp, #0
 8009f96:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 8009f98:	4a14      	ldr	r2, [pc, #80]	; (8009fec <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 8009f9a:	687b      	ldr	r3, [r7, #4]
 8009f9c:	601a      	str	r2, [r3, #0]
        : rect(),
 8009f9e:	687b      	ldr	r3, [r7, #4]
 8009fa0:	3304      	adds	r3, #4
 8009fa2:	4618      	mov	r0, r3
 8009fa4:	f7ff ffbd 	bl	8009f22 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 8009fa8:	687b      	ldr	r3, [r7, #4]
 8009faa:	330c      	adds	r3, #12
 8009fac:	4618      	mov	r0, r3
 8009fae:	f7ff ffb8 	bl	8009f22 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 8009fb2:	687b      	ldr	r3, [r7, #4]
 8009fb4:	2200      	movs	r2, #0
 8009fb6:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 8009fb8:	687b      	ldr	r3, [r7, #4]
 8009fba:	2200      	movs	r2, #0
 8009fbc:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 8009fbe:	687b      	ldr	r3, [r7, #4]
 8009fc0:	2200      	movs	r2, #0
 8009fc2:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 8009fc4:	687b      	ldr	r3, [r7, #4]
 8009fc6:	2200      	movs	r2, #0
 8009fc8:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 8009fca:	687b      	ldr	r3, [r7, #4]
 8009fcc:	2200      	movs	r2, #0
 8009fce:	845a      	strh	r2, [r3, #34]	; 0x22
          touchable(false),
 8009fd0:	687b      	ldr	r3, [r7, #4]
 8009fd2:	2200      	movs	r2, #0
 8009fd4:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
          visible(true)
 8009fd8:	687b      	ldr	r3, [r7, #4]
 8009fda:	2201      	movs	r2, #1
 8009fdc:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 8009fe0:	687b      	ldr	r3, [r7, #4]
 8009fe2:	4618      	mov	r0, r3
 8009fe4:	3708      	adds	r7, #8
 8009fe6:	46bd      	mov	sp, r7
 8009fe8:	bd80      	pop	{r7, pc}
 8009fea:	bf00      	nop
 8009fec:	080263ac 	.word	0x080263ac

08009ff0 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 8009ff0:	b480      	push	{r7}
 8009ff2:	b083      	sub	sp, #12
 8009ff4:	af00      	add	r7, sp, #0
 8009ff6:	6078      	str	r0, [r7, #4]
    {
 8009ff8:	4a04      	ldr	r2, [pc, #16]	; (800a00c <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8009ffa:	687b      	ldr	r3, [r7, #4]
 8009ffc:	601a      	str	r2, [r3, #0]
    }
 8009ffe:	687b      	ldr	r3, [r7, #4]
 800a000:	4618      	mov	r0, r3
 800a002:	370c      	adds	r7, #12
 800a004:	46bd      	mov	sp, r7
 800a006:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a00a:	4770      	bx	lr
 800a00c:	080263ac 	.word	0x080263ac

0800a010 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800a010:	b580      	push	{r7, lr}
 800a012:	b082      	sub	sp, #8
 800a014:	af00      	add	r7, sp, #0
 800a016:	6078      	str	r0, [r7, #4]
    }
 800a018:	6878      	ldr	r0, [r7, #4]
 800a01a:	f7ff ffe9 	bl	8009ff0 <_ZN8touchgfx8DrawableD1Ev>
 800a01e:	2128      	movs	r1, #40	; 0x28
 800a020:	6878      	ldr	r0, [r7, #4]
 800a022:	f018 fbfe 	bl	8022822 <_ZdlPvj>
 800a026:	687b      	ldr	r3, [r7, #4]
 800a028:	4618      	mov	r0, r3
 800a02a:	3708      	adds	r7, #8
 800a02c:	46bd      	mov	sp, r7
 800a02e:	bd80      	pop	{r7, pc}

0800a030 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800a030:	b580      	push	{r7, lr}
 800a032:	b082      	sub	sp, #8
 800a034:	af00      	add	r7, sp, #0
 800a036:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800a038:	687b      	ldr	r3, [r7, #4]
 800a03a:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800a03e:	2b00      	cmp	r3, #0
 800a040:	d005      	beq.n	800a04e <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800a042:	687b      	ldr	r3, [r7, #4]
 800a044:	681b      	ldr	r3, [r3, #0]
 800a046:	3314      	adds	r3, #20
 800a048:	681b      	ldr	r3, [r3, #0]
 800a04a:	6878      	ldr	r0, [r7, #4]
 800a04c:	4798      	blx	r3
        }
    }
 800a04e:	bf00      	nop
 800a050:	3708      	adds	r7, #8
 800a052:	46bd      	mov	sp, r7
 800a054:	bd80      	pop	{r7, pc}

0800a056 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800a056:	b480      	push	{r7}
 800a058:	b083      	sub	sp, #12
 800a05a:	af00      	add	r7, sp, #0
 800a05c:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800a05e:	2300      	movs	r3, #0
    }
 800a060:	4618      	mov	r0, r3
 800a062:	370c      	adds	r7, #12
 800a064:	46bd      	mov	sp, r7
 800a066:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a06a:	4770      	bx	lr

0800a06c <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800a06c:	b580      	push	{r7, lr}
 800a06e:	b084      	sub	sp, #16
 800a070:	af00      	add	r7, sp, #0
 800a072:	60f8      	str	r0, [r7, #12]
 800a074:	4608      	mov	r0, r1
 800a076:	4611      	mov	r1, r2
 800a078:	461a      	mov	r2, r3
 800a07a:	4603      	mov	r3, r0
 800a07c:	817b      	strh	r3, [r7, #10]
 800a07e:	460b      	mov	r3, r1
 800a080:	813b      	strh	r3, [r7, #8]
 800a082:	4613      	mov	r3, r2
 800a084:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800a086:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800a08a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800a08e:	4619      	mov	r1, r3
 800a090:	68f8      	ldr	r0, [r7, #12]
 800a092:	f000 f82a 	bl	800a0ea <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800a096:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800a09a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800a09e:	4619      	mov	r1, r3
 800a0a0:	68f8      	ldr	r0, [r7, #12]
 800a0a2:	f000 f87e 	bl	800a1a2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800a0a6:	bf00      	nop
 800a0a8:	3710      	adds	r7, #16
 800a0aa:	46bd      	mov	sp, r7
 800a0ac:	bd80      	pop	{r7, pc}

0800a0ae <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800a0ae:	b480      	push	{r7}
 800a0b0:	b083      	sub	sp, #12
 800a0b2:	af00      	add	r7, sp, #0
 800a0b4:	6078      	str	r0, [r7, #4]
 800a0b6:	460b      	mov	r3, r1
 800a0b8:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800a0ba:	687b      	ldr	r3, [r7, #4]
 800a0bc:	887a      	ldrh	r2, [r7, #2]
 800a0be:	809a      	strh	r2, [r3, #4]
    }
 800a0c0:	bf00      	nop
 800a0c2:	370c      	adds	r7, #12
 800a0c4:	46bd      	mov	sp, r7
 800a0c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0ca:	4770      	bx	lr

0800a0cc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800a0cc:	b480      	push	{r7}
 800a0ce:	b083      	sub	sp, #12
 800a0d0:	af00      	add	r7, sp, #0
 800a0d2:	6078      	str	r0, [r7, #4]
 800a0d4:	460b      	mov	r3, r1
 800a0d6:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800a0d8:	687b      	ldr	r3, [r7, #4]
 800a0da:	887a      	ldrh	r2, [r7, #2]
 800a0dc:	80da      	strh	r2, [r3, #6]
    }
 800a0de:	bf00      	nop
 800a0e0:	370c      	adds	r7, #12
 800a0e2:	46bd      	mov	sp, r7
 800a0e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0e8:	4770      	bx	lr

0800a0ea <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800a0ea:	b580      	push	{r7, lr}
 800a0ec:	b082      	sub	sp, #8
 800a0ee:	af00      	add	r7, sp, #0
 800a0f0:	6078      	str	r0, [r7, #4]
 800a0f2:	460b      	mov	r3, r1
 800a0f4:	807b      	strh	r3, [r7, #2]
 800a0f6:	4613      	mov	r3, r2
 800a0f8:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800a0fa:	687b      	ldr	r3, [r7, #4]
 800a0fc:	681b      	ldr	r3, [r3, #0]
 800a0fe:	3330      	adds	r3, #48	; 0x30
 800a100:	681b      	ldr	r3, [r3, #0]
 800a102:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800a106:	4611      	mov	r1, r2
 800a108:	6878      	ldr	r0, [r7, #4]
 800a10a:	4798      	blx	r3
        setY(y);
 800a10c:	687b      	ldr	r3, [r7, #4]
 800a10e:	681b      	ldr	r3, [r3, #0]
 800a110:	3334      	adds	r3, #52	; 0x34
 800a112:	681b      	ldr	r3, [r3, #0]
 800a114:	f9b7 2000 	ldrsh.w	r2, [r7]
 800a118:	4611      	mov	r1, r2
 800a11a:	6878      	ldr	r0, [r7, #4]
 800a11c:	4798      	blx	r3
    }
 800a11e:	bf00      	nop
 800a120:	3708      	adds	r7, #8
 800a122:	46bd      	mov	sp, r7
 800a124:	bd80      	pop	{r7, pc}

0800a126 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800a126:	b480      	push	{r7}
 800a128:	b083      	sub	sp, #12
 800a12a:	af00      	add	r7, sp, #0
 800a12c:	6078      	str	r0, [r7, #4]
 800a12e:	460b      	mov	r3, r1
 800a130:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800a132:	687b      	ldr	r3, [r7, #4]
 800a134:	887a      	ldrh	r2, [r7, #2]
 800a136:	811a      	strh	r2, [r3, #8]
    }
 800a138:	bf00      	nop
 800a13a:	370c      	adds	r7, #12
 800a13c:	46bd      	mov	sp, r7
 800a13e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a142:	4770      	bx	lr

0800a144 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800a144:	b480      	push	{r7}
 800a146:	b083      	sub	sp, #12
 800a148:	af00      	add	r7, sp, #0
 800a14a:	6078      	str	r0, [r7, #4]
 800a14c:	460b      	mov	r3, r1
 800a14e:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800a150:	687b      	ldr	r3, [r7, #4]
 800a152:	887a      	ldrh	r2, [r7, #2]
 800a154:	815a      	strh	r2, [r3, #10]
    }
 800a156:	bf00      	nop
 800a158:	370c      	adds	r7, #12
 800a15a:	46bd      	mov	sp, r7
 800a15c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a160:	4770      	bx	lr

0800a162 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800a162:	b480      	push	{r7}
 800a164:	b083      	sub	sp, #12
 800a166:	af00      	add	r7, sp, #0
 800a168:	6078      	str	r0, [r7, #4]
    {
    }
 800a16a:	bf00      	nop
 800a16c:	370c      	adds	r7, #12
 800a16e:	46bd      	mov	sp, r7
 800a170:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a174:	4770      	bx	lr

0800a176 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800a176:	b480      	push	{r7}
 800a178:	b083      	sub	sp, #12
 800a17a:	af00      	add	r7, sp, #0
 800a17c:	6078      	str	r0, [r7, #4]
 800a17e:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800a180:	bf00      	nop
 800a182:	370c      	adds	r7, #12
 800a184:	46bd      	mov	sp, r7
 800a186:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a18a:	4770      	bx	lr

0800a18c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800a18c:	b480      	push	{r7}
 800a18e:	b083      	sub	sp, #12
 800a190:	af00      	add	r7, sp, #0
 800a192:	6078      	str	r0, [r7, #4]
 800a194:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800a196:	bf00      	nop
 800a198:	370c      	adds	r7, #12
 800a19a:	46bd      	mov	sp, r7
 800a19c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1a0:	4770      	bx	lr

0800a1a2 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800a1a2:	b580      	push	{r7, lr}
 800a1a4:	b082      	sub	sp, #8
 800a1a6:	af00      	add	r7, sp, #0
 800a1a8:	6078      	str	r0, [r7, #4]
 800a1aa:	460b      	mov	r3, r1
 800a1ac:	807b      	strh	r3, [r7, #2]
 800a1ae:	4613      	mov	r3, r2
 800a1b0:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800a1b2:	687b      	ldr	r3, [r7, #4]
 800a1b4:	681b      	ldr	r3, [r3, #0]
 800a1b6:	3338      	adds	r3, #56	; 0x38
 800a1b8:	681b      	ldr	r3, [r3, #0]
 800a1ba:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800a1be:	4611      	mov	r1, r2
 800a1c0:	6878      	ldr	r0, [r7, #4]
 800a1c2:	4798      	blx	r3
        setHeight(height);
 800a1c4:	687b      	ldr	r3, [r7, #4]
 800a1c6:	681b      	ldr	r3, [r3, #0]
 800a1c8:	333c      	adds	r3, #60	; 0x3c
 800a1ca:	681b      	ldr	r3, [r3, #0]
 800a1cc:	f9b7 2000 	ldrsh.w	r2, [r7]
 800a1d0:	4611      	mov	r1, r2
 800a1d2:	6878      	ldr	r0, [r7, #4]
 800a1d4:	4798      	blx	r3
    }
 800a1d6:	bf00      	nop
 800a1d8:	3708      	adds	r7, #8
 800a1da:	46bd      	mov	sp, r7
 800a1dc:	bd80      	pop	{r7, pc}

0800a1de <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800a1de:	b480      	push	{r7}
 800a1e0:	b083      	sub	sp, #12
 800a1e2:	af00      	add	r7, sp, #0
 800a1e4:	6078      	str	r0, [r7, #4]
 800a1e6:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800a1e8:	bf00      	nop
 800a1ea:	370c      	adds	r7, #12
 800a1ec:	46bd      	mov	sp, r7
 800a1ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1f2:	4770      	bx	lr

0800a1f4 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800a1f4:	b480      	push	{r7}
 800a1f6:	b083      	sub	sp, #12
 800a1f8:	af00      	add	r7, sp, #0
 800a1fa:	6078      	str	r0, [r7, #4]
    {
    }
 800a1fc:	bf00      	nop
 800a1fe:	370c      	adds	r7, #12
 800a200:	46bd      	mov	sp, r7
 800a202:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a206:	4770      	bx	lr

0800a208 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800a208:	b480      	push	{r7}
 800a20a:	b083      	sub	sp, #12
 800a20c:	af00      	add	r7, sp, #0
 800a20e:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800a210:	687b      	ldr	r3, [r7, #4]
 800a212:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 800a216:	4618      	mov	r0, r3
 800a218:	370c      	adds	r7, #12
 800a21a:	46bd      	mov	sp, r7
 800a21c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a220:	4770      	bx	lr

0800a222 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800a222:	b480      	push	{r7}
 800a224:	b083      	sub	sp, #12
 800a226:	af00      	add	r7, sp, #0
 800a228:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800a22a:	687b      	ldr	r3, [r7, #4]
 800a22c:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 800a230:	4618      	mov	r0, r3
 800a232:	370c      	adds	r7, #12
 800a234:	46bd      	mov	sp, r7
 800a236:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a23a:	4770      	bx	lr

0800a23c <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800a23c:	b580      	push	{r7, lr}
 800a23e:	b082      	sub	sp, #8
 800a240:	af00      	add	r7, sp, #0
 800a242:	6078      	str	r0, [r7, #4]
 800a244:	460b      	mov	r3, r1
 800a246:	807b      	strh	r3, [r7, #2]
 800a248:	4613      	mov	r3, r2
 800a24a:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800a24c:	687b      	ldr	r3, [r7, #4]
 800a24e:	681b      	ldr	r3, [r3, #0]
 800a250:	3354      	adds	r3, #84	; 0x54
 800a252:	681b      	ldr	r3, [r3, #0]
 800a254:	8879      	ldrh	r1, [r7, #2]
 800a256:	687a      	ldr	r2, [r7, #4]
 800a258:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800a25c:	b292      	uxth	r2, r2
 800a25e:	1a8a      	subs	r2, r1, r2
 800a260:	b292      	uxth	r2, r2
 800a262:	b210      	sxth	r0, r2
 800a264:	8839      	ldrh	r1, [r7, #0]
 800a266:	687a      	ldr	r2, [r7, #4]
 800a268:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800a26c:	b292      	uxth	r2, r2
 800a26e:	1a8a      	subs	r2, r1, r2
 800a270:	b292      	uxth	r2, r2
 800a272:	b212      	sxth	r2, r2
 800a274:	4601      	mov	r1, r0
 800a276:	6878      	ldr	r0, [r7, #4]
 800a278:	4798      	blx	r3
    }
 800a27a:	bf00      	nop
 800a27c:	3708      	adds	r7, #8
 800a27e:	46bd      	mov	sp, r7
 800a280:	bd80      	pop	{r7, pc}

0800a282 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800a282:	b480      	push	{r7}
 800a284:	b083      	sub	sp, #12
 800a286:	af00      	add	r7, sp, #0
 800a288:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800a28a:	687b      	ldr	r3, [r7, #4]
 800a28c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a290:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800a292:	687b      	ldr	r3, [r7, #4]
 800a294:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a298:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800a29a:	687b      	ldr	r3, [r7, #4]
 800a29c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a2a0:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 800a2a2:	bf00      	nop
 800a2a4:	370c      	adds	r7, #12
 800a2a6:	46bd      	mov	sp, r7
 800a2a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2ac:	4770      	bx	lr

0800a2ae <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800a2ae:	b580      	push	{r7, lr}
 800a2b0:	b084      	sub	sp, #16
 800a2b2:	af00      	add	r7, sp, #0
 800a2b4:	60f8      	str	r0, [r7, #12]
 800a2b6:	60b9      	str	r1, [r7, #8]
 800a2b8:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800a2ba:	68f8      	ldr	r0, [r7, #12]
 800a2bc:	f7ff ffe1 	bl	800a282 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800a2c0:	687b      	ldr	r3, [r7, #4]
 800a2c2:	681a      	ldr	r2, [r3, #0]
 800a2c4:	68fb      	ldr	r3, [r7, #12]
 800a2c6:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800a2c8:	687b      	ldr	r3, [r7, #4]
 800a2ca:	68fa      	ldr	r2, [r7, #12]
 800a2cc:	601a      	str	r2, [r3, #0]
    }
 800a2ce:	bf00      	nop
 800a2d0:	3710      	adds	r7, #16
 800a2d2:	46bd      	mov	sp, r7
 800a2d4:	bd80      	pop	{r7, pc}

0800a2d6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800a2d6:	b580      	push	{r7, lr}
 800a2d8:	b084      	sub	sp, #16
 800a2da:	af00      	add	r7, sp, #0
 800a2dc:	60f8      	str	r0, [r7, #12]
 800a2de:	607b      	str	r3, [r7, #4]
 800a2e0:	460b      	mov	r3, r1
 800a2e2:	817b      	strh	r3, [r7, #10]
 800a2e4:	4613      	mov	r3, r2
 800a2e6:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800a2e8:	68fb      	ldr	r3, [r7, #12]
 800a2ea:	4618      	mov	r0, r3
 800a2ec:	f7ff ff8c 	bl	800a208 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800a2f0:	4603      	mov	r3, r0
 800a2f2:	2b00      	cmp	r3, #0
 800a2f4:	d008      	beq.n	800a308 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800a2f6:	68fb      	ldr	r3, [r7, #12]
 800a2f8:	4618      	mov	r0, r3
 800a2fa:	f7ff ff92 	bl	800a222 <_ZNK8touchgfx8Drawable11isTouchableEv>
 800a2fe:	4603      	mov	r3, r0
 800a300:	2b00      	cmp	r3, #0
 800a302:	d001      	beq.n	800a308 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800a304:	2301      	movs	r3, #1
 800a306:	e000      	b.n	800a30a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800a308:	2300      	movs	r3, #0
 800a30a:	2b00      	cmp	r3, #0
 800a30c:	d002      	beq.n	800a314 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800a30e:	68fa      	ldr	r2, [r7, #12]
 800a310:	687b      	ldr	r3, [r7, #4]
 800a312:	601a      	str	r2, [r3, #0]
        }
    }
 800a314:	bf00      	nop
 800a316:	3710      	adds	r7, #16
 800a318:	46bd      	mov	sp, r7
 800a31a:	bd80      	pop	{r7, pc}

0800a31c <_ZN8touchgfx9ContainerC1Ev>:
 * @see Drawable
 */
class Container : public Drawable
{
public:
    Container()
 800a31c:	b580      	push	{r7, lr}
 800a31e:	b082      	sub	sp, #8
 800a320:	af00      	add	r7, sp, #0
 800a322:	6078      	str	r0, [r7, #4]
        : Drawable(),
          firstChild(0)
 800a324:	687b      	ldr	r3, [r7, #4]
 800a326:	4618      	mov	r0, r3
 800a328:	f7ff fe32 	bl	8009f90 <_ZN8touchgfx8DrawableC1Ev>
 800a32c:	4a05      	ldr	r2, [pc, #20]	; (800a344 <_ZN8touchgfx9ContainerC1Ev+0x28>)
 800a32e:	687b      	ldr	r3, [r7, #4]
 800a330:	601a      	str	r2, [r3, #0]
 800a332:	687b      	ldr	r3, [r7, #4]
 800a334:	2200      	movs	r2, #0
 800a336:	629a      	str	r2, [r3, #40]	; 0x28
    {
    }
 800a338:	687b      	ldr	r3, [r7, #4]
 800a33a:	4618      	mov	r0, r3
 800a33c:	3708      	adds	r7, #8
 800a33e:	46bd      	mov	sp, r7
 800a340:	bd80      	pop	{r7, pc}
 800a342:	bf00      	nop
 800a344:	08025f28 	.word	0x08025f28

0800a348 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @return Pointer to the first drawable added to this container. If nothing has been
     *         added return zero.
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
 800a348:	b480      	push	{r7}
 800a34a:	b083      	sub	sp, #12
 800a34c:	af00      	add	r7, sp, #0
 800a34e:	6078      	str	r0, [r7, #4]
    {
        return firstChild;
 800a350:	687b      	ldr	r3, [r7, #4]
 800a352:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800a354:	4618      	mov	r0, r3
 800a356:	370c      	adds	r7, #12
 800a358:	46bd      	mov	sp, r7
 800a35a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a35e:	4770      	bx	lr

0800a360 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800a360:	b480      	push	{r7}
 800a362:	b083      	sub	sp, #12
 800a364:	af00      	add	r7, sp, #0
 800a366:	6078      	str	r0, [r7, #4]
 800a368:	460b      	mov	r3, r1
 800a36a:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800a36c:	4a06      	ldr	r2, [pc, #24]	; (800a388 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800a36e:	687b      	ldr	r3, [r7, #4]
 800a370:	601a      	str	r2, [r3, #0]
 800a372:	687b      	ldr	r3, [r7, #4]
 800a374:	887a      	ldrh	r2, [r7, #2]
 800a376:	809a      	strh	r2, [r3, #4]
    }
 800a378:	687b      	ldr	r3, [r7, #4]
 800a37a:	4618      	mov	r0, r3
 800a37c:	370c      	adds	r7, #12
 800a37e:	46bd      	mov	sp, r7
 800a380:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a384:	4770      	bx	lr
 800a386:	bf00      	nop
 800a388:	080255dc 	.word	0x080255dc

0800a38c <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800a38c:	b580      	push	{r7, lr}
 800a38e:	b082      	sub	sp, #8
 800a390:	af00      	add	r7, sp, #0
 800a392:	6078      	str	r0, [r7, #4]
 800a394:	687b      	ldr	r3, [r7, #4]
 800a396:	4618      	mov	r0, r3
 800a398:	f7ff fdfa 	bl	8009f90 <_ZN8touchgfx8DrawableC1Ev>
 800a39c:	4a03      	ldr	r2, [pc, #12]	; (800a3ac <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800a39e:	687b      	ldr	r3, [r7, #4]
 800a3a0:	601a      	str	r2, [r3, #0]
 800a3a2:	687b      	ldr	r3, [r7, #4]
 800a3a4:	4618      	mov	r0, r3
 800a3a6:	3708      	adds	r7, #8
 800a3a8:	46bd      	mov	sp, r7
 800a3aa:	bd80      	pop	{r7, pc}
 800a3ac:	0802582c 	.word	0x0802582c

0800a3b0 <_ZN8touchgfx6WidgetD1Ev>:
 800a3b0:	b580      	push	{r7, lr}
 800a3b2:	b082      	sub	sp, #8
 800a3b4:	af00      	add	r7, sp, #0
 800a3b6:	6078      	str	r0, [r7, #4]
 800a3b8:	4a05      	ldr	r2, [pc, #20]	; (800a3d0 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800a3ba:	687b      	ldr	r3, [r7, #4]
 800a3bc:	601a      	str	r2, [r3, #0]
 800a3be:	687b      	ldr	r3, [r7, #4]
 800a3c0:	4618      	mov	r0, r3
 800a3c2:	f7ff fe15 	bl	8009ff0 <_ZN8touchgfx8DrawableD1Ev>
 800a3c6:	687b      	ldr	r3, [r7, #4]
 800a3c8:	4618      	mov	r0, r3
 800a3ca:	3708      	adds	r7, #8
 800a3cc:	46bd      	mov	sp, r7
 800a3ce:	bd80      	pop	{r7, pc}
 800a3d0:	0802582c 	.word	0x0802582c

0800a3d4 <_ZN8touchgfx6WidgetD0Ev>:
 800a3d4:	b580      	push	{r7, lr}
 800a3d6:	b082      	sub	sp, #8
 800a3d8:	af00      	add	r7, sp, #0
 800a3da:	6078      	str	r0, [r7, #4]
 800a3dc:	6878      	ldr	r0, [r7, #4]
 800a3de:	f7ff ffe7 	bl	800a3b0 <_ZN8touchgfx6WidgetD1Ev>
 800a3e2:	2128      	movs	r1, #40	; 0x28
 800a3e4:	6878      	ldr	r0, [r7, #4]
 800a3e6:	f018 fa1c 	bl	8022822 <_ZdlPvj>
 800a3ea:	687b      	ldr	r3, [r7, #4]
 800a3ec:	4618      	mov	r0, r3
 800a3ee:	3708      	adds	r7, #8
 800a3f0:	46bd      	mov	sp, r7
 800a3f2:	bd80      	pop	{r7, pc}

0800a3f4 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800a3f4:	b580      	push	{r7, lr}
 800a3f6:	b082      	sub	sp, #8
 800a3f8:	af00      	add	r7, sp, #0
 800a3fa:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800a3fc:	687b      	ldr	r3, [r7, #4]
 800a3fe:	4618      	mov	r0, r3
 800a400:	2326      	movs	r3, #38	; 0x26
 800a402:	461a      	mov	r2, r3
 800a404:	2100      	movs	r1, #0
 800a406:	f019 f99c 	bl	8023742 <memset>
 800a40a:	687b      	ldr	r3, [r7, #4]
 800a40c:	4618      	mov	r0, r3
 800a40e:	f7ff ffbd 	bl	800a38c <_ZN8touchgfx6WidgetC1Ev>
 800a412:	4a16      	ldr	r2, [pc, #88]	; (800a46c <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 800a414:	687b      	ldr	r3, [r7, #4]
 800a416:	601a      	str	r2, [r3, #0]
 800a418:	687b      	ldr	r3, [r7, #4]
 800a41a:	3328      	adds	r3, #40	; 0x28
 800a41c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800a420:	4618      	mov	r0, r3
 800a422:	f7ff ff9d 	bl	800a360 <_ZN8touchgfx9TypedTextC1Et>
 800a426:	687b      	ldr	r3, [r7, #4]
 800a428:	3330      	adds	r3, #48	; 0x30
 800a42a:	2100      	movs	r1, #0
 800a42c:	4618      	mov	r0, r3
 800a42e:	f7ff fd69 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800a432:	687b      	ldr	r3, [r7, #4]
 800a434:	2200      	movs	r2, #0
 800a436:	869a      	strh	r2, [r3, #52]	; 0x34
 800a438:	687b      	ldr	r3, [r7, #4]
 800a43a:	22ff      	movs	r2, #255	; 0xff
 800a43c:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800a440:	687b      	ldr	r3, [r7, #4]
 800a442:	2200      	movs	r2, #0
 800a444:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 800a448:	687b      	ldr	r3, [r7, #4]
 800a44a:	2200      	movs	r2, #0
 800a44c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800a450:	687b      	ldr	r3, [r7, #4]
 800a452:	2200      	movs	r2, #0
 800a454:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800a458:	687b      	ldr	r3, [r7, #4]
 800a45a:	333c      	adds	r3, #60	; 0x3c
 800a45c:	4618      	mov	r0, r3
 800a45e:	f000 f8f0 	bl	800a642 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 800a462:	687b      	ldr	r3, [r7, #4]
 800a464:	4618      	mov	r0, r3
 800a466:	3708      	adds	r7, #8
 800a468:	46bd      	mov	sp, r7
 800a46a:	bd80      	pop	{r7, pc}
 800a46c:	08026110 	.word	0x08026110

0800a470 <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 800a470:	b590      	push	{r4, r7, lr}
 800a472:	b087      	sub	sp, #28
 800a474:	af00      	add	r7, sp, #0
 800a476:	6178      	str	r0, [r7, #20]
 800a478:	460b      	mov	r3, r1
 800a47a:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 800a47c:	697b      	ldr	r3, [r7, #20]
 800a47e:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800a482:	4611      	mov	r1, r2
 800a484:	4618      	mov	r0, r3
 800a486:	f7ff fe4e 	bl	800a126 <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 800a48a:	697b      	ldr	r3, [r7, #20]
 800a48c:	681b      	ldr	r3, [r3, #0]
 800a48e:	3384      	adds	r3, #132	; 0x84
 800a490:	681b      	ldr	r3, [r3, #0]
 800a492:	697c      	ldr	r4, [r7, #20]
 800a494:	463a      	mov	r2, r7
 800a496:	6979      	ldr	r1, [r7, #20]
 800a498:	4610      	mov	r0, r2
 800a49a:	4798      	blx	r3
 800a49c:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800a4a0:	463a      	mov	r2, r7
 800a4a2:	ca07      	ldmia	r2, {r0, r1, r2}
 800a4a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a4a8:	bf00      	nop
 800a4aa:	371c      	adds	r7, #28
 800a4ac:	46bd      	mov	sp, r7
 800a4ae:	bd90      	pop	{r4, r7, pc}

0800a4b0 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800a4b0:	b590      	push	{r4, r7, lr}
 800a4b2:	b087      	sub	sp, #28
 800a4b4:	af00      	add	r7, sp, #0
 800a4b6:	6178      	str	r0, [r7, #20]
 800a4b8:	460b      	mov	r3, r1
 800a4ba:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 800a4bc:	697b      	ldr	r3, [r7, #20]
 800a4be:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800a4c2:	4611      	mov	r1, r2
 800a4c4:	4618      	mov	r0, r3
 800a4c6:	f7ff fe3d 	bl	800a144 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 800a4ca:	697b      	ldr	r3, [r7, #20]
 800a4cc:	681b      	ldr	r3, [r3, #0]
 800a4ce:	3384      	adds	r3, #132	; 0x84
 800a4d0:	681b      	ldr	r3, [r3, #0]
 800a4d2:	697c      	ldr	r4, [r7, #20]
 800a4d4:	463a      	mov	r2, r7
 800a4d6:	6979      	ldr	r1, [r7, #20]
 800a4d8:	4610      	mov	r0, r2
 800a4da:	4798      	blx	r3
 800a4dc:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800a4e0:	463a      	mov	r2, r7
 800a4e2:	ca07      	ldmia	r2, {r0, r1, r2}
 800a4e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a4e8:	bf00      	nop
 800a4ea:	371c      	adds	r7, #28
 800a4ec:	46bd      	mov	sp, r7
 800a4ee:	bd90      	pop	{r4, r7, pc}

0800a4f0 <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 800a4f0:	b580      	push	{r7, lr}
 800a4f2:	b082      	sub	sp, #8
 800a4f4:	af00      	add	r7, sp, #0
 800a4f6:	6078      	str	r0, [r7, #4]
 800a4f8:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 800a4fa:	6878      	ldr	r0, [r7, #4]
 800a4fc:	f7ff fd11 	bl	8009f22 <_ZN8touchgfx4RectC1Ev>
    }
 800a500:	6878      	ldr	r0, [r7, #4]
 800a502:	3708      	adds	r7, #8
 800a504:	46bd      	mov	sp, r7
 800a506:	bd80      	pop	{r7, pc}

0800a508 <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 800a508:	b480      	push	{r7}
 800a50a:	b083      	sub	sp, #12
 800a50c:	af00      	add	r7, sp, #0
 800a50e:	6078      	str	r0, [r7, #4]
 800a510:	460b      	mov	r3, r1
 800a512:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800a514:	687b      	ldr	r3, [r7, #4]
 800a516:	78fa      	ldrb	r2, [r7, #3]
 800a518:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
    }
 800a51c:	bf00      	nop
 800a51e:	370c      	adds	r7, #12
 800a520:	46bd      	mov	sp, r7
 800a522:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a526:	4770      	bx	lr

0800a528 <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 800a528:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a52a:	b085      	sub	sp, #20
 800a52c:	af00      	add	r7, sp, #0
 800a52e:	6078      	str	r0, [r7, #4]
 800a530:	460b      	mov	r3, r1
 800a532:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800a534:	687e      	ldr	r6, [r7, #4]
 800a536:	687b      	ldr	r3, [r7, #4]
 800a538:	681b      	ldr	r3, [r3, #0]
 800a53a:	3334      	adds	r3, #52	; 0x34
 800a53c:	681c      	ldr	r4, [r3, #0]
 800a53e:	887d      	ldrh	r5, [r7, #2]
 800a540:	6878      	ldr	r0, [r7, #4]
 800a542:	f000 f867 	bl	800a614 <_ZNK8touchgfx8TextArea12getTypedTextEv>
 800a546:	4603      	mov	r3, r0
 800a548:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800a54a:	4b1c      	ldr	r3, [pc, #112]	; (800a5bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800a54c:	681b      	ldr	r3, [r3, #0]
 800a54e:	2b00      	cmp	r3, #0
 800a550:	d105      	bne.n	800a55e <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 800a552:	4b1b      	ldr	r3, [pc, #108]	; (800a5c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 800a554:	4a1b      	ldr	r2, [pc, #108]	; (800a5c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800a556:	216c      	movs	r1, #108	; 0x6c
 800a558:	481b      	ldr	r0, [pc, #108]	; (800a5c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800a55a:	f018 feed 	bl	8023338 <__assert_func>
 800a55e:	68fb      	ldr	r3, [r7, #12]
 800a560:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 800a562:	68bb      	ldr	r3, [r7, #8]
 800a564:	889a      	ldrh	r2, [r3, #4]
 800a566:	4b19      	ldr	r3, [pc, #100]	; (800a5cc <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 800a568:	881b      	ldrh	r3, [r3, #0]
 800a56a:	429a      	cmp	r2, r3
 800a56c:	bf34      	ite	cc
 800a56e:	2301      	movcc	r3, #1
 800a570:	2300      	movcs	r3, #0
 800a572:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800a574:	2b00      	cmp	r3, #0
 800a576:	d105      	bne.n	800a584 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 800a578:	4b15      	ldr	r3, [pc, #84]	; (800a5d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 800a57a:	4a12      	ldr	r2, [pc, #72]	; (800a5c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800a57c:	216d      	movs	r1, #109	; 0x6d
 800a57e:	4812      	ldr	r0, [pc, #72]	; (800a5c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800a580:	f018 feda 	bl	8023338 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800a584:	4b13      	ldr	r3, [pc, #76]	; (800a5d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 800a586:	681a      	ldr	r2, [r3, #0]
 800a588:	4b0c      	ldr	r3, [pc, #48]	; (800a5bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800a58a:	6819      	ldr	r1, [r3, #0]
 800a58c:	68fb      	ldr	r3, [r7, #12]
 800a58e:	889b      	ldrh	r3, [r3, #4]
 800a590:	005b      	lsls	r3, r3, #1
 800a592:	440b      	add	r3, r1
 800a594:	781b      	ldrb	r3, [r3, #0]
 800a596:	009b      	lsls	r3, r3, #2
 800a598:	4413      	add	r3, r2
 800a59a:	681b      	ldr	r3, [r3, #0]
 800a59c:	681a      	ldr	r2, [r3, #0]
 800a59e:	3230      	adds	r2, #48	; 0x30
 800a5a0:	6812      	ldr	r2, [r2, #0]
 800a5a2:	4618      	mov	r0, r3
 800a5a4:	4790      	blx	r2
 800a5a6:	4603      	mov	r3, r0
 800a5a8:	1aeb      	subs	r3, r5, r3
 800a5aa:	b29b      	uxth	r3, r3
 800a5ac:	b21b      	sxth	r3, r3
 800a5ae:	4619      	mov	r1, r3
 800a5b0:	4630      	mov	r0, r6
 800a5b2:	47a0      	blx	r4
    }
 800a5b4:	bf00      	nop
 800a5b6:	3714      	adds	r7, #20
 800a5b8:	46bd      	mov	sp, r7
 800a5ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a5bc:	2003247c 	.word	0x2003247c
 800a5c0:	080246c4 	.word	0x080246c4
 800a5c4:	08024708 	.word	0x08024708
 800a5c8:	08024744 	.word	0x08024744
 800a5cc:	20032480 	.word	0x20032480
 800a5d0:	08024788 	.word	0x08024788
 800a5d4:	20032484 	.word	0x20032484

0800a5d8 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800a5d8:	b580      	push	{r7, lr}
 800a5da:	b082      	sub	sp, #8
 800a5dc:	af00      	add	r7, sp, #0
 800a5de:	6078      	str	r0, [r7, #4]
 800a5e0:	460b      	mov	r3, r1
 800a5e2:	807b      	strh	r3, [r7, #2]
 800a5e4:	4613      	mov	r3, r2
 800a5e6:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800a5e8:	687a      	ldr	r2, [r7, #4]
 800a5ea:	687b      	ldr	r3, [r7, #4]
 800a5ec:	681b      	ldr	r3, [r3, #0]
 800a5ee:	3330      	adds	r3, #48	; 0x30
 800a5f0:	681b      	ldr	r3, [r3, #0]
 800a5f2:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800a5f6:	4610      	mov	r0, r2
 800a5f8:	4798      	blx	r3
        setBaselineY(baselineY);
 800a5fa:	687b      	ldr	r3, [r7, #4]
 800a5fc:	681b      	ldr	r3, [r3, #0]
 800a5fe:	3364      	adds	r3, #100	; 0x64
 800a600:	681b      	ldr	r3, [r3, #0]
 800a602:	f9b7 2000 	ldrsh.w	r2, [r7]
 800a606:	4611      	mov	r1, r2
 800a608:	6878      	ldr	r0, [r7, #4]
 800a60a:	4798      	blx	r3
    }
 800a60c:	bf00      	nop
 800a60e:	3708      	adds	r7, #8
 800a610:	46bd      	mov	sp, r7
 800a612:	bd80      	pop	{r7, pc}

0800a614 <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 800a614:	b480      	push	{r7}
 800a616:	b083      	sub	sp, #12
 800a618:	af00      	add	r7, sp, #0
 800a61a:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 800a61c:	687b      	ldr	r3, [r7, #4]
 800a61e:	3328      	adds	r3, #40	; 0x28
    }
 800a620:	4618      	mov	r0, r3
 800a622:	370c      	adds	r7, #12
 800a624:	46bd      	mov	sp, r7
 800a626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a62a:	4770      	bx	lr

0800a62c <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 800a62c:	b480      	push	{r7}
 800a62e:	b083      	sub	sp, #12
 800a630:	af00      	add	r7, sp, #0
 800a632:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800a634:	2300      	movs	r3, #0
    }
 800a636:	4618      	mov	r0, r3
 800a638:	370c      	adds	r7, #12
 800a63a:	46bd      	mov	sp, r7
 800a63c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a640:	4770      	bx	lr

0800a642 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800a642:	b580      	push	{r7, lr}
 800a644:	b084      	sub	sp, #16
 800a646:	af02      	add	r7, sp, #8
 800a648:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800a64a:	6878      	ldr	r0, [r7, #4]
 800a64c:	f04f 33ff 	mov.w	r3, #4294967295
 800a650:	9300      	str	r3, [sp, #0]
 800a652:	f04f 33ff 	mov.w	r3, #4294967295
 800a656:	2200      	movs	r2, #0
 800a658:	2100      	movs	r1, #0
 800a65a:	f7ff fc79 	bl	8009f50 <_ZN8touchgfx4RectC1Essss>
              text(0)
 800a65e:	687b      	ldr	r3, [r7, #4]
 800a660:	2200      	movs	r2, #0
 800a662:	609a      	str	r2, [r3, #8]
        {
        }
 800a664:	687b      	ldr	r3, [r7, #4]
 800a666:	4618      	mov	r0, r3
 800a668:	3708      	adds	r7, #8
 800a66a:	46bd      	mov	sp, r7
 800a66c:	bd80      	pop	{r7, pc}
	...

0800a670 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800a670:	b580      	push	{r7, lr}
 800a672:	b082      	sub	sp, #8
 800a674:	af00      	add	r7, sp, #0
 800a676:	6078      	str	r0, [r7, #4]
 800a678:	4a08      	ldr	r2, [pc, #32]	; (800a69c <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800a67a:	687b      	ldr	r3, [r7, #4]
 800a67c:	601a      	str	r2, [r3, #0]
 800a67e:	687b      	ldr	r3, [r7, #4]
 800a680:	3328      	adds	r3, #40	; 0x28
 800a682:	4618      	mov	r0, r3
 800a684:	f7fe fcae 	bl	8008fe4 <_ZN8touchgfx9TypedTextD1Ev>
 800a688:	687b      	ldr	r3, [r7, #4]
 800a68a:	4618      	mov	r0, r3
 800a68c:	f7ff fe90 	bl	800a3b0 <_ZN8touchgfx6WidgetD1Ev>
 800a690:	687b      	ldr	r3, [r7, #4]
 800a692:	4618      	mov	r0, r3
 800a694:	3708      	adds	r7, #8
 800a696:	46bd      	mov	sp, r7
 800a698:	bd80      	pop	{r7, pc}
 800a69a:	bf00      	nop
 800a69c:	08026110 	.word	0x08026110

0800a6a0 <_ZN8touchgfx8TextAreaD0Ev>:
 800a6a0:	b580      	push	{r7, lr}
 800a6a2:	b082      	sub	sp, #8
 800a6a4:	af00      	add	r7, sp, #0
 800a6a6:	6078      	str	r0, [r7, #4]
 800a6a8:	6878      	ldr	r0, [r7, #4]
 800a6aa:	f7ff ffe1 	bl	800a670 <_ZN8touchgfx8TextAreaD1Ev>
 800a6ae:	2148      	movs	r1, #72	; 0x48
 800a6b0:	6878      	ldr	r0, [r7, #4]
 800a6b2:	f018 f8b6 	bl	8022822 <_ZdlPvj>
 800a6b6:	687b      	ldr	r3, [r7, #4]
 800a6b8:	4618      	mov	r0, r3
 800a6ba:	3708      	adds	r7, #8
 800a6bc:	46bd      	mov	sp, r7
 800a6be:	bd80      	pop	{r7, pc}

0800a6c0 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 800a6c0:	b580      	push	{r7, lr}
 800a6c2:	b082      	sub	sp, #8
 800a6c4:	af00      	add	r7, sp, #0
 800a6c6:	6078      	str	r0, [r7, #4]
        : TextArea()
 800a6c8:	687b      	ldr	r3, [r7, #4]
 800a6ca:	4618      	mov	r0, r3
 800a6cc:	f7ff fe92 	bl	800a3f4 <_ZN8touchgfx8TextAreaC1Ev>
 800a6d0:	4a03      	ldr	r2, [pc, #12]	; (800a6e0 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 800a6d2:	687b      	ldr	r3, [r7, #4]
 800a6d4:	601a      	str	r2, [r3, #0]
    {
    }
 800a6d6:	687b      	ldr	r3, [r7, #4]
 800a6d8:	4618      	mov	r0, r3
 800a6da:	3708      	adds	r7, #8
 800a6dc:	46bd      	mov	sp, r7
 800a6de:	bd80      	pop	{r7, pc}
 800a6e0:	08026208 	.word	0x08026208

0800a6e4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 800a6e4:	b580      	push	{r7, lr}
 800a6e6:	b082      	sub	sp, #8
 800a6e8:	af00      	add	r7, sp, #0
 800a6ea:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 800a6ec:	687b      	ldr	r3, [r7, #4]
 800a6ee:	4618      	mov	r0, r3
 800a6f0:	f7ff fc9e 	bl	800a030 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800a6f4:	bf00      	nop
 800a6f6:	3708      	adds	r7, #8
 800a6f8:	46bd      	mov	sp, r7
 800a6fa:	bd80      	pop	{r7, pc}

0800a6fc <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 800a6fc:	b580      	push	{r7, lr}
 800a6fe:	b082      	sub	sp, #8
 800a700:	af00      	add	r7, sp, #0
 800a702:	6078      	str	r0, [r7, #4]
 800a704:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 800a706:	6878      	ldr	r0, [r7, #4]
 800a708:	f7ff ff9b 	bl	800a642 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800a70c:	6878      	ldr	r0, [r7, #4]
 800a70e:	3708      	adds	r7, #8
 800a710:	46bd      	mov	sp, r7
 800a712:	bd80      	pop	{r7, pc}

0800a714 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 800a714:	b580      	push	{r7, lr}
 800a716:	b082      	sub	sp, #8
 800a718:	af00      	add	r7, sp, #0
 800a71a:	6078      	str	r0, [r7, #4]
 800a71c:	4a05      	ldr	r2, [pc, #20]	; (800a734 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 800a71e:	687b      	ldr	r3, [r7, #4]
 800a720:	601a      	str	r2, [r3, #0]
 800a722:	687b      	ldr	r3, [r7, #4]
 800a724:	4618      	mov	r0, r3
 800a726:	f7ff ffa3 	bl	800a670 <_ZN8touchgfx8TextAreaD1Ev>
 800a72a:	687b      	ldr	r3, [r7, #4]
 800a72c:	4618      	mov	r0, r3
 800a72e:	3708      	adds	r7, #8
 800a730:	46bd      	mov	sp, r7
 800a732:	bd80      	pop	{r7, pc}
 800a734:	08026208 	.word	0x08026208

0800a738 <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 800a738:	b580      	push	{r7, lr}
 800a73a:	b082      	sub	sp, #8
 800a73c:	af00      	add	r7, sp, #0
 800a73e:	6078      	str	r0, [r7, #4]
 800a740:	6878      	ldr	r0, [r7, #4]
 800a742:	f7ff ffe7 	bl	800a714 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800a746:	2148      	movs	r1, #72	; 0x48
 800a748:	6878      	ldr	r0, [r7, #4]
 800a74a:	f018 f86a 	bl	8022822 <_ZdlPvj>
 800a74e:	687b      	ldr	r3, [r7, #4]
 800a750:	4618      	mov	r0, r3
 800a752:	3708      	adds	r7, #8
 800a754:	46bd      	mov	sp, r7
 800a756:	bd80      	pop	{r7, pc}

0800a758 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 800a758:	b580      	push	{r7, lr}
 800a75a:	b082      	sub	sp, #8
 800a75c:	af00      	add	r7, sp, #0
 800a75e:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 800a760:	687b      	ldr	r3, [r7, #4]
 800a762:	4618      	mov	r0, r3
 800a764:	f7ff ffac 	bl	800a6c0 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 800a768:	4a05      	ldr	r2, [pc, #20]	; (800a780 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800a76a:	687b      	ldr	r3, [r7, #4]
 800a76c:	601a      	str	r2, [r3, #0]
 800a76e:	687b      	ldr	r3, [r7, #4]
 800a770:	2200      	movs	r2, #0
 800a772:	649a      	str	r2, [r3, #72]	; 0x48
    {
    }
 800a774:	687b      	ldr	r3, [r7, #4]
 800a776:	4618      	mov	r0, r3
 800a778:	3708      	adds	r7, #8
 800a77a:	46bd      	mov	sp, r7
 800a77c:	bd80      	pop	{r7, pc}
 800a77e:	bf00      	nop
 800a780:	0802579c 	.word	0x0802579c

0800a784 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 800a784:	b480      	push	{r7}
 800a786:	b083      	sub	sp, #12
 800a788:	af00      	add	r7, sp, #0
 800a78a:	6078      	str	r0, [r7, #4]
 800a78c:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 800a78e:	687b      	ldr	r3, [r7, #4]
 800a790:	683a      	ldr	r2, [r7, #0]
 800a792:	649a      	str	r2, [r3, #72]	; 0x48
    }
 800a794:	bf00      	nop
 800a796:	370c      	adds	r7, #12
 800a798:	46bd      	mov	sp, r7
 800a79a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a79e:	4770      	bx	lr

0800a7a0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 800a7a0:	b480      	push	{r7}
 800a7a2:	b083      	sub	sp, #12
 800a7a4:	af00      	add	r7, sp, #0
 800a7a6:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 800a7a8:	687b      	ldr	r3, [r7, #4]
 800a7aa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    }
 800a7ac:	4618      	mov	r0, r3
 800a7ae:	370c      	adds	r7, #12
 800a7b0:	46bd      	mov	sp, r7
 800a7b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7b6:	4770      	bx	lr

0800a7b8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800a7b8:	b580      	push	{r7, lr}
 800a7ba:	b082      	sub	sp, #8
 800a7bc:	af00      	add	r7, sp, #0
 800a7be:	6078      	str	r0, [r7, #4]
 800a7c0:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 800a7c2:	6839      	ldr	r1, [r7, #0]
 800a7c4:	6878      	ldr	r0, [r7, #4]
 800a7c6:	f7ff ffdd 	bl	800a784 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 800a7ca:	bf00      	nop
 800a7cc:	3708      	adds	r7, #8
 800a7ce:	46bd      	mov	sp, r7
 800a7d0:	bd80      	pop	{r7, pc}
	...

0800a7d4 <_ZN8touchgfx9ContainerD1Ev>:
class Container : public Drawable
 800a7d4:	b580      	push	{r7, lr}
 800a7d6:	b082      	sub	sp, #8
 800a7d8:	af00      	add	r7, sp, #0
 800a7da:	6078      	str	r0, [r7, #4]
 800a7dc:	4a05      	ldr	r2, [pc, #20]	; (800a7f4 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800a7de:	687b      	ldr	r3, [r7, #4]
 800a7e0:	601a      	str	r2, [r3, #0]
 800a7e2:	687b      	ldr	r3, [r7, #4]
 800a7e4:	4618      	mov	r0, r3
 800a7e6:	f7ff fc03 	bl	8009ff0 <_ZN8touchgfx8DrawableD1Ev>
 800a7ea:	687b      	ldr	r3, [r7, #4]
 800a7ec:	4618      	mov	r0, r3
 800a7ee:	3708      	adds	r7, #8
 800a7f0:	46bd      	mov	sp, r7
 800a7f2:	bd80      	pop	{r7, pc}
 800a7f4:	08025f28 	.word	0x08025f28

0800a7f8 <_ZN8touchgfx9ContainerD0Ev>:
 800a7f8:	b580      	push	{r7, lr}
 800a7fa:	b082      	sub	sp, #8
 800a7fc:	af00      	add	r7, sp, #0
 800a7fe:	6078      	str	r0, [r7, #4]
 800a800:	6878      	ldr	r0, [r7, #4]
 800a802:	f7ff ffe7 	bl	800a7d4 <_ZN8touchgfx9ContainerD1Ev>
 800a806:	212c      	movs	r1, #44	; 0x2c
 800a808:	6878      	ldr	r0, [r7, #4]
 800a80a:	f018 f80a 	bl	8022822 <_ZdlPvj>
 800a80e:	687b      	ldr	r3, [r7, #4]
 800a810:	4618      	mov	r0, r3
 800a812:	3708      	adds	r7, #8
 800a814:	46bd      	mov	sp, r7
 800a816:	bd80      	pop	{r7, pc}

0800a818 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800a818:	b580      	push	{r7, lr}
 800a81a:	b082      	sub	sp, #8
 800a81c:	af00      	add	r7, sp, #0
 800a81e:	6078      	str	r0, [r7, #4]
 800a820:	4a05      	ldr	r2, [pc, #20]	; (800a838 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800a822:	687b      	ldr	r3, [r7, #4]
 800a824:	601a      	str	r2, [r3, #0]
 800a826:	687b      	ldr	r3, [r7, #4]
 800a828:	4618      	mov	r0, r3
 800a82a:	f7ff ff73 	bl	800a714 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800a82e:	687b      	ldr	r3, [r7, #4]
 800a830:	4618      	mov	r0, r3
 800a832:	3708      	adds	r7, #8
 800a834:	46bd      	mov	sp, r7
 800a836:	bd80      	pop	{r7, pc}
 800a838:	0802579c 	.word	0x0802579c

0800a83c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800a83c:	b580      	push	{r7, lr}
 800a83e:	b082      	sub	sp, #8
 800a840:	af00      	add	r7, sp, #0
 800a842:	6078      	str	r0, [r7, #4]
 800a844:	6878      	ldr	r0, [r7, #4]
 800a846:	f7ff ffe7 	bl	800a818 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800a84a:	214c      	movs	r1, #76	; 0x4c
 800a84c:	6878      	ldr	r0, [r7, #4]
 800a84e:	f017 ffe8 	bl	8022822 <_ZdlPvj>
 800a852:	687b      	ldr	r3, [r7, #4]
 800a854:	4618      	mov	r0, r3
 800a856:	3708      	adds	r7, #8
 800a858:	46bd      	mov	sp, r7
 800a85a:	bd80      	pop	{r7, pc}

0800a85c <_ZN16FilterParamsBaseC1Ev>:
/*********************************************************************************/
#include <gui_generated/containers/FilterParamsBase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

FilterParamsBase::FilterParamsBase()
 800a85c:	b590      	push	{r4, r7, lr}
 800a85e:	b0ab      	sub	sp, #172	; 0xac
 800a860:	af02      	add	r7, sp, #8
 800a862:	6178      	str	r0, [r7, #20]
 800a864:	697b      	ldr	r3, [r7, #20]
 800a866:	4618      	mov	r0, r3
 800a868:	f7ff fd58 	bl	800a31c <_ZN8touchgfx9ContainerC1Ev>
 800a86c:	4a9e      	ldr	r2, [pc, #632]	; (800aae8 <_ZN16FilterParamsBaseC1Ev+0x28c>)
 800a86e:	697b      	ldr	r3, [r7, #20]
 800a870:	601a      	str	r2, [r3, #0]
 800a872:	697b      	ldr	r3, [r7, #20]
 800a874:	332c      	adds	r3, #44	; 0x2c
 800a876:	4618      	mov	r0, r3
 800a878:	f7ff ff6e 	bl	800a758 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800a87c:	697b      	ldr	r3, [r7, #20]
 800a87e:	3378      	adds	r3, #120	; 0x78
 800a880:	4618      	mov	r0, r3
 800a882:	f7ff ff69 	bl	800a758 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800a886:	697b      	ldr	r3, [r7, #20]
 800a888:	33c4      	adds	r3, #196	; 0xc4
 800a88a:	4618      	mov	r0, r3
 800a88c:	f7ff ff64 	bl	800a758 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
{
    setWidth(96);
 800a890:	697b      	ldr	r3, [r7, #20]
 800a892:	2160      	movs	r1, #96	; 0x60
 800a894:	4618      	mov	r0, r3
 800a896:	f7ff fc46 	bl	800a126 <_ZN8touchgfx8Drawable8setWidthEs>
    setHeight(45);
 800a89a:	697b      	ldr	r3, [r7, #20]
 800a89c:	212d      	movs	r1, #45	; 0x2d
 800a89e:	4618      	mov	r0, r3
 800a8a0:	f7ff fc50 	bl	800a144 <_ZN8touchgfx8Drawable9setHeightEs>
    f0.setPosition(6, 0, 84, 15);
 800a8a4:	697b      	ldr	r3, [r7, #20]
 800a8a6:	f103 002c 	add.w	r0, r3, #44	; 0x2c
 800a8aa:	230f      	movs	r3, #15
 800a8ac:	9300      	str	r3, [sp, #0]
 800a8ae:	2354      	movs	r3, #84	; 0x54
 800a8b0:	2200      	movs	r2, #0
 800a8b2:	2106      	movs	r1, #6
 800a8b4:	f7ff fbda 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    f0.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800a8b8:	697b      	ldr	r3, [r7, #20]
 800a8ba:	f103 042c 	add.w	r4, r3, #44	; 0x2c
 800a8be:	23ff      	movs	r3, #255	; 0xff
 800a8c0:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 800a8c4:	23ff      	movs	r3, #255	; 0xff
 800a8c6:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 800a8ca:	23ff      	movs	r3, #255	; 0xff
 800a8cc:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800a8d0:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800a8d4:	041b      	lsls	r3, r3, #16
 800a8d6:	461a      	mov	r2, r3
 800a8d8:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800a8dc:	021b      	lsls	r3, r3, #8
 800a8de:	431a      	orrs	r2, r3
 800a8e0:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 800a8e4:	4313      	orrs	r3, r2
 800a8e6:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800a8ea:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800a8ee:	4611      	mov	r1, r2
 800a8f0:	4618      	mov	r0, r3
 800a8f2:	f7ff fb07 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800a8f6:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a8f8:	66bc      	str	r4, [r7, #104]	; 0x68
 800a8fa:	627b      	str	r3, [r7, #36]	; 0x24
        color = newColor;
 800a8fc:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800a8fe:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a900:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800a902:	bf00      	nop
    f0.setLinespacing(0);
 800a904:	697b      	ldr	r3, [r7, #20]
 800a906:	332c      	adds	r3, #44	; 0x2c
 800a908:	673b      	str	r3, [r7, #112]	; 0x70
 800a90a:	2300      	movs	r3, #0
 800a90c:	f8a7 306e 	strh.w	r3, [r7, #110]	; 0x6e
        linespace = space;
 800a910:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800a912:	f8b7 206e 	ldrh.w	r2, [r7, #110]	; 0x6e
 800a916:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800a918:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800a91a:	681b      	ldr	r3, [r3, #0]
 800a91c:	3384      	adds	r3, #132	; 0x84
 800a91e:	681b      	ldr	r3, [r3, #0]
 800a920:	6f3c      	ldr	r4, [r7, #112]	; 0x70
 800a922:	463a      	mov	r2, r7
 800a924:	6f39      	ldr	r1, [r7, #112]	; 0x70
 800a926:	4610      	mov	r0, r2
 800a928:	4798      	blx	r3
 800a92a:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800a92e:	463a      	mov	r2, r7
 800a930:	ca07      	ldmia	r2, {r0, r1, r2}
 800a932:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a936:	bf00      	nop
    Unicode::snprintf(f0Buffer, F0_SIZE, "%s", touchgfx::TypedText(T_RESOURCEID1).getText());
 800a938:	697b      	ldr	r3, [r7, #20]
 800a93a:	f503 7488 	add.w	r4, r3, #272	; 0x110
 800a93e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800a942:	210d      	movs	r1, #13
 800a944:	4618      	mov	r0, r3
 800a946:	f7ff fd0b 	bl	800a360 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800a94a:	4b68      	ldr	r3, [pc, #416]	; (800aaec <_ZN16FilterParamsBaseC1Ev+0x290>)
 800a94c:	681b      	ldr	r3, [r3, #0]
 800a94e:	2b00      	cmp	r3, #0
 800a950:	d105      	bne.n	800a95e <_ZN16FilterParamsBaseC1Ev+0x102>
 800a952:	4b67      	ldr	r3, [pc, #412]	; (800aaf0 <_ZN16FilterParamsBaseC1Ev+0x294>)
 800a954:	4a67      	ldr	r2, [pc, #412]	; (800aaf4 <_ZN16FilterParamsBaseC1Ev+0x298>)
 800a956:	2160      	movs	r1, #96	; 0x60
 800a958:	4867      	ldr	r0, [pc, #412]	; (800aaf8 <_ZN16FilterParamsBaseC1Ev+0x29c>)
 800a95a:	f018 fced 	bl	8023338 <__assert_func>
 800a95e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800a962:	677b      	str	r3, [r7, #116]	; 0x74
        return typedTextId < numberOfTypedTexts;
 800a964:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800a966:	889a      	ldrh	r2, [r3, #4]
 800a968:	4b64      	ldr	r3, [pc, #400]	; (800aafc <_ZN16FilterParamsBaseC1Ev+0x2a0>)
 800a96a:	881b      	ldrh	r3, [r3, #0]
 800a96c:	429a      	cmp	r2, r3
 800a96e:	bf34      	ite	cc
 800a970:	2301      	movcc	r3, #1
 800a972:	2300      	movcs	r3, #0
 800a974:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800a976:	2b00      	cmp	r3, #0
 800a978:	d105      	bne.n	800a986 <_ZN16FilterParamsBaseC1Ev+0x12a>
 800a97a:	4b61      	ldr	r3, [pc, #388]	; (800ab00 <_ZN16FilterParamsBaseC1Ev+0x2a4>)
 800a97c:	4a5d      	ldr	r2, [pc, #372]	; (800aaf4 <_ZN16FilterParamsBaseC1Ev+0x298>)
 800a97e:	2161      	movs	r1, #97	; 0x61
 800a980:	485d      	ldr	r0, [pc, #372]	; (800aaf8 <_ZN16FilterParamsBaseC1Ev+0x29c>)
 800a982:	f018 fcd9 	bl	8023338 <__assert_func>
        return texts->getText(typedTextId);
 800a986:	4b5f      	ldr	r3, [pc, #380]	; (800ab04 <_ZN16FilterParamsBaseC1Ev+0x2a8>)
 800a988:	681b      	ldr	r3, [r3, #0]
 800a98a:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
 800a98c:	4611      	mov	r1, r2
 800a98e:	4618      	mov	r0, r3
 800a990:	f001 fdb2 	bl	800c4f8 <_ZNK8touchgfx5Texts7getTextEt>
 800a994:	4603      	mov	r3, r0
 800a996:	bf00      	nop
 800a998:	4a5b      	ldr	r2, [pc, #364]	; (800ab08 <_ZN16FilterParamsBaseC1Ev+0x2ac>)
 800a99a:	2120      	movs	r1, #32
 800a99c:	4620      	mov	r0, r4
 800a99e:	f00a fa3d 	bl	8014e1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800a9a2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800a9a6:	4618      	mov	r0, r3
 800a9a8:	f7fe fb1c 	bl	8008fe4 <_ZN8touchgfx9TypedTextD1Ev>
    f0.setWildcard(f0Buffer);
 800a9ac:	697b      	ldr	r3, [r7, #20]
 800a9ae:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 800a9b2:	697b      	ldr	r3, [r7, #20]
 800a9b4:	f503 7388 	add.w	r3, r3, #272	; 0x110
 800a9b8:	4619      	mov	r1, r3
 800a9ba:	4610      	mov	r0, r2
 800a9bc:	f7ff fefc 	bl	800a7b8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    f0.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TDSP));
 800a9c0:	697b      	ldr	r3, [r7, #20]
 800a9c2:	f103 042c 	add.w	r4, r3, #44	; 0x2c
 800a9c6:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800a9ca:	210e      	movs	r1, #14
 800a9cc:	4618      	mov	r0, r3
 800a9ce:	f7ff fcc7 	bl	800a360 <_ZN8touchgfx9TypedTextC1Et>
 800a9d2:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800a9d6:	4619      	mov	r1, r3
 800a9d8:	4620      	mov	r0, r4
 800a9da:	f005 fc5f 	bl	801029c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a9de:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800a9e2:	4618      	mov	r0, r3
 800a9e4:	f7fe fafe 	bl	8008fe4 <_ZN8touchgfx9TypedTextD1Ev>
    add(f0);
 800a9e8:	697a      	ldr	r2, [r7, #20]
 800a9ea:	697b      	ldr	r3, [r7, #20]
 800a9ec:	332c      	adds	r3, #44	; 0x2c
 800a9ee:	4619      	mov	r1, r3
 800a9f0:	4610      	mov	r0, r2
 800a9f2:	f003 ff67 	bl	800e8c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    G.setPosition(12, 15, 84, 15);
 800a9f6:	697b      	ldr	r3, [r7, #20]
 800a9f8:	f103 0078 	add.w	r0, r3, #120	; 0x78
 800a9fc:	230f      	movs	r3, #15
 800a9fe:	9300      	str	r3, [sp, #0]
 800aa00:	2354      	movs	r3, #84	; 0x54
 800aa02:	220f      	movs	r2, #15
 800aa04:	210c      	movs	r1, #12
 800aa06:	f7ff fb31 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    G.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800aa0a:	697b      	ldr	r3, [r7, #20]
 800aa0c:	f103 0478 	add.w	r4, r3, #120	; 0x78
 800aa10:	23ff      	movs	r3, #255	; 0xff
 800aa12:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 800aa16:	23ff      	movs	r3, #255	; 0xff
 800aa18:	f887 307a 	strb.w	r3, [r7, #122]	; 0x7a
 800aa1c:	23ff      	movs	r3, #255	; 0xff
 800aa1e:	f887 3079 	strb.w	r3, [r7, #121]	; 0x79
 800aa22:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 800aa26:	041b      	lsls	r3, r3, #16
 800aa28:	461a      	mov	r2, r3
 800aa2a:	f897 307a 	ldrb.w	r3, [r7, #122]	; 0x7a
 800aa2e:	021b      	lsls	r3, r3, #8
 800aa30:	431a      	orrs	r2, r3
 800aa32:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 800aa36:	4313      	orrs	r3, r2
 800aa38:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800aa3c:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800aa40:	4611      	mov	r1, r2
 800aa42:	4618      	mov	r0, r3
 800aa44:	f7ff fa5e 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800aa48:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800aa4a:	67fc      	str	r4, [r7, #124]	; 0x7c
 800aa4c:	623b      	str	r3, [r7, #32]
        color = newColor;
 800aa4e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800aa50:	6a3a      	ldr	r2, [r7, #32]
 800aa52:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800aa54:	bf00      	nop
    G.setLinespacing(0);
 800aa56:	697b      	ldr	r3, [r7, #20]
 800aa58:	3378      	adds	r3, #120	; 0x78
 800aa5a:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800aa5e:	2300      	movs	r3, #0
 800aa60:	f8a7 3082 	strh.w	r3, [r7, #130]	; 0x82
        linespace = space;
 800aa64:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800aa68:	f8b7 2082 	ldrh.w	r2, [r7, #130]	; 0x82
 800aa6c:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800aa6e:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800aa72:	681b      	ldr	r3, [r3, #0]
 800aa74:	3384      	adds	r3, #132	; 0x84
 800aa76:	681b      	ldr	r3, [r3, #0]
 800aa78:	f8d7 4084 	ldr.w	r4, [r7, #132]	; 0x84
 800aa7c:	463a      	mov	r2, r7
 800aa7e:	f8d7 1084 	ldr.w	r1, [r7, #132]	; 0x84
 800aa82:	4610      	mov	r0, r2
 800aa84:	4798      	blx	r3
 800aa86:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800aa8a:	463a      	mov	r2, r7
 800aa8c:	ca07      	ldmia	r2, {r0, r1, r2}
 800aa8e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800aa92:	bf00      	nop
    Unicode::snprintf(GBuffer, G_SIZE, "%s", touchgfx::TypedText(T_RESOURCEID1).getText());
 800aa94:	697b      	ldr	r3, [r7, #20]
 800aa96:	f503 74a8 	add.w	r4, r3, #336	; 0x150
 800aa9a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800aa9e:	210d      	movs	r1, #13
 800aaa0:	4618      	mov	r0, r3
 800aaa2:	f7ff fc5d 	bl	800a360 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800aaa6:	4b11      	ldr	r3, [pc, #68]	; (800aaec <_ZN16FilterParamsBaseC1Ev+0x290>)
 800aaa8:	681b      	ldr	r3, [r3, #0]
 800aaaa:	2b00      	cmp	r3, #0
 800aaac:	d105      	bne.n	800aaba <_ZN16FilterParamsBaseC1Ev+0x25e>
 800aaae:	4b10      	ldr	r3, [pc, #64]	; (800aaf0 <_ZN16FilterParamsBaseC1Ev+0x294>)
 800aab0:	4a10      	ldr	r2, [pc, #64]	; (800aaf4 <_ZN16FilterParamsBaseC1Ev+0x298>)
 800aab2:	2160      	movs	r1, #96	; 0x60
 800aab4:	4810      	ldr	r0, [pc, #64]	; (800aaf8 <_ZN16FilterParamsBaseC1Ev+0x29c>)
 800aab6:	f018 fc3f 	bl	8023338 <__assert_func>
 800aaba:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800aabe:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
        return typedTextId < numberOfTypedTexts;
 800aac2:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800aac6:	889a      	ldrh	r2, [r3, #4]
 800aac8:	4b0c      	ldr	r3, [pc, #48]	; (800aafc <_ZN16FilterParamsBaseC1Ev+0x2a0>)
 800aaca:	881b      	ldrh	r3, [r3, #0]
 800aacc:	429a      	cmp	r2, r3
 800aace:	bf34      	ite	cc
 800aad0:	2301      	movcc	r3, #1
 800aad2:	2300      	movcs	r3, #0
 800aad4:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800aad6:	2b00      	cmp	r3, #0
 800aad8:	d118      	bne.n	800ab0c <_ZN16FilterParamsBaseC1Ev+0x2b0>
 800aada:	4b09      	ldr	r3, [pc, #36]	; (800ab00 <_ZN16FilterParamsBaseC1Ev+0x2a4>)
 800aadc:	4a05      	ldr	r2, [pc, #20]	; (800aaf4 <_ZN16FilterParamsBaseC1Ev+0x298>)
 800aade:	2161      	movs	r1, #97	; 0x61
 800aae0:	4805      	ldr	r0, [pc, #20]	; (800aaf8 <_ZN16FilterParamsBaseC1Ev+0x29c>)
 800aae2:	f018 fc29 	bl	8023338 <__assert_func>
 800aae6:	bf00      	nop
 800aae8:	08025894 	.word	0x08025894
 800aaec:	2003247c 	.word	0x2003247c
 800aaf0:	08024804 	.word	0x08024804
 800aaf4:	08024908 	.word	0x08024908
 800aaf8:	08024884 	.word	0x08024884
 800aafc:	20032480 	.word	0x20032480
 800ab00:	080248c8 	.word	0x080248c8
 800ab04:	20032488 	.word	0x20032488
 800ab08:	08024940 	.word	0x08024940
        return texts->getText(typedTextId);
 800ab0c:	4b77      	ldr	r3, [pc, #476]	; (800acec <_ZN16FilterParamsBaseC1Ev+0x490>)
 800ab0e:	681b      	ldr	r3, [r3, #0]
 800ab10:	8fba      	ldrh	r2, [r7, #60]	; 0x3c
 800ab12:	4611      	mov	r1, r2
 800ab14:	4618      	mov	r0, r3
 800ab16:	f001 fcef 	bl	800c4f8 <_ZNK8touchgfx5Texts7getTextEt>
 800ab1a:	4603      	mov	r3, r0
 800ab1c:	bf00      	nop
 800ab1e:	4a74      	ldr	r2, [pc, #464]	; (800acf0 <_ZN16FilterParamsBaseC1Ev+0x494>)
 800ab20:	2120      	movs	r1, #32
 800ab22:	4620      	mov	r0, r4
 800ab24:	f00a f97a 	bl	8014e1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800ab28:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800ab2c:	4618      	mov	r0, r3
 800ab2e:	f7fe fa59 	bl	8008fe4 <_ZN8touchgfx9TypedTextD1Ev>
    G.setWildcard(GBuffer);
 800ab32:	697b      	ldr	r3, [r7, #20]
 800ab34:	f103 0278 	add.w	r2, r3, #120	; 0x78
 800ab38:	697b      	ldr	r3, [r7, #20]
 800ab3a:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 800ab3e:	4619      	mov	r1, r3
 800ab40:	4610      	mov	r0, r2
 800ab42:	f7ff fe39 	bl	800a7b8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    G.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VOJG));
 800ab46:	697b      	ldr	r3, [r7, #20]
 800ab48:	f103 0478 	add.w	r4, r3, #120	; 0x78
 800ab4c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ab50:	210f      	movs	r1, #15
 800ab52:	4618      	mov	r0, r3
 800ab54:	f7ff fc04 	bl	800a360 <_ZN8touchgfx9TypedTextC1Et>
 800ab58:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ab5c:	4619      	mov	r1, r3
 800ab5e:	4620      	mov	r0, r4
 800ab60:	f005 fb9c 	bl	801029c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800ab64:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ab68:	4618      	mov	r0, r3
 800ab6a:	f7fe fa3b 	bl	8008fe4 <_ZN8touchgfx9TypedTextD1Ev>
    add(G);
 800ab6e:	697a      	ldr	r2, [r7, #20]
 800ab70:	697b      	ldr	r3, [r7, #20]
 800ab72:	3378      	adds	r3, #120	; 0x78
 800ab74:	4619      	mov	r1, r3
 800ab76:	4610      	mov	r0, r2
 800ab78:	f003 fea4 	bl	800e8c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    BW.setPosition(6, 30, 72, 15);
 800ab7c:	697b      	ldr	r3, [r7, #20]
 800ab7e:	f103 00c4 	add.w	r0, r3, #196	; 0xc4
 800ab82:	230f      	movs	r3, #15
 800ab84:	9300      	str	r3, [sp, #0]
 800ab86:	2348      	movs	r3, #72	; 0x48
 800ab88:	221e      	movs	r2, #30
 800ab8a:	2106      	movs	r1, #6
 800ab8c:	f7ff fa6e 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    BW.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800ab90:	697b      	ldr	r3, [r7, #20]
 800ab92:	f103 04c4 	add.w	r4, r3, #196	; 0xc4
 800ab96:	23ff      	movs	r3, #255	; 0xff
 800ab98:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 800ab9c:	23ff      	movs	r3, #255	; 0xff
 800ab9e:	f887 308e 	strb.w	r3, [r7, #142]	; 0x8e
 800aba2:	23ff      	movs	r3, #255	; 0xff
 800aba4:	f887 308d 	strb.w	r3, [r7, #141]	; 0x8d
 800aba8:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 800abac:	041b      	lsls	r3, r3, #16
 800abae:	461a      	mov	r2, r3
 800abb0:	f897 308e 	ldrb.w	r3, [r7, #142]	; 0x8e
 800abb4:	021b      	lsls	r3, r3, #8
 800abb6:	431a      	orrs	r2, r3
 800abb8:	f897 308d 	ldrb.w	r3, [r7, #141]	; 0x8d
 800abbc:	4313      	orrs	r3, r2
 800abbe:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800abc2:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800abc6:	4611      	mov	r1, r2
 800abc8:	4618      	mov	r0, r3
 800abca:	f7ff f99b 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800abce:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800abd0:	f8c7 4090 	str.w	r4, [r7, #144]	; 0x90
 800abd4:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800abd6:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800abda:	69fa      	ldr	r2, [r7, #28]
 800abdc:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800abde:	bf00      	nop
    BW.setLinespacing(0);
 800abe0:	697b      	ldr	r3, [r7, #20]
 800abe2:	33c4      	adds	r3, #196	; 0xc4
 800abe4:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800abe8:	2300      	movs	r3, #0
 800abea:	f8a7 3096 	strh.w	r3, [r7, #150]	; 0x96
        linespace = space;
 800abee:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800abf2:	f8b7 2096 	ldrh.w	r2, [r7, #150]	; 0x96
 800abf6:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800abf8:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800abfc:	681b      	ldr	r3, [r3, #0]
 800abfe:	3384      	adds	r3, #132	; 0x84
 800ac00:	681b      	ldr	r3, [r3, #0]
 800ac02:	f8d7 4098 	ldr.w	r4, [r7, #152]	; 0x98
 800ac06:	463a      	mov	r2, r7
 800ac08:	f8d7 1098 	ldr.w	r1, [r7, #152]	; 0x98
 800ac0c:	4610      	mov	r0, r2
 800ac0e:	4798      	blx	r3
 800ac10:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800ac14:	463a      	mov	r2, r7
 800ac16:	ca07      	ldmia	r2, {r0, r1, r2}
 800ac18:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800ac1c:	bf00      	nop
    Unicode::snprintf(BWBuffer, BW_SIZE, "%s", touchgfx::TypedText(T_RESOURCEID1).getText());
 800ac1e:	697b      	ldr	r3, [r7, #20]
 800ac20:	f503 74c8 	add.w	r4, r3, #400	; 0x190
 800ac24:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ac28:	210d      	movs	r1, #13
 800ac2a:	4618      	mov	r0, r3
 800ac2c:	f7ff fb98 	bl	800a360 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800ac30:	4b30      	ldr	r3, [pc, #192]	; (800acf4 <_ZN16FilterParamsBaseC1Ev+0x498>)
 800ac32:	681b      	ldr	r3, [r3, #0]
 800ac34:	2b00      	cmp	r3, #0
 800ac36:	d105      	bne.n	800ac44 <_ZN16FilterParamsBaseC1Ev+0x3e8>
 800ac38:	4b2f      	ldr	r3, [pc, #188]	; (800acf8 <_ZN16FilterParamsBaseC1Ev+0x49c>)
 800ac3a:	4a30      	ldr	r2, [pc, #192]	; (800acfc <_ZN16FilterParamsBaseC1Ev+0x4a0>)
 800ac3c:	2160      	movs	r1, #96	; 0x60
 800ac3e:	4830      	ldr	r0, [pc, #192]	; (800ad00 <_ZN16FilterParamsBaseC1Ev+0x4a4>)
 800ac40:	f018 fb7a 	bl	8023338 <__assert_func>
 800ac44:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ac48:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
        return typedTextId < numberOfTypedTexts;
 800ac4c:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800ac50:	889a      	ldrh	r2, [r3, #4]
 800ac52:	4b2c      	ldr	r3, [pc, #176]	; (800ad04 <_ZN16FilterParamsBaseC1Ev+0x4a8>)
 800ac54:	881b      	ldrh	r3, [r3, #0]
 800ac56:	429a      	cmp	r2, r3
 800ac58:	bf34      	ite	cc
 800ac5a:	2301      	movcc	r3, #1
 800ac5c:	2300      	movcs	r3, #0
 800ac5e:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800ac60:	2b00      	cmp	r3, #0
 800ac62:	d105      	bne.n	800ac70 <_ZN16FilterParamsBaseC1Ev+0x414>
 800ac64:	4b28      	ldr	r3, [pc, #160]	; (800ad08 <_ZN16FilterParamsBaseC1Ev+0x4ac>)
 800ac66:	4a25      	ldr	r2, [pc, #148]	; (800acfc <_ZN16FilterParamsBaseC1Ev+0x4a0>)
 800ac68:	2161      	movs	r1, #97	; 0x61
 800ac6a:	4825      	ldr	r0, [pc, #148]	; (800ad00 <_ZN16FilterParamsBaseC1Ev+0x4a4>)
 800ac6c:	f018 fb64 	bl	8023338 <__assert_func>
        return texts->getText(typedTextId);
 800ac70:	4b1e      	ldr	r3, [pc, #120]	; (800acec <_ZN16FilterParamsBaseC1Ev+0x490>)
 800ac72:	681b      	ldr	r3, [r3, #0]
 800ac74:	f8b7 204c 	ldrh.w	r2, [r7, #76]	; 0x4c
 800ac78:	4611      	mov	r1, r2
 800ac7a:	4618      	mov	r0, r3
 800ac7c:	f001 fc3c 	bl	800c4f8 <_ZNK8touchgfx5Texts7getTextEt>
 800ac80:	4603      	mov	r3, r0
 800ac82:	bf00      	nop
 800ac84:	4a1a      	ldr	r2, [pc, #104]	; (800acf0 <_ZN16FilterParamsBaseC1Ev+0x494>)
 800ac86:	2120      	movs	r1, #32
 800ac88:	4620      	mov	r0, r4
 800ac8a:	f00a f8c7 	bl	8014e1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800ac8e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ac92:	4618      	mov	r0, r3
 800ac94:	f7fe f9a6 	bl	8008fe4 <_ZN8touchgfx9TypedTextD1Ev>
    BW.setWildcard(BWBuffer);
 800ac98:	697b      	ldr	r3, [r7, #20]
 800ac9a:	f103 02c4 	add.w	r2, r3, #196	; 0xc4
 800ac9e:	697b      	ldr	r3, [r7, #20]
 800aca0:	f503 73c8 	add.w	r3, r3, #400	; 0x190
 800aca4:	4619      	mov	r1, r3
 800aca6:	4610      	mov	r0, r2
 800aca8:	f7ff fd86 	bl	800a7b8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    BW.setTypedText(touchgfx::TypedText(T___SINGLEUSE_87CS));
 800acac:	697b      	ldr	r3, [r7, #20]
 800acae:	f103 04c4 	add.w	r4, r3, #196	; 0xc4
 800acb2:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800acb6:	2110      	movs	r1, #16
 800acb8:	4618      	mov	r0, r3
 800acba:	f7ff fb51 	bl	800a360 <_ZN8touchgfx9TypedTextC1Et>
 800acbe:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800acc2:	4619      	mov	r1, r3
 800acc4:	4620      	mov	r0, r4
 800acc6:	f005 fae9 	bl	801029c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800acca:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800acce:	4618      	mov	r0, r3
 800acd0:	f7fe f988 	bl	8008fe4 <_ZN8touchgfx9TypedTextD1Ev>
    add(BW);
 800acd4:	697a      	ldr	r2, [r7, #20]
 800acd6:	697b      	ldr	r3, [r7, #20]
 800acd8:	33c4      	adds	r3, #196	; 0xc4
 800acda:	4619      	mov	r1, r3
 800acdc:	4610      	mov	r0, r2
 800acde:	f003 fdf1 	bl	800e8c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800ace2:	697b      	ldr	r3, [r7, #20]
 800ace4:	4618      	mov	r0, r3
 800ace6:	37a4      	adds	r7, #164	; 0xa4
 800ace8:	46bd      	mov	sp, r7
 800acea:	bd90      	pop	{r4, r7, pc}
 800acec:	20032488 	.word	0x20032488
 800acf0:	08024940 	.word	0x08024940
 800acf4:	2003247c 	.word	0x2003247c
 800acf8:	08024804 	.word	0x08024804
 800acfc:	08024908 	.word	0x08024908
 800ad00:	08024884 	.word	0x08024884
 800ad04:	20032480 	.word	0x20032480
 800ad08:	080248c8 	.word	0x080248c8

0800ad0c <_ZN16FilterParamsBaseD1Ev>:

FilterParamsBase::~FilterParamsBase()
 800ad0c:	b580      	push	{r7, lr}
 800ad0e:	b082      	sub	sp, #8
 800ad10:	af00      	add	r7, sp, #0
 800ad12:	6078      	str	r0, [r7, #4]
 800ad14:	4a0d      	ldr	r2, [pc, #52]	; (800ad4c <_ZN16FilterParamsBaseD1Ev+0x40>)
 800ad16:	687b      	ldr	r3, [r7, #4]
 800ad18:	601a      	str	r2, [r3, #0]
 800ad1a:	687b      	ldr	r3, [r7, #4]
 800ad1c:	33c4      	adds	r3, #196	; 0xc4
 800ad1e:	4618      	mov	r0, r3
 800ad20:	f7ff fd7a 	bl	800a818 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800ad24:	687b      	ldr	r3, [r7, #4]
 800ad26:	3378      	adds	r3, #120	; 0x78
 800ad28:	4618      	mov	r0, r3
 800ad2a:	f7ff fd75 	bl	800a818 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800ad2e:	687b      	ldr	r3, [r7, #4]
 800ad30:	332c      	adds	r3, #44	; 0x2c
 800ad32:	4618      	mov	r0, r3
 800ad34:	f7ff fd70 	bl	800a818 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800ad38:	687b      	ldr	r3, [r7, #4]
 800ad3a:	4618      	mov	r0, r3
 800ad3c:	f7ff fd4a 	bl	800a7d4 <_ZN8touchgfx9ContainerD1Ev>
{

}
 800ad40:	687b      	ldr	r3, [r7, #4]
 800ad42:	4618      	mov	r0, r3
 800ad44:	3708      	adds	r7, #8
 800ad46:	46bd      	mov	sp, r7
 800ad48:	bd80      	pop	{r7, pc}
 800ad4a:	bf00      	nop
 800ad4c:	08025894 	.word	0x08025894

0800ad50 <_ZN16FilterParamsBaseD0Ev>:
FilterParamsBase::~FilterParamsBase()
 800ad50:	b580      	push	{r7, lr}
 800ad52:	b082      	sub	sp, #8
 800ad54:	af00      	add	r7, sp, #0
 800ad56:	6078      	str	r0, [r7, #4]
}
 800ad58:	6878      	ldr	r0, [r7, #4]
 800ad5a:	f7ff ffd7 	bl	800ad0c <_ZN16FilterParamsBaseD1Ev>
 800ad5e:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 800ad62:	6878      	ldr	r0, [r7, #4]
 800ad64:	f017 fd5d 	bl	8022822 <_ZdlPvj>
 800ad68:	687b      	ldr	r3, [r7, #4]
 800ad6a:	4618      	mov	r0, r3
 800ad6c:	3708      	adds	r7, #8
 800ad6e:	46bd      	mov	sp, r7
 800ad70:	bd80      	pop	{r7, pc}

0800ad72 <_ZN16FilterParamsBase10initializeEv>:

void FilterParamsBase::initialize()
{
 800ad72:	b480      	push	{r7}
 800ad74:	b083      	sub	sp, #12
 800ad76:	af00      	add	r7, sp, #0
 800ad78:	6078      	str	r0, [r7, #4]

}
 800ad7a:	bf00      	nop
 800ad7c:	370c      	adds	r7, #12
 800ad7e:	46bd      	mov	sp, r7
 800ad80:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad84:	4770      	bx	lr
	...

0800ad88 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800ad88:	b580      	push	{r7, lr}
 800ad8a:	b082      	sub	sp, #8
 800ad8c:	af00      	add	r7, sp, #0
 800ad8e:	6078      	str	r0, [r7, #4]
    {
 800ad90:	4a06      	ldr	r2, [pc, #24]	; (800adac <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800ad92:	687b      	ldr	r3, [r7, #4]
 800ad94:	601a      	str	r2, [r3, #0]
 800ad96:	687b      	ldr	r3, [r7, #4]
 800ad98:	3304      	adds	r3, #4
 800ad9a:	4618      	mov	r0, r3
 800ad9c:	f7ff fd1a 	bl	800a7d4 <_ZN8touchgfx9ContainerD1Ev>
    }
 800ada0:	687b      	ldr	r3, [r7, #4]
 800ada2:	4618      	mov	r0, r3
 800ada4:	3708      	adds	r7, #8
 800ada6:	46bd      	mov	sp, r7
 800ada8:	bd80      	pop	{r7, pc}
 800adaa:	bf00      	nop
 800adac:	080264b8 	.word	0x080264b8

0800adb0 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800adb0:	b580      	push	{r7, lr}
 800adb2:	b082      	sub	sp, #8
 800adb4:	af00      	add	r7, sp, #0
 800adb6:	6078      	str	r0, [r7, #4]
    }
 800adb8:	6878      	ldr	r0, [r7, #4]
 800adba:	f7ff ffe5 	bl	800ad88 <_ZN8touchgfx6ScreenD1Ev>
 800adbe:	213c      	movs	r1, #60	; 0x3c
 800adc0:	6878      	ldr	r0, [r7, #4]
 800adc2:	f017 fd2e 	bl	8022822 <_ZdlPvj>
 800adc6:	687b      	ldr	r3, [r7, #4]
 800adc8:	4618      	mov	r0, r3
 800adca:	3708      	adds	r7, #8
 800adcc:	46bd      	mov	sp, r7
 800adce:	bd80      	pop	{r7, pc}

0800add0 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800add0:	b480      	push	{r7}
 800add2:	b083      	sub	sp, #12
 800add4:	af00      	add	r7, sp, #0
 800add6:	6078      	str	r0, [r7, #4]
    {
    }
 800add8:	bf00      	nop
 800adda:	370c      	adds	r7, #12
 800addc:	46bd      	mov	sp, r7
 800adde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ade2:	4770      	bx	lr

0800ade4 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800ade4:	b480      	push	{r7}
 800ade6:	b083      	sub	sp, #12
 800ade8:	af00      	add	r7, sp, #0
 800adea:	6078      	str	r0, [r7, #4]
    {
    }
 800adec:	bf00      	nop
 800adee:	370c      	adds	r7, #12
 800adf0:	46bd      	mov	sp, r7
 800adf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adf6:	4770      	bx	lr

0800adf8 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800adf8:	b480      	push	{r7}
 800adfa:	b083      	sub	sp, #12
 800adfc:	af00      	add	r7, sp, #0
 800adfe:	6078      	str	r0, [r7, #4]
    {
    }
 800ae00:	bf00      	nop
 800ae02:	370c      	adds	r7, #12
 800ae04:	46bd      	mov	sp, r7
 800ae06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae0a:	4770      	bx	lr

0800ae0c <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800ae0c:	b480      	push	{r7}
 800ae0e:	b083      	sub	sp, #12
 800ae10:	af00      	add	r7, sp, #0
 800ae12:	6078      	str	r0, [r7, #4]
    {
    }
 800ae14:	bf00      	nop
 800ae16:	370c      	adds	r7, #12
 800ae18:	46bd      	mov	sp, r7
 800ae1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae1e:	4770      	bx	lr

0800ae20 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800ae20:	b480      	push	{r7}
 800ae22:	b083      	sub	sp, #12
 800ae24:	af00      	add	r7, sp, #0
 800ae26:	6078      	str	r0, [r7, #4]
 800ae28:	460b      	mov	r3, r1
 800ae2a:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800ae2c:	bf00      	nop
 800ae2e:	370c      	adds	r7, #12
 800ae30:	46bd      	mov	sp, r7
 800ae32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae36:	4770      	bx	lr

0800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800ae38:	b580      	push	{r7, lr}
 800ae3a:	b082      	sub	sp, #8
 800ae3c:	af00      	add	r7, sp, #0
 800ae3e:	6078      	str	r0, [r7, #4]
 800ae40:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800ae42:	687b      	ldr	r3, [r7, #4]
 800ae44:	3304      	adds	r3, #4
 800ae46:	6839      	ldr	r1, [r7, #0]
 800ae48:	4618      	mov	r0, r3
 800ae4a:	f003 fd3b 	bl	800e8c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800ae4e:	bf00      	nop
 800ae50:	3708      	adds	r7, #8
 800ae52:	46bd      	mov	sp, r7
 800ae54:	bd80      	pop	{r7, pc}
	...

0800ae58 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800ae58:	b580      	push	{r7, lr}
 800ae5a:	b082      	sub	sp, #8
 800ae5c:	af00      	add	r7, sp, #0
 800ae5e:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800ae60:	687b      	ldr	r3, [r7, #4]
 800ae62:	4618      	mov	r0, r3
 800ae64:	2326      	movs	r3, #38	; 0x26
 800ae66:	461a      	mov	r2, r3
 800ae68:	2100      	movs	r1, #0
 800ae6a:	f018 fc6a 	bl	8023742 <memset>
 800ae6e:	687b      	ldr	r3, [r7, #4]
 800ae70:	4618      	mov	r0, r3
 800ae72:	f7ff fa8b 	bl	800a38c <_ZN8touchgfx6WidgetC1Ev>
 800ae76:	4a09      	ldr	r2, [pc, #36]	; (800ae9c <_ZN8touchgfx3BoxC1Ev+0x44>)
 800ae78:	687b      	ldr	r3, [r7, #4]
 800ae7a:	601a      	str	r2, [r3, #0]
 800ae7c:	687b      	ldr	r3, [r7, #4]
 800ae7e:	22ff      	movs	r2, #255	; 0xff
 800ae80:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800ae84:	687b      	ldr	r3, [r7, #4]
 800ae86:	3328      	adds	r3, #40	; 0x28
 800ae88:	2100      	movs	r1, #0
 800ae8a:	4618      	mov	r0, r3
 800ae8c:	f7ff f83a 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800ae90:	687b      	ldr	r3, [r7, #4]
 800ae92:	4618      	mov	r0, r3
 800ae94:	3708      	adds	r7, #8
 800ae96:	46bd      	mov	sp, r7
 800ae98:	bd80      	pop	{r7, pc}
 800ae9a:	bf00      	nop
 800ae9c:	080261a0 	.word	0x080261a0

0800aea0 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800aea0:	b480      	push	{r7}
 800aea2:	b083      	sub	sp, #12
 800aea4:	af00      	add	r7, sp, #0
 800aea6:	6078      	str	r0, [r7, #4]
 800aea8:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800aeaa:	687b      	ldr	r3, [r7, #4]
 800aeac:	683a      	ldr	r2, [r7, #0]
 800aeae:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800aeb0:	bf00      	nop
 800aeb2:	370c      	adds	r7, #12
 800aeb4:	46bd      	mov	sp, r7
 800aeb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aeba:	4770      	bx	lr

0800aebc <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800aebc:	b580      	push	{r7, lr}
 800aebe:	b082      	sub	sp, #8
 800aec0:	af00      	add	r7, sp, #0
 800aec2:	6078      	str	r0, [r7, #4]
 800aec4:	4a05      	ldr	r2, [pc, #20]	; (800aedc <_ZN8touchgfx3BoxD1Ev+0x20>)
 800aec6:	687b      	ldr	r3, [r7, #4]
 800aec8:	601a      	str	r2, [r3, #0]
 800aeca:	687b      	ldr	r3, [r7, #4]
 800aecc:	4618      	mov	r0, r3
 800aece:	f7ff fa6f 	bl	800a3b0 <_ZN8touchgfx6WidgetD1Ev>
 800aed2:	687b      	ldr	r3, [r7, #4]
 800aed4:	4618      	mov	r0, r3
 800aed6:	3708      	adds	r7, #8
 800aed8:	46bd      	mov	sp, r7
 800aeda:	bd80      	pop	{r7, pc}
 800aedc:	080261a0 	.word	0x080261a0

0800aee0 <_ZN8touchgfx3BoxD0Ev>:
 800aee0:	b580      	push	{r7, lr}
 800aee2:	b082      	sub	sp, #8
 800aee4:	af00      	add	r7, sp, #0
 800aee6:	6078      	str	r0, [r7, #4]
 800aee8:	6878      	ldr	r0, [r7, #4]
 800aeea:	f7ff ffe7 	bl	800aebc <_ZN8touchgfx3BoxD1Ev>
 800aeee:	212c      	movs	r1, #44	; 0x2c
 800aef0:	6878      	ldr	r0, [r7, #4]
 800aef2:	f017 fc96 	bl	8022822 <_ZdlPvj>
 800aef6:	687b      	ldr	r3, [r7, #4]
 800aef8:	4618      	mov	r0, r3
 800aefa:	3708      	adds	r7, #8
 800aefc:	46bd      	mov	sp, r7
 800aefe:	bd80      	pop	{r7, pc}

0800af00 <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 800af00:	b580      	push	{r7, lr}
 800af02:	b082      	sub	sp, #8
 800af04:	af00      	add	r7, sp, #0
 800af06:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 800af08:	687b      	ldr	r3, [r7, #4]
 800af0a:	4618      	mov	r0, r3
 800af0c:	f7ff ffa4 	bl	800ae58 <_ZN8touchgfx3BoxC1Ev>
 800af10:	4a08      	ldr	r2, [pc, #32]	; (800af34 <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 800af12:	687b      	ldr	r3, [r7, #4]
 800af14:	601a      	str	r2, [r3, #0]
 800af16:	687b      	ldr	r3, [r7, #4]
 800af18:	332c      	adds	r3, #44	; 0x2c
 800af1a:	2100      	movs	r1, #0
 800af1c:	4618      	mov	r0, r3
 800af1e:	f7fe fff1 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800af22:	687b      	ldr	r3, [r7, #4]
 800af24:	2200      	movs	r2, #0
 800af26:	861a      	strh	r2, [r3, #48]	; 0x30
    {
    }
 800af28:	687b      	ldr	r3, [r7, #4]
 800af2a:	4618      	mov	r0, r3
 800af2c:	3708      	adds	r7, #8
 800af2e:	46bd      	mov	sp, r7
 800af30:	bd80      	pop	{r7, pc}
 800af32:	bf00      	nop
 800af34:	08026298 	.word	0x08026298

0800af38 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     *
     * @param  colorBorder The color of the border.
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
 800af38:	b480      	push	{r7}
 800af3a:	b083      	sub	sp, #12
 800af3c:	af00      	add	r7, sp, #0
 800af3e:	6078      	str	r0, [r7, #4]
 800af40:	6039      	str	r1, [r7, #0]
    {
        borderColor = colorBorder;
 800af42:	687b      	ldr	r3, [r7, #4]
 800af44:	683a      	ldr	r2, [r7, #0]
 800af46:	62da      	str	r2, [r3, #44]	; 0x2c
    }
 800af48:	bf00      	nop
 800af4a:	370c      	adds	r7, #12
 800af4c:	46bd      	mov	sp, r7
 800af4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af52:	4770      	bx	lr

0800af54 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 800af54:	b480      	push	{r7}
 800af56:	b083      	sub	sp, #12
 800af58:	af00      	add	r7, sp, #0
 800af5a:	6078      	str	r0, [r7, #4]
 800af5c:	460b      	mov	r3, r1
 800af5e:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 800af60:	687b      	ldr	r3, [r7, #4]
 800af62:	887a      	ldrh	r2, [r7, #2]
 800af64:	861a      	strh	r2, [r3, #48]	; 0x30
    }
 800af66:	bf00      	nop
 800af68:	370c      	adds	r7, #12
 800af6a:	46bd      	mov	sp, r7
 800af6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af70:	4770      	bx	lr
	...

0800af74 <_ZN12FilterParamsD1Ev>:

class FilterParams : public FilterParamsBase
{
public:
    FilterParams();
    virtual ~FilterParams() {}
 800af74:	b580      	push	{r7, lr}
 800af76:	b082      	sub	sp, #8
 800af78:	af00      	add	r7, sp, #0
 800af7a:	6078      	str	r0, [r7, #4]
 800af7c:	4a05      	ldr	r2, [pc, #20]	; (800af94 <_ZN12FilterParamsD1Ev+0x20>)
 800af7e:	687b      	ldr	r3, [r7, #4]
 800af80:	601a      	str	r2, [r3, #0]
 800af82:	687b      	ldr	r3, [r7, #4]
 800af84:	4618      	mov	r0, r3
 800af86:	f7ff fec1 	bl	800ad0c <_ZN16FilterParamsBaseD1Ev>
 800af8a:	687b      	ldr	r3, [r7, #4]
 800af8c:	4618      	mov	r0, r3
 800af8e:	3708      	adds	r7, #8
 800af90:	46bd      	mov	sp, r7
 800af92:	bd80      	pop	{r7, pc}
 800af94:	08025a5c 	.word	0x08025a5c

0800af98 <_ZN12FilterParamsD0Ev>:
 800af98:	b580      	push	{r7, lr}
 800af9a:	b082      	sub	sp, #8
 800af9c:	af00      	add	r7, sp, #0
 800af9e:	6078      	str	r0, [r7, #4]
 800afa0:	6878      	ldr	r0, [r7, #4]
 800afa2:	f7ff ffe7 	bl	800af74 <_ZN12FilterParamsD1Ev>
 800afa6:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 800afaa:	6878      	ldr	r0, [r7, #4]
 800afac:	f017 fc39 	bl	8022822 <_ZdlPvj>
 800afb0:	687b      	ldr	r3, [r7, #4]
 800afb2:	4618      	mov	r0, r3
 800afb4:	3708      	adds	r7, #8
 800afb6:	46bd      	mov	sp, r7
 800afb8:	bd80      	pop	{r7, pc}
	...

0800afbc <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 800afbc:	b580      	push	{r7, lr}
 800afbe:	b082      	sub	sp, #8
 800afc0:	af00      	add	r7, sp, #0
 800afc2:	6078      	str	r0, [r7, #4]
 800afc4:	4a05      	ldr	r2, [pc, #20]	; (800afdc <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 800afc6:	687b      	ldr	r3, [r7, #4]
 800afc8:	601a      	str	r2, [r3, #0]
 800afca:	687b      	ldr	r3, [r7, #4]
 800afcc:	4618      	mov	r0, r3
 800afce:	f7ff fedb 	bl	800ad88 <_ZN8touchgfx6ScreenD1Ev>
 800afd2:	687b      	ldr	r3, [r7, #4]
 800afd4:	4618      	mov	r0, r3
 800afd6:	3708      	adds	r7, #8
 800afd8:	46bd      	mov	sp, r7
 800afda:	bd80      	pop	{r7, pc}
 800afdc:	0802595c 	.word	0x0802595c

0800afe0 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 800afe0:	b580      	push	{r7, lr}
 800afe2:	b082      	sub	sp, #8
 800afe4:	af00      	add	r7, sp, #0
 800afe6:	6078      	str	r0, [r7, #4]
 800afe8:	6878      	ldr	r0, [r7, #4]
 800afea:	f7ff ffe7 	bl	800afbc <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800afee:	2140      	movs	r1, #64	; 0x40
 800aff0:	6878      	ldr	r0, [r7, #4]
 800aff2:	f017 fc16 	bl	8022822 <_ZdlPvj>
 800aff6:	687b      	ldr	r3, [r7, #4]
 800aff8:	4618      	mov	r0, r3
 800affa:	3708      	adds	r7, #8
 800affc:	46bd      	mov	sp, r7
 800affe:	bd80      	pop	{r7, pc}

0800b000 <_ZN15Screen1ViewBaseC1Ev>:
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase()
 800b000:	b590      	push	{r4, r7, lr}
 800b002:	b0d1      	sub	sp, #324	; 0x144
 800b004:	af02      	add	r7, sp, #8
 800b006:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b00a:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b00e:	6018      	str	r0, [r3, #0]
 800b010:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b014:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b018:	681b      	ldr	r3, [r3, #0]
 800b01a:	4618      	mov	r0, r3
 800b01c:	f001 f890 	bl	800c140 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 800b020:	4aeb      	ldr	r2, [pc, #940]	; (800b3d0 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 800b022:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b026:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b02a:	681b      	ldr	r3, [r3, #0]
 800b02c:	601a      	str	r2, [r3, #0]
 800b02e:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b032:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b036:	681b      	ldr	r3, [r3, #0]
 800b038:	3340      	adds	r3, #64	; 0x40
 800b03a:	4618      	mov	r0, r3
 800b03c:	f7ff ff0c 	bl	800ae58 <_ZN8touchgfx3BoxC1Ev>
 800b040:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b044:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b048:	681b      	ldr	r3, [r3, #0]
 800b04a:	336c      	adds	r3, #108	; 0x6c
 800b04c:	4618      	mov	r0, r3
 800b04e:	f7ff ff57 	bl	800af00 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800b052:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b056:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b05a:	681b      	ldr	r3, [r3, #0]
 800b05c:	33a0      	adds	r3, #160	; 0xa0
 800b05e:	4618      	mov	r0, r3
 800b060:	f7ff ff4e 	bl	800af00 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800b064:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b068:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b06c:	681b      	ldr	r3, [r3, #0]
 800b06e:	33d4      	adds	r3, #212	; 0xd4
 800b070:	4618      	mov	r0, r3
 800b072:	f7ff ff45 	bl	800af00 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800b076:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b07a:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b07e:	681b      	ldr	r3, [r3, #0]
 800b080:	f503 7384 	add.w	r3, r3, #264	; 0x108
 800b084:	4618      	mov	r0, r3
 800b086:	f7ff ff3b 	bl	800af00 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800b08a:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b08e:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b092:	681b      	ldr	r3, [r3, #0]
 800b094:	f503 739e 	add.w	r3, r3, #316	; 0x13c
 800b098:	4618      	mov	r0, r3
 800b09a:	f7ff ff31 	bl	800af00 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800b09e:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b0a2:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b0a6:	681b      	ldr	r3, [r3, #0]
 800b0a8:	f503 73b8 	add.w	r3, r3, #368	; 0x170
 800b0ac:	4618      	mov	r0, r3
 800b0ae:	f7ff ff27 	bl	800af00 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800b0b2:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b0b6:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b0ba:	681b      	ldr	r3, [r3, #0]
 800b0bc:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800b0c0:	4618      	mov	r0, r3
 800b0c2:	f7ff f997 	bl	800a3f4 <_ZN8touchgfx8TextAreaC1Ev>
 800b0c6:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b0ca:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b0ce:	681b      	ldr	r3, [r3, #0]
 800b0d0:	f503 73f6 	add.w	r3, r3, #492	; 0x1ec
 800b0d4:	4618      	mov	r0, r3
 800b0d6:	f7ff f98d 	bl	800a3f4 <_ZN8touchgfx8TextAreaC1Ev>
 800b0da:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b0de:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b0e2:	681b      	ldr	r3, [r3, #0]
 800b0e4:	f503 730d 	add.w	r3, r3, #564	; 0x234
 800b0e8:	4618      	mov	r0, r3
 800b0ea:	f7ff f983 	bl	800a3f4 <_ZN8touchgfx8TextAreaC1Ev>
 800b0ee:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b0f2:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b0f6:	681b      	ldr	r3, [r3, #0]
 800b0f8:	f503 731f 	add.w	r3, r3, #636	; 0x27c
 800b0fc:	4618      	mov	r0, r3
 800b0fe:	f7ff f979 	bl	800a3f4 <_ZN8touchgfx8TextAreaC1Ev>
 800b102:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b106:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b10a:	681b      	ldr	r3, [r3, #0]
 800b10c:	f503 7331 	add.w	r3, r3, #708	; 0x2c4
 800b110:	4618      	mov	r0, r3
 800b112:	f7ff f96f 	bl	800a3f4 <_ZN8touchgfx8TextAreaC1Ev>
 800b116:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b11a:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b11e:	681b      	ldr	r3, [r3, #0]
 800b120:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 800b124:	4618      	mov	r0, r3
 800b126:	f7ff f965 	bl	800a3f4 <_ZN8touchgfx8TextAreaC1Ev>
 800b12a:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b12e:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b132:	681b      	ldr	r3, [r3, #0]
 800b134:	f503 7355 	add.w	r3, r3, #852	; 0x354
 800b138:	4618      	mov	r0, r3
 800b13a:	f001 fa85 	bl	800c648 <_ZN12FilterParamsC1Ev>
 800b13e:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b142:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b146:	681b      	ldr	r3, [r3, #0]
 800b148:	f203 5324 	addw	r3, r3, #1316	; 0x524
 800b14c:	4618      	mov	r0, r3
 800b14e:	f001 fa7b 	bl	800c648 <_ZN12FilterParamsC1Ev>
 800b152:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b156:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b15a:	681b      	ldr	r3, [r3, #0]
 800b15c:	f203 63f4 	addw	r3, r3, #1780	; 0x6f4
 800b160:	4618      	mov	r0, r3
 800b162:	f001 fa71 	bl	800c648 <_ZN12FilterParamsC1Ev>
 800b166:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b16a:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b16e:	681b      	ldr	r3, [r3, #0]
 800b170:	f603 03c4 	addw	r3, r3, #2244	; 0x8c4
 800b174:	4618      	mov	r0, r3
 800b176:	f001 fa67 	bl	800c648 <_ZN12FilterParamsC1Ev>
 800b17a:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b17e:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b182:	681b      	ldr	r3, [r3, #0]
 800b184:	f603 2394 	addw	r3, r3, #2708	; 0xa94
 800b188:	4618      	mov	r0, r3
 800b18a:	f001 fa5d 	bl	800c648 <_ZN12FilterParamsC1Ev>
{
    __background.setPosition(0, 0, 320, 240);
 800b18e:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b192:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b196:	681b      	ldr	r3, [r3, #0]
 800b198:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800b19c:	23f0      	movs	r3, #240	; 0xf0
 800b19e:	9300      	str	r3, [sp, #0]
 800b1a0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800b1a4:	2200      	movs	r2, #0
 800b1a6:	2100      	movs	r1, #0
 800b1a8:	f7fe ff60 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800b1ac:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b1b0:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b1b4:	681b      	ldr	r3, [r3, #0]
 800b1b6:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800b1ba:	2300      	movs	r3, #0
 800b1bc:	f887 30b4 	strb.w	r3, [r7, #180]	; 0xb4
 800b1c0:	2300      	movs	r3, #0
 800b1c2:	f887 30b3 	strb.w	r3, [r7, #179]	; 0xb3
 800b1c6:	2300      	movs	r3, #0
 800b1c8:	f887 30b2 	strb.w	r3, [r7, #178]	; 0xb2
 800b1cc:	f897 30b4 	ldrb.w	r3, [r7, #180]	; 0xb4
 800b1d0:	041b      	lsls	r3, r3, #16
 800b1d2:	461a      	mov	r2, r3
 800b1d4:	f897 30b3 	ldrb.w	r3, [r7, #179]	; 0xb3
 800b1d8:	021b      	lsls	r3, r3, #8
 800b1da:	431a      	orrs	r2, r3
 800b1dc:	f897 30b2 	ldrb.w	r3, [r7, #178]	; 0xb2
 800b1e0:	4313      	orrs	r3, r2
 800b1e2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b1e6:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 800b1ea:	4611      	mov	r1, r2
 800b1ec:	4618      	mov	r0, r3
 800b1ee:	f7fe fe89 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b1f2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800b1f6:	4619      	mov	r1, r3
 800b1f8:	4620      	mov	r0, r4
 800b1fa:	f7ff fe51 	bl	800aea0 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800b1fe:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b202:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b206:	681a      	ldr	r2, [r3, #0]
 800b208:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b20c:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b210:	681b      	ldr	r3, [r3, #0]
 800b212:	3340      	adds	r3, #64	; 0x40
 800b214:	4619      	mov	r1, r3
 800b216:	4610      	mov	r0, r2
 800b218:	f7ff fe0e 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    PKNG0_Box.setPosition(1, 120, 106, 120);
 800b21c:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b220:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b224:	681b      	ldr	r3, [r3, #0]
 800b226:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 800b22a:	2378      	movs	r3, #120	; 0x78
 800b22c:	9300      	str	r3, [sp, #0]
 800b22e:	236a      	movs	r3, #106	; 0x6a
 800b230:	2278      	movs	r2, #120	; 0x78
 800b232:	2101      	movs	r1, #1
 800b234:	f7fe ff1a 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    PKNG0_Box.setColor(touchgfx::Color::getColorFromRGB(41, 34, 34));
 800b238:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b23c:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b240:	681b      	ldr	r3, [r3, #0]
 800b242:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800b246:	2329      	movs	r3, #41	; 0x29
 800b248:	f887 30b7 	strb.w	r3, [r7, #183]	; 0xb7
 800b24c:	2322      	movs	r3, #34	; 0x22
 800b24e:	f887 30b6 	strb.w	r3, [r7, #182]	; 0xb6
 800b252:	2322      	movs	r3, #34	; 0x22
 800b254:	f887 30b5 	strb.w	r3, [r7, #181]	; 0xb5
 800b258:	f897 30b7 	ldrb.w	r3, [r7, #183]	; 0xb7
 800b25c:	041b      	lsls	r3, r3, #16
 800b25e:	461a      	mov	r2, r3
 800b260:	f897 30b6 	ldrb.w	r3, [r7, #182]	; 0xb6
 800b264:	021b      	lsls	r3, r3, #8
 800b266:	431a      	orrs	r2, r3
 800b268:	f897 30b5 	ldrb.w	r3, [r7, #181]	; 0xb5
 800b26c:	4313      	orrs	r3, r2
 800b26e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b272:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 800b276:	4611      	mov	r1, r2
 800b278:	4618      	mov	r0, r3
 800b27a:	f7fe fe43 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b27e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800b282:	4619      	mov	r1, r3
 800b284:	4620      	mov	r0, r4
 800b286:	f7ff fe0b 	bl	800aea0 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    PKNG0_Box.setBorderColor(touchgfx::Color::getColorFromRGB(31, 25, 25));
 800b28a:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b28e:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b292:	681b      	ldr	r3, [r3, #0]
 800b294:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800b298:	231f      	movs	r3, #31
 800b29a:	f887 30ba 	strb.w	r3, [r7, #186]	; 0xba
 800b29e:	2319      	movs	r3, #25
 800b2a0:	f887 30b9 	strb.w	r3, [r7, #185]	; 0xb9
 800b2a4:	2319      	movs	r3, #25
 800b2a6:	f887 30b8 	strb.w	r3, [r7, #184]	; 0xb8
 800b2aa:	f897 30ba 	ldrb.w	r3, [r7, #186]	; 0xba
 800b2ae:	041b      	lsls	r3, r3, #16
 800b2b0:	461a      	mov	r2, r3
 800b2b2:	f897 30b9 	ldrb.w	r3, [r7, #185]	; 0xb9
 800b2b6:	021b      	lsls	r3, r3, #8
 800b2b8:	431a      	orrs	r2, r3
 800b2ba:	f897 30b8 	ldrb.w	r3, [r7, #184]	; 0xb8
 800b2be:	4313      	orrs	r3, r2
 800b2c0:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b2c4:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 800b2c8:	4611      	mov	r1, r2
 800b2ca:	4618      	mov	r0, r3
 800b2cc:	f7fe fe1a 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b2d0:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800b2d4:	4619      	mov	r1, r3
 800b2d6:	4620      	mov	r0, r4
 800b2d8:	f7ff fe2e 	bl	800af38 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
    PKNG0_Box.setBorderSize(5);
 800b2dc:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b2e0:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b2e4:	681b      	ldr	r3, [r3, #0]
 800b2e6:	336c      	adds	r3, #108	; 0x6c
 800b2e8:	2105      	movs	r1, #5
 800b2ea:	4618      	mov	r0, r3
 800b2ec:	f7ff fe32 	bl	800af54 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    add(PKNG0_Box);
 800b2f0:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b2f4:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b2f8:	681a      	ldr	r2, [r3, #0]
 800b2fa:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b2fe:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b302:	681b      	ldr	r3, [r3, #0]
 800b304:	336c      	adds	r3, #108	; 0x6c
 800b306:	4619      	mov	r1, r3
 800b308:	4610      	mov	r0, r2
 800b30a:	f7ff fd95 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Title_Box.setPosition(107, 120, 106, 120);
 800b30e:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b312:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b316:	681b      	ldr	r3, [r3, #0]
 800b318:	f103 00a0 	add.w	r0, r3, #160	; 0xa0
 800b31c:	2378      	movs	r3, #120	; 0x78
 800b31e:	9300      	str	r3, [sp, #0]
 800b320:	236a      	movs	r3, #106	; 0x6a
 800b322:	2278      	movs	r2, #120	; 0x78
 800b324:	216b      	movs	r1, #107	; 0x6b
 800b326:	f7fe fea1 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    Title_Box.setColor(touchgfx::Color::getColorFromRGB(41, 34, 34));
 800b32a:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b32e:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b332:	681b      	ldr	r3, [r3, #0]
 800b334:	f103 04a0 	add.w	r4, r3, #160	; 0xa0
 800b338:	2329      	movs	r3, #41	; 0x29
 800b33a:	f887 30bd 	strb.w	r3, [r7, #189]	; 0xbd
 800b33e:	2322      	movs	r3, #34	; 0x22
 800b340:	f887 30bc 	strb.w	r3, [r7, #188]	; 0xbc
 800b344:	2322      	movs	r3, #34	; 0x22
 800b346:	f887 30bb 	strb.w	r3, [r7, #187]	; 0xbb
 800b34a:	f897 30bd 	ldrb.w	r3, [r7, #189]	; 0xbd
 800b34e:	041b      	lsls	r3, r3, #16
 800b350:	461a      	mov	r2, r3
 800b352:	f897 30bc 	ldrb.w	r3, [r7, #188]	; 0xbc
 800b356:	021b      	lsls	r3, r3, #8
 800b358:	431a      	orrs	r2, r3
 800b35a:	f897 30bb 	ldrb.w	r3, [r7, #187]	; 0xbb
 800b35e:	4313      	orrs	r3, r2
 800b360:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b364:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800b368:	4611      	mov	r1, r2
 800b36a:	4618      	mov	r0, r3
 800b36c:	f7fe fdca 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b370:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800b374:	4619      	mov	r1, r3
 800b376:	4620      	mov	r0, r4
 800b378:	f7ff fd92 	bl	800aea0 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    Title_Box.setBorderColor(touchgfx::Color::getColorFromRGB(31, 25, 25));
 800b37c:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b380:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b384:	681b      	ldr	r3, [r3, #0]
 800b386:	f103 04a0 	add.w	r4, r3, #160	; 0xa0
 800b38a:	231f      	movs	r3, #31
 800b38c:	f887 30c0 	strb.w	r3, [r7, #192]	; 0xc0
 800b390:	2319      	movs	r3, #25
 800b392:	f887 30bf 	strb.w	r3, [r7, #191]	; 0xbf
 800b396:	2319      	movs	r3, #25
 800b398:	f887 30be 	strb.w	r3, [r7, #190]	; 0xbe
 800b39c:	f897 30c0 	ldrb.w	r3, [r7, #192]	; 0xc0
 800b3a0:	041b      	lsls	r3, r3, #16
 800b3a2:	461a      	mov	r2, r3
 800b3a4:	f897 30bf 	ldrb.w	r3, [r7, #191]	; 0xbf
 800b3a8:	021b      	lsls	r3, r3, #8
 800b3aa:	431a      	orrs	r2, r3
 800b3ac:	f897 30be 	ldrb.w	r3, [r7, #190]	; 0xbe
 800b3b0:	4313      	orrs	r3, r2
 800b3b2:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b3b6:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 800b3ba:	4611      	mov	r1, r2
 800b3bc:	4618      	mov	r0, r3
 800b3be:	f7fe fda1 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b3c2:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800b3c6:	4619      	mov	r1, r3
 800b3c8:	4620      	mov	r0, r4
 800b3ca:	f7ff fdb5 	bl	800af38 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
 800b3ce:	e001      	b.n	800b3d4 <_ZN15Screen1ViewBaseC1Ev+0x3d4>
 800b3d0:	08025928 	.word	0x08025928
    Title_Box.setBorderSize(5);
 800b3d4:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b3d8:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b3dc:	681b      	ldr	r3, [r3, #0]
 800b3de:	33a0      	adds	r3, #160	; 0xa0
 800b3e0:	2105      	movs	r1, #5
 800b3e2:	4618      	mov	r0, r3
 800b3e4:	f7ff fdb6 	bl	800af54 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    add(Title_Box);
 800b3e8:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b3ec:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b3f0:	681a      	ldr	r2, [r3, #0]
 800b3f2:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b3f6:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b3fa:	681b      	ldr	r3, [r3, #0]
 800b3fc:	33a0      	adds	r3, #160	; 0xa0
 800b3fe:	4619      	mov	r1, r3
 800b400:	4610      	mov	r0, r2
 800b402:	f7ff fd19 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    PKNG4_Box.setPosition(213, 120, 106, 120);
 800b406:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b40a:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b40e:	681b      	ldr	r3, [r3, #0]
 800b410:	f103 00d4 	add.w	r0, r3, #212	; 0xd4
 800b414:	2378      	movs	r3, #120	; 0x78
 800b416:	9300      	str	r3, [sp, #0]
 800b418:	236a      	movs	r3, #106	; 0x6a
 800b41a:	2278      	movs	r2, #120	; 0x78
 800b41c:	21d5      	movs	r1, #213	; 0xd5
 800b41e:	f7fe fe25 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    PKNG4_Box.setColor(touchgfx::Color::getColorFromRGB(41, 34, 34));
 800b422:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b426:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b42a:	681b      	ldr	r3, [r3, #0]
 800b42c:	f103 04d4 	add.w	r4, r3, #212	; 0xd4
 800b430:	2329      	movs	r3, #41	; 0x29
 800b432:	f887 30c3 	strb.w	r3, [r7, #195]	; 0xc3
 800b436:	2322      	movs	r3, #34	; 0x22
 800b438:	f887 30c2 	strb.w	r3, [r7, #194]	; 0xc2
 800b43c:	2322      	movs	r3, #34	; 0x22
 800b43e:	f887 30c1 	strb.w	r3, [r7, #193]	; 0xc1
 800b442:	f897 30c3 	ldrb.w	r3, [r7, #195]	; 0xc3
 800b446:	041b      	lsls	r3, r3, #16
 800b448:	461a      	mov	r2, r3
 800b44a:	f897 30c2 	ldrb.w	r3, [r7, #194]	; 0xc2
 800b44e:	021b      	lsls	r3, r3, #8
 800b450:	431a      	orrs	r2, r3
 800b452:	f897 30c1 	ldrb.w	r3, [r7, #193]	; 0xc1
 800b456:	4313      	orrs	r3, r2
 800b458:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b45c:	f107 0398 	add.w	r3, r7, #152	; 0x98
 800b460:	4611      	mov	r1, r2
 800b462:	4618      	mov	r0, r3
 800b464:	f7fe fd4e 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b468:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800b46c:	4619      	mov	r1, r3
 800b46e:	4620      	mov	r0, r4
 800b470:	f7ff fd16 	bl	800aea0 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    PKNG4_Box.setBorderColor(touchgfx::Color::getColorFromRGB(31, 25, 25));
 800b474:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b478:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b47c:	681b      	ldr	r3, [r3, #0]
 800b47e:	f103 04d4 	add.w	r4, r3, #212	; 0xd4
 800b482:	231f      	movs	r3, #31
 800b484:	f887 30c6 	strb.w	r3, [r7, #198]	; 0xc6
 800b488:	2319      	movs	r3, #25
 800b48a:	f887 30c5 	strb.w	r3, [r7, #197]	; 0xc5
 800b48e:	2319      	movs	r3, #25
 800b490:	f887 30c4 	strb.w	r3, [r7, #196]	; 0xc4
 800b494:	f897 30c6 	ldrb.w	r3, [r7, #198]	; 0xc6
 800b498:	041b      	lsls	r3, r3, #16
 800b49a:	461a      	mov	r2, r3
 800b49c:	f897 30c5 	ldrb.w	r3, [r7, #197]	; 0xc5
 800b4a0:	021b      	lsls	r3, r3, #8
 800b4a2:	431a      	orrs	r2, r3
 800b4a4:	f897 30c4 	ldrb.w	r3, [r7, #196]	; 0xc4
 800b4a8:	4313      	orrs	r3, r2
 800b4aa:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b4ae:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800b4b2:	4611      	mov	r1, r2
 800b4b4:	4618      	mov	r0, r3
 800b4b6:	f7fe fd25 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b4ba:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800b4be:	4619      	mov	r1, r3
 800b4c0:	4620      	mov	r0, r4
 800b4c2:	f7ff fd39 	bl	800af38 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
    PKNG4_Box.setBorderSize(5);
 800b4c6:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b4ca:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b4ce:	681b      	ldr	r3, [r3, #0]
 800b4d0:	33d4      	adds	r3, #212	; 0xd4
 800b4d2:	2105      	movs	r1, #5
 800b4d4:	4618      	mov	r0, r3
 800b4d6:	f7ff fd3d 	bl	800af54 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    add(PKNG4_Box);
 800b4da:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b4de:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b4e2:	681a      	ldr	r2, [r3, #0]
 800b4e4:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b4e8:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b4ec:	681b      	ldr	r3, [r3, #0]
 800b4ee:	33d4      	adds	r3, #212	; 0xd4
 800b4f0:	4619      	mov	r1, r3
 800b4f2:	4610      	mov	r0, r2
 800b4f4:	f7ff fca0 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    PKNG1_Box.setPosition(1, 0, 106, 120);
 800b4f8:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b4fc:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b500:	681b      	ldr	r3, [r3, #0]
 800b502:	f503 7084 	add.w	r0, r3, #264	; 0x108
 800b506:	2378      	movs	r3, #120	; 0x78
 800b508:	9300      	str	r3, [sp, #0]
 800b50a:	236a      	movs	r3, #106	; 0x6a
 800b50c:	2200      	movs	r2, #0
 800b50e:	2101      	movs	r1, #1
 800b510:	f7fe fdac 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    PKNG1_Box.setColor(touchgfx::Color::getColorFromRGB(41, 34, 34));
 800b514:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b518:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b51c:	681b      	ldr	r3, [r3, #0]
 800b51e:	f503 7484 	add.w	r4, r3, #264	; 0x108
 800b522:	2329      	movs	r3, #41	; 0x29
 800b524:	f887 30c9 	strb.w	r3, [r7, #201]	; 0xc9
 800b528:	2322      	movs	r3, #34	; 0x22
 800b52a:	f887 30c8 	strb.w	r3, [r7, #200]	; 0xc8
 800b52e:	2322      	movs	r3, #34	; 0x22
 800b530:	f887 30c7 	strb.w	r3, [r7, #199]	; 0xc7
 800b534:	f897 30c9 	ldrb.w	r3, [r7, #201]	; 0xc9
 800b538:	041b      	lsls	r3, r3, #16
 800b53a:	461a      	mov	r2, r3
 800b53c:	f897 30c8 	ldrb.w	r3, [r7, #200]	; 0xc8
 800b540:	021b      	lsls	r3, r3, #8
 800b542:	431a      	orrs	r2, r3
 800b544:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 800b548:	4313      	orrs	r3, r2
 800b54a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b54e:	f107 0390 	add.w	r3, r7, #144	; 0x90
 800b552:	4611      	mov	r1, r2
 800b554:	4618      	mov	r0, r3
 800b556:	f7fe fcd5 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b55a:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800b55e:	4619      	mov	r1, r3
 800b560:	4620      	mov	r0, r4
 800b562:	f7ff fc9d 	bl	800aea0 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    PKNG1_Box.setBorderColor(touchgfx::Color::getColorFromRGB(31, 25, 25));
 800b566:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b56a:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b56e:	681b      	ldr	r3, [r3, #0]
 800b570:	f503 7484 	add.w	r4, r3, #264	; 0x108
 800b574:	231f      	movs	r3, #31
 800b576:	f887 30cc 	strb.w	r3, [r7, #204]	; 0xcc
 800b57a:	2319      	movs	r3, #25
 800b57c:	f887 30cb 	strb.w	r3, [r7, #203]	; 0xcb
 800b580:	2319      	movs	r3, #25
 800b582:	f887 30ca 	strb.w	r3, [r7, #202]	; 0xca
 800b586:	f897 30cc 	ldrb.w	r3, [r7, #204]	; 0xcc
 800b58a:	041b      	lsls	r3, r3, #16
 800b58c:	461a      	mov	r2, r3
 800b58e:	f897 30cb 	ldrb.w	r3, [r7, #203]	; 0xcb
 800b592:	021b      	lsls	r3, r3, #8
 800b594:	431a      	orrs	r2, r3
 800b596:	f897 30ca 	ldrb.w	r3, [r7, #202]	; 0xca
 800b59a:	4313      	orrs	r3, r2
 800b59c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b5a0:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 800b5a4:	4611      	mov	r1, r2
 800b5a6:	4618      	mov	r0, r3
 800b5a8:	f7fe fcac 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b5ac:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800b5b0:	4619      	mov	r1, r3
 800b5b2:	4620      	mov	r0, r4
 800b5b4:	f7ff fcc0 	bl	800af38 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
    PKNG1_Box.setBorderSize(5);
 800b5b8:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b5bc:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b5c0:	681b      	ldr	r3, [r3, #0]
 800b5c2:	f503 7384 	add.w	r3, r3, #264	; 0x108
 800b5c6:	2105      	movs	r1, #5
 800b5c8:	4618      	mov	r0, r3
 800b5ca:	f7ff fcc3 	bl	800af54 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    add(PKNG1_Box);
 800b5ce:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b5d2:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b5d6:	681a      	ldr	r2, [r3, #0]
 800b5d8:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b5dc:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b5e0:	681b      	ldr	r3, [r3, #0]
 800b5e2:	f503 7384 	add.w	r3, r3, #264	; 0x108
 800b5e6:	4619      	mov	r1, r3
 800b5e8:	4610      	mov	r0, r2
 800b5ea:	f7ff fc25 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    PKNG2_Box.setPosition(107, 0, 106, 120);
 800b5ee:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b5f2:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b5f6:	681b      	ldr	r3, [r3, #0]
 800b5f8:	f503 709e 	add.w	r0, r3, #316	; 0x13c
 800b5fc:	2378      	movs	r3, #120	; 0x78
 800b5fe:	9300      	str	r3, [sp, #0]
 800b600:	236a      	movs	r3, #106	; 0x6a
 800b602:	2200      	movs	r2, #0
 800b604:	216b      	movs	r1, #107	; 0x6b
 800b606:	f7fe fd31 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    PKNG2_Box.setColor(touchgfx::Color::getColorFromRGB(41, 34, 34));
 800b60a:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b60e:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b612:	681b      	ldr	r3, [r3, #0]
 800b614:	f503 749e 	add.w	r4, r3, #316	; 0x13c
 800b618:	2329      	movs	r3, #41	; 0x29
 800b61a:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
 800b61e:	2322      	movs	r3, #34	; 0x22
 800b620:	f887 30ce 	strb.w	r3, [r7, #206]	; 0xce
 800b624:	2322      	movs	r3, #34	; 0x22
 800b626:	f887 30cd 	strb.w	r3, [r7, #205]	; 0xcd
 800b62a:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 800b62e:	041b      	lsls	r3, r3, #16
 800b630:	461a      	mov	r2, r3
 800b632:	f897 30ce 	ldrb.w	r3, [r7, #206]	; 0xce
 800b636:	021b      	lsls	r3, r3, #8
 800b638:	431a      	orrs	r2, r3
 800b63a:	f897 30cd 	ldrb.w	r3, [r7, #205]	; 0xcd
 800b63e:	4313      	orrs	r3, r2
 800b640:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b644:	f107 0388 	add.w	r3, r7, #136	; 0x88
 800b648:	4611      	mov	r1, r2
 800b64a:	4618      	mov	r0, r3
 800b64c:	f7fe fc5a 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b650:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800b654:	4619      	mov	r1, r3
 800b656:	4620      	mov	r0, r4
 800b658:	f7ff fc22 	bl	800aea0 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    PKNG2_Box.setBorderColor(touchgfx::Color::getColorFromRGB(31, 25, 25));
 800b65c:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b660:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b664:	681b      	ldr	r3, [r3, #0]
 800b666:	f503 749e 	add.w	r4, r3, #316	; 0x13c
 800b66a:	231f      	movs	r3, #31
 800b66c:	f887 30d2 	strb.w	r3, [r7, #210]	; 0xd2
 800b670:	2319      	movs	r3, #25
 800b672:	f887 30d1 	strb.w	r3, [r7, #209]	; 0xd1
 800b676:	2319      	movs	r3, #25
 800b678:	f887 30d0 	strb.w	r3, [r7, #208]	; 0xd0
 800b67c:	f897 30d2 	ldrb.w	r3, [r7, #210]	; 0xd2
 800b680:	041b      	lsls	r3, r3, #16
 800b682:	461a      	mov	r2, r3
 800b684:	f897 30d1 	ldrb.w	r3, [r7, #209]	; 0xd1
 800b688:	021b      	lsls	r3, r3, #8
 800b68a:	431a      	orrs	r2, r3
 800b68c:	f897 30d0 	ldrb.w	r3, [r7, #208]	; 0xd0
 800b690:	4313      	orrs	r3, r2
 800b692:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b696:	f107 0384 	add.w	r3, r7, #132	; 0x84
 800b69a:	4611      	mov	r1, r2
 800b69c:	4618      	mov	r0, r3
 800b69e:	f7fe fc31 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b6a2:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800b6a6:	4619      	mov	r1, r3
 800b6a8:	4620      	mov	r0, r4
 800b6aa:	f7ff fc45 	bl	800af38 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
    PKNG2_Box.setBorderSize(5);
 800b6ae:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b6b2:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b6b6:	681b      	ldr	r3, [r3, #0]
 800b6b8:	f503 739e 	add.w	r3, r3, #316	; 0x13c
 800b6bc:	2105      	movs	r1, #5
 800b6be:	4618      	mov	r0, r3
 800b6c0:	f7ff fc48 	bl	800af54 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    add(PKNG2_Box);
 800b6c4:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b6c8:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b6cc:	681a      	ldr	r2, [r3, #0]
 800b6ce:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b6d2:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b6d6:	681b      	ldr	r3, [r3, #0]
 800b6d8:	f503 739e 	add.w	r3, r3, #316	; 0x13c
 800b6dc:	4619      	mov	r1, r3
 800b6de:	4610      	mov	r0, r2
 800b6e0:	f7ff fbaa 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    PKNG3_Box.setPosition(213, 0, 106, 120);
 800b6e4:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b6e8:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b6ec:	681b      	ldr	r3, [r3, #0]
 800b6ee:	f503 70b8 	add.w	r0, r3, #368	; 0x170
 800b6f2:	2378      	movs	r3, #120	; 0x78
 800b6f4:	9300      	str	r3, [sp, #0]
 800b6f6:	236a      	movs	r3, #106	; 0x6a
 800b6f8:	2200      	movs	r2, #0
 800b6fa:	21d5      	movs	r1, #213	; 0xd5
 800b6fc:	f7fe fcb6 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    PKNG3_Box.setColor(touchgfx::Color::getColorFromRGB(41, 34, 34));
 800b700:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b704:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b708:	681b      	ldr	r3, [r3, #0]
 800b70a:	f503 74b8 	add.w	r4, r3, #368	; 0x170
 800b70e:	2329      	movs	r3, #41	; 0x29
 800b710:	f887 30d5 	strb.w	r3, [r7, #213]	; 0xd5
 800b714:	2322      	movs	r3, #34	; 0x22
 800b716:	f887 30d4 	strb.w	r3, [r7, #212]	; 0xd4
 800b71a:	2322      	movs	r3, #34	; 0x22
 800b71c:	f887 30d3 	strb.w	r3, [r7, #211]	; 0xd3
 800b720:	f897 30d5 	ldrb.w	r3, [r7, #213]	; 0xd5
 800b724:	041b      	lsls	r3, r3, #16
 800b726:	461a      	mov	r2, r3
 800b728:	f897 30d4 	ldrb.w	r3, [r7, #212]	; 0xd4
 800b72c:	021b      	lsls	r3, r3, #8
 800b72e:	431a      	orrs	r2, r3
 800b730:	f897 30d3 	ldrb.w	r3, [r7, #211]	; 0xd3
 800b734:	4313      	orrs	r3, r2
 800b736:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b73a:	f107 0380 	add.w	r3, r7, #128	; 0x80
 800b73e:	4611      	mov	r1, r2
 800b740:	4618      	mov	r0, r3
 800b742:	f7fe fbdf 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b746:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800b74a:	4619      	mov	r1, r3
 800b74c:	4620      	mov	r0, r4
 800b74e:	f7ff fba7 	bl	800aea0 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    PKNG3_Box.setBorderColor(touchgfx::Color::getColorFromRGB(31, 25, 25));
 800b752:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b756:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b75a:	681b      	ldr	r3, [r3, #0]
 800b75c:	f503 74b8 	add.w	r4, r3, #368	; 0x170
 800b760:	231f      	movs	r3, #31
 800b762:	f887 30d8 	strb.w	r3, [r7, #216]	; 0xd8
 800b766:	2319      	movs	r3, #25
 800b768:	f887 30d7 	strb.w	r3, [r7, #215]	; 0xd7
 800b76c:	2319      	movs	r3, #25
 800b76e:	f887 30d6 	strb.w	r3, [r7, #214]	; 0xd6
 800b772:	f897 30d8 	ldrb.w	r3, [r7, #216]	; 0xd8
 800b776:	041b      	lsls	r3, r3, #16
 800b778:	461a      	mov	r2, r3
 800b77a:	f897 30d7 	ldrb.w	r3, [r7, #215]	; 0xd7
 800b77e:	021b      	lsls	r3, r3, #8
 800b780:	431a      	orrs	r2, r3
 800b782:	f897 30d6 	ldrb.w	r3, [r7, #214]	; 0xd6
 800b786:	4313      	orrs	r3, r2
 800b788:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b78c:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 800b790:	4611      	mov	r1, r2
 800b792:	4618      	mov	r0, r3
 800b794:	f7fe fbb6 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b798:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800b79a:	4619      	mov	r1, r3
 800b79c:	4620      	mov	r0, r4
 800b79e:	f7ff fbcb 	bl	800af38 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
    PKNG3_Box.setBorderSize(5);
 800b7a2:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b7a6:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b7aa:	681b      	ldr	r3, [r3, #0]
 800b7ac:	f503 73b8 	add.w	r3, r3, #368	; 0x170
 800b7b0:	2105      	movs	r1, #5
 800b7b2:	4618      	mov	r0, r3
 800b7b4:	f7ff fbce 	bl	800af54 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    add(PKNG3_Box);
 800b7b8:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b7bc:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b7c0:	681a      	ldr	r2, [r3, #0]
 800b7c2:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b7c6:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b7ca:	681b      	ldr	r3, [r3, #0]
 800b7cc:	f503 73b8 	add.w	r3, r3, #368	; 0x170
 800b7d0:	4619      	mov	r1, r3
 800b7d2:	4610      	mov	r0, r2
 800b7d4:	f7ff fb30 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Subtitle2_3.setPosition(36, 6, 39, 15);
 800b7d8:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b7dc:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b7e0:	681b      	ldr	r3, [r3, #0]
 800b7e2:	f503 70d2 	add.w	r0, r3, #420	; 0x1a4
 800b7e6:	230f      	movs	r3, #15
 800b7e8:	9300      	str	r3, [sp, #0]
 800b7ea:	2327      	movs	r3, #39	; 0x27
 800b7ec:	2206      	movs	r2, #6
 800b7ee:	2124      	movs	r1, #36	; 0x24
 800b7f0:	f7fe fc3c 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    Subtitle2_3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800b7f4:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b7f8:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b7fc:	681b      	ldr	r3, [r3, #0]
 800b7fe:	f503 74d2 	add.w	r4, r3, #420	; 0x1a4
 800b802:	23ff      	movs	r3, #255	; 0xff
 800b804:	f887 30db 	strb.w	r3, [r7, #219]	; 0xdb
 800b808:	23ff      	movs	r3, #255	; 0xff
 800b80a:	f887 30da 	strb.w	r3, [r7, #218]	; 0xda
 800b80e:	23ff      	movs	r3, #255	; 0xff
 800b810:	f887 30d9 	strb.w	r3, [r7, #217]	; 0xd9
 800b814:	f897 30db 	ldrb.w	r3, [r7, #219]	; 0xdb
 800b818:	041b      	lsls	r3, r3, #16
 800b81a:	461a      	mov	r2, r3
 800b81c:	f897 30da 	ldrb.w	r3, [r7, #218]	; 0xda
 800b820:	021b      	lsls	r3, r3, #8
 800b822:	431a      	orrs	r2, r3
 800b824:	f897 30d9 	ldrb.w	r3, [r7, #217]	; 0xd9
 800b828:	4313      	orrs	r3, r2
 800b82a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b82e:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800b832:	4611      	mov	r1, r2
 800b834:	4618      	mov	r0, r3
 800b836:	f7fe fb65 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b83a:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800b83c:	461a      	mov	r2, r3
 800b83e:	f8c7 40dc 	str.w	r4, [r7, #220]	; 0xdc
 800b842:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b846:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 800b84a:	601a      	str	r2, [r3, #0]
        color = newColor;
 800b84c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800b850:	f507 729c 	add.w	r2, r7, #312	; 0x138
 800b854:	f5a2 7284 	sub.w	r2, r2, #264	; 0x108
 800b858:	6812      	ldr	r2, [r2, #0]
 800b85a:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800b85c:	bf00      	nop
    Subtitle2_3.setLinespacing(0);
 800b85e:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b862:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b866:	681b      	ldr	r3, [r3, #0]
 800b868:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800b86c:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800b870:	2300      	movs	r3, #0
 800b872:	f8a7 30e2 	strh.w	r3, [r7, #226]	; 0xe2
        linespace = space;
 800b876:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b87a:	f8b7 20e2 	ldrh.w	r2, [r7, #226]	; 0xe2
 800b87e:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800b880:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b884:	681b      	ldr	r3, [r3, #0]
 800b886:	3384      	adds	r3, #132	; 0x84
 800b888:	681b      	ldr	r3, [r3, #0]
 800b88a:	f8d7 40e4 	ldr.w	r4, [r7, #228]	; 0xe4
 800b88e:	463a      	mov	r2, r7
 800b890:	f8d7 10e4 	ldr.w	r1, [r7, #228]	; 0xe4
 800b894:	4610      	mov	r0, r2
 800b896:	4798      	blx	r3
 800b898:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b89c:	f5a3 729c 	sub.w	r2, r3, #312	; 0x138
 800b8a0:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800b8a4:	ca07      	ldmia	r2, {r0, r1, r2}
 800b8a6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800b8aa:	bf00      	nop
    Subtitle2_3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2VZQ));
 800b8ac:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b8b0:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b8b4:	681b      	ldr	r3, [r3, #0]
 800b8b6:	f503 74d2 	add.w	r4, r3, #420	; 0x1a4
 800b8ba:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800b8be:	210b      	movs	r1, #11
 800b8c0:	4618      	mov	r0, r3
 800b8c2:	f7fe fd4d 	bl	800a360 <_ZN8touchgfx9TypedTextC1Et>
 800b8c6:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800b8ca:	4619      	mov	r1, r3
 800b8cc:	4620      	mov	r0, r4
 800b8ce:	f004 fce5 	bl	801029c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800b8d2:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800b8d6:	4618      	mov	r0, r3
 800b8d8:	f7fd fb84 	bl	8008fe4 <_ZN8touchgfx9TypedTextD1Ev>
    add(Subtitle2_3);
 800b8dc:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b8e0:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b8e4:	681a      	ldr	r2, [r3, #0]
 800b8e6:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b8ea:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b8ee:	681b      	ldr	r3, [r3, #0]
 800b8f0:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800b8f4:	4619      	mov	r1, r3
 800b8f6:	4610      	mov	r0, r2
 800b8f8:	f7ff fa9e 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Subtitle2_3_1_1.setPosition(248, 127, 39, 15);
 800b8fc:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b900:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b904:	681b      	ldr	r3, [r3, #0]
 800b906:	f503 70f6 	add.w	r0, r3, #492	; 0x1ec
 800b90a:	230f      	movs	r3, #15
 800b90c:	9300      	str	r3, [sp, #0]
 800b90e:	2327      	movs	r3, #39	; 0x27
 800b910:	227f      	movs	r2, #127	; 0x7f
 800b912:	21f8      	movs	r1, #248	; 0xf8
 800b914:	f7fe fbaa 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    Subtitle2_3_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800b918:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b91c:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b920:	681b      	ldr	r3, [r3, #0]
 800b922:	f503 74f6 	add.w	r4, r3, #492	; 0x1ec
 800b926:	23ff      	movs	r3, #255	; 0xff
 800b928:	f887 30eb 	strb.w	r3, [r7, #235]	; 0xeb
 800b92c:	23ff      	movs	r3, #255	; 0xff
 800b92e:	f887 30ea 	strb.w	r3, [r7, #234]	; 0xea
 800b932:	23ff      	movs	r3, #255	; 0xff
 800b934:	f887 30e9 	strb.w	r3, [r7, #233]	; 0xe9
 800b938:	f897 30eb 	ldrb.w	r3, [r7, #235]	; 0xeb
 800b93c:	041b      	lsls	r3, r3, #16
 800b93e:	461a      	mov	r2, r3
 800b940:	f897 30ea 	ldrb.w	r3, [r7, #234]	; 0xea
 800b944:	021b      	lsls	r3, r3, #8
 800b946:	431a      	orrs	r2, r3
 800b948:	f897 30e9 	ldrb.w	r3, [r7, #233]	; 0xe9
 800b94c:	4313      	orrs	r3, r2
 800b94e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800b952:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800b956:	4611      	mov	r1, r2
 800b958:	4618      	mov	r0, r3
 800b95a:	f7fe fad3 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800b95e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800b960:	461a      	mov	r2, r3
 800b962:	f8c7 40ec 	str.w	r4, [r7, #236]	; 0xec
 800b966:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b96a:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 800b96e:	601a      	str	r2, [r3, #0]
        color = newColor;
 800b970:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 800b974:	f507 729c 	add.w	r2, r7, #312	; 0x138
 800b978:	f5a2 7286 	sub.w	r2, r2, #268	; 0x10c
 800b97c:	6812      	ldr	r2, [r2, #0]
 800b97e:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800b980:	bf00      	nop
    Subtitle2_3_1_1.setLinespacing(0);
 800b982:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b986:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b98a:	681b      	ldr	r3, [r3, #0]
 800b98c:	f503 73f6 	add.w	r3, r3, #492	; 0x1ec
 800b990:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 800b994:	2300      	movs	r3, #0
 800b996:	f8a7 30f2 	strh.w	r3, [r7, #242]	; 0xf2
        linespace = space;
 800b99a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b99e:	f8b7 20f2 	ldrh.w	r2, [r7, #242]	; 0xf2
 800b9a2:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800b9a4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b9a8:	681b      	ldr	r3, [r3, #0]
 800b9aa:	3384      	adds	r3, #132	; 0x84
 800b9ac:	681b      	ldr	r3, [r3, #0]
 800b9ae:	f8d7 40f4 	ldr.w	r4, [r7, #244]	; 0xf4
 800b9b2:	463a      	mov	r2, r7
 800b9b4:	f8d7 10f4 	ldr.w	r1, [r7, #244]	; 0xf4
 800b9b8:	4610      	mov	r0, r2
 800b9ba:	4798      	blx	r3
 800b9bc:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b9c0:	f5a3 729c 	sub.w	r2, r3, #312	; 0x138
 800b9c4:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800b9c8:	ca07      	ldmia	r2, {r0, r1, r2}
 800b9ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800b9ce:	bf00      	nop
    Subtitle2_3_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UCK5));
 800b9d0:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800b9d4:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800b9d8:	681b      	ldr	r3, [r3, #0]
 800b9da:	f503 74f6 	add.w	r4, r3, #492	; 0x1ec
 800b9de:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800b9e2:	210a      	movs	r1, #10
 800b9e4:	4618      	mov	r0, r3
 800b9e6:	f7fe fcbb 	bl	800a360 <_ZN8touchgfx9TypedTextC1Et>
 800b9ea:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800b9ee:	4619      	mov	r1, r3
 800b9f0:	4620      	mov	r0, r4
 800b9f2:	f004 fc53 	bl	801029c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800b9f6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800b9fa:	4618      	mov	r0, r3
 800b9fc:	f7fd faf2 	bl	8008fe4 <_ZN8touchgfx9TypedTextD1Ev>
    add(Subtitle2_3_1_1);
 800ba00:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800ba04:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800ba08:	681a      	ldr	r2, [r3, #0]
 800ba0a:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800ba0e:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800ba12:	681b      	ldr	r3, [r3, #0]
 800ba14:	f503 73f6 	add.w	r3, r3, #492	; 0x1ec
 800ba18:	4619      	mov	r1, r3
 800ba1a:	4610      	mov	r0, r2
 800ba1c:	f7ff fa0c 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Subtitle2_3_1_1_1.setPosition(248, 6, 39, 15);
 800ba20:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800ba24:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800ba28:	681b      	ldr	r3, [r3, #0]
 800ba2a:	f503 700d 	add.w	r0, r3, #564	; 0x234
 800ba2e:	230f      	movs	r3, #15
 800ba30:	9300      	str	r3, [sp, #0]
 800ba32:	2327      	movs	r3, #39	; 0x27
 800ba34:	2206      	movs	r2, #6
 800ba36:	21f8      	movs	r1, #248	; 0xf8
 800ba38:	f7fe fb18 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    Subtitle2_3_1_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800ba3c:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800ba40:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800ba44:	681b      	ldr	r3, [r3, #0]
 800ba46:	f503 740d 	add.w	r4, r3, #564	; 0x234
 800ba4a:	23ff      	movs	r3, #255	; 0xff
 800ba4c:	f887 30fb 	strb.w	r3, [r7, #251]	; 0xfb
 800ba50:	23ff      	movs	r3, #255	; 0xff
 800ba52:	f887 30fa 	strb.w	r3, [r7, #250]	; 0xfa
 800ba56:	23ff      	movs	r3, #255	; 0xff
 800ba58:	f887 30f9 	strb.w	r3, [r7, #249]	; 0xf9
 800ba5c:	f897 30fb 	ldrb.w	r3, [r7, #251]	; 0xfb
 800ba60:	041b      	lsls	r3, r3, #16
 800ba62:	461a      	mov	r2, r3
 800ba64:	f897 30fa 	ldrb.w	r3, [r7, #250]	; 0xfa
 800ba68:	021b      	lsls	r3, r3, #8
 800ba6a:	431a      	orrs	r2, r3
 800ba6c:	f897 30f9 	ldrb.w	r3, [r7, #249]	; 0xf9
 800ba70:	4313      	orrs	r3, r2
 800ba72:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ba76:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800ba7a:	4611      	mov	r1, r2
 800ba7c:	4618      	mov	r0, r3
 800ba7e:	f7fe fa41 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800ba82:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800ba84:	461a      	mov	r2, r3
 800ba86:	f8c7 40fc 	str.w	r4, [r7, #252]	; 0xfc
 800ba8a:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800ba8e:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 800ba92:	601a      	str	r2, [r3, #0]
        color = newColor;
 800ba94:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800ba98:	f507 729c 	add.w	r2, r7, #312	; 0x138
 800ba9c:	f5a2 7288 	sub.w	r2, r2, #272	; 0x110
 800baa0:	6812      	ldr	r2, [r2, #0]
 800baa2:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800baa4:	bf00      	nop
    Subtitle2_3_1_1_1.setLinespacing(0);
 800baa6:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800baaa:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800baae:	681b      	ldr	r3, [r3, #0]
 800bab0:	f503 730d 	add.w	r3, r3, #564	; 0x234
 800bab4:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800bab8:	2300      	movs	r3, #0
 800baba:	f8a7 3102 	strh.w	r3, [r7, #258]	; 0x102
        linespace = space;
 800babe:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800bac2:	f8b7 2102 	ldrh.w	r2, [r7, #258]	; 0x102
 800bac6:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800bac8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800bacc:	681b      	ldr	r3, [r3, #0]
 800bace:	3384      	adds	r3, #132	; 0x84
 800bad0:	681b      	ldr	r3, [r3, #0]
 800bad2:	f8d7 4104 	ldr.w	r4, [r7, #260]	; 0x104
 800bad6:	463a      	mov	r2, r7
 800bad8:	f8d7 1104 	ldr.w	r1, [r7, #260]	; 0x104
 800badc:	4610      	mov	r0, r2
 800bade:	4798      	blx	r3
 800bae0:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bae4:	f5a3 729c 	sub.w	r2, r3, #312	; 0x138
 800bae8:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800baec:	ca07      	ldmia	r2, {r0, r1, r2}
 800baee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800baf2:	bf00      	nop
    Subtitle2_3_1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AZKU));
 800baf4:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800baf8:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bafc:	681b      	ldr	r3, [r3, #0]
 800bafe:	f503 740d 	add.w	r4, r3, #564	; 0x234
 800bb02:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800bb06:	2109      	movs	r1, #9
 800bb08:	4618      	mov	r0, r3
 800bb0a:	f7fe fc29 	bl	800a360 <_ZN8touchgfx9TypedTextC1Et>
 800bb0e:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800bb12:	4619      	mov	r1, r3
 800bb14:	4620      	mov	r0, r4
 800bb16:	f004 fbc1 	bl	801029c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800bb1a:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800bb1e:	4618      	mov	r0, r3
 800bb20:	f7fd fa60 	bl	8008fe4 <_ZN8touchgfx9TypedTextD1Ev>
    add(Subtitle2_3_1_1_1);
 800bb24:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bb28:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bb2c:	681a      	ldr	r2, [r3, #0]
 800bb2e:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bb32:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bb36:	681b      	ldr	r3, [r3, #0]
 800bb38:	f503 730d 	add.w	r3, r3, #564	; 0x234
 800bb3c:	4619      	mov	r1, r3
 800bb3e:	4610      	mov	r0, r2
 800bb40:	f7ff f97a 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Subtitle2_3_1_1_1_1.setPosition(141, 6, 39, 15);
 800bb44:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bb48:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bb4c:	681b      	ldr	r3, [r3, #0]
 800bb4e:	f503 701f 	add.w	r0, r3, #636	; 0x27c
 800bb52:	230f      	movs	r3, #15
 800bb54:	9300      	str	r3, [sp, #0]
 800bb56:	2327      	movs	r3, #39	; 0x27
 800bb58:	2206      	movs	r2, #6
 800bb5a:	218d      	movs	r1, #141	; 0x8d
 800bb5c:	f7fe fa86 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    Subtitle2_3_1_1_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800bb60:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bb64:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bb68:	681b      	ldr	r3, [r3, #0]
 800bb6a:	f503 741f 	add.w	r4, r3, #636	; 0x27c
 800bb6e:	23ff      	movs	r3, #255	; 0xff
 800bb70:	f887 310b 	strb.w	r3, [r7, #267]	; 0x10b
 800bb74:	23ff      	movs	r3, #255	; 0xff
 800bb76:	f887 310a 	strb.w	r3, [r7, #266]	; 0x10a
 800bb7a:	23ff      	movs	r3, #255	; 0xff
 800bb7c:	f887 3109 	strb.w	r3, [r7, #265]	; 0x109
 800bb80:	f897 310b 	ldrb.w	r3, [r7, #267]	; 0x10b
 800bb84:	041b      	lsls	r3, r3, #16
 800bb86:	461a      	mov	r2, r3
 800bb88:	f897 310a 	ldrb.w	r3, [r7, #266]	; 0x10a
 800bb8c:	021b      	lsls	r3, r3, #8
 800bb8e:	431a      	orrs	r2, r3
 800bb90:	f897 3109 	ldrb.w	r3, [r7, #265]	; 0x109
 800bb94:	4313      	orrs	r3, r2
 800bb96:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800bb9a:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 800bb9e:	4611      	mov	r1, r2
 800bba0:	4618      	mov	r0, r3
 800bba2:	f7fe f9af 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800bba6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800bba8:	461a      	mov	r2, r3
 800bbaa:	f8c7 410c 	str.w	r4, [r7, #268]	; 0x10c
 800bbae:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bbb2:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 800bbb6:	601a      	str	r2, [r3, #0]
        color = newColor;
 800bbb8:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 800bbbc:	f507 729c 	add.w	r2, r7, #312	; 0x138
 800bbc0:	f5a2 728a 	sub.w	r2, r2, #276	; 0x114
 800bbc4:	6812      	ldr	r2, [r2, #0]
 800bbc6:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800bbc8:	bf00      	nop
    Subtitle2_3_1_1_1_1.setLinespacing(0);
 800bbca:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bbce:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bbd2:	681b      	ldr	r3, [r3, #0]
 800bbd4:	f503 731f 	add.w	r3, r3, #636	; 0x27c
 800bbd8:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 800bbdc:	2300      	movs	r3, #0
 800bbde:	f8a7 3112 	strh.w	r3, [r7, #274]	; 0x112
        linespace = space;
 800bbe2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800bbe6:	f8b7 2112 	ldrh.w	r2, [r7, #274]	; 0x112
 800bbea:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800bbec:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800bbf0:	681b      	ldr	r3, [r3, #0]
 800bbf2:	3384      	adds	r3, #132	; 0x84
 800bbf4:	681b      	ldr	r3, [r3, #0]
 800bbf6:	f8d7 4114 	ldr.w	r4, [r7, #276]	; 0x114
 800bbfa:	463a      	mov	r2, r7
 800bbfc:	f8d7 1114 	ldr.w	r1, [r7, #276]	; 0x114
 800bc00:	4610      	mov	r0, r2
 800bc02:	4798      	blx	r3
 800bc04:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bc08:	f5a3 729c 	sub.w	r2, r3, #312	; 0x138
 800bc0c:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800bc10:	ca07      	ldmia	r2, {r0, r1, r2}
 800bc12:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800bc16:	bf00      	nop
    Subtitle2_3_1_1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S08W));
 800bc18:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bc1c:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bc20:	681b      	ldr	r3, [r3, #0]
 800bc22:	f503 741f 	add.w	r4, r3, #636	; 0x27c
 800bc26:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800bc2a:	2108      	movs	r1, #8
 800bc2c:	4618      	mov	r0, r3
 800bc2e:	f7fe fb97 	bl	800a360 <_ZN8touchgfx9TypedTextC1Et>
 800bc32:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800bc36:	4619      	mov	r1, r3
 800bc38:	4620      	mov	r0, r4
 800bc3a:	f004 fb2f 	bl	801029c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800bc3e:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800bc42:	4618      	mov	r0, r3
 800bc44:	f7fd f9ce 	bl	8008fe4 <_ZN8touchgfx9TypedTextD1Ev>
    add(Subtitle2_3_1_1_1_1);
 800bc48:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bc4c:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bc50:	681a      	ldr	r2, [r3, #0]
 800bc52:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bc56:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bc5a:	681b      	ldr	r3, [r3, #0]
 800bc5c:	f503 731f 	add.w	r3, r3, #636	; 0x27c
 800bc60:	4619      	mov	r1, r3
 800bc62:	4610      	mov	r0, r2
 800bc64:	f7ff f8e8 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Subtitle2.setPosition(36, 127, 39, 15);
 800bc68:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bc6c:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bc70:	681b      	ldr	r3, [r3, #0]
 800bc72:	f503 7031 	add.w	r0, r3, #708	; 0x2c4
 800bc76:	230f      	movs	r3, #15
 800bc78:	9300      	str	r3, [sp, #0]
 800bc7a:	2327      	movs	r3, #39	; 0x27
 800bc7c:	227f      	movs	r2, #127	; 0x7f
 800bc7e:	2124      	movs	r1, #36	; 0x24
 800bc80:	f7fe f9f4 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    Subtitle2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800bc84:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bc88:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bc8c:	681b      	ldr	r3, [r3, #0]
 800bc8e:	f503 7431 	add.w	r4, r3, #708	; 0x2c4
 800bc92:	23ff      	movs	r3, #255	; 0xff
 800bc94:	f887 311b 	strb.w	r3, [r7, #283]	; 0x11b
 800bc98:	23ff      	movs	r3, #255	; 0xff
 800bc9a:	f887 311a 	strb.w	r3, [r7, #282]	; 0x11a
 800bc9e:	23ff      	movs	r3, #255	; 0xff
 800bca0:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 800bca4:	f897 311b 	ldrb.w	r3, [r7, #283]	; 0x11b
 800bca8:	041b      	lsls	r3, r3, #16
 800bcaa:	461a      	mov	r2, r3
 800bcac:	f897 311a 	ldrb.w	r3, [r7, #282]	; 0x11a
 800bcb0:	021b      	lsls	r3, r3, #8
 800bcb2:	431a      	orrs	r2, r3
 800bcb4:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 800bcb8:	4313      	orrs	r3, r2
 800bcba:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800bcbe:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800bcc2:	4611      	mov	r1, r2
 800bcc4:	4618      	mov	r0, r3
 800bcc6:	f7fe f91d 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800bcca:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800bccc:	461a      	mov	r2, r3
 800bcce:	f8c7 411c 	str.w	r4, [r7, #284]	; 0x11c
 800bcd2:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bcd6:	f5a3 738c 	sub.w	r3, r3, #280	; 0x118
 800bcda:	601a      	str	r2, [r3, #0]
        color = newColor;
 800bcdc:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 800bce0:	f507 729c 	add.w	r2, r7, #312	; 0x138
 800bce4:	f5a2 728c 	sub.w	r2, r2, #280	; 0x118
 800bce8:	6812      	ldr	r2, [r2, #0]
 800bcea:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800bcec:	bf00      	nop
    Subtitle2.setLinespacing(0);
 800bcee:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bcf2:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bcf6:	681b      	ldr	r3, [r3, #0]
 800bcf8:	f503 7331 	add.w	r3, r3, #708	; 0x2c4
 800bcfc:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 800bd00:	2300      	movs	r3, #0
 800bd02:	f8a7 3122 	strh.w	r3, [r7, #290]	; 0x122
        linespace = space;
 800bd06:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800bd0a:	f8b7 2122 	ldrh.w	r2, [r7, #290]	; 0x122
 800bd0e:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800bd10:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800bd14:	681b      	ldr	r3, [r3, #0]
 800bd16:	3384      	adds	r3, #132	; 0x84
 800bd18:	681b      	ldr	r3, [r3, #0]
 800bd1a:	f8d7 4124 	ldr.w	r4, [r7, #292]	; 0x124
 800bd1e:	463a      	mov	r2, r7
 800bd20:	f8d7 1124 	ldr.w	r1, [r7, #292]	; 0x124
 800bd24:	4610      	mov	r0, r2
 800bd26:	4798      	blx	r3
 800bd28:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bd2c:	f5a3 729c 	sub.w	r2, r3, #312	; 0x138
 800bd30:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800bd34:	ca07      	ldmia	r2, {r0, r1, r2}
 800bd36:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800bd3a:	bf00      	nop
    Subtitle2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G3P0));
 800bd3c:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bd40:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bd44:	681b      	ldr	r3, [r3, #0]
 800bd46:	f503 7431 	add.w	r4, r3, #708	; 0x2c4
 800bd4a:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800bd4e:	2111      	movs	r1, #17
 800bd50:	4618      	mov	r0, r3
 800bd52:	f7fe fb05 	bl	800a360 <_ZN8touchgfx9TypedTextC1Et>
 800bd56:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800bd5a:	4619      	mov	r1, r3
 800bd5c:	4620      	mov	r0, r4
 800bd5e:	f004 fa9d 	bl	801029c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800bd62:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800bd66:	4618      	mov	r0, r3
 800bd68:	f7fd f93c 	bl	8008fe4 <_ZN8touchgfx9TypedTextD1Ev>
    add(Subtitle2);
 800bd6c:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bd70:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bd74:	681a      	ldr	r2, [r3, #0]
 800bd76:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bd7a:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bd7e:	681b      	ldr	r3, [r3, #0]
 800bd80:	f503 7331 	add.w	r3, r3, #708	; 0x2c4
 800bd84:	4619      	mov	r1, r3
 800bd86:	4610      	mov	r0, r2
 800bd88:	f7ff f856 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    Subtitle2_2.setPosition(122, 173, 76, 15);
 800bd8c:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bd90:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bd94:	681b      	ldr	r3, [r3, #0]
 800bd96:	f503 7043 	add.w	r0, r3, #780	; 0x30c
 800bd9a:	230f      	movs	r3, #15
 800bd9c:	9300      	str	r3, [sp, #0]
 800bd9e:	234c      	movs	r3, #76	; 0x4c
 800bda0:	22ad      	movs	r2, #173	; 0xad
 800bda2:	217a      	movs	r1, #122	; 0x7a
 800bda4:	f7fe f962 	bl	800a06c <_ZN8touchgfx8Drawable11setPositionEssss>
    Subtitle2_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800bda8:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bdac:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bdb0:	681b      	ldr	r3, [r3, #0]
 800bdb2:	f503 7443 	add.w	r4, r3, #780	; 0x30c
 800bdb6:	23ff      	movs	r3, #255	; 0xff
 800bdb8:	f887 312b 	strb.w	r3, [r7, #299]	; 0x12b
 800bdbc:	23ff      	movs	r3, #255	; 0xff
 800bdbe:	f887 312a 	strb.w	r3, [r7, #298]	; 0x12a
 800bdc2:	23ff      	movs	r3, #255	; 0xff
 800bdc4:	f887 3129 	strb.w	r3, [r7, #297]	; 0x129
 800bdc8:	f897 312b 	ldrb.w	r3, [r7, #299]	; 0x12b
 800bdcc:	041b      	lsls	r3, r3, #16
 800bdce:	461a      	mov	r2, r3
 800bdd0:	f897 312a 	ldrb.w	r3, [r7, #298]	; 0x12a
 800bdd4:	021b      	lsls	r3, r3, #8
 800bdd6:	431a      	orrs	r2, r3
 800bdd8:	f897 3129 	ldrb.w	r3, [r7, #297]	; 0x129
 800bddc:	4313      	orrs	r3, r2
 800bdde:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800bde2:	f107 0364 	add.w	r3, r7, #100	; 0x64
 800bde6:	4611      	mov	r1, r2
 800bde8:	4618      	mov	r0, r3
 800bdea:	f7fe f88b 	bl	8009f04 <_ZN8touchgfx9colortypeC1Em>
 800bdee:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800bdf0:	461a      	mov	r2, r3
 800bdf2:	f8c7 412c 	str.w	r4, [r7, #300]	; 0x12c
 800bdf6:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bdfa:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 800bdfe:	601a      	str	r2, [r3, #0]
        color = newColor;
 800be00:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800be04:	f507 729c 	add.w	r2, r7, #312	; 0x138
 800be08:	f5a2 728e 	sub.w	r2, r2, #284	; 0x11c
 800be0c:	6812      	ldr	r2, [r2, #0]
 800be0e:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800be10:	bf00      	nop
    Subtitle2_2.setLinespacing(0);
 800be12:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800be16:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800be1a:	681b      	ldr	r3, [r3, #0]
 800be1c:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 800be20:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
 800be24:	2300      	movs	r3, #0
 800be26:	f8a7 3132 	strh.w	r3, [r7, #306]	; 0x132
        linespace = space;
 800be2a:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 800be2e:	f8b7 2132 	ldrh.w	r2, [r7, #306]	; 0x132
 800be32:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800be34:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 800be38:	681b      	ldr	r3, [r3, #0]
 800be3a:	3384      	adds	r3, #132	; 0x84
 800be3c:	681b      	ldr	r3, [r3, #0]
 800be3e:	f8d7 4134 	ldr.w	r4, [r7, #308]	; 0x134
 800be42:	463a      	mov	r2, r7
 800be44:	f8d7 1134 	ldr.w	r1, [r7, #308]	; 0x134
 800be48:	4610      	mov	r0, r2
 800be4a:	4798      	blx	r3
 800be4c:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800be50:	f5a3 729c 	sub.w	r2, r3, #312	; 0x138
 800be54:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800be58:	ca07      	ldmia	r2, {r0, r1, r2}
 800be5a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800be5e:	bf00      	nop
    Subtitle2_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OG3J));
 800be60:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800be64:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800be68:	681b      	ldr	r3, [r3, #0]
 800be6a:	f503 7443 	add.w	r4, r3, #780	; 0x30c
 800be6e:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800be72:	210c      	movs	r1, #12
 800be74:	4618      	mov	r0, r3
 800be76:	f7fe fa73 	bl	800a360 <_ZN8touchgfx9TypedTextC1Et>
 800be7a:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800be7e:	4619      	mov	r1, r3
 800be80:	4620      	mov	r0, r4
 800be82:	f004 fa0b 	bl	801029c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800be86:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800be8a:	4618      	mov	r0, r3
 800be8c:	f7fd f8aa 	bl	8008fe4 <_ZN8touchgfx9TypedTextD1Ev>
    add(Subtitle2_2);
 800be90:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800be94:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800be98:	681a      	ldr	r2, [r3, #0]
 800be9a:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800be9e:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bea2:	681b      	ldr	r3, [r3, #0]
 800bea4:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 800bea8:	4619      	mov	r1, r3
 800beaa:	4610      	mov	r0, r2
 800beac:	f7fe ffc4 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    peaking_filter_1.setXY(7, 38);
 800beb0:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800beb4:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800beb8:	681b      	ldr	r3, [r3, #0]
 800beba:	f503 7355 	add.w	r3, r3, #852	; 0x354
 800bebe:	2226      	movs	r2, #38	; 0x26
 800bec0:	2107      	movs	r1, #7
 800bec2:	4618      	mov	r0, r3
 800bec4:	f7fe f911 	bl	800a0ea <_ZN8touchgfx8Drawable5setXYEss>
    add(peaking_filter_1);
 800bec8:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800becc:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bed0:	681a      	ldr	r2, [r3, #0]
 800bed2:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bed6:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800beda:	681b      	ldr	r3, [r3, #0]
 800bedc:	f503 7355 	add.w	r3, r3, #852	; 0x354
 800bee0:	4619      	mov	r1, r3
 800bee2:	4610      	mov	r0, r2
 800bee4:	f7fe ffa8 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    peaking_filter_0.setXY(7, 158);
 800bee8:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800beec:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bef0:	681b      	ldr	r3, [r3, #0]
 800bef2:	f203 5324 	addw	r3, r3, #1316	; 0x524
 800bef6:	229e      	movs	r2, #158	; 0x9e
 800bef8:	2107      	movs	r1, #7
 800befa:	4618      	mov	r0, r3
 800befc:	f7fe f8f5 	bl	800a0ea <_ZN8touchgfx8Drawable5setXYEss>
    add(peaking_filter_0);
 800bf00:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bf04:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bf08:	681a      	ldr	r2, [r3, #0]
 800bf0a:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bf0e:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bf12:	681b      	ldr	r3, [r3, #0]
 800bf14:	f203 5324 	addw	r3, r3, #1316	; 0x524
 800bf18:	4619      	mov	r1, r3
 800bf1a:	4610      	mov	r0, r2
 800bf1c:	f7fe ff8c 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    peaking_filter_2.setXY(113, 38);
 800bf20:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bf24:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bf28:	681b      	ldr	r3, [r3, #0]
 800bf2a:	f203 63f4 	addw	r3, r3, #1780	; 0x6f4
 800bf2e:	2226      	movs	r2, #38	; 0x26
 800bf30:	2171      	movs	r1, #113	; 0x71
 800bf32:	4618      	mov	r0, r3
 800bf34:	f7fe f8d9 	bl	800a0ea <_ZN8touchgfx8Drawable5setXYEss>
    add(peaking_filter_2);
 800bf38:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bf3c:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bf40:	681a      	ldr	r2, [r3, #0]
 800bf42:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bf46:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bf4a:	681b      	ldr	r3, [r3, #0]
 800bf4c:	f203 63f4 	addw	r3, r3, #1780	; 0x6f4
 800bf50:	4619      	mov	r1, r3
 800bf52:	4610      	mov	r0, r2
 800bf54:	f7fe ff70 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    peaking_filter_3.setXY(219, 38);
 800bf58:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bf5c:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bf60:	681b      	ldr	r3, [r3, #0]
 800bf62:	f603 03c4 	addw	r3, r3, #2244	; 0x8c4
 800bf66:	2226      	movs	r2, #38	; 0x26
 800bf68:	21db      	movs	r1, #219	; 0xdb
 800bf6a:	4618      	mov	r0, r3
 800bf6c:	f7fe f8bd 	bl	800a0ea <_ZN8touchgfx8Drawable5setXYEss>
    add(peaking_filter_3);
 800bf70:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bf74:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bf78:	681a      	ldr	r2, [r3, #0]
 800bf7a:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bf7e:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bf82:	681b      	ldr	r3, [r3, #0]
 800bf84:	f603 03c4 	addw	r3, r3, #2244	; 0x8c4
 800bf88:	4619      	mov	r1, r3
 800bf8a:	4610      	mov	r0, r2
 800bf8c:	f7fe ff54 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    peaking_filter_4.setXY(219, 158);
 800bf90:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bf94:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bf98:	681b      	ldr	r3, [r3, #0]
 800bf9a:	f603 2394 	addw	r3, r3, #2708	; 0xa94
 800bf9e:	229e      	movs	r2, #158	; 0x9e
 800bfa0:	21db      	movs	r1, #219	; 0xdb
 800bfa2:	4618      	mov	r0, r3
 800bfa4:	f7fe f8a1 	bl	800a0ea <_ZN8touchgfx8Drawable5setXYEss>
    add(peaking_filter_4);
 800bfa8:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bfac:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bfb0:	681a      	ldr	r2, [r3, #0]
 800bfb2:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bfb6:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bfba:	681b      	ldr	r3, [r3, #0]
 800bfbc:	f603 2394 	addw	r3, r3, #2708	; 0xa94
 800bfc0:	4619      	mov	r1, r3
 800bfc2:	4610      	mov	r0, r2
 800bfc4:	f7fe ff38 	bl	800ae38 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800bfc8:	f507 739c 	add.w	r3, r7, #312	; 0x138
 800bfcc:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 800bfd0:	681b      	ldr	r3, [r3, #0]
 800bfd2:	4618      	mov	r0, r3
 800bfd4:	f507 779e 	add.w	r7, r7, #316	; 0x13c
 800bfd8:	46bd      	mov	sp, r7
 800bfda:	bd90      	pop	{r4, r7, pc}

0800bfdc <_ZN15Screen1ViewBaseD1Ev>:

Screen1ViewBase::~Screen1ViewBase()
 800bfdc:	b580      	push	{r7, lr}
 800bfde:	b082      	sub	sp, #8
 800bfe0:	af00      	add	r7, sp, #0
 800bfe2:	6078      	str	r0, [r7, #4]
 800bfe4:	4a39      	ldr	r2, [pc, #228]	; (800c0cc <_ZN15Screen1ViewBaseD1Ev+0xf0>)
 800bfe6:	687b      	ldr	r3, [r7, #4]
 800bfe8:	601a      	str	r2, [r3, #0]
 800bfea:	687b      	ldr	r3, [r7, #4]
 800bfec:	f603 2394 	addw	r3, r3, #2708	; 0xa94
 800bff0:	4618      	mov	r0, r3
 800bff2:	f7fe ffbf 	bl	800af74 <_ZN12FilterParamsD1Ev>
 800bff6:	687b      	ldr	r3, [r7, #4]
 800bff8:	f603 03c4 	addw	r3, r3, #2244	; 0x8c4
 800bffc:	4618      	mov	r0, r3
 800bffe:	f7fe ffb9 	bl	800af74 <_ZN12FilterParamsD1Ev>
 800c002:	687b      	ldr	r3, [r7, #4]
 800c004:	f203 63f4 	addw	r3, r3, #1780	; 0x6f4
 800c008:	4618      	mov	r0, r3
 800c00a:	f7fe ffb3 	bl	800af74 <_ZN12FilterParamsD1Ev>
 800c00e:	687b      	ldr	r3, [r7, #4]
 800c010:	f203 5324 	addw	r3, r3, #1316	; 0x524
 800c014:	4618      	mov	r0, r3
 800c016:	f7fe ffad 	bl	800af74 <_ZN12FilterParamsD1Ev>
 800c01a:	687b      	ldr	r3, [r7, #4]
 800c01c:	f503 7355 	add.w	r3, r3, #852	; 0x354
 800c020:	4618      	mov	r0, r3
 800c022:	f7fe ffa7 	bl	800af74 <_ZN12FilterParamsD1Ev>
 800c026:	687b      	ldr	r3, [r7, #4]
 800c028:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 800c02c:	4618      	mov	r0, r3
 800c02e:	f7fe fb1f 	bl	800a670 <_ZN8touchgfx8TextAreaD1Ev>
 800c032:	687b      	ldr	r3, [r7, #4]
 800c034:	f503 7331 	add.w	r3, r3, #708	; 0x2c4
 800c038:	4618      	mov	r0, r3
 800c03a:	f7fe fb19 	bl	800a670 <_ZN8touchgfx8TextAreaD1Ev>
 800c03e:	687b      	ldr	r3, [r7, #4]
 800c040:	f503 731f 	add.w	r3, r3, #636	; 0x27c
 800c044:	4618      	mov	r0, r3
 800c046:	f7fe fb13 	bl	800a670 <_ZN8touchgfx8TextAreaD1Ev>
 800c04a:	687b      	ldr	r3, [r7, #4]
 800c04c:	f503 730d 	add.w	r3, r3, #564	; 0x234
 800c050:	4618      	mov	r0, r3
 800c052:	f7fe fb0d 	bl	800a670 <_ZN8touchgfx8TextAreaD1Ev>
 800c056:	687b      	ldr	r3, [r7, #4]
 800c058:	f503 73f6 	add.w	r3, r3, #492	; 0x1ec
 800c05c:	4618      	mov	r0, r3
 800c05e:	f7fe fb07 	bl	800a670 <_ZN8touchgfx8TextAreaD1Ev>
 800c062:	687b      	ldr	r3, [r7, #4]
 800c064:	f503 73d2 	add.w	r3, r3, #420	; 0x1a4
 800c068:	4618      	mov	r0, r3
 800c06a:	f7fe fb01 	bl	800a670 <_ZN8touchgfx8TextAreaD1Ev>
 800c06e:	687b      	ldr	r3, [r7, #4]
 800c070:	f503 73b8 	add.w	r3, r3, #368	; 0x170
 800c074:	4618      	mov	r0, r3
 800c076:	f000 f879 	bl	800c16c <_ZN8touchgfx13BoxWithBorderD1Ev>
 800c07a:	687b      	ldr	r3, [r7, #4]
 800c07c:	f503 739e 	add.w	r3, r3, #316	; 0x13c
 800c080:	4618      	mov	r0, r3
 800c082:	f000 f873 	bl	800c16c <_ZN8touchgfx13BoxWithBorderD1Ev>
 800c086:	687b      	ldr	r3, [r7, #4]
 800c088:	f503 7384 	add.w	r3, r3, #264	; 0x108
 800c08c:	4618      	mov	r0, r3
 800c08e:	f000 f86d 	bl	800c16c <_ZN8touchgfx13BoxWithBorderD1Ev>
 800c092:	687b      	ldr	r3, [r7, #4]
 800c094:	33d4      	adds	r3, #212	; 0xd4
 800c096:	4618      	mov	r0, r3
 800c098:	f000 f868 	bl	800c16c <_ZN8touchgfx13BoxWithBorderD1Ev>
 800c09c:	687b      	ldr	r3, [r7, #4]
 800c09e:	33a0      	adds	r3, #160	; 0xa0
 800c0a0:	4618      	mov	r0, r3
 800c0a2:	f000 f863 	bl	800c16c <_ZN8touchgfx13BoxWithBorderD1Ev>
 800c0a6:	687b      	ldr	r3, [r7, #4]
 800c0a8:	336c      	adds	r3, #108	; 0x6c
 800c0aa:	4618      	mov	r0, r3
 800c0ac:	f000 f85e 	bl	800c16c <_ZN8touchgfx13BoxWithBorderD1Ev>
 800c0b0:	687b      	ldr	r3, [r7, #4]
 800c0b2:	3340      	adds	r3, #64	; 0x40
 800c0b4:	4618      	mov	r0, r3
 800c0b6:	f7fe ff01 	bl	800aebc <_ZN8touchgfx3BoxD1Ev>
 800c0ba:	687b      	ldr	r3, [r7, #4]
 800c0bc:	4618      	mov	r0, r3
 800c0be:	f7fe ff7d 	bl	800afbc <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
{

}
 800c0c2:	687b      	ldr	r3, [r7, #4]
 800c0c4:	4618      	mov	r0, r3
 800c0c6:	3708      	adds	r7, #8
 800c0c8:	46bd      	mov	sp, r7
 800c0ca:	bd80      	pop	{r7, pc}
 800c0cc:	08025928 	.word	0x08025928

0800c0d0 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 800c0d0:	b580      	push	{r7, lr}
 800c0d2:	b082      	sub	sp, #8
 800c0d4:	af00      	add	r7, sp, #0
 800c0d6:	6078      	str	r0, [r7, #4]
}
 800c0d8:	6878      	ldr	r0, [r7, #4]
 800c0da:	f7ff ff7f 	bl	800bfdc <_ZN15Screen1ViewBaseD1Ev>
 800c0de:	f640 4164 	movw	r1, #3172	; 0xc64
 800c0e2:	6878      	ldr	r0, [r7, #4]
 800c0e4:	f016 fb9d 	bl	8022822 <_ZdlPvj>
 800c0e8:	687b      	ldr	r3, [r7, #4]
 800c0ea:	4618      	mov	r0, r3
 800c0ec:	3708      	adds	r7, #8
 800c0ee:	46bd      	mov	sp, r7
 800c0f0:	bd80      	pop	{r7, pc}

0800c0f2 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 800c0f2:	b580      	push	{r7, lr}
 800c0f4:	b082      	sub	sp, #8
 800c0f6:	af00      	add	r7, sp, #0
 800c0f8:	6078      	str	r0, [r7, #4]
    peaking_filter_1.initialize();
 800c0fa:	687b      	ldr	r3, [r7, #4]
 800c0fc:	f503 7355 	add.w	r3, r3, #852	; 0x354
 800c100:	4618      	mov	r0, r3
 800c102:	f000 fab3 	bl	800c66c <_ZN12FilterParams10initializeEv>
    peaking_filter_0.initialize();
 800c106:	687b      	ldr	r3, [r7, #4]
 800c108:	f203 5324 	addw	r3, r3, #1316	; 0x524
 800c10c:	4618      	mov	r0, r3
 800c10e:	f000 faad 	bl	800c66c <_ZN12FilterParams10initializeEv>
    peaking_filter_2.initialize();
 800c112:	687b      	ldr	r3, [r7, #4]
 800c114:	f203 63f4 	addw	r3, r3, #1780	; 0x6f4
 800c118:	4618      	mov	r0, r3
 800c11a:	f000 faa7 	bl	800c66c <_ZN12FilterParams10initializeEv>
    peaking_filter_3.initialize();
 800c11e:	687b      	ldr	r3, [r7, #4]
 800c120:	f603 03c4 	addw	r3, r3, #2244	; 0x8c4
 800c124:	4618      	mov	r0, r3
 800c126:	f000 faa1 	bl	800c66c <_ZN12FilterParams10initializeEv>
    peaking_filter_4.initialize();
 800c12a:	687b      	ldr	r3, [r7, #4]
 800c12c:	f603 2394 	addw	r3, r3, #2708	; 0xa94
 800c130:	4618      	mov	r0, r3
 800c132:	f000 fa9b 	bl	800c66c <_ZN12FilterParams10initializeEv>
}
 800c136:	bf00      	nop
 800c138:	3708      	adds	r7, #8
 800c13a:	46bd      	mov	sp, r7
 800c13c:	bd80      	pop	{r7, pc}
	...

0800c140 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View()
 800c140:	b580      	push	{r7, lr}
 800c142:	b082      	sub	sp, #8
 800c144:	af00      	add	r7, sp, #0
 800c146:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800c148:	687b      	ldr	r3, [r7, #4]
 800c14a:	4618      	mov	r0, r3
 800c14c:	f007 f9e2 	bl	8013514 <_ZN8touchgfx6ScreenC1Ev>
 800c150:	4a05      	ldr	r2, [pc, #20]	; (800c168 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 800c152:	687b      	ldr	r3, [r7, #4]
 800c154:	601a      	str	r2, [r3, #0]
 800c156:	687b      	ldr	r3, [r7, #4]
 800c158:	2200      	movs	r2, #0
 800c15a:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c15c:	687b      	ldr	r3, [r7, #4]
 800c15e:	4618      	mov	r0, r3
 800c160:	3708      	adds	r7, #8
 800c162:	46bd      	mov	sp, r7
 800c164:	bd80      	pop	{r7, pc}
 800c166:	bf00      	nop
 800c168:	0802595c 	.word	0x0802595c

0800c16c <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 800c16c:	b580      	push	{r7, lr}
 800c16e:	b082      	sub	sp, #8
 800c170:	af00      	add	r7, sp, #0
 800c172:	6078      	str	r0, [r7, #4]
 800c174:	4a05      	ldr	r2, [pc, #20]	; (800c18c <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 800c176:	687b      	ldr	r3, [r7, #4]
 800c178:	601a      	str	r2, [r3, #0]
 800c17a:	687b      	ldr	r3, [r7, #4]
 800c17c:	4618      	mov	r0, r3
 800c17e:	f7fe fe9d 	bl	800aebc <_ZN8touchgfx3BoxD1Ev>
 800c182:	687b      	ldr	r3, [r7, #4]
 800c184:	4618      	mov	r0, r3
 800c186:	3708      	adds	r7, #8
 800c188:	46bd      	mov	sp, r7
 800c18a:	bd80      	pop	{r7, pc}
 800c18c:	08026298 	.word	0x08026298

0800c190 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800c190:	b580      	push	{r7, lr}
 800c192:	b082      	sub	sp, #8
 800c194:	af00      	add	r7, sp, #0
 800c196:	6078      	str	r0, [r7, #4]
 800c198:	6878      	ldr	r0, [r7, #4]
 800c19a:	f7ff ffe7 	bl	800c16c <_ZN8touchgfx13BoxWithBorderD1Ev>
 800c19e:	2134      	movs	r1, #52	; 0x34
 800c1a0:	6878      	ldr	r0, [r7, #4]
 800c1a2:	f016 fb3e 	bl	8022822 <_ZdlPvj>
 800c1a6:	687b      	ldr	r3, [r7, #4]
 800c1a8:	4618      	mov	r0, r3
 800c1aa:	3708      	adds	r7, #8
 800c1ac:	46bd      	mov	sp, r7
 800c1ae:	bd80      	pop	{r7, pc}

0800c1b0 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800c1b0:	b480      	push	{r7}
 800c1b2:	af00      	add	r7, sp, #0
    return bitmap_database;
 800c1b4:	4b02      	ldr	r3, [pc, #8]	; (800c1c0 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800c1b6:	4618      	mov	r0, r3
 800c1b8:	46bd      	mov	sp, r7
 800c1ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1be:	4770      	bx	lr
 800c1c0:	08025988 	.word	0x08025988

0800c1c4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800c1c4:	b480      	push	{r7}
 800c1c6:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800c1c8:	2301      	movs	r3, #1
}
 800c1ca:	4618      	mov	r0, r3
 800c1cc:	46bd      	mov	sp, r7
 800c1ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1d2:	4770      	bx	lr

0800c1d4 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800c1d4:	b480      	push	{r7}
 800c1d6:	b085      	sub	sp, #20
 800c1d8:	af00      	add	r7, sp, #0
 800c1da:	60f8      	str	r0, [r7, #12]
 800c1dc:	460b      	mov	r3, r1
 800c1de:	607a      	str	r2, [r7, #4]
 800c1e0:	817b      	strh	r3, [r7, #10]
        return 0;
 800c1e2:	2300      	movs	r3, #0
    }
 800c1e4:	4618      	mov	r0, r3
 800c1e6:	3714      	adds	r7, #20
 800c1e8:	46bd      	mov	sp, r7
 800c1ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1ee:	4770      	bx	lr

0800c1f0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 800c1f0:	b480      	push	{r7}
 800c1f2:	b083      	sub	sp, #12
 800c1f4:	af00      	add	r7, sp, #0
 800c1f6:	6078      	str	r0, [r7, #4]
        return 0;
 800c1f8:	2300      	movs	r3, #0
    }
 800c1fa:	4618      	mov	r0, r3
 800c1fc:	370c      	adds	r7, #12
 800c1fe:	46bd      	mov	sp, r7
 800c200:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c204:	4770      	bx	lr

0800c206 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800c206:	b480      	push	{r7}
 800c208:	b083      	sub	sp, #12
 800c20a:	af00      	add	r7, sp, #0
 800c20c:	6078      	str	r0, [r7, #4]
        return 0;
 800c20e:	2300      	movs	r3, #0
    }
 800c210:	4618      	mov	r0, r3
 800c212:	370c      	adds	r7, #12
 800c214:	46bd      	mov	sp, r7
 800c216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c21a:	4770      	bx	lr

0800c21c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800c21c:	b480      	push	{r7}
 800c21e:	b085      	sub	sp, #20
 800c220:	af00      	add	r7, sp, #0
 800c222:	60f8      	str	r0, [r7, #12]
 800c224:	60b9      	str	r1, [r7, #8]
 800c226:	4613      	mov	r3, r2
 800c228:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800c22a:	4a07      	ldr	r2, [pc, #28]	; (800c248 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800c22c:	68fb      	ldr	r3, [r7, #12]
 800c22e:	6013      	str	r3, [r2, #0]
        fonts = f;
 800c230:	4a06      	ldr	r2, [pc, #24]	; (800c24c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800c232:	68bb      	ldr	r3, [r7, #8]
 800c234:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800c236:	4a06      	ldr	r2, [pc, #24]	; (800c250 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800c238:	88fb      	ldrh	r3, [r7, #6]
 800c23a:	8013      	strh	r3, [r2, #0]
    }
 800c23c:	bf00      	nop
 800c23e:	3714      	adds	r7, #20
 800c240:	46bd      	mov	sp, r7
 800c242:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c246:	4770      	bx	lr
 800c248:	2003247c 	.word	0x2003247c
 800c24c:	20032484 	.word	0x20032484
 800c250:	20032480 	.word	0x20032480

0800c254 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800c254:	b40e      	push	{r1, r2, r3}
 800c256:	b580      	push	{r7, lr}
 800c258:	b085      	sub	sp, #20
 800c25a:	af00      	add	r7, sp, #0
 800c25c:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800c25e:	f107 0320 	add.w	r3, r7, #32
 800c262:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800c264:	68bb      	ldr	r3, [r7, #8]
 800c266:	69fa      	ldr	r2, [r7, #28]
 800c268:	2100      	movs	r1, #0
 800c26a:	6878      	ldr	r0, [r7, #4]
 800c26c:	f006 fd88 	bl	8012d80 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800c270:	4603      	mov	r3, r0
 800c272:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800c274:	89fb      	ldrh	r3, [r7, #14]
}
 800c276:	4618      	mov	r0, r3
 800c278:	3714      	adds	r7, #20
 800c27a:	46bd      	mov	sp, r7
 800c27c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800c280:	b003      	add	sp, #12
 800c282:	4770      	bx	lr

0800c284 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800c284:	b40c      	push	{r2, r3}
 800c286:	b580      	push	{r7, lr}
 800c288:	b084      	sub	sp, #16
 800c28a:	af00      	add	r7, sp, #0
 800c28c:	6078      	str	r0, [r7, #4]
 800c28e:	460b      	mov	r3, r1
 800c290:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800c292:	f107 031c 	add.w	r3, r7, #28
 800c296:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800c298:	78f9      	ldrb	r1, [r7, #3]
 800c29a:	68bb      	ldr	r3, [r7, #8]
 800c29c:	69ba      	ldr	r2, [r7, #24]
 800c29e:	6878      	ldr	r0, [r7, #4]
 800c2a0:	f006 fd6e 	bl	8012d80 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800c2a4:	4603      	mov	r3, r0
 800c2a6:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800c2a8:	89fb      	ldrh	r3, [r7, #14]
}
 800c2aa:	4618      	mov	r0, r3
 800c2ac:	3710      	adds	r7, #16
 800c2ae:	46bd      	mov	sp, r7
 800c2b0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800c2b4:	b002      	add	sp, #8
 800c2b6:	4770      	bx	lr

0800c2b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800c2b8:	b580      	push	{r7, lr}
 800c2ba:	b08a      	sub	sp, #40	; 0x28
 800c2bc:	af00      	add	r7, sp, #0
 800c2be:	6078      	str	r0, [r7, #4]
 800c2c0:	460b      	mov	r3, r1
 800c2c2:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800c2c4:	687b      	ldr	r3, [r7, #4]
 800c2c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c2c8:	2b00      	cmp	r3, #0
 800c2ca:	d016      	beq.n	800c2fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800c2cc:	687b      	ldr	r3, [r7, #4]
 800c2ce:	3322      	adds	r3, #34	; 0x22
 800c2d0:	627b      	str	r3, [r7, #36]	; 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800c2d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c2d4:	8adb      	ldrh	r3, [r3, #22]
 800c2d6:	2b00      	cmp	r3, #0
 800c2d8:	d105      	bne.n	800c2e6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800c2da:	4b43      	ldr	r3, [pc, #268]	; (800c3e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800c2dc:	4a43      	ldr	r2, [pc, #268]	; (800c3ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800c2de:	21c5      	movs	r1, #197	; 0xc5
 800c2e0:	4843      	ldr	r0, [pc, #268]	; (800c3f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800c2e2:	f017 f829 	bl	8023338 <__assert_func>
            return buffer[pos];
 800c2e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c2e8:	8a9b      	ldrh	r3, [r3, #20]
 800c2ea:	461a      	mov	r2, r3
 800c2ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c2ee:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800c2f2:	2b00      	cmp	r3, #0
 800c2f4:	d001      	beq.n	800c2fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800c2f6:	2301      	movs	r3, #1
 800c2f8:	e000      	b.n	800c2fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800c2fa:	2300      	movs	r3, #0
 800c2fc:	2b00      	cmp	r3, #0
 800c2fe:	d06a      	beq.n	800c3d6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800c300:	6878      	ldr	r0, [r7, #4]
 800c302:	f007 ffe3 	bl	80142cc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800c306:	687b      	ldr	r3, [r7, #4]
 800c308:	3322      	adds	r3, #34	; 0x22
 800c30a:	623b      	str	r3, [r7, #32]
 800c30c:	2301      	movs	r3, #1
 800c30e:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800c310:	6a3b      	ldr	r3, [r7, #32]
 800c312:	8adb      	ldrh	r3, [r3, #22]
 800c314:	8bfa      	ldrh	r2, [r7, #30]
 800c316:	429a      	cmp	r2, r3
 800c318:	d305      	bcc.n	800c326 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800c31a:	4b36      	ldr	r3, [pc, #216]	; (800c3f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800c31c:	4a36      	ldr	r2, [pc, #216]	; (800c3f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800c31e:	21cb      	movs	r1, #203	; 0xcb
 800c320:	4833      	ldr	r0, [pc, #204]	; (800c3f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800c322:	f017 f809 	bl	8023338 <__assert_func>
            const uint16_t index = pos + offset;
 800c326:	6a3b      	ldr	r3, [r7, #32]
 800c328:	8a9a      	ldrh	r2, [r3, #20]
 800c32a:	8bfb      	ldrh	r3, [r7, #30]
 800c32c:	4413      	add	r3, r2
 800c32e:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800c330:	8bbb      	ldrh	r3, [r7, #28]
 800c332:	2b09      	cmp	r3, #9
 800c334:	d801      	bhi.n	800c33a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800c336:	8bbb      	ldrh	r3, [r7, #28]
 800c338:	e001      	b.n	800c33e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800c33a:	8bbb      	ldrh	r3, [r7, #28]
 800c33c:	3b0a      	subs	r3, #10
 800c33e:	6a3a      	ldr	r2, [r7, #32]
 800c340:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800c344:	f640 123f 	movw	r2, #2367	; 0x93f
 800c348:	4293      	cmp	r3, r2
 800c34a:	bf0c      	ite	eq
 800c34c:	2301      	moveq	r3, #1
 800c34e:	2300      	movne	r3, #0
 800c350:	b2db      	uxtb	r3, r3
 800c352:	2b00      	cmp	r3, #0
 800c354:	d03f      	beq.n	800c3d6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800c356:	687b      	ldr	r3, [r7, #4]
 800c358:	3322      	adds	r3, #34	; 0x22
 800c35a:	687a      	ldr	r2, [r7, #4]
 800c35c:	3222      	adds	r2, #34	; 0x22
 800c35e:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800c360:	68ba      	ldr	r2, [r7, #8]
 800c362:	8ad2      	ldrh	r2, [r2, #22]
 800c364:	2a00      	cmp	r2, #0
 800c366:	d105      	bne.n	800c374 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800c368:	4b1f      	ldr	r3, [pc, #124]	; (800c3e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800c36a:	4a20      	ldr	r2, [pc, #128]	; (800c3ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800c36c:	21c5      	movs	r1, #197	; 0xc5
 800c36e:	4820      	ldr	r0, [pc, #128]	; (800c3f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800c370:	f016 ffe2 	bl	8023338 <__assert_func>
            return buffer[pos];
 800c374:	68ba      	ldr	r2, [r7, #8]
 800c376:	8a92      	ldrh	r2, [r2, #20]
 800c378:	4611      	mov	r1, r2
 800c37a:	68ba      	ldr	r2, [r7, #8]
 800c37c:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800c380:	613b      	str	r3, [r7, #16]
 800c382:	4613      	mov	r3, r2
 800c384:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800c386:	693b      	ldr	r3, [r7, #16]
 800c388:	8adb      	ldrh	r3, [r3, #22]
 800c38a:	2b01      	cmp	r3, #1
 800c38c:	d806      	bhi.n	800c39c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800c38e:	4b1b      	ldr	r3, [pc, #108]	; (800c3fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800c390:	4a1b      	ldr	r2, [pc, #108]	; (800c400 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800c392:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800c396:	4816      	ldr	r0, [pc, #88]	; (800c3f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800c398:	f016 ffce 	bl	8023338 <__assert_func>
            const uint16_t index = pos + 1;
 800c39c:	693b      	ldr	r3, [r7, #16]
 800c39e:	8a9b      	ldrh	r3, [r3, #20]
 800c3a0:	3301      	adds	r3, #1
 800c3a2:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800c3a4:	89bb      	ldrh	r3, [r7, #12]
 800c3a6:	2b09      	cmp	r3, #9
 800c3a8:	d801      	bhi.n	800c3ae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800c3aa:	89bb      	ldrh	r3, [r7, #12]
 800c3ac:	e000      	b.n	800c3b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800c3ae:	2300      	movs	r3, #0
 800c3b0:	693a      	ldr	r2, [r7, #16]
 800c3b2:	89f9      	ldrh	r1, [r7, #14]
 800c3b4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800c3b8:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800c3ba:	687b      	ldr	r3, [r7, #4]
 800c3bc:	3322      	adds	r3, #34	; 0x22
 800c3be:	61bb      	str	r3, [r7, #24]
 800c3c0:	f640 133f 	movw	r3, #2367	; 0x93f
 800c3c4:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800c3c6:	69bb      	ldr	r3, [r7, #24]
 800c3c8:	8a9b      	ldrh	r3, [r3, #20]
 800c3ca:	4619      	mov	r1, r3
 800c3cc:	69bb      	ldr	r3, [r7, #24]
 800c3ce:	8afa      	ldrh	r2, [r7, #22]
 800c3d0:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800c3d4:	bf00      	nop
        }
    }
    return getNextChar();
 800c3d6:	6878      	ldr	r0, [r7, #4]
 800c3d8:	f007 fe7a 	bl	80140d0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c3dc:	4603      	mov	r3, r0
}
 800c3de:	4618      	mov	r0, r3
 800c3e0:	3728      	adds	r7, #40	; 0x28
 800c3e2:	46bd      	mov	sp, r7
 800c3e4:	bd80      	pop	{r7, pc}
 800c3e6:	bf00      	nop
 800c3e8:	08024944 	.word	0x08024944
 800c3ec:	08024950 	.word	0x08024950
 800c3f0:	080249fc 	.word	0x080249fc
 800c3f4:	08024a44 	.word	0x08024a44
 800c3f8:	08024a54 	.word	0x08024a54
 800c3fc:	08024b28 	.word	0x08024b28
 800c400:	08024b34 	.word	0x08024b34

0800c404 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800c404:	b580      	push	{r7, lr}
 800c406:	b082      	sub	sp, #8
 800c408:	af00      	add	r7, sp, #0
 800c40a:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800c40c:	6878      	ldr	r0, [r7, #4]
 800c40e:	f007 fe28 	bl	8014062 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800c412:	bf00      	nop
 800c414:	3708      	adds	r7, #8
 800c416:	46bd      	mov	sp, r7
 800c418:	bd80      	pop	{r7, pc}

0800c41a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800c41a:	b580      	push	{r7, lr}
 800c41c:	b088      	sub	sp, #32
 800c41e:	af02      	add	r7, sp, #8
 800c420:	60f8      	str	r0, [r7, #12]
 800c422:	1d38      	adds	r0, r7, #4
 800c424:	e880 0006 	stmia.w	r0, {r1, r2}
 800c428:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800c42a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800c42e:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800c430:	1d39      	adds	r1, r7, #4
 800c432:	697b      	ldr	r3, [r7, #20]
 800c434:	9301      	str	r3, [sp, #4]
 800c436:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c438:	9300      	str	r3, [sp, #0]
 800c43a:	6a3b      	ldr	r3, [r7, #32]
 800c43c:	683a      	ldr	r2, [r7, #0]
 800c43e:	68f8      	ldr	r0, [r7, #12]
 800c440:	f005 f8f8 	bl	8011634 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800c444:	bf00      	nop
 800c446:	3718      	adds	r7, #24
 800c448:	46bd      	mov	sp, r7
 800c44a:	bd80      	pop	{r7, pc}

0800c44c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800c44c:	b590      	push	{r4, r7, lr}
 800c44e:	b085      	sub	sp, #20
 800c450:	af00      	add	r7, sp, #0
 800c452:	4603      	mov	r3, r0
 800c454:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800c456:	2300      	movs	r3, #0
 800c458:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800c45a:	88fb      	ldrh	r3, [r7, #6]
 800c45c:	2b00      	cmp	r3, #0
 800c45e:	d127      	bne.n	800c4b0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800c460:	88fb      	ldrh	r3, [r7, #6]
 800c462:	4a1e      	ldr	r2, [pc, #120]	; (800c4dc <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800c464:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c468:	2b00      	cmp	r3, #0
 800c46a:	d016      	beq.n	800c49a <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800c46c:	88fb      	ldrh	r3, [r7, #6]
 800c46e:	4a1b      	ldr	r2, [pc, #108]	; (800c4dc <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800c470:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c474:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800c476:	68bb      	ldr	r3, [r7, #8]
 800c478:	681b      	ldr	r3, [r3, #0]
 800c47a:	68ba      	ldr	r2, [r7, #8]
 800c47c:	4413      	add	r3, r2
 800c47e:	4a18      	ldr	r2, [pc, #96]	; (800c4e0 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800c480:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800c482:	68bb      	ldr	r3, [r7, #8]
 800c484:	685b      	ldr	r3, [r3, #4]
 800c486:	68ba      	ldr	r2, [r7, #8]
 800c488:	4413      	add	r3, r2
 800c48a:	4a16      	ldr	r2, [pc, #88]	; (800c4e4 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800c48c:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800c48e:	68bb      	ldr	r3, [r7, #8]
 800c490:	689b      	ldr	r3, [r3, #8]
 800c492:	68ba      	ldr	r2, [r7, #8]
 800c494:	4413      	add	r3, r2
 800c496:	60fb      	str	r3, [r7, #12]
 800c498:	e00a      	b.n	800c4b0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800c49a:	4b11      	ldr	r3, [pc, #68]	; (800c4e0 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800c49c:	4a12      	ldr	r2, [pc, #72]	; (800c4e8 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800c49e:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800c4a0:	4a12      	ldr	r2, [pc, #72]	; (800c4ec <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800c4a2:	4b10      	ldr	r3, [pc, #64]	; (800c4e4 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800c4a4:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800c4a6:	88fb      	ldrh	r3, [r7, #6]
 800c4a8:	4a11      	ldr	r2, [pc, #68]	; (800c4f0 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800c4aa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c4ae:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800c4b0:	68fb      	ldr	r3, [r7, #12]
 800c4b2:	2b00      	cmp	r3, #0
 800c4b4:	d00d      	beq.n	800c4d2 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800c4b6:	4a0f      	ldr	r2, [pc, #60]	; (800c4f4 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800c4b8:	88fb      	ldrh	r3, [r7, #6]
 800c4ba:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800c4bc:	f000 f83e 	bl	800c53c <_ZN17TypedTextDatabase8getFontsEv>
 800c4c0:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800c4c2:	f000 f833 	bl	800c52c <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800c4c6:	4603      	mov	r3, r0
 800c4c8:	461a      	mov	r2, r3
 800c4ca:	4621      	mov	r1, r4
 800c4cc:	68f8      	ldr	r0, [r7, #12]
 800c4ce:	f7ff fea5 	bl	800c21c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800c4d2:	bf00      	nop
 800c4d4:	3714      	adds	r7, #20
 800c4d6:	46bd      	mov	sp, r7
 800c4d8:	bd90      	pop	{r4, r7, pc}
 800c4da:	bf00      	nop
 800c4dc:	2002fde8 	.word	0x2002fde8
 800c4e0:	2002fdf0 	.word	0x2002fdf0
 800c4e4:	2002fdf4 	.word	0x2002fdf4
 800c4e8:	080276bc 	.word	0x080276bc
 800c4ec:	08027674 	.word	0x08027674
 800c4f0:	08027838 	.word	0x08027838
 800c4f4:	2002fdec 	.word	0x2002fdec

0800c4f8 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800c4f8:	b480      	push	{r7}
 800c4fa:	b083      	sub	sp, #12
 800c4fc:	af00      	add	r7, sp, #0
 800c4fe:	6078      	str	r0, [r7, #4]
 800c500:	460b      	mov	r3, r1
 800c502:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800c504:	4b07      	ldr	r3, [pc, #28]	; (800c524 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800c506:	681a      	ldr	r2, [r3, #0]
 800c508:	4b07      	ldr	r3, [pc, #28]	; (800c528 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800c50a:	6819      	ldr	r1, [r3, #0]
 800c50c:	887b      	ldrh	r3, [r7, #2]
 800c50e:	009b      	lsls	r3, r3, #2
 800c510:	440b      	add	r3, r1
 800c512:	681b      	ldr	r3, [r3, #0]
 800c514:	005b      	lsls	r3, r3, #1
 800c516:	4413      	add	r3, r2
}
 800c518:	4618      	mov	r0, r3
 800c51a:	370c      	adds	r7, #12
 800c51c:	46bd      	mov	sp, r7
 800c51e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c522:	4770      	bx	lr
 800c524:	2002fdf0 	.word	0x2002fdf0
 800c528:	2002fdf4 	.word	0x2002fdf4

0800c52c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800c52c:	b480      	push	{r7}
 800c52e:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800c530:	2312      	movs	r3, #18
}
 800c532:	4618      	mov	r0, r3
 800c534:	46bd      	mov	sp, r7
 800c536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c53a:	4770      	bx	lr

0800c53c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800c53c:	b480      	push	{r7}
 800c53e:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800c540:	4b02      	ldr	r3, [pc, #8]	; (800c54c <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800c542:	4618      	mov	r0, r3
 800c544:	46bd      	mov	sp, r7
 800c546:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c54a:	4770      	bx	lr
 800c54c:	2002fdf8 	.word	0x2002fdf8

0800c550 <_Z41__static_initialization_and_destruction_0ii>:
    case 3:
        touchgfx_fonts[3] = &(getFont_SegUIVar_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800c550:	b580      	push	{r7, lr}
 800c552:	b082      	sub	sp, #8
 800c554:	af00      	add	r7, sp, #0
 800c556:	6078      	str	r0, [r7, #4]
 800c558:	6039      	str	r1, [r7, #0]
 800c55a:	687b      	ldr	r3, [r7, #4]
 800c55c:	2b01      	cmp	r3, #1
 800c55e:	d118      	bne.n	800c592 <_Z41__static_initialization_and_destruction_0ii+0x42>
 800c560:	683b      	ldr	r3, [r7, #0]
 800c562:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c566:	4293      	cmp	r3, r2
 800c568:	d113      	bne.n	800c592 <_Z41__static_initialization_and_destruction_0ii+0x42>
    &(getFont_verdana_20_4bpp()),
 800c56a:	f7fc fed1 	bl	8009310 <_Z23getFont_verdana_20_4bppv>
 800c56e:	4603      	mov	r3, r0
};
 800c570:	4a0a      	ldr	r2, [pc, #40]	; (800c59c <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800c572:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 800c574:	f7fc ff26 	bl	80093c4 <_Z23getFont_verdana_40_4bppv>
 800c578:	4603      	mov	r3, r0
};
 800c57a:	4a08      	ldr	r2, [pc, #32]	; (800c59c <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800c57c:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp()),
 800c57e:	f7fc fe6d 	bl	800925c <_Z23getFont_verdana_10_4bppv>
 800c582:	4603      	mov	r3, r0
};
 800c584:	4a05      	ldr	r2, [pc, #20]	; (800c59c <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800c586:	6093      	str	r3, [r2, #8]
    &(getFont_SegUIVar_10_4bpp())
 800c588:	f7fc fe0e 	bl	80091a8 <_Z24getFont_SegUIVar_10_4bppv>
 800c58c:	4603      	mov	r3, r0
};
 800c58e:	4a03      	ldr	r2, [pc, #12]	; (800c59c <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800c590:	60d3      	str	r3, [r2, #12]
} // namespace TypedTextDatabase
 800c592:	bf00      	nop
 800c594:	3708      	adds	r7, #8
 800c596:	46bd      	mov	sp, r7
 800c598:	bd80      	pop	{r7, pc}
 800c59a:	bf00      	nop
 800c59c:	2002fdf8 	.word	0x2002fdf8

0800c5a0 <_GLOBAL__sub_I_touchgfx_fonts>:
 800c5a0:	b580      	push	{r7, lr}
 800c5a2:	af00      	add	r7, sp, #0
 800c5a4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c5a8:	2001      	movs	r0, #1
 800c5aa:	f7ff ffd1 	bl	800c550 <_Z41__static_initialization_and_destruction_0ii>
 800c5ae:	bd80      	pop	{r7, pc}

0800c5b0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800c5b0:	b580      	push	{r7, lr}
 800c5b2:	b082      	sub	sp, #8
 800c5b4:	af00      	add	r7, sp, #0
 800c5b6:	6078      	str	r0, [r7, #4]
 800c5b8:	4a05      	ldr	r2, [pc, #20]	; (800c5d0 <_ZN19FrontendApplicationD1Ev+0x20>)
 800c5ba:	687b      	ldr	r3, [r7, #4]
 800c5bc:	601a      	str	r2, [r3, #0]
 800c5be:	687b      	ldr	r3, [r7, #4]
 800c5c0:	4618      	mov	r0, r3
 800c5c2:	f7fd f95f 	bl	8009884 <_ZN23FrontendApplicationBaseD1Ev>
 800c5c6:	687b      	ldr	r3, [r7, #4]
 800c5c8:	4618      	mov	r0, r3
 800c5ca:	3708      	adds	r7, #8
 800c5cc:	46bd      	mov	sp, r7
 800c5ce:	bd80      	pop	{r7, pc}
 800c5d0:	08025a08 	.word	0x08025a08

0800c5d4 <_ZN19FrontendApplicationD0Ev>:
 800c5d4:	b580      	push	{r7, lr}
 800c5d6:	b082      	sub	sp, #8
 800c5d8:	af00      	add	r7, sp, #0
 800c5da:	6078      	str	r0, [r7, #4]
 800c5dc:	6878      	ldr	r0, [r7, #4]
 800c5de:	f7ff ffe7 	bl	800c5b0 <_ZN19FrontendApplicationD1Ev>
 800c5e2:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800c5e6:	6878      	ldr	r0, [r7, #4]
 800c5e8:	f016 f91b 	bl	8022822 <_ZdlPvj>
 800c5ec:	687b      	ldr	r3, [r7, #4]
 800c5ee:	4618      	mov	r0, r3
 800c5f0:	3708      	adds	r7, #8
 800c5f2:	46bd      	mov	sp, r7
 800c5f4:	bd80      	pop	{r7, pc}

0800c5f6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800c5f6:	b580      	push	{r7, lr}
 800c5f8:	b082      	sub	sp, #8
 800c5fa:	af00      	add	r7, sp, #0
 800c5fc:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800c5fe:	687b      	ldr	r3, [r7, #4]
 800c600:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800c604:	4618      	mov	r0, r3
 800c606:	f000 f84b 	bl	800c6a0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800c60a:	687b      	ldr	r3, [r7, #4]
 800c60c:	4618      	mov	r0, r3
 800c60e:	f005 fceb 	bl	8011fe8 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800c612:	bf00      	nop
 800c614:	3708      	adds	r7, #8
 800c616:	46bd      	mov	sp, r7
 800c618:	bd80      	pop	{r7, pc}
	...

0800c61c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800c61c:	b580      	push	{r7, lr}
 800c61e:	b084      	sub	sp, #16
 800c620:	af00      	add	r7, sp, #0
 800c622:	60f8      	str	r0, [r7, #12]
 800c624:	60b9      	str	r1, [r7, #8]
 800c626:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800c628:	68fb      	ldr	r3, [r7, #12]
 800c62a:	687a      	ldr	r2, [r7, #4]
 800c62c:	68b9      	ldr	r1, [r7, #8]
 800c62e:	4618      	mov	r0, r3
 800c630:	f7fd f978 	bl	8009924 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800c634:	4a03      	ldr	r2, [pc, #12]	; (800c644 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800c636:	68fb      	ldr	r3, [r7, #12]
 800c638:	601a      	str	r2, [r3, #0]
{

}
 800c63a:	68fb      	ldr	r3, [r7, #12]
 800c63c:	4618      	mov	r0, r3
 800c63e:	3710      	adds	r7, #16
 800c640:	46bd      	mov	sp, r7
 800c642:	bd80      	pop	{r7, pc}
 800c644:	08025a08 	.word	0x08025a08

0800c648 <_ZN12FilterParamsC1Ev>:
#include <gui/containers/FilterParams.hpp>
#include "string.h"

FilterParams::FilterParams()
 800c648:	b580      	push	{r7, lr}
 800c64a:	b082      	sub	sp, #8
 800c64c:	af00      	add	r7, sp, #0
 800c64e:	6078      	str	r0, [r7, #4]
 800c650:	687b      	ldr	r3, [r7, #4]
 800c652:	4618      	mov	r0, r3
 800c654:	f7fe f902 	bl	800a85c <_ZN16FilterParamsBaseC1Ev>
 800c658:	4a03      	ldr	r2, [pc, #12]	; (800c668 <_ZN12FilterParamsC1Ev+0x20>)
 800c65a:	687b      	ldr	r3, [r7, #4]
 800c65c:	601a      	str	r2, [r3, #0]
{

}
 800c65e:	687b      	ldr	r3, [r7, #4]
 800c660:	4618      	mov	r0, r3
 800c662:	3708      	adds	r7, #8
 800c664:	46bd      	mov	sp, r7
 800c666:	bd80      	pop	{r7, pc}
 800c668:	08025a5c 	.word	0x08025a5c

0800c66c <_ZN12FilterParams10initializeEv>:

void FilterParams::initialize()
{
 800c66c:	b580      	push	{r7, lr}
 800c66e:	b082      	sub	sp, #8
 800c670:	af00      	add	r7, sp, #0
 800c672:	6078      	str	r0, [r7, #4]
    FilterParamsBase::initialize();
 800c674:	687b      	ldr	r3, [r7, #4]
 800c676:	4618      	mov	r0, r3
 800c678:	f7fe fb7b 	bl	800ad72 <_ZN16FilterParamsBase10initializeEv>
}
 800c67c:	bf00      	nop
 800c67e:	3708      	adds	r7, #8
 800c680:	46bd      	mov	sp, r7
 800c682:	bd80      	pop	{r7, pc}

0800c684 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

extern AUDIOFX_Type curr_fx;

Model::Model() : modelListener(0)
 800c684:	b480      	push	{r7}
 800c686:	b083      	sub	sp, #12
 800c688:	af00      	add	r7, sp, #0
 800c68a:	6078      	str	r0, [r7, #4]
 800c68c:	687b      	ldr	r3, [r7, #4]
 800c68e:	2200      	movs	r2, #0
 800c690:	601a      	str	r2, [r3, #0]
{

}
 800c692:	687b      	ldr	r3, [r7, #4]
 800c694:	4618      	mov	r0, r3
 800c696:	370c      	adds	r7, #12
 800c698:	46bd      	mov	sp, r7
 800c69a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c69e:	4770      	bx	lr

0800c6a0 <_ZN5Model4tickEv>:

void Model::tick()
{
 800c6a0:	b480      	push	{r7}
 800c6a2:	b083      	sub	sp, #12
 800c6a4:	af00      	add	r7, sp, #0
 800c6a6:	6078      	str	r0, [r7, #4]

}
 800c6a8:	bf00      	nop
 800c6aa:	370c      	adds	r7, #12
 800c6ac:	46bd      	mov	sp, r7
 800c6ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6b2:	4770      	bx	lr

0800c6b4 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800c6b4:	b480      	push	{r7}
 800c6b6:	b083      	sub	sp, #12
 800c6b8:	af00      	add	r7, sp, #0
 800c6ba:	6078      	str	r0, [r7, #4]
    {
    }
 800c6bc:	bf00      	nop
 800c6be:	370c      	adds	r7, #12
 800c6c0:	46bd      	mov	sp, r7
 800c6c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6c6:	4770      	bx	lr

0800c6c8 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800c6c8:	b480      	push	{r7}
 800c6ca:	b083      	sub	sp, #12
 800c6cc:	af00      	add	r7, sp, #0
 800c6ce:	6078      	str	r0, [r7, #4]
    {
    }
 800c6d0:	bf00      	nop
 800c6d2:	370c      	adds	r7, #12
 800c6d4:	46bd      	mov	sp, r7
 800c6d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6da:	4770      	bx	lr

0800c6dc <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800c6dc:	b480      	push	{r7}
 800c6de:	b083      	sub	sp, #12
 800c6e0:	af00      	add	r7, sp, #0
 800c6e2:	6078      	str	r0, [r7, #4]
    {
 800c6e4:	4a04      	ldr	r2, [pc, #16]	; (800c6f8 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800c6e6:	687b      	ldr	r3, [r7, #4]
 800c6e8:	601a      	str	r2, [r3, #0]
    }
 800c6ea:	687b      	ldr	r3, [r7, #4]
 800c6ec:	4618      	mov	r0, r3
 800c6ee:	370c      	adds	r7, #12
 800c6f0:	46bd      	mov	sp, r7
 800c6f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6f6:	4770      	bx	lr
 800c6f8:	08025b28 	.word	0x08025b28

0800c6fc <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800c6fc:	b580      	push	{r7, lr}
 800c6fe:	b082      	sub	sp, #8
 800c700:	af00      	add	r7, sp, #0
 800c702:	6078      	str	r0, [r7, #4]
    }
 800c704:	6878      	ldr	r0, [r7, #4]
 800c706:	f7ff ffe9 	bl	800c6dc <_ZN8touchgfx9PresenterD1Ev>
 800c70a:	2104      	movs	r1, #4
 800c70c:	6878      	ldr	r0, [r7, #4]
 800c70e:	f016 f888 	bl	8022822 <_ZdlPvj>
 800c712:	687b      	ldr	r3, [r7, #4]
 800c714:	4618      	mov	r0, r3
 800c716:	3708      	adds	r7, #8
 800c718:	46bd      	mov	sp, r7
 800c71a:	bd80      	pop	{r7, pc}

0800c71c <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800c71c:	b480      	push	{r7}
 800c71e:	b083      	sub	sp, #12
 800c720:	af00      	add	r7, sp, #0
 800c722:	6078      	str	r0, [r7, #4]
    {
 800c724:	4a04      	ldr	r2, [pc, #16]	; (800c738 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800c726:	687b      	ldr	r3, [r7, #4]
 800c728:	601a      	str	r2, [r3, #0]
    }
 800c72a:	687b      	ldr	r3, [r7, #4]
 800c72c:	4618      	mov	r0, r3
 800c72e:	370c      	adds	r7, #12
 800c730:	46bd      	mov	sp, r7
 800c732:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c736:	4770      	bx	lr
 800c738:	08025b28 	.word	0x08025b28

0800c73c <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800c73c:	b480      	push	{r7}
 800c73e:	b083      	sub	sp, #12
 800c740:	af00      	add	r7, sp, #0
 800c742:	6078      	str	r0, [r7, #4]
 800c744:	4a06      	ldr	r2, [pc, #24]	; (800c760 <_ZN13ModelListenerC1Ev+0x24>)
 800c746:	687b      	ldr	r3, [r7, #4]
 800c748:	601a      	str	r2, [r3, #0]
 800c74a:	687b      	ldr	r3, [r7, #4]
 800c74c:	2200      	movs	r2, #0
 800c74e:	605a      	str	r2, [r3, #4]
 800c750:	687b      	ldr	r3, [r7, #4]
 800c752:	4618      	mov	r0, r3
 800c754:	370c      	adds	r7, #12
 800c756:	46bd      	mov	sp, r7
 800c758:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c75c:	4770      	bx	lr
 800c75e:	bf00      	nop
 800c760:	08025b18 	.word	0x08025b18

0800c764 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800c764:	b480      	push	{r7}
 800c766:	b083      	sub	sp, #12
 800c768:	af00      	add	r7, sp, #0
 800c76a:	6078      	str	r0, [r7, #4]
 800c76c:	4a04      	ldr	r2, [pc, #16]	; (800c780 <_ZN13ModelListenerD1Ev+0x1c>)
 800c76e:	687b      	ldr	r3, [r7, #4]
 800c770:	601a      	str	r2, [r3, #0]
 800c772:	687b      	ldr	r3, [r7, #4]
 800c774:	4618      	mov	r0, r3
 800c776:	370c      	adds	r7, #12
 800c778:	46bd      	mov	sp, r7
 800c77a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c77e:	4770      	bx	lr
 800c780:	08025b18 	.word	0x08025b18

0800c784 <_ZN13ModelListenerD0Ev>:
 800c784:	b580      	push	{r7, lr}
 800c786:	b082      	sub	sp, #8
 800c788:	af00      	add	r7, sp, #0
 800c78a:	6078      	str	r0, [r7, #4]
 800c78c:	6878      	ldr	r0, [r7, #4]
 800c78e:	f7ff ffe9 	bl	800c764 <_ZN13ModelListenerD1Ev>
 800c792:	2108      	movs	r1, #8
 800c794:	6878      	ldr	r0, [r7, #4]
 800c796:	f016 f844 	bl	8022822 <_ZdlPvj>
 800c79a:	687b      	ldr	r3, [r7, #4]
 800c79c:	4618      	mov	r0, r3
 800c79e:	3708      	adds	r7, #8
 800c7a0:	46bd      	mov	sp, r7
 800c7a2:	bd80      	pop	{r7, pc}

0800c7a4 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 800c7a4:	b580      	push	{r7, lr}
 800c7a6:	b082      	sub	sp, #8
 800c7a8:	af00      	add	r7, sp, #0
 800c7aa:	6078      	str	r0, [r7, #4]
 800c7ac:	4a09      	ldr	r2, [pc, #36]	; (800c7d4 <_ZN16Screen1PresenterD1Ev+0x30>)
 800c7ae:	687b      	ldr	r3, [r7, #4]
 800c7b0:	601a      	str	r2, [r3, #0]
 800c7b2:	4a09      	ldr	r2, [pc, #36]	; (800c7d8 <_ZN16Screen1PresenterD1Ev+0x34>)
 800c7b4:	687b      	ldr	r3, [r7, #4]
 800c7b6:	605a      	str	r2, [r3, #4]
 800c7b8:	687b      	ldr	r3, [r7, #4]
 800c7ba:	3304      	adds	r3, #4
 800c7bc:	4618      	mov	r0, r3
 800c7be:	f7ff ffd1 	bl	800c764 <_ZN13ModelListenerD1Ev>
 800c7c2:	687b      	ldr	r3, [r7, #4]
 800c7c4:	4618      	mov	r0, r3
 800c7c6:	f7ff ff89 	bl	800c6dc <_ZN8touchgfx9PresenterD1Ev>
 800c7ca:	687b      	ldr	r3, [r7, #4]
 800c7cc:	4618      	mov	r0, r3
 800c7ce:	3708      	adds	r7, #8
 800c7d0:	46bd      	mov	sp, r7
 800c7d2:	bd80      	pop	{r7, pc}
 800c7d4:	08025af0 	.word	0x08025af0
 800c7d8:	08025b08 	.word	0x08025b08

0800c7dc <_ZThn4_N16Screen1PresenterD1Ev>:
 800c7dc:	f1a0 0004 	sub.w	r0, r0, #4
 800c7e0:	e7e0      	b.n	800c7a4 <_ZN16Screen1PresenterD1Ev>
 800c7e2:	bf00      	nop

0800c7e4 <_ZN16Screen1PresenterD0Ev>:
 800c7e4:	b580      	push	{r7, lr}
 800c7e6:	b082      	sub	sp, #8
 800c7e8:	af00      	add	r7, sp, #0
 800c7ea:	6078      	str	r0, [r7, #4]
 800c7ec:	6878      	ldr	r0, [r7, #4]
 800c7ee:	f7ff ffd9 	bl	800c7a4 <_ZN16Screen1PresenterD1Ev>
 800c7f2:	2110      	movs	r1, #16
 800c7f4:	6878      	ldr	r0, [r7, #4]
 800c7f6:	f016 f814 	bl	8022822 <_ZdlPvj>
 800c7fa:	687b      	ldr	r3, [r7, #4]
 800c7fc:	4618      	mov	r0, r3
 800c7fe:	3708      	adds	r7, #8
 800c800:	46bd      	mov	sp, r7
 800c802:	bd80      	pop	{r7, pc}

0800c804 <_ZThn4_N16Screen1PresenterD0Ev>:
 800c804:	f1a0 0004 	sub.w	r0, r0, #4
 800c808:	e7ec      	b.n	800c7e4 <_ZN16Screen1PresenterD0Ev>
	...

0800c80c <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

Screen1Presenter::Screen1Presenter(Screen1View& v) : view(v)
 800c80c:	b580      	push	{r7, lr}
 800c80e:	b082      	sub	sp, #8
 800c810:	af00      	add	r7, sp, #0
 800c812:	6078      	str	r0, [r7, #4]
 800c814:	6039      	str	r1, [r7, #0]
 800c816:	687b      	ldr	r3, [r7, #4]
 800c818:	4618      	mov	r0, r3
 800c81a:	f7ff ff7f 	bl	800c71c <_ZN8touchgfx9PresenterC1Ev>
 800c81e:	687b      	ldr	r3, [r7, #4]
 800c820:	3304      	adds	r3, #4
 800c822:	4618      	mov	r0, r3
 800c824:	f7ff ff8a 	bl	800c73c <_ZN13ModelListenerC1Ev>
 800c828:	4a06      	ldr	r2, [pc, #24]	; (800c844 <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 800c82a:	687b      	ldr	r3, [r7, #4]
 800c82c:	601a      	str	r2, [r3, #0]
 800c82e:	4a06      	ldr	r2, [pc, #24]	; (800c848 <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 800c830:	687b      	ldr	r3, [r7, #4]
 800c832:	605a      	str	r2, [r3, #4]
 800c834:	687b      	ldr	r3, [r7, #4]
 800c836:	683a      	ldr	r2, [r7, #0]
 800c838:	60da      	str	r2, [r3, #12]
{

}
 800c83a:	687b      	ldr	r3, [r7, #4]
 800c83c:	4618      	mov	r0, r3
 800c83e:	3708      	adds	r7, #8
 800c840:	46bd      	mov	sp, r7
 800c842:	bd80      	pop	{r7, pc}
 800c844:	08025af0 	.word	0x08025af0
 800c848:	08025b08 	.word	0x08025b08

0800c84c <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 800c84c:	b480      	push	{r7}
 800c84e:	b083      	sub	sp, #12
 800c850:	af00      	add	r7, sp, #0
 800c852:	6078      	str	r0, [r7, #4]

}
 800c854:	bf00      	nop
 800c856:	370c      	adds	r7, #12
 800c858:	46bd      	mov	sp, r7
 800c85a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c85e:	4770      	bx	lr

0800c860 <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 800c860:	b480      	push	{r7}
 800c862:	b083      	sub	sp, #12
 800c864:	af00      	add	r7, sp, #0
 800c866:	6078      	str	r0, [r7, #4]

}
 800c868:	bf00      	nop
 800c86a:	370c      	adds	r7, #12
 800c86c:	46bd      	mov	sp, r7
 800c86e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c872:	4770      	bx	lr

0800c874 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800c874:	b580      	push	{r7, lr}
 800c876:	b082      	sub	sp, #8
 800c878:	af00      	add	r7, sp, #0
 800c87a:	6078      	str	r0, [r7, #4]
 800c87c:	4a05      	ldr	r2, [pc, #20]	; (800c894 <_ZN11Screen1ViewD1Ev+0x20>)
 800c87e:	687b      	ldr	r3, [r7, #4]
 800c880:	601a      	str	r2, [r3, #0]
 800c882:	687b      	ldr	r3, [r7, #4]
 800c884:	4618      	mov	r0, r3
 800c886:	f7ff fba9 	bl	800bfdc <_ZN15Screen1ViewBaseD1Ev>
 800c88a:	687b      	ldr	r3, [r7, #4]
 800c88c:	4618      	mov	r0, r3
 800c88e:	3708      	adds	r7, #8
 800c890:	46bd      	mov	sp, r7
 800c892:	bd80      	pop	{r7, pc}
 800c894:	08025b40 	.word	0x08025b40

0800c898 <_ZN11Screen1ViewD0Ev>:
 800c898:	b580      	push	{r7, lr}
 800c89a:	b082      	sub	sp, #8
 800c89c:	af00      	add	r7, sp, #0
 800c89e:	6078      	str	r0, [r7, #4]
 800c8a0:	6878      	ldr	r0, [r7, #4]
 800c8a2:	f7ff ffe7 	bl	800c874 <_ZN11Screen1ViewD1Ev>
 800c8a6:	f640 4164 	movw	r1, #3172	; 0xc64
 800c8aa:	6878      	ldr	r0, [r7, #4]
 800c8ac:	f015 ffb9 	bl	8022822 <_ZdlPvj>
 800c8b0:	687b      	ldr	r3, [r7, #4]
 800c8b2:	4618      	mov	r0, r3
 800c8b4:	3708      	adds	r7, #8
 800c8b6:	46bd      	mov	sp, r7
 800c8b8:	bd80      	pop	{r7, pc}
	...

0800c8bc <_ZN11Screen1ViewC1Ev>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <Color.hpp>

Screen1View::Screen1View()
 800c8bc:	b580      	push	{r7, lr}
 800c8be:	b082      	sub	sp, #8
 800c8c0:	af00      	add	r7, sp, #0
 800c8c2:	6078      	str	r0, [r7, #4]
 800c8c4:	687b      	ldr	r3, [r7, #4]
 800c8c6:	4618      	mov	r0, r3
 800c8c8:	f7fe fb9a 	bl	800b000 <_ZN15Screen1ViewBaseC1Ev>
 800c8cc:	4a03      	ldr	r2, [pc, #12]	; (800c8dc <_ZN11Screen1ViewC1Ev+0x20>)
 800c8ce:	687b      	ldr	r3, [r7, #4]
 800c8d0:	601a      	str	r2, [r3, #0]
{
}
 800c8d2:	687b      	ldr	r3, [r7, #4]
 800c8d4:	4618      	mov	r0, r3
 800c8d6:	3708      	adds	r7, #8
 800c8d8:	46bd      	mov	sp, r7
 800c8da:	bd80      	pop	{r7, pc}
 800c8dc:	08025b40 	.word	0x08025b40

0800c8e0 <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 800c8e0:	b580      	push	{r7, lr}
 800c8e2:	b082      	sub	sp, #8
 800c8e4:	af00      	add	r7, sp, #0
 800c8e6:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::setupScreen();
 800c8e8:	687b      	ldr	r3, [r7, #4]
 800c8ea:	4618      	mov	r0, r3
 800c8ec:	f7ff fc01 	bl	800c0f2 <_ZN15Screen1ViewBase11setupScreenEv>
}
 800c8f0:	bf00      	nop
 800c8f2:	3708      	adds	r7, #8
 800c8f4:	46bd      	mov	sp, r7
 800c8f6:	bd80      	pop	{r7, pc}

0800c8f8 <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 800c8f8:	b580      	push	{r7, lr}
 800c8fa:	b082      	sub	sp, #8
 800c8fc:	af00      	add	r7, sp, #0
 800c8fe:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 800c900:	687b      	ldr	r3, [r7, #4]
 800c902:	4618      	mov	r0, r3
 800c904:	f7fe fa78 	bl	800adf8 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800c908:	bf00      	nop
 800c90a:	3708      	adds	r7, #8
 800c90c:	46bd      	mov	sp, r7
 800c90e:	bd80      	pop	{r7, pc}

0800c910 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800c910:	b480      	push	{r7}
 800c912:	b083      	sub	sp, #12
 800c914:	af00      	add	r7, sp, #0
 800c916:	6078      	str	r0, [r7, #4]
    {
 800c918:	4a04      	ldr	r2, [pc, #16]	; (800c92c <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800c91a:	687b      	ldr	r3, [r7, #4]
 800c91c:	601a      	str	r2, [r3, #0]
    }
 800c91e:	687b      	ldr	r3, [r7, #4]
 800c920:	4618      	mov	r0, r3
 800c922:	370c      	adds	r7, #12
 800c924:	46bd      	mov	sp, r7
 800c926:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c92a:	4770      	bx	lr
 800c92c:	08025b8c 	.word	0x08025b8c

0800c930 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800c930:	b580      	push	{r7, lr}
 800c932:	b082      	sub	sp, #8
 800c934:	af00      	add	r7, sp, #0
 800c936:	6078      	str	r0, [r7, #4]
    }
 800c938:	6878      	ldr	r0, [r7, #4]
 800c93a:	f7ff ffe9 	bl	800c910 <_ZN8touchgfx15TouchControllerD1Ev>
 800c93e:	2104      	movs	r1, #4
 800c940:	6878      	ldr	r0, [r7, #4]
 800c942:	f015 ff6e 	bl	8022822 <_ZdlPvj>
 800c946:	687b      	ldr	r3, [r7, #4]
 800c948:	4618      	mov	r0, r3
 800c94a:	3708      	adds	r7, #8
 800c94c:	46bd      	mov	sp, r7
 800c94e:	bd80      	pop	{r7, pc}

0800c950 <_ZN20STM32TouchController4initEv>:

static TS_DrvTypeDef* tsDriver;
extern I2C_HandleTypeDef hi2c1;

void STM32TouchController::init()
{
 800c950:	b580      	push	{r7, lr}
 800c952:	b082      	sub	sp, #8
 800c954:	af00      	add	r7, sp, #0
 800c956:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
    /* Initialize the TS driver structure */
    tsDriver = &ft6x06_ts_drv;
 800c958:	4b05      	ldr	r3, [pc, #20]	; (800c970 <_ZN20STM32TouchController4initEv+0x20>)
 800c95a:	4a06      	ldr	r2, [pc, #24]	; (800c974 <_ZN20STM32TouchController4initEv+0x24>)
 800c95c:	601a      	str	r2, [r3, #0]

    /* Initialize the TS driver */
    tsDriver->Start(0x38<<1);
 800c95e:	4b04      	ldr	r3, [pc, #16]	; (800c970 <_ZN20STM32TouchController4initEv+0x20>)
 800c960:	681b      	ldr	r3, [r3, #0]
 800c962:	68db      	ldr	r3, [r3, #12]
 800c964:	2070      	movs	r0, #112	; 0x70
 800c966:	4798      	blx	r3
}
 800c968:	bf00      	nop
 800c96a:	3708      	adds	r7, #8
 800c96c:	46bd      	mov	sp, r7
 800c96e:	bd80      	pop	{r7, pc}
 800c970:	2002fe08 	.word	0x2002fe08
 800c974:	2000000c 	.word	0x2000000c

0800c978 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800c978:	b580      	push	{r7, lr}
 800c97a:	b086      	sub	sp, #24
 800c97c:	af00      	add	r7, sp, #0
 800c97e:	60f8      	str	r0, [r7, #12]
 800c980:	60b9      	str	r1, [r7, #8]
 800c982:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
	if (tsDriver)
 800c984:	4b14      	ldr	r3, [pc, #80]	; (800c9d8 <_ZN20STM32TouchController11sampleTouchERlS0_+0x60>)
 800c986:	681b      	ldr	r3, [r3, #0]
 800c988:	2b00      	cmp	r3, #0
 800c98a:	d01f      	beq.n	800c9cc <_ZN20STM32TouchController11sampleTouchERlS0_+0x54>
	    {
	        if (tsDriver->DetectTouch(0x38<<1))
 800c98c:	4b12      	ldr	r3, [pc, #72]	; (800c9d8 <_ZN20STM32TouchController11sampleTouchERlS0_+0x60>)
 800c98e:	681b      	ldr	r3, [r3, #0]
 800c990:	691b      	ldr	r3, [r3, #16]
 800c992:	2070      	movs	r0, #112	; 0x70
 800c994:	4798      	blx	r3
 800c996:	4603      	mov	r3, r0
 800c998:	2b00      	cmp	r3, #0
 800c99a:	bf14      	ite	ne
 800c99c:	2301      	movne	r3, #1
 800c99e:	2300      	moveq	r3, #0
 800c9a0:	b2db      	uxtb	r3, r3
 800c9a2:	2b00      	cmp	r3, #0
 800c9a4:	d012      	beq.n	800c9cc <_ZN20STM32TouchController11sampleTouchERlS0_+0x54>
	        {
	            /* Get each touch coordinates */
	            uint16_t _x, _y;
	            tsDriver->GetXY(0x38<<1, &_y, &_x);
 800c9a6:	4b0c      	ldr	r3, [pc, #48]	; (800c9d8 <_ZN20STM32TouchController11sampleTouchERlS0_+0x60>)
 800c9a8:	681b      	ldr	r3, [r3, #0]
 800c9aa:	695b      	ldr	r3, [r3, #20]
 800c9ac:	f107 0216 	add.w	r2, r7, #22
 800c9b0:	f107 0114 	add.w	r1, r7, #20
 800c9b4:	2070      	movs	r0, #112	; 0x70
 800c9b6:	4798      	blx	r3
	            x = (int32_t)_x;
 800c9b8:	8afb      	ldrh	r3, [r7, #22]
 800c9ba:	461a      	mov	r2, r3
 800c9bc:	68bb      	ldr	r3, [r7, #8]
 800c9be:	601a      	str	r2, [r3, #0]
	            y = (int32_t)_y;
 800c9c0:	8abb      	ldrh	r3, [r7, #20]
 800c9c2:	461a      	mov	r2, r3
 800c9c4:	687b      	ldr	r3, [r7, #4]
 800c9c6:	601a      	str	r2, [r3, #0]
	            return true;
 800c9c8:	2301      	movs	r3, #1
 800c9ca:	e000      	b.n	800c9ce <_ZN20STM32TouchController11sampleTouchERlS0_+0x56>
	        }
	    }
    return false;
 800c9cc:	2300      	movs	r3, #0
}
 800c9ce:	4618      	mov	r0, r3
 800c9d0:	3718      	adds	r7, #24
 800c9d2:	46bd      	mov	sp, r7
 800c9d4:	bd80      	pop	{r7, pc}
 800c9d6:	bf00      	nop
 800c9d8:	2002fe08 	.word	0x2002fe08

0800c9dc <_ZL10I2Cx_ErrorP19__I2C_HandleTypeDefh>:
  * @param  i2c_handler : I2C handler
  * @param  Addr: I2C Address
  * @retval None
  */
static void I2Cx_Error(I2C_HandleTypeDef* i2c_handler, uint8_t Addr)
{
 800c9dc:	b580      	push	{r7, lr}
 800c9de:	b082      	sub	sp, #8
 800c9e0:	af00      	add	r7, sp, #0
 800c9e2:	6078      	str	r0, [r7, #4]
 800c9e4:	460b      	mov	r3, r1
 800c9e6:	70fb      	strb	r3, [r7, #3]
    /* De-initialize the I2C communication bus */
    HAL_I2C_DeInit(i2c_handler);
 800c9e8:	6878      	ldr	r0, [r7, #4]
 800c9ea:	f7f7 fde1 	bl	80045b0 <HAL_I2C_DeInit>

    /* Re-Initialize the I2C communication bus */
    HAL_I2C_Init(i2c_handler);
 800c9ee:	6878      	ldr	r0, [r7, #4]
 800c9f0:	f7f7 fd4e 	bl	8004490 <HAL_I2C_Init>
}
 800c9f4:	bf00      	nop
 800c9f6:	3708      	adds	r7, #8
 800c9f8:	46bd      	mov	sp, r7
 800c9fa:	bd80      	pop	{r7, pc}

0800c9fc <_ZL17I2Cx_ReadMultipleP19__I2C_HandleTypeDefhttPht>:
                                           uint8_t Addr,
                                           uint16_t Reg,
                                           uint16_t MemAddress,
                                           uint8_t* Buffer,
                                           uint16_t Length)
{
 800c9fc:	b580      	push	{r7, lr}
 800c9fe:	b08a      	sub	sp, #40	; 0x28
 800ca00:	af04      	add	r7, sp, #16
 800ca02:	60f8      	str	r0, [r7, #12]
 800ca04:	4608      	mov	r0, r1
 800ca06:	4611      	mov	r1, r2
 800ca08:	461a      	mov	r2, r3
 800ca0a:	4603      	mov	r3, r0
 800ca0c:	72fb      	strb	r3, [r7, #11]
 800ca0e:	460b      	mov	r3, r1
 800ca10:	813b      	strh	r3, [r7, #8]
 800ca12:	4613      	mov	r3, r2
 800ca14:	80fb      	strh	r3, [r7, #6]
    HAL_StatusTypeDef status = HAL_OK;
 800ca16:	2300      	movs	r3, #0
 800ca18:	75fb      	strb	r3, [r7, #23]

    status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 800ca1a:	7afb      	ldrb	r3, [r7, #11]
 800ca1c:	b299      	uxth	r1, r3
 800ca1e:	88f8      	ldrh	r0, [r7, #6]
 800ca20:	893a      	ldrh	r2, [r7, #8]
 800ca22:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800ca26:	9302      	str	r3, [sp, #8]
 800ca28:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800ca2a:	9301      	str	r3, [sp, #4]
 800ca2c:	6a3b      	ldr	r3, [r7, #32]
 800ca2e:	9300      	str	r3, [sp, #0]
 800ca30:	4603      	mov	r3, r0
 800ca32:	68f8      	ldr	r0, [r7, #12]
 800ca34:	f7f7 fff4 	bl	8004a20 <HAL_I2C_Mem_Read>
 800ca38:	4603      	mov	r3, r0
 800ca3a:	75fb      	strb	r3, [r7, #23]

    /* Check the communication status */
    if (status != HAL_OK)
 800ca3c:	7dfb      	ldrb	r3, [r7, #23]
 800ca3e:	2b00      	cmp	r3, #0
 800ca40:	d004      	beq.n	800ca4c <_ZL17I2Cx_ReadMultipleP19__I2C_HandleTypeDefhttPht+0x50>
    {
        /* I2C error occurred */
        I2Cx_Error(i2c_handler, Addr);
 800ca42:	7afb      	ldrb	r3, [r7, #11]
 800ca44:	4619      	mov	r1, r3
 800ca46:	68f8      	ldr	r0, [r7, #12]
 800ca48:	f7ff ffc8 	bl	800c9dc <_ZL10I2Cx_ErrorP19__I2C_HandleTypeDefh>
    }
    return status;
 800ca4c:	7dfb      	ldrb	r3, [r7, #23]
}
 800ca4e:	4618      	mov	r0, r3
 800ca50:	3718      	adds	r7, #24
 800ca52:	46bd      	mov	sp, r7
 800ca54:	bd80      	pop	{r7, pc}

0800ca56 <_ZL18I2Cx_WriteMultipleP19__I2C_HandleTypeDefhttPht>:
                                            uint8_t Addr,
                                            uint16_t Reg,
                                            uint16_t MemAddress,
                                            uint8_t* Buffer,
                                            uint16_t Length)
{
 800ca56:	b580      	push	{r7, lr}
 800ca58:	b08a      	sub	sp, #40	; 0x28
 800ca5a:	af04      	add	r7, sp, #16
 800ca5c:	60f8      	str	r0, [r7, #12]
 800ca5e:	4608      	mov	r0, r1
 800ca60:	4611      	mov	r1, r2
 800ca62:	461a      	mov	r2, r3
 800ca64:	4603      	mov	r3, r0
 800ca66:	72fb      	strb	r3, [r7, #11]
 800ca68:	460b      	mov	r3, r1
 800ca6a:	813b      	strh	r3, [r7, #8]
 800ca6c:	4613      	mov	r3, r2
 800ca6e:	80fb      	strh	r3, [r7, #6]
    HAL_StatusTypeDef status = HAL_OK;
 800ca70:	2300      	movs	r3, #0
 800ca72:	75fb      	strb	r3, [r7, #23]

    status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 800ca74:	7afb      	ldrb	r3, [r7, #11]
 800ca76:	b299      	uxth	r1, r3
 800ca78:	88f8      	ldrh	r0, [r7, #6]
 800ca7a:	893a      	ldrh	r2, [r7, #8]
 800ca7c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800ca80:	9302      	str	r3, [sp, #8]
 800ca82:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800ca84:	9301      	str	r3, [sp, #4]
 800ca86:	6a3b      	ldr	r3, [r7, #32]
 800ca88:	9300      	str	r3, [sp, #0]
 800ca8a:	4603      	mov	r3, r0
 800ca8c:	68f8      	ldr	r0, [r7, #12]
 800ca8e:	f7f7 feb3 	bl	80047f8 <HAL_I2C_Mem_Write>
 800ca92:	4603      	mov	r3, r0
 800ca94:	75fb      	strb	r3, [r7, #23]

    /* Check the communication status */
    if (status != HAL_OK)
 800ca96:	7dfb      	ldrb	r3, [r7, #23]
 800ca98:	2b00      	cmp	r3, #0
 800ca9a:	d004      	beq.n	800caa6 <_ZL18I2Cx_WriteMultipleP19__I2C_HandleTypeDefhttPht+0x50>
    {
        /* Re-Initiaize the I2C Bus */
        I2Cx_Error(i2c_handler, Addr);
 800ca9c:	7afb      	ldrb	r3, [r7, #11]
 800ca9e:	4619      	mov	r1, r3
 800caa0:	68f8      	ldr	r0, [r7, #12]
 800caa2:	f7ff ff9b 	bl	800c9dc <_ZL10I2Cx_ErrorP19__I2C_HandleTypeDefh>
    }
    return status;
 800caa6:	7dfb      	ldrb	r3, [r7, #23]
}
 800caa8:	4618      	mov	r0, r3
 800caaa:	3718      	adds	r7, #24
 800caac:	46bd      	mov	sp, r7
 800caae:	bd80      	pop	{r7, pc}

0800cab0 <TS_IO_Write>:
  * @param  Reg: Reg address
  * @param  Value: Data to be written
  * @retval None
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 800cab0:	b580      	push	{r7, lr}
 800cab2:	b084      	sub	sp, #16
 800cab4:	af02      	add	r7, sp, #8
 800cab6:	4603      	mov	r3, r0
 800cab8:	71fb      	strb	r3, [r7, #7]
 800caba:	460b      	mov	r3, r1
 800cabc:	71bb      	strb	r3, [r7, #6]
 800cabe:	4613      	mov	r3, r2
 800cac0:	717b      	strb	r3, [r7, #5]
    I2Cx_WriteMultiple(&hi2c1, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&Value, 1);
 800cac2:	79bb      	ldrb	r3, [r7, #6]
 800cac4:	b29a      	uxth	r2, r3
 800cac6:	79f9      	ldrb	r1, [r7, #7]
 800cac8:	2301      	movs	r3, #1
 800caca:	9301      	str	r3, [sp, #4]
 800cacc:	1d7b      	adds	r3, r7, #5
 800cace:	9300      	str	r3, [sp, #0]
 800cad0:	2301      	movs	r3, #1
 800cad2:	4803      	ldr	r0, [pc, #12]	; (800cae0 <TS_IO_Write+0x30>)
 800cad4:	f7ff ffbf 	bl	800ca56 <_ZL18I2Cx_WriteMultipleP19__I2C_HandleTypeDefhttPht>
}
 800cad8:	bf00      	nop
 800cada:	3708      	adds	r7, #8
 800cadc:	46bd      	mov	sp, r7
 800cade:	bd80      	pop	{r7, pc}
 800cae0:	20000160 	.word	0x20000160

0800cae4 <TS_IO_ReadMultiple>:
  * @param  Addr: I2C address
  * @param  Reg: Reg address
  * @retval Data to be read
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 800cae4:	b580      	push	{r7, lr}
 800cae6:	b084      	sub	sp, #16
 800cae8:	af02      	add	r7, sp, #8
 800caea:	603a      	str	r2, [r7, #0]
 800caec:	461a      	mov	r2, r3
 800caee:	4603      	mov	r3, r0
 800caf0:	71fb      	strb	r3, [r7, #7]
 800caf2:	460b      	mov	r3, r1
 800caf4:	71bb      	strb	r3, [r7, #6]
 800caf6:	4613      	mov	r3, r2
 800caf8:	80bb      	strh	r3, [r7, #4]
    I2Cx_ReadMultiple(&hi2c1, Addr, Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
 800cafa:	79bb      	ldrb	r3, [r7, #6]
 800cafc:	b29a      	uxth	r2, r3
 800cafe:	79f9      	ldrb	r1, [r7, #7]
 800cb00:	88bb      	ldrh	r3, [r7, #4]
 800cb02:	9301      	str	r3, [sp, #4]
 800cb04:	683b      	ldr	r3, [r7, #0]
 800cb06:	9300      	str	r3, [sp, #0]
 800cb08:	2301      	movs	r3, #1
 800cb0a:	4805      	ldr	r0, [pc, #20]	; (800cb20 <TS_IO_ReadMultiple+0x3c>)
 800cb0c:	f7ff ff76 	bl	800c9fc <_ZL17I2Cx_ReadMultipleP19__I2C_HandleTypeDefhttPht>

    return *Buffer;
 800cb10:	683b      	ldr	r3, [r7, #0]
 800cb12:	781b      	ldrb	r3, [r3, #0]
 800cb14:	b29b      	uxth	r3, r3
}
 800cb16:	4618      	mov	r0, r3
 800cb18:	3708      	adds	r7, #8
 800cb1a:	46bd      	mov	sp, r7
 800cb1c:	bd80      	pop	{r7, pc}
 800cb1e:	bf00      	nop
 800cb20:	20000160 	.word	0x20000160

0800cb24 <TS_IO_Read>:

uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 800cb24:	b580      	push	{r7, lr}
 800cb26:	b086      	sub	sp, #24
 800cb28:	af02      	add	r7, sp, #8
 800cb2a:	4603      	mov	r3, r0
 800cb2c:	460a      	mov	r2, r1
 800cb2e:	71fb      	strb	r3, [r7, #7]
 800cb30:	4613      	mov	r3, r2
 800cb32:	71bb      	strb	r3, [r7, #6]
	uint8_t read = 0;
 800cb34:	2300      	movs	r3, #0
 800cb36:	73fb      	strb	r3, [r7, #15]

	I2Cx_ReadMultiple(&hi2c1, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &read, 1);
 800cb38:	79bb      	ldrb	r3, [r7, #6]
 800cb3a:	b29a      	uxth	r2, r3
 800cb3c:	79f9      	ldrb	r1, [r7, #7]
 800cb3e:	2301      	movs	r3, #1
 800cb40:	9301      	str	r3, [sp, #4]
 800cb42:	f107 030f 	add.w	r3, r7, #15
 800cb46:	9300      	str	r3, [sp, #0]
 800cb48:	2301      	movs	r3, #1
 800cb4a:	4804      	ldr	r0, [pc, #16]	; (800cb5c <TS_IO_Read+0x38>)
 800cb4c:	f7ff ff56 	bl	800c9fc <_ZL17I2Cx_ReadMultipleP19__I2C_HandleTypeDefhttPht>

    return read;
 800cb50:	7bfb      	ldrb	r3, [r7, #15]
}
 800cb52:	4618      	mov	r0, r3
 800cb54:	3710      	adds	r7, #16
 800cb56:	46bd      	mov	sp, r7
 800cb58:	bd80      	pop	{r7, pc}
 800cb5a:	bf00      	nop
 800cb5c:	20000160 	.word	0x20000160

0800cb60 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800cb60:	b580      	push	{r7, lr}
 800cb62:	b082      	sub	sp, #8
 800cb64:	af00      	add	r7, sp, #0
 800cb66:	6078      	str	r0, [r7, #4]
 800cb68:	4a05      	ldr	r2, [pc, #20]	; (800cb80 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800cb6a:	687b      	ldr	r3, [r7, #4]
 800cb6c:	601a      	str	r2, [r3, #0]
 800cb6e:	687b      	ldr	r3, [r7, #4]
 800cb70:	4618      	mov	r0, r3
 800cb72:	f7ff fecd 	bl	800c910 <_ZN8touchgfx15TouchControllerD1Ev>
 800cb76:	687b      	ldr	r3, [r7, #4]
 800cb78:	4618      	mov	r0, r3
 800cb7a:	3708      	adds	r7, #8
 800cb7c:	46bd      	mov	sp, r7
 800cb7e:	bd80      	pop	{r7, pc}
 800cb80:	08025b74 	.word	0x08025b74

0800cb84 <_ZN20STM32TouchControllerD0Ev>:
 800cb84:	b580      	push	{r7, lr}
 800cb86:	b082      	sub	sp, #8
 800cb88:	af00      	add	r7, sp, #0
 800cb8a:	6078      	str	r0, [r7, #4]
 800cb8c:	6878      	ldr	r0, [r7, #4]
 800cb8e:	f7ff ffe7 	bl	800cb60 <_ZN20STM32TouchControllerD1Ev>
 800cb92:	2104      	movs	r1, #4
 800cb94:	6878      	ldr	r0, [r7, #4]
 800cb96:	f015 fe44 	bl	8022822 <_ZdlPvj>
 800cb9a:	687b      	ldr	r3, [r7, #4]
 800cb9c:	4618      	mov	r0, r3
 800cb9e:	3708      	adds	r7, #8
 800cba0:	46bd      	mov	sp, r7
 800cba2:	bd80      	pop	{r7, pc}

0800cba4 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800cba4:	b480      	push	{r7}
 800cba6:	af00      	add	r7, sp, #0

}
 800cba8:	bf00      	nop
 800cbaa:	46bd      	mov	sp, r7
 800cbac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbb0:	4770      	bx	lr
	...

0800cbb4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800cbb4:	b480      	push	{r7}
 800cbb6:	b083      	sub	sp, #12
 800cbb8:	af00      	add	r7, sp, #0
 800cbba:	4603      	mov	r3, r0
 800cbbc:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800cbbe:	79fb      	ldrb	r3, [r7, #7]
 800cbc0:	2b03      	cmp	r3, #3
 800cbc2:	d80c      	bhi.n	800cbde <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800cbc4:	a201      	add	r2, pc, #4	; (adr r2, 800cbcc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800cbc6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cbca:	bf00      	nop
 800cbcc:	0800cbdd 	.word	0x0800cbdd
 800cbd0:	0800cbdd 	.word	0x0800cbdd
 800cbd4:	0800cbdd 	.word	0x0800cbdd
 800cbd8:	0800cbdd 	.word	0x0800cbdd
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800cbdc:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800cbde:	bf00      	nop
 800cbe0:	370c      	adds	r7, #12
 800cbe2:	46bd      	mov	sp, r7
 800cbe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbe8:	4770      	bx	lr
 800cbea:	bf00      	nop

0800cbec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800cbec:	b480      	push	{r7}
 800cbee:	b083      	sub	sp, #12
 800cbf0:	af00      	add	r7, sp, #0
 800cbf2:	4603      	mov	r3, r0
 800cbf4:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800cbf6:	79fb      	ldrb	r3, [r7, #7]
 800cbf8:	2b03      	cmp	r3, #3
 800cbfa:	d80c      	bhi.n	800cc16 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800cbfc:	a201      	add	r2, pc, #4	; (adr r2, 800cc04 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800cbfe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cc02:	bf00      	nop
 800cc04:	0800cc15 	.word	0x0800cc15
 800cc08:	0800cc15 	.word	0x0800cc15
 800cc0c:	0800cc15 	.word	0x0800cc15
 800cc10:	0800cc15 	.word	0x0800cc15
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800cc14:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800cc16:	bf00      	nop
 800cc18:	370c      	adds	r7, #12
 800cc1a:	46bd      	mov	sp, r7
 800cc1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc20:	4770      	bx	lr
 800cc22:	bf00      	nop

0800cc24 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800cc24:	b480      	push	{r7}
 800cc26:	b083      	sub	sp, #12
 800cc28:	af00      	add	r7, sp, #0
 800cc2a:	4603      	mov	r3, r0
 800cc2c:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800cc2e:	79fb      	ldrb	r3, [r7, #7]
 800cc30:	2b03      	cmp	r3, #3
 800cc32:	d80c      	bhi.n	800cc4e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800cc34:	a201      	add	r2, pc, #4	; (adr r2, 800cc3c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800cc36:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cc3a:	bf00      	nop
 800cc3c:	0800cc4d 	.word	0x0800cc4d
 800cc40:	0800cc4d 	.word	0x0800cc4d
 800cc44:	0800cc4d 	.word	0x0800cc4d
 800cc48:	0800cc4d 	.word	0x0800cc4d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800cc4c:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800cc4e:	bf00      	nop
 800cc50:	370c      	adds	r7, #12
 800cc52:	46bd      	mov	sp, r7
 800cc54:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc58:	4770      	bx	lr
 800cc5a:	bf00      	nop

0800cc5c <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800cc5c:	b480      	push	{r7}
 800cc5e:	b083      	sub	sp, #12
 800cc60:	af00      	add	r7, sp, #0
 800cc62:	6078      	str	r0, [r7, #4]
    {
 800cc64:	4a04      	ldr	r2, [pc, #16]	; (800cc78 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800cc66:	687b      	ldr	r3, [r7, #4]
 800cc68:	601a      	str	r2, [r3, #0]
    }
 800cc6a:	687b      	ldr	r3, [r7, #4]
 800cc6c:	4618      	mov	r0, r3
 800cc6e:	370c      	adds	r7, #12
 800cc70:	46bd      	mov	sp, r7
 800cc72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc76:	4770      	bx	lr
 800cc78:	08025fc4 	.word	0x08025fc4

0800cc7c <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800cc7c:	b580      	push	{r7, lr}
 800cc7e:	b082      	sub	sp, #8
 800cc80:	af00      	add	r7, sp, #0
 800cc82:	6078      	str	r0, [r7, #4]
    }
 800cc84:	6878      	ldr	r0, [r7, #4]
 800cc86:	f7ff ffe9 	bl	800cc5c <_ZN8touchgfx3HALD1Ev>
 800cc8a:	217c      	movs	r1, #124	; 0x7c
 800cc8c:	6878      	ldr	r0, [r7, #4]
 800cc8e:	f015 fdc8 	bl	8022822 <_ZdlPvj>
 800cc92:	687b      	ldr	r3, [r7, #4]
 800cc94:	4618      	mov	r0, r3
 800cc96:	3708      	adds	r7, #8
 800cc98:	46bd      	mov	sp, r7
 800cc9a:	bd80      	pop	{r7, pc}

0800cc9c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800cc9c:	b480      	push	{r7}
 800cc9e:	b083      	sub	sp, #12
 800cca0:	af00      	add	r7, sp, #0
 800cca2:	6078      	str	r0, [r7, #4]
 800cca4:	460b      	mov	r3, r1
 800cca6:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800cca8:	687b      	ldr	r3, [r7, #4]
 800ccaa:	78fa      	ldrb	r2, [r7, #3]
 800ccac:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        displayOrientationChangeRequested = true;
 800ccb0:	687b      	ldr	r3, [r7, #4]
 800ccb2:	2201      	movs	r2, #1
 800ccb4:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
    }
 800ccb8:	bf00      	nop
 800ccba:	370c      	adds	r7, #12
 800ccbc:	46bd      	mov	sp, r7
 800ccbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccc2:	4770      	bx	lr

0800ccc4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800ccc4:	b580      	push	{r7, lr}
 800ccc6:	b082      	sub	sp, #8
 800ccc8:	af00      	add	r7, sp, #0
 800ccca:	6078      	str	r0, [r7, #4]
 800cccc:	460b      	mov	r3, r1
 800ccce:	807b      	strh	r3, [r7, #2]
 800ccd0:	4613      	mov	r3, r2
 800ccd2:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800ccd4:	4b0c      	ldr	r3, [pc, #48]	; (800cd08 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800ccd6:	881b      	ldrh	r3, [r3, #0]
 800ccd8:	887a      	ldrh	r2, [r7, #2]
 800ccda:	429a      	cmp	r2, r3
 800ccdc:	d304      	bcc.n	800cce8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800ccde:	4b0b      	ldr	r3, [pc, #44]	; (800cd0c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800cce0:	881b      	ldrh	r3, [r3, #0]
 800cce2:	883a      	ldrh	r2, [r7, #0]
 800cce4:	429a      	cmp	r2, r3
 800cce6:	d205      	bcs.n	800ccf4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800cce8:	4b09      	ldr	r3, [pc, #36]	; (800cd10 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800ccea:	4a0a      	ldr	r2, [pc, #40]	; (800cd14 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800ccec:	219e      	movs	r1, #158	; 0x9e
 800ccee:	480a      	ldr	r0, [pc, #40]	; (800cd18 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800ccf0:	f016 fb22 	bl	8023338 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800ccf4:	4a09      	ldr	r2, [pc, #36]	; (800cd1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800ccf6:	887b      	ldrh	r3, [r7, #2]
 800ccf8:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 800ccfa:	4a09      	ldr	r2, [pc, #36]	; (800cd20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800ccfc:	883b      	ldrh	r3, [r7, #0]
 800ccfe:	8013      	strh	r3, [r2, #0]
    }
 800cd00:	bf00      	nop
 800cd02:	3708      	adds	r7, #8
 800cd04:	46bd      	mov	sp, r7
 800cd06:	bd80      	pop	{r7, pc}
 800cd08:	20032420 	.word	0x20032420
 800cd0c:	20032422 	.word	0x20032422
 800cd10:	08024be8 	.word	0x08024be8
 800cd14:	08024c4c 	.word	0x08024c4c
 800cd18:	08024c90 	.word	0x08024c90
 800cd1c:	20032426 	.word	0x20032426
 800cd20:	20032428 	.word	0x20032428

0800cd24 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 800cd24:	b580      	push	{r7, lr}
 800cd26:	b082      	sub	sp, #8
 800cd28:	af00      	add	r7, sp, #0
 800cd2a:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 800cd2c:	687b      	ldr	r3, [r7, #4]
 800cd2e:	f893 307a 	ldrb.w	r3, [r3, #122]	; 0x7a
 800cd32:	2b00      	cmp	r3, #0
 800cd34:	d009      	beq.n	800cd4a <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 800cd36:	687b      	ldr	r3, [r7, #4]
 800cd38:	685a      	ldr	r2, [r3, #4]
 800cd3a:	687b      	ldr	r3, [r7, #4]
 800cd3c:	685b      	ldr	r3, [r3, #4]
 800cd3e:	681b      	ldr	r3, [r3, #0]
 800cd40:	681b      	ldr	r3, [r3, #0]
 800cd42:	4610      	mov	r0, r2
 800cd44:	4798      	blx	r3
 800cd46:	4603      	mov	r3, r0
 800cd48:	e000      	b.n	800cd4c <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 800cd4a:	2300      	movs	r3, #0
    }
 800cd4c:	4618      	mov	r0, r3
 800cd4e:	3708      	adds	r7, #8
 800cd50:	46bd      	mov	sp, r7
 800cd52:	bd80      	pop	{r7, pc}

0800cd54 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 800cd54:	b580      	push	{r7, lr}
 800cd56:	b082      	sub	sp, #8
 800cd58:	af00      	add	r7, sp, #0
 800cd5a:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800cd5c:	6878      	ldr	r0, [r7, #4]
 800cd5e:	f002 fde1 	bl	800f924 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800cd62:	687b      	ldr	r3, [r7, #4]
 800cd64:	681b      	ldr	r3, [r3, #0]
 800cd66:	33ac      	adds	r3, #172	; 0xac
 800cd68:	681b      	ldr	r3, [r3, #0]
 800cd6a:	6878      	ldr	r0, [r7, #4]
 800cd6c:	4798      	blx	r3
    }
 800cd6e:	bf00      	nop
 800cd70:	3708      	adds	r7, #8
 800cd72:	46bd      	mov	sp, r7
 800cd74:	bd80      	pop	{r7, pc}

0800cd76 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 800cd76:	b480      	push	{r7}
 800cd78:	b083      	sub	sp, #12
 800cd7a:	af00      	add	r7, sp, #0
 800cd7c:	6078      	str	r0, [r7, #4]
 800cd7e:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 800cd80:	2300      	movs	r3, #0
    }
 800cd82:	4618      	mov	r0, r3
 800cd84:	370c      	adds	r7, #12
 800cd86:	46bd      	mov	sp, r7
 800cd88:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd8c:	4770      	bx	lr
	...

0800cd90 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800cd90:	b580      	push	{r7, lr}
 800cd92:	b084      	sub	sp, #16
 800cd94:	af00      	add	r7, sp, #0
 800cd96:	60f8      	str	r0, [r7, #12]
 800cd98:	60b9      	str	r1, [r7, #8]
 800cd9a:	607a      	str	r2, [r7, #4]
 800cd9c:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800cd9e:	68bb      	ldr	r3, [r7, #8]
 800cda0:	2b00      	cmp	r3, #0
 800cda2:	d106      	bne.n	800cdb2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800cda4:	4b0f      	ldr	r3, [pc, #60]	; (800cde4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800cda6:	4a10      	ldr	r2, [pc, #64]	; (800cde8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800cda8:	f240 21d2 	movw	r1, #722	; 0x2d2
 800cdac:	480f      	ldr	r0, [pc, #60]	; (800cdec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800cdae:	f016 fac3 	bl	8023338 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800cdb2:	68fb      	ldr	r3, [r7, #12]
 800cdb4:	68ba      	ldr	r2, [r7, #8]
 800cdb6:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800cdb8:	68fb      	ldr	r3, [r7, #12]
 800cdba:	687a      	ldr	r2, [r7, #4]
 800cdbc:	641a      	str	r2, [r3, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800cdbe:	687b      	ldr	r3, [r7, #4]
 800cdc0:	2b00      	cmp	r3, #0
 800cdc2:	bf14      	ite	ne
 800cdc4:	2301      	movne	r3, #1
 800cdc6:	2300      	moveq	r3, #0
 800cdc8:	b2da      	uxtb	r2, r3
 800cdca:	4b09      	ldr	r3, [pc, #36]	; (800cdf0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800cdcc:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800cdce:	68fb      	ldr	r3, [r7, #12]
 800cdd0:	681b      	ldr	r3, [r3, #0]
 800cdd2:	338c      	adds	r3, #140	; 0x8c
 800cdd4:	681b      	ldr	r3, [r3, #0]
 800cdd6:	6839      	ldr	r1, [r7, #0]
 800cdd8:	68f8      	ldr	r0, [r7, #12]
 800cdda:	4798      	blx	r3
    }
 800cddc:	bf00      	nop
 800cdde:	3710      	adds	r7, #16
 800cde0:	46bd      	mov	sp, r7
 800cde2:	bd80      	pop	{r7, pc}
 800cde4:	08024cd4 	.word	0x08024cd4
 800cde8:	08024d0c 	.word	0x08024d0c
 800cdec:	08024c90 	.word	0x08024c90
 800cdf0:	2003242a 	.word	0x2003242a

0800cdf4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 800cdf4:	b480      	push	{r7}
 800cdf6:	b083      	sub	sp, #12
 800cdf8:	af00      	add	r7, sp, #0
 800cdfa:	6078      	str	r0, [r7, #4]
 800cdfc:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800cdfe:	687b      	ldr	r3, [r7, #4]
 800ce00:	683a      	ldr	r2, [r7, #0]
 800ce02:	645a      	str	r2, [r3, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800ce04:	683b      	ldr	r3, [r7, #0]
 800ce06:	2b00      	cmp	r3, #0
 800ce08:	bf14      	ite	ne
 800ce0a:	2301      	movne	r3, #1
 800ce0c:	2300      	moveq	r3, #0
 800ce0e:	b2da      	uxtb	r2, r3
 800ce10:	4b03      	ldr	r3, [pc, #12]	; (800ce20 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800ce12:	701a      	strb	r2, [r3, #0]
    }
 800ce14:	bf00      	nop
 800ce16:	370c      	adds	r7, #12
 800ce18:	46bd      	mov	sp, r7
 800ce1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce1e:	4770      	bx	lr
 800ce20:	2003242b 	.word	0x2003242b

0800ce24 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 800ce24:	b480      	push	{r7}
 800ce26:	b083      	sub	sp, #12
 800ce28:	af00      	add	r7, sp, #0
 800ce2a:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800ce2c:	2300      	movs	r3, #0
    }
 800ce2e:	4618      	mov	r0, r3
 800ce30:	370c      	adds	r7, #12
 800ce32:	46bd      	mov	sp, r7
 800ce34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce38:	4770      	bx	lr

0800ce3a <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 800ce3a:	b580      	push	{r7, lr}
 800ce3c:	b082      	sub	sp, #8
 800ce3e:	af00      	add	r7, sp, #0
 800ce40:	6078      	str	r0, [r7, #4]
 800ce42:	460b      	mov	r3, r1
 800ce44:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800ce46:	687b      	ldr	r3, [r7, #4]
 800ce48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ce4a:	2b00      	cmp	r3, #0
 800ce4c:	d004      	beq.n	800ce58 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800ce4e:	687b      	ldr	r3, [r7, #4]
 800ce50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ce52:	887a      	ldrh	r2, [r7, #2]
 800ce54:	4610      	mov	r0, r2
 800ce56:	4798      	blx	r3
        }
    }
 800ce58:	bf00      	nop
 800ce5a:	3708      	adds	r7, #8
 800ce5c:	46bd      	mov	sp, r7
 800ce5e:	bd80      	pop	{r7, pc}

0800ce60 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 800ce60:	b480      	push	{r7}
 800ce62:	b083      	sub	sp, #12
 800ce64:	af00      	add	r7, sp, #0
 800ce66:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 800ce68:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
 800ce6c:	4618      	mov	r0, r3
 800ce6e:	370c      	adds	r7, #12
 800ce70:	46bd      	mov	sp, r7
 800ce72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce76:	4770      	bx	lr

0800ce78 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800ce78:	b580      	push	{r7, lr}
 800ce7a:	b082      	sub	sp, #8
 800ce7c:	af00      	add	r7, sp, #0
 800ce7e:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800ce80:	687b      	ldr	r3, [r7, #4]
 800ce82:	685a      	ldr	r2, [r3, #4]
 800ce84:	687b      	ldr	r3, [r7, #4]
 800ce86:	685b      	ldr	r3, [r3, #4]
 800ce88:	681b      	ldr	r3, [r3, #0]
 800ce8a:	3318      	adds	r3, #24
 800ce8c:	681b      	ldr	r3, [r3, #0]
 800ce8e:	4610      	mov	r0, r2
 800ce90:	4798      	blx	r3
 800ce92:	4603      	mov	r3, r0
    }
 800ce94:	4618      	mov	r0, r3
 800ce96:	3708      	adds	r7, #8
 800ce98:	46bd      	mov	sp, r7
 800ce9a:	bd80      	pop	{r7, pc}

0800ce9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800ce9c:	b480      	push	{r7}
 800ce9e:	b085      	sub	sp, #20
 800cea0:	af00      	add	r7, sp, #0
 800cea2:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800cea4:	687b      	ldr	r3, [r7, #4]
 800cea6:	f893 2078 	ldrb.w	r2, [r3, #120]	; 0x78
 800ceaa:	687b      	ldr	r3, [r7, #4]
 800ceac:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800ceb0:	429a      	cmp	r2, r3
 800ceb2:	d011      	beq.n	800ced8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 800ceb4:	4b14      	ldr	r3, [pc, #80]	; (800cf08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ceb6:	781b      	ldrb	r3, [r3, #0]
 800ceb8:	2b00      	cmp	r3, #0
 800ceba:	d11e      	bne.n	800cefa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800cebc:	4b13      	ldr	r3, [pc, #76]	; (800cf0c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800cebe:	881b      	ldrh	r3, [r3, #0]
 800cec0:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800cec2:	4b13      	ldr	r3, [pc, #76]	; (800cf10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800cec4:	881a      	ldrh	r2, [r3, #0]
 800cec6:	4b11      	ldr	r3, [pc, #68]	; (800cf0c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800cec8:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 800ceca:	4a11      	ldr	r2, [pc, #68]	; (800cf10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800cecc:	89bb      	ldrh	r3, [r7, #12]
 800cece:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800ced0:	4b0d      	ldr	r3, [pc, #52]	; (800cf08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ced2:	2201      	movs	r2, #1
 800ced4:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800ced6:	e010      	b.n	800cefa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 800ced8:	4b0b      	ldr	r3, [pc, #44]	; (800cf08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ceda:	781b      	ldrb	r3, [r3, #0]
 800cedc:	2b00      	cmp	r3, #0
 800cede:	d00c      	beq.n	800cefa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 800cee0:	4b0a      	ldr	r3, [pc, #40]	; (800cf0c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800cee2:	881b      	ldrh	r3, [r3, #0]
 800cee4:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800cee6:	4b0a      	ldr	r3, [pc, #40]	; (800cf10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800cee8:	881a      	ldrh	r2, [r3, #0]
 800ceea:	4b08      	ldr	r3, [pc, #32]	; (800cf0c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800ceec:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 800ceee:	4a08      	ldr	r2, [pc, #32]	; (800cf10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800cef0:	89fb      	ldrh	r3, [r7, #14]
 800cef2:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800cef4:	4b04      	ldr	r3, [pc, #16]	; (800cf08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800cef6:	2200      	movs	r2, #0
 800cef8:	701a      	strb	r2, [r3, #0]
    }
 800cefa:	bf00      	nop
 800cefc:	3714      	adds	r7, #20
 800cefe:	46bd      	mov	sp, r7
 800cf00:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf04:	4770      	bx	lr
 800cf06:	bf00      	nop
 800cf08:	20032424 	.word	0x20032424
 800cf0c:	20032422 	.word	0x20032422
 800cf10:	20032420 	.word	0x20032420

0800cf14 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800cf14:	b580      	push	{r7, lr}
 800cf16:	b082      	sub	sp, #8
 800cf18:	af00      	add	r7, sp, #0
 800cf1a:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800cf1c:	687b      	ldr	r3, [r7, #4]
 800cf1e:	4618      	mov	r0, r3
 800cf20:	f001 ff5e 	bl	800ede0 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800cf24:	bf00      	nop
 800cf26:	3708      	adds	r7, #8
 800cf28:	46bd      	mov	sp, r7
 800cf2a:	bd80      	pop	{r7, pc}

0800cf2c <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800cf2c:	b580      	push	{r7, lr}
 800cf2e:	b082      	sub	sp, #8
 800cf30:	af00      	add	r7, sp, #0
 800cf32:	6078      	str	r0, [r7, #4]
 800cf34:	4a05      	ldr	r2, [pc, #20]	; (800cf4c <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800cf36:	687b      	ldr	r3, [r7, #4]
 800cf38:	601a      	str	r2, [r3, #0]
 800cf3a:	687b      	ldr	r3, [r7, #4]
 800cf3c:	4618      	mov	r0, r3
 800cf3e:	f7ff fe8d 	bl	800cc5c <_ZN8touchgfx3HALD1Ev>
 800cf42:	687b      	ldr	r3, [r7, #4]
 800cf44:	4618      	mov	r0, r3
 800cf46:	3708      	adds	r7, #8
 800cf48:	46bd      	mov	sp, r7
 800cf4a:	bd80      	pop	{r7, pc}
 800cf4c:	08025df0 	.word	0x08025df0

0800cf50 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800cf50:	b580      	push	{r7, lr}
 800cf52:	b082      	sub	sp, #8
 800cf54:	af00      	add	r7, sp, #0
 800cf56:	6078      	str	r0, [r7, #4]
 800cf58:	6878      	ldr	r0, [r7, #4]
 800cf5a:	f7ff ffe7 	bl	800cf2c <_ZN20TouchGFXGeneratedHALD1Ev>
 800cf5e:	217c      	movs	r1, #124	; 0x7c
 800cf60:	6878      	ldr	r0, [r7, #4]
 800cf62:	f015 fc5e 	bl	8022822 <_ZdlPvj>
 800cf66:	687b      	ldr	r3, [r7, #4]
 800cf68:	4618      	mov	r0, r3
 800cf6a:	3708      	adds	r7, #8
 800cf6c:	46bd      	mov	sp, r7
 800cf6e:	bd80      	pop	{r7, pc}

0800cf70 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800cf70:	b580      	push	{r7, lr}
 800cf72:	b082      	sub	sp, #8
 800cf74:	af00      	add	r7, sp, #0
 800cf76:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800cf78:	687b      	ldr	r3, [r7, #4]
 800cf7a:	4618      	mov	r0, r3
 800cf7c:	f7ff ffca 	bl	800cf14 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800cf80:	bf00      	nop
 800cf82:	3708      	adds	r7, #8
 800cf84:	46bd      	mov	sp, r7
 800cf86:	bd80      	pop	{r7, pc}

0800cf88 <_ZN11TouchGFXHAL10initializeEv>:
 */
//#warning "A user must call touchgfx::startNewTransfer(); once touchgfxDisplayDriverTransmitBlock() has succesfully sent a block."
//#warning "A user must implement C-methods touchgfxDisplayDriverTransmitActive() and touchgfxDisplayDriverTransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 800cf88:	b580      	push	{r7, lr}
 800cf8a:	b082      	sub	sp, #8
 800cf8c:	af00      	add	r7, sp, #0
 800cf8e:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800cf90:	687b      	ldr	r3, [r7, #4]
 800cf92:	4618      	mov	r0, r3
 800cf94:	f001 f866 	bl	800e064 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800cf98:	bf00      	nop
 800cf9a:	3708      	adds	r7, #8
 800cf9c:	46bd      	mov	sp, r7
 800cf9e:	bd80      	pop	{r7, pc}

0800cfa0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800cfa0:	b580      	push	{r7, lr}
 800cfa2:	b082      	sub	sp, #8
 800cfa4:	af00      	add	r7, sp, #0
 800cfa6:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800cfa8:	687b      	ldr	r3, [r7, #4]
 800cfaa:	4618      	mov	r0, r3
 800cfac:	f001 f8d8 	bl	800e160 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800cfb0:	4603      	mov	r3, r0
}
 800cfb2:	4618      	mov	r0, r3
 800cfb4:	3708      	adds	r7, #8
 800cfb6:	46bd      	mov	sp, r7
 800cfb8:	bd80      	pop	{r7, pc}

0800cfba <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800cfba:	b580      	push	{r7, lr}
 800cfbc:	b082      	sub	sp, #8
 800cfbe:	af00      	add	r7, sp, #0
 800cfc0:	6078      	str	r0, [r7, #4]
 800cfc2:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800cfc4:	687b      	ldr	r3, [r7, #4]
 800cfc6:	6839      	ldr	r1, [r7, #0]
 800cfc8:	4618      	mov	r0, r3
 800cfca:	f001 f8d4 	bl	800e176 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800cfce:	bf00      	nop
 800cfd0:	3708      	adds	r7, #8
 800cfd2:	46bd      	mov	sp, r7
 800cfd4:	bd80      	pop	{r7, pc}

0800cfd6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800cfd6:	b580      	push	{r7, lr}
 800cfd8:	b082      	sub	sp, #8
 800cfda:	af00      	add	r7, sp, #0
 800cfdc:	6078      	str	r0, [r7, #4]
 800cfde:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800cfe0:	687b      	ldr	r3, [r7, #4]
 800cfe2:	6839      	ldr	r1, [r7, #0]
 800cfe4:	4618      	mov	r0, r3
 800cfe6:	f001 f8d1 	bl	800e18c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800cfea:	bf00      	nop
 800cfec:	3708      	adds	r7, #8
 800cfee:	46bd      	mov	sp, r7
 800cff0:	bd80      	pop	{r7, pc}

0800cff2 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800cff2:	b580      	push	{r7, lr}
 800cff4:	b084      	sub	sp, #16
 800cff6:	af00      	add	r7, sp, #0
 800cff8:	60f8      	str	r0, [r7, #12]
 800cffa:	60b9      	str	r1, [r7, #8]
 800cffc:	607a      	str	r2, [r7, #4]
 800cffe:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800d000:	68f8      	ldr	r0, [r7, #12]
 800d002:	683b      	ldr	r3, [r7, #0]
 800d004:	687a      	ldr	r2, [r7, #4]
 800d006:	68b9      	ldr	r1, [r7, #8]
 800d008:	f001 f903 	bl	800e212 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800d00c:	4603      	mov	r3, r0
}
 800d00e:	4618      	mov	r0, r3
 800d010:	3710      	adds	r7, #16
 800d012:	46bd      	mov	sp, r7
 800d014:	bd80      	pop	{r7, pc}

0800d016 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800d016:	b580      	push	{r7, lr}
 800d018:	b082      	sub	sp, #8
 800d01a:	af00      	add	r7, sp, #0
 800d01c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800d01e:	687b      	ldr	r3, [r7, #4]
 800d020:	4618      	mov	r0, r3
 800d022:	f001 f84f 	bl	800e0c4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800d026:	bf00      	nop
 800d028:	3708      	adds	r7, #8
 800d02a:	46bd      	mov	sp, r7
 800d02c:	bd80      	pop	{r7, pc}

0800d02e <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800d02e:	b580      	push	{r7, lr}
 800d030:	b082      	sub	sp, #8
 800d032:	af00      	add	r7, sp, #0
 800d034:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800d036:	687b      	ldr	r3, [r7, #4]
 800d038:	4618      	mov	r0, r3
 800d03a:	f001 f84d 	bl	800e0d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800d03e:	bf00      	nop
 800d040:	3708      	adds	r7, #8
 800d042:	46bd      	mov	sp, r7
 800d044:	bd80      	pop	{r7, pc}

0800d046 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800d046:	b580      	push	{r7, lr}
 800d048:	b082      	sub	sp, #8
 800d04a:	af00      	add	r7, sp, #0
 800d04c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800d04e:	687b      	ldr	r3, [r7, #4]
 800d050:	4618      	mov	r0, r3
 800d052:	f001 f84b 	bl	800e0ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800d056:	bf00      	nop
 800d058:	3708      	adds	r7, #8
 800d05a:	46bd      	mov	sp, r7
 800d05c:	bd80      	pop	{r7, pc}

0800d05e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800d05e:	b580      	push	{r7, lr}
 800d060:	b082      	sub	sp, #8
 800d062:	af00      	add	r7, sp, #0
 800d064:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800d066:	687b      	ldr	r3, [r7, #4]
 800d068:	4618      	mov	r0, r3
 800d06a:	f001 f849 	bl	800e100 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800d06e:	bf00      	nop
 800d070:	3708      	adds	r7, #8
 800d072:	46bd      	mov	sp, r7
 800d074:	bd80      	pop	{r7, pc}

0800d076 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 800d076:	b580      	push	{r7, lr}
 800d078:	b082      	sub	sp, #8
 800d07a:	af00      	add	r7, sp, #0
 800d07c:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 800d07e:	687b      	ldr	r3, [r7, #4]
 800d080:	4618      	mov	r0, r3
 800d082:	f001 f847 	bl	800e114 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800d086:	4603      	mov	r3, r0
}
 800d088:	4618      	mov	r0, r3
 800d08a:	3708      	adds	r7, #8
 800d08c:	46bd      	mov	sp, r7
 800d08e:	bd80      	pop	{r7, pc}

0800d090 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 800d090:	b580      	push	{r7, lr}
 800d092:	b082      	sub	sp, #8
 800d094:	af00      	add	r7, sp, #0
 800d096:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 800d098:	687b      	ldr	r3, [r7, #4]
 800d09a:	4618      	mov	r0, r3
 800d09c:	f001 f847 	bl	800e12e <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 800d0a0:	bf00      	nop
 800d0a2:	3708      	adds	r7, #8
 800d0a4:	46bd      	mov	sp, r7
 800d0a6:	bd80      	pop	{r7, pc}

0800d0a8 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800d0a8:	b580      	push	{r7, lr}
 800d0aa:	b082      	sub	sp, #8
 800d0ac:	af00      	add	r7, sp, #0
 800d0ae:	6078      	str	r0, [r7, #4]
 800d0b0:	4a05      	ldr	r2, [pc, #20]	; (800d0c8 <_ZN11TouchGFXHALD1Ev+0x20>)
 800d0b2:	687b      	ldr	r3, [r7, #4]
 800d0b4:	601a      	str	r2, [r3, #0]
 800d0b6:	687b      	ldr	r3, [r7, #4]
 800d0b8:	4618      	mov	r0, r3
 800d0ba:	f7ff ff37 	bl	800cf2c <_ZN20TouchGFXGeneratedHALD1Ev>
 800d0be:	687b      	ldr	r3, [r7, #4]
 800d0c0:	4618      	mov	r0, r3
 800d0c2:	3708      	adds	r7, #8
 800d0c4:	46bd      	mov	sp, r7
 800d0c6:	bd80      	pop	{r7, pc}
 800d0c8:	08025ba4 	.word	0x08025ba4

0800d0cc <_ZN11TouchGFXHALD0Ev>:
 800d0cc:	b580      	push	{r7, lr}
 800d0ce:	b082      	sub	sp, #8
 800d0d0:	af00      	add	r7, sp, #0
 800d0d2:	6078      	str	r0, [r7, #4]
 800d0d4:	6878      	ldr	r0, [r7, #4]
 800d0d6:	f7ff ffe7 	bl	800d0a8 <_ZN11TouchGFXHALD1Ev>
 800d0da:	217c      	movs	r1, #124	; 0x7c
 800d0dc:	6878      	ldr	r0, [r7, #4]
 800d0de:	f015 fba0 	bl	8022822 <_ZdlPvj>
 800d0e2:	687b      	ldr	r3, [r7, #4]
 800d0e4:	4618      	mov	r0, r3
 800d0e6:	3708      	adds	r7, #8
 800d0e8:	46bd      	mov	sp, r7
 800d0ea:	bd80      	pop	{r7, pc}

0800d0ec <touchgfxDisplayDriverTransmitActive>:
extern void DisplayDriver_TransferCompleteCallback();

static uint8_t isTransmittingData = 0;

uint32_t touchgfxDisplayDriverTransmitActive(void)
{
 800d0ec:	b480      	push	{r7}
 800d0ee:	af00      	add	r7, sp, #0
	return isTransmittingData;
 800d0f0:	4b03      	ldr	r3, [pc, #12]	; (800d100 <touchgfxDisplayDriverTransmitActive+0x14>)
 800d0f2:	781b      	ldrb	r3, [r3, #0]
}
 800d0f4:	4618      	mov	r0, r3
 800d0f6:	46bd      	mov	sp, r7
 800d0f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d0fc:	4770      	bx	lr
 800d0fe:	bf00      	nop
 800d100:	2002fe0c 	.word	0x2002fe0c

0800d104 <touchgfxDisplayDriverTransmitBlock>:

void touchgfxDisplayDriverTransmitBlock(uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h)
{
 800d104:	b590      	push	{r4, r7, lr}
 800d106:	b085      	sub	sp, #20
 800d108:	af00      	add	r7, sp, #0
 800d10a:	60f8      	str	r0, [r7, #12]
 800d10c:	4608      	mov	r0, r1
 800d10e:	4611      	mov	r1, r2
 800d110:	461a      	mov	r2, r3
 800d112:	4603      	mov	r3, r0
 800d114:	817b      	strh	r3, [r7, #10]
 800d116:	460b      	mov	r3, r1
 800d118:	813b      	strh	r3, [r7, #8]
 800d11a:	4613      	mov	r3, r2
 800d11c:	80fb      	strh	r3, [r7, #6]
	isTransmittingData = 1;
 800d11e:	4b0f      	ldr	r3, [pc, #60]	; (800d15c <touchgfxDisplayDriverTransmitBlock+0x58>)
 800d120:	2201      	movs	r2, #1
 800d122:	701a      	strb	r2, [r3, #0]
	ILI9341_SetWindow(x, y, x+w-1, y+h-1);
 800d124:	897a      	ldrh	r2, [r7, #10]
 800d126:	88fb      	ldrh	r3, [r7, #6]
 800d128:	4413      	add	r3, r2
 800d12a:	b29b      	uxth	r3, r3
 800d12c:	3b01      	subs	r3, #1
 800d12e:	b29c      	uxth	r4, r3
 800d130:	893a      	ldrh	r2, [r7, #8]
 800d132:	8c3b      	ldrh	r3, [r7, #32]
 800d134:	4413      	add	r3, r2
 800d136:	b29b      	uxth	r3, r3
 800d138:	3b01      	subs	r3, #1
 800d13a:	b29b      	uxth	r3, r3
 800d13c:	8939      	ldrh	r1, [r7, #8]
 800d13e:	8978      	ldrh	r0, [r7, #10]
 800d140:	4622      	mov	r2, r4
 800d142:	f7fb fc6c 	bl	8008a1e <ILI9341_SetWindow>
	ILI9341_DrawBitmap(w, h, pixels);
 800d146:	8c39      	ldrh	r1, [r7, #32]
 800d148:	88fb      	ldrh	r3, [r7, #6]
 800d14a:	68fa      	ldr	r2, [r7, #12]
 800d14c:	4618      	mov	r0, r3
 800d14e:	f7fb fcd1 	bl	8008af4 <ILI9341_DrawBitmap>
}
 800d152:	bf00      	nop
 800d154:	3714      	adds	r7, #20
 800d156:	46bd      	mov	sp, r7
 800d158:	bd90      	pop	{r4, r7, pc}
 800d15a:	bf00      	nop
 800d15c:	2002fe0c 	.word	0x2002fe0c

0800d160 <HAL_SPI_TxCpltCallback>:

void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
{
 800d160:	b580      	push	{r7, lr}
 800d162:	b082      	sub	sp, #8
 800d164:	af00      	add	r7, sp, #0
 800d166:	6078      	str	r0, [r7, #4]
	if (hspi->Instance == SPI5) {
 800d168:	687b      	ldr	r3, [r7, #4]
 800d16a:	681b      	ldr	r3, [r3, #0]
 800d16c:	4a06      	ldr	r2, [pc, #24]	; (800d188 <HAL_SPI_TxCpltCallback+0x28>)
 800d16e:	4293      	cmp	r3, r2
 800d170:	d106      	bne.n	800d180 <HAL_SPI_TxCpltCallback+0x20>
		ILI9341_EndOfDrawBitmap();
 800d172:	f7fb fced 	bl	8008b50 <ILI9341_EndOfDrawBitmap>
		isTransmittingData = 0;
 800d176:	4b05      	ldr	r3, [pc, #20]	; (800d18c <HAL_SPI_TxCpltCallback+0x2c>)
 800d178:	2200      	movs	r2, #0
 800d17a:	701a      	strb	r2, [r3, #0]
		DisplayDriver_TransferCompleteCallback();
 800d17c:	f001 f8d5 	bl	800e32a <DisplayDriver_TransferCompleteCallback>
	}
}
 800d180:	bf00      	nop
 800d182:	3708      	adds	r7, #8
 800d184:	46bd      	mov	sp, r7
 800d186:	bd80      	pop	{r7, pc}
 800d188:	40015000 	.word	0x40015000
 800d18c:	2002fe0c 	.word	0x2002fe0c

0800d190 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800d190:	b480      	push	{r7}
 800d192:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800d194:	4b05      	ldr	r3, [pc, #20]	; (800d1ac <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800d196:	2200      	movs	r2, #0
 800d198:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800d19a:	4b05      	ldr	r3, [pc, #20]	; (800d1b0 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800d19c:	2200      	movs	r2, #0
 800d19e:	601a      	str	r2, [r3, #0]
}
 800d1a0:	bf00      	nop
 800d1a2:	46bd      	mov	sp, r7
 800d1a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1a8:	4770      	bx	lr
 800d1aa:	bf00      	nop
 800d1ac:	2002fe10 	.word	0x2002fe10
 800d1b0:	2002fe14 	.word	0x2002fe14

0800d1b4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800d1b4:	b480      	push	{r7}
 800d1b6:	af00      	add	r7, sp, #0
    while (fb_sem);
 800d1b8:	bf00      	nop
 800d1ba:	4b08      	ldr	r3, [pc, #32]	; (800d1dc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800d1bc:	681b      	ldr	r3, [r3, #0]
 800d1be:	2b00      	cmp	r3, #0
 800d1c0:	bf14      	ite	ne
 800d1c2:	2301      	movne	r3, #1
 800d1c4:	2300      	moveq	r3, #0
 800d1c6:	b2db      	uxtb	r3, r3
 800d1c8:	2b00      	cmp	r3, #0
 800d1ca:	d1f6      	bne.n	800d1ba <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800d1cc:	4b03      	ldr	r3, [pc, #12]	; (800d1dc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800d1ce:	2201      	movs	r2, #1
 800d1d0:	601a      	str	r2, [r3, #0]
}
 800d1d2:	bf00      	nop
 800d1d4:	46bd      	mov	sp, r7
 800d1d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1da:	4770      	bx	lr
 800d1dc:	2002fe10 	.word	0x2002fe10

0800d1e0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800d1e0:	b480      	push	{r7}
 800d1e2:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800d1e4:	4b03      	ldr	r3, [pc, #12]	; (800d1f4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800d1e6:	2200      	movs	r2, #0
 800d1e8:	601a      	str	r2, [r3, #0]
}
 800d1ea:	bf00      	nop
 800d1ec:	46bd      	mov	sp, r7
 800d1ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1f2:	4770      	bx	lr
 800d1f4:	2002fe10 	.word	0x2002fe10

0800d1f8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800d1f8:	b480      	push	{r7}
 800d1fa:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800d1fc:	4b03      	ldr	r3, [pc, #12]	; (800d20c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800d1fe:	2201      	movs	r2, #1
 800d200:	601a      	str	r2, [r3, #0]
}
 800d202:	bf00      	nop
 800d204:	46bd      	mov	sp, r7
 800d206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d20a:	4770      	bx	lr
 800d20c:	2002fe10 	.word	0x2002fe10

0800d210 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800d210:	b480      	push	{r7}
 800d212:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800d214:	4b03      	ldr	r3, [pc, #12]	; (800d224 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800d216:	2200      	movs	r2, #0
 800d218:	601a      	str	r2, [r3, #0]
}
 800d21a:	bf00      	nop
 800d21c:	46bd      	mov	sp, r7
 800d21e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d222:	4770      	bx	lr
 800d224:	2002fe10 	.word	0x2002fe10

0800d228 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800d228:	b480      	push	{r7}
 800d22a:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800d22c:	4b03      	ldr	r3, [pc, #12]	; (800d23c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800d22e:	2201      	movs	r2, #1
 800d230:	601a      	str	r2, [r3, #0]
}
 800d232:	bf00      	nop
 800d234:	46bd      	mov	sp, r7
 800d236:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d23a:	4770      	bx	lr
 800d23c:	2002fe14 	.word	0x2002fe14

0800d240 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800d240:	b480      	push	{r7}
 800d242:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800d244:	4b03      	ldr	r3, [pc, #12]	; (800d254 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800d246:	2200      	movs	r2, #0
 800d248:	601a      	str	r2, [r3, #0]
}
 800d24a:	bf00      	nop
 800d24c:	46bd      	mov	sp, r7
 800d24e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d252:	4770      	bx	lr
 800d254:	2002fe14 	.word	0x2002fe14

0800d258 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800d258:	b480      	push	{r7}
 800d25a:	af00      	add	r7, sp, #0
    return vsync_sem;
 800d25c:	4b05      	ldr	r3, [pc, #20]	; (800d274 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800d25e:	681b      	ldr	r3, [r3, #0]
 800d260:	2b00      	cmp	r3, #0
 800d262:	bf14      	ite	ne
 800d264:	2301      	movne	r3, #1
 800d266:	2300      	moveq	r3, #0
 800d268:	b2db      	uxtb	r3, r3
}
 800d26a:	4618      	mov	r0, r3
 800d26c:	46bd      	mov	sp, r7
 800d26e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d272:	4770      	bx	lr
 800d274:	2002fe14 	.word	0x2002fe14

0800d278 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800d278:	b580      	push	{r7, lr}
 800d27a:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800d27c:	4b0a      	ldr	r3, [pc, #40]	; (800d2a8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800d27e:	681b      	ldr	r3, [r3, #0]
 800d280:	2b00      	cmp	r3, #0
 800d282:	bf14      	ite	ne
 800d284:	2301      	movne	r3, #1
 800d286:	2300      	moveq	r3, #0
 800d288:	b2db      	uxtb	r3, r3
 800d28a:	2b00      	cmp	r3, #0
 800d28c:	d00a      	beq.n	800d2a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800d28e:	4b06      	ldr	r3, [pc, #24]	; (800d2a8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800d290:	2200      	movs	r2, #0
 800d292:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800d294:	f7fc f9ac 	bl	80095f0 <_ZN8touchgfx3HAL11getInstanceEv>
 800d298:	4603      	mov	r3, r0
 800d29a:	681a      	ldr	r2, [r3, #0]
 800d29c:	3270      	adds	r2, #112	; 0x70
 800d29e:	6812      	ldr	r2, [r2, #0]
 800d2a0:	4618      	mov	r0, r3
 800d2a2:	4790      	blx	r2
    }
}
 800d2a4:	bf00      	nop
 800d2a6:	bd80      	pop	{r7, pc}
 800d2a8:	2002fe14 	.word	0x2002fe14

0800d2ac <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 800d2ac:	b480      	push	{r7}
 800d2ae:	b083      	sub	sp, #12
 800d2b0:	af00      	add	r7, sp, #0
 800d2b2:	6078      	str	r0, [r7, #4]
        : color(0)
 800d2b4:	687b      	ldr	r3, [r7, #4]
 800d2b6:	2200      	movs	r2, #0
 800d2b8:	601a      	str	r2, [r3, #0]
    }
 800d2ba:	687b      	ldr	r3, [r7, #4]
 800d2bc:	4618      	mov	r0, r3
 800d2be:	370c      	adds	r7, #12
 800d2c0:	46bd      	mov	sp, r7
 800d2c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2c6:	4770      	bx	lr

0800d2c8 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 800d2c8:	b480      	push	{r7}
 800d2ca:	b083      	sub	sp, #12
 800d2cc:	af00      	add	r7, sp, #0
 800d2ce:	6078      	str	r0, [r7, #4]
    {
 800d2d0:	4a04      	ldr	r2, [pc, #16]	; (800d2e4 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800d2d2:	687b      	ldr	r3, [r7, #4]
 800d2d4:	601a      	str	r2, [r3, #0]
    }
 800d2d6:	687b      	ldr	r3, [r7, #4]
 800d2d8:	4618      	mov	r0, r3
 800d2da:	370c      	adds	r7, #12
 800d2dc:	46bd      	mov	sp, r7
 800d2de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2e2:	4770      	bx	lr
 800d2e4:	08025ccc 	.word	0x08025ccc

0800d2e8 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800d2e8:	b580      	push	{r7, lr}
 800d2ea:	b082      	sub	sp, #8
 800d2ec:	af00      	add	r7, sp, #0
 800d2ee:	6078      	str	r0, [r7, #4]
    }
 800d2f0:	6878      	ldr	r0, [r7, #4]
 800d2f2:	f7ff ffe9 	bl	800d2c8 <_ZN8touchgfx9DMA_QueueD1Ev>
 800d2f6:	2104      	movs	r1, #4
 800d2f8:	6878      	ldr	r0, [r7, #4]
 800d2fa:	f015 fa92 	bl	8022822 <_ZdlPvj>
 800d2fe:	687b      	ldr	r3, [r7, #4]
 800d300:	4618      	mov	r0, r3
 800d302:	3708      	adds	r7, #8
 800d304:	46bd      	mov	sp, r7
 800d306:	bd80      	pop	{r7, pc}

0800d308 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 800d308:	b480      	push	{r7}
 800d30a:	b083      	sub	sp, #12
 800d30c:	af00      	add	r7, sp, #0
 800d30e:	6078      	str	r0, [r7, #4]
    {
    }
 800d310:	bf00      	nop
 800d312:	370c      	adds	r7, #12
 800d314:	46bd      	mov	sp, r7
 800d316:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d31a:	4770      	bx	lr

0800d31c <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 800d31c:	b480      	push	{r7}
 800d31e:	b083      	sub	sp, #12
 800d320:	af00      	add	r7, sp, #0
 800d322:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 800d324:	2300      	movs	r3, #0
    }
 800d326:	4618      	mov	r0, r3
 800d328:	370c      	adds	r7, #12
 800d32a:	46bd      	mov	sp, r7
 800d32c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d330:	4770      	bx	lr
	...

0800d334 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 800d334:	b480      	push	{r7}
 800d336:	b083      	sub	sp, #12
 800d338:	af00      	add	r7, sp, #0
 800d33a:	6078      	str	r0, [r7, #4]
    {
 800d33c:	4a04      	ldr	r2, [pc, #16]	; (800d350 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800d33e:	687b      	ldr	r3, [r7, #4]
 800d340:	601a      	str	r2, [r3, #0]
    }
 800d342:	687b      	ldr	r3, [r7, #4]
 800d344:	4618      	mov	r0, r3
 800d346:	370c      	adds	r7, #12
 800d348:	46bd      	mov	sp, r7
 800d34a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d34e:	4770      	bx	lr
 800d350:	0802609c 	.word	0x0802609c

0800d354 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800d354:	b580      	push	{r7, lr}
 800d356:	b082      	sub	sp, #8
 800d358:	af00      	add	r7, sp, #0
 800d35a:	6078      	str	r0, [r7, #4]
    }
 800d35c:	6878      	ldr	r0, [r7, #4]
 800d35e:	f7ff ffe9 	bl	800d334 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800d362:	210c      	movs	r1, #12
 800d364:	6878      	ldr	r0, [r7, #4]
 800d366:	f015 fa5c 	bl	8022822 <_ZdlPvj>
 800d36a:	687b      	ldr	r3, [r7, #4]
 800d36c:	4618      	mov	r0, r3
 800d36e:	3708      	adds	r7, #8
 800d370:	46bd      	mov	sp, r7
 800d372:	bd80      	pop	{r7, pc}

0800d374 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800d374:	b480      	push	{r7}
 800d376:	b083      	sub	sp, #12
 800d378:	af00      	add	r7, sp, #0
 800d37a:	6078      	str	r0, [r7, #4]
 800d37c:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800d37e:	4a09      	ldr	r2, [pc, #36]	; (800d3a4 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800d380:	687b      	ldr	r3, [r7, #4]
 800d382:	601a      	str	r2, [r3, #0]
 800d384:	687b      	ldr	r3, [r7, #4]
 800d386:	683a      	ldr	r2, [r7, #0]
 800d388:	605a      	str	r2, [r3, #4]
 800d38a:	687b      	ldr	r3, [r7, #4]
 800d38c:	2200      	movs	r2, #0
 800d38e:	721a      	strb	r2, [r3, #8]
 800d390:	687b      	ldr	r3, [r7, #4]
 800d392:	2200      	movs	r2, #0
 800d394:	725a      	strb	r2, [r3, #9]
    {
    }
 800d396:	687b      	ldr	r3, [r7, #4]
 800d398:	4618      	mov	r0, r3
 800d39a:	370c      	adds	r7, #12
 800d39c:	46bd      	mov	sp, r7
 800d39e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3a2:	4770      	bx	lr
 800d3a4:	0802609c 	.word	0x0802609c

0800d3a8 <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 800d3a8:	b480      	push	{r7}
 800d3aa:	b083      	sub	sp, #12
 800d3ac:	af00      	add	r7, sp, #0
 800d3ae:	6078      	str	r0, [r7, #4]
    {
    }
 800d3b0:	bf00      	nop
 800d3b2:	370c      	adds	r7, #12
 800d3b4:	46bd      	mov	sp, r7
 800d3b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3ba:	4770      	bx	lr

0800d3bc <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 800d3bc:	b480      	push	{r7}
 800d3be:	b083      	sub	sp, #12
 800d3c0:	af00      	add	r7, sp, #0
 800d3c2:	6078      	str	r0, [r7, #4]
    {
    }
 800d3c4:	bf00      	nop
 800d3c6:	370c      	adds	r7, #12
 800d3c8:	46bd      	mov	sp, r7
 800d3ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3ce:	4770      	bx	lr

0800d3d0 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 800d3d0:	b580      	push	{r7, lr}
 800d3d2:	b082      	sub	sp, #8
 800d3d4:	af00      	add	r7, sp, #0
 800d3d6:	6078      	str	r0, [r7, #4]
 800d3d8:	687b      	ldr	r3, [r7, #4]
 800d3da:	330c      	adds	r3, #12
 800d3dc:	4618      	mov	r0, r3
 800d3de:	f7ff ff65 	bl	800d2ac <_ZN8touchgfx9colortypeC1Ev>
 800d3e2:	687b      	ldr	r3, [r7, #4]
 800d3e4:	4618      	mov	r0, r3
 800d3e6:	3708      	adds	r7, #8
 800d3e8:	46bd      	mov	sp, r7
 800d3ea:	bd80      	pop	{r7, pc}

0800d3ec <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 800d3ec:	b580      	push	{r7, lr}
 800d3ee:	b082      	sub	sp, #8
 800d3f0:	af00      	add	r7, sp, #0
 800d3f2:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 800d3f4:	687a      	ldr	r2, [r7, #4]
 800d3f6:	687b      	ldr	r3, [r7, #4]
 800d3f8:	330c      	adds	r3, #12
 800d3fa:	4619      	mov	r1, r3
 800d3fc:	4610      	mov	r0, r2
 800d3fe:	f7ff ffb9 	bl	800d374 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800d402:	4a0b      	ldr	r2, [pc, #44]	; (800d430 <_ZN8STM32DMAC1Ev+0x44>)
 800d404:	687b      	ldr	r3, [r7, #4]
 800d406:	601a      	str	r2, [r3, #0]
 800d408:	687b      	ldr	r3, [r7, #4]
 800d40a:	f103 000c 	add.w	r0, r3, #12
 800d40e:	687b      	ldr	r3, [r7, #4]
 800d410:	3320      	adds	r3, #32
 800d412:	2201      	movs	r2, #1
 800d414:	4619      	mov	r1, r3
 800d416:	f002 fbbf 	bl	800fb98 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800d41a:	687b      	ldr	r3, [r7, #4]
 800d41c:	3320      	adds	r3, #32
 800d41e:	4618      	mov	r0, r3
 800d420:	f7ff ffd6 	bl	800d3d0 <_ZN8touchgfx6BlitOpC1Ev>
{
}
 800d424:	687b      	ldr	r3, [r7, #4]
 800d426:	4618      	mov	r0, r3
 800d428:	3708      	adds	r7, #8
 800d42a:	46bd      	mov	sp, r7
 800d42c:	bd80      	pop	{r7, pc}
 800d42e:	bf00      	nop
 800d430:	08025c7c 	.word	0x08025c7c

0800d434 <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 800d434:	b480      	push	{r7}
 800d436:	b083      	sub	sp, #12
 800d438:	af00      	add	r7, sp, #0
 800d43a:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 800d43c:	2300      	movs	r3, #0
}
 800d43e:	4618      	mov	r0, r3
 800d440:	370c      	adds	r7, #12
 800d442:	46bd      	mov	sp, r7
 800d444:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d448:	4770      	bx	lr
	...

0800d44c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 800d44c:	b580      	push	{r7, lr}
 800d44e:	b082      	sub	sp, #8
 800d450:	af00      	add	r7, sp, #0
 800d452:	6078      	str	r0, [r7, #4]
 800d454:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 800d456:	4b03      	ldr	r3, [pc, #12]	; (800d464 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800d458:	4a03      	ldr	r2, [pc, #12]	; (800d468 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 800d45a:	2122      	movs	r1, #34	; 0x22
 800d45c:	4803      	ldr	r0, [pc, #12]	; (800d46c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 800d45e:	f015 ff6b 	bl	8023338 <__assert_func>
 800d462:	bf00      	nop
 800d464:	08024d5c 	.word	0x08024d5c
 800d468:	08024d80 	.word	0x08024d80
 800d46c:	08024dc0 	.word	0x08024dc0

0800d470 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 800d470:	b580      	push	{r7, lr}
 800d472:	b082      	sub	sp, #8
 800d474:	af00      	add	r7, sp, #0
 800d476:	6078      	str	r0, [r7, #4]
 800d478:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 800d47a:	4b03      	ldr	r3, [pc, #12]	; (800d488 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800d47c:	4a03      	ldr	r2, [pc, #12]	; (800d48c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 800d47e:	2127      	movs	r1, #39	; 0x27
 800d480:	4803      	ldr	r0, [pc, #12]	; (800d490 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 800d482:	f015 ff59 	bl	8023338 <__assert_func>
 800d486:	bf00      	nop
 800d488:	08024d5c 	.word	0x08024d5c
 800d48c:	08024dec 	.word	0x08024dec
 800d490:	08024dc0 	.word	0x08024dc0

0800d494 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 800d494:	b580      	push	{r7, lr}
 800d496:	b082      	sub	sp, #8
 800d498:	af00      	add	r7, sp, #0
 800d49a:	6078      	str	r0, [r7, #4]
 800d49c:	4a08      	ldr	r2, [pc, #32]	; (800d4c0 <_ZN8STM32DMAD1Ev+0x2c>)
 800d49e:	687b      	ldr	r3, [r7, #4]
 800d4a0:	601a      	str	r2, [r3, #0]
 800d4a2:	687b      	ldr	r3, [r7, #4]
 800d4a4:	330c      	adds	r3, #12
 800d4a6:	4618      	mov	r0, r3
 800d4a8:	f000 f81c 	bl	800d4e4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800d4ac:	687b      	ldr	r3, [r7, #4]
 800d4ae:	4618      	mov	r0, r3
 800d4b0:	f7ff ff40 	bl	800d334 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800d4b4:	687b      	ldr	r3, [r7, #4]
 800d4b6:	4618      	mov	r0, r3
 800d4b8:	3708      	adds	r7, #8
 800d4ba:	46bd      	mov	sp, r7
 800d4bc:	bd80      	pop	{r7, pc}
 800d4be:	bf00      	nop
 800d4c0:	08025c7c 	.word	0x08025c7c

0800d4c4 <_ZN8STM32DMAD0Ev>:
 800d4c4:	b580      	push	{r7, lr}
 800d4c6:	b082      	sub	sp, #8
 800d4c8:	af00      	add	r7, sp, #0
 800d4ca:	6078      	str	r0, [r7, #4]
 800d4cc:	6878      	ldr	r0, [r7, #4]
 800d4ce:	f7ff ffe1 	bl	800d494 <_ZN8STM32DMAD1Ev>
 800d4d2:	2144      	movs	r1, #68	; 0x44
 800d4d4:	6878      	ldr	r0, [r7, #4]
 800d4d6:	f015 f9a4 	bl	8022822 <_ZdlPvj>
 800d4da:	687b      	ldr	r3, [r7, #4]
 800d4dc:	4618      	mov	r0, r3
 800d4de:	3708      	adds	r7, #8
 800d4e0:	46bd      	mov	sp, r7
 800d4e2:	bd80      	pop	{r7, pc}

0800d4e4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800d4e4:	b580      	push	{r7, lr}
 800d4e6:	b082      	sub	sp, #8
 800d4e8:	af00      	add	r7, sp, #0
 800d4ea:	6078      	str	r0, [r7, #4]
 800d4ec:	4a05      	ldr	r2, [pc, #20]	; (800d504 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800d4ee:	687b      	ldr	r3, [r7, #4]
 800d4f0:	601a      	str	r2, [r3, #0]
 800d4f2:	687b      	ldr	r3, [r7, #4]
 800d4f4:	4618      	mov	r0, r3
 800d4f6:	f7ff fee7 	bl	800d2c8 <_ZN8touchgfx9DMA_QueueD1Ev>
 800d4fa:	687b      	ldr	r3, [r7, #4]
 800d4fc:	4618      	mov	r0, r3
 800d4fe:	3708      	adds	r7, #8
 800d500:	46bd      	mov	sp, r7
 800d502:	bd80      	pop	{r7, pc}
 800d504:	080260ec 	.word	0x080260ec

0800d508 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800d508:	b580      	push	{r7, lr}
 800d50a:	b082      	sub	sp, #8
 800d50c:	af00      	add	r7, sp, #0
 800d50e:	6078      	str	r0, [r7, #4]
 800d510:	6878      	ldr	r0, [r7, #4]
 800d512:	f7ff ffe7 	bl	800d4e4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800d516:	2114      	movs	r1, #20
 800d518:	6878      	ldr	r0, [r7, #4]
 800d51a:	f015 f982 	bl	8022822 <_ZdlPvj>
 800d51e:	687b      	ldr	r3, [r7, #4]
 800d520:	4618      	mov	r0, r3
 800d522:	3708      	adds	r7, #8
 800d524:	46bd      	mov	sp, r7
 800d526:	bd80      	pop	{r7, pc}

0800d528 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800d528:	b480      	push	{r7}
 800d52a:	b083      	sub	sp, #12
 800d52c:	af00      	add	r7, sp, #0
 800d52e:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800d530:	4a04      	ldr	r2, [pc, #16]	; (800d544 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800d532:	687b      	ldr	r3, [r7, #4]
 800d534:	6013      	str	r3, [r2, #0]
    }
 800d536:	bf00      	nop
 800d538:	370c      	adds	r7, #12
 800d53a:	46bd      	mov	sp, r7
 800d53c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d540:	4770      	bx	lr
 800d542:	bf00      	nop
 800d544:	20032488 	.word	0x20032488

0800d548 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800d548:	b480      	push	{r7}
 800d54a:	b085      	sub	sp, #20
 800d54c:	af00      	add	r7, sp, #0
 800d54e:	60f8      	str	r0, [r7, #12]
 800d550:	60b9      	str	r1, [r7, #8]
 800d552:	607a      	str	r2, [r7, #4]
 800d554:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800d556:	4a0b      	ldr	r2, [pc, #44]	; (800d584 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800d558:	68fb      	ldr	r3, [r7, #12]
 800d55a:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800d55c:	68fb      	ldr	r3, [r7, #12]
 800d55e:	68ba      	ldr	r2, [r7, #8]
 800d560:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800d562:	68fb      	ldr	r3, [r7, #12]
 800d564:	687a      	ldr	r2, [r7, #4]
 800d566:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800d568:	68fb      	ldr	r3, [r7, #12]
 800d56a:	683a      	ldr	r2, [r7, #0]
 800d56c:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800d56e:	68fb      	ldr	r3, [r7, #12]
 800d570:	69ba      	ldr	r2, [r7, #24]
 800d572:	611a      	str	r2, [r3, #16]
    {
    }
 800d574:	68fb      	ldr	r3, [r7, #12]
 800d576:	4618      	mov	r0, r3
 800d578:	3714      	adds	r7, #20
 800d57a:	46bd      	mov	sp, r7
 800d57c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d580:	4770      	bx	lr
 800d582:	bf00      	nop
 800d584:	08025db4 	.word	0x08025db4

0800d588 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800d588:	b480      	push	{r7}
 800d58a:	b083      	sub	sp, #12
 800d58c:	af00      	add	r7, sp, #0
 800d58e:	6078      	str	r0, [r7, #4]
    {
 800d590:	4a04      	ldr	r2, [pc, #16]	; (800d5a4 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800d592:	687b      	ldr	r3, [r7, #4]
 800d594:	601a      	str	r2, [r3, #0]
    }
 800d596:	687b      	ldr	r3, [r7, #4]
 800d598:	4618      	mov	r0, r3
 800d59a:	370c      	adds	r7, #12
 800d59c:	46bd      	mov	sp, r7
 800d59e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5a2:	4770      	bx	lr
 800d5a4:	08025db4 	.word	0x08025db4

0800d5a8 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800d5a8:	b580      	push	{r7, lr}
 800d5aa:	b082      	sub	sp, #8
 800d5ac:	af00      	add	r7, sp, #0
 800d5ae:	6078      	str	r0, [r7, #4]
    }
 800d5b0:	6878      	ldr	r0, [r7, #4]
 800d5b2:	f7ff ffe9 	bl	800d588 <_ZN8touchgfx7MVPHeapD1Ev>
 800d5b6:	2114      	movs	r1, #20
 800d5b8:	6878      	ldr	r0, [r7, #4]
 800d5ba:	f015 f932 	bl	8022822 <_ZdlPvj>
 800d5be:	687b      	ldr	r3, [r7, #4]
 800d5c0:	4618      	mov	r0, r3
 800d5c2:	3708      	adds	r7, #8
 800d5c4:	46bd      	mov	sp, r7
 800d5c6:	bd80      	pop	{r7, pc}

0800d5c8 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800d5c8:	b480      	push	{r7}
 800d5ca:	b083      	sub	sp, #12
 800d5cc:	af00      	add	r7, sp, #0
 800d5ce:	6078      	str	r0, [r7, #4]
    {
 800d5d0:	4a04      	ldr	r2, [pc, #16]	; (800d5e4 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800d5d2:	687b      	ldr	r3, [r7, #4]
 800d5d4:	601a      	str	r2, [r3, #0]
    }
 800d5d6:	687b      	ldr	r3, [r7, #4]
 800d5d8:	4618      	mov	r0, r3
 800d5da:	370c      	adds	r7, #12
 800d5dc:	46bd      	mov	sp, r7
 800d5de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5e2:	4770      	bx	lr
 800d5e4:	08026300 	.word	0x08026300

0800d5e8 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800d5e8:	b580      	push	{r7, lr}
 800d5ea:	b082      	sub	sp, #8
 800d5ec:	af00      	add	r7, sp, #0
 800d5ee:	6078      	str	r0, [r7, #4]
    }
 800d5f0:	6878      	ldr	r0, [r7, #4]
 800d5f2:	f7ff ffe9 	bl	800d5c8 <_ZN8touchgfx3LCDD1Ev>
 800d5f6:	210c      	movs	r1, #12
 800d5f8:	6878      	ldr	r0, [r7, #4]
 800d5fa:	f015 f912 	bl	8022822 <_ZdlPvj>
 800d5fe:	687b      	ldr	r3, [r7, #4]
 800d600:	4618      	mov	r0, r3
 800d602:	3708      	adds	r7, #8
 800d604:	46bd      	mov	sp, r7
 800d606:	bd80      	pop	{r7, pc}

0800d608 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800d608:	b480      	push	{r7}
 800d60a:	b083      	sub	sp, #12
 800d60c:	af00      	add	r7, sp, #0
 800d60e:	6078      	str	r0, [r7, #4]
            : startX(0),
 800d610:	687b      	ldr	r3, [r7, #4]
 800d612:	2200      	movs	r2, #0
 800d614:	801a      	strh	r2, [r3, #0]
              startY(0),
 800d616:	687b      	ldr	r3, [r7, #4]
 800d618:	2200      	movs	r2, #0
 800d61a:	805a      	strh	r2, [r3, #2]
              downX(0),
 800d61c:	687b      	ldr	r3, [r7, #4]
 800d61e:	2200      	movs	r2, #0
 800d620:	809a      	strh	r2, [r3, #4]
              downY(0),
 800d622:	687b      	ldr	r3, [r7, #4]
 800d624:	2200      	movs	r2, #0
 800d626:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800d628:	687b      	ldr	r3, [r7, #4]
 800d62a:	2200      	movs	r2, #0
 800d62c:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800d62e:	687b      	ldr	r3, [r7, #4]
 800d630:	2200      	movs	r2, #0
 800d632:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800d634:	687b      	ldr	r3, [r7, #4]
 800d636:	2200      	movs	r2, #0
 800d638:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800d63a:	687b      	ldr	r3, [r7, #4]
 800d63c:	2200      	movs	r2, #0
 800d63e:	739a      	strb	r2, [r3, #14]
        {
        }
 800d640:	687b      	ldr	r3, [r7, #4]
 800d642:	4618      	mov	r0, r3
 800d644:	370c      	adds	r7, #12
 800d646:	46bd      	mov	sp, r7
 800d648:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d64c:	4770      	bx	lr

0800d64e <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800d64e:	b580      	push	{r7, lr}
 800d650:	b082      	sub	sp, #8
 800d652:	af00      	add	r7, sp, #0
 800d654:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800d656:	687b      	ldr	r3, [r7, #4]
 800d658:	4618      	mov	r0, r3
 800d65a:	f7ff ffd5 	bl	800d608 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800d65e:	687b      	ldr	r3, [r7, #4]
 800d660:	2200      	movs	r2, #0
 800d662:	611a      	str	r2, [r3, #16]
 800d664:	687b      	ldr	r3, [r7, #4]
 800d666:	2200      	movs	r2, #0
 800d668:	829a      	strh	r2, [r3, #20]
    {
    }
 800d66a:	687b      	ldr	r3, [r7, #4]
 800d66c:	4618      	mov	r0, r3
 800d66e:	3708      	adds	r7, #8
 800d670:	46bd      	mov	sp, r7
 800d672:	bd80      	pop	{r7, pc}

0800d674 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800d674:	b580      	push	{r7, lr}
 800d676:	b084      	sub	sp, #16
 800d678:	af00      	add	r7, sp, #0
 800d67a:	60f8      	str	r0, [r7, #12]
 800d67c:	60b9      	str	r1, [r7, #8]
 800d67e:	607a      	str	r2, [r7, #4]
 800d680:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800d682:	4a55      	ldr	r2, [pc, #340]	; (800d7d8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800d684:	68fb      	ldr	r3, [r7, #12]
 800d686:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800d688:	68fb      	ldr	r3, [r7, #12]
 800d68a:	68ba      	ldr	r2, [r7, #8]
 800d68c:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800d68e:	68fb      	ldr	r3, [r7, #12]
 800d690:	687a      	ldr	r2, [r7, #4]
 800d692:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800d694:	68fb      	ldr	r3, [r7, #12]
 800d696:	683a      	ldr	r2, [r7, #0]
 800d698:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800d69a:	68fb      	ldr	r3, [r7, #12]
 800d69c:	2200      	movs	r2, #0
 800d69e:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800d6a0:	68fb      	ldr	r3, [r7, #12]
 800d6a2:	2200      	movs	r2, #0
 800d6a4:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800d6a6:	68fb      	ldr	r3, [r7, #12]
 800d6a8:	2200      	movs	r2, #0
 800d6aa:	619a      	str	r2, [r3, #24]
          gestures(),
 800d6ac:	68fb      	ldr	r3, [r7, #12]
 800d6ae:	331c      	adds	r3, #28
 800d6b0:	4618      	mov	r0, r3
 800d6b2:	f7ff ffcc 	bl	800d64e <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800d6b6:	68fb      	ldr	r3, [r7, #12]
 800d6b8:	2200      	movs	r2, #0
 800d6ba:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          taskDelayFunc(0),
 800d6be:	68fb      	ldr	r3, [r7, #12]
 800d6c0:	2200      	movs	r2, #0
 800d6c2:	639a      	str	r2, [r3, #56]	; 0x38
          frameBuffer0(0),
 800d6c4:	68fb      	ldr	r3, [r7, #12]
 800d6c6:	2200      	movs	r2, #0
 800d6c8:	63da      	str	r2, [r3, #60]	; 0x3c
          frameBuffer1(0),
 800d6ca:	68fb      	ldr	r3, [r7, #12]
 800d6cc:	2200      	movs	r2, #0
 800d6ce:	641a      	str	r2, [r3, #64]	; 0x40
          frameBuffer2(0),
 800d6d0:	68fb      	ldr	r3, [r7, #12]
 800d6d2:	2200      	movs	r2, #0
 800d6d4:	645a      	str	r2, [r3, #68]	; 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800d6d6:	68fb      	ldr	r3, [r7, #12]
 800d6d8:	2200      	movs	r2, #0
 800d6da:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
          fingerSize(1),
 800d6de:	68fb      	ldr	r3, [r7, #12]
 800d6e0:	2201      	movs	r2, #1
 800d6e2:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
          lockDMAToPorch(false),
 800d6e6:	68fb      	ldr	r3, [r7, #12]
 800d6e8:	2200      	movs	r2, #0
 800d6ea:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
          frameBufferUpdatedThisFrame(false),
 800d6ee:	68fb      	ldr	r3, [r7, #12]
 800d6f0:	2200      	movs	r2, #0
 800d6f2:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
          auxiliaryLCD(0),
 800d6f6:	68fb      	ldr	r3, [r7, #12]
 800d6f8:	2200      	movs	r2, #0
 800d6fa:	64da      	str	r2, [r3, #76]	; 0x4c
          partialFrameBufferRect(),
 800d6fc:	68fb      	ldr	r3, [r7, #12]
 800d6fe:	3350      	adds	r3, #80	; 0x50
 800d700:	4618      	mov	r0, r3
 800d702:	f7fc fc0e 	bl	8009f22 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800d706:	68fb      	ldr	r3, [r7, #12]
 800d708:	2200      	movs	r2, #0
 800d70a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          listener(0),
 800d70e:	68fb      	ldr	r3, [r7, #12]
 800d710:	2200      	movs	r2, #0
 800d712:	65da      	str	r2, [r3, #92]	; 0x5c
          lastX(0),
 800d714:	68fb      	ldr	r3, [r7, #12]
 800d716:	2200      	movs	r2, #0
 800d718:	661a      	str	r2, [r3, #96]	; 0x60
          lastY(0),
 800d71a:	68fb      	ldr	r3, [r7, #12]
 800d71c:	2200      	movs	r2, #0
 800d71e:	665a      	str	r2, [r3, #100]	; 0x64
          touchSampleRate(1),
 800d720:	68fb      	ldr	r3, [r7, #12]
 800d722:	2201      	movs	r2, #1
 800d724:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
          mcuLoadPct(0),
 800d728:	68fb      	ldr	r3, [r7, #12]
 800d72a:	2200      	movs	r2, #0
 800d72c:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
          vSyncCnt(0),
 800d730:	68fb      	ldr	r3, [r7, #12]
 800d732:	2200      	movs	r2, #0
 800d734:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
          vSyncForFrame(1),
 800d738:	68fb      	ldr	r3, [r7, #12]
 800d73a:	2201      	movs	r2, #1
 800d73c:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
          vSyncCompensationEnabled(false),
 800d740:	68fb      	ldr	r3, [r7, #12]
 800d742:	2200      	movs	r2, #0
 800d744:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          clientDirty(false),
 800d748:	68fb      	ldr	r3, [r7, #12]
 800d74a:	2200      	movs	r2, #0
 800d74c:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
          swapRequested(false),
 800d750:	68fb      	ldr	r3, [r7, #12]
 800d752:	2200      	movs	r2, #0
 800d754:	f883 206e 	strb.w	r2, [r3, #110]	; 0x6e
          lastTouched(false),
 800d758:	68fb      	ldr	r3, [r7, #12]
 800d75a:	2200      	movs	r2, #0
 800d75c:	f883 206f 	strb.w	r2, [r3, #111]	; 0x6f
          updateMCULoad(0),
 800d760:	68fb      	ldr	r3, [r7, #12]
 800d762:	2200      	movs	r2, #0
 800d764:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          cc_begin(0),
 800d768:	68fb      	ldr	r3, [r7, #12]
 800d76a:	2200      	movs	r2, #0
 800d76c:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800d76e:	68fb      	ldr	r3, [r7, #12]
 800d770:	2200      	movs	r2, #0
 800d772:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
          displayOrientationChangeRequested(false),
 800d776:	68fb      	ldr	r3, [r7, #12]
 800d778:	2200      	movs	r2, #0
 800d77a:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
          useDMAAcceleration(true),
 800d77e:	68fb      	ldr	r3, [r7, #12]
 800d780:	2201      	movs	r2, #1
 800d782:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
          lastRenderMethod(HARDWARE)
 800d786:	68fb      	ldr	r3, [r7, #12]
 800d788:	2201      	movs	r2, #1
 800d78a:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
        instance = this;
 800d78e:	4a13      	ldr	r2, [pc, #76]	; (800d7dc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800d790:	68fb      	ldr	r3, [r7, #12]
 800d792:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800d794:	4a12      	ldr	r2, [pc, #72]	; (800d7e0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800d796:	8b3b      	ldrh	r3, [r7, #24]
 800d798:	8013      	strh	r3, [r2, #0]
 800d79a:	4b11      	ldr	r3, [pc, #68]	; (800d7e0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800d79c:	881a      	ldrh	r2, [r3, #0]
 800d79e:	4b11      	ldr	r3, [pc, #68]	; (800d7e4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800d7a0:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800d7a2:	4a11      	ldr	r2, [pc, #68]	; (800d7e8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800d7a4:	8bbb      	ldrh	r3, [r7, #28]
 800d7a6:	8013      	strh	r3, [r2, #0]
 800d7a8:	4b0f      	ldr	r3, [pc, #60]	; (800d7e8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800d7aa:	881a      	ldrh	r2, [r3, #0]
 800d7ac:	4b0f      	ldr	r3, [pc, #60]	; (800d7ec <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800d7ae:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800d7b0:	4b0f      	ldr	r3, [pc, #60]	; (800d7f0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800d7b2:	2200      	movs	r2, #0
 800d7b4:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800d7b6:	8b3a      	ldrh	r2, [r7, #24]
 800d7b8:	8bbb      	ldrh	r3, [r7, #28]
 800d7ba:	429a      	cmp	r2, r3
 800d7bc:	bf34      	ite	cc
 800d7be:	2301      	movcc	r3, #1
 800d7c0:	2300      	movcs	r3, #0
 800d7c2:	b2db      	uxtb	r3, r3
 800d7c4:	461a      	mov	r2, r3
 800d7c6:	68fb      	ldr	r3, [r7, #12]
 800d7c8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 800d7cc:	68fb      	ldr	r3, [r7, #12]
 800d7ce:	4618      	mov	r0, r3
 800d7d0:	3710      	adds	r7, #16
 800d7d2:	46bd      	mov	sp, r7
 800d7d4:	bd80      	pop	{r7, pc}
 800d7d6:	bf00      	nop
 800d7d8:	08025fc4 	.word	0x08025fc4
 800d7dc:	2003242c 	.word	0x2003242c
 800d7e0:	20032420 	.word	0x20032420
 800d7e4:	20032426 	.word	0x20032426
 800d7e8:	20032422 	.word	0x20032422
 800d7ec:	20032428 	.word	0x20032428
 800d7f0:	20032424 	.word	0x20032424

0800d7f4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800d7f4:	b580      	push	{r7, lr}
 800d7f6:	b082      	sub	sp, #8
 800d7f8:	af00      	add	r7, sp, #0
 800d7fa:	6078      	str	r0, [r7, #4]
 800d7fc:	6039      	str	r1, [r7, #0]
    {
        app.gotoScreen1ScreenNoTransition();
 800d7fe:	683b      	ldr	r3, [r7, #0]
 800d800:	4618      	mov	r0, r3
 800d802:	f7fc f8f1 	bl	80099e8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800d806:	bf00      	nop
 800d808:	3708      	adds	r7, #8
 800d80a:	46bd      	mov	sp, r7
 800d80c:	bd80      	pop	{r7, pc}
	...

0800d810 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800d810:	b580      	push	{r7, lr}
 800d812:	b086      	sub	sp, #24
 800d814:	af02      	add	r7, sp, #8
 800d816:	60f8      	str	r0, [r7, #12]
 800d818:	60b9      	str	r1, [r7, #8]
 800d81a:	607a      	str	r2, [r7, #4]
 800d81c:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800d81e:	68f8      	ldr	r0, [r7, #12]
 800d820:	69bb      	ldr	r3, [r7, #24]
 800d822:	9300      	str	r3, [sp, #0]
 800d824:	683b      	ldr	r3, [r7, #0]
 800d826:	687a      	ldr	r2, [r7, #4]
 800d828:	68b9      	ldr	r1, [r7, #8]
 800d82a:	f7ff fe8d 	bl	800d548 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800d82e:	4a04      	ldr	r2, [pc, #16]	; (800d840 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800d830:	68fb      	ldr	r3, [r7, #12]
 800d832:	601a      	str	r2, [r3, #0]
    {

    }
 800d834:	68fb      	ldr	r3, [r7, #12]
 800d836:	4618      	mov	r0, r3
 800d838:	3710      	adds	r7, #16
 800d83a:	46bd      	mov	sp, r7
 800d83c:	bd80      	pop	{r7, pc}
 800d83e:	bf00      	nop
 800d840:	08025da0 	.word	0x08025da0

0800d844 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800d844:	b580      	push	{r7, lr}
 800d846:	af00      	add	r7, sp, #0
 800d848:	4801      	ldr	r0, [pc, #4]	; (800d850 <__tcf_0+0xc>)
 800d84a:	f000 f969 	bl	800db20 <_ZN12FrontendHeapD1Ev>
 800d84e:	bd80      	pop	{r7, pc}
 800d850:	2002fe18 	.word	0x2002fe18

0800d854 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800d854:	b580      	push	{r7, lr}
 800d856:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800d858:	4b11      	ldr	r3, [pc, #68]	; (800d8a0 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800d85a:	681b      	ldr	r3, [r3, #0]
 800d85c:	f3bf 8f5b 	dmb	ish
 800d860:	f003 0301 	and.w	r3, r3, #1
 800d864:	2b00      	cmp	r3, #0
 800d866:	bf0c      	ite	eq
 800d868:	2301      	moveq	r3, #1
 800d86a:	2300      	movne	r3, #0
 800d86c:	b2db      	uxtb	r3, r3
 800d86e:	2b00      	cmp	r3, #0
 800d870:	d013      	beq.n	800d89a <_ZN12FrontendHeap11getInstanceEv+0x46>
 800d872:	480b      	ldr	r0, [pc, #44]	; (800d8a0 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800d874:	f014 ffd7 	bl	8022826 <__cxa_guard_acquire>
 800d878:	4603      	mov	r3, r0
 800d87a:	2b00      	cmp	r3, #0
 800d87c:	bf14      	ite	ne
 800d87e:	2301      	movne	r3, #1
 800d880:	2300      	moveq	r3, #0
 800d882:	b2db      	uxtb	r3, r3
 800d884:	2b00      	cmp	r3, #0
 800d886:	d008      	beq.n	800d89a <_ZN12FrontendHeap11getInstanceEv+0x46>
 800d888:	4806      	ldr	r0, [pc, #24]	; (800d8a4 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800d88a:	f000 f867 	bl	800d95c <_ZN12FrontendHeapC1Ev>
 800d88e:	4806      	ldr	r0, [pc, #24]	; (800d8a8 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800d890:	f015 fd70 	bl	8023374 <atexit>
 800d894:	4802      	ldr	r0, [pc, #8]	; (800d8a0 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800d896:	f014 ffd2 	bl	802283e <__cxa_guard_release>
        return instance;
 800d89a:	4b02      	ldr	r3, [pc, #8]	; (800d8a4 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800d89c:	4618      	mov	r0, r3
 800d89e:	bd80      	pop	{r7, pc}
 800d8a0:	20030c24 	.word	0x20030c24
 800d8a4:	2002fe18 	.word	0x2002fe18
 800d8a8:	0800d845 	.word	0x0800d845

0800d8ac <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800d8ac:	b580      	push	{r7, lr}
 800d8ae:	b082      	sub	sp, #8
 800d8b0:	af00      	add	r7, sp, #0
 800d8b2:	6078      	str	r0, [r7, #4]
 800d8b4:	4a05      	ldr	r2, [pc, #20]	; (800d8cc <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800d8b6:	687b      	ldr	r3, [r7, #4]
 800d8b8:	601a      	str	r2, [r3, #0]
 800d8ba:	687b      	ldr	r3, [r7, #4]
 800d8bc:	4618      	mov	r0, r3
 800d8be:	f7ff fe63 	bl	800d588 <_ZN8touchgfx7MVPHeapD1Ev>
 800d8c2:	687b      	ldr	r3, [r7, #4]
 800d8c4:	4618      	mov	r0, r3
 800d8c6:	3708      	adds	r7, #8
 800d8c8:	46bd      	mov	sp, r7
 800d8ca:	bd80      	pop	{r7, pc}
 800d8cc:	08025da0 	.word	0x08025da0

0800d8d0 <_ZN16FrontendHeapBaseD0Ev>:
 800d8d0:	b580      	push	{r7, lr}
 800d8d2:	b082      	sub	sp, #8
 800d8d4:	af00      	add	r7, sp, #0
 800d8d6:	6078      	str	r0, [r7, #4]
 800d8d8:	6878      	ldr	r0, [r7, #4]
 800d8da:	f7ff ffe7 	bl	800d8ac <_ZN16FrontendHeapBaseD1Ev>
 800d8de:	2114      	movs	r1, #20
 800d8e0:	6878      	ldr	r0, [r7, #4]
 800d8e2:	f014 ff9e 	bl	8022822 <_ZdlPvj>
 800d8e6:	687b      	ldr	r3, [r7, #4]
 800d8e8:	4618      	mov	r0, r3
 800d8ea:	3708      	adds	r7, #8
 800d8ec:	46bd      	mov	sp, r7
 800d8ee:	bd80      	pop	{r7, pc}

0800d8f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800d8f0:	b580      	push	{r7, lr}
 800d8f2:	b082      	sub	sp, #8
 800d8f4:	af00      	add	r7, sp, #0
 800d8f6:	6078      	str	r0, [r7, #4]
 800d8f8:	687b      	ldr	r3, [r7, #4]
 800d8fa:	4618      	mov	r0, r3
 800d8fc:	f000 ffd0 	bl	800e8a0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800d900:	4a03      	ldr	r2, [pc, #12]	; (800d910 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800d902:	687b      	ldr	r3, [r7, #4]
 800d904:	601a      	str	r2, [r3, #0]
 800d906:	687b      	ldr	r3, [r7, #4]
 800d908:	4618      	mov	r0, r3
 800d90a:	3708      	adds	r7, #8
 800d90c:	46bd      	mov	sp, r7
 800d90e:	bd80      	pop	{r7, pc}
 800d910:	08025d6c 	.word	0x08025d6c

0800d914 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800d914:	b580      	push	{r7, lr}
 800d916:	b082      	sub	sp, #8
 800d918:	af00      	add	r7, sp, #0
 800d91a:	6078      	str	r0, [r7, #4]
 800d91c:	687b      	ldr	r3, [r7, #4]
 800d91e:	4618      	mov	r0, r3
 800d920:	f000 ffbe 	bl	800e8a0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800d924:	4a03      	ldr	r2, [pc, #12]	; (800d934 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800d926:	687b      	ldr	r3, [r7, #4]
 800d928:	601a      	str	r2, [r3, #0]
 800d92a:	687b      	ldr	r3, [r7, #4]
 800d92c:	4618      	mov	r0, r3
 800d92e:	3708      	adds	r7, #8
 800d930:	46bd      	mov	sp, r7
 800d932:	bd80      	pop	{r7, pc}
 800d934:	08025d38 	.word	0x08025d38

0800d938 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800d938:	b580      	push	{r7, lr}
 800d93a:	b082      	sub	sp, #8
 800d93c:	af00      	add	r7, sp, #0
 800d93e:	6078      	str	r0, [r7, #4]
 800d940:	687b      	ldr	r3, [r7, #4]
 800d942:	4618      	mov	r0, r3
 800d944:	f000 ffac 	bl	800e8a0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800d948:	4a03      	ldr	r2, [pc, #12]	; (800d958 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800d94a:	687b      	ldr	r3, [r7, #4]
 800d94c:	601a      	str	r2, [r3, #0]
 800d94e:	687b      	ldr	r3, [r7, #4]
 800d950:	4618      	mov	r0, r3
 800d952:	3708      	adds	r7, #8
 800d954:	46bd      	mov	sp, r7
 800d956:	bd80      	pop	{r7, pc}
 800d958:	08025d04 	.word	0x08025d04

0800d95c <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800d95c:	b590      	push	{r4, r7, lr}
 800d95e:	b085      	sub	sp, #20
 800d960:	af02      	add	r7, sp, #8
 800d962:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800d964:	6878      	ldr	r0, [r7, #4]
 800d966:	687b      	ldr	r3, [r7, #4]
 800d968:	f103 0114 	add.w	r1, r3, #20
 800d96c:	687b      	ldr	r3, [r7, #4]
 800d96e:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 800d972:	687b      	ldr	r3, [r7, #4]
 800d974:	f603 4498 	addw	r4, r3, #3224	; 0xc98
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800d978:	687b      	ldr	r3, [r7, #4]
 800d97a:	f503 634b 	add.w	r3, r3, #3248	; 0xcb0
                     app(model, *this)
 800d97e:	9300      	str	r3, [sp, #0]
 800d980:	4623      	mov	r3, r4
 800d982:	f7ff ff45 	bl	800d810 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800d986:	4a18      	ldr	r2, [pc, #96]	; (800d9e8 <_ZN12FrontendHeapC1Ev+0x8c>)
 800d988:	687b      	ldr	r3, [r7, #4]
 800d98a:	601a      	str	r2, [r3, #0]
 800d98c:	687b      	ldr	r3, [r7, #4]
 800d98e:	3314      	adds	r3, #20
 800d990:	4618      	mov	r0, r3
 800d992:	f7ff ffad 	bl	800d8f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800d996:	687b      	ldr	r3, [r7, #4]
 800d998:	332c      	adds	r3, #44	; 0x2c
 800d99a:	4618      	mov	r0, r3
 800d99c:	f7ff ffba 	bl	800d914 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800d9a0:	687b      	ldr	r3, [r7, #4]
 800d9a2:	f603 4398 	addw	r3, r3, #3224	; 0xc98
 800d9a6:	4618      	mov	r0, r3
 800d9a8:	f7ff ffc6 	bl	800d938 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800d9ac:	687b      	ldr	r3, [r7, #4]
 800d9ae:	f603 43ac 	addw	r3, r3, #3244	; 0xcac
 800d9b2:	4618      	mov	r0, r3
 800d9b4:	f7fe fe66 	bl	800c684 <_ZN5ModelC1Ev>
 800d9b8:	687b      	ldr	r3, [r7, #4]
 800d9ba:	f503 604b 	add.w	r0, r3, #3248	; 0xcb0
 800d9be:	687b      	ldr	r3, [r7, #4]
 800d9c0:	f603 43ac 	addw	r3, r3, #3244	; 0xcac
 800d9c4:	687a      	ldr	r2, [r7, #4]
 800d9c6:	4619      	mov	r1, r3
 800d9c8:	f7fe fe28 	bl	800c61c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 800d9cc:	687a      	ldr	r2, [r7, #4]
 800d9ce:	687b      	ldr	r3, [r7, #4]
 800d9d0:	f503 634b 	add.w	r3, r3, #3248	; 0xcb0
 800d9d4:	4619      	mov	r1, r3
 800d9d6:	4610      	mov	r0, r2
 800d9d8:	f7ff ff0c 	bl	800d7f4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800d9dc:	687b      	ldr	r3, [r7, #4]
 800d9de:	4618      	mov	r0, r3
 800d9e0:	370c      	adds	r7, #12
 800d9e2:	46bd      	mov	sp, r7
 800d9e4:	bd90      	pop	{r4, r7, pc}
 800d9e6:	bf00      	nop
 800d9e8:	08025cf0 	.word	0x08025cf0

0800d9ec <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800d9ec:	b580      	push	{r7, lr}
 800d9ee:	b086      	sub	sp, #24
 800d9f0:	af02      	add	r7, sp, #8
 800d9f2:	60f8      	str	r0, [r7, #12]
 800d9f4:	60b9      	str	r1, [r7, #8]
 800d9f6:	607a      	str	r2, [r7, #4]
 800d9f8:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800d9fa:	68f8      	ldr	r0, [r7, #12]
 800d9fc:	8bbb      	ldrh	r3, [r7, #28]
 800d9fe:	9301      	str	r3, [sp, #4]
 800da00:	8b3b      	ldrh	r3, [r7, #24]
 800da02:	9300      	str	r3, [sp, #0]
 800da04:	683b      	ldr	r3, [r7, #0]
 800da06:	687a      	ldr	r2, [r7, #4]
 800da08:	68b9      	ldr	r1, [r7, #8]
 800da0a:	f7ff fe33 	bl	800d674 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800da0e:	4a04      	ldr	r2, [pc, #16]	; (800da20 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800da10:	68fb      	ldr	r3, [r7, #12]
 800da12:	601a      	str	r2, [r3, #0]
    }
 800da14:	68fb      	ldr	r3, [r7, #12]
 800da16:	4618      	mov	r0, r3
 800da18:	3710      	adds	r7, #16
 800da1a:	46bd      	mov	sp, r7
 800da1c:	bd80      	pop	{r7, pc}
 800da1e:	bf00      	nop
 800da20:	08025df0 	.word	0x08025df0

0800da24 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800da24:	b580      	push	{r7, lr}
 800da26:	b086      	sub	sp, #24
 800da28:	af02      	add	r7, sp, #8
 800da2a:	60f8      	str	r0, [r7, #12]
 800da2c:	60b9      	str	r1, [r7, #8]
 800da2e:	607a      	str	r2, [r7, #4]
 800da30:	603b      	str	r3, [r7, #0]
 800da32:	68f8      	ldr	r0, [r7, #12]
 800da34:	8bbb      	ldrh	r3, [r7, #28]
 800da36:	9301      	str	r3, [sp, #4]
 800da38:	8b3b      	ldrh	r3, [r7, #24]
 800da3a:	9300      	str	r3, [sp, #0]
 800da3c:	683b      	ldr	r3, [r7, #0]
 800da3e:	687a      	ldr	r2, [r7, #4]
 800da40:	68b9      	ldr	r1, [r7, #8]
 800da42:	f7ff ffd3 	bl	800d9ec <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800da46:	4a04      	ldr	r2, [pc, #16]	; (800da58 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800da48:	68fb      	ldr	r3, [r7, #12]
 800da4a:	601a      	str	r2, [r3, #0]
    }
 800da4c:	68fb      	ldr	r3, [r7, #12]
 800da4e:	4618      	mov	r0, r3
 800da50:	3710      	adds	r7, #16
 800da52:	46bd      	mov	sp, r7
 800da54:	bd80      	pop	{r7, pc}
 800da56:	bf00      	nop
 800da58:	08025ba4 	.word	0x08025ba4

0800da5c <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800da5c:	b480      	push	{r7}
 800da5e:	b083      	sub	sp, #12
 800da60:	af00      	add	r7, sp, #0
 800da62:	6078      	str	r0, [r7, #4]
 800da64:	4a04      	ldr	r2, [pc, #16]	; (800da78 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800da66:	687b      	ldr	r3, [r7, #4]
 800da68:	601a      	str	r2, [r3, #0]
 800da6a:	687b      	ldr	r3, [r7, #4]
 800da6c:	4618      	mov	r0, r3
 800da6e:	370c      	adds	r7, #12
 800da70:	46bd      	mov	sp, r7
 800da72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da76:	4770      	bx	lr
 800da78:	08025b8c 	.word	0x08025b8c

0800da7c <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800da7c:	b580      	push	{r7, lr}
 800da7e:	b082      	sub	sp, #8
 800da80:	af00      	add	r7, sp, #0
 800da82:	6078      	str	r0, [r7, #4]
 800da84:	687b      	ldr	r3, [r7, #4]
 800da86:	4618      	mov	r0, r3
 800da88:	f7ff ffe8 	bl	800da5c <_ZN8touchgfx15TouchControllerC1Ev>
 800da8c:	4a03      	ldr	r2, [pc, #12]	; (800da9c <_ZN20STM32TouchControllerC1Ev+0x20>)
 800da8e:	687b      	ldr	r3, [r7, #4]
 800da90:	601a      	str	r2, [r3, #0]
 800da92:	687b      	ldr	r3, [r7, #4]
 800da94:	4618      	mov	r0, r3
 800da96:	3708      	adds	r7, #8
 800da98:	46bd      	mov	sp, r7
 800da9a:	bd80      	pop	{r7, pc}
 800da9c:	08025b74 	.word	0x08025b74

0800daa0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 240);

void touchgfx_init()
{
 800daa0:	b590      	push	{r4, r7, lr}
 800daa2:	b085      	sub	sp, #20
 800daa4:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800daa6:	f7fe fb83 	bl	800c1b0 <_ZN14BitmapDatabase11getInstanceEv>
 800daaa:	4604      	mov	r4, r0
 800daac:	f7fe fb8a 	bl	800c1c4 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800dab0:	4603      	mov	r3, r0
 800dab2:	4619      	mov	r1, r3
 800dab4:	2300      	movs	r3, #0
 800dab6:	9300      	str	r3, [sp, #0]
 800dab8:	2300      	movs	r3, #0
 800daba:	2200      	movs	r2, #0
 800dabc:	4620      	mov	r0, r4
 800dabe:	f007 fa53 	bl	8014f68 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800dac2:	4809      	ldr	r0, [pc, #36]	; (800dae8 <touchgfx_init+0x48>)
 800dac4:	f7ff fd30 	bl	800d528 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800dac8:	2000      	movs	r0, #0
 800daca:	f7fe fcbf 	bl	800c44c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800dace:	4807      	ldr	r0, [pc, #28]	; (800daec <touchgfx_init+0x4c>)
 800dad0:	f007 f9b2 	bl	8014e38 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800dad4:	f7ff febe 	bl	800d854 <_ZN12FrontendHeap11getInstanceEv>
 800dad8:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800dada:	4805      	ldr	r0, [pc, #20]	; (800daf0 <touchgfx_init+0x50>)
 800dadc:	f7ff fa54 	bl	800cf88 <_ZN11TouchGFXHAL10initializeEv>
}
 800dae0:	bf00      	nop
 800dae2:	370c      	adds	r7, #12
 800dae4:	46bd      	mov	sp, r7
 800dae6:	bd90      	pop	{r4, r7, pc}
 800dae8:	20030cf8 	.word	0x20030cf8
 800daec:	2000003c 	.word	0x2000003c
 800daf0:	20030cfc 	.word	0x20030cfc

0800daf4 <touchgfx_components_init>:

void touchgfx_components_init()
{
 800daf4:	b480      	push	{r7}
 800daf6:	af00      	add	r7, sp, #0
}
 800daf8:	bf00      	nop
 800dafa:	46bd      	mov	sp, r7
 800dafc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db00:	4770      	bx	lr
	...

0800db04 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800db04:	b580      	push	{r7, lr}
 800db06:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 800db08:	f7ff fba6 	bl	800d258 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800db0c:	4603      	mov	r3, r0
 800db0e:	2b00      	cmp	r3, #0
 800db10:	d002      	beq.n	800db18 <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 800db12:	4802      	ldr	r0, [pc, #8]	; (800db1c <touchgfx_taskEntry+0x18>)
 800db14:	f7ff f91e 	bl	800cd54 <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 800db18:	bf00      	nop
 800db1a:	bd80      	pop	{r7, pc}
 800db1c:	20030cfc 	.word	0x20030cfc

0800db20 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800db20:	b580      	push	{r7, lr}
 800db22:	b082      	sub	sp, #8
 800db24:	af00      	add	r7, sp, #0
 800db26:	6078      	str	r0, [r7, #4]
 800db28:	4a10      	ldr	r2, [pc, #64]	; (800db6c <_ZN12FrontendHeapD1Ev+0x4c>)
 800db2a:	687b      	ldr	r3, [r7, #4]
 800db2c:	601a      	str	r2, [r3, #0]
 800db2e:	687b      	ldr	r3, [r7, #4]
 800db30:	f503 634b 	add.w	r3, r3, #3248	; 0xcb0
 800db34:	4618      	mov	r0, r3
 800db36:	f7fe fd3b 	bl	800c5b0 <_ZN19FrontendApplicationD1Ev>
 800db3a:	687b      	ldr	r3, [r7, #4]
 800db3c:	f603 4398 	addw	r3, r3, #3224	; 0xc98
 800db40:	4618      	mov	r0, r3
 800db42:	f000 f827 	bl	800db94 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800db46:	687b      	ldr	r3, [r7, #4]
 800db48:	332c      	adds	r3, #44	; 0x2c
 800db4a:	4618      	mov	r0, r3
 800db4c:	f000 f844 	bl	800dbd8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800db50:	687b      	ldr	r3, [r7, #4]
 800db52:	3314      	adds	r3, #20
 800db54:	4618      	mov	r0, r3
 800db56:	f000 f863 	bl	800dc20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800db5a:	687b      	ldr	r3, [r7, #4]
 800db5c:	4618      	mov	r0, r3
 800db5e:	f7ff fea5 	bl	800d8ac <_ZN16FrontendHeapBaseD1Ev>
 800db62:	687b      	ldr	r3, [r7, #4]
 800db64:	4618      	mov	r0, r3
 800db66:	3708      	adds	r7, #8
 800db68:	46bd      	mov	sp, r7
 800db6a:	bd80      	pop	{r7, pc}
 800db6c:	08025cf0 	.word	0x08025cf0

0800db70 <_ZN12FrontendHeapD0Ev>:
 800db70:	b580      	push	{r7, lr}
 800db72:	b082      	sub	sp, #8
 800db74:	af00      	add	r7, sp, #0
 800db76:	6078      	str	r0, [r7, #4]
 800db78:	6878      	ldr	r0, [r7, #4]
 800db7a:	f7ff ffd1 	bl	800db20 <_ZN12FrontendHeapD1Ev>
 800db7e:	f640 610c 	movw	r1, #3596	; 0xe0c
 800db82:	6878      	ldr	r0, [r7, #4]
 800db84:	f014 fe4d 	bl	8022822 <_ZdlPvj>
 800db88:	687b      	ldr	r3, [r7, #4]
 800db8a:	4618      	mov	r0, r3
 800db8c:	3708      	adds	r7, #8
 800db8e:	46bd      	mov	sp, r7
 800db90:	bd80      	pop	{r7, pc}
	...

0800db94 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800db94:	b580      	push	{r7, lr}
 800db96:	b082      	sub	sp, #8
 800db98:	af00      	add	r7, sp, #0
 800db9a:	6078      	str	r0, [r7, #4]
 800db9c:	4a05      	ldr	r2, [pc, #20]	; (800dbb4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800db9e:	687b      	ldr	r3, [r7, #4]
 800dba0:	601a      	str	r2, [r3, #0]
 800dba2:	687b      	ldr	r3, [r7, #4]
 800dba4:	4618      	mov	r0, r3
 800dba6:	f000 fe7a 	bl	800e89e <_ZN8touchgfx17AbstractPartitionD1Ev>
 800dbaa:	687b      	ldr	r3, [r7, #4]
 800dbac:	4618      	mov	r0, r3
 800dbae:	3708      	adds	r7, #8
 800dbb0:	46bd      	mov	sp, r7
 800dbb2:	bd80      	pop	{r7, pc}
 800dbb4:	08025d04 	.word	0x08025d04

0800dbb8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800dbb8:	b580      	push	{r7, lr}
 800dbba:	b082      	sub	sp, #8
 800dbbc:	af00      	add	r7, sp, #0
 800dbbe:	6078      	str	r0, [r7, #4]
 800dbc0:	6878      	ldr	r0, [r7, #4]
 800dbc2:	f7ff ffe7 	bl	800db94 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800dbc6:	2114      	movs	r1, #20
 800dbc8:	6878      	ldr	r0, [r7, #4]
 800dbca:	f014 fe2a 	bl	8022822 <_ZdlPvj>
 800dbce:	687b      	ldr	r3, [r7, #4]
 800dbd0:	4618      	mov	r0, r3
 800dbd2:	3708      	adds	r7, #8
 800dbd4:	46bd      	mov	sp, r7
 800dbd6:	bd80      	pop	{r7, pc}

0800dbd8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800dbd8:	b580      	push	{r7, lr}
 800dbda:	b082      	sub	sp, #8
 800dbdc:	af00      	add	r7, sp, #0
 800dbde:	6078      	str	r0, [r7, #4]
 800dbe0:	4a05      	ldr	r2, [pc, #20]	; (800dbf8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800dbe2:	687b      	ldr	r3, [r7, #4]
 800dbe4:	601a      	str	r2, [r3, #0]
 800dbe6:	687b      	ldr	r3, [r7, #4]
 800dbe8:	4618      	mov	r0, r3
 800dbea:	f000 fe58 	bl	800e89e <_ZN8touchgfx17AbstractPartitionD1Ev>
 800dbee:	687b      	ldr	r3, [r7, #4]
 800dbf0:	4618      	mov	r0, r3
 800dbf2:	3708      	adds	r7, #8
 800dbf4:	46bd      	mov	sp, r7
 800dbf6:	bd80      	pop	{r7, pc}
 800dbf8:	08025d38 	.word	0x08025d38

0800dbfc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800dbfc:	b580      	push	{r7, lr}
 800dbfe:	b082      	sub	sp, #8
 800dc00:	af00      	add	r7, sp, #0
 800dc02:	6078      	str	r0, [r7, #4]
 800dc04:	6878      	ldr	r0, [r7, #4]
 800dc06:	f7ff ffe7 	bl	800dbd8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800dc0a:	f640 416c 	movw	r1, #3180	; 0xc6c
 800dc0e:	6878      	ldr	r0, [r7, #4]
 800dc10:	f014 fe07 	bl	8022822 <_ZdlPvj>
 800dc14:	687b      	ldr	r3, [r7, #4]
 800dc16:	4618      	mov	r0, r3
 800dc18:	3708      	adds	r7, #8
 800dc1a:	46bd      	mov	sp, r7
 800dc1c:	bd80      	pop	{r7, pc}
	...

0800dc20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800dc20:	b580      	push	{r7, lr}
 800dc22:	b082      	sub	sp, #8
 800dc24:	af00      	add	r7, sp, #0
 800dc26:	6078      	str	r0, [r7, #4]
 800dc28:	4a05      	ldr	r2, [pc, #20]	; (800dc40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800dc2a:	687b      	ldr	r3, [r7, #4]
 800dc2c:	601a      	str	r2, [r3, #0]
 800dc2e:	687b      	ldr	r3, [r7, #4]
 800dc30:	4618      	mov	r0, r3
 800dc32:	f000 fe34 	bl	800e89e <_ZN8touchgfx17AbstractPartitionD1Ev>
 800dc36:	687b      	ldr	r3, [r7, #4]
 800dc38:	4618      	mov	r0, r3
 800dc3a:	3708      	adds	r7, #8
 800dc3c:	46bd      	mov	sp, r7
 800dc3e:	bd80      	pop	{r7, pc}
 800dc40:	08025d6c 	.word	0x08025d6c

0800dc44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800dc44:	b580      	push	{r7, lr}
 800dc46:	b082      	sub	sp, #8
 800dc48:	af00      	add	r7, sp, #0
 800dc4a:	6078      	str	r0, [r7, #4]
 800dc4c:	6878      	ldr	r0, [r7, #4]
 800dc4e:	f7ff ffe7 	bl	800dc20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800dc52:	2118      	movs	r1, #24
 800dc54:	6878      	ldr	r0, [r7, #4]
 800dc56:	f014 fde4 	bl	8022822 <_ZdlPvj>
 800dc5a:	687b      	ldr	r3, [r7, #4]
 800dc5c:	4618      	mov	r0, r3
 800dc5e:	3708      	adds	r7, #8
 800dc60:	46bd      	mov	sp, r7
 800dc62:	bd80      	pop	{r7, pc}

0800dc64 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800dc64:	b580      	push	{r7, lr}
 800dc66:	b082      	sub	sp, #8
 800dc68:	af00      	add	r7, sp, #0
 800dc6a:	6078      	str	r0, [r7, #4]
 800dc6c:	4a05      	ldr	r2, [pc, #20]	; (800dc84 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800dc6e:	687b      	ldr	r3, [r7, #4]
 800dc70:	601a      	str	r2, [r3, #0]
 800dc72:	687b      	ldr	r3, [r7, #4]
 800dc74:	4618      	mov	r0, r3
 800dc76:	f7ff fca7 	bl	800d5c8 <_ZN8touchgfx3LCDD1Ev>
 800dc7a:	687b      	ldr	r3, [r7, #4]
 800dc7c:	4618      	mov	r0, r3
 800dc7e:	3708      	adds	r7, #8
 800dc80:	46bd      	mov	sp, r7
 800dc82:	bd80      	pop	{r7, pc}
 800dc84:	08026770 	.word	0x08026770

0800dc88 <_ZN8touchgfx8LCD16bppD0Ev>:
 800dc88:	b580      	push	{r7, lr}
 800dc8a:	b082      	sub	sp, #8
 800dc8c:	af00      	add	r7, sp, #0
 800dc8e:	6078      	str	r0, [r7, #4]
 800dc90:	6878      	ldr	r0, [r7, #4]
 800dc92:	f7ff ffe7 	bl	800dc64 <_ZN8touchgfx8LCD16bppD1Ev>
 800dc96:	2188      	movs	r1, #136	; 0x88
 800dc98:	6878      	ldr	r0, [r7, #4]
 800dc9a:	f014 fdc2 	bl	8022822 <_ZdlPvj>
 800dc9e:	687b      	ldr	r3, [r7, #4]
 800dca0:	4618      	mov	r0, r3
 800dca2:	3708      	adds	r7, #8
 800dca4:	46bd      	mov	sp, r7
 800dca6:	bd80      	pop	{r7, pc}

0800dca8 <_Z41__static_initialization_and_destruction_0ii>:
 800dca8:	b580      	push	{r7, lr}
 800dcaa:	b084      	sub	sp, #16
 800dcac:	af02      	add	r7, sp, #8
 800dcae:	6078      	str	r0, [r7, #4]
 800dcb0:	6039      	str	r1, [r7, #0]
 800dcb2:	687b      	ldr	r3, [r7, #4]
 800dcb4:	2b01      	cmp	r3, #1
 800dcb6:	d118      	bne.n	800dcea <_Z41__static_initialization_and_destruction_0ii+0x42>
 800dcb8:	683b      	ldr	r3, [r7, #0]
 800dcba:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800dcbe:	4293      	cmp	r3, r2
 800dcc0:	d113      	bne.n	800dcea <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 800dcc2:	4817      	ldr	r0, [pc, #92]	; (800dd20 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800dcc4:	f7ff feda 	bl	800da7c <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800dcc8:	4816      	ldr	r0, [pc, #88]	; (800dd24 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800dcca:	f7ff fb8f 	bl	800d3ec <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800dcce:	4816      	ldr	r0, [pc, #88]	; (800dd28 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800dcd0:	f00b fc1c 	bl	801950c <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 240);
 800dcd4:	23f0      	movs	r3, #240	; 0xf0
 800dcd6:	9301      	str	r3, [sp, #4]
 800dcd8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800dcdc:	9300      	str	r3, [sp, #0]
 800dcde:	4b10      	ldr	r3, [pc, #64]	; (800dd20 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800dce0:	4a11      	ldr	r2, [pc, #68]	; (800dd28 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800dce2:	4910      	ldr	r1, [pc, #64]	; (800dd24 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800dce4:	4811      	ldr	r0, [pc, #68]	; (800dd2c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800dce6:	f7ff fe9d 	bl	800da24 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800dcea:	687b      	ldr	r3, [r7, #4]
 800dcec:	2b00      	cmp	r3, #0
 800dcee:	d113      	bne.n	800dd18 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800dcf0:	683b      	ldr	r3, [r7, #0]
 800dcf2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800dcf6:	4293      	cmp	r3, r2
 800dcf8:	d10e      	bne.n	800dd18 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800dcfa:	480c      	ldr	r0, [pc, #48]	; (800dd2c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800dcfc:	f7ff f9d4 	bl	800d0a8 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800dd00:	480b      	ldr	r0, [pc, #44]	; (800dd30 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800dd02:	f7fb f861 	bl	8008dc8 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800dd06:	4808      	ldr	r0, [pc, #32]	; (800dd28 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800dd08:	f7ff ffac 	bl	800dc64 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800dd0c:	4805      	ldr	r0, [pc, #20]	; (800dd24 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800dd0e:	f7ff fbc1 	bl	800d494 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800dd12:	4803      	ldr	r0, [pc, #12]	; (800dd20 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800dd14:	f7fe ff24 	bl	800cb60 <_ZN20STM32TouchControllerD1Ev>
}
 800dd18:	bf00      	nop
 800dd1a:	3708      	adds	r7, #8
 800dd1c:	46bd      	mov	sp, r7
 800dd1e:	bd80      	pop	{r7, pc}
 800dd20:	20030c28 	.word	0x20030c28
 800dd24:	20030c2c 	.word	0x20030c2c
 800dd28:	20030c70 	.word	0x20030c70
 800dd2c:	20030cfc 	.word	0x20030cfc
 800dd30:	2000003c 	.word	0x2000003c

0800dd34 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800dd34:	b480      	push	{r7}
 800dd36:	b083      	sub	sp, #12
 800dd38:	af00      	add	r7, sp, #0
 800dd3a:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800dd3c:	2301      	movs	r3, #1
    }
 800dd3e:	4618      	mov	r0, r3
 800dd40:	370c      	adds	r7, #12
 800dd42:	46bd      	mov	sp, r7
 800dd44:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd48:	4770      	bx	lr

0800dd4a <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800dd4a:	b480      	push	{r7}
 800dd4c:	b083      	sub	sp, #12
 800dd4e:	af00      	add	r7, sp, #0
 800dd50:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800dd52:	230c      	movs	r3, #12
    }
 800dd54:	4618      	mov	r0, r3
 800dd56:	370c      	adds	r7, #12
 800dd58:	46bd      	mov	sp, r7
 800dd5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd5e:	4770      	bx	lr

0800dd60 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800dd60:	b480      	push	{r7}
 800dd62:	b083      	sub	sp, #12
 800dd64:	af00      	add	r7, sp, #0
 800dd66:	6078      	str	r0, [r7, #4]
 800dd68:	460b      	mov	r3, r1
 800dd6a:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800dd6c:	887a      	ldrh	r2, [r7, #2]
 800dd6e:	4613      	mov	r3, r2
 800dd70:	005b      	lsls	r3, r3, #1
 800dd72:	4413      	add	r3, r2
 800dd74:	009b      	lsls	r3, r3, #2
 800dd76:	3308      	adds	r3, #8
 800dd78:	687a      	ldr	r2, [r7, #4]
 800dd7a:	4413      	add	r3, r2
    }
 800dd7c:	4618      	mov	r0, r3
 800dd7e:	370c      	adds	r7, #12
 800dd80:	46bd      	mov	sp, r7
 800dd82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd86:	4770      	bx	lr

0800dd88 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800dd88:	b480      	push	{r7}
 800dd8a:	b083      	sub	sp, #12
 800dd8c:	af00      	add	r7, sp, #0
 800dd8e:	6078      	str	r0, [r7, #4]
 800dd90:	460b      	mov	r3, r1
 800dd92:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800dd94:	887a      	ldrh	r2, [r7, #2]
 800dd96:	4613      	mov	r3, r2
 800dd98:	005b      	lsls	r3, r3, #1
 800dd9a:	4413      	add	r3, r2
 800dd9c:	009b      	lsls	r3, r3, #2
 800dd9e:	3308      	adds	r3, #8
 800dda0:	687a      	ldr	r2, [r7, #4]
 800dda2:	4413      	add	r3, r2
    }
 800dda4:	4618      	mov	r0, r3
 800dda6:	370c      	adds	r7, #12
 800dda8:	46bd      	mov	sp, r7
 800ddaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ddae:	4770      	bx	lr

0800ddb0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800ddb0:	b480      	push	{r7}
 800ddb2:	b083      	sub	sp, #12
 800ddb4:	af00      	add	r7, sp, #0
 800ddb6:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800ddb8:	2301      	movs	r3, #1
    }
 800ddba:	4618      	mov	r0, r3
 800ddbc:	370c      	adds	r7, #12
 800ddbe:	46bd      	mov	sp, r7
 800ddc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ddc4:	4770      	bx	lr

0800ddc6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800ddc6:	b480      	push	{r7}
 800ddc8:	b083      	sub	sp, #12
 800ddca:	af00      	add	r7, sp, #0
 800ddcc:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800ddce:	f640 4364 	movw	r3, #3172	; 0xc64
    }
 800ddd2:	4618      	mov	r0, r3
 800ddd4:	370c      	adds	r7, #12
 800ddd6:	46bd      	mov	sp, r7
 800ddd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dddc:	4770      	bx	lr

0800ddde <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800ddde:	b480      	push	{r7}
 800dde0:	b083      	sub	sp, #12
 800dde2:	af00      	add	r7, sp, #0
 800dde4:	6078      	str	r0, [r7, #4]
 800dde6:	460b      	mov	r3, r1
 800dde8:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800ddea:	887b      	ldrh	r3, [r7, #2]
 800ddec:	f640 4264 	movw	r2, #3172	; 0xc64
 800ddf0:	fb02 f303 	mul.w	r3, r2, r3
 800ddf4:	3308      	adds	r3, #8
 800ddf6:	687a      	ldr	r2, [r7, #4]
 800ddf8:	4413      	add	r3, r2
    }
 800ddfa:	4618      	mov	r0, r3
 800ddfc:	370c      	adds	r7, #12
 800ddfe:	46bd      	mov	sp, r7
 800de00:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de04:	4770      	bx	lr

0800de06 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800de06:	b480      	push	{r7}
 800de08:	b083      	sub	sp, #12
 800de0a:	af00      	add	r7, sp, #0
 800de0c:	6078      	str	r0, [r7, #4]
 800de0e:	460b      	mov	r3, r1
 800de10:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800de12:	887b      	ldrh	r3, [r7, #2]
 800de14:	f640 4264 	movw	r2, #3172	; 0xc64
 800de18:	fb02 f303 	mul.w	r3, r2, r3
 800de1c:	3308      	adds	r3, #8
 800de1e:	687a      	ldr	r2, [r7, #4]
 800de20:	4413      	add	r3, r2
    }
 800de22:	4618      	mov	r0, r3
 800de24:	370c      	adds	r7, #12
 800de26:	46bd      	mov	sp, r7
 800de28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de2c:	4770      	bx	lr

0800de2e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800de2e:	b480      	push	{r7}
 800de30:	b083      	sub	sp, #12
 800de32:	af00      	add	r7, sp, #0
 800de34:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800de36:	2301      	movs	r3, #1
    }
 800de38:	4618      	mov	r0, r3
 800de3a:	370c      	adds	r7, #12
 800de3c:	46bd      	mov	sp, r7
 800de3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de42:	4770      	bx	lr

0800de44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800de44:	b480      	push	{r7}
 800de46:	b083      	sub	sp, #12
 800de48:	af00      	add	r7, sp, #0
 800de4a:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800de4c:	2310      	movs	r3, #16
    }
 800de4e:	4618      	mov	r0, r3
 800de50:	370c      	adds	r7, #12
 800de52:	46bd      	mov	sp, r7
 800de54:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de58:	4770      	bx	lr

0800de5a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800de5a:	b480      	push	{r7}
 800de5c:	b083      	sub	sp, #12
 800de5e:	af00      	add	r7, sp, #0
 800de60:	6078      	str	r0, [r7, #4]
 800de62:	460b      	mov	r3, r1
 800de64:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800de66:	887b      	ldrh	r3, [r7, #2]
 800de68:	011b      	lsls	r3, r3, #4
 800de6a:	3308      	adds	r3, #8
 800de6c:	687a      	ldr	r2, [r7, #4]
 800de6e:	4413      	add	r3, r2
    }
 800de70:	4618      	mov	r0, r3
 800de72:	370c      	adds	r7, #12
 800de74:	46bd      	mov	sp, r7
 800de76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de7a:	4770      	bx	lr

0800de7c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800de7c:	b480      	push	{r7}
 800de7e:	b083      	sub	sp, #12
 800de80:	af00      	add	r7, sp, #0
 800de82:	6078      	str	r0, [r7, #4]
 800de84:	460b      	mov	r3, r1
 800de86:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800de88:	887b      	ldrh	r3, [r7, #2]
 800de8a:	011b      	lsls	r3, r3, #4
 800de8c:	3308      	adds	r3, #8
 800de8e:	687a      	ldr	r2, [r7, #4]
 800de90:	4413      	add	r3, r2
    }
 800de92:	4618      	mov	r0, r3
 800de94:	370c      	adds	r7, #12
 800de96:	46bd      	mov	sp, r7
 800de98:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de9c:	4770      	bx	lr

0800de9e <_GLOBAL__sub_I_touchgfx_init>:
 800de9e:	b580      	push	{r7, lr}
 800dea0:	af00      	add	r7, sp, #0
 800dea2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800dea6:	2001      	movs	r0, #1
 800dea8:	f7ff fefe 	bl	800dca8 <_Z41__static_initialization_and_destruction_0ii>
 800deac:	bd80      	pop	{r7, pc}

0800deae <_GLOBAL__sub_D_touchgfx_init>:
 800deae:	b580      	push	{r7, lr}
 800deb0:	af00      	add	r7, sp, #0
 800deb2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800deb6:	2000      	movs	r0, #0
 800deb8:	f7ff fef6 	bl	800dca8 <_Z41__static_initialization_and_destruction_0ii>
 800debc:	bd80      	pop	{r7, pc}
	...

0800dec0 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 800dec0:	b480      	push	{r7}
 800dec2:	b083      	sub	sp, #12
 800dec4:	af00      	add	r7, sp, #0
 800dec6:	6078      	str	r0, [r7, #4]
    {
 800dec8:	4a04      	ldr	r2, [pc, #16]	; (800dedc <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 800deca:	687b      	ldr	r3, [r7, #4]
 800decc:	601a      	str	r2, [r3, #0]
    }
 800dece:	687b      	ldr	r3, [r7, #4]
 800ded0:	4618      	mov	r0, r3
 800ded2:	370c      	adds	r7, #12
 800ded4:	46bd      	mov	sp, r7
 800ded6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800deda:	4770      	bx	lr
 800dedc:	08025ec8 	.word	0x08025ec8

0800dee0 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 800dee0:	b580      	push	{r7, lr}
 800dee2:	b082      	sub	sp, #8
 800dee4:	af00      	add	r7, sp, #0
 800dee6:	6078      	str	r0, [r7, #4]
    }
 800dee8:	6878      	ldr	r0, [r7, #4]
 800deea:	f7ff ffe9 	bl	800dec0 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800deee:	2104      	movs	r1, #4
 800def0:	6878      	ldr	r0, [r7, #4]
 800def2:	f014 fc96 	bl	8022822 <_ZdlPvj>
 800def6:	687b      	ldr	r3, [r7, #4]
 800def8:	4618      	mov	r0, r3
 800defa:	3708      	adds	r7, #8
 800defc:	46bd      	mov	sp, r7
 800defe:	bd80      	pop	{r7, pc}

0800df00 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800df00:	b480      	push	{r7}
 800df02:	b083      	sub	sp, #12
 800df04:	af00      	add	r7, sp, #0
 800df06:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800df08:	687b      	ldr	r3, [r7, #4]
 800df0a:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 800df0e:	3301      	adds	r3, #1
 800df10:	b2da      	uxtb	r2, r3
 800df12:	687b      	ldr	r3, [r7, #4]
 800df14:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
    }
 800df18:	bf00      	nop
 800df1a:	370c      	adds	r7, #12
 800df1c:	46bd      	mov	sp, r7
 800df1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df22:	4770      	bx	lr

0800df24 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 800df24:	b480      	push	{r7}
 800df26:	b083      	sub	sp, #12
 800df28:	af00      	add	r7, sp, #0
 800df2a:	6078      	str	r0, [r7, #4]
 800df2c:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 800df2e:	687b      	ldr	r3, [r7, #4]
 800df30:	683a      	ldr	r2, [r7, #0]
 800df32:	619a      	str	r2, [r3, #24]
    }
 800df34:	bf00      	nop
 800df36:	370c      	adds	r7, #12
 800df38:	46bd      	mov	sp, r7
 800df3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df3e:	4770      	bx	lr

0800df40 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    FrameBufferAllocator* getFrameBufferAllocator()
 800df40:	b480      	push	{r7}
 800df42:	b083      	sub	sp, #12
 800df44:	af00      	add	r7, sp, #0
 800df46:	6078      	str	r0, [r7, #4]
        return frameBufferAllocator;
 800df48:	687b      	ldr	r3, [r7, #4]
 800df4a:	699b      	ldr	r3, [r3, #24]
    }
 800df4c:	4618      	mov	r0, r3
 800df4e:	370c      	adds	r7, #12
 800df50:	46bd      	mov	sp, r7
 800df52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df56:	4770      	bx	lr

0800df58 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800df58:	b580      	push	{r7, lr}
 800df5a:	b082      	sub	sp, #8
 800df5c:	af00      	add	r7, sp, #0
 800df5e:	6078      	str	r0, [r7, #4]
 800df60:	460b      	mov	r3, r1
 800df62:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800df64:	78fb      	ldrb	r3, [r7, #3]
 800df66:	2b00      	cmp	r3, #0
 800df68:	d002      	beq.n	800df70 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800df6a:	78fb      	ldrb	r3, [r7, #3]
 800df6c:	2b02      	cmp	r3, #2
 800df6e:	d105      	bne.n	800df7c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800df70:	687b      	ldr	r3, [r7, #4]
 800df72:	78fa      	ldrb	r2, [r7, #3]
 800df74:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 800df78:	2301      	movs	r3, #1
 800df7a:	e027      	b.n	800dfcc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800df7c:	78fb      	ldrb	r3, [r7, #3]
 800df7e:	2b01      	cmp	r3, #1
 800df80:	d123      	bne.n	800dfca <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800df82:	687b      	ldr	r3, [r7, #4]
 800df84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800df86:	2b00      	cmp	r3, #0
 800df88:	d014      	beq.n	800dfb4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800df8a:	687b      	ldr	r3, [r7, #4]
 800df8c:	681b      	ldr	r3, [r3, #0]
 800df8e:	339c      	adds	r3, #156	; 0x9c
 800df90:	681b      	ldr	r3, [r3, #0]
 800df92:	6878      	ldr	r0, [r7, #4]
 800df94:	4798      	blx	r3
 800df96:	4603      	mov	r3, r0
 800df98:	461a      	mov	r2, r3
 800df9a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800df9e:	429a      	cmp	r2, r3
 800dfa0:	d008      	beq.n	800dfb4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800dfa2:	4b0c      	ldr	r3, [pc, #48]	; (800dfd4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800dfa4:	781b      	ldrb	r3, [r3, #0]
 800dfa6:	f083 0301 	eor.w	r3, r3, #1
 800dfaa:	b2db      	uxtb	r3, r3
 800dfac:	2b00      	cmp	r3, #0
 800dfae:	d001      	beq.n	800dfb4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800dfb0:	2301      	movs	r3, #1
 800dfb2:	e000      	b.n	800dfb6 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800dfb4:	2300      	movs	r3, #0
 800dfb6:	2b00      	cmp	r3, #0
 800dfb8:	d005      	beq.n	800dfc6 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800dfba:	687b      	ldr	r3, [r7, #4]
 800dfbc:	78fa      	ldrb	r2, [r7, #3]
 800dfbe:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 800dfc2:	2301      	movs	r3, #1
 800dfc4:	e002      	b.n	800dfcc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800dfc6:	2300      	movs	r3, #0
 800dfc8:	e000      	b.n	800dfcc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800dfca:	2300      	movs	r3, #0
    }
 800dfcc:	4618      	mov	r0, r3
 800dfce:	3708      	adds	r7, #8
 800dfd0:	46bd      	mov	sp, r7
 800dfd2:	bd80      	pop	{r7, pc}
 800dfd4:	2003242a 	.word	0x2003242a

0800dfd8 <SCB_CleanInvalidateDCache>:
{
 800dfd8:	b480      	push	{r7}
 800dfda:	b085      	sub	sp, #20
 800dfdc:	af00      	add	r7, sp, #0
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 800dfde:	4b20      	ldr	r3, [pc, #128]	; (800e060 <SCB_CleanInvalidateDCache+0x88>)
 800dfe0:	2200      	movs	r2, #0
 800dfe2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800dfe6:	f3bf 8f4f 	dsb	sy
}
 800dfea:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 800dfec:	4b1c      	ldr	r3, [pc, #112]	; (800e060 <SCB_CleanInvalidateDCache+0x88>)
 800dfee:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800dff2:	607b      	str	r3, [r7, #4]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800dff4:	687b      	ldr	r3, [r7, #4]
 800dff6:	0b5b      	lsrs	r3, r3, #13
 800dff8:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800dffc:	60fb      	str	r3, [r7, #12]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800dffe:	687b      	ldr	r3, [r7, #4]
 800e000:	08db      	lsrs	r3, r3, #3
 800e002:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800e006:	60bb      	str	r3, [r7, #8]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800e008:	68fb      	ldr	r3, [r7, #12]
 800e00a:	015a      	lsls	r2, r3, #5
 800e00c:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 800e010:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 800e012:	68ba      	ldr	r2, [r7, #8]
 800e014:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800e016:	4912      	ldr	r1, [pc, #72]	; (800e060 <SCB_CleanInvalidateDCache+0x88>)
 800e018:	4313      	orrs	r3, r2
 800e01a:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 800e01e:	68bb      	ldr	r3, [r7, #8]
 800e020:	1e5a      	subs	r2, r3, #1
 800e022:	60ba      	str	r2, [r7, #8]
 800e024:	2b00      	cmp	r3, #0
 800e026:	bf14      	ite	ne
 800e028:	2301      	movne	r3, #1
 800e02a:	2300      	moveq	r3, #0
 800e02c:	b2db      	uxtb	r3, r3
 800e02e:	2b00      	cmp	r3, #0
 800e030:	d1ea      	bne.n	800e008 <SCB_CleanInvalidateDCache+0x30>
    } while(sets-- != 0U);
 800e032:	68fb      	ldr	r3, [r7, #12]
 800e034:	1e5a      	subs	r2, r3, #1
 800e036:	60fa      	str	r2, [r7, #12]
 800e038:	2b00      	cmp	r3, #0
 800e03a:	bf14      	ite	ne
 800e03c:	2301      	movne	r3, #1
 800e03e:	2300      	moveq	r3, #0
 800e040:	b2db      	uxtb	r3, r3
 800e042:	2b00      	cmp	r3, #0
 800e044:	d1db      	bne.n	800dffe <SCB_CleanInvalidateDCache+0x26>
  __ASM volatile ("dsb 0xF":::"memory");
 800e046:	f3bf 8f4f 	dsb	sy
}
 800e04a:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800e04c:	f3bf 8f6f 	isb	sy
}
 800e050:	bf00      	nop
}
 800e052:	bf00      	nop
 800e054:	3714      	adds	r7, #20
 800e056:	46bd      	mov	sp, r7
 800e058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e05c:	4770      	bx	lr
 800e05e:	bf00      	nop
 800e060:	e000ed00 	.word	0xe000ed00

0800e064 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
       3, /* number of blocks */
       2 /* bytes per pixel */
       > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 800e064:	b5b0      	push	{r4, r5, r7, lr}
 800e066:	b082      	sub	sp, #8
 800e068:	af00      	add	r7, sp, #0
 800e06a:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800e06c:	687b      	ldr	r3, [r7, #4]
 800e06e:	4618      	mov	r0, r3
 800e070:	f000 ff0b 	bl	800ee8a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800e074:	687d      	ldr	r5, [r7, #4]
 800e076:	687b      	ldr	r3, [r7, #4]
 800e078:	681b      	ldr	r3, [r3, #0]
 800e07a:	3364      	adds	r3, #100	; 0x64
 800e07c:	681c      	ldr	r4, [r3, #0]
 800e07e:	f003 ff31 	bl	8011ee4 <_ZN8touchgfx11Application11getInstanceEv>
 800e082:	4603      	mov	r3, r0
 800e084:	4619      	mov	r1, r3
 800e086:	4628      	mov	r0, r5
 800e088:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 800e08a:	687b      	ldr	r3, [r7, #4]
 800e08c:	681b      	ldr	r3, [r3, #0]
 800e08e:	3380      	adds	r3, #128	; 0x80
 800e090:	681b      	ldr	r3, [r3, #0]
 800e092:	6878      	ldr	r0, [r7, #4]
 800e094:	4798      	blx	r3
    enableInterrupts();
 800e096:	687b      	ldr	r3, [r7, #4]
 800e098:	681b      	ldr	r3, [r3, #0]
 800e09a:	3378      	adds	r3, #120	; 0x78
 800e09c:	681b      	ldr	r3, [r3, #0]
 800e09e:	6878      	ldr	r0, [r7, #4]
 800e0a0:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 800e0a2:	687b      	ldr	r3, [r7, #4]
 800e0a4:	4906      	ldr	r1, [pc, #24]	; (800e0c0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 800e0a6:	4618      	mov	r0, r3
 800e0a8:	f7ff ff3c 	bl	800df24 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 800e0ac:	687b      	ldr	r3, [r7, #4]
 800e0ae:	2102      	movs	r1, #2
 800e0b0:	4618      	mov	r0, r3
 800e0b2:	f7ff ff51 	bl	800df58 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 800e0b6:	bf00      	nop
 800e0b8:	3708      	adds	r7, #8
 800e0ba:	46bd      	mov	sp, r7
 800e0bc:	bdb0      	pop	{r4, r5, r7, pc}
 800e0be:	bf00      	nop
 800e0c0:	20030d78 	.word	0x20030d78

0800e0c4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800e0c4:	b480      	push	{r7}
 800e0c6:	b083      	sub	sp, #12
 800e0c8:	af00      	add	r7, sp, #0
 800e0ca:	6078      	str	r0, [r7, #4]
}
 800e0cc:	bf00      	nop
 800e0ce:	370c      	adds	r7, #12
 800e0d0:	46bd      	mov	sp, r7
 800e0d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0d6:	4770      	bx	lr

0800e0d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800e0d8:	b480      	push	{r7}
 800e0da:	b083      	sub	sp, #12
 800e0dc:	af00      	add	r7, sp, #0
 800e0de:	6078      	str	r0, [r7, #4]
}
 800e0e0:	bf00      	nop
 800e0e2:	370c      	adds	r7, #12
 800e0e4:	46bd      	mov	sp, r7
 800e0e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0ea:	4770      	bx	lr

0800e0ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800e0ec:	b480      	push	{r7}
 800e0ee:	b083      	sub	sp, #12
 800e0f0:	af00      	add	r7, sp, #0
 800e0f2:	6078      	str	r0, [r7, #4]
}
 800e0f4:	bf00      	nop
 800e0f6:	370c      	adds	r7, #12
 800e0f8:	46bd      	mov	sp, r7
 800e0fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0fe:	4770      	bx	lr

0800e100 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800e100:	b480      	push	{r7}
 800e102:	b083      	sub	sp, #12
 800e104:	af00      	add	r7, sp, #0
 800e106:	6078      	str	r0, [r7, #4]
}
 800e108:	bf00      	nop
 800e10a:	370c      	adds	r7, #12
 800e10c:	46bd      	mov	sp, r7
 800e10e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e112:	4770      	bx	lr

0800e114 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800e114:	b580      	push	{r7, lr}
 800e116:	b082      	sub	sp, #8
 800e118:	af00      	add	r7, sp, #0
 800e11a:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800e11c:	687b      	ldr	r3, [r7, #4]
 800e11e:	4618      	mov	r0, r3
 800e120:	f000 fe9a 	bl	800ee58 <_ZN8touchgfx3HAL10beginFrameEv>
 800e124:	4603      	mov	r3, r0
}
 800e126:	4618      	mov	r0, r3
 800e128:	3708      	adds	r7, #8
 800e12a:	46bd      	mov	sp, r7
 800e12c:	bd80      	pop	{r7, pc}

0800e12e <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800e12e:	b580      	push	{r7, lr}
 800e130:	b082      	sub	sp, #8
 800e132:	af00      	add	r7, sp, #0
 800e134:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 800e136:	bf00      	nop
 800e138:	f7fe ffd8 	bl	800d0ec <touchgfxDisplayDriverTransmitActive>
 800e13c:	4603      	mov	r3, r0
 800e13e:	2b00      	cmp	r3, #0
 800e140:	bf14      	ite	ne
 800e142:	2301      	movne	r3, #1
 800e144:	2300      	moveq	r3, #0
 800e146:	b2db      	uxtb	r3, r3
 800e148:	2b00      	cmp	r3, #0
 800e14a:	d1f5      	bne.n	800e138 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 800e14c:	687b      	ldr	r3, [r7, #4]
 800e14e:	4618      	mov	r0, r3
 800e150:	f000 fe8e 	bl	800ee70 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800e154:	f7ff f874 	bl	800d240 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800e158:	bf00      	nop
 800e15a:	3708      	adds	r7, #8
 800e15c:	46bd      	mov	sp, r7
 800e15e:	bd80      	pop	{r7, pc}

0800e160 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800e160:	b480      	push	{r7}
 800e162:	b083      	sub	sp, #12
 800e164:	af00      	add	r7, sp, #0
 800e166:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 800e168:	2300      	movs	r3, #0
}
 800e16a:	4618      	mov	r0, r3
 800e16c:	370c      	adds	r7, #12
 800e16e:	46bd      	mov	sp, r7
 800e170:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e174:	4770      	bx	lr

0800e176 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800e176:	b480      	push	{r7}
 800e178:	b083      	sub	sp, #12
 800e17a:	af00      	add	r7, sp, #0
 800e17c:	6078      	str	r0, [r7, #4]
 800e17e:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 800e180:	bf00      	nop
 800e182:	370c      	adds	r7, #12
 800e184:	46bd      	mov	sp, r7
 800e186:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e18a:	4770      	bx	lr

0800e18c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800e18c:	b580      	push	{r7, lr}
 800e18e:	b088      	sub	sp, #32
 800e190:	af02      	add	r7, sp, #8
 800e192:	6078      	str	r0, [r7, #4]
 800e194:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800e196:	687b      	ldr	r3, [r7, #4]
 800e198:	6839      	ldr	r1, [r7, #0]
 800e19a:	4618      	mov	r0, r3
 800e19c:	f000 fe26 	bl	800edec <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 800e1a0:	687b      	ldr	r3, [r7, #4]
 800e1a2:	699a      	ldr	r2, [r3, #24]
 800e1a4:	687b      	ldr	r3, [r7, #4]
 800e1a6:	699b      	ldr	r3, [r3, #24]
 800e1a8:	681b      	ldr	r3, [r3, #0]
 800e1aa:	3304      	adds	r3, #4
 800e1ac:	681b      	ldr	r3, [r3, #0]
 800e1ae:	4610      	mov	r0, r2
 800e1b0:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 800e1b2:	f7fe ff9b 	bl	800d0ec <touchgfxDisplayDriverTransmitActive>
 800e1b6:	4603      	mov	r3, r0
 800e1b8:	2b00      	cmp	r3, #0
 800e1ba:	bf0c      	ite	eq
 800e1bc:	2301      	moveq	r3, #1
 800e1be:	2300      	movne	r3, #0
 800e1c0:	b2db      	uxtb	r3, r3
 800e1c2:	2b00      	cmp	r3, #0
 800e1c4:	d021      	beq.n	800e20a <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 800e1c6:	f107 030c 	add.w	r3, r7, #12
 800e1ca:	4618      	mov	r0, r3
 800e1cc:	f7fb fea9 	bl	8009f22 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 800e1d0:	687b      	ldr	r3, [r7, #4]
 800e1d2:	699a      	ldr	r2, [r3, #24]
 800e1d4:	687b      	ldr	r3, [r7, #4]
 800e1d6:	699b      	ldr	r3, [r3, #24]
 800e1d8:	681b      	ldr	r3, [r3, #0]
 800e1da:	330c      	adds	r3, #12
 800e1dc:	681b      	ldr	r3, [r3, #0]
 800e1de:	f107 010c 	add.w	r1, r7, #12
 800e1e2:	4610      	mov	r0, r2
 800e1e4:	4798      	blx	r3
 800e1e6:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800e1e8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800e1ec:	b299      	uxth	r1, r3
 800e1ee:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800e1f2:	b29a      	uxth	r2, r3
 800e1f4:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800e1f8:	b298      	uxth	r0, r3
 800e1fa:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800e1fe:	b29b      	uxth	r3, r3
 800e200:	9300      	str	r3, [sp, #0]
 800e202:	4603      	mov	r3, r0
 800e204:	6978      	ldr	r0, [r7, #20]
 800e206:	f7fe ff7d 	bl	800d104 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800e20a:	bf00      	nop
 800e20c:	3718      	adds	r7, #24
 800e20e:	46bd      	mov	sp, r7
 800e210:	bd80      	pop	{r7, pc}

0800e212 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800e212:	b580      	push	{r7, lr}
 800e214:	b084      	sub	sp, #16
 800e216:	af00      	add	r7, sp, #0
 800e218:	60f8      	str	r0, [r7, #12]
 800e21a:	60b9      	str	r1, [r7, #8]
 800e21c:	607a      	str	r2, [r7, #4]
 800e21e:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800e220:	68f8      	ldr	r0, [r7, #12]
 800e222:	683b      	ldr	r3, [r7, #0]
 800e224:	687a      	ldr	r2, [r7, #4]
 800e226:	68b9      	ldr	r1, [r7, #8]
 800e228:	f000 ff51 	bl	800f0ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800e22c:	4603      	mov	r3, r0
}
 800e22e:	4618      	mov	r0, r3
 800e230:	3710      	adds	r7, #16
 800e232:	46bd      	mov	sp, r7
 800e234:	bd80      	pop	{r7, pc}
	...

0800e238 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv>:

void TouchGFXGeneratedHAL::InvalidateCache()
{
 800e238:	b580      	push	{r7, lr}
 800e23a:	b082      	sub	sp, #8
 800e23c:	af00      	add	r7, sp, #0
 800e23e:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800e240:	4b08      	ldr	r3, [pc, #32]	; (800e264 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x2c>)
 800e242:	695b      	ldr	r3, [r3, #20]
 800e244:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800e248:	2b00      	cmp	r3, #0
 800e24a:	bf14      	ite	ne
 800e24c:	2301      	movne	r3, #1
 800e24e:	2300      	moveq	r3, #0
 800e250:	b2db      	uxtb	r3, r3
 800e252:	2b00      	cmp	r3, #0
 800e254:	d001      	beq.n	800e25a <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x22>
    {
        SCB_CleanInvalidateDCache();
 800e256:	f7ff febf 	bl	800dfd8 <SCB_CleanInvalidateDCache>
    }
}
 800e25a:	bf00      	nop
 800e25c:	3708      	adds	r7, #8
 800e25e:	46bd      	mov	sp, r7
 800e260:	bd80      	pop	{r7, pc}
 800e262:	bf00      	nop
 800e264:	e000ed00 	.word	0xe000ed00

0800e268 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:

void TouchGFXGeneratedHAL::FlushCache()
{
 800e268:	b580      	push	{r7, lr}
 800e26a:	b082      	sub	sp, #8
 800e26c:	af00      	add	r7, sp, #0
 800e26e:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800e270:	4b08      	ldr	r3, [pc, #32]	; (800e294 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>)
 800e272:	695b      	ldr	r3, [r3, #20]
 800e274:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800e278:	2b00      	cmp	r3, #0
 800e27a:	bf14      	ite	ne
 800e27c:	2301      	movne	r3, #1
 800e27e:	2300      	moveq	r3, #0
 800e280:	b2db      	uxtb	r3, r3
 800e282:	2b00      	cmp	r3, #0
 800e284:	d001      	beq.n	800e28a <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x22>
    {
        SCB_CleanInvalidateDCache();
 800e286:	f7ff fea7 	bl	800dfd8 <SCB_CleanInvalidateDCache>
    }
}
 800e28a:	bf00      	nop
 800e28c:	3708      	adds	r7, #8
 800e28e:	46bd      	mov	sp, r7
 800e290:	bd80      	pop	{r7, pc}
 800e292:	bf00      	nop
 800e294:	e000ed00 	.word	0xe000ed00

0800e298 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 800e298:	b480      	push	{r7}
 800e29a:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
     */
}
 800e29c:	bf00      	nop
 800e29e:	46bd      	mov	sp, r7
 800e2a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2a4:	4770      	bx	lr

0800e2a6 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 800e2a6:	b480      	push	{r7}
 800e2a8:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
     */
}
 800e2aa:	bf00      	nop
 800e2ac:	46bd      	mov	sp, r7
 800e2ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2b2:	4770      	bx	lr

0800e2b4 <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 800e2b4:	b580      	push	{r7, lr}
 800e2b6:	b086      	sub	sp, #24
 800e2b8:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 800e2ba:	f7fb f999 	bl	80095f0 <_ZN8touchgfx3HAL11getInstanceEv>
 800e2be:	4603      	mov	r3, r0
 800e2c0:	4618      	mov	r0, r3
 800e2c2:	f7ff fe3d 	bl	800df40 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 800e2c6:	60f8      	str	r0, [r7, #12]

    // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 800e2c8:	68fb      	ldr	r3, [r7, #12]
 800e2ca:	681b      	ldr	r3, [r3, #0]
 800e2cc:	3318      	adds	r3, #24
 800e2ce:	681b      	ldr	r3, [r3, #0]
 800e2d0:	68f8      	ldr	r0, [r7, #12]
 800e2d2:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 800e2d4:	68fb      	ldr	r3, [r7, #12]
 800e2d6:	681b      	ldr	r3, [r3, #0]
 800e2d8:	3308      	adds	r3, #8
 800e2da:	681b      	ldr	r3, [r3, #0]
 800e2dc:	68f8      	ldr	r0, [r7, #12]
 800e2de:	4798      	blx	r3
 800e2e0:	4603      	mov	r3, r0
 800e2e2:	2b00      	cmp	r3, #0
 800e2e4:	d01d      	beq.n	800e322 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 800e2e6:	463b      	mov	r3, r7
 800e2e8:	4618      	mov	r0, r3
 800e2ea:	f7fb fe1a 	bl	8009f22 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 800e2ee:	68fb      	ldr	r3, [r7, #12]
 800e2f0:	681b      	ldr	r3, [r3, #0]
 800e2f2:	330c      	adds	r3, #12
 800e2f4:	681b      	ldr	r3, [r3, #0]
 800e2f6:	463a      	mov	r2, r7
 800e2f8:	4611      	mov	r1, r2
 800e2fa:	68f8      	ldr	r0, [r7, #12]
 800e2fc:	4798      	blx	r3
 800e2fe:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800e300:	f9b7 3000 	ldrsh.w	r3, [r7]
 800e304:	b299      	uxth	r1, r3
 800e306:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e30a:	b29a      	uxth	r2, r3
 800e30c:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800e310:	b298      	uxth	r0, r3
 800e312:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800e316:	b29b      	uxth	r3, r3
 800e318:	9300      	str	r3, [sp, #0]
 800e31a:	4603      	mov	r3, r0
 800e31c:	68b8      	ldr	r0, [r7, #8]
 800e31e:	f7fe fef1 	bl	800d104 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800e322:	bf00      	nop
 800e324:	3710      	adds	r7, #16
 800e326:	46bd      	mov	sp, r7
 800e328:	bd80      	pop	{r7, pc}

0800e32a <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 800e32a:	b580      	push	{r7, lr}
 800e32c:	af00      	add	r7, sp, #0
    // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 800e32e:	f7ff ffc1 	bl	800e2b4 <_ZN8touchgfx16startNewTransferEv>
}
 800e332:	bf00      	nop
 800e334:	bd80      	pop	{r7, pc}

0800e336 <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 800e336:	b580      	push	{r7, lr}
 800e338:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 800e33a:	f7fb f959 	bl	80095f0 <_ZN8touchgfx3HAL11getInstanceEv>
 800e33e:	4603      	mov	r3, r0
 800e340:	4618      	mov	r0, r3
 800e342:	f7ff fddd 	bl	800df00 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 800e346:	f7fe ff6f 	bl	800d228 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 800e34a:	bf00      	nop
 800e34c:	bd80      	pop	{r7, pc}
	...

0800e350 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 800e350:	b480      	push	{r7}
 800e352:	b083      	sub	sp, #12
 800e354:	af00      	add	r7, sp, #0
 800e356:	6078      	str	r0, [r7, #4]
 800e358:	4a04      	ldr	r2, [pc, #16]	; (800e36c <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 800e35a:	687b      	ldr	r3, [r7, #4]
 800e35c:	601a      	str	r2, [r3, #0]
 800e35e:	687b      	ldr	r3, [r7, #4]
 800e360:	4618      	mov	r0, r3
 800e362:	370c      	adds	r7, #12
 800e364:	46bd      	mov	sp, r7
 800e366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e36a:	4770      	bx	lr
 800e36c:	08025ec8 	.word	0x08025ec8

0800e370 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 800e370:	b5b0      	push	{r4, r5, r7, lr}
 800e372:	b084      	sub	sp, #16
 800e374:	af00      	add	r7, sp, #0
 800e376:	6078      	str	r0, [r7, #4]
    {
 800e378:	687b      	ldr	r3, [r7, #4]
 800e37a:	4618      	mov	r0, r3
 800e37c:	f7ff ffe8 	bl	800e350 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 800e380:	4a1a      	ldr	r2, [pc, #104]	; (800e3ec <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x7c>)
 800e382:	687b      	ldr	r3, [r7, #4]
 800e384:	601a      	str	r2, [r3, #0]
 800e386:	687a      	ldr	r2, [r7, #4]
 800e388:	f241 6388 	movw	r3, #5768	; 0x1688
 800e38c:	4413      	add	r3, r2
 800e38e:	2402      	movs	r4, #2
 800e390:	461d      	mov	r5, r3
 800e392:	e004      	b.n	800e39e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x2e>
 800e394:	4628      	mov	r0, r5
 800e396:	f7fb fdc4 	bl	8009f22 <_ZN8touchgfx4RectC1Ev>
 800e39a:	3508      	adds	r5, #8
 800e39c:	3c01      	subs	r4, #1
 800e39e:	2c00      	cmp	r4, #0
 800e3a0:	daf8      	bge.n	800e394 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 800e3a2:	687b      	ldr	r3, [r7, #4]
 800e3a4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e3a8:	461a      	mov	r2, r3
 800e3aa:	f04f 33ff 	mov.w	r3, #4294967295
 800e3ae:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        drawingBlock = -1;
 800e3b2:	687b      	ldr	r3, [r7, #4]
 800e3b4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e3b8:	461a      	mov	r2, r3
 800e3ba:	f04f 33ff 	mov.w	r3, #4294967295
 800e3be:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        for (uint32_t i = 0; i < blocks; i++)
 800e3c2:	2300      	movs	r3, #0
 800e3c4:	60fb      	str	r3, [r7, #12]
 800e3c6:	e008      	b.n	800e3da <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 800e3c8:	687a      	ldr	r2, [r7, #4]
 800e3ca:	68fb      	ldr	r3, [r7, #12]
 800e3cc:	4413      	add	r3, r2
 800e3ce:	3304      	adds	r3, #4
 800e3d0:	2200      	movs	r2, #0
 800e3d2:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 800e3d4:	68fb      	ldr	r3, [r7, #12]
 800e3d6:	3301      	adds	r3, #1
 800e3d8:	60fb      	str	r3, [r7, #12]
 800e3da:	68fb      	ldr	r3, [r7, #12]
 800e3dc:	2b02      	cmp	r3, #2
 800e3de:	d9f3      	bls.n	800e3c8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x58>
        }
    }
 800e3e0:	687b      	ldr	r3, [r7, #4]
 800e3e2:	4618      	mov	r0, r3
 800e3e4:	3710      	adds	r7, #16
 800e3e6:	46bd      	mov	sp, r7
 800e3e8:	bdb0      	pop	{r4, r5, r7, pc}
 800e3ea:	bf00      	nop
 800e3ec:	08025dc4 	.word	0x08025dc4

0800e3f0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 800e3f0:	b580      	push	{r7, lr}
 800e3f2:	b082      	sub	sp, #8
 800e3f4:	af00      	add	r7, sp, #0
 800e3f6:	6078      	str	r0, [r7, #4]
 800e3f8:	4a05      	ldr	r2, [pc, #20]	; (800e410 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev+0x20>)
 800e3fa:	687b      	ldr	r3, [r7, #4]
 800e3fc:	601a      	str	r2, [r3, #0]
 800e3fe:	687b      	ldr	r3, [r7, #4]
 800e400:	4618      	mov	r0, r3
 800e402:	f7ff fd5d 	bl	800dec0 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800e406:	687b      	ldr	r3, [r7, #4]
 800e408:	4618      	mov	r0, r3
 800e40a:	3708      	adds	r7, #8
 800e40c:	46bd      	mov	sp, r7
 800e40e:	bd80      	pop	{r7, pc}
 800e410:	08025dc4 	.word	0x08025dc4

0800e414 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED0Ev>:
 800e414:	b580      	push	{r7, lr}
 800e416:	b082      	sub	sp, #8
 800e418:	af00      	add	r7, sp, #0
 800e41a:	6078      	str	r0, [r7, #4]
 800e41c:	6878      	ldr	r0, [r7, #4]
 800e41e:	f7ff ffe7 	bl	800e3f0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
 800e422:	f241 61a8 	movw	r1, #5800	; 0x16a8
 800e426:	6878      	ldr	r0, [r7, #4]
 800e428:	f014 f9fb 	bl	8022822 <_ZdlPvj>
 800e42c:	687b      	ldr	r3, [r7, #4]
 800e42e:	4618      	mov	r0, r3
 800e430:	3708      	adds	r7, #8
 800e432:	46bd      	mov	sp, r7
 800e434:	bd80      	pop	{r7, pc}
	...

0800e438 <_Z41__static_initialization_and_destruction_0ii>:
 800e438:	b580      	push	{r7, lr}
 800e43a:	b082      	sub	sp, #8
 800e43c:	af00      	add	r7, sp, #0
 800e43e:	6078      	str	r0, [r7, #4]
 800e440:	6039      	str	r1, [r7, #0]
 800e442:	687b      	ldr	r3, [r7, #4]
 800e444:	2b01      	cmp	r3, #1
 800e446:	d107      	bne.n	800e458 <_Z41__static_initialization_and_destruction_0ii+0x20>
 800e448:	683b      	ldr	r3, [r7, #0]
 800e44a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e44e:	4293      	cmp	r3, r2
 800e450:	d102      	bne.n	800e458 <_Z41__static_initialization_and_destruction_0ii+0x20>
       > blockAllocator;
 800e452:	4809      	ldr	r0, [pc, #36]	; (800e478 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800e454:	f7ff ff8c 	bl	800e370 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>
 800e458:	687b      	ldr	r3, [r7, #4]
 800e45a:	2b00      	cmp	r3, #0
 800e45c:	d107      	bne.n	800e46e <_Z41__static_initialization_and_destruction_0ii+0x36>
 800e45e:	683b      	ldr	r3, [r7, #0]
 800e460:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e464:	4293      	cmp	r3, r2
 800e466:	d102      	bne.n	800e46e <_Z41__static_initialization_and_destruction_0ii+0x36>
 800e468:	4803      	ldr	r0, [pc, #12]	; (800e478 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800e46a:	f7ff ffc1 	bl	800e3f0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
}
 800e46e:	bf00      	nop
 800e470:	3708      	adds	r7, #8
 800e472:	46bd      	mov	sp, r7
 800e474:	bd80      	pop	{r7, pc}
 800e476:	bf00      	nop
 800e478:	20030d78 	.word	0x20030d78

0800e47c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 800e47c:	b580      	push	{r7, lr}
 800e47e:	b086      	sub	sp, #24
 800e480:	af00      	add	r7, sp, #0
 800e482:	60f8      	str	r0, [r7, #12]
 800e484:	4608      	mov	r0, r1
 800e486:	4611      	mov	r1, r2
 800e488:	461a      	mov	r2, r3
 800e48a:	4603      	mov	r3, r0
 800e48c:	817b      	strh	r3, [r7, #10]
 800e48e:	460b      	mov	r3, r1
 800e490:	813b      	strh	r3, [r7, #8]
 800e492:	4613      	mov	r3, r2
 800e494:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 800e496:	68fb      	ldr	r3, [r7, #12]
 800e498:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e49c:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800e4a0:	3301      	adds	r3, #1
 800e4a2:	68fa      	ldr	r2, [r7, #12]
 800e4a4:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 800e4a8:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        if (drawingBlock == blocks)
 800e4ac:	68fb      	ldr	r3, [r7, #12]
 800e4ae:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e4b2:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800e4b6:	2b03      	cmp	r3, #3
 800e4b8:	d109      	bne.n	800e4ce <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 800e4ba:	68fb      	ldr	r3, [r7, #12]
 800e4bc:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e4c0:	461a      	mov	r2, r3
 800e4c2:	2300      	movs	r3, #0
 800e4c4:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        }
        while (state[drawingBlock] != EMPTY)
 800e4c8:	e001      	b.n	800e4ce <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 800e4ca:	f7ff fee5 	bl	800e298 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 800e4ce:	68fb      	ldr	r3, [r7, #12]
 800e4d0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e4d4:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800e4d8:	68fa      	ldr	r2, [r7, #12]
 800e4da:	4413      	add	r3, r2
 800e4dc:	791b      	ldrb	r3, [r3, #4]
 800e4de:	b2db      	uxtb	r3, r3
 800e4e0:	2b00      	cmp	r3, #0
 800e4e2:	bf14      	ite	ne
 800e4e4:	2301      	movne	r3, #1
 800e4e6:	2300      	moveq	r3, #0
 800e4e8:	b2db      	uxtb	r3, r3
 800e4ea:	2b00      	cmp	r3, #0
 800e4ec:	d1ed      	bne.n	800e4ca <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 800e4ee:	68fb      	ldr	r3, [r7, #12]
 800e4f0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e4f4:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800e4f8:	68fa      	ldr	r2, [r7, #12]
 800e4fa:	4413      	add	r3, r2
 800e4fc:	791b      	ldrb	r3, [r3, #4]
 800e4fe:	b2db      	uxtb	r3, r3
 800e500:	2b00      	cmp	r3, #0
 800e502:	d005      	beq.n	800e510 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 800e504:	4b38      	ldr	r3, [pc, #224]	; (800e5e8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 800e506:	4a39      	ldr	r2, [pc, #228]	; (800e5ec <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 800e508:	21aa      	movs	r1, #170	; 0xaa
 800e50a:	4839      	ldr	r0, [pc, #228]	; (800e5f0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 800e50c:	f014 ff14 	bl	8023338 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 800e510:	68fb      	ldr	r3, [r7, #12]
 800e512:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e516:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800e51a:	68fa      	ldr	r2, [r7, #12]
 800e51c:	4413      	add	r3, r2
 800e51e:	2201      	movs	r2, #1
 800e520:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 800e522:	88fb      	ldrh	r3, [r7, #6]
 800e524:	005b      	lsls	r3, r3, #1
 800e526:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 800e528:	697b      	ldr	r3, [r7, #20]
 800e52a:	f44f 62f0 	mov.w	r2, #1920	; 0x780
 800e52e:	fbb2 f3f3 	udiv	r3, r2, r3
 800e532:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 800e534:	68fb      	ldr	r3, [r7, #12]
 800e536:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e53a:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 800e53e:	4613      	mov	r3, r2
 800e540:	011b      	lsls	r3, r3, #4
 800e542:	1a9b      	subs	r3, r3, r2
 800e544:	01db      	lsls	r3, r3, #7
 800e546:	3308      	adds	r3, #8
 800e548:	68fa      	ldr	r2, [r7, #12]
 800e54a:	441a      	add	r2, r3
 800e54c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e54e:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 800e550:	68fb      	ldr	r3, [r7, #12]
 800e552:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e556:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 800e55a:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800e55e:	68fb      	ldr	r3, [r7, #12]
 800e560:	f202 22d1 	addw	r2, r2, #721	; 0x2d1
 800e564:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 800e568:	68fb      	ldr	r3, [r7, #12]
 800e56a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e56e:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800e572:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 800e576:	68fa      	ldr	r2, [r7, #12]
 800e578:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800e57c:	00db      	lsls	r3, r3, #3
 800e57e:	4413      	add	r3, r2
 800e580:	460a      	mov	r2, r1
 800e582:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 800e584:	68fb      	ldr	r3, [r7, #12]
 800e586:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e58a:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800e58e:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 800e592:	68fa      	ldr	r2, [r7, #12]
 800e594:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800e598:	00db      	lsls	r3, r3, #3
 800e59a:	4413      	add	r3, r2
 800e59c:	460a      	mov	r2, r1
 800e59e:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 800e5a0:	8c3a      	ldrh	r2, [r7, #32]
 800e5a2:	693b      	ldr	r3, [r7, #16]
 800e5a4:	429a      	cmp	r2, r3
 800e5a6:	bfa8      	it	ge
 800e5a8:	461a      	movge	r2, r3
 800e5aa:	68fb      	ldr	r3, [r7, #12]
 800e5ac:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e5b0:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800e5b4:	b211      	sxth	r1, r2
 800e5b6:	68fa      	ldr	r2, [r7, #12]
 800e5b8:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800e5bc:	00db      	lsls	r3, r3, #3
 800e5be:	4413      	add	r3, r2
 800e5c0:	460a      	mov	r2, r1
 800e5c2:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 800e5c4:	68fb      	ldr	r3, [r7, #12]
 800e5c6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e5ca:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800e5ce:	68fa      	ldr	r2, [r7, #12]
 800e5d0:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800e5d4:	00db      	lsls	r3, r3, #3
 800e5d6:	4413      	add	r3, r2
 800e5d8:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800e5dc:	b29b      	uxth	r3, r3
    }
 800e5de:	4618      	mov	r0, r3
 800e5e0:	3718      	adds	r7, #24
 800e5e2:	46bd      	mov	sp, r7
 800e5e4:	bd80      	pop	{r7, pc}
 800e5e6:	bf00      	nop
 800e5e8:	08024fa0 	.word	0x08024fa0
 800e5ec:	08024fc0 	.word	0x08024fc0
 800e5f0:	080250f4 	.word	0x080250f4

0800e5f4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 800e5f4:	b580      	push	{r7, lr}
 800e5f6:	b082      	sub	sp, #8
 800e5f8:	af00      	add	r7, sp, #0
 800e5fa:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 800e5fc:	687b      	ldr	r3, [r7, #4]
 800e5fe:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e602:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800e606:	687a      	ldr	r2, [r7, #4]
 800e608:	4413      	add	r3, r2
 800e60a:	791b      	ldrb	r3, [r3, #4]
 800e60c:	b2db      	uxtb	r3, r3
 800e60e:	2b01      	cmp	r3, #1
 800e610:	d005      	beq.n	800e61e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 800e612:	4b0a      	ldr	r3, [pc, #40]	; (800e63c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 800e614:	4a0a      	ldr	r2, [pc, #40]	; (800e640 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 800e616:	21b9      	movs	r1, #185	; 0xb9
 800e618:	480a      	ldr	r0, [pc, #40]	; (800e644 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 800e61a:	f014 fe8d 	bl	8023338 <__assert_func>
        state[drawingBlock] = DRAWN;
 800e61e:	687b      	ldr	r3, [r7, #4]
 800e620:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e624:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800e628:	687a      	ldr	r2, [r7, #4]
 800e62a:	4413      	add	r3, r2
 800e62c:	2202      	movs	r2, #2
 800e62e:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 800e630:	f7ff fe39 	bl	800e2a6 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 800e634:	bf00      	nop
 800e636:	3708      	adds	r7, #8
 800e638:	46bd      	mov	sp, r7
 800e63a:	bd80      	pop	{r7, pc}
 800e63c:	08025148 	.word	0x08025148
 800e640:	0802516c 	.word	0x0802516c
 800e644:	080250f4 	.word	0x080250f4

0800e648 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 800e648:	b480      	push	{r7}
 800e64a:	b085      	sub	sp, #20
 800e64c:	af00      	add	r7, sp, #0
 800e64e:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 800e650:	2300      	movs	r3, #0
 800e652:	60fb      	str	r3, [r7, #12]
 800e654:	e011      	b.n	800e67a <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 800e656:	687a      	ldr	r2, [r7, #4]
 800e658:	68fb      	ldr	r3, [r7, #12]
 800e65a:	4413      	add	r3, r2
 800e65c:	3304      	adds	r3, #4
 800e65e:	781b      	ldrb	r3, [r3, #0]
 800e660:	b2db      	uxtb	r3, r3
 800e662:	2b02      	cmp	r3, #2
 800e664:	bf0c      	ite	eq
 800e666:	2301      	moveq	r3, #1
 800e668:	2300      	movne	r3, #0
 800e66a:	b2db      	uxtb	r3, r3
 800e66c:	2b00      	cmp	r3, #0
 800e66e:	d001      	beq.n	800e674 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 800e670:	2301      	movs	r3, #1
 800e672:	e006      	b.n	800e682 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 800e674:	68fb      	ldr	r3, [r7, #12]
 800e676:	3301      	adds	r3, #1
 800e678:	60fb      	str	r3, [r7, #12]
 800e67a:	68fb      	ldr	r3, [r7, #12]
 800e67c:	2b02      	cmp	r3, #2
 800e67e:	d9ea      	bls.n	800e656 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 800e680:	2300      	movs	r3, #0
    }
 800e682:	4618      	mov	r0, r3
 800e684:	3714      	adds	r7, #20
 800e686:	46bd      	mov	sp, r7
 800e688:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e68c:	4770      	bx	lr
	...

0800e690 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 800e690:	b580      	push	{r7, lr}
 800e692:	b082      	sub	sp, #8
 800e694:	af00      	add	r7, sp, #0
 800e696:	6078      	str	r0, [r7, #4]
 800e698:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 800e69a:	687b      	ldr	r3, [r7, #4]
 800e69c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e6a0:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e6a4:	3301      	adds	r3, #1
 800e6a6:	687a      	ldr	r2, [r7, #4]
 800e6a8:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 800e6ac:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        if (sendingBlock == blocks)
 800e6b0:	687b      	ldr	r3, [r7, #4]
 800e6b2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e6b6:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e6ba:	2b03      	cmp	r3, #3
 800e6bc:	d106      	bne.n	800e6cc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 800e6be:	687b      	ldr	r3, [r7, #4]
 800e6c0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e6c4:	461a      	mov	r2, r3
 800e6c6:	2300      	movs	r3, #0
 800e6c8:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        }
        assert(state[sendingBlock] == DRAWN);
 800e6cc:	687b      	ldr	r3, [r7, #4]
 800e6ce:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e6d2:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e6d6:	687a      	ldr	r2, [r7, #4]
 800e6d8:	4413      	add	r3, r2
 800e6da:	791b      	ldrb	r3, [r3, #4]
 800e6dc:	b2db      	uxtb	r3, r3
 800e6de:	2b02      	cmp	r3, #2
 800e6e0:	d005      	beq.n	800e6ee <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 800e6e2:	4b16      	ldr	r3, [pc, #88]	; (800e73c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 800e6e4:	4a16      	ldr	r2, [pc, #88]	; (800e740 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 800e6e6:	21dd      	movs	r1, #221	; 0xdd
 800e6e8:	4816      	ldr	r0, [pc, #88]	; (800e744 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 800e6ea:	f014 fe25 	bl	8023338 <__assert_func>
        rect = blockRect[sendingBlock];
 800e6ee:	687b      	ldr	r3, [r7, #4]
 800e6f0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e6f4:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e6f8:	683a      	ldr	r2, [r7, #0]
 800e6fa:	6879      	ldr	r1, [r7, #4]
 800e6fc:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800e700:	00db      	lsls	r3, r3, #3
 800e702:	440b      	add	r3, r1
 800e704:	cb03      	ldmia	r3!, {r0, r1}
 800e706:	6010      	str	r0, [r2, #0]
 800e708:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 800e70a:	687b      	ldr	r3, [r7, #4]
 800e70c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e710:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e714:	687a      	ldr	r2, [r7, #4]
 800e716:	4413      	add	r3, r2
 800e718:	2203      	movs	r2, #3
 800e71a:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 800e71c:	687b      	ldr	r3, [r7, #4]
 800e71e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e722:	f8d3 26a0 	ldr.w	r2, [r3, #1696]	; 0x6a0
 800e726:	4613      	mov	r3, r2
 800e728:	011b      	lsls	r3, r3, #4
 800e72a:	1a9b      	subs	r3, r3, r2
 800e72c:	01db      	lsls	r3, r3, #7
 800e72e:	3308      	adds	r3, #8
 800e730:	687a      	ldr	r2, [r7, #4]
 800e732:	4413      	add	r3, r2
    }
 800e734:	4618      	mov	r0, r3
 800e736:	3708      	adds	r7, #8
 800e738:	46bd      	mov	sp, r7
 800e73a:	bd80      	pop	{r7, pc}
 800e73c:	08025240 	.word	0x08025240
 800e740:	08025260 	.word	0x08025260
 800e744:	080250f4 	.word	0x080250f4

0800e748 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 800e748:	b580      	push	{r7, lr}
 800e74a:	b084      	sub	sp, #16
 800e74c:	af00      	add	r7, sp, #0
 800e74e:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 800e750:	687b      	ldr	r3, [r7, #4]
 800e752:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e756:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e75a:	3301      	adds	r3, #1
 800e75c:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 800e75e:	68fb      	ldr	r3, [r7, #12]
 800e760:	2b03      	cmp	r3, #3
 800e762:	d101      	bne.n	800e768 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 800e764:	2300      	movs	r3, #0
 800e766:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 800e768:	687a      	ldr	r2, [r7, #4]
 800e76a:	68fb      	ldr	r3, [r7, #12]
 800e76c:	4413      	add	r3, r2
 800e76e:	3304      	adds	r3, #4
 800e770:	781b      	ldrb	r3, [r3, #0]
 800e772:	b2db      	uxtb	r3, r3
 800e774:	2b02      	cmp	r3, #2
 800e776:	d005      	beq.n	800e784 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 800e778:	4b07      	ldr	r3, [pc, #28]	; (800e798 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 800e77a:	4a08      	ldr	r2, [pc, #32]	; (800e79c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 800e77c:	21ea      	movs	r1, #234	; 0xea
 800e77e:	4808      	ldr	r0, [pc, #32]	; (800e7a0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 800e780:	f014 fdda 	bl	8023338 <__assert_func>
        return blockRect[nextSendingBlock];
 800e784:	68fb      	ldr	r3, [r7, #12]
 800e786:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800e78a:	00db      	lsls	r3, r3, #3
 800e78c:	687a      	ldr	r2, [r7, #4]
 800e78e:	4413      	add	r3, r2
    }
 800e790:	4618      	mov	r0, r3
 800e792:	3710      	adds	r7, #16
 800e794:	46bd      	mov	sp, r7
 800e796:	bd80      	pop	{r7, pc}
 800e798:	08025360 	.word	0x08025360
 800e79c:	08025384 	.word	0x08025384
 800e7a0:	080250f4 	.word	0x080250f4

0800e7a4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 800e7a4:	b480      	push	{r7}
 800e7a6:	b085      	sub	sp, #20
 800e7a8:	af00      	add	r7, sp, #0
 800e7aa:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 800e7ac:	687b      	ldr	r3, [r7, #4]
 800e7ae:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e7b2:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800e7b6:	3301      	adds	r3, #1
 800e7b8:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 800e7ba:	68fb      	ldr	r3, [r7, #12]
 800e7bc:	2b03      	cmp	r3, #3
 800e7be:	d101      	bne.n	800e7c4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 800e7c0:	2300      	movs	r3, #0
 800e7c2:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 800e7c4:	687a      	ldr	r2, [r7, #4]
 800e7c6:	68fb      	ldr	r3, [r7, #12]
 800e7c8:	4413      	add	r3, r2
 800e7ca:	3304      	adds	r3, #4
 800e7cc:	781b      	ldrb	r3, [r3, #0]
 800e7ce:	b2db      	uxtb	r3, r3
 800e7d0:	2b00      	cmp	r3, #0
 800e7d2:	bf0c      	ite	eq
 800e7d4:	2301      	moveq	r3, #1
 800e7d6:	2300      	movne	r3, #0
 800e7d8:	b2db      	uxtb	r3, r3
    }
 800e7da:	4618      	mov	r0, r3
 800e7dc:	3714      	adds	r7, #20
 800e7de:	46bd      	mov	sp, r7
 800e7e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7e4:	4770      	bx	lr
	...

0800e7e8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 800e7e8:	b580      	push	{r7, lr}
 800e7ea:	b082      	sub	sp, #8
 800e7ec:	af00      	add	r7, sp, #0
 800e7ee:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 800e7f0:	687b      	ldr	r3, [r7, #4]
 800e7f2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e7f6:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e7fa:	687a      	ldr	r2, [r7, #4]
 800e7fc:	4413      	add	r3, r2
 800e7fe:	791b      	ldrb	r3, [r3, #4]
 800e800:	b2db      	uxtb	r3, r3
 800e802:	2b03      	cmp	r3, #3
 800e804:	d005      	beq.n	800e812 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 800e806:	4b09      	ldr	r3, [pc, #36]	; (800e82c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 800e808:	4a09      	ldr	r2, [pc, #36]	; (800e830 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 800e80a:	21ff      	movs	r1, #255	; 0xff
 800e80c:	4809      	ldr	r0, [pc, #36]	; (800e834 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 800e80e:	f014 fd93 	bl	8023338 <__assert_func>
        state[sendingBlock] = EMPTY;
 800e812:	687b      	ldr	r3, [r7, #4]
 800e814:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e818:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e81c:	687a      	ldr	r2, [r7, #4]
 800e81e:	4413      	add	r3, r2
 800e820:	2200      	movs	r2, #0
 800e822:	711a      	strb	r2, [r3, #4]
    }
 800e824:	bf00      	nop
 800e826:	3708      	adds	r7, #8
 800e828:	46bd      	mov	sp, r7
 800e82a:	bd80      	pop	{r7, pc}
 800e82c:	08025464 	.word	0x08025464
 800e830:	08025484 	.word	0x08025484
 800e834:	080250f4 	.word	0x080250f4

0800e838 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800e838:	b580      	push	{r7, lr}
 800e83a:	af00      	add	r7, sp, #0
 800e83c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e840:	2001      	movs	r0, #1
 800e842:	f7ff fdf9 	bl	800e438 <_Z41__static_initialization_and_destruction_0ii>
 800e846:	bd80      	pop	{r7, pc}

0800e848 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800e848:	b580      	push	{r7, lr}
 800e84a:	af00      	add	r7, sp, #0
 800e84c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e850:	2000      	movs	r0, #0
 800e852:	f7ff fdf1 	bl	800e438 <_Z41__static_initialization_and_destruction_0ii>
 800e856:	bd80      	pop	{r7, pc}

0800e858 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800e858:	8880      	ldrh	r0, [r0, #4]
 800e85a:	4770      	bx	lr

0800e85c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800e85c:	b570      	push	{r4, r5, r6, lr}
 800e85e:	6803      	ldr	r3, [r0, #0]
 800e860:	460c      	mov	r4, r1
 800e862:	2100      	movs	r1, #0
 800e864:	4605      	mov	r5, r0
 800e866:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e868:	4798      	blx	r3
 800e86a:	4606      	mov	r6, r0
 800e86c:	682b      	ldr	r3, [r5, #0]
 800e86e:	4628      	mov	r0, r5
 800e870:	1ba4      	subs	r4, r4, r6
 800e872:	6a1b      	ldr	r3, [r3, #32]
 800e874:	b2a4      	uxth	r4, r4
 800e876:	4798      	blx	r3
 800e878:	fbb4 f0f0 	udiv	r0, r4, r0
 800e87c:	bd70      	pop	{r4, r5, r6, pc}

0800e87e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800e87e:	2300      	movs	r3, #0
 800e880:	8083      	strh	r3, [r0, #4]
 800e882:	4770      	bx	lr

0800e884 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800e884:	b510      	push	{r4, lr}
 800e886:	6803      	ldr	r3, [r0, #0]
 800e888:	4604      	mov	r4, r0
 800e88a:	8881      	ldrh	r1, [r0, #4]
 800e88c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e88e:	4798      	blx	r3
 800e890:	88a3      	ldrh	r3, [r4, #4]
 800e892:	3301      	adds	r3, #1
 800e894:	80a3      	strh	r3, [r4, #4]
 800e896:	bd10      	pop	{r4, pc}

0800e898 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800e898:	6803      	ldr	r3, [r0, #0]
 800e89a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e89c:	4718      	bx	r3

0800e89e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800e89e:	4770      	bx	lr

0800e8a0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800e8a0:	4a02      	ldr	r2, [pc, #8]	; (800e8ac <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800e8a2:	6002      	str	r2, [r0, #0]
 800e8a4:	2200      	movs	r2, #0
 800e8a6:	8082      	strh	r2, [r0, #4]
 800e8a8:	4770      	bx	lr
 800e8aa:	bf00      	nop
 800e8ac:	08025ef4 	.word	0x08025ef4

0800e8b0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800e8b0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e8b2:	2000      	movs	r0, #0
 800e8b4:	b12b      	cbz	r3, 800e8c2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800e8b6:	b920      	cbnz	r0, 800e8c2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800e8b8:	1a5a      	subs	r2, r3, r1
 800e8ba:	699b      	ldr	r3, [r3, #24]
 800e8bc:	4250      	negs	r0, r2
 800e8be:	4150      	adcs	r0, r2
 800e8c0:	e7f8      	b.n	800e8b4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800e8c2:	4770      	bx	lr

0800e8c4 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800e8c4:	2300      	movs	r3, #0
 800e8c6:	6148      	str	r0, [r1, #20]
 800e8c8:	618b      	str	r3, [r1, #24]
 800e8ca:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e8cc:	b913      	cbnz	r3, 800e8d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800e8ce:	6281      	str	r1, [r0, #40]	; 0x28
 800e8d0:	4770      	bx	lr
 800e8d2:	4613      	mov	r3, r2
 800e8d4:	699a      	ldr	r2, [r3, #24]
 800e8d6:	2a00      	cmp	r2, #0
 800e8d8:	d1fb      	bne.n	800e8d2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800e8da:	6199      	str	r1, [r3, #24]
 800e8dc:	4770      	bx	lr

0800e8de <_ZN8touchgfx9Container9removeAllEv>:
 800e8de:	2200      	movs	r2, #0
 800e8e0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e8e2:	b123      	cbz	r3, 800e8ee <_ZN8touchgfx9Container9removeAllEv+0x10>
 800e8e4:	6999      	ldr	r1, [r3, #24]
 800e8e6:	6281      	str	r1, [r0, #40]	; 0x28
 800e8e8:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800e8ec:	e7f8      	b.n	800e8e0 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800e8ee:	4770      	bx	lr

0800e8f0 <_ZN8touchgfx9Container6unlinkEv>:
 800e8f0:	2300      	movs	r3, #0
 800e8f2:	6283      	str	r3, [r0, #40]	; 0x28
 800e8f4:	4770      	bx	lr

0800e8f6 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800e8f6:	2200      	movs	r2, #0
 800e8f8:	8002      	strh	r2, [r0, #0]
 800e8fa:	8042      	strh	r2, [r0, #2]
 800e8fc:	8082      	strh	r2, [r0, #4]
 800e8fe:	80c2      	strh	r2, [r0, #6]
 800e900:	4770      	bx	lr

0800e902 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800e902:	b570      	push	{r4, r5, r6, lr}
 800e904:	460d      	mov	r5, r1
 800e906:	4616      	mov	r6, r2
 800e908:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e90a:	b13c      	cbz	r4, 800e91c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800e90c:	6823      	ldr	r3, [r4, #0]
 800e90e:	4620      	mov	r0, r4
 800e910:	4632      	mov	r2, r6
 800e912:	4629      	mov	r1, r5
 800e914:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800e916:	4798      	blx	r3
 800e918:	69a4      	ldr	r4, [r4, #24]
 800e91a:	e7f6      	b.n	800e90a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800e91c:	bd70      	pop	{r4, r5, r6, pc}

0800e91e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800e91e:	b538      	push	{r3, r4, r5, lr}
 800e920:	460d      	mov	r5, r1
 800e922:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e924:	b134      	cbz	r4, 800e934 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800e926:	682b      	ldr	r3, [r5, #0]
 800e928:	4621      	mov	r1, r4
 800e92a:	4628      	mov	r0, r5
 800e92c:	689b      	ldr	r3, [r3, #8]
 800e92e:	4798      	blx	r3
 800e930:	69a4      	ldr	r4, [r4, #24]
 800e932:	e7f7      	b.n	800e924 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800e934:	bd38      	pop	{r3, r4, r5, pc}

0800e936 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800e936:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e938:	b19b      	cbz	r3, 800e962 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800e93a:	428b      	cmp	r3, r1
 800e93c:	d109      	bne.n	800e952 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800e93e:	699a      	ldr	r2, [r3, #24]
 800e940:	2100      	movs	r1, #0
 800e942:	6159      	str	r1, [r3, #20]
 800e944:	6282      	str	r2, [r0, #40]	; 0x28
 800e946:	b902      	cbnz	r2, 800e94a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800e948:	4770      	bx	lr
 800e94a:	6199      	str	r1, [r3, #24]
 800e94c:	4770      	bx	lr
 800e94e:	4613      	mov	r3, r2
 800e950:	b13a      	cbz	r2, 800e962 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800e952:	699a      	ldr	r2, [r3, #24]
 800e954:	428a      	cmp	r2, r1
 800e956:	d1fa      	bne.n	800e94e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800e958:	698a      	ldr	r2, [r1, #24]
 800e95a:	619a      	str	r2, [r3, #24]
 800e95c:	2300      	movs	r3, #0
 800e95e:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800e962:	4770      	bx	lr

0800e964 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800e964:	b410      	push	{r4}
 800e966:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e968:	4604      	mov	r4, r0
 800e96a:	b92b      	cbnz	r3, 800e978 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800e96c:	6803      	ldr	r3, [r0, #0]
 800e96e:	4611      	mov	r1, r2
 800e970:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e974:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800e976:	4718      	bx	r3
 800e978:	b941      	cbnz	r1, 800e98c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800e97a:	6193      	str	r3, [r2, #24]
 800e97c:	6282      	str	r2, [r0, #40]	; 0x28
 800e97e:	6154      	str	r4, [r2, #20]
 800e980:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e984:	4770      	bx	lr
 800e986:	4603      	mov	r3, r0
 800e988:	2800      	cmp	r0, #0
 800e98a:	d0f9      	beq.n	800e980 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800e98c:	4299      	cmp	r1, r3
 800e98e:	6998      	ldr	r0, [r3, #24]
 800e990:	d1f9      	bne.n	800e986 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800e992:	6190      	str	r0, [r2, #24]
 800e994:	618a      	str	r2, [r1, #24]
 800e996:	e7f2      	b.n	800e97e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800e998 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800e998:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e99c:	461f      	mov	r7, r3
 800e99e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800e9a2:	460d      	mov	r5, r1
 800e9a4:	4616      	mov	r6, r2
 800e9a6:	b103      	cbz	r3, 800e9aa <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800e9a8:	6038      	str	r0, [r7, #0]
 800e9aa:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e9ac:	b314      	cbz	r4, 800e9f4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800e9ae:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800e9b2:	b1eb      	cbz	r3, 800e9f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e9b4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e9b8:	428d      	cmp	r5, r1
 800e9ba:	db19      	blt.n	800e9f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e9bc:	b289      	uxth	r1, r1
 800e9be:	8923      	ldrh	r3, [r4, #8]
 800e9c0:	440b      	add	r3, r1
 800e9c2:	b21b      	sxth	r3, r3
 800e9c4:	429d      	cmp	r5, r3
 800e9c6:	da13      	bge.n	800e9f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e9c8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e9cc:	4296      	cmp	r6, r2
 800e9ce:	db0f      	blt.n	800e9f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e9d0:	b292      	uxth	r2, r2
 800e9d2:	8963      	ldrh	r3, [r4, #10]
 800e9d4:	4413      	add	r3, r2
 800e9d6:	b21b      	sxth	r3, r3
 800e9d8:	429e      	cmp	r6, r3
 800e9da:	da09      	bge.n	800e9f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e9dc:	6823      	ldr	r3, [r4, #0]
 800e9de:	1ab2      	subs	r2, r6, r2
 800e9e0:	1a69      	subs	r1, r5, r1
 800e9e2:	4620      	mov	r0, r4
 800e9e4:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800e9e8:	b212      	sxth	r2, r2
 800e9ea:	463b      	mov	r3, r7
 800e9ec:	b209      	sxth	r1, r1
 800e9ee:	47c0      	blx	r8
 800e9f0:	69a4      	ldr	r4, [r4, #24]
 800e9f2:	e7db      	b.n	800e9ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800e9f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e9f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800e9f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e9fc:	4c6d      	ldr	r4, [pc, #436]	; (800ebb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800e9fe:	b0a1      	sub	sp, #132	; 0x84
 800ea00:	4606      	mov	r6, r0
 800ea02:	6824      	ldr	r4, [r4, #0]
 800ea04:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800ea06:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800ea0a:	2400      	movs	r4, #0
 800ea0c:	9303      	str	r3, [sp, #12]
 800ea0e:	802c      	strh	r4, [r5, #0]
 800ea10:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800ea12:	802c      	strh	r4, [r5, #0]
 800ea14:	601c      	str	r4, [r3, #0]
 800ea16:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800ea1a:	f7ff ffbd 	bl	800e998 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ea1e:	f1b9 0f03 	cmp.w	r9, #3
 800ea22:	f340 80c1 	ble.w	800eba8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800ea26:	4631      	mov	r1, r6
 800ea28:	a80c      	add	r0, sp, #48	; 0x30
 800ea2a:	f004 fb6f 	bl	801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ea2e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800ea32:	9306      	str	r3, [sp, #24]
 800ea34:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800ea38:	9307      	str	r3, [sp, #28]
 800ea3a:	9b03      	ldr	r3, [sp, #12]
 800ea3c:	f8d3 a000 	ldr.w	sl, [r3]
 800ea40:	f1ba 0f00 	cmp.w	sl, #0
 800ea44:	f000 80b3 	beq.w	800ebae <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800ea48:	4651      	mov	r1, sl
 800ea4a:	a810      	add	r0, sp, #64	; 0x40
 800ea4c:	f004 fb5e 	bl	801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ea50:	2002      	movs	r0, #2
 800ea52:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800ea56:	9b01      	ldr	r3, [sp, #4]
 800ea58:	9a06      	ldr	r2, [sp, #24]
 800ea5a:	fb91 f1f0 	sdiv	r1, r1, r0
 800ea5e:	189d      	adds	r5, r3, r2
 800ea60:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800ea64:	9a07      	ldr	r2, [sp, #28]
 800ea66:	4419      	add	r1, r3
 800ea68:	9b02      	ldr	r3, [sp, #8]
 800ea6a:	4413      	add	r3, r2
 800ea6c:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800ea70:	1a6d      	subs	r5, r5, r1
 800ea72:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800ea76:	fb92 f2f0 	sdiv	r2, r2, r0
 800ea7a:	440a      	add	r2, r1
 800ea7c:	1a9b      	subs	r3, r3, r2
 800ea7e:	435b      	muls	r3, r3
 800ea80:	fb05 3505 	mla	r5, r5, r5, r3
 800ea84:	4f4c      	ldr	r7, [pc, #304]	; (800ebb8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800ea86:	ac10      	add	r4, sp, #64	; 0x40
 800ea88:	f1b9 0f0c 	cmp.w	r9, #12
 800ea8c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ea8e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ea90:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ea92:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ea94:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ea96:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ea98:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ea9c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800eaa0:	f04f 0303 	mov.w	r3, #3
 800eaa4:	bfd8      	it	le
 800eaa6:	f109 32ff 	addle.w	r2, r9, #4294967295
 800eaaa:	f04f 0400 	mov.w	r4, #0
 800eaae:	f8cd 9000 	str.w	r9, [sp]
 800eab2:	bfcc      	ite	gt
 800eab4:	4698      	movgt	r8, r3
 800eab6:	fb92 f8f3 	sdivle	r8, r2, r3
 800eaba:	1c63      	adds	r3, r4, #1
 800eabc:	aa10      	add	r2, sp, #64	; 0x40
 800eabe:	f004 0401 	and.w	r4, r4, #1
 800eac2:	f04f 0b00 	mov.w	fp, #0
 800eac6:	9308      	str	r3, [sp, #32]
 800eac8:	9b00      	ldr	r3, [sp, #0]
 800eaca:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800eace:	fb93 f3f8 	sdiv	r3, r3, r8
 800ead2:	3404      	adds	r4, #4
 800ead4:	b29b      	uxth	r3, r3
 800ead6:	9304      	str	r3, [sp, #16]
 800ead8:	9a04      	ldr	r2, [sp, #16]
 800eada:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800eade:	fb13 f302 	smulbb	r3, r3, r2
 800eae2:	9a01      	ldr	r2, [sp, #4]
 800eae4:	b29b      	uxth	r3, r3
 800eae6:	1899      	adds	r1, r3, r2
 800eae8:	9305      	str	r3, [sp, #20]
 800eaea:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800eaee:	b209      	sxth	r1, r1
 800eaf0:	4299      	cmp	r1, r3
 800eaf2:	db4d      	blt.n	800eb90 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eaf4:	8932      	ldrh	r2, [r6, #8]
 800eaf6:	4413      	add	r3, r2
 800eaf8:	b21b      	sxth	r3, r3
 800eafa:	4299      	cmp	r1, r3
 800eafc:	da48      	bge.n	800eb90 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eafe:	9b04      	ldr	r3, [sp, #16]
 800eb00:	6827      	ldr	r7, [r4, #0]
 800eb02:	fb17 f703 	smulbb	r7, r7, r3
 800eb06:	9b02      	ldr	r3, [sp, #8]
 800eb08:	b2bf      	uxth	r7, r7
 800eb0a:	18fa      	adds	r2, r7, r3
 800eb0c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800eb10:	b212      	sxth	r2, r2
 800eb12:	429a      	cmp	r2, r3
 800eb14:	db3c      	blt.n	800eb90 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eb16:	8970      	ldrh	r0, [r6, #10]
 800eb18:	4403      	add	r3, r0
 800eb1a:	b21b      	sxth	r3, r3
 800eb1c:	429a      	cmp	r2, r3
 800eb1e:	da37      	bge.n	800eb90 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eb20:	2300      	movs	r3, #0
 800eb22:	4630      	mov	r0, r6
 800eb24:	930b      	str	r3, [sp, #44]	; 0x2c
 800eb26:	ab0b      	add	r3, sp, #44	; 0x2c
 800eb28:	f7ff ff36 	bl	800e998 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800eb2c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800eb2e:	b37a      	cbz	r2, 800eb90 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eb30:	4552      	cmp	r2, sl
 800eb32:	d02d      	beq.n	800eb90 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800eb34:	4611      	mov	r1, r2
 800eb36:	a80e      	add	r0, sp, #56	; 0x38
 800eb38:	9209      	str	r2, [sp, #36]	; 0x24
 800eb3a:	f004 fae7 	bl	801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eb3e:	f04f 0e02 	mov.w	lr, #2
 800eb42:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800eb46:	9a06      	ldr	r2, [sp, #24]
 800eb48:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800eb4c:	9b01      	ldr	r3, [sp, #4]
 800eb4e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800eb52:	4413      	add	r3, r2
 800eb54:	9a07      	ldr	r2, [sp, #28]
 800eb56:	fb91 f1fe 	sdiv	r1, r1, lr
 800eb5a:	fb9c fcfe 	sdiv	ip, ip, lr
 800eb5e:	4401      	add	r1, r0
 800eb60:	1a58      	subs	r0, r3, r1
 800eb62:	9b02      	ldr	r3, [sp, #8]
 800eb64:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800eb68:	4413      	add	r3, r2
 800eb6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800eb6c:	448c      	add	ip, r1
 800eb6e:	eba3 030c 	sub.w	r3, r3, ip
 800eb72:	435b      	muls	r3, r3
 800eb74:	fb00 3300 	mla	r3, r0, r0, r3
 800eb78:	42ab      	cmp	r3, r5
 800eb7a:	d208      	bcs.n	800eb8e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800eb7c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800eb7e:	461d      	mov	r5, r3
 800eb80:	9803      	ldr	r0, [sp, #12]
 800eb82:	6001      	str	r1, [r0, #0]
 800eb84:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800eb86:	9805      	ldr	r0, [sp, #20]
 800eb88:	8008      	strh	r0, [r1, #0]
 800eb8a:	992b      	ldr	r1, [sp, #172]	; 0xac
 800eb8c:	800f      	strh	r7, [r1, #0]
 800eb8e:	4692      	mov	sl, r2
 800eb90:	f10b 0b01 	add.w	fp, fp, #1
 800eb94:	3408      	adds	r4, #8
 800eb96:	f1bb 0f04 	cmp.w	fp, #4
 800eb9a:	d19d      	bne.n	800ead8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800eb9c:	9b00      	ldr	r3, [sp, #0]
 800eb9e:	9c08      	ldr	r4, [sp, #32]
 800eba0:	444b      	add	r3, r9
 800eba2:	4544      	cmp	r4, r8
 800eba4:	9300      	str	r3, [sp, #0]
 800eba6:	d188      	bne.n	800eaba <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800eba8:	b021      	add	sp, #132	; 0x84
 800ebaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ebae:	f04f 35ff 	mov.w	r5, #4294967295
 800ebb2:	e767      	b.n	800ea84 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ebb4:	2003242c 	.word	0x2003242c
 800ebb8:	08025554 	.word	0x08025554

0800ebbc <_ZN8touchgfx4RectaNERKS0_>:
 800ebbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ebc0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ebc4:	888c      	ldrh	r4, [r1, #4]
 800ebc6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ebca:	443c      	add	r4, r7
 800ebcc:	b2a4      	uxth	r4, r4
 800ebce:	fa0f f884 	sxth.w	r8, r4
 800ebd2:	45c1      	cmp	r9, r8
 800ebd4:	da2f      	bge.n	800ec36 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ebd6:	8882      	ldrh	r2, [r0, #4]
 800ebd8:	444a      	add	r2, r9
 800ebda:	b292      	uxth	r2, r2
 800ebdc:	fa0f fe82 	sxth.w	lr, r2
 800ebe0:	4577      	cmp	r7, lr
 800ebe2:	da28      	bge.n	800ec36 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ebe4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ebe8:	88cb      	ldrh	r3, [r1, #6]
 800ebea:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ebee:	442b      	add	r3, r5
 800ebf0:	b21b      	sxth	r3, r3
 800ebf2:	429e      	cmp	r6, r3
 800ebf4:	da1f      	bge.n	800ec36 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ebf6:	88c3      	ldrh	r3, [r0, #6]
 800ebf8:	4433      	add	r3, r6
 800ebfa:	b29b      	uxth	r3, r3
 800ebfc:	fa0f fc83 	sxth.w	ip, r3
 800ec00:	4565      	cmp	r5, ip
 800ec02:	da18      	bge.n	800ec36 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ec04:	454f      	cmp	r7, r9
 800ec06:	bfb8      	it	lt
 800ec08:	464f      	movlt	r7, r9
 800ec0a:	42b5      	cmp	r5, r6
 800ec0c:	bfb8      	it	lt
 800ec0e:	4635      	movlt	r5, r6
 800ec10:	45f0      	cmp	r8, lr
 800ec12:	bfd8      	it	le
 800ec14:	4622      	movle	r2, r4
 800ec16:	1bd2      	subs	r2, r2, r7
 800ec18:	8082      	strh	r2, [r0, #4]
 800ec1a:	884a      	ldrh	r2, [r1, #2]
 800ec1c:	88c9      	ldrh	r1, [r1, #6]
 800ec1e:	8007      	strh	r7, [r0, #0]
 800ec20:	440a      	add	r2, r1
 800ec22:	8045      	strh	r5, [r0, #2]
 800ec24:	b292      	uxth	r2, r2
 800ec26:	b211      	sxth	r1, r2
 800ec28:	458c      	cmp	ip, r1
 800ec2a:	bfa8      	it	ge
 800ec2c:	4613      	movge	r3, r2
 800ec2e:	1b5b      	subs	r3, r3, r5
 800ec30:	80c3      	strh	r3, [r0, #6]
 800ec32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ec36:	2300      	movs	r3, #0
 800ec38:	8003      	strh	r3, [r0, #0]
 800ec3a:	8043      	strh	r3, [r0, #2]
 800ec3c:	8083      	strh	r3, [r0, #4]
 800ec3e:	80c3      	strh	r3, [r0, #6]
 800ec40:	e7f7      	b.n	800ec32 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ec42:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ec46:	2b00      	cmp	r3, #0
 800ec48:	dd06      	ble.n	800ec58 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ec4a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ec4e:	2800      	cmp	r0, #0
 800ec50:	bfcc      	ite	gt
 800ec52:	2000      	movgt	r0, #0
 800ec54:	2001      	movle	r0, #1
 800ec56:	4770      	bx	lr
 800ec58:	2001      	movs	r0, #1
 800ec5a:	4770      	bx	lr

0800ec5c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ec5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec60:	2300      	movs	r3, #0
 800ec62:	4604      	mov	r4, r0
 800ec64:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ec66:	8003      	strh	r3, [r0, #0]
 800ec68:	8043      	strh	r3, [r0, #2]
 800ec6a:	8083      	strh	r3, [r0, #4]
 800ec6c:	80c3      	strh	r3, [r0, #6]
 800ec6e:	2d00      	cmp	r5, #0
 800ec70:	d040      	beq.n	800ecf4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ec72:	1d28      	adds	r0, r5, #4
 800ec74:	f7ff ffe5 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ec78:	b988      	cbnz	r0, 800ec9e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ec7a:	4620      	mov	r0, r4
 800ec7c:	f7ff ffe1 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ec80:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ec84:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ec88:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ec8c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ec90:	b138      	cbz	r0, 800eca2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ec92:	8022      	strh	r2, [r4, #0]
 800ec94:	8063      	strh	r3, [r4, #2]
 800ec96:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ec9a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ec9e:	69ad      	ldr	r5, [r5, #24]
 800eca0:	e7e5      	b.n	800ec6e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800eca2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800eca6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ecaa:	4290      	cmp	r0, r2
 800ecac:	4607      	mov	r7, r0
 800ecae:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ecb2:	460e      	mov	r6, r1
 800ecb4:	bfa8      	it	ge
 800ecb6:	4617      	movge	r7, r2
 800ecb8:	4299      	cmp	r1, r3
 800ecba:	4472      	add	r2, lr
 800ecbc:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ecc0:	bfa8      	it	ge
 800ecc2:	461e      	movge	r6, r3
 800ecc4:	4440      	add	r0, r8
 800ecc6:	4471      	add	r1, lr
 800ecc8:	4463      	add	r3, ip
 800ecca:	b200      	sxth	r0, r0
 800eccc:	8027      	strh	r7, [r4, #0]
 800ecce:	b212      	sxth	r2, r2
 800ecd0:	8066      	strh	r6, [r4, #2]
 800ecd2:	b209      	sxth	r1, r1
 800ecd4:	b21b      	sxth	r3, r3
 800ecd6:	4290      	cmp	r0, r2
 800ecd8:	bfac      	ite	ge
 800ecda:	ebc7 0200 	rsbge	r2, r7, r0
 800ecde:	ebc7 0202 	rsblt	r2, r7, r2
 800ece2:	4299      	cmp	r1, r3
 800ece4:	bfac      	ite	ge
 800ece6:	ebc6 0301 	rsbge	r3, r6, r1
 800ecea:	ebc6 0303 	rsblt	r3, r6, r3
 800ecee:	80a2      	strh	r2, [r4, #4]
 800ecf0:	80e3      	strh	r3, [r4, #6]
 800ecf2:	e7d4      	b.n	800ec9e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ecf4:	4620      	mov	r0, r4
 800ecf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ecfa <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ecfa:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ecfe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ed02:	b383      	cbz	r3, 800ed66 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ed04:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ed06:	b374      	cbz	r4, 800ed66 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ed08:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ed0c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ed10:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ed14:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ed18:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ed1c:	b303      	cbz	r3, 800ed60 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ed1e:	4668      	mov	r0, sp
 800ed20:	1d21      	adds	r1, r4, #4
 800ed22:	f8ad 5000 	strh.w	r5, [sp]
 800ed26:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ed2a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ed2e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ed32:	f7ff ff43 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 800ed36:	4668      	mov	r0, sp
 800ed38:	f7ff ff83 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ed3c:	b980      	cbnz	r0, 800ed60 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ed3e:	f8bd 3000 	ldrh.w	r3, [sp]
 800ed42:	4669      	mov	r1, sp
 800ed44:	88a2      	ldrh	r2, [r4, #4]
 800ed46:	4620      	mov	r0, r4
 800ed48:	1a9b      	subs	r3, r3, r2
 800ed4a:	88e2      	ldrh	r2, [r4, #6]
 800ed4c:	f8ad 3000 	strh.w	r3, [sp]
 800ed50:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ed54:	1a9b      	subs	r3, r3, r2
 800ed56:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ed5a:	6823      	ldr	r3, [r4, #0]
 800ed5c:	689b      	ldr	r3, [r3, #8]
 800ed5e:	4798      	blx	r3
 800ed60:	69a4      	ldr	r4, [r4, #24]
 800ed62:	2c00      	cmp	r4, #0
 800ed64:	d1d8      	bne.n	800ed18 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800ed66:	b002      	add	sp, #8
 800ed68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ed6c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800ed6c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ed6e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ed72:	460d      	mov	r5, r1
 800ed74:	4616      	mov	r6, r2
 800ed76:	b323      	cbz	r3, 800edc2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ed78:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ed7a:	b314      	cbz	r4, 800edc2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ed7c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ed80:	b1eb      	cbz	r3, 800edbe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ed82:	6828      	ldr	r0, [r5, #0]
 800ed84:	466b      	mov	r3, sp
 800ed86:	6869      	ldr	r1, [r5, #4]
 800ed88:	c303      	stmia	r3!, {r0, r1}
 800ed8a:	4668      	mov	r0, sp
 800ed8c:	1d21      	adds	r1, r4, #4
 800ed8e:	f7ff ff15 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 800ed92:	4668      	mov	r0, sp
 800ed94:	f7ff ff55 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ed98:	b988      	cbnz	r0, 800edbe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ed9a:	f8bd 3000 	ldrh.w	r3, [sp]
 800ed9e:	4669      	mov	r1, sp
 800eda0:	88a2      	ldrh	r2, [r4, #4]
 800eda2:	4620      	mov	r0, r4
 800eda4:	1a9b      	subs	r3, r3, r2
 800eda6:	88e2      	ldrh	r2, [r4, #6]
 800eda8:	f8ad 3000 	strh.w	r3, [sp]
 800edac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800edb0:	1a9b      	subs	r3, r3, r2
 800edb2:	4632      	mov	r2, r6
 800edb4:	f8ad 3002 	strh.w	r3, [sp, #2]
 800edb8:	6823      	ldr	r3, [r4, #0]
 800edba:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800edbc:	4798      	blx	r3
 800edbe:	69a4      	ldr	r4, [r4, #24]
 800edc0:	e7db      	b.n	800ed7a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800edc2:	b002      	add	sp, #8
 800edc4:	bd70      	pop	{r4, r5, r6, pc}

0800edc6 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 800edc6:	4770      	bx	lr

0800edc8 <_ZN8touchgfx3HAL10FlushCacheEv>:
 800edc8:	4770      	bx	lr

0800edca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800edca:	6803      	ldr	r3, [r0, #0]
 800edcc:	b513      	push	{r0, r1, r4, lr}
 800edce:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800edd2:	2300      	movs	r3, #0
 800edd4:	e9cd 3300 	strd	r3, r3, [sp]
 800edd8:	466b      	mov	r3, sp
 800edda:	47a0      	blx	r4
 800eddc:	b002      	add	sp, #8
 800edde:	bd10      	pop	{r4, pc}

0800ede0 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800ede0:	2301      	movs	r3, #1
 800ede2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800ede6:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800edea:	4770      	bx	lr

0800edec <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800edec:	2301      	movs	r3, #1
 800edee:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800edf2:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800edf6:	4770      	bx	lr

0800edf8 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800edf8:	6843      	ldr	r3, [r0, #4]
 800edfa:	2201      	movs	r2, #1
 800edfc:	725a      	strb	r2, [r3, #9]
 800edfe:	6840      	ldr	r0, [r0, #4]
 800ee00:	6803      	ldr	r3, [r0, #0]
 800ee02:	691b      	ldr	r3, [r3, #16]
 800ee04:	4718      	bx	r3

0800ee06 <_ZN8touchgfx3HAL8flushDMAEv>:
 800ee06:	6840      	ldr	r0, [r0, #4]
 800ee08:	6803      	ldr	r3, [r0, #0]
 800ee0a:	689b      	ldr	r3, [r3, #8]
 800ee0c:	4718      	bx	r3

0800ee0e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800ee0e:	b530      	push	{r4, r5, lr}
 800ee10:	b08b      	sub	sp, #44	; 0x2c
 800ee12:	6804      	ldr	r4, [r0, #0]
 800ee14:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800ee18:	9509      	str	r5, [sp, #36]	; 0x24
 800ee1a:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800ee1e:	9508      	str	r5, [sp, #32]
 800ee20:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800ee24:	9507      	str	r5, [sp, #28]
 800ee26:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800ee2a:	9506      	str	r5, [sp, #24]
 800ee2c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800ee30:	9505      	str	r5, [sp, #20]
 800ee32:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800ee36:	9504      	str	r5, [sp, #16]
 800ee38:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800ee3c:	9503      	str	r5, [sp, #12]
 800ee3e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800ee42:	9502      	str	r5, [sp, #8]
 800ee44:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800ee48:	e9cd 3500 	strd	r3, r5, [sp]
 800ee4c:	4613      	mov	r3, r2
 800ee4e:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800ee50:	2200      	movs	r2, #0
 800ee52:	47a0      	blx	r4
 800ee54:	b00b      	add	sp, #44	; 0x2c
 800ee56:	bd30      	pop	{r4, r5, pc}

0800ee58 <_ZN8touchgfx3HAL10beginFrameEv>:
 800ee58:	4b04      	ldr	r3, [pc, #16]	; (800ee6c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800ee5a:	781b      	ldrb	r3, [r3, #0]
 800ee5c:	b123      	cbz	r3, 800ee68 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800ee5e:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800ee62:	f080 0001 	eor.w	r0, r0, #1
 800ee66:	4770      	bx	lr
 800ee68:	2001      	movs	r0, #1
 800ee6a:	4770      	bx	lr
 800ee6c:	2003242a 	.word	0x2003242a

0800ee70 <_ZN8touchgfx3HAL8endFrameEv>:
 800ee70:	b510      	push	{r4, lr}
 800ee72:	4604      	mov	r4, r0
 800ee74:	6840      	ldr	r0, [r0, #4]
 800ee76:	6803      	ldr	r3, [r0, #0]
 800ee78:	689b      	ldr	r3, [r3, #8]
 800ee7a:	4798      	blx	r3
 800ee7c:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800ee80:	b113      	cbz	r3, 800ee88 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800ee82:	2301      	movs	r3, #1
 800ee84:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800ee88:	bd10      	pop	{r4, pc}

0800ee8a <_ZN8touchgfx3HAL10initializeEv>:
 800ee8a:	b510      	push	{r4, lr}
 800ee8c:	4604      	mov	r4, r0
 800ee8e:	f7fe f97f 	bl	800d190 <_ZN8touchgfx10OSWrappers10initializeEv>
 800ee92:	f7fd fe87 	bl	800cba4 <_ZN8touchgfx4GPIO4initEv>
 800ee96:	6860      	ldr	r0, [r4, #4]
 800ee98:	6803      	ldr	r3, [r0, #0]
 800ee9a:	68db      	ldr	r3, [r3, #12]
 800ee9c:	4798      	blx	r3
 800ee9e:	68e0      	ldr	r0, [r4, #12]
 800eea0:	6803      	ldr	r3, [r0, #0]
 800eea2:	689b      	ldr	r3, [r3, #8]
 800eea4:	4798      	blx	r3
 800eea6:	6823      	ldr	r3, [r4, #0]
 800eea8:	4620      	mov	r0, r4
 800eeaa:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800eeac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eeb0:	4718      	bx	r3

0800eeb2 <_ZN8touchgfx3HAL9taskEntryEv>:
 800eeb2:	b508      	push	{r3, lr}
 800eeb4:	6803      	ldr	r3, [r0, #0]
 800eeb6:	4604      	mov	r4, r0
 800eeb8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800eebc:	4798      	blx	r3
 800eebe:	6823      	ldr	r3, [r4, #0]
 800eec0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800eec2:	4620      	mov	r0, r4
 800eec4:	4798      	blx	r3
 800eec6:	f7fe f9d7 	bl	800d278 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800eeca:	6823      	ldr	r3, [r4, #0]
 800eecc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800eece:	e7f8      	b.n	800eec2 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800eed0 <_ZN8touchgfx3HAL4tickEv>:
 800eed0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800eed2:	6803      	ldr	r3, [r0, #0]
 800eed4:	4604      	mov	r4, r0
 800eed6:	4d5b      	ldr	r5, [pc, #364]	; (800f044 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800eed8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800eedc:	4798      	blx	r3
 800eede:	2800      	cmp	r0, #0
 800eee0:	f000 8095 	beq.w	800f00e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800eee4:	2001      	movs	r0, #1
 800eee6:	2600      	movs	r6, #0
 800eee8:	f7fd fe64 	bl	800cbb4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800eeec:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800eef0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800eef4:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800eef8:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800eefc:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800ef00:	b133      	cbz	r3, 800ef10 <_ZN8touchgfx3HAL4tickEv+0x40>
 800ef02:	6823      	ldr	r3, [r4, #0]
 800ef04:	4620      	mov	r0, r4
 800ef06:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800ef0a:	4798      	blx	r3
 800ef0c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800ef10:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800ef14:	2601      	movs	r6, #1
 800ef16:	6862      	ldr	r2, [r4, #4]
 800ef18:	f083 0301 	eor.w	r3, r3, #1
 800ef1c:	702e      	strb	r6, [r5, #0]
 800ef1e:	7253      	strb	r3, [r2, #9]
 800ef20:	f002 ffe0 	bl	8011ee4 <_ZN8touchgfx11Application11getInstanceEv>
 800ef24:	6803      	ldr	r3, [r0, #0]
 800ef26:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ef28:	4798      	blx	r3
 800ef2a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800ef2e:	b90b      	cbnz	r3, 800ef34 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ef30:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800ef34:	f002 ffd6 	bl	8011ee4 <_ZN8touchgfx11Application11getInstanceEv>
 800ef38:	6803      	ldr	r3, [r0, #0]
 800ef3a:	695b      	ldr	r3, [r3, #20]
 800ef3c:	4798      	blx	r3
 800ef3e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800ef40:	6803      	ldr	r3, [r0, #0]
 800ef42:	691b      	ldr	r3, [r3, #16]
 800ef44:	4798      	blx	r3
 800ef46:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800ef4a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800ef4e:	3b01      	subs	r3, #1
 800ef50:	b2db      	uxtb	r3, r3
 800ef52:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800ef56:	b10a      	cbz	r2, 800ef5c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800ef58:	2b00      	cmp	r3, #0
 800ef5a:	d1eb      	bne.n	800ef34 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ef5c:	4a3a      	ldr	r2, [pc, #232]	; (800f048 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ef5e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800ef62:	7813      	ldrb	r3, [r2, #0]
 800ef64:	3301      	adds	r3, #1
 800ef66:	b25b      	sxtb	r3, r3
 800ef68:	4299      	cmp	r1, r3
 800ef6a:	7013      	strb	r3, [r2, #0]
 800ef6c:	dc10      	bgt.n	800ef90 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ef6e:	2300      	movs	r3, #0
 800ef70:	68e0      	ldr	r0, [r4, #12]
 800ef72:	a902      	add	r1, sp, #8
 800ef74:	7013      	strb	r3, [r2, #0]
 800ef76:	aa03      	add	r2, sp, #12
 800ef78:	6803      	ldr	r3, [r0, #0]
 800ef7a:	68db      	ldr	r3, [r3, #12]
 800ef7c:	4798      	blx	r3
 800ef7e:	6823      	ldr	r3, [r4, #0]
 800ef80:	2800      	cmp	r0, #0
 800ef82:	d050      	beq.n	800f026 <_ZN8touchgfx3HAL4tickEv+0x156>
 800ef84:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800ef88:	4620      	mov	r0, r4
 800ef8a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ef8e:	4798      	blx	r3
 800ef90:	2300      	movs	r3, #0
 800ef92:	6960      	ldr	r0, [r4, #20]
 800ef94:	f88d 3007 	strb.w	r3, [sp, #7]
 800ef98:	b158      	cbz	r0, 800efb2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800ef9a:	6803      	ldr	r3, [r0, #0]
 800ef9c:	f10d 0107 	add.w	r1, sp, #7
 800efa0:	68db      	ldr	r3, [r3, #12]
 800efa2:	4798      	blx	r3
 800efa4:	b128      	cbz	r0, 800efb2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800efa6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800efa8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800efac:	6803      	ldr	r3, [r0, #0]
 800efae:	68db      	ldr	r3, [r3, #12]
 800efb0:	4798      	blx	r3
 800efb2:	f104 001c 	add.w	r0, r4, #28
 800efb6:	f013 fb7f 	bl	80226b8 <_ZN8touchgfx8Gestures4tickEv>
 800efba:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800efbe:	b30b      	cbz	r3, 800f004 <_ZN8touchgfx3HAL4tickEv+0x134>
 800efc0:	6920      	ldr	r0, [r4, #16]
 800efc2:	6803      	ldr	r3, [r0, #0]
 800efc4:	691b      	ldr	r3, [r3, #16]
 800efc6:	4798      	blx	r3
 800efc8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800efca:	4606      	mov	r6, r0
 800efcc:	b903      	cbnz	r3, 800efd0 <_ZN8touchgfx3HAL4tickEv+0x100>
 800efce:	6760      	str	r0, [r4, #116]	; 0x74
 800efd0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800efd2:	4a1e      	ldr	r2, [pc, #120]	; (800f04c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800efd4:	1af3      	subs	r3, r6, r3
 800efd6:	4293      	cmp	r3, r2
 800efd8:	d914      	bls.n	800f004 <_ZN8touchgfx3HAL4tickEv+0x134>
 800efda:	6920      	ldr	r0, [r4, #16]
 800efdc:	6803      	ldr	r3, [r0, #0]
 800efde:	699b      	ldr	r3, [r3, #24]
 800efe0:	4798      	blx	r3
 800efe2:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800efe4:	2264      	movs	r2, #100	; 0x64
 800efe6:	1af3      	subs	r3, r6, r3
 800efe8:	fbb3 f3f2 	udiv	r3, r3, r2
 800efec:	fbb0 f0f3 	udiv	r0, r0, r3
 800eff0:	2800      	cmp	r0, #0
 800eff2:	dc1d      	bgt.n	800f030 <_ZN8touchgfx3HAL4tickEv+0x160>
 800eff4:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800eff8:	6920      	ldr	r0, [r4, #16]
 800effa:	2100      	movs	r1, #0
 800effc:	6803      	ldr	r3, [r0, #0]
 800effe:	69db      	ldr	r3, [r3, #28]
 800f000:	4798      	blx	r3
 800f002:	6766      	str	r6, [r4, #116]	; 0x74
 800f004:	f002 ff6e 	bl	8011ee4 <_ZN8touchgfx11Application11getInstanceEv>
 800f008:	6803      	ldr	r3, [r0, #0]
 800f00a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f00c:	4798      	blx	r3
 800f00e:	6823      	ldr	r3, [r4, #0]
 800f010:	4620      	mov	r0, r4
 800f012:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800f016:	4798      	blx	r3
 800f018:	2001      	movs	r0, #1
 800f01a:	f7fd fde7 	bl	800cbec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800f01e:	2300      	movs	r3, #0
 800f020:	702b      	strb	r3, [r5, #0]
 800f022:	b004      	add	sp, #16
 800f024:	bd70      	pop	{r4, r5, r6, pc}
 800f026:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800f02a:	4620      	mov	r0, r4
 800f02c:	4798      	blx	r3
 800f02e:	e7af      	b.n	800ef90 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800f030:	2863      	cmp	r0, #99	; 0x63
 800f032:	bfcb      	itete	gt
 800f034:	2300      	movgt	r3, #0
 800f036:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800f03a:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800f03e:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800f042:	e7d9      	b.n	800eff8 <_ZN8touchgfx3HAL4tickEv+0x128>
 800f044:	20032430 	.word	0x20032430
 800f048:	20032431 	.word	0x20032431
 800f04c:	05f5e100 	.word	0x05f5e100

0800f050 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800f050:	b510      	push	{r4, lr}
 800f052:	4604      	mov	r4, r0
 800f054:	f7fe f8c4 	bl	800d1e0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800f058:	2200      	movs	r2, #0
 800f05a:	6863      	ldr	r3, [r4, #4]
 800f05c:	729a      	strb	r2, [r3, #10]
 800f05e:	bd10      	pop	{r4, pc}

0800f060 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800f060:	65c1      	str	r1, [r0, #92]	; 0x5c
 800f062:	301c      	adds	r0, #28
 800f064:	f013 bb26 	b.w	80226b4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800f068 <_ZN8touchgfx3HAL5touchEll>:
 800f068:	b530      	push	{r4, r5, lr}
 800f06a:	b087      	sub	sp, #28
 800f06c:	4604      	mov	r4, r0
 800f06e:	a804      	add	r0, sp, #16
 800f070:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800f074:	f002 fd28 	bl	8011ac8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800f078:	9b04      	ldr	r3, [sp, #16]
 800f07a:	a906      	add	r1, sp, #24
 800f07c:	a803      	add	r0, sp, #12
 800f07e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800f082:	9b05      	ldr	r3, [sp, #20]
 800f084:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800f088:	f002 fd70 	bl	8011b6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800f08c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800f090:	f104 001c 	add.w	r0, r4, #28
 800f094:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800f098:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800f09c:	b189      	cbz	r1, 800f0c2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800f09e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800f0a2:	9300      	str	r3, [sp, #0]
 800f0a4:	4613      	mov	r3, r2
 800f0a6:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800f0aa:	462a      	mov	r2, r5
 800f0ac:	f013 fb12 	bl	80226d4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800f0b0:	b128      	cbz	r0, 800f0be <_ZN8touchgfx3HAL5touchEll+0x56>
 800f0b2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800f0b6:	6623      	str	r3, [r4, #96]	; 0x60
 800f0b8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f0bc:	6663      	str	r3, [r4, #100]	; 0x64
 800f0be:	b007      	add	sp, #28
 800f0c0:	bd30      	pop	{r4, r5, pc}
 800f0c2:	f013 fb47 	bl	8022754 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800f0c6:	2301      	movs	r3, #1
 800f0c8:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800f0cc:	e7f1      	b.n	800f0b2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800f0ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800f0ce:	b510      	push	{r4, lr}
 800f0d0:	2b00      	cmp	r3, #0
 800f0d2:	d046      	beq.n	800f162 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f0d4:	ea81 0002 	eor.w	r0, r1, r2
 800f0d8:	07c4      	lsls	r4, r0, #31
 800f0da:	d508      	bpl.n	800f0ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800f0dc:	440b      	add	r3, r1
 800f0de:	3a01      	subs	r2, #1
 800f0e0:	428b      	cmp	r3, r1
 800f0e2:	d93e      	bls.n	800f162 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f0e4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800f0e8:	f801 0b01 	strb.w	r0, [r1], #1
 800f0ec:	e7f8      	b.n	800f0e0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800f0ee:	07d0      	lsls	r0, r2, #31
 800f0f0:	bf42      	ittt	mi
 800f0f2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800f0f6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800f0fa:	f801 0b01 	strbmi.w	r0, [r1], #1
 800f0fe:	2b01      	cmp	r3, #1
 800f100:	d911      	bls.n	800f126 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f102:	ea81 0402 	eor.w	r4, r1, r2
 800f106:	4610      	mov	r0, r2
 800f108:	07a4      	lsls	r4, r4, #30
 800f10a:	d022      	beq.n	800f152 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800f10c:	f023 0401 	bic.w	r4, r3, #1
 800f110:	440c      	add	r4, r1
 800f112:	428c      	cmp	r4, r1
 800f114:	4602      	mov	r2, r0
 800f116:	d904      	bls.n	800f122 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800f118:	8812      	ldrh	r2, [r2, #0]
 800f11a:	3002      	adds	r0, #2
 800f11c:	f821 2b02 	strh.w	r2, [r1], #2
 800f120:	e7f7      	b.n	800f112 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800f122:	f003 0301 	and.w	r3, r3, #1
 800f126:	f023 0003 	bic.w	r0, r3, #3
 800f12a:	4408      	add	r0, r1
 800f12c:	4288      	cmp	r0, r1
 800f12e:	4614      	mov	r4, r2
 800f130:	d904      	bls.n	800f13c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800f132:	6824      	ldr	r4, [r4, #0]
 800f134:	3204      	adds	r2, #4
 800f136:	f841 4b04 	str.w	r4, [r1], #4
 800f13a:	e7f7      	b.n	800f12c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800f13c:	f003 0303 	and.w	r3, r3, #3
 800f140:	3a01      	subs	r2, #1
 800f142:	440b      	add	r3, r1
 800f144:	428b      	cmp	r3, r1
 800f146:	d90c      	bls.n	800f162 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f148:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800f14c:	f801 0b01 	strb.w	r0, [r1], #1
 800f150:	e7f8      	b.n	800f144 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800f152:	0790      	lsls	r0, r2, #30
 800f154:	d0e7      	beq.n	800f126 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f156:	f832 0b02 	ldrh.w	r0, [r2], #2
 800f15a:	3b02      	subs	r3, #2
 800f15c:	f821 0b02 	strh.w	r0, [r1], #2
 800f160:	e7e1      	b.n	800f126 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f162:	2001      	movs	r0, #1
 800f164:	bd10      	pop	{r4, pc}

0800f166 <_ZN8touchgfx3HAL7noTouchEv>:
 800f166:	b510      	push	{r4, lr}
 800f168:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800f16c:	4604      	mov	r4, r0
 800f16e:	b153      	cbz	r3, 800f186 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800f170:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800f174:	2101      	movs	r1, #1
 800f176:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800f17a:	301c      	adds	r0, #28
 800f17c:	f013 faea 	bl	8022754 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800f180:	2300      	movs	r3, #0
 800f182:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800f186:	bd10      	pop	{r4, pc}

0800f188 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800f188:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f18c:	b085      	sub	sp, #20
 800f18e:	4604      	mov	r4, r0
 800f190:	2000      	movs	r0, #0
 800f192:	4699      	mov	r9, r3
 800f194:	ad04      	add	r5, sp, #16
 800f196:	460f      	mov	r7, r1
 800f198:	4690      	mov	r8, r2
 800f19a:	f845 0d04 	str.w	r0, [r5, #-4]!
 800f19e:	69a0      	ldr	r0, [r4, #24]
 800f1a0:	6806      	ldr	r6, [r0, #0]
 800f1a2:	9501      	str	r5, [sp, #4]
 800f1a4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800f1a8:	9500      	str	r5, [sp, #0]
 800f1aa:	6835      	ldr	r5, [r6, #0]
 800f1ac:	47a8      	blx	r5
 800f1ae:	4d10      	ldr	r5, [pc, #64]	; (800f1f0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800f1b0:	4606      	mov	r6, r0
 800f1b2:	f8a5 9000 	strh.w	r9, [r5]
 800f1b6:	f7fa fa27 	bl	8009608 <_ZN8touchgfx3HAL3lcdEv>
 800f1ba:	6803      	ldr	r3, [r0, #0]
 800f1bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f1be:	4798      	blx	r3
 800f1c0:	b128      	cbz	r0, 800f1ce <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800f1c2:	2801      	cmp	r0, #1
 800f1c4:	d00b      	beq.n	800f1de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800f1c6:	4630      	mov	r0, r6
 800f1c8:	b005      	add	sp, #20
 800f1ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f1ce:	882b      	ldrh	r3, [r5, #0]
 800f1d0:	fb08 7203 	mla	r2, r8, r3, r7
 800f1d4:	9b03      	ldr	r3, [sp, #12]
 800f1d6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800f1da:	63e3      	str	r3, [r4, #60]	; 0x3c
 800f1dc:	e7f3      	b.n	800f1c6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800f1de:	882a      	ldrh	r2, [r5, #0]
 800f1e0:	9b03      	ldr	r3, [sp, #12]
 800f1e2:	fb08 7202 	mla	r2, r8, r2, r7
 800f1e6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800f1ea:	1a9a      	subs	r2, r3, r2
 800f1ec:	63e2      	str	r2, [r4, #60]	; 0x3c
 800f1ee:	e7ea      	b.n	800f1c6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800f1f0:	20032426 	.word	0x20032426

0800f1f4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800f1f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f1f6:	b08b      	sub	sp, #44	; 0x2c
 800f1f8:	4617      	mov	r7, r2
 800f1fa:	4604      	mov	r4, r0
 800f1fc:	460e      	mov	r6, r1
 800f1fe:	461d      	mov	r5, r3
 800f200:	f7fa fa02 	bl	8009608 <_ZN8touchgfx3HAL3lcdEv>
 800f204:	6803      	ldr	r3, [r0, #0]
 800f206:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f208:	4798      	blx	r3
 800f20a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800f20e:	9007      	str	r0, [sp, #28]
 800f210:	4631      	mov	r1, r6
 800f212:	6822      	ldr	r2, [r4, #0]
 800f214:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800f218:	4b0c      	ldr	r3, [pc, #48]	; (800f24c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800f21a:	4620      	mov	r0, r4
 800f21c:	881b      	ldrh	r3, [r3, #0]
 800f21e:	9306      	str	r3, [sp, #24]
 800f220:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800f224:	9305      	str	r3, [sp, #20]
 800f226:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800f22a:	9304      	str	r3, [sp, #16]
 800f22c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f230:	9303      	str	r3, [sp, #12]
 800f232:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f236:	9302      	str	r3, [sp, #8]
 800f238:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f23c:	e9cd 5300 	strd	r5, r3, [sp]
 800f240:	463b      	mov	r3, r7
 800f242:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800f244:	2200      	movs	r2, #0
 800f246:	47a8      	blx	r5
 800f248:	b00b      	add	sp, #44	; 0x2c
 800f24a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f24c:	20032426 	.word	0x20032426

0800f250 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800f250:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f254:	4698      	mov	r8, r3
 800f256:	6803      	ldr	r3, [r0, #0]
 800f258:	b08b      	sub	sp, #44	; 0x2c
 800f25a:	4617      	mov	r7, r2
 800f25c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800f25e:	460e      	mov	r6, r1
 800f260:	4b13      	ldr	r3, [pc, #76]	; (800f2b0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800f262:	4604      	mov	r4, r0
 800f264:	f8b3 9000 	ldrh.w	r9, [r3]
 800f268:	f7fa f9ce 	bl	8009608 <_ZN8touchgfx3HAL3lcdEv>
 800f26c:	6803      	ldr	r3, [r0, #0]
 800f26e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f270:	4798      	blx	r3
 800f272:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800f276:	2200      	movs	r2, #0
 800f278:	4631      	mov	r1, r6
 800f27a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800f27e:	2302      	movs	r3, #2
 800f280:	4620      	mov	r0, r4
 800f282:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800f286:	2301      	movs	r3, #1
 800f288:	9305      	str	r3, [sp, #20]
 800f28a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800f28e:	9304      	str	r3, [sp, #16]
 800f290:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800f294:	9303      	str	r3, [sp, #12]
 800f296:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800f29a:	9302      	str	r3, [sp, #8]
 800f29c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f2a0:	e9cd 8300 	strd	r8, r3, [sp]
 800f2a4:	463b      	mov	r3, r7
 800f2a6:	47a8      	blx	r5
 800f2a8:	b00b      	add	sp, #44	; 0x2c
 800f2aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f2ae:	bf00      	nop
 800f2b0:	20032426 	.word	0x20032426

0800f2b4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800f2b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f2b8:	4698      	mov	r8, r3
 800f2ba:	6803      	ldr	r3, [r0, #0]
 800f2bc:	b087      	sub	sp, #28
 800f2be:	460e      	mov	r6, r1
 800f2c0:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800f2c2:	4617      	mov	r7, r2
 800f2c4:	4b0f      	ldr	r3, [pc, #60]	; (800f304 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800f2c6:	4604      	mov	r4, r0
 800f2c8:	f8b3 9000 	ldrh.w	r9, [r3]
 800f2cc:	f7fa f99c 	bl	8009608 <_ZN8touchgfx3HAL3lcdEv>
 800f2d0:	6803      	ldr	r3, [r0, #0]
 800f2d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f2d4:	4798      	blx	r3
 800f2d6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800f2da:	463a      	mov	r2, r7
 800f2dc:	4631      	mov	r1, r6
 800f2de:	f8cd 900c 	str.w	r9, [sp, #12]
 800f2e2:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800f2e6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800f2ea:	4620      	mov	r0, r4
 800f2ec:	9302      	str	r3, [sp, #8]
 800f2ee:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800f2f2:	9301      	str	r3, [sp, #4]
 800f2f4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800f2f8:	9300      	str	r3, [sp, #0]
 800f2fa:	4643      	mov	r3, r8
 800f2fc:	47a8      	blx	r5
 800f2fe:	b007      	add	sp, #28
 800f300:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f304:	20032426 	.word	0x20032426

0800f308 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800f308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f30c:	4604      	mov	r4, r0
 800f30e:	b08f      	sub	sp, #60	; 0x3c
 800f310:	4610      	mov	r0, r2
 800f312:	460d      	mov	r5, r1
 800f314:	4691      	mov	r9, r2
 800f316:	461e      	mov	r6, r3
 800f318:	f005 fda6 	bl	8014e68 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800f31c:	2800      	cmp	r0, #0
 800f31e:	f000 809d 	beq.w	800f45c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800f322:	6823      	ldr	r3, [r4, #0]
 800f324:	4620      	mov	r0, r4
 800f326:	f8df b198 	ldr.w	fp, [pc, #408]	; 800f4c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800f32a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800f32e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f330:	4798      	blx	r3
 800f332:	6823      	ldr	r3, [r4, #0]
 800f334:	4620      	mov	r0, r4
 800f336:	f8df a18c 	ldr.w	sl, [pc, #396]	; 800f4c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800f33a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f33c:	4798      	blx	r3
 800f33e:	f8bb 3000 	ldrh.w	r3, [fp]
 800f342:	4f5c      	ldr	r7, [pc, #368]	; (800f4b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800f344:	9301      	str	r3, [sp, #4]
 800f346:	f8ba 3000 	ldrh.w	r3, [sl]
 800f34a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800f34e:	4640      	mov	r0, r8
 800f350:	9302      	str	r3, [sp, #8]
 800f352:	883b      	ldrh	r3, [r7, #0]
 800f354:	9303      	str	r3, [sp, #12]
 800f356:	4b58      	ldr	r3, [pc, #352]	; (800f4b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800f358:	881a      	ldrh	r2, [r3, #0]
 800f35a:	9305      	str	r3, [sp, #20]
 800f35c:	9204      	str	r2, [sp, #16]
 800f35e:	f005 fe17 	bl	8014f90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f362:	8038      	strh	r0, [r7, #0]
 800f364:	4640      	mov	r0, r8
 800f366:	f005 fe47 	bl	8014ff8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f36a:	9b05      	ldr	r3, [sp, #20]
 800f36c:	b280      	uxth	r0, r0
 800f36e:	8018      	strh	r0, [r3, #0]
 800f370:	4b52      	ldr	r3, [pc, #328]	; (800f4bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800f372:	781b      	ldrb	r3, [r3, #0]
 800f374:	2b00      	cmp	r3, #0
 800f376:	d174      	bne.n	800f462 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800f378:	883b      	ldrh	r3, [r7, #0]
 800f37a:	f8aa 0000 	strh.w	r0, [sl]
 800f37e:	f8ab 3000 	strh.w	r3, [fp]
 800f382:	4648      	mov	r0, r9
 800f384:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800f388:	f005 fd6e 	bl	8014e68 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800f38c:	2200      	movs	r2, #0
 800f38e:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800f392:	4611      	mov	r1, r2
 800f394:	4628      	mov	r0, r5
 800f396:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800f39a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800f39e:	f7fa fea4 	bl	800a0ea <_ZN8touchgfx8Drawable5setXYEss>
 800f3a2:	2301      	movs	r3, #1
 800f3a4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800f3a8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800f3ac:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f3b0:	2b00      	cmp	r3, #0
 800f3b2:	dd5c      	ble.n	800f46e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800f3b4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f3b8:	2b00      	cmp	r3, #0
 800f3ba:	dd58      	ble.n	800f46e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800f3bc:	462a      	mov	r2, r5
 800f3be:	ab0a      	add	r3, sp, #40	; 0x28
 800f3c0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800f3c4:	6851      	ldr	r1, [r2, #4]
 800f3c6:	c303      	stmia	r3!, {r0, r1}
 800f3c8:	4631      	mov	r1, r6
 800f3ca:	a80a      	add	r0, sp, #40	; 0x28
 800f3cc:	f7ff fbf6 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 800f3d0:	4b38      	ldr	r3, [pc, #224]	; (800f4b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800f3d2:	2100      	movs	r1, #0
 800f3d4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f3d8:	4b37      	ldr	r3, [pc, #220]	; (800f4b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800f3da:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800f3de:	aa0a      	add	r2, sp, #40	; 0x28
 800f3e0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f3e4:	910c      	str	r1, [sp, #48]	; 0x30
 800f3e6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800f3ea:	ab08      	add	r3, sp, #32
 800f3ec:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f3f0:	e883 0003 	stmia.w	r3, {r0, r1}
 800f3f4:	4618      	mov	r0, r3
 800f3f6:	a90c      	add	r1, sp, #48	; 0x30
 800f3f8:	f7ff fbe0 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 800f3fc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800f3fe:	2b00      	cmp	r3, #0
 800f400:	d13c      	bne.n	800f47c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800f402:	2000      	movs	r0, #0
 800f404:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 800f408:	2600      	movs	r6, #0
 800f40a:	696b      	ldr	r3, [r5, #20]
 800f40c:	a908      	add	r1, sp, #32
 800f40e:	682a      	ldr	r2, [r5, #0]
 800f410:	4628      	mov	r0, r5
 800f412:	9305      	str	r3, [sp, #20]
 800f414:	616e      	str	r6, [r5, #20]
 800f416:	6892      	ldr	r2, [r2, #8]
 800f418:	4790      	blx	r2
 800f41a:	9b05      	ldr	r3, [sp, #20]
 800f41c:	4652      	mov	r2, sl
 800f41e:	4649      	mov	r1, r9
 800f420:	616b      	str	r3, [r5, #20]
 800f422:	4628      	mov	r0, r5
 800f424:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 800f428:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800f42c:	f7fa fe5d 	bl	800a0ea <_ZN8touchgfx8Drawable5setXYEss>
 800f430:	9a01      	ldr	r2, [sp, #4]
 800f432:	4b23      	ldr	r3, [pc, #140]	; (800f4c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800f434:	4620      	mov	r0, r4
 800f436:	801a      	strh	r2, [r3, #0]
 800f438:	9a02      	ldr	r2, [sp, #8]
 800f43a:	4b22      	ldr	r3, [pc, #136]	; (800f4c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800f43c:	801a      	strh	r2, [r3, #0]
 800f43e:	9a03      	ldr	r2, [sp, #12]
 800f440:	4b1c      	ldr	r3, [pc, #112]	; (800f4b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800f442:	801a      	strh	r2, [r3, #0]
 800f444:	4b1c      	ldr	r3, [pc, #112]	; (800f4b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800f446:	9a04      	ldr	r2, [sp, #16]
 800f448:	801a      	strh	r2, [r3, #0]
 800f44a:	6823      	ldr	r3, [r4, #0]
 800f44c:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800f450:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f452:	4798      	blx	r3
 800f454:	6823      	ldr	r3, [r4, #0]
 800f456:	4620      	mov	r0, r4
 800f458:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f45a:	4798      	blx	r3
 800f45c:	b00f      	add	sp, #60	; 0x3c
 800f45e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f462:	883b      	ldrh	r3, [r7, #0]
 800f464:	f8ab 0000 	strh.w	r0, [fp]
 800f468:	f8aa 3000 	strh.w	r3, [sl]
 800f46c:	e789      	b.n	800f382 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800f46e:	462a      	mov	r2, r5
 800f470:	ab0a      	add	r3, sp, #40	; 0x28
 800f472:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800f476:	6851      	ldr	r1, [r2, #4]
 800f478:	c303      	stmia	r3!, {r0, r1}
 800f47a:	e7a9      	b.n	800f3d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800f47c:	a807      	add	r0, sp, #28
 800f47e:	f005 fef7 	bl	8015270 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f482:	4606      	mov	r6, r0
 800f484:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800f486:	6803      	ldr	r3, [r0, #0]
 800f488:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f48a:	4798      	blx	r3
 800f48c:	4286      	cmp	r6, r0
 800f48e:	d1b8      	bne.n	800f402 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800f490:	f7fa f8ba 	bl	8009608 <_ZN8touchgfx3HAL3lcdEv>
 800f494:	6803      	ldr	r3, [r0, #0]
 800f496:	4606      	mov	r6, r0
 800f498:	a807      	add	r0, sp, #28
 800f49a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f49c:	9305      	str	r3, [sp, #20]
 800f49e:	f005 fee7 	bl	8015270 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f4a2:	9b05      	ldr	r3, [sp, #20]
 800f4a4:	4601      	mov	r1, r0
 800f4a6:	4630      	mov	r0, r6
 800f4a8:	4798      	blx	r3
 800f4aa:	f080 0001 	eor.w	r0, r0, #1
 800f4ae:	b2c0      	uxtb	r0, r0
 800f4b0:	e7a8      	b.n	800f404 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800f4b2:	bf00      	nop
 800f4b4:	20032420 	.word	0x20032420
 800f4b8:	20032422 	.word	0x20032422
 800f4bc:	20032424 	.word	0x20032424
 800f4c0:	20032426 	.word	0x20032426
 800f4c4:	20032428 	.word	0x20032428

0800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800f4c8:	4b07      	ldr	r3, [pc, #28]	; (800f4e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800f4ca:	b510      	push	{r4, lr}
 800f4cc:	781b      	ldrb	r3, [r3, #0]
 800f4ce:	4604      	mov	r4, r0
 800f4d0:	b13b      	cbz	r3, 800f4e2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800f4d2:	6803      	ldr	r3, [r0, #0]
 800f4d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f4d6:	4798      	blx	r3
 800f4d8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f4da:	4283      	cmp	r3, r0
 800f4dc:	d101      	bne.n	800f4e2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800f4de:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800f4e0:	bd10      	pop	{r4, pc}
 800f4e2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800f4e4:	e7fc      	b.n	800f4e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800f4e6:	bf00      	nop
 800f4e8:	2003242a 	.word	0x2003242a

0800f4ec <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800f4ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f4f0:	461d      	mov	r5, r3
 800f4f2:	b08a      	sub	sp, #40	; 0x28
 800f4f4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f4f8:	4690      	mov	r8, r2
 800f4fa:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800f4fe:	2400      	movs	r4, #0
 800f500:	4607      	mov	r7, r0
 800f502:	fb06 8505 	mla	r5, r6, r5, r8
 800f506:	9404      	str	r4, [sp, #16]
 800f508:	f88d 4020 	strb.w	r4, [sp, #32]
 800f50c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f510:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f514:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f518:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f51c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f520:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f524:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f528:	f7ff ffce 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f52c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f530:	6878      	ldr	r0, [r7, #4]
 800f532:	f8ad 601e 	strh.w	r6, [sp, #30]
 800f536:	a901      	add	r1, sp, #4
 800f538:	9505      	str	r5, [sp, #20]
 800f53a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800f53e:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800f542:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800f546:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800f54a:	6803      	ldr	r3, [r0, #0]
 800f54c:	685b      	ldr	r3, [r3, #4]
 800f54e:	4798      	blx	r3
 800f550:	b00a      	add	sp, #40	; 0x28
 800f552:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f556 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800f556:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f55a:	b08b      	sub	sp, #44	; 0x2c
 800f55c:	2400      	movs	r4, #0
 800f55e:	4691      	mov	r9, r2
 800f560:	461d      	mov	r5, r3
 800f562:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800f566:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800f56a:	4688      	mov	r8, r1
 800f56c:	4607      	mov	r7, r0
 800f56e:	9404      	str	r4, [sp, #16]
 800f570:	fb06 9505 	mla	r5, r6, r5, r9
 800f574:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f578:	f7ff ffa6 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f57c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f580:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f584:	6878      	ldr	r0, [r7, #4]
 800f586:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f58a:	a901      	add	r1, sp, #4
 800f58c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800f590:	9505      	str	r5, [sp, #20]
 800f592:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f596:	f8ad 401c 	strh.w	r4, [sp, #28]
 800f59a:	f8ad 601e 	strh.w	r6, [sp, #30]
 800f59e:	f8cd 8010 	str.w	r8, [sp, #16]
 800f5a2:	f8ad 4020 	strh.w	r4, [sp, #32]
 800f5a6:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800f5aa:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800f5ae:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800f5b2:	6803      	ldr	r3, [r0, #0]
 800f5b4:	685b      	ldr	r3, [r3, #4]
 800f5b6:	4798      	blx	r3
 800f5b8:	b00b      	add	sp, #44	; 0x2c
 800f5ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800f5c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800f5c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f5c4:	b08a      	sub	sp, #40	; 0x28
 800f5c6:	4698      	mov	r8, r3
 800f5c8:	2300      	movs	r3, #0
 800f5ca:	4606      	mov	r6, r0
 800f5cc:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800f5d0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800f5d4:	2d0b      	cmp	r5, #11
 800f5d6:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800f5da:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800f5de:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800f5e2:	9304      	str	r3, [sp, #16]
 800f5e4:	d137      	bne.n	800f656 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800f5e6:	2380      	movs	r3, #128	; 0x80
 800f5e8:	f88d 0020 	strb.w	r0, [sp, #32]
 800f5ec:	4630      	mov	r0, r6
 800f5ee:	9203      	str	r2, [sp, #12]
 800f5f0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f5f4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f5f8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f5fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f600:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f604:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800f608:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f60c:	f7ff ff5c 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f610:	2c0b      	cmp	r4, #11
 800f612:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800f616:	f8ad 701e 	strh.w	r7, [sp, #30]
 800f61a:	bf94      	ite	ls
 800f61c:	4b19      	ldrls	r3, [pc, #100]	; (800f684 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800f61e:	2100      	movhi	r1, #0
 800f620:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800f624:	bf98      	it	ls
 800f626:	5d19      	ldrbls	r1, [r3, r4]
 800f628:	fb02 8307 	mla	r3, r2, r7, r8
 800f62c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800f630:	10c9      	asrs	r1, r1, #3
 800f632:	fb01 0003 	mla	r0, r1, r3, r0
 800f636:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800f63a:	a901      	add	r1, sp, #4
 800f63c:	9005      	str	r0, [sp, #20]
 800f63e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800f642:	2300      	movs	r3, #0
 800f644:	6870      	ldr	r0, [r6, #4]
 800f646:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800f64a:	6803      	ldr	r3, [r0, #0]
 800f64c:	685b      	ldr	r3, [r3, #4]
 800f64e:	4798      	blx	r3
 800f650:	b00a      	add	sp, #40	; 0x28
 800f652:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f656:	2d02      	cmp	r5, #2
 800f658:	d109      	bne.n	800f66e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800f65a:	28ff      	cmp	r0, #255	; 0xff
 800f65c:	d105      	bne.n	800f66a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800f65e:	f1bc 0f00 	cmp.w	ip, #0
 800f662:	bf14      	ite	ne
 800f664:	2340      	movne	r3, #64	; 0x40
 800f666:	2320      	moveq	r3, #32
 800f668:	e7be      	b.n	800f5e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f66a:	2340      	movs	r3, #64	; 0x40
 800f66c:	e7bc      	b.n	800f5e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f66e:	28ff      	cmp	r0, #255	; 0xff
 800f670:	d105      	bne.n	800f67e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800f672:	f1bc 0f00 	cmp.w	ip, #0
 800f676:	bf14      	ite	ne
 800f678:	2304      	movne	r3, #4
 800f67a:	2301      	moveq	r3, #1
 800f67c:	e7b4      	b.n	800f5e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f67e:	2304      	movs	r3, #4
 800f680:	e7b2      	b.n	800f5e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f682:	bf00      	nop
 800f684:	08025fb0 	.word	0x08025fb0

0800f688 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800f688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f68c:	b08b      	sub	sp, #44	; 0x2c
 800f68e:	461d      	mov	r5, r3
 800f690:	2400      	movs	r4, #0
 800f692:	4688      	mov	r8, r1
 800f694:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800f698:	4693      	mov	fp, r2
 800f69a:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800f69e:	4607      	mov	r7, r0
 800f6a0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800f6a4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800f6a8:	9404      	str	r4, [sp, #16]
 800f6aa:	bf14      	ite	ne
 800f6ac:	2308      	movne	r3, #8
 800f6ae:	2302      	moveq	r3, #2
 800f6b0:	fb05 b50a 	mla	r5, r5, sl, fp
 800f6b4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f6b8:	f7ff ff06 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f6bc:	2e0b      	cmp	r6, #11
 800f6be:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800f6c2:	a901      	add	r1, sp, #4
 800f6c4:	bf98      	it	ls
 800f6c6:	4b13      	ldrls	r3, [pc, #76]	; (800f714 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800f6c8:	f8ad a01e 	strh.w	sl, [sp, #30]
 800f6cc:	bf98      	it	ls
 800f6ce:	5d9c      	ldrbls	r4, [r3, r6]
 800f6d0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800f6d4:	10e4      	asrs	r4, r4, #3
 800f6d6:	f8cd 8010 	str.w	r8, [sp, #16]
 800f6da:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f6de:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800f6e2:	fb04 0405 	mla	r4, r4, r5, r0
 800f6e6:	6878      	ldr	r0, [r7, #4]
 800f6e8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f6ec:	2300      	movs	r3, #0
 800f6ee:	9405      	str	r4, [sp, #20]
 800f6f0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f6f4:	f88d 9020 	strb.w	r9, [sp, #32]
 800f6f8:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800f6fc:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800f700:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800f704:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800f708:	6803      	ldr	r3, [r0, #0]
 800f70a:	685b      	ldr	r3, [r3, #4]
 800f70c:	4798      	blx	r3
 800f70e:	b00b      	add	sp, #44	; 0x2c
 800f710:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f714:	08025fb0 	.word	0x08025fb0

0800f718 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800f718:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f71c:	461e      	mov	r6, r3
 800f71e:	4b0a      	ldr	r3, [pc, #40]	; (800f748 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800f720:	460f      	mov	r7, r1
 800f722:	4690      	mov	r8, r2
 800f724:	881d      	ldrh	r5, [r3, #0]
 800f726:	f7f9 ff6f 	bl	8009608 <_ZN8touchgfx3HAL3lcdEv>
 800f72a:	6803      	ldr	r3, [r0, #0]
 800f72c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f72e:	4798      	blx	r3
 800f730:	280b      	cmp	r0, #11
 800f732:	bf96      	itet	ls
 800f734:	4b05      	ldrls	r3, [pc, #20]	; (800f74c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800f736:	2400      	movhi	r4, #0
 800f738:	5c1c      	ldrbls	r4, [r3, r0]
 800f73a:	fb08 7005 	mla	r0, r8, r5, r7
 800f73e:	10e4      	asrs	r4, r4, #3
 800f740:	fb04 6000 	mla	r0, r4, r0, r6
 800f744:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f748:	20032426 	.word	0x20032426
 800f74c:	08025fb0 	.word	0x08025fb0

0800f750 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800f750:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f752:	b08b      	sub	sp, #44	; 0x2c
 800f754:	461f      	mov	r7, r3
 800f756:	4604      	mov	r4, r0
 800f758:	4616      	mov	r6, r2
 800f75a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800f75e:	2500      	movs	r5, #0
 800f760:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f764:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f768:	9504      	str	r5, [sp, #16]
 800f76a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f76e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f772:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f776:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f77a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f77e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800f782:	f88d 3020 	strb.w	r3, [sp, #32]
 800f786:	f7ff fe9f 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f78a:	463a      	mov	r2, r7
 800f78c:	4631      	mov	r1, r6
 800f78e:	4603      	mov	r3, r0
 800f790:	4620      	mov	r0, r4
 800f792:	f7ff ffc1 	bl	800f718 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f796:	4b0e      	ldr	r3, [pc, #56]	; (800f7d0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800f798:	9005      	str	r0, [sp, #20]
 800f79a:	881b      	ldrh	r3, [r3, #0]
 800f79c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800f7a0:	f7f9 ff32 	bl	8009608 <_ZN8touchgfx3HAL3lcdEv>
 800f7a4:	6803      	ldr	r3, [r0, #0]
 800f7a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f7a8:	4798      	blx	r3
 800f7aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800f7ac:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800f7b0:	a901      	add	r1, sp, #4
 800f7b2:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800f7b6:	9304      	str	r3, [sp, #16]
 800f7b8:	6860      	ldr	r0, [r4, #4]
 800f7ba:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800f7be:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800f7c2:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800f7c6:	6803      	ldr	r3, [r0, #0]
 800f7c8:	685b      	ldr	r3, [r3, #4]
 800f7ca:	4798      	blx	r3
 800f7cc:	b00b      	add	sp, #44	; 0x2c
 800f7ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f7d0:	20032426 	.word	0x20032426

0800f7d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800f7d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f7d6:	b08d      	sub	sp, #52	; 0x34
 800f7d8:	2501      	movs	r5, #1
 800f7da:	4604      	mov	r4, r0
 800f7dc:	466b      	mov	r3, sp
 800f7de:	9503      	str	r5, [sp, #12]
 800f7e0:	e883 0006 	stmia.w	r3, {r1, r2}
 800f7e4:	2300      	movs	r3, #0
 800f7e6:	f8bd 6000 	ldrh.w	r6, [sp]
 800f7ea:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800f7ee:	9306      	str	r3, [sp, #24]
 800f7f0:	6803      	ldr	r3, [r0, #0]
 800f7f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f7f4:	4798      	blx	r3
 800f7f6:	463a      	mov	r2, r7
 800f7f8:	4631      	mov	r1, r6
 800f7fa:	4603      	mov	r3, r0
 800f7fc:	4620      	mov	r0, r4
 800f7fe:	f7ff ff8b 	bl	800f718 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f802:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f804:	9004      	str	r0, [sp, #16]
 800f806:	9307      	str	r3, [sp, #28]
 800f808:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f80c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f810:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800f814:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f818:	4b0e      	ldr	r3, [pc, #56]	; (800f854 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800f81a:	881b      	ldrh	r3, [r3, #0]
 800f81c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800f820:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f824:	f7f9 fef0 	bl	8009608 <_ZN8touchgfx3HAL3lcdEv>
 800f828:	6803      	ldr	r3, [r0, #0]
 800f82a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f82c:	4798      	blx	r3
 800f82e:	23ff      	movs	r3, #255	; 0xff
 800f830:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800f834:	a903      	add	r1, sp, #12
 800f836:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800f83a:	6860      	ldr	r0, [r4, #4]
 800f83c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800f840:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800f844:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800f848:	6803      	ldr	r3, [r0, #0]
 800f84a:	685b      	ldr	r3, [r3, #4]
 800f84c:	4798      	blx	r3
 800f84e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800f850:	b00d      	add	sp, #52	; 0x34
 800f852:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f854:	20032426 	.word	0x20032426

0800f858 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800f858:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f85c:	b08c      	sub	sp, #48	; 0x30
 800f85e:	461e      	mov	r6, r3
 800f860:	2300      	movs	r3, #0
 800f862:	4604      	mov	r4, r0
 800f864:	466d      	mov	r5, sp
 800f866:	9306      	str	r3, [sp, #24]
 800f868:	6803      	ldr	r3, [r0, #0]
 800f86a:	e885 0006 	stmia.w	r5, {r1, r2}
 800f86e:	2501      	movs	r5, #1
 800f870:	f8bd 7000 	ldrh.w	r7, [sp]
 800f874:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800f878:	9503      	str	r5, [sp, #12]
 800f87a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f87c:	4798      	blx	r3
 800f87e:	4642      	mov	r2, r8
 800f880:	4639      	mov	r1, r7
 800f882:	4603      	mov	r3, r0
 800f884:	4620      	mov	r0, r4
 800f886:	f7ff ff47 	bl	800f718 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f88a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f88e:	9004      	str	r0, [sp, #16]
 800f890:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f894:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800f898:	9607      	str	r6, [sp, #28]
 800f89a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f89e:	4b10      	ldr	r3, [pc, #64]	; (800f8e0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800f8a0:	881b      	ldrh	r3, [r3, #0]
 800f8a2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800f8a6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f8a8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f8ac:	f7f9 feac 	bl	8009608 <_ZN8touchgfx3HAL3lcdEv>
 800f8b0:	6803      	ldr	r3, [r0, #0]
 800f8b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f8b4:	4798      	blx	r3
 800f8b6:	23ff      	movs	r3, #255	; 0xff
 800f8b8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800f8bc:	a903      	add	r1, sp, #12
 800f8be:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800f8c2:	6860      	ldr	r0, [r4, #4]
 800f8c4:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800f8c8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800f8cc:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800f8d0:	6803      	ldr	r3, [r0, #0]
 800f8d2:	685b      	ldr	r3, [r3, #4]
 800f8d4:	4798      	blx	r3
 800f8d6:	4630      	mov	r0, r6
 800f8d8:	b00c      	add	sp, #48	; 0x30
 800f8da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f8de:	bf00      	nop
 800f8e0:	20032426 	.word	0x20032426

0800f8e4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800f8e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f8e6:	b085      	sub	sp, #20
 800f8e8:	4605      	mov	r5, r0
 800f8ea:	ac02      	add	r4, sp, #8
 800f8ec:	e884 0006 	stmia.w	r4, {r1, r2}
 800f8f0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800f8f4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800f8f8:	f7ff fde6 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f8fc:	4631      	mov	r1, r6
 800f8fe:	4603      	mov	r3, r0
 800f900:	463a      	mov	r2, r7
 800f902:	4628      	mov	r0, r5
 800f904:	f7ff ff08 	bl	800f718 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f908:	4a05      	ldr	r2, [pc, #20]	; (800f920 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800f90a:	682b      	ldr	r3, [r5, #0]
 800f90c:	8812      	ldrh	r2, [r2, #0]
 800f90e:	9200      	str	r2, [sp, #0]
 800f910:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800f912:	4603      	mov	r3, r0
 800f914:	4628      	mov	r0, r5
 800f916:	e894 0006 	ldmia.w	r4, {r1, r2}
 800f91a:	47b0      	blx	r6
 800f91c:	b005      	add	sp, #20
 800f91e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f920:	20032426 	.word	0x20032426

0800f924 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800f924:	b570      	push	{r4, r5, r6, lr}
 800f926:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 800f92a:	4604      	mov	r4, r0
 800f92c:	b19b      	cbz	r3, 800f956 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800f92e:	2002      	movs	r0, #2
 800f930:	f7fd f978 	bl	800cc24 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800f934:	2300      	movs	r3, #0
 800f936:	4620      	mov	r0, r4
 800f938:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800f93c:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800f940:	6823      	ldr	r3, [r4, #0]
 800f942:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800f946:	f7ff fdbf 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f94a:	4601      	mov	r1, r0
 800f94c:	4620      	mov	r0, r4
 800f94e:	462b      	mov	r3, r5
 800f950:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f954:	4718      	bx	r3
 800f956:	bd70      	pop	{r4, r5, r6, pc}

0800f958 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800f958:	b538      	push	{r3, r4, r5, lr}
 800f95a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 800f95e:	4604      	mov	r4, r0
 800f960:	460d      	mov	r5, r1
 800f962:	428b      	cmp	r3, r1
 800f964:	d006      	beq.n	800f974 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800f966:	6803      	ldr	r3, [r0, #0]
 800f968:	b929      	cbnz	r1, 800f976 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800f96a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f96e:	4798      	blx	r3
 800f970:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 800f974:	bd38      	pop	{r3, r4, r5, pc}
 800f976:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800f97a:	e7f8      	b.n	800f96e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800f97c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800f97c:	4b0d      	ldr	r3, [pc, #52]	; (800f9b4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800f97e:	b510      	push	{r4, lr}
 800f980:	781b      	ldrb	r3, [r3, #0]
 800f982:	4604      	mov	r4, r0
 800f984:	b95b      	cbnz	r3, 800f99e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f986:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800f98a:	2b02      	cmp	r3, #2
 800f98c:	d007      	beq.n	800f99e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f98e:	6840      	ldr	r0, [r0, #4]
 800f990:	f000 f90e 	bl	800fbb0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800f994:	b118      	cbz	r0, 800f99e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f996:	6862      	ldr	r2, [r4, #4]
 800f998:	7a53      	ldrb	r3, [r2, #9]
 800f99a:	2b00      	cmp	r3, #0
 800f99c:	d0fc      	beq.n	800f998 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800f99e:	f7fd fc09 	bl	800d1b4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800f9a2:	4620      	mov	r0, r4
 800f9a4:	2100      	movs	r1, #0
 800f9a6:	f7ff ffd7 	bl	800f958 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800f9aa:	4620      	mov	r0, r4
 800f9ac:	f7ff fd8c 	bl	800f4c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f9b0:	bd10      	pop	{r4, pc}
 800f9b2:	bf00      	nop
 800f9b4:	2003242a 	.word	0x2003242a

0800f9b8 <_ZN8touchgfx13DMA_Interface5flushEv>:
 800f9b8:	6803      	ldr	r3, [r0, #0]
 800f9ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f9bc:	4718      	bx	r3

0800f9be <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800f9be:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800f9c2:	1a13      	subs	r3, r2, r0
 800f9c4:	4258      	negs	r0, r3
 800f9c6:	4158      	adcs	r0, r3
 800f9c8:	4770      	bx	lr

0800f9ca <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800f9ca:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800f9ce:	1a9b      	subs	r3, r3, r2
 800f9d0:	2b00      	cmp	r3, #0
 800f9d2:	bfdc      	itt	le
 800f9d4:	6882      	ldrle	r2, [r0, #8]
 800f9d6:	189b      	addle	r3, r3, r2
 800f9d8:	2b01      	cmp	r3, #1
 800f9da:	bfcc      	ite	gt
 800f9dc:	2000      	movgt	r0, #0
 800f9de:	2001      	movle	r0, #1
 800f9e0:	4770      	bx	lr

0800f9e2 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800f9e2:	6902      	ldr	r2, [r0, #16]
 800f9e4:	6843      	ldr	r3, [r0, #4]
 800f9e6:	2024      	movs	r0, #36	; 0x24
 800f9e8:	fb00 3002 	mla	r0, r0, r2, r3
 800f9ec:	4770      	bx	lr

0800f9ee <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800f9ee:	6803      	ldr	r3, [r0, #0]
 800f9f0:	691b      	ldr	r3, [r3, #16]
 800f9f2:	4718      	bx	r3

0800f9f4 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800f9f4:	2301      	movs	r3, #1
 800f9f6:	b570      	push	{r4, r5, r6, lr}
 800f9f8:	7203      	strb	r3, [r0, #8]
 800f9fa:	4604      	mov	r4, r0
 800f9fc:	6840      	ldr	r0, [r0, #4]
 800f9fe:	6803      	ldr	r3, [r0, #0]
 800fa00:	699b      	ldr	r3, [r3, #24]
 800fa02:	4798      	blx	r3
 800fa04:	6803      	ldr	r3, [r0, #0]
 800fa06:	4605      	mov	r5, r0
 800fa08:	2b40      	cmp	r3, #64	; 0x40
 800fa0a:	d00c      	beq.n	800fa26 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800fa0c:	d810      	bhi.n	800fa30 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800fa0e:	2b04      	cmp	r3, #4
 800fa10:	d01d      	beq.n	800fa4e <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800fa12:	d804      	bhi.n	800fa1e <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800fa14:	2b01      	cmp	r3, #1
 800fa16:	d006      	beq.n	800fa26 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800fa18:	2b02      	cmp	r3, #2
 800fa1a:	d02c      	beq.n	800fa76 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800fa1c:	bd70      	pop	{r4, r5, r6, pc}
 800fa1e:	2b08      	cmp	r3, #8
 800fa20:	d01d      	beq.n	800fa5e <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800fa22:	2b20      	cmp	r3, #32
 800fa24:	d1fa      	bne.n	800fa1c <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800fa26:	6823      	ldr	r3, [r4, #0]
 800fa28:	4620      	mov	r0, r4
 800fa2a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fa2c:	4798      	blx	r3
 800fa2e:	e013      	b.n	800fa58 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800fa30:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800fa34:	d0f7      	beq.n	800fa26 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800fa36:	d804      	bhi.n	800fa42 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800fa38:	2b80      	cmp	r3, #128	; 0x80
 800fa3a:	d0f4      	beq.n	800fa26 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800fa3c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800fa40:	e7f0      	b.n	800fa24 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800fa42:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800fa46:	d0ee      	beq.n	800fa26 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800fa48:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800fa4c:	e7e5      	b.n	800fa1a <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800fa4e:	6823      	ldr	r3, [r4, #0]
 800fa50:	7f01      	ldrb	r1, [r0, #28]
 800fa52:	4620      	mov	r0, r4
 800fa54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fa56:	4798      	blx	r3
 800fa58:	6823      	ldr	r3, [r4, #0]
 800fa5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fa5c:	e006      	b.n	800fa6c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800fa5e:	6823      	ldr	r3, [r4, #0]
 800fa60:	7f01      	ldrb	r1, [r0, #28]
 800fa62:	4620      	mov	r0, r4
 800fa64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fa66:	4798      	blx	r3
 800fa68:	6823      	ldr	r3, [r4, #0]
 800fa6a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fa6c:	4629      	mov	r1, r5
 800fa6e:	4620      	mov	r0, r4
 800fa70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fa74:	4718      	bx	r3
 800fa76:	6823      	ldr	r3, [r4, #0]
 800fa78:	4620      	mov	r0, r4
 800fa7a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fa7c:	4798      	blx	r3
 800fa7e:	e7f3      	b.n	800fa68 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800fa80 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800fa80:	4770      	bx	lr

0800fa82 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800fa82:	4770      	bx	lr

0800fa84 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800fa84:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800fa88:	b510      	push	{r4, lr}
 800fa8a:	1ad2      	subs	r2, r2, r3
 800fa8c:	2a00      	cmp	r2, #0
 800fa8e:	bfdc      	itt	le
 800fa90:	6884      	ldrle	r4, [r0, #8]
 800fa92:	1912      	addle	r2, r2, r4
 800fa94:	2a01      	cmp	r2, #1
 800fa96:	dd16      	ble.n	800fac6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800fa98:	6842      	ldr	r2, [r0, #4]
 800fa9a:	2424      	movs	r4, #36	; 0x24
 800fa9c:	fb04 2303 	mla	r3, r4, r3, r2
 800faa0:	f101 0220 	add.w	r2, r1, #32
 800faa4:	f851 4b04 	ldr.w	r4, [r1], #4
 800faa8:	4291      	cmp	r1, r2
 800faaa:	f843 4b04 	str.w	r4, [r3], #4
 800faae:	d1f9      	bne.n	800faa4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800fab0:	780a      	ldrb	r2, [r1, #0]
 800fab2:	701a      	strb	r2, [r3, #0]
 800fab4:	68c3      	ldr	r3, [r0, #12]
 800fab6:	6882      	ldr	r2, [r0, #8]
 800fab8:	f3bf 8f5b 	dmb	ish
 800fabc:	3301      	adds	r3, #1
 800fabe:	429a      	cmp	r2, r3
 800fac0:	bfd8      	it	le
 800fac2:	1a9b      	suble	r3, r3, r2
 800fac4:	60c3      	str	r3, [r0, #12]
 800fac6:	bd10      	pop	{r4, pc}

0800fac8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800fac8:	6903      	ldr	r3, [r0, #16]
 800faca:	6882      	ldr	r2, [r0, #8]
 800facc:	f3bf 8f5b 	dmb	ish
 800fad0:	3301      	adds	r3, #1
 800fad2:	429a      	cmp	r2, r3
 800fad4:	bfd8      	it	le
 800fad6:	1a9b      	suble	r3, r3, r2
 800fad8:	6103      	str	r3, [r0, #16]
 800fada:	4770      	bx	lr

0800fadc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800fadc:	b570      	push	{r4, r5, r6, lr}
 800fade:	4604      	mov	r4, r0
 800fae0:	460e      	mov	r6, r1
 800fae2:	6860      	ldr	r0, [r4, #4]
 800fae4:	6803      	ldr	r3, [r0, #0]
 800fae6:	685b      	ldr	r3, [r3, #4]
 800fae8:	4798      	blx	r3
 800faea:	2800      	cmp	r0, #0
 800faec:	d1f9      	bne.n	800fae2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800faee:	4d0d      	ldr	r5, [pc, #52]	; (800fb24 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800faf0:	6828      	ldr	r0, [r5, #0]
 800faf2:	6803      	ldr	r3, [r0, #0]
 800faf4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800faf6:	4798      	blx	r3
 800faf8:	f7fd fb7e 	bl	800d1f8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800fafc:	6828      	ldr	r0, [r5, #0]
 800fafe:	2101      	movs	r1, #1
 800fb00:	f7ff ff2a 	bl	800f958 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800fb04:	6860      	ldr	r0, [r4, #4]
 800fb06:	4631      	mov	r1, r6
 800fb08:	6803      	ldr	r3, [r0, #0]
 800fb0a:	689b      	ldr	r3, [r3, #8]
 800fb0c:	4798      	blx	r3
 800fb0e:	6823      	ldr	r3, [r4, #0]
 800fb10:	4620      	mov	r0, r4
 800fb12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fb14:	4798      	blx	r3
 800fb16:	6828      	ldr	r0, [r5, #0]
 800fb18:	6803      	ldr	r3, [r0, #0]
 800fb1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb1e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800fb20:	4718      	bx	r3
 800fb22:	bf00      	nop
 800fb24:	2003242c 	.word	0x2003242c

0800fb28 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800fb28:	b508      	push	{r3, lr}
 800fb2a:	f7fd fb43 	bl	800d1b4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800fb2e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fb32:	f7fd bb55 	b.w	800d1e0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800fb36 <_ZN8touchgfx13DMA_Interface5startEv>:
 800fb36:	b510      	push	{r4, lr}
 800fb38:	4604      	mov	r4, r0
 800fb3a:	6840      	ldr	r0, [r0, #4]
 800fb3c:	6803      	ldr	r3, [r0, #0]
 800fb3e:	681b      	ldr	r3, [r3, #0]
 800fb40:	4798      	blx	r3
 800fb42:	b948      	cbnz	r0, 800fb58 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800fb44:	7a63      	ldrb	r3, [r4, #9]
 800fb46:	b13b      	cbz	r3, 800fb58 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800fb48:	7a23      	ldrb	r3, [r4, #8]
 800fb4a:	b92b      	cbnz	r3, 800fb58 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800fb4c:	6823      	ldr	r3, [r4, #0]
 800fb4e:	4620      	mov	r0, r4
 800fb50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fb52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fb56:	4718      	bx	r3
 800fb58:	bd10      	pop	{r4, pc}

0800fb5a <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800fb5a:	b570      	push	{r4, r5, r6, lr}
 800fb5c:	4604      	mov	r4, r0
 800fb5e:	6840      	ldr	r0, [r0, #4]
 800fb60:	6803      	ldr	r3, [r0, #0]
 800fb62:	681b      	ldr	r3, [r3, #0]
 800fb64:	4798      	blx	r3
 800fb66:	4605      	mov	r5, r0
 800fb68:	b930      	cbnz	r0, 800fb78 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800fb6a:	7a23      	ldrb	r3, [r4, #8]
 800fb6c:	b123      	cbz	r3, 800fb78 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800fb6e:	6860      	ldr	r0, [r4, #4]
 800fb70:	6803      	ldr	r3, [r0, #0]
 800fb72:	695b      	ldr	r3, [r3, #20]
 800fb74:	4798      	blx	r3
 800fb76:	7225      	strb	r5, [r4, #8]
 800fb78:	6860      	ldr	r0, [r4, #4]
 800fb7a:	6803      	ldr	r3, [r0, #0]
 800fb7c:	681b      	ldr	r3, [r3, #0]
 800fb7e:	4798      	blx	r3
 800fb80:	b928      	cbnz	r0, 800fb8e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800fb82:	6823      	ldr	r3, [r4, #0]
 800fb84:	4620      	mov	r0, r4
 800fb86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fb88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb8c:	4718      	bx	r3
 800fb8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb92:	f7fd bb3d 	b.w	800d210 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

0800fb98 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800fb98:	b510      	push	{r4, lr}
 800fb9a:	6082      	str	r2, [r0, #8]
 800fb9c:	2200      	movs	r2, #0
 800fb9e:	4c03      	ldr	r4, [pc, #12]	; (800fbac <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800fba0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800fba4:	e9c0 4100 	strd	r4, r1, [r0]
 800fba8:	bd10      	pop	{r4, pc}
 800fbaa:	bf00      	nop
 800fbac:	080260ec 	.word	0x080260ec

0800fbb0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800fbb0:	6840      	ldr	r0, [r0, #4]
 800fbb2:	6803      	ldr	r3, [r0, #0]
 800fbb4:	681b      	ldr	r3, [r3, #0]
 800fbb6:	4718      	bx	r3

0800fbb8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800fbb8:	2000      	movs	r0, #0
 800fbba:	4770      	bx	lr

0800fbbc <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800fbbc:	4b07      	ldr	r3, [pc, #28]	; (800fbdc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800fbbe:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800fbc0:	881b      	ldrh	r3, [r3, #0]
 800fbc2:	4293      	cmp	r3, r2
 800fbc4:	bf81      	itttt	hi
 800fbc6:	4b06      	ldrhi	r3, [pc, #24]	; (800fbe0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800fbc8:	681b      	ldrhi	r3, [r3, #0]
 800fbca:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800fbce:	7858      	ldrbhi	r0, [r3, #1]
 800fbd0:	bf8c      	ite	hi
 800fbd2:	f000 0003 	andhi.w	r0, r0, #3
 800fbd6:	2000      	movls	r0, #0
 800fbd8:	4770      	bx	lr
 800fbda:	bf00      	nop
 800fbdc:	20032480 	.word	0x20032480
 800fbe0:	2003247c 	.word	0x2003247c

0800fbe4 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800fbe4:	4b11      	ldr	r3, [pc, #68]	; (800fc2c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800fbe6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fbea:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800fbec:	4604      	mov	r4, r0
 800fbee:	881b      	ldrh	r3, [r3, #0]
 800fbf0:	428b      	cmp	r3, r1
 800fbf2:	d918      	bls.n	800fc26 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800fbf4:	6803      	ldr	r3, [r0, #0]
 800fbf6:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800fbf8:	4b0d      	ldr	r3, [pc, #52]	; (800fc30 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800fbfa:	6818      	ldr	r0, [r3, #0]
 800fbfc:	f7fc fc7c 	bl	800c4f8 <_ZNK8touchgfx5Texts7getTextEt>
 800fc00:	6823      	ldr	r3, [r4, #0]
 800fc02:	4606      	mov	r6, r0
 800fc04:	4620      	mov	r0, r4
 800fc06:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800fc08:	4798      	blx	r3
 800fc0a:	6823      	ldr	r3, [r4, #0]
 800fc0c:	4607      	mov	r7, r0
 800fc0e:	4620      	mov	r0, r4
 800fc10:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800fc14:	4798      	blx	r3
 800fc16:	463a      	mov	r2, r7
 800fc18:	4603      	mov	r3, r0
 800fc1a:	4631      	mov	r1, r6
 800fc1c:	4620      	mov	r0, r4
 800fc1e:	46ac      	mov	ip, r5
 800fc20:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800fc24:	4760      	bx	ip
 800fc26:	2000      	movs	r0, #0
 800fc28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fc2c:	20032480 	.word	0x20032480
 800fc30:	20032488 	.word	0x20032488

0800fc34 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800fc34:	4b18      	ldr	r3, [pc, #96]	; (800fc98 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800fc36:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800fc3a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800fc3c:	4604      	mov	r4, r0
 800fc3e:	881b      	ldrh	r3, [r3, #0]
 800fc40:	428b      	cmp	r3, r1
 800fc42:	d926      	bls.n	800fc92 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800fc44:	4b15      	ldr	r3, [pc, #84]	; (800fc9c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800fc46:	681b      	ldr	r3, [r3, #0]
 800fc48:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800fc4c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800fc50:	4b13      	ldr	r3, [pc, #76]	; (800fca0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800fc52:	7855      	ldrb	r5, [r2, #1]
 800fc54:	681b      	ldr	r3, [r3, #0]
 800fc56:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800fc5a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800fc5e:	6833      	ldr	r3, [r6, #0]
 800fc60:	69df      	ldr	r7, [r3, #28]
 800fc62:	4b10      	ldr	r3, [pc, #64]	; (800fca4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800fc64:	6818      	ldr	r0, [r3, #0]
 800fc66:	f7fc fc47 	bl	800c4f8 <_ZNK8touchgfx5Texts7getTextEt>
 800fc6a:	6823      	ldr	r3, [r4, #0]
 800fc6c:	4680      	mov	r8, r0
 800fc6e:	4620      	mov	r0, r4
 800fc70:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800fc72:	4798      	blx	r3
 800fc74:	6823      	ldr	r3, [r4, #0]
 800fc76:	4681      	mov	r9, r0
 800fc78:	4620      	mov	r0, r4
 800fc7a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800fc7e:	4798      	blx	r3
 800fc80:	464b      	mov	r3, r9
 800fc82:	9000      	str	r0, [sp, #0]
 800fc84:	4642      	mov	r2, r8
 800fc86:	4629      	mov	r1, r5
 800fc88:	4630      	mov	r0, r6
 800fc8a:	47b8      	blx	r7
 800fc8c:	b003      	add	sp, #12
 800fc8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fc92:	2000      	movs	r0, #0
 800fc94:	e7fa      	b.n	800fc8c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800fc96:	bf00      	nop
 800fc98:	20032480 	.word	0x20032480
 800fc9c:	2003247c 	.word	0x2003247c
 800fca0:	20032484 	.word	0x20032484
 800fca4:	20032488 	.word	0x20032488

0800fca8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800fca8:	b40e      	push	{r1, r2, r3}
 800fcaa:	4b30      	ldr	r3, [pc, #192]	; (800fd6c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800fcac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fcb0:	881a      	ldrh	r2, [r3, #0]
 800fcb2:	b09d      	sub	sp, #116	; 0x74
 800fcb4:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800fcb6:	4604      	mov	r4, r0
 800fcb8:	429a      	cmp	r2, r3
 800fcba:	d954      	bls.n	800fd66 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800fcbc:	aa26      	add	r2, sp, #152	; 0x98
 800fcbe:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800fd70 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800fcc2:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800fd74 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800fcc6:	9202      	str	r2, [sp, #8]
 800fcc8:	f8d9 2000 	ldr.w	r2, [r9]
 800fccc:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800fcd0:	f8d8 3000 	ldr.w	r3, [r8]
 800fcd4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800fcd8:	682b      	ldr	r3, [r5, #0]
 800fcda:	4628      	mov	r0, r5
 800fcdc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fcde:	4798      	blx	r3
 800fce0:	4606      	mov	r6, r0
 800fce2:	b207      	sxth	r7, r0
 800fce4:	a803      	add	r0, sp, #12
 800fce6:	f003 fdc7 	bl	8013878 <_ZN8touchgfx12TextProviderC1Ev>
 800fcea:	682b      	ldr	r3, [r5, #0]
 800fcec:	4628      	mov	r0, r5
 800fcee:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800fcf0:	4798      	blx	r3
 800fcf2:	682b      	ldr	r3, [r5, #0]
 800fcf4:	4682      	mov	sl, r0
 800fcf6:	4628      	mov	r0, r5
 800fcf8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800fcfa:	4798      	blx	r3
 800fcfc:	4653      	mov	r3, sl
 800fcfe:	9000      	str	r0, [sp, #0]
 800fd00:	a803      	add	r0, sp, #12
 800fd02:	9a02      	ldr	r2, [sp, #8]
 800fd04:	9925      	ldr	r1, [sp, #148]	; 0x94
 800fd06:	f003 fe12 	bl	801392e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fd0a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800fd0c:	f8d9 3000 	ldr.w	r3, [r9]
 800fd10:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800fd14:	8925      	ldrh	r5, [r4, #8]
 800fd16:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800fd1a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800fd1e:	eba5 050c 	sub.w	r5, r5, ip
 800fd22:	784a      	ldrb	r2, [r1, #1]
 800fd24:	f8d8 3000 	ldr.w	r3, [r8]
 800fd28:	b22d      	sxth	r5, r5
 800fd2a:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800fd2e:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800fd32:	9500      	str	r5, [sp, #0]
 800fd34:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800fd38:	a803      	add	r0, sp, #12
 800fd3a:	f001 fc4b 	bl	80115d4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800fd3e:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800fd42:	b203      	sxth	r3, r0
 800fd44:	18b9      	adds	r1, r7, r2
 800fd46:	2900      	cmp	r1, #0
 800fd48:	dd0b      	ble.n	800fd62 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800fd4a:	3b01      	subs	r3, #1
 800fd4c:	fb13 f302 	smulbb	r3, r3, r2
 800fd50:	fb16 3300 	smlabb	r3, r6, r0, r3
 800fd54:	b21f      	sxth	r7, r3
 800fd56:	4638      	mov	r0, r7
 800fd58:	b01d      	add	sp, #116	; 0x74
 800fd5a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fd5e:	b003      	add	sp, #12
 800fd60:	4770      	bx	lr
 800fd62:	2b00      	cmp	r3, #0
 800fd64:	dcf7      	bgt.n	800fd56 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800fd66:	2700      	movs	r7, #0
 800fd68:	e7f5      	b.n	800fd56 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800fd6a:	bf00      	nop
 800fd6c:	20032480 	.word	0x20032480
 800fd70:	2003247c 	.word	0x2003247c
 800fd74:	20032484 	.word	0x20032484

0800fd78 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800fd78:	4bbd      	ldr	r3, [pc, #756]	; (8010070 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800fd7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd7e:	460c      	mov	r4, r1
 800fd80:	881b      	ldrh	r3, [r3, #0]
 800fd82:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800fd84:	b0a9      	sub	sp, #164	; 0xa4
 800fd86:	4680      	mov	r8, r0
 800fd88:	428b      	cmp	r3, r1
 800fd8a:	d809      	bhi.n	800fda0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800fd8c:	2300      	movs	r3, #0
 800fd8e:	f04f 32ff 	mov.w	r2, #4294967295
 800fd92:	6083      	str	r3, [r0, #8]
 800fd94:	e9c0 3200 	strd	r3, r2, [r0]
 800fd98:	4640      	mov	r0, r8
 800fd9a:	b029      	add	sp, #164	; 0xa4
 800fd9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fda0:	4eb4      	ldr	r6, [pc, #720]	; (8010074 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800fda2:	6833      	ldr	r3, [r6, #0]
 800fda4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800fda8:	4bb3      	ldr	r3, [pc, #716]	; (8010078 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800fdaa:	681b      	ldr	r3, [r3, #0]
 800fdac:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800fdb0:	4bb2      	ldr	r3, [pc, #712]	; (801007c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800fdb2:	6818      	ldr	r0, [r3, #0]
 800fdb4:	f7fc fba0 	bl	800c4f8 <_ZNK8touchgfx5Texts7getTextEt>
 800fdb8:	682b      	ldr	r3, [r5, #0]
 800fdba:	4681      	mov	r9, r0
 800fdbc:	4628      	mov	r0, r5
 800fdbe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fdc0:	4798      	blx	r3
 800fdc2:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800fdc4:	b203      	sxth	r3, r0
 800fdc6:	4682      	mov	sl, r0
 800fdc8:	4407      	add	r7, r0
 800fdca:	a80f      	add	r0, sp, #60	; 0x3c
 800fdcc:	9304      	str	r3, [sp, #16]
 800fdce:	b2bb      	uxth	r3, r7
 800fdd0:	9303      	str	r3, [sp, #12]
 800fdd2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800fdd6:	2b00      	cmp	r3, #0
 800fdd8:	f040 80a5 	bne.w	800ff26 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 800fddc:	f003 fd4c 	bl	8013878 <_ZN8touchgfx12TextProviderC1Ev>
 800fde0:	682b      	ldr	r3, [r5, #0]
 800fde2:	4628      	mov	r0, r5
 800fde4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800fde6:	4798      	blx	r3
 800fde8:	682b      	ldr	r3, [r5, #0]
 800fdea:	4606      	mov	r6, r0
 800fdec:	4628      	mov	r0, r5
 800fdee:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800fdf0:	4798      	blx	r3
 800fdf2:	6823      	ldr	r3, [r4, #0]
 800fdf4:	4607      	mov	r7, r0
 800fdf6:	4620      	mov	r0, r4
 800fdf8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800fdfa:	4798      	blx	r3
 800fdfc:	6823      	ldr	r3, [r4, #0]
 800fdfe:	4683      	mov	fp, r0
 800fe00:	4620      	mov	r0, r4
 800fe02:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800fe06:	4798      	blx	r3
 800fe08:	463b      	mov	r3, r7
 800fe0a:	4649      	mov	r1, r9
 800fe0c:	4632      	mov	r2, r6
 800fe0e:	2600      	movs	r6, #0
 800fe10:	e9cd b000 	strd	fp, r0, [sp]
 800fe14:	a80f      	add	r0, sp, #60	; 0x3c
 800fe16:	4637      	mov	r7, r6
 800fe18:	f003 fd9e 	bl	8013958 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800fe1c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800fe20:	f8df b250 	ldr.w	fp, [pc, #592]	; 8010074 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800fe24:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800fe28:	bf0c      	ite	eq
 800fe2a:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800fe2e:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800fe32:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800fe34:	4629      	mov	r1, r5
 800fe36:	f8db 3000 	ldr.w	r3, [fp]
 800fe3a:	a80f      	add	r0, sp, #60	; 0x3c
 800fe3c:	3701      	adds	r7, #1
 800fe3e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800fe42:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800fe46:	b2bf      	uxth	r7, r7
 800fe48:	785b      	ldrb	r3, [r3, #1]
 800fe4a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800fe4e:	f001 f8c8 	bl	8010fe2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800fe52:	9b03      	ldr	r3, [sp, #12]
 800fe54:	4286      	cmp	r6, r0
 800fe56:	eba9 0903 	sub.w	r9, r9, r3
 800fe5a:	bfb8      	it	lt
 800fe5c:	4606      	movlt	r6, r0
 800fe5e:	a80f      	add	r0, sp, #60	; 0x3c
 800fe60:	fa0f f989 	sxth.w	r9, r9
 800fe64:	b236      	sxth	r6, r6
 800fe66:	f003 fd2e 	bl	80138c6 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800fe6a:	b918      	cbnz	r0, 800fe74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800fe6c:	7a2b      	ldrb	r3, [r5, #8]
 800fe6e:	444b      	add	r3, r9
 800fe70:	2b00      	cmp	r3, #0
 800fe72:	dcde      	bgt.n	800fe32 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 800fe74:	9b03      	ldr	r3, [sp, #12]
 800fe76:	4620      	mov	r0, r4
 800fe78:	9a04      	ldr	r2, [sp, #16]
 800fe7a:	fb13 f707 	smulbb	r7, r3, r7
 800fe7e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800fe80:	f895 9009 	ldrb.w	r9, [r5, #9]
 800fe84:	1aff      	subs	r7, r7, r3
 800fe86:	b2bf      	uxth	r7, r7
 800fe88:	b23b      	sxth	r3, r7
 800fe8a:	429a      	cmp	r2, r3
 800fe8c:	bfa8      	it	ge
 800fe8e:	4657      	movge	r7, sl
 800fe90:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800fe94:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800fe98:	6823      	ldr	r3, [r4, #0]
 800fe9a:	444f      	add	r7, r9
 800fe9c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800fe9e:	bf08      	it	eq
 800fea0:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800fea4:	fa1f f987 	uxth.w	r9, r7
 800fea8:	bf18      	it	ne
 800feaa:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800feae:	4798      	blx	r3
 800feb0:	2801      	cmp	r0, #1
 800feb2:	fa0f f789 	sxth.w	r7, r9
 800feb6:	b2b3      	uxth	r3, r6
 800feb8:	f000 80e2 	beq.w	8010080 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800febc:	2802      	cmp	r0, #2
 800febe:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 800fec2:	f000 80e3 	beq.w	801008c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800fec6:	7aea      	ldrb	r2, [r5, #11]
 800fec8:	b236      	sxth	r6, r6
 800feca:	7b2d      	ldrb	r5, [r5, #12]
 800fecc:	1ab6      	subs	r6, r6, r2
 800fece:	442a      	add	r2, r5
 800fed0:	fa1f fa86 	uxth.w	sl, r6
 800fed4:	4413      	add	r3, r2
 800fed6:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800feda:	fa0f fb8a 	sxth.w	fp, sl
 800fede:	b29b      	uxth	r3, r3
 800fee0:	2a02      	cmp	r2, #2
 800fee2:	b21e      	sxth	r6, r3
 800fee4:	f000 80d6 	beq.w	8010094 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800fee8:	2a03      	cmp	r2, #3
 800feea:	f000 80de 	beq.w	80100aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800feee:	2a01      	cmp	r2, #1
 800fef0:	f040 80e6 	bne.w	80100c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800fef4:	8925      	ldrh	r5, [r4, #8]
 800fef6:	4633      	mov	r3, r6
 800fef8:	463e      	mov	r6, r7
 800fefa:	eba5 0909 	sub.w	r9, r5, r9
 800fefe:	461f      	mov	r7, r3
 800ff00:	465d      	mov	r5, fp
 800ff02:	fa0f fb89 	sxth.w	fp, r9
 800ff06:	4b5d      	ldr	r3, [pc, #372]	; (801007c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800ff08:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ff0a:	6818      	ldr	r0, [r3, #0]
 800ff0c:	f7fc faf4 	bl	800c4f8 <_ZNK8touchgfx5Texts7getTextEt>
 800ff10:	f8a8 b000 	strh.w	fp, [r8]
 800ff14:	f8a8 5002 	strh.w	r5, [r8, #2]
 800ff18:	f8a8 6004 	strh.w	r6, [r8, #4]
 800ff1c:	f8a8 7006 	strh.w	r7, [r8, #6]
 800ff20:	f8c8 0008 	str.w	r0, [r8, #8]
 800ff24:	e738      	b.n	800fd98 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800ff26:	f003 fca7 	bl	8013878 <_ZN8touchgfx12TextProviderC1Ev>
 800ff2a:	682b      	ldr	r3, [r5, #0]
 800ff2c:	4628      	mov	r0, r5
 800ff2e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800ff30:	4798      	blx	r3
 800ff32:	682b      	ldr	r3, [r5, #0]
 800ff34:	4607      	mov	r7, r0
 800ff36:	4628      	mov	r0, r5
 800ff38:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800ff3a:	4798      	blx	r3
 800ff3c:	6823      	ldr	r3, [r4, #0]
 800ff3e:	4683      	mov	fp, r0
 800ff40:	4620      	mov	r0, r4
 800ff42:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ff44:	4798      	blx	r3
 800ff46:	6822      	ldr	r2, [r4, #0]
 800ff48:	9005      	str	r0, [sp, #20]
 800ff4a:	4620      	mov	r0, r4
 800ff4c:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800ff50:	4790      	blx	r2
 800ff52:	9b05      	ldr	r3, [sp, #20]
 800ff54:	463a      	mov	r2, r7
 800ff56:	4649      	mov	r1, r9
 800ff58:	9001      	str	r0, [sp, #4]
 800ff5a:	a80f      	add	r0, sp, #60	; 0x3c
 800ff5c:	9300      	str	r3, [sp, #0]
 800ff5e:	465b      	mov	r3, fp
 800ff60:	f003 fcfa 	bl	8013958 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800ff64:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ff68:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800ff6c:	af0f      	add	r7, sp, #60	; 0x3c
 800ff6e:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800ff72:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ff76:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ff78:	bf0a      	itet	eq
 800ff7a:	464a      	moveq	r2, r9
 800ff7c:	461a      	movne	r2, r3
 800ff7e:	4699      	moveq	r9, r3
 800ff80:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800ff84:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800ff88:	1ad2      	subs	r2, r2, r3
 800ff8a:	6833      	ldr	r3, [r6, #0]
 800ff8c:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 800ff90:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800ff94:	7859      	ldrb	r1, [r3, #1]
 800ff96:	2300      	movs	r3, #0
 800ff98:	9707      	str	r7, [sp, #28]
 800ff9a:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800ff9e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ffa2:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800ffa6:	f88d 1020 	strb.w	r1, [sp, #32]
 800ffaa:	9509      	str	r5, [sp, #36]	; 0x24
 800ffac:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800ffb0:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 800ffb4:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800ffb8:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800ffbc:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800ffc0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800ffc4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800ffc8:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800ffcc:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800ffd0:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800ffd4:	b350      	cbz	r0, 801002c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800ffd6:	682b      	ldr	r3, [r5, #0]
 800ffd8:	4628      	mov	r0, r5
 800ffda:	695b      	ldr	r3, [r3, #20]
 800ffdc:	4798      	blx	r3
 800ffde:	4607      	mov	r7, r0
 800ffe0:	b320      	cbz	r0, 801002c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800ffe2:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ffe4:	4639      	mov	r1, r7
 800ffe6:	6803      	ldr	r3, [r0, #0]
 800ffe8:	68db      	ldr	r3, [r3, #12]
 800ffea:	4798      	blx	r3
 800ffec:	4606      	mov	r6, r0
 800ffee:	b1e8      	cbz	r0, 801002c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800fff0:	7b43      	ldrb	r3, [r0, #13]
 800fff2:	7a82      	ldrb	r2, [r0, #10]
 800fff4:	005b      	lsls	r3, r3, #1
 800fff6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fffa:	4313      	orrs	r3, r2
 800fffc:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8010000:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8010004:	2b06      	cmp	r3, #6
 8010006:	d111      	bne.n	801002c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 8010008:	9809      	ldr	r0, [sp, #36]	; 0x24
 801000a:	4632      	mov	r2, r6
 801000c:	4639      	mov	r1, r7
 801000e:	6803      	ldr	r3, [r0, #0]
 8010010:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010012:	4798      	blx	r3
 8010014:	7b73      	ldrb	r3, [r6, #13]
 8010016:	005b      	lsls	r3, r3, #1
 8010018:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801001c:	7ab3      	ldrb	r3, [r6, #10]
 801001e:	4313      	orrs	r3, r2
 8010020:	4418      	add	r0, r3
 8010022:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010026:	4418      	add	r0, r3
 8010028:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 801002c:	2600      	movs	r6, #0
 801002e:	4637      	mov	r7, r6
 8010030:	a806      	add	r0, sp, #24
 8010032:	3701      	adds	r7, #1
 8010034:	f001 f9cb 	bl	80113ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010038:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 801003c:	9b03      	ldr	r3, [sp, #12]
 801003e:	b2bf      	uxth	r7, r7
 8010040:	4286      	cmp	r6, r0
 8010042:	eba9 0903 	sub.w	r9, r9, r3
 8010046:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 801004a:	bfb8      	it	lt
 801004c:	4606      	movlt	r6, r0
 801004e:	fa0f f989 	sxth.w	r9, r9
 8010052:	b236      	sxth	r6, r6
 8010054:	2b00      	cmp	r3, #0
 8010056:	f43f af0d 	beq.w	800fe74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 801005a:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 801005e:	2b00      	cmp	r3, #0
 8010060:	f47f af08 	bne.w	800fe74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 8010064:	7a2b      	ldrb	r3, [r5, #8]
 8010066:	444b      	add	r3, r9
 8010068:	2b00      	cmp	r3, #0
 801006a:	dce1      	bgt.n	8010030 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 801006c:	e702      	b.n	800fe74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 801006e:	bf00      	nop
 8010070:	20032480 	.word	0x20032480
 8010074:	2003247c 	.word	0x2003247c
 8010078:	20032484 	.word	0x20032484
 801007c:	20032488 	.word	0x20032488
 8010080:	ebaa 0606 	sub.w	r6, sl, r6
 8010084:	2002      	movs	r0, #2
 8010086:	fb96 f6f0 	sdiv	r6, r6, r0
 801008a:	e71c      	b.n	800fec6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 801008c:	441e      	add	r6, r3
 801008e:	ebaa 0606 	sub.w	r6, sl, r6
 8010092:	e718      	b.n	800fec6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 8010094:	8925      	ldrh	r5, [r4, #8]
 8010096:	1aed      	subs	r5, r5, r3
 8010098:	eba5 050a 	sub.w	r5, r5, sl
 801009c:	fa0f fb85 	sxth.w	fp, r5
 80100a0:	8965      	ldrh	r5, [r4, #10]
 80100a2:	eba5 0509 	sub.w	r5, r5, r9
 80100a6:	b22d      	sxth	r5, r5
 80100a8:	e72d      	b.n	800ff06 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 80100aa:	8965      	ldrh	r5, [r4, #10]
 80100ac:	f04f 0b00 	mov.w	fp, #0
 80100b0:	1aed      	subs	r5, r5, r3
 80100b2:	4633      	mov	r3, r6
 80100b4:	463e      	mov	r6, r7
 80100b6:	eba5 050a 	sub.w	r5, r5, sl
 80100ba:	461f      	mov	r7, r3
 80100bc:	b22d      	sxth	r5, r5
 80100be:	e722      	b.n	800ff06 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 80100c0:	2500      	movs	r5, #0
 80100c2:	e720      	b.n	800ff06 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

080100c4 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80100c4:	b513      	push	{r0, r1, r4, lr}
 80100c6:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 80100ca:	4604      	mov	r4, r0
 80100cc:	b1fb      	cbz	r3, 801010e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80100ce:	4b16      	ldr	r3, [pc, #88]	; (8010128 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80100d0:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80100d2:	881b      	ldrh	r3, [r3, #0]
 80100d4:	428b      	cmp	r3, r1
 80100d6:	d91a      	bls.n	801010e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80100d8:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80100dc:	2b00      	cmp	r3, #0
 80100de:	dd16      	ble.n	801010e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80100e0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80100e4:	2b00      	cmp	r3, #0
 80100e6:	dd12      	ble.n	801010e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80100e8:	4b10      	ldr	r3, [pc, #64]	; (801012c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 80100ea:	6818      	ldr	r0, [r3, #0]
 80100ec:	f7fc fa04 	bl	800c4f8 <_ZNK8touchgfx5Texts7getTextEt>
 80100f0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80100f4:	6822      	ldr	r2, [r4, #0]
 80100f6:	2b00      	cmp	r3, #0
 80100f8:	db06      	blt.n	8010108 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80100fa:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80100fe:	2b00      	cmp	r3, #0
 8010100:	db02      	blt.n	8010108 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8010102:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010104:	4298      	cmp	r0, r3
 8010106:	d004      	beq.n	8010112 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8010108:	6953      	ldr	r3, [r2, #20]
 801010a:	4620      	mov	r0, r4
 801010c:	4798      	blx	r3
 801010e:	b002      	add	sp, #8
 8010110:	bd10      	pop	{r4, pc}
 8010112:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8010116:	466b      	mov	r3, sp
 8010118:	6912      	ldr	r2, [r2, #16]
 801011a:	c903      	ldmia	r1, {r0, r1}
 801011c:	e883 0003 	stmia.w	r3, {r0, r1}
 8010120:	4619      	mov	r1, r3
 8010122:	4620      	mov	r0, r4
 8010124:	4790      	blx	r2
 8010126:	e7f2      	b.n	801010e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010128:	20032480 	.word	0x20032480
 801012c:	20032488 	.word	0x20032488

08010130 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8010130:	4b45      	ldr	r3, [pc, #276]	; (8010248 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8010132:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010136:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010138:	b08e      	sub	sp, #56	; 0x38
 801013a:	881b      	ldrh	r3, [r3, #0]
 801013c:	4604      	mov	r4, r0
 801013e:	4293      	cmp	r3, r2
 8010140:	d97e      	bls.n	8010240 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010142:	6808      	ldr	r0, [r1, #0]
 8010144:	ab05      	add	r3, sp, #20
 8010146:	6849      	ldr	r1, [r1, #4]
 8010148:	4d40      	ldr	r5, [pc, #256]	; (801024c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801014a:	c303      	stmia	r3!, {r0, r1}
 801014c:	4611      	mov	r1, r2
 801014e:	6828      	ldr	r0, [r5, #0]
 8010150:	f7fc f9d2 	bl	800c4f8 <_ZNK8touchgfx5Texts7getTextEt>
 8010154:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8010158:	2b00      	cmp	r3, #0
 801015a:	db11      	blt.n	8010180 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801015c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8010160:	2b00      	cmp	r3, #0
 8010162:	db0d      	blt.n	8010180 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010164:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010166:	4298      	cmp	r0, r3
 8010168:	d10a      	bne.n	8010180 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801016a:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 801016e:	ab09      	add	r3, sp, #36	; 0x24
 8010170:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010174:	e883 0003 	stmia.w	r3, {r0, r1}
 8010178:	4619      	mov	r1, r3
 801017a:	a805      	add	r0, sp, #20
 801017c:	f7fe fd1e 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 8010180:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010184:	2b00      	cmp	r3, #0
 8010186:	dd5b      	ble.n	8010240 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010188:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801018c:	2b00      	cmp	r3, #0
 801018e:	dd57      	ble.n	8010240 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010190:	4f2f      	ldr	r7, [pc, #188]	; (8010250 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8010192:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010194:	683b      	ldr	r3, [r7, #0]
 8010196:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801019a:	4b2e      	ldr	r3, [pc, #184]	; (8010254 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 801019c:	681b      	ldr	r3, [r3, #0]
 801019e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80101a2:	2e00      	cmp	r6, #0
 80101a4:	d04c      	beq.n	8010240 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80101a6:	6823      	ldr	r3, [r4, #0]
 80101a8:	4620      	mov	r0, r4
 80101aa:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 80101ae:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80101b0:	4798      	blx	r3
 80101b2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80101b4:	683b      	ldr	r3, [r7, #0]
 80101b6:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 80101ba:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80101be:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 80101c2:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 80101c6:	785b      	ldrb	r3, [r3, #1]
 80101c8:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 80101cc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80101d0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80101d2:	9609      	str	r6, [sp, #36]	; 0x24
 80101d4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80101d8:	4b1f      	ldr	r3, [pc, #124]	; (8010258 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80101da:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 80101de:	681b      	ldr	r3, [r3, #0]
 80101e0:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 80101e4:	910b      	str	r1, [sp, #44]	; 0x2c
 80101e6:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 80101ea:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 80101ee:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 80101f2:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80101f6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80101fa:	b10a      	cbz	r2, 8010200 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80101fc:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80101fe:	b906      	cbnz	r6, 8010202 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8010200:	689e      	ldr	r6, [r3, #8]
 8010202:	af07      	add	r7, sp, #28
 8010204:	4621      	mov	r1, r4
 8010206:	4638      	mov	r0, r7
 8010208:	f002 ff80 	bl	801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801020c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801020e:	6828      	ldr	r0, [r5, #0]
 8010210:	f7fc f972 	bl	800c4f8 <_ZNK8touchgfx5Texts7getTextEt>
 8010214:	6823      	ldr	r3, [r4, #0]
 8010216:	4605      	mov	r5, r0
 8010218:	4620      	mov	r0, r4
 801021a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801021c:	4798      	blx	r3
 801021e:	6823      	ldr	r3, [r4, #0]
 8010220:	4680      	mov	r8, r0
 8010222:	4620      	mov	r0, r4
 8010224:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010228:	4798      	blx	r3
 801022a:	ab09      	add	r3, sp, #36	; 0x24
 801022c:	9501      	str	r5, [sp, #4]
 801022e:	9300      	str	r3, [sp, #0]
 8010230:	ab05      	add	r3, sp, #20
 8010232:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8010236:	4630      	mov	r0, r6
 8010238:	e897 0006 	ldmia.w	r7, {r1, r2}
 801023c:	f7fc f8ed 	bl	800c41a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8010240:	b00e      	add	sp, #56	; 0x38
 8010242:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010246:	bf00      	nop
 8010248:	20032480 	.word	0x20032480
 801024c:	20032488 	.word	0x20032488
 8010250:	2003247c 	.word	0x2003247c
 8010254:	20032484 	.word	0x20032484
 8010258:	2003242c 	.word	0x2003242c

0801025c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 801025c:	b538      	push	{r3, r4, r5, lr}
 801025e:	4b0e      	ldr	r3, [pc, #56]	; (8010298 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8010260:	4604      	mov	r4, r0
 8010262:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010264:	881b      	ldrh	r3, [r3, #0]
 8010266:	429a      	cmp	r2, r3
 8010268:	d214      	bcs.n	8010294 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801026a:	6803      	ldr	r3, [r0, #0]
 801026c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801026e:	4798      	blx	r3
 8010270:	6823      	ldr	r3, [r4, #0]
 8010272:	4605      	mov	r5, r0
 8010274:	4620      	mov	r0, r4
 8010276:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8010278:	4798      	blx	r3
 801027a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801027e:	b22d      	sxth	r5, r5
 8010280:	4601      	mov	r1, r0
 8010282:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010286:	bf06      	itte	eq
 8010288:	4602      	moveq	r2, r0
 801028a:	4629      	moveq	r1, r5
 801028c:	462a      	movne	r2, r5
 801028e:	4620      	mov	r0, r4
 8010290:	f7f9 ff87 	bl	800a1a2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010294:	bd38      	pop	{r3, r4, r5, pc}
 8010296:	bf00      	nop
 8010298:	20032480 	.word	0x20032480

0801029c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 801029c:	b530      	push	{r4, r5, lr}
 801029e:	888b      	ldrh	r3, [r1, #4]
 80102a0:	b085      	sub	sp, #20
 80102a2:	4604      	mov	r4, r0
 80102a4:	8583      	strh	r3, [r0, #44]	; 0x2c
 80102a6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80102aa:	b923      	cbnz	r3, 80102b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80102ac:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80102b0:	b90b      	cbnz	r3, 80102b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80102b2:	f7ff ffd3 	bl	801025c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80102b6:	6823      	ldr	r3, [r4, #0]
 80102b8:	466d      	mov	r5, sp
 80102ba:	4621      	mov	r1, r4
 80102bc:	343c      	adds	r4, #60	; 0x3c
 80102be:	4628      	mov	r0, r5
 80102c0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80102c4:	4798      	blx	r3
 80102c6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80102ca:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80102ce:	b005      	add	sp, #20
 80102d0:	bd30      	pop	{r4, r5, pc}

080102d2 <_ZNK8touchgfx3Box12getSolidRectEv>:
 80102d2:	2300      	movs	r3, #0
 80102d4:	8083      	strh	r3, [r0, #4]
 80102d6:	80c3      	strh	r3, [r0, #6]
 80102d8:	8003      	strh	r3, [r0, #0]
 80102da:	8043      	strh	r3, [r0, #2]
 80102dc:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80102e0:	2bff      	cmp	r3, #255	; 0xff
 80102e2:	bf01      	itttt	eq
 80102e4:	890b      	ldrheq	r3, [r1, #8]
 80102e6:	8083      	strheq	r3, [r0, #4]
 80102e8:	894b      	ldrheq	r3, [r1, #10]
 80102ea:	80c3      	strheq	r3, [r0, #6]
 80102ec:	4770      	bx	lr
	...

080102f0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80102f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80102f2:	4604      	mov	r4, r0
 80102f4:	466b      	mov	r3, sp
 80102f6:	6808      	ldr	r0, [r1, #0]
 80102f8:	6849      	ldr	r1, [r1, #4]
 80102fa:	c303      	stmia	r3!, {r0, r1}
 80102fc:	6823      	ldr	r3, [r4, #0]
 80102fe:	4669      	mov	r1, sp
 8010300:	4620      	mov	r0, r4
 8010302:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010304:	4798      	blx	r3
 8010306:	4b08      	ldr	r3, [pc, #32]	; (8010328 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8010308:	681b      	ldr	r3, [r3, #0]
 801030a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801030e:	b10a      	cbz	r2, 8010314 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8010310:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8010312:	b900      	cbnz	r0, 8010316 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8010314:	6898      	ldr	r0, [r3, #8]
 8010316:	6803      	ldr	r3, [r0, #0]
 8010318:	4669      	mov	r1, sp
 801031a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801031c:	6a1d      	ldr	r5, [r3, #32]
 801031e:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8010322:	47a8      	blx	r5
 8010324:	b003      	add	sp, #12
 8010326:	bd30      	pop	{r4, r5, pc}
 8010328:	2003242c 	.word	0x2003242c

0801032c <_ZNK8touchgfx3Box17invalidateContentEv>:
 801032c:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8010330:	b12a      	cbz	r2, 801033e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8010332:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8010336:	b112      	cbz	r2, 801033e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8010338:	6803      	ldr	r3, [r0, #0]
 801033a:	695b      	ldr	r3, [r3, #20]
 801033c:	4718      	bx	r3
 801033e:	4770      	bx	lr

08010340 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8010340:	4b30      	ldr	r3, [pc, #192]	; (8010404 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8010342:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010346:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010348:	b08d      	sub	sp, #52	; 0x34
 801034a:	881b      	ldrh	r3, [r3, #0]
 801034c:	4604      	mov	r4, r0
 801034e:	460f      	mov	r7, r1
 8010350:	4293      	cmp	r3, r2
 8010352:	d954      	bls.n	80103fe <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8010354:	4b2c      	ldr	r3, [pc, #176]	; (8010408 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8010356:	6819      	ldr	r1, [r3, #0]
 8010358:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 801035c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8010360:	4a2a      	ldr	r2, [pc, #168]	; (801040c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8010362:	6812      	ldr	r2, [r2, #0]
 8010364:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8010368:	2900      	cmp	r1, #0
 801036a:	d048      	beq.n	80103fe <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 801036c:	785a      	ldrb	r2, [r3, #1]
 801036e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8010372:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8010376:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801037a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801037e:	4b24      	ldr	r3, [pc, #144]	; (8010410 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8010380:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8010384:	681a      	ldr	r2, [r3, #0]
 8010386:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 801038a:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 801038e:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8010392:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8010394:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8010398:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 801039c:	9107      	str	r1, [sp, #28]
 801039e:	f88d 8020 	strb.w	r8, [sp, #32]
 80103a2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 80103a6:	9609      	str	r6, [sp, #36]	; 0x24
 80103a8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 80103ac:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 80103b0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 80103b4:	b10b      	cbz	r3, 80103ba <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80103b6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 80103b8:	b905      	cbnz	r5, 80103bc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80103ba:	6895      	ldr	r5, [r2, #8]
 80103bc:	ae05      	add	r6, sp, #20
 80103be:	4621      	mov	r1, r4
 80103c0:	4630      	mov	r0, r6
 80103c2:	f002 fea3 	bl	801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80103c6:	4b13      	ldr	r3, [pc, #76]	; (8010414 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80103c8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80103ca:	6818      	ldr	r0, [r3, #0]
 80103cc:	f7fc f894 	bl	800c4f8 <_ZNK8touchgfx5Texts7getTextEt>
 80103d0:	6823      	ldr	r3, [r4, #0]
 80103d2:	4680      	mov	r8, r0
 80103d4:	4620      	mov	r0, r4
 80103d6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80103d8:	4798      	blx	r3
 80103da:	6823      	ldr	r3, [r4, #0]
 80103dc:	4681      	mov	r9, r0
 80103de:	4620      	mov	r0, r4
 80103e0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80103e4:	4798      	blx	r3
 80103e6:	ab07      	add	r3, sp, #28
 80103e8:	f8cd 8004 	str.w	r8, [sp, #4]
 80103ec:	9300      	str	r3, [sp, #0]
 80103ee:	463b      	mov	r3, r7
 80103f0:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80103f4:	4628      	mov	r0, r5
 80103f6:	e896 0006 	ldmia.w	r6, {r1, r2}
 80103fa:	f7fc f80e 	bl	800c41a <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80103fe:	b00d      	add	sp, #52	; 0x34
 8010400:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010404:	20032480 	.word	0x20032480
 8010408:	2003247c 	.word	0x2003247c
 801040c:	20032484 	.word	0x20032484
 8010410:	2003242c 	.word	0x2003242c
 8010414:	20032488 	.word	0x20032488

08010418 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8010418:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801041c:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801041e:	4604      	mov	r4, r0
 8010420:	460e      	mov	r6, r1
 8010422:	b08e      	sub	sp, #56	; 0x38
 8010424:	b218      	sxth	r0, r3
 8010426:	8921      	ldrh	r1, [r4, #8]
 8010428:	005b      	lsls	r3, r3, #1
 801042a:	8962      	ldrh	r2, [r4, #10]
 801042c:	f8ad 0000 	strh.w	r0, [sp]
 8010430:	b29b      	uxth	r3, r3
 8010432:	f8ad 0002 	strh.w	r0, [sp, #2]
 8010436:	1ac9      	subs	r1, r1, r3
 8010438:	1ad3      	subs	r3, r2, r3
 801043a:	b209      	sxth	r1, r1
 801043c:	b21b      	sxth	r3, r3
 801043e:	2900      	cmp	r1, #0
 8010440:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010444:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010448:	dd5e      	ble.n	8010508 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801044a:	2b00      	cmp	r3, #0
 801044c:	dd5c      	ble.n	8010508 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801044e:	6830      	ldr	r0, [r6, #0]
 8010450:	ab02      	add	r3, sp, #8
 8010452:	6871      	ldr	r1, [r6, #4]
 8010454:	c303      	stmia	r3!, {r0, r1}
 8010456:	4669      	mov	r1, sp
 8010458:	a802      	add	r0, sp, #8
 801045a:	f7fe fbaf 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 801045e:	4620      	mov	r0, r4
 8010460:	a902      	add	r1, sp, #8
 8010462:	f7ff ff45 	bl	80102f0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8010466:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 8010468:	2800      	cmp	r0, #0
 801046a:	d05f      	beq.n	801052c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 801046c:	8963      	ldrh	r3, [r4, #10]
 801046e:	b202      	sxth	r2, r0
 8010470:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8010474:	2500      	movs	r5, #0
 8010476:	1a1f      	subs	r7, r3, r0
 8010478:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 801047c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010480:	b21b      	sxth	r3, r3
 8010482:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8010486:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 801048a:	af04      	add	r7, sp, #16
 801048c:	1a09      	subs	r1, r1, r0
 801048e:	9506      	str	r5, [sp, #24]
 8010490:	f8ad 201e 	strh.w	r2, [sp, #30]
 8010494:	f8ad 5020 	strh.w	r5, [sp, #32]
 8010498:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 801049c:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 80104a0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80104a4:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80104a8:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80104ac:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 80104b0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80104b4:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80104b8:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80104bc:	ab06      	add	r3, sp, #24
 80104be:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80104c2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80104c6:	e887 0003 	stmia.w	r7, {r0, r1}
 80104ca:	4631      	mov	r1, r6
 80104cc:	4638      	mov	r0, r7
 80104ce:	f7fe fb75 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 80104d2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80104d6:	2b00      	cmp	r3, #0
 80104d8:	dd12      	ble.n	8010500 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80104da:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80104de:	2b00      	cmp	r3, #0
 80104e0:	dd0e      	ble.n	8010500 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80104e2:	6823      	ldr	r3, [r4, #0]
 80104e4:	4639      	mov	r1, r7
 80104e6:	4620      	mov	r0, r4
 80104e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80104ea:	4798      	blx	r3
 80104ec:	f7f9 f88c 	bl	8009608 <_ZN8touchgfx3HAL3lcdEv>
 80104f0:	6803      	ldr	r3, [r0, #0]
 80104f2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80104f4:	4639      	mov	r1, r7
 80104f6:	f8d3 8020 	ldr.w	r8, [r3, #32]
 80104fa:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80104fe:	47c0      	blx	r8
 8010500:	3501      	adds	r5, #1
 8010502:	2d04      	cmp	r5, #4
 8010504:	d1da      	bne.n	80104bc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8010506:	e011      	b.n	801052c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8010508:	6830      	ldr	r0, [r6, #0]
 801050a:	ab06      	add	r3, sp, #24
 801050c:	6871      	ldr	r1, [r6, #4]
 801050e:	c303      	stmia	r3!, {r0, r1}
 8010510:	6823      	ldr	r3, [r4, #0]
 8010512:	a906      	add	r1, sp, #24
 8010514:	4620      	mov	r0, r4
 8010516:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010518:	4798      	blx	r3
 801051a:	f7f9 f875 	bl	8009608 <_ZN8touchgfx3HAL3lcdEv>
 801051e:	6803      	ldr	r3, [r0, #0]
 8010520:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010522:	a906      	add	r1, sp, #24
 8010524:	6a1d      	ldr	r5, [r3, #32]
 8010526:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801052a:	47a8      	blx	r5
 801052c:	b00e      	add	sp, #56	; 0x38
 801052e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010532 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8010532:	b510      	push	{r4, lr}
 8010534:	6803      	ldr	r3, [r0, #0]
 8010536:	460c      	mov	r4, r1
 8010538:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801053a:	4798      	blx	r3
 801053c:	1b03      	subs	r3, r0, r4
 801053e:	4258      	negs	r0, r3
 8010540:	4158      	adcs	r0, r3
 8010542:	bd10      	pop	{r4, pc}

08010544 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8010544:	4b01      	ldr	r3, [pc, #4]	; (801054c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8010546:	6019      	str	r1, [r3, #0]
 8010548:	4770      	bx	lr
 801054a:	bf00      	nop
 801054c:	20032434 	.word	0x20032434

08010550 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8010550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010554:	4696      	mov	lr, r2
 8010556:	b097      	sub	sp, #92	; 0x5c
 8010558:	4605      	mov	r5, r0
 801055a:	4614      	mov	r4, r2
 801055c:	460e      	mov	r6, r1
 801055e:	461f      	mov	r7, r3
 8010560:	f10d 0c1c 	add.w	ip, sp, #28
 8010564:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8010568:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 801056c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8010570:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010574:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010578:	f8de 3000 	ldr.w	r3, [lr]
 801057c:	f104 0e14 	add.w	lr, r4, #20
 8010580:	f8cc 3000 	str.w	r3, [ip]
 8010584:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8010588:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801058c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010590:	f8de 3000 	ldr.w	r3, [lr]
 8010594:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8010598:	f8cc 3000 	str.w	r3, [ip]
 801059c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80105a0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80105a4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80105a8:	f8de 3000 	ldr.w	r3, [lr]
 80105ac:	4631      	mov	r1, r6
 80105ae:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80105b0:	4628      	mov	r0, r5
 80105b2:	f8cc 3000 	str.w	r3, [ip]
 80105b6:	682b      	ldr	r3, [r5, #0]
 80105b8:	9201      	str	r2, [sp, #4]
 80105ba:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80105bc:	f8cd 8008 	str.w	r8, [sp, #8]
 80105c0:	9200      	str	r2, [sp, #0]
 80105c2:	aa07      	add	r2, sp, #28
 80105c4:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80105c8:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80105cc:	463b      	mov	r3, r7
 80105ce:	47d8      	blx	fp
 80105d0:	46a6      	mov	lr, r4
 80105d2:	f10d 0c1c 	add.w	ip, sp, #28
 80105d6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80105da:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80105de:	f8de 3000 	ldr.w	r3, [lr]
 80105e2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80105e6:	343c      	adds	r4, #60	; 0x3c
 80105e8:	f8cc 3000 	str.w	r3, [ip]
 80105ec:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80105f0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80105f4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80105f8:	f8de 3000 	ldr.w	r3, [lr]
 80105fc:	f8cc 3000 	str.w	r3, [ip]
 8010600:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8010604:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010606:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801060a:	6823      	ldr	r3, [r4, #0]
 801060c:	4631      	mov	r1, r6
 801060e:	4628      	mov	r0, r5
 8010610:	f8cc 3000 	str.w	r3, [ip]
 8010614:	682b      	ldr	r3, [r5, #0]
 8010616:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801061a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801061c:	f8cd 8008 	str.w	r8, [sp, #8]
 8010620:	9201      	str	r2, [sp, #4]
 8010622:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8010624:	9200      	str	r2, [sp, #0]
 8010626:	aa07      	add	r2, sp, #28
 8010628:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801062a:	463b      	mov	r3, r7
 801062c:	47a0      	blx	r4
 801062e:	b017      	add	sp, #92	; 0x5c
 8010630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010634 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8010634:	2000      	movs	r0, #0
 8010636:	4770      	bx	lr

08010638 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8010638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801063c:	b08d      	sub	sp, #52	; 0x34
 801063e:	4688      	mov	r8, r1
 8010640:	f8d3 c000 	ldr.w	ip, [r3]
 8010644:	9916      	ldr	r1, [sp, #88]	; 0x58
 8010646:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 801064a:	680f      	ldr	r7, [r1, #0]
 801064c:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8010650:	eba7 070c 	sub.w	r7, r7, ip
 8010654:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8010658:	edd3 6a07 	vldr	s13, [r3, #28]
 801065c:	42bc      	cmp	r4, r7
 801065e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8010660:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8010664:	bfa8      	it	ge
 8010666:	463c      	movge	r4, r7
 8010668:	f9b1 9000 	ldrsh.w	r9, [r1]
 801066c:	f9ba 1000 	ldrsh.w	r1, [sl]
 8010670:	ee07 4a90 	vmov	s15, r4
 8010674:	eb09 0e0c 	add.w	lr, r9, ip
 8010678:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801067c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8010680:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8010684:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8010688:	4571      	cmp	r1, lr
 801068a:	ee25 4a04 	vmul.f32	s8, s10, s8
 801068e:	ee65 4a24 	vmul.f32	s9, s10, s9
 8010692:	ee25 5a27 	vmul.f32	s10, s10, s15
 8010696:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801069a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801069e:	ee32 1a05 	vadd.f32	s2, s4, s10
 80106a2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80106a6:	ee36 0a84 	vadd.f32	s0, s13, s8
 80106aa:	ee61 1a87 	vmul.f32	s3, s3, s14
 80106ae:	ee22 2a07 	vmul.f32	s4, s4, s14
 80106b2:	f340 808c 	ble.w	80107ce <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 80106b6:	eba1 060e 	sub.w	r6, r1, lr
 80106ba:	fb96 f5f4 	sdiv	r5, r6, r4
 80106be:	ee07 5a10 	vmov	s14, r5
 80106c2:	2d00      	cmp	r5, #0
 80106c4:	fb04 6615 	mls	r6, r4, r5, r6
 80106c8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80106cc:	eea7 0a04 	vfma.f32	s0, s14, s8
 80106d0:	eee7 0a24 	vfma.f32	s1, s14, s9
 80106d4:	eea7 1a05 	vfma.f32	s2, s14, s10
 80106d8:	dd12      	ble.n	8010700 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 80106da:	ee70 6a44 	vsub.f32	s13, s0, s8
 80106de:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80106e2:	ee31 2a45 	vsub.f32	s4, s2, s10
 80106e6:	eef5 6a40 	vcmp.f32	s13, #0.0
 80106ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80106ee:	bf14      	ite	ne
 80106f0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80106f4:	eeb0 7a67 	vmoveq.f32	s14, s15
 80106f8:	ee61 1a87 	vmul.f32	s3, s3, s14
 80106fc:	ee22 2a07 	vmul.f32	s4, s4, s14
 8010700:	fb05 f204 	mul.w	r2, r5, r4
 8010704:	1abf      	subs	r7, r7, r2
 8010706:	4494      	add	ip, r2
 8010708:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 801070c:	4411      	add	r1, r2
 801070e:	eb09 020c 	add.w	r2, r9, ip
 8010712:	b209      	sxth	r1, r1
 8010714:	443a      	add	r2, r7
 8010716:	428a      	cmp	r2, r1
 8010718:	bfc4      	itt	gt
 801071a:	eba1 0209 	subgt.w	r2, r1, r9
 801071e:	eba2 070c 	subgt.w	r7, r2, ip
 8010722:	2f00      	cmp	r7, #0
 8010724:	dd50      	ble.n	80107c8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 8010726:	fb97 f1f4 	sdiv	r1, r7, r4
 801072a:	fb04 7211 	mls	r2, r4, r1, r7
 801072e:	b90a      	cbnz	r2, 8010734 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 8010730:	3901      	subs	r1, #1
 8010732:	4622      	mov	r2, r4
 8010734:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8010738:	6840      	ldr	r0, [r0, #4]
 801073a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801073e:	44b6      	add	lr, r6
 8010740:	f8d0 a000 	ldr.w	sl, [r0]
 8010744:	2900      	cmp	r1, #0
 8010746:	bfcc      	ite	gt
 8010748:	46a1      	movgt	r9, r4
 801074a:	4691      	movle	r9, r2
 801074c:	900b      	str	r0, [sp, #44]	; 0x2c
 801074e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8010750:	fb04 e505 	mla	r5, r4, r5, lr
 8010754:	eef0 6a42 	vmov.f32	s13, s4
 8010758:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 801075c:	9008      	str	r0, [sp, #32]
 801075e:	eeb0 7a61 	vmov.f32	s14, s3
 8010762:	9818      	ldr	r0, [sp, #96]	; 0x60
 8010764:	695b      	ldr	r3, [r3, #20]
 8010766:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801076a:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 801076e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8010772:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8010774:	445b      	add	r3, fp
 8010776:	9307      	str	r3, [sp, #28]
 8010778:	ee16 3a90 	vmov	r3, s13
 801077c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8010780:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8010784:	ee21 3a23 	vmul.f32	s6, s2, s7
 8010788:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801078c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8010790:	ee17 7a90 	vmov	r7, s15
 8010794:	ee73 7a42 	vsub.f32	s15, s6, s4
 8010798:	fb97 f7f4 	sdiv	r7, r7, r4
 801079c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80107a0:	ee17 ca90 	vmov	ip, s15
 80107a4:	fb9c fcf4 	sdiv	ip, ip, r4
 80107a8:	fb0c 3306 	mla	r3, ip, r6, r3
 80107ac:	9302      	str	r3, [sp, #8]
 80107ae:	ee17 3a10 	vmov	r3, s14
 80107b2:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80107b6:	fb07 3706 	mla	r7, r7, r6, r3
 80107ba:	eba9 0306 	sub.w	r3, r9, r6
 80107be:	e9cd 4700 	strd	r4, r7, [sp]
 80107c2:	f8da 4008 	ldr.w	r4, [sl, #8]
 80107c6:	47a0      	blx	r4
 80107c8:	b00d      	add	sp, #52	; 0x34
 80107ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107ce:	2500      	movs	r5, #0
 80107d0:	462e      	mov	r6, r5
 80107d2:	e799      	b.n	8010708 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

080107d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80107d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107d8:	b0db      	sub	sp, #364	; 0x16c
 80107da:	461d      	mov	r5, r3
 80107dc:	4614      	mov	r4, r2
 80107de:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80107e2:	910f      	str	r1, [sp, #60]	; 0x3c
 80107e4:	4629      	mov	r1, r5
 80107e6:	930a      	str	r3, [sp, #40]	; 0x28
 80107e8:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80107ec:	9009      	str	r0, [sp, #36]	; 0x24
 80107ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80107f0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80107f4:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80107f8:	9310      	str	r3, [sp, #64]	; 0x40
 80107fa:	6803      	ldr	r3, [r0, #0]
 80107fc:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80107fe:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8010802:	47b8      	blx	r7
 8010804:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010806:	6058      	str	r0, [r3, #4]
 8010808:	2800      	cmp	r0, #0
 801080a:	f000 83a1 	beq.w	8010f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801080e:	682b      	ldr	r3, [r5, #0]
 8010810:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8010814:	ed94 7a02 	vldr	s14, [r4, #8]
 8010818:	9314      	str	r3, [sp, #80]	; 0x50
 801081a:	686b      	ldr	r3, [r5, #4]
 801081c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8010820:	9315      	str	r3, [sp, #84]	; 0x54
 8010822:	4bc1      	ldr	r3, [pc, #772]	; (8010b28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8010824:	7819      	ldrb	r1, [r3, #0]
 8010826:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801082a:	2900      	cmp	r1, #0
 801082c:	bf16      	itet	ne
 801082e:	4619      	movne	r1, r3
 8010830:	4611      	moveq	r1, r2
 8010832:	4613      	movne	r3, r2
 8010834:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010838:	9116      	str	r1, [sp, #88]	; 0x58
 801083a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 801083e:	f240 8387 	bls.w	8010f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010842:	ed94 7a07 	vldr	s14, [r4, #28]
 8010846:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801084a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801084e:	f240 837f 	bls.w	8010f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010852:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8010856:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801085a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801085e:	f240 8377 	bls.w	8010f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010862:	6822      	ldr	r2, [r4, #0]
 8010864:	4bb1      	ldr	r3, [pc, #708]	; (8010b2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8010866:	429a      	cmp	r2, r3
 8010868:	f2c0 8372 	blt.w	8010f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801086c:	49b0      	ldr	r1, [pc, #704]	; (8010b30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 801086e:	6963      	ldr	r3, [r4, #20]
 8010870:	428a      	cmp	r2, r1
 8010872:	f300 836d 	bgt.w	8010f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010876:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801087a:	48ae      	ldr	r0, [pc, #696]	; (8010b34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 801087c:	33ff      	adds	r3, #255	; 0xff
 801087e:	4283      	cmp	r3, r0
 8010880:	f200 8366 	bhi.w	8010f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010884:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8010886:	4dac      	ldr	r5, [pc, #688]	; (8010b38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8010888:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801088c:	33ff      	adds	r3, #255	; 0xff
 801088e:	42ab      	cmp	r3, r5
 8010890:	f200 835e 	bhi.w	8010f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010894:	6862      	ldr	r2, [r4, #4]
 8010896:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 801089a:	33ff      	adds	r3, #255	; 0xff
 801089c:	4283      	cmp	r3, r0
 801089e:	f200 8357 	bhi.w	8010f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80108a2:	69a1      	ldr	r1, [r4, #24]
 80108a4:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80108a8:	33ff      	adds	r3, #255	; 0xff
 80108aa:	4283      	cmp	r3, r0
 80108ac:	f200 8350 	bhi.w	8010f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80108b0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80108b2:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80108b6:	30ff      	adds	r0, #255	; 0xff
 80108b8:	42a8      	cmp	r0, r5
 80108ba:	f200 8349 	bhi.w	8010f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80108be:	428a      	cmp	r2, r1
 80108c0:	f280 8110 	bge.w	8010ae4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80108c4:	429a      	cmp	r2, r3
 80108c6:	f300 8119 	bgt.w	8010afc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80108ca:	4299      	cmp	r1, r3
 80108cc:	f280 811d 	bge.w	8010b0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80108d0:	2502      	movs	r5, #2
 80108d2:	2701      	movs	r7, #1
 80108d4:	46a9      	mov	r9, r5
 80108d6:	46b8      	mov	r8, r7
 80108d8:	f04f 0a00 	mov.w	sl, #0
 80108dc:	4621      	mov	r1, r4
 80108de:	a849      	add	r0, sp, #292	; 0x124
 80108e0:	f003 fd14 	bl	801430c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80108e4:	4622      	mov	r2, r4
 80108e6:	4653      	mov	r3, sl
 80108e8:	a949      	add	r1, sp, #292	; 0x124
 80108ea:	f8cd 9000 	str.w	r9, [sp]
 80108ee:	a819      	add	r0, sp, #100	; 0x64
 80108f0:	f003 fe3c 	bl	801456c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80108f4:	4622      	mov	r2, r4
 80108f6:	4653      	mov	r3, sl
 80108f8:	a949      	add	r1, sp, #292	; 0x124
 80108fa:	f8cd 8000 	str.w	r8, [sp]
 80108fe:	a829      	add	r0, sp, #164	; 0xa4
 8010900:	f003 fe34 	bl	801456c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010904:	4643      	mov	r3, r8
 8010906:	4622      	mov	r2, r4
 8010908:	a949      	add	r1, sp, #292	; 0x124
 801090a:	f8cd 9000 	str.w	r9, [sp]
 801090e:	a839      	add	r0, sp, #228	; 0xe4
 8010910:	f003 fe2c 	bl	801456c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010914:	42af      	cmp	r7, r5
 8010916:	af12      	add	r7, sp, #72	; 0x48
 8010918:	bfb7      	itett	lt
 801091a:	2300      	movlt	r3, #0
 801091c:	2301      	movge	r3, #1
 801091e:	ad29      	addlt	r5, sp, #164	; 0xa4
 8010920:	ac19      	addlt	r4, sp, #100	; 0x64
 8010922:	bfb1      	iteee	lt
 8010924:	930e      	strlt	r3, [sp, #56]	; 0x38
 8010926:	ad19      	addge	r5, sp, #100	; 0x64
 8010928:	930e      	strge	r3, [sp, #56]	; 0x38
 801092a:	ac29      	addge	r4, sp, #164	; 0xa4
 801092c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801092e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8010932:	e887 0003 	stmia.w	r7, {r0, r1}
 8010936:	b928      	cbnz	r0, 8010944 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8010938:	4b80      	ldr	r3, [pc, #512]	; (8010b3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801093a:	6818      	ldr	r0, [r3, #0]
 801093c:	6803      	ldr	r3, [r0, #0]
 801093e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010940:	4798      	blx	r3
 8010942:	6038      	str	r0, [r7, #0]
 8010944:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8010946:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801094a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801094e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8010950:	930c      	str	r3, [sp, #48]	; 0x30
 8010952:	990c      	ldr	r1, [sp, #48]	; 0x30
 8010954:	6963      	ldr	r3, [r4, #20]
 8010956:	440b      	add	r3, r1
 8010958:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801095c:	4408      	add	r0, r1
 801095e:	b200      	sxth	r0, r0
 8010960:	4283      	cmp	r3, r0
 8010962:	900d      	str	r0, [sp, #52]	; 0x34
 8010964:	f280 80dd 	bge.w	8010b22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8010968:	428b      	cmp	r3, r1
 801096a:	da08      	bge.n	801097e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801096c:	2a00      	cmp	r2, #0
 801096e:	dd06      	ble.n	801097e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010970:	1acb      	subs	r3, r1, r3
 8010972:	429a      	cmp	r2, r3
 8010974:	f2c0 80e4 	blt.w	8010b40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8010978:	2b00      	cmp	r3, #0
 801097a:	f300 80e2 	bgt.w	8010b42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801097e:	6967      	ldr	r7, [r4, #20]
 8010980:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8010984:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010986:	443b      	add	r3, r7
 8010988:	461f      	mov	r7, r3
 801098a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801098c:	1bdf      	subs	r7, r3, r7
 801098e:	4297      	cmp	r7, r2
 8010990:	bfa8      	it	ge
 8010992:	4617      	movge	r7, r2
 8010994:	2f00      	cmp	r7, #0
 8010996:	f340 8166 	ble.w	8010c66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801099a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801099c:	6829      	ldr	r1, [r5, #0]
 801099e:	f9b3 2000 	ldrsh.w	r2, [r3]
 80109a2:	f9bb 3000 	ldrsh.w	r3, [fp]
 80109a6:	4411      	add	r1, r2
 80109a8:	6820      	ldr	r0, [r4, #0]
 80109aa:	4299      	cmp	r1, r3
 80109ac:	dd1a      	ble.n	80109e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80109ae:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80109b2:	4402      	add	r2, r0
 80109b4:	440b      	add	r3, r1
 80109b6:	b21b      	sxth	r3, r3
 80109b8:	429a      	cmp	r2, r3
 80109ba:	dc13      	bgt.n	80109e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80109bc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80109be:	a912      	add	r1, sp, #72	; 0x48
 80109c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80109c2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80109c4:	681b      	ldr	r3, [r3, #0]
 80109c6:	9206      	str	r2, [sp, #24]
 80109c8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80109ca:	9500      	str	r5, [sp, #0]
 80109cc:	9205      	str	r2, [sp, #20]
 80109ce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80109d0:	e9cd b203 	strd	fp, r2, [sp, #12]
 80109d4:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80109d6:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80109da:	aa49      	add	r2, sp, #292	; 0x124
 80109dc:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80109e0:	4623      	mov	r3, r4
 80109e2:	47c8      	blx	r9
 80109e4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80109e8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80109ec:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80109f0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80109f4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80109f8:	68a1      	ldr	r1, [r4, #8]
 80109fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80109fe:	ed94 6a08 	vldr	s12, [r4, #32]
 8010a02:	edd4 6a07 	vldr	s13, [r4, #28]
 8010a06:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010a0a:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010a0e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010a12:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010a16:	edc4 6a07 	vstr	s13, [r4, #28]
 8010a1a:	441a      	add	r2, r3
 8010a1c:	6963      	ldr	r3, [r4, #20]
 8010a1e:	3301      	adds	r3, #1
 8010a20:	6022      	str	r2, [r4, #0]
 8010a22:	6163      	str	r3, [r4, #20]
 8010a24:	69a3      	ldr	r3, [r4, #24]
 8010a26:	3b01      	subs	r3, #1
 8010a28:	61a3      	str	r3, [r4, #24]
 8010a2a:	6923      	ldr	r3, [r4, #16]
 8010a2c:	440b      	add	r3, r1
 8010a2e:	68e1      	ldr	r1, [r4, #12]
 8010a30:	428b      	cmp	r3, r1
 8010a32:	6123      	str	r3, [r4, #16]
 8010a34:	db15      	blt.n	8010a62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8010a36:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8010a3a:	3201      	adds	r2, #1
 8010a3c:	1a5b      	subs	r3, r3, r1
 8010a3e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010a42:	6022      	str	r2, [r4, #0]
 8010a44:	6123      	str	r3, [r4, #16]
 8010a46:	edc4 6a07 	vstr	s13, [r4, #28]
 8010a4a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8010a4e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010a52:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010a56:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8010a5a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010a5e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010a62:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8010a66:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8010a6a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8010a6e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010a72:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8010a76:	68a9      	ldr	r1, [r5, #8]
 8010a78:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010a7c:	ed95 6a08 	vldr	s12, [r5, #32]
 8010a80:	edd5 6a07 	vldr	s13, [r5, #28]
 8010a84:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010a88:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010a8c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8010a90:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010a94:	edc5 6a07 	vstr	s13, [r5, #28]
 8010a98:	441a      	add	r2, r3
 8010a9a:	696b      	ldr	r3, [r5, #20]
 8010a9c:	3301      	adds	r3, #1
 8010a9e:	602a      	str	r2, [r5, #0]
 8010aa0:	616b      	str	r3, [r5, #20]
 8010aa2:	69ab      	ldr	r3, [r5, #24]
 8010aa4:	3b01      	subs	r3, #1
 8010aa6:	61ab      	str	r3, [r5, #24]
 8010aa8:	692b      	ldr	r3, [r5, #16]
 8010aaa:	440b      	add	r3, r1
 8010aac:	68e9      	ldr	r1, [r5, #12]
 8010aae:	428b      	cmp	r3, r1
 8010ab0:	612b      	str	r3, [r5, #16]
 8010ab2:	db15      	blt.n	8010ae0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8010ab4:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8010ab8:	3201      	adds	r2, #1
 8010aba:	1a5b      	subs	r3, r3, r1
 8010abc:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010ac0:	602a      	str	r2, [r5, #0]
 8010ac2:	612b      	str	r3, [r5, #16]
 8010ac4:	edc5 6a07 	vstr	s13, [r5, #28]
 8010ac8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8010acc:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010ad0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010ad4:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8010ad8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010adc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8010ae0:	3f01      	subs	r7, #1
 8010ae2:	e757      	b.n	8010994 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8010ae4:	4299      	cmp	r1, r3
 8010ae6:	dc13      	bgt.n	8010b10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8010ae8:	429a      	cmp	r2, r3
 8010aea:	da14      	bge.n	8010b16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8010aec:	2502      	movs	r5, #2
 8010aee:	2703      	movs	r7, #3
 8010af0:	f04f 0800 	mov.w	r8, #0
 8010af4:	46a9      	mov	r9, r5
 8010af6:	f04f 0a01 	mov.w	sl, #1
 8010afa:	e6ef      	b.n	80108dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8010afc:	2501      	movs	r5, #1
 8010afe:	2700      	movs	r7, #0
 8010b00:	46a9      	mov	r9, r5
 8010b02:	46b8      	mov	r8, r7
 8010b04:	f04f 0a02 	mov.w	sl, #2
 8010b08:	e6e8      	b.n	80108dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8010b0a:	2501      	movs	r5, #1
 8010b0c:	2702      	movs	r7, #2
 8010b0e:	e6e1      	b.n	80108d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8010b10:	2500      	movs	r5, #0
 8010b12:	2701      	movs	r7, #1
 8010b14:	e7f4      	b.n	8010b00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8010b16:	2702      	movs	r7, #2
 8010b18:	2503      	movs	r5, #3
 8010b1a:	f04f 0900 	mov.w	r9, #0
 8010b1e:	46b8      	mov	r8, r7
 8010b20:	e7e9      	b.n	8010af6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8010b22:	4613      	mov	r3, r2
 8010b24:	e728      	b.n	8010978 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8010b26:	bf00      	nop
 8010b28:	20032424 	.word	0x20032424
 8010b2c:	fffd8f01 	.word	0xfffd8f01
 8010b30:	00027100 	.word	0x00027100
 8010b34:	0004e1ff 	.word	0x0004e1ff
 8010b38:	0004e1fe 	.word	0x0004e1fe
 8010b3c:	2003242c 	.word	0x2003242c
 8010b40:	4613      	mov	r3, r2
 8010b42:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010b44:	469e      	mov	lr, r3
 8010b46:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8010b48:	469c      	mov	ip, r3
 8010b4a:	9111      	str	r1, [sp, #68]	; 0x44
 8010b4c:	f04f 0900 	mov.w	r9, #0
 8010b50:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8010b54:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8010b58:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8010b5c:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8010b60:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8010b64:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8010b68:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8010b6c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8010b70:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8010b74:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8010b78:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8010b7c:	f1bc 0f00 	cmp.w	ip, #0
 8010b80:	d147      	bne.n	8010c12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8010b82:	eb03 0c07 	add.w	ip, r3, r7
 8010b86:	1ad7      	subs	r7, r2, r3
 8010b88:	f1b9 0f00 	cmp.w	r9, #0
 8010b8c:	d009      	beq.n	8010ba2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8010b8e:	9029      	str	r0, [sp, #164]	; 0xa4
 8010b90:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8010b94:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8010b98:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8010b9c:	912d      	str	r1, [sp, #180]	; 0xb4
 8010b9e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8010ba2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8010ba4:	f04f 0800 	mov.w	r8, #0
 8010ba8:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8010bac:	9111      	str	r1, [sp, #68]	; 0x44
 8010bae:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8010bb2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8010bb6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8010bba:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8010bbe:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8010bc2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8010bc6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8010bca:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8010bce:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8010bd2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8010bd6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8010bda:	f1be 0f00 	cmp.w	lr, #0
 8010bde:	d031      	beq.n	8010c44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8010be0:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8010be2:	4450      	add	r0, sl
 8010be4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8010be8:	4431      	add	r1, r6
 8010bea:	ee37 7a04 	vadd.f32	s14, s14, s8
 8010bee:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010bf2:	4549      	cmp	r1, r9
 8010bf4:	db08      	blt.n	8010c08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8010bf6:	ee77 7a85 	vadd.f32	s15, s15, s10
 8010bfa:	3001      	adds	r0, #1
 8010bfc:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8010c00:	eba1 0109 	sub.w	r1, r1, r9
 8010c04:	ee37 7a06 	vadd.f32	s14, s14, s12
 8010c08:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010c0c:	f04f 0801 	mov.w	r8, #1
 8010c10:	e7e3      	b.n	8010bda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8010c12:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8010c14:	4450      	add	r0, sl
 8010c16:	ee37 7a24 	vadd.f32	s14, s14, s9
 8010c1a:	4431      	add	r1, r6
 8010c1c:	ee77 7a84 	vadd.f32	s15, s15, s8
 8010c20:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010c24:	4541      	cmp	r1, r8
 8010c26:	db08      	blt.n	8010c3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8010c28:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010c2c:	3001      	adds	r0, #1
 8010c2e:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010c32:	eba1 0108 	sub.w	r1, r1, r8
 8010c36:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010c3a:	f10c 3cff 	add.w	ip, ip, #4294967295
 8010c3e:	f04f 0901 	mov.w	r9, #1
 8010c42:	e79b      	b.n	8010b7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8010c44:	449c      	add	ip, r3
 8010c46:	1aff      	subs	r7, r7, r3
 8010c48:	f1b8 0f00 	cmp.w	r8, #0
 8010c4c:	d009      	beq.n	8010c62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8010c4e:	9019      	str	r0, [sp, #100]	; 0x64
 8010c50:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8010c54:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010c58:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010c5c:	911d      	str	r1, [sp, #116]	; 0x74
 8010c5e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010c62:	1ad2      	subs	r2, r2, r3
 8010c64:	e68b      	b.n	801097e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010c66:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010c68:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8010c6a:	2b00      	cmp	r3, #0
 8010c6c:	f000 80d1 	beq.w	8010e12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8010c70:	ad19      	add	r5, sp, #100	; 0x64
 8010c72:	ac39      	add	r4, sp, #228	; 0xe4
 8010c74:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8010c76:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8010c7a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8010c7e:	930c      	str	r3, [sp, #48]	; 0x30
 8010c80:	990c      	ldr	r1, [sp, #48]	; 0x30
 8010c82:	6963      	ldr	r3, [r4, #20]
 8010c84:	440b      	add	r3, r1
 8010c86:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8010c8a:	4408      	add	r0, r1
 8010c8c:	b200      	sxth	r0, r0
 8010c8e:	4283      	cmp	r3, r0
 8010c90:	900d      	str	r0, [sp, #52]	; 0x34
 8010c92:	f280 80c1 	bge.w	8010e18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8010c96:	428b      	cmp	r3, r1
 8010c98:	da08      	bge.n	8010cac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8010c9a:	2a00      	cmp	r2, #0
 8010c9c:	dd06      	ble.n	8010cac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8010c9e:	1acb      	subs	r3, r1, r3
 8010ca0:	429a      	cmp	r2, r3
 8010ca2:	f2c0 80bb 	blt.w	8010e1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8010ca6:	2b00      	cmp	r3, #0
 8010ca8:	f300 80b9 	bgt.w	8010e1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8010cac:	6967      	ldr	r7, [r4, #20]
 8010cae:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8010cb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010cb4:	443b      	add	r3, r7
 8010cb6:	461f      	mov	r7, r3
 8010cb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010cba:	1bdf      	subs	r7, r3, r7
 8010cbc:	4297      	cmp	r7, r2
 8010cbe:	bfa8      	it	ge
 8010cc0:	4617      	movge	r7, r2
 8010cc2:	2f00      	cmp	r7, #0
 8010cc4:	f340 813c 	ble.w	8010f40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8010cc8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8010cca:	6829      	ldr	r1, [r5, #0]
 8010ccc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010cd0:	f9bb 3000 	ldrsh.w	r3, [fp]
 8010cd4:	4411      	add	r1, r2
 8010cd6:	6820      	ldr	r0, [r4, #0]
 8010cd8:	4299      	cmp	r1, r3
 8010cda:	dd1a      	ble.n	8010d12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8010cdc:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8010ce0:	4402      	add	r2, r0
 8010ce2:	440b      	add	r3, r1
 8010ce4:	b21b      	sxth	r3, r3
 8010ce6:	429a      	cmp	r2, r3
 8010ce8:	dc13      	bgt.n	8010d12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8010cea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010cec:	a912      	add	r1, sp, #72	; 0x48
 8010cee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010cf0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010cf2:	681b      	ldr	r3, [r3, #0]
 8010cf4:	9206      	str	r2, [sp, #24]
 8010cf6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010cf8:	9500      	str	r5, [sp, #0]
 8010cfa:	9205      	str	r2, [sp, #20]
 8010cfc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010cfe:	e9cd b203 	strd	fp, r2, [sp, #12]
 8010d02:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8010d04:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8010d08:	aa49      	add	r2, sp, #292	; 0x124
 8010d0a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8010d0e:	4623      	mov	r3, r4
 8010d10:	47c8      	blx	r9
 8010d12:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8010d16:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8010d1a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8010d1e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010d22:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8010d26:	68a1      	ldr	r1, [r4, #8]
 8010d28:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010d2c:	ed94 6a08 	vldr	s12, [r4, #32]
 8010d30:	edd4 6a07 	vldr	s13, [r4, #28]
 8010d34:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010d38:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010d3c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010d40:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010d44:	edc4 6a07 	vstr	s13, [r4, #28]
 8010d48:	441a      	add	r2, r3
 8010d4a:	6963      	ldr	r3, [r4, #20]
 8010d4c:	3301      	adds	r3, #1
 8010d4e:	6022      	str	r2, [r4, #0]
 8010d50:	6163      	str	r3, [r4, #20]
 8010d52:	69a3      	ldr	r3, [r4, #24]
 8010d54:	3b01      	subs	r3, #1
 8010d56:	61a3      	str	r3, [r4, #24]
 8010d58:	6923      	ldr	r3, [r4, #16]
 8010d5a:	440b      	add	r3, r1
 8010d5c:	68e1      	ldr	r1, [r4, #12]
 8010d5e:	428b      	cmp	r3, r1
 8010d60:	6123      	str	r3, [r4, #16]
 8010d62:	db15      	blt.n	8010d90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8010d64:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8010d68:	3201      	adds	r2, #1
 8010d6a:	1a5b      	subs	r3, r3, r1
 8010d6c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010d70:	6022      	str	r2, [r4, #0]
 8010d72:	6123      	str	r3, [r4, #16]
 8010d74:	edc4 6a07 	vstr	s13, [r4, #28]
 8010d78:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8010d7c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010d80:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010d84:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8010d88:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010d8c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010d90:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8010d94:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8010d98:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8010d9c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010da0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8010da4:	68a9      	ldr	r1, [r5, #8]
 8010da6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010daa:	ed95 6a08 	vldr	s12, [r5, #32]
 8010dae:	edd5 6a07 	vldr	s13, [r5, #28]
 8010db2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010db6:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010dba:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8010dbe:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010dc2:	edc5 6a07 	vstr	s13, [r5, #28]
 8010dc6:	441a      	add	r2, r3
 8010dc8:	696b      	ldr	r3, [r5, #20]
 8010dca:	3301      	adds	r3, #1
 8010dcc:	602a      	str	r2, [r5, #0]
 8010dce:	616b      	str	r3, [r5, #20]
 8010dd0:	69ab      	ldr	r3, [r5, #24]
 8010dd2:	3b01      	subs	r3, #1
 8010dd4:	61ab      	str	r3, [r5, #24]
 8010dd6:	692b      	ldr	r3, [r5, #16]
 8010dd8:	440b      	add	r3, r1
 8010dda:	68e9      	ldr	r1, [r5, #12]
 8010ddc:	428b      	cmp	r3, r1
 8010dde:	612b      	str	r3, [r5, #16]
 8010de0:	db15      	blt.n	8010e0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8010de2:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8010de6:	3201      	adds	r2, #1
 8010de8:	1a5b      	subs	r3, r3, r1
 8010dea:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010dee:	602a      	str	r2, [r5, #0]
 8010df0:	612b      	str	r3, [r5, #16]
 8010df2:	edc5 6a07 	vstr	s13, [r5, #28]
 8010df6:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8010dfa:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010dfe:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010e02:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8010e06:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010e0a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8010e0e:	3f01      	subs	r7, #1
 8010e10:	e757      	b.n	8010cc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8010e12:	ad39      	add	r5, sp, #228	; 0xe4
 8010e14:	ac19      	add	r4, sp, #100	; 0x64
 8010e16:	e72d      	b.n	8010c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8010e18:	4613      	mov	r3, r2
 8010e1a:	e744      	b.n	8010ca6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8010e1c:	4613      	mov	r3, r2
 8010e1e:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8010e20:	469e      	mov	lr, r3
 8010e22:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8010e26:	461f      	mov	r7, r3
 8010e28:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8010e2c:	f04f 0900 	mov.w	r9, #0
 8010e30:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8010e34:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8010e38:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8010e3c:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8010e40:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8010e44:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8010e46:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8010e4a:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8010e4e:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8010e52:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8010e56:	960e      	str	r6, [sp, #56]	; 0x38
 8010e58:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8010e5c:	2f00      	cmp	r7, #0
 8010e5e:	d146      	bne.n	8010eee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8010e60:	449c      	add	ip, r3
 8010e62:	1ad7      	subs	r7, r2, r3
 8010e64:	f1b9 0f00 	cmp.w	r9, #0
 8010e68:	d009      	beq.n	8010e7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8010e6a:	9039      	str	r0, [sp, #228]	; 0xe4
 8010e6c:	913d      	str	r1, [sp, #244]	; 0xf4
 8010e6e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8010e72:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8010e76:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8010e7a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8010e7e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8010e80:	f04f 0800 	mov.w	r8, #0
 8010e84:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8010e88:	910e      	str	r1, [sp, #56]	; 0x38
 8010e8a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8010e8e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8010e92:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8010e96:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8010e9a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8010e9e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8010ea2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8010ea6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8010eaa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8010eae:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8010eb2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8010eb6:	f1be 0f00 	cmp.w	lr, #0
 8010eba:	d030      	beq.n	8010f1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8010ebc:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8010ebe:	4450      	add	r0, sl
 8010ec0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8010ec4:	4431      	add	r1, r6
 8010ec6:	ee37 7a04 	vadd.f32	s14, s14, s8
 8010eca:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010ece:	4549      	cmp	r1, r9
 8010ed0:	db08      	blt.n	8010ee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8010ed2:	ee77 7a85 	vadd.f32	s15, s15, s10
 8010ed6:	3001      	adds	r0, #1
 8010ed8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8010edc:	eba1 0109 	sub.w	r1, r1, r9
 8010ee0:	ee37 7a06 	vadd.f32	s14, s14, s12
 8010ee4:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010ee8:	f04f 0801 	mov.w	r8, #1
 8010eec:	e7e3      	b.n	8010eb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8010eee:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8010ef0:	4450      	add	r0, sl
 8010ef2:	ee37 7a24 	vadd.f32	s14, s14, s9
 8010ef6:	4431      	add	r1, r6
 8010ef8:	ee77 7a84 	vadd.f32	s15, s15, s8
 8010efc:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010f00:	4541      	cmp	r1, r8
 8010f02:	db08      	blt.n	8010f16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8010f04:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010f08:	3001      	adds	r0, #1
 8010f0a:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010f0e:	eba1 0108 	sub.w	r1, r1, r8
 8010f12:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010f16:	3f01      	subs	r7, #1
 8010f18:	f04f 0901 	mov.w	r9, #1
 8010f1c:	e79e      	b.n	8010e5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8010f1e:	449c      	add	ip, r3
 8010f20:	1aff      	subs	r7, r7, r3
 8010f22:	f1b8 0f00 	cmp.w	r8, #0
 8010f26:	d009      	beq.n	8010f3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8010f28:	9019      	str	r0, [sp, #100]	; 0x64
 8010f2a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8010f2e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010f32:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010f36:	911d      	str	r1, [sp, #116]	; 0x74
 8010f38:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010f3c:	1ad2      	subs	r2, r2, r3
 8010f3e:	e6b5      	b.n	8010cac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8010f40:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010f42:	681b      	ldr	r3, [r3, #0]
 8010f44:	b923      	cbnz	r3, 8010f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010f46:	4b04      	ldr	r3, [pc, #16]	; (8010f58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8010f48:	6818      	ldr	r0, [r3, #0]
 8010f4a:	6803      	ldr	r3, [r0, #0]
 8010f4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010f4e:	4798      	blx	r3
 8010f50:	b05b      	add	sp, #364	; 0x16c
 8010f52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f56:	bf00      	nop
 8010f58:	2003242c 	.word	0x2003242c

08010f5c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8010f5c:	b570      	push	{r4, r5, r6, lr}
 8010f5e:	4604      	mov	r4, r0
 8010f60:	2500      	movs	r5, #0
 8010f62:	9805      	ldr	r0, [sp, #20]
 8010f64:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8010f68:	6061      	str	r1, [r4, #4]
 8010f6a:	8263      	strh	r3, [r4, #18]
 8010f6c:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8010f70:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010f74:	8025      	strh	r5, [r4, #0]
 8010f76:	7221      	strb	r1, [r4, #8]
 8010f78:	7266      	strb	r6, [r4, #9]
 8010f7a:	60e0      	str	r0, [r4, #12]
 8010f7c:	8222      	strh	r2, [r4, #16]
 8010f7e:	82a3      	strh	r3, [r4, #20]
 8010f80:	82e5      	strh	r5, [r4, #22]
 8010f82:	8325      	strh	r5, [r4, #24]
 8010f84:	8365      	strh	r5, [r4, #26]
 8010f86:	83a5      	strh	r5, [r4, #28]
 8010f88:	83e5      	strh	r5, [r4, #30]
 8010f8a:	8425      	strh	r5, [r4, #32]
 8010f8c:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8010f90:	b32e      	cbz	r6, 8010fde <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8010f92:	6803      	ldr	r3, [r0, #0]
 8010f94:	695b      	ldr	r3, [r3, #20]
 8010f96:	4798      	blx	r3
 8010f98:	4606      	mov	r6, r0
 8010f9a:	b300      	cbz	r0, 8010fde <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8010f9c:	68e0      	ldr	r0, [r4, #12]
 8010f9e:	4631      	mov	r1, r6
 8010fa0:	6803      	ldr	r3, [r0, #0]
 8010fa2:	68db      	ldr	r3, [r3, #12]
 8010fa4:	4798      	blx	r3
 8010fa6:	4605      	mov	r5, r0
 8010fa8:	b1c8      	cbz	r0, 8010fde <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8010faa:	7b43      	ldrb	r3, [r0, #13]
 8010fac:	7a82      	ldrb	r2, [r0, #10]
 8010fae:	005b      	lsls	r3, r3, #1
 8010fb0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010fb4:	4313      	orrs	r3, r2
 8010fb6:	8423      	strh	r3, [r4, #32]
 8010fb8:	7a63      	ldrb	r3, [r4, #9]
 8010fba:	2b06      	cmp	r3, #6
 8010fbc:	d10f      	bne.n	8010fde <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8010fbe:	68e0      	ldr	r0, [r4, #12]
 8010fc0:	462a      	mov	r2, r5
 8010fc2:	4631      	mov	r1, r6
 8010fc4:	6803      	ldr	r3, [r0, #0]
 8010fc6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010fc8:	4798      	blx	r3
 8010fca:	7b6b      	ldrb	r3, [r5, #13]
 8010fcc:	005b      	lsls	r3, r3, #1
 8010fce:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010fd2:	7aab      	ldrb	r3, [r5, #10]
 8010fd4:	4313      	orrs	r3, r2
 8010fd6:	4418      	add	r0, r3
 8010fd8:	8c23      	ldrh	r3, [r4, #32]
 8010fda:	4418      	add	r0, r3
 8010fdc:	8420      	strh	r0, [r4, #32]
 8010fde:	4620      	mov	r0, r4
 8010fe0:	bd70      	pop	{r4, r5, r6, pc}

08010fe2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8010fe2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010fe6:	2400      	movs	r4, #0
 8010fe8:	b085      	sub	sp, #20
 8010fea:	4681      	mov	r9, r0
 8010fec:	4688      	mov	r8, r1
 8010fee:	4692      	mov	sl, r2
 8010ff0:	469b      	mov	fp, r3
 8010ff2:	4627      	mov	r7, r4
 8010ff4:	4625      	mov	r5, r4
 8010ff6:	4626      	mov	r6, r4
 8010ff8:	4554      	cmp	r4, sl
 8010ffa:	da2a      	bge.n	8011052 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010ffc:	2300      	movs	r3, #0
 8010ffe:	9303      	str	r3, [sp, #12]
 8011000:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011004:	429d      	cmp	r5, r3
 8011006:	d004      	beq.n	8011012 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8011008:	f242 030b 	movw	r3, #8203	; 0x200b
 801100c:	429d      	cmp	r5, r3
 801100e:	bf18      	it	ne
 8011010:	462f      	movne	r7, r5
 8011012:	ab03      	add	r3, sp, #12
 8011014:	4642      	mov	r2, r8
 8011016:	4659      	mov	r1, fp
 8011018:	4648      	mov	r0, r9
 801101a:	f002 ff8d 	bl	8013f38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801101e:	4605      	mov	r5, r0
 8011020:	b1b8      	cbz	r0, 8011052 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8011022:	280a      	cmp	r0, #10
 8011024:	d015      	beq.n	8011052 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8011026:	9a03      	ldr	r2, [sp, #12]
 8011028:	b18a      	cbz	r2, 801104e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 801102a:	7b50      	ldrb	r0, [r2, #13]
 801102c:	4639      	mov	r1, r7
 801102e:	7a93      	ldrb	r3, [r2, #10]
 8011030:	0040      	lsls	r0, r0, #1
 8011032:	8895      	ldrh	r5, [r2, #4]
 8011034:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8011038:	4303      	orrs	r3, r0
 801103a:	4640      	mov	r0, r8
 801103c:	9301      	str	r3, [sp, #4]
 801103e:	f8d8 3000 	ldr.w	r3, [r8]
 8011042:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011044:	4798      	blx	r3
 8011046:	9b01      	ldr	r3, [sp, #4]
 8011048:	4418      	add	r0, r3
 801104a:	4406      	add	r6, r0
 801104c:	b2b6      	uxth	r6, r6
 801104e:	3401      	adds	r4, #1
 8011050:	e7d2      	b.n	8010ff8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8011052:	4630      	mov	r0, r6
 8011054:	b005      	add	sp, #20
 8011056:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801105a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 801105a:	2a02      	cmp	r2, #2
 801105c:	b530      	push	{r4, r5, lr}
 801105e:	d011      	beq.n	8011084 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8011060:	2a03      	cmp	r2, #3
 8011062:	d01c      	beq.n	801109e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8011064:	2a01      	cmp	r2, #1
 8011066:	d10c      	bne.n	8011082 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8011068:	888b      	ldrh	r3, [r1, #4]
 801106a:	8801      	ldrh	r1, [r0, #0]
 801106c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8011070:	1a5b      	subs	r3, r3, r1
 8011072:	8844      	ldrh	r4, [r0, #2]
 8011074:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8011078:	1a9b      	subs	r3, r3, r2
 801107a:	8004      	strh	r4, [r0, #0]
 801107c:	8081      	strh	r1, [r0, #4]
 801107e:	8043      	strh	r3, [r0, #2]
 8011080:	80c2      	strh	r2, [r0, #6]
 8011082:	bd30      	pop	{r4, r5, pc}
 8011084:	88cb      	ldrh	r3, [r1, #6]
 8011086:	8842      	ldrh	r2, [r0, #2]
 8011088:	1a9b      	subs	r3, r3, r2
 801108a:	88c2      	ldrh	r2, [r0, #6]
 801108c:	1a9b      	subs	r3, r3, r2
 801108e:	888a      	ldrh	r2, [r1, #4]
 8011090:	8801      	ldrh	r1, [r0, #0]
 8011092:	8043      	strh	r3, [r0, #2]
 8011094:	1a52      	subs	r2, r2, r1
 8011096:	8881      	ldrh	r1, [r0, #4]
 8011098:	1a52      	subs	r2, r2, r1
 801109a:	8002      	strh	r2, [r0, #0]
 801109c:	e7f1      	b.n	8011082 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801109e:	88cb      	ldrh	r3, [r1, #6]
 80110a0:	8841      	ldrh	r1, [r0, #2]
 80110a2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80110a6:	1a5b      	subs	r3, r3, r1
 80110a8:	f9b0 5000 	ldrsh.w	r5, [r0]
 80110ac:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80110b0:	1a9b      	subs	r3, r3, r2
 80110b2:	8045      	strh	r5, [r0, #2]
 80110b4:	8082      	strh	r2, [r0, #4]
 80110b6:	8003      	strh	r3, [r0, #0]
 80110b8:	80c4      	strh	r4, [r0, #6]
 80110ba:	e7e2      	b.n	8011082 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080110bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80110bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80110c0:	b09f      	sub	sp, #124	; 0x7c
 80110c2:	920f      	str	r2, [sp, #60]	; 0x3c
 80110c4:	9312      	str	r3, [sp, #72]	; 0x48
 80110c6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80110c8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80110ca:	8812      	ldrh	r2, [r2, #0]
 80110cc:	889b      	ldrh	r3, [r3, #4]
 80110ce:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80110d0:	4413      	add	r3, r2
 80110d2:	900e      	str	r0, [sp, #56]	; 0x38
 80110d4:	6828      	ldr	r0, [r5, #0]
 80110d6:	b21b      	sxth	r3, r3
 80110d8:	9117      	str	r1, [sp, #92]	; 0x5c
 80110da:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80110de:	9311      	str	r3, [sp, #68]	; 0x44
 80110e0:	6803      	ldr	r3, [r0, #0]
 80110e2:	f89d 40b8 	ldrb.w	r4, [sp, #184]	; 0xb8
 80110e6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80110e8:	4798      	blx	r3
 80110ea:	682b      	ldr	r3, [r5, #0]
 80110ec:	9013      	str	r0, [sp, #76]	; 0x4c
 80110ee:	7b1a      	ldrb	r2, [r3, #12]
 80110f0:	7adb      	ldrb	r3, [r3, #11]
 80110f2:	9215      	str	r2, [sp, #84]	; 0x54
 80110f4:	9316      	str	r3, [sp, #88]	; 0x58
 80110f6:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 80110fa:	2c00      	cmp	r4, #0
 80110fc:	d067      	beq.n	80111ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80110fe:	7c2b      	ldrb	r3, [r5, #16]
 8011100:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8011102:	2b06      	cmp	r3, #6
 8011104:	bf14      	ite	ne
 8011106:	2301      	movne	r3, #1
 8011108:	2302      	moveq	r3, #2
 801110a:	4413      	add	r3, r2
 801110c:	f04f 0900 	mov.w	r9, #0
 8011110:	9310      	str	r3, [sp, #64]	; 0x40
 8011112:	464c      	mov	r4, r9
 8011114:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8011118:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
 801111c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801111e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011120:	4293      	cmp	r3, r2
 8011122:	f280 808b 	bge.w	801123c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8011126:	2300      	movs	r3, #0
 8011128:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 801112c:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8011130:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011134:	429c      	cmp	r4, r3
 8011136:	d006      	beq.n	8011146 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 8011138:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801113a:	f242 020b 	movw	r2, #8203	; 0x200b
 801113e:	4294      	cmp	r4, r2
 8011140:	bf18      	it	ne
 8011142:	4623      	movne	r3, r4
 8011144:	930c      	str	r3, [sp, #48]	; 0x30
 8011146:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011148:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801114a:	682a      	ldr	r2, [r5, #0]
 801114c:	428b      	cmp	r3, r1
 801114e:	db40      	blt.n	80111d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8011150:	6813      	ldr	r3, [r2, #0]
 8011152:	4610      	mov	r0, r2
 8011154:	695b      	ldr	r3, [r3, #20]
 8011156:	4798      	blx	r3
 8011158:	4604      	mov	r4, r0
 801115a:	6828      	ldr	r0, [r5, #0]
 801115c:	aa1d      	add	r2, sp, #116	; 0x74
 801115e:	4621      	mov	r1, r4
 8011160:	6803      	ldr	r3, [r0, #0]
 8011162:	689f      	ldr	r7, [r3, #8]
 8011164:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8011168:	47b8      	blx	r7
 801116a:	901c      	str	r0, [sp, #112]	; 0x70
 801116c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011170:	429c      	cmp	r4, r3
 8011172:	f000 80eb 	beq.w	801134c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8011176:	f242 030b 	movw	r3, #8203	; 0x200b
 801117a:	429c      	cmp	r4, r3
 801117c:	f000 80e6 	beq.w	801134c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8011180:	2c00      	cmp	r4, #0
 8011182:	f000 810d 	beq.w	80113a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 8011186:	2c0a      	cmp	r4, #10
 8011188:	d05e      	beq.n	8011248 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801118a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801118c:	b36a      	cbz	r2, 80111ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801118e:	8894      	ldrh	r4, [r2, #4]
 8011190:	f1bb 0f00 	cmp.w	fp, #0
 8011194:	d03a      	beq.n	801120c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8011196:	f892 900d 	ldrb.w	r9, [r2, #13]
 801119a:	f1bb 0f01 	cmp.w	fp, #1
 801119e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80111a2:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80111a6:	f892 900a 	ldrb.w	r9, [r2, #10]
 80111aa:	ea49 0903 	orr.w	r9, r9, r3
 80111ae:	d133      	bne.n	8011218 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 80111b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80111b2:	eba6 0609 	sub.w	r6, r6, r9
 80111b6:	2b00      	cmp	r3, #0
 80111b8:	d14d      	bne.n	8011256 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 80111ba:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80111bc:	eb09 0306 	add.w	r3, r9, r6
 80111c0:	4413      	add	r3, r2
 80111c2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80111c4:	f9b2 2000 	ldrsh.w	r2, [r2]
 80111c8:	4293      	cmp	r3, r2
 80111ca:	da4e      	bge.n	801126a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 80111cc:	e036      	b.n	801123c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 80111ce:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80111d0:	e79c      	b.n	801110c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 80111d2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80111d6:	4659      	mov	r1, fp
 80111d8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80111da:	9301      	str	r3, [sp, #4]
 80111dc:	ab1d      	add	r3, sp, #116	; 0x74
 80111de:	9300      	str	r3, [sp, #0]
 80111e0:	ab1c      	add	r3, sp, #112	; 0x70
 80111e2:	f002 fef2 	bl	8013fca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80111e6:	4604      	mov	r4, r0
 80111e8:	e7c0      	b.n	801116c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80111ea:	6828      	ldr	r0, [r5, #0]
 80111ec:	6803      	ldr	r3, [r0, #0]
 80111ee:	691b      	ldr	r3, [r3, #16]
 80111f0:	4798      	blx	r3
 80111f2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80111f6:	4298      	cmp	r0, r3
 80111f8:	f000 80a8 	beq.w	801134c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80111fc:	f242 030b 	movw	r3, #8203	; 0x200b
 8011200:	4298      	cmp	r0, r3
 8011202:	f000 80a3 	beq.w	801134c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8011206:	f1bb 0f00 	cmp.w	fp, #0
 801120a:	d100      	bne.n	801120e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801120c:	444e      	add	r6, r9
 801120e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8011210:	2a00      	cmp	r2, #0
 8011212:	d1c0      	bne.n	8011196 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8011214:	4691      	mov	r9, r2
 8011216:	e099      	b.n	801134c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8011218:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801121a:	2b00      	cmp	r3, #0
 801121c:	f000 80c2 	beq.w	80113a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
 8011220:	f1bb 0f00 	cmp.w	fp, #0
 8011224:	d117      	bne.n	8011256 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8011226:	6828      	ldr	r0, [r5, #0]
 8011228:	990c      	ldr	r1, [sp, #48]	; 0x30
 801122a:	6803      	ldr	r3, [r0, #0]
 801122c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801122e:	4798      	blx	r3
 8011230:	4406      	add	r6, r0
 8011232:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8011234:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011236:	1af3      	subs	r3, r6, r3
 8011238:	4293      	cmp	r3, r2
 801123a:	dd16      	ble.n	801126a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 801123c:	2c00      	cmp	r4, #0
 801123e:	f000 80af 	beq.w	80113a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 8011242:	2c0a      	cmp	r4, #10
 8011244:	f040 809d 	bne.w	8011382 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 8011248:	240a      	movs	r4, #10
 801124a:	fab4 f084 	clz	r0, r4
 801124e:	0940      	lsrs	r0, r0, #5
 8011250:	b01f      	add	sp, #124	; 0x7c
 8011252:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011256:	6828      	ldr	r0, [r5, #0]
 8011258:	990c      	ldr	r1, [sp, #48]	; 0x30
 801125a:	6803      	ldr	r3, [r0, #0]
 801125c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801125e:	4798      	blx	r3
 8011260:	f1bb 0f01 	cmp.w	fp, #1
 8011264:	eba6 0600 	sub.w	r6, r6, r0
 8011268:	d0a7      	beq.n	80111ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801126a:	981c      	ldr	r0, [sp, #112]	; 0x70
 801126c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801126e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8011272:	f9b3 8000 	ldrsh.w	r8, [r3]
 8011276:	7b43      	ldrb	r3, [r0, #13]
 8011278:	4431      	add	r1, r6
 801127a:	015b      	lsls	r3, r3, #5
 801127c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011280:	7983      	ldrb	r3, [r0, #6]
 8011282:	4313      	orrs	r3, r2
 8011284:	440b      	add	r3, r1
 8011286:	4543      	cmp	r3, r8
 8011288:	db60      	blt.n	801134c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801128a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801128c:	4299      	cmp	r1, r3
 801128e:	da5d      	bge.n	801134c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8011290:	6828      	ldr	r0, [r5, #0]
 8011292:	45b0      	cmp	r8, r6
 8011294:	6803      	ldr	r3, [r0, #0]
 8011296:	bfcc      	ite	gt
 8011298:	eba8 0806 	subgt.w	r8, r8, r6
 801129c:	f04f 0800 	movle.w	r8, #0
 80112a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80112a2:	bfc8      	it	gt
 80112a4:	fa1f f888 	uxthgt.w	r8, r8
 80112a8:	4798      	blx	r3
 80112aa:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80112ac:	7b53      	ldrb	r3, [r2, #13]
 80112ae:	00d9      	lsls	r1, r3, #3
 80112b0:	f401 7780 	and.w	r7, r1, #256	; 0x100
 80112b4:	7a11      	ldrb	r1, [r2, #8]
 80112b6:	4339      	orrs	r1, r7
 80112b8:	065f      	lsls	r7, r3, #25
 80112ba:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80112bc:	bf48      	it	mi
 80112be:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80112c2:	4407      	add	r7, r0
 80112c4:	bf48      	it	mi
 80112c6:	b209      	sxthmi	r1, r1
 80112c8:	1a7f      	subs	r7, r7, r1
 80112ca:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80112cc:	b2bf      	uxth	r7, r7
 80112ce:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80112d2:	fa0f fa87 	sxth.w	sl, r7
 80112d6:	4551      	cmp	r1, sl
 80112d8:	dd3c      	ble.n	8011354 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 80112da:	011b      	lsls	r3, r3, #4
 80112dc:	79d0      	ldrb	r0, [r2, #7]
 80112de:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80112e2:	4303      	orrs	r3, r0
 80112e4:	449a      	add	sl, r3
 80112e6:	4551      	cmp	r1, sl
 80112e8:	dc30      	bgt.n	801134c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80112ea:	1bcf      	subs	r7, r1, r7
 80112ec:	468a      	mov	sl, r1
 80112ee:	b23f      	sxth	r7, r7
 80112f0:	9219      	str	r2, [sp, #100]	; 0x64
 80112f2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80112f4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80112f6:	6828      	ldr	r0, [r5, #0]
 80112f8:	2a00      	cmp	r2, #0
 80112fa:	d12d      	bne.n	8011358 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 80112fc:	9318      	str	r3, [sp, #96]	; 0x60
 80112fe:	b2bf      	uxth	r7, r7
 8011300:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011302:	6819      	ldr	r1, [r3, #0]
 8011304:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
 8011306:	6801      	ldr	r1, [r0, #0]
 8011308:	9314      	str	r3, [sp, #80]	; 0x50
 801130a:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801130c:	4788      	blx	r1
 801130e:	79a9      	ldrb	r1, [r5, #6]
 8011310:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8011312:	910b      	str	r1, [sp, #44]	; 0x2c
 8011314:	7ba9      	ldrb	r1, [r5, #14]
 8011316:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8011318:	910a      	str	r1, [sp, #40]	; 0x28
 801131a:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 801131e:	9109      	str	r1, [sp, #36]	; 0x24
 8011320:	68a9      	ldr	r1, [r5, #8]
 8011322:	9306      	str	r3, [sp, #24]
 8011324:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8011326:	9205      	str	r2, [sp, #20]
 8011328:	9304      	str	r3, [sp, #16]
 801132a:	f8cd a004 	str.w	sl, [sp, #4]
 801132e:	e9cd 8702 	strd	r8, r7, [sp, #8]
 8011332:	44b0      	add	r8, r6
 8011334:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8011336:	fa0f f388 	sxth.w	r3, r8
 801133a:	9300      	str	r3, [sp, #0]
 801133c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801133e:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8011342:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8011344:	681a      	ldr	r2, [r3, #0]
 8011346:	980e      	ldr	r0, [sp, #56]	; 0x38
 8011348:	685b      	ldr	r3, [r3, #4]
 801134a:	47b8      	blx	r7
 801134c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801134e:	3301      	adds	r3, #1
 8011350:	930d      	str	r3, [sp, #52]	; 0x34
 8011352:	e6e3      	b.n	801111c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 8011354:	2700      	movs	r7, #0
 8011356:	e7cb      	b.n	80112f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8011358:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801135a:	f8d2 c008 	ldr.w	ip, [r2, #8]
 801135e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011360:	f8dc 1000 	ldr.w	r1, [ip]
 8011364:	e9cd 6204 	strd	r6, r2, [sp, #16]
 8011368:	79aa      	ldrb	r2, [r5, #6]
 801136a:	9203      	str	r2, [sp, #12]
 801136c:	7baa      	ldrb	r2, [r5, #14]
 801136e:	9202      	str	r2, [sp, #8]
 8011370:	68aa      	ldr	r2, [r5, #8]
 8011372:	e9cd 0200 	strd	r0, r2, [sp]
 8011376:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8011378:	4660      	mov	r0, ip
 801137a:	688f      	ldr	r7, [r1, #8]
 801137c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801137e:	47b8      	blx	r7
 8011380:	e7e4      	b.n	801134c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8011382:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8011384:	3501      	adds	r5, #1
 8011386:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8011388:	429d      	cmp	r5, r3
 801138a:	f6bf af5e 	bge.w	801124a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801138e:	4659      	mov	r1, fp
 8011390:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8011392:	f7fa ff91 	bl	800c2b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011396:	4604      	mov	r4, r0
 8011398:	b110      	cbz	r0, 80113a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 801139a:	280a      	cmp	r0, #10
 801139c:	d1f2      	bne.n	8011384 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
 801139e:	e753      	b.n	8011248 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 80113a0:	2400      	movs	r4, #0
 80113a2:	e752      	b.n	801124a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 80113a4:	f1bb 0f00 	cmp.w	fp, #0
 80113a8:	f43f af43 	beq.w	8011232 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 80113ac:	e75d      	b.n	801126a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

080113ae <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80113ae:	b530      	push	{r4, r5, lr}
 80113b0:	8ac4      	ldrh	r4, [r0, #22]
 80113b2:	8b45      	ldrh	r5, [r0, #26]
 80113b4:	8343      	strh	r3, [r0, #26]
 80113b6:	442c      	add	r4, r5
 80113b8:	1ae4      	subs	r4, r4, r3
 80113ba:	8b83      	ldrh	r3, [r0, #28]
 80113bc:	82c4      	strh	r4, [r0, #22]
 80113be:	8b04      	ldrh	r4, [r0, #24]
 80113c0:	4422      	add	r2, r4
 80113c2:	440c      	add	r4, r1
 80113c4:	1a59      	subs	r1, r3, r1
 80113c6:	83c2      	strh	r2, [r0, #30]
 80113c8:	8304      	strh	r4, [r0, #24]
 80113ca:	8381      	strh	r1, [r0, #28]
 80113cc:	bd30      	pop	{r4, r5, pc}

080113ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 80113ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113d2:	4604      	mov	r4, r0
 80113d4:	8a47      	ldrh	r7, [r0, #18]
 80113d6:	68c0      	ldr	r0, [r0, #12]
 80113d8:	b085      	sub	sp, #20
 80113da:	6803      	ldr	r3, [r0, #0]
 80113dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80113de:	4798      	blx	r3
 80113e0:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80113e4:	7a63      	ldrb	r3, [r4, #9]
 80113e6:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80113ea:	3b01      	subs	r3, #1
 80113ec:	42b7      	cmp	r7, r6
 80113ee:	bfac      	ite	ge
 80113f0:	f04f 0900 	movge.w	r9, #0
 80113f4:	f04f 0901 	movlt.w	r9, #1
 80113f8:	2b05      	cmp	r3, #5
 80113fa:	d804      	bhi.n	8011406 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 80113fc:	e8df f003 	tbb	[pc, r3]
 8011400:	470f0854 	.word	0x470f0854
 8011404:	4c4c      	.short	0x4c4c
 8011406:	2500      	movs	r5, #0
 8011408:	46a9      	mov	r9, r5
 801140a:	462e      	mov	r6, r5
 801140c:	462f      	mov	r7, r5
 801140e:	e00e      	b.n	801142e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8011410:	42b7      	cmp	r7, r6
 8011412:	f04f 0500 	mov.w	r5, #0
 8011416:	bfb4      	ite	lt
 8011418:	2600      	movlt	r6, #0
 801141a:	2601      	movge	r6, #1
 801141c:	e7f6      	b.n	801140c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 801141e:	42b7      	cmp	r7, r6
 8011420:	464d      	mov	r5, r9
 8011422:	f04f 0900 	mov.w	r9, #0
 8011426:	bfb4      	ite	lt
 8011428:	2600      	movlt	r6, #0
 801142a:	2601      	movge	r6, #1
 801142c:	464f      	mov	r7, r9
 801142e:	f04f 0800 	mov.w	r8, #0
 8011432:	f8a4 8016 	strh.w	r8, [r4, #22]
 8011436:	f8a4 8018 	strh.w	r8, [r4, #24]
 801143a:	f8cd 8004 	str.w	r8, [sp, #4]
 801143e:	2300      	movs	r3, #0
 8011440:	9303      	str	r3, [sp, #12]
 8011442:	8823      	ldrh	r3, [r4, #0]
 8011444:	2b20      	cmp	r3, #32
 8011446:	d033      	beq.n	80114b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 8011448:	f242 010b 	movw	r1, #8203	; 0x200b
 801144c:	1a5a      	subs	r2, r3, r1
 801144e:	f1d2 0a00 	rsbs	sl, r2, #0
 8011452:	eb4a 0a02 	adc.w	sl, sl, r2
 8011456:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801145a:	4293      	cmp	r3, r2
 801145c:	d008      	beq.n	8011470 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 801145e:	428b      	cmp	r3, r1
 8011460:	9a01      	ldr	r2, [sp, #4]
 8011462:	bf0e      	itee	eq
 8011464:	f04f 0a01 	moveq.w	sl, #1
 8011468:	461a      	movne	r2, r3
 801146a:	f04f 0a00 	movne.w	sl, #0
 801146e:	9201      	str	r2, [sp, #4]
 8011470:	ab03      	add	r3, sp, #12
 8011472:	68e2      	ldr	r2, [r4, #12]
 8011474:	7a21      	ldrb	r1, [r4, #8]
 8011476:	6860      	ldr	r0, [r4, #4]
 8011478:	f002 fd5e 	bl	8013f38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801147c:	8020      	strh	r0, [r4, #0]
 801147e:	b9d8      	cbnz	r0, 80114b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 8011480:	8ba2      	ldrh	r2, [r4, #28]
 8011482:	2300      	movs	r3, #0
 8011484:	4611      	mov	r1, r2
 8011486:	4620      	mov	r0, r4
 8011488:	f7ff ff91 	bl	80113ae <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801148c:	e06e      	b.n	801156c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 801148e:	2500      	movs	r5, #0
 8011490:	2701      	movs	r7, #1
 8011492:	46a9      	mov	r9, r5
 8011494:	462e      	mov	r6, r5
 8011496:	e7ca      	b.n	801142e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8011498:	42b7      	cmp	r7, r6
 801149a:	f04f 0500 	mov.w	r5, #0
 801149e:	bfb4      	ite	lt
 80114a0:	2700      	movlt	r7, #0
 80114a2:	2701      	movge	r7, #1
 80114a4:	462e      	mov	r6, r5
 80114a6:	e7c2      	b.n	801142e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80114a8:	2500      	movs	r5, #0
 80114aa:	2601      	movs	r6, #1
 80114ac:	46a9      	mov	r9, r5
 80114ae:	e7ad      	b.n	801140c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 80114b0:	9301      	str	r3, [sp, #4]
 80114b2:	f04f 0a01 	mov.w	sl, #1
 80114b6:	e7db      	b.n	8011470 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 80114b8:	8b63      	ldrh	r3, [r4, #26]
 80114ba:	280a      	cmp	r0, #10
 80114bc:	f103 0301 	add.w	r3, r3, #1
 80114c0:	8363      	strh	r3, [r4, #26]
 80114c2:	d0dd      	beq.n	8011480 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 80114c4:	9a03      	ldr	r2, [sp, #12]
 80114c6:	bb62      	cbnz	r2, 8011522 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 80114c8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80114cc:	4298      	cmp	r0, r3
 80114ce:	d003      	beq.n	80114d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 80114d0:	f242 030b 	movw	r3, #8203	; 0x200b
 80114d4:	4298      	cmp	r0, r3
 80114d6:	d1b2      	bne.n	801143e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80114d8:	8823      	ldrh	r3, [r4, #0]
 80114da:	8ba1      	ldrh	r1, [r4, #28]
 80114dc:	2b20      	cmp	r3, #32
 80114de:	d003      	beq.n	80114e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 80114e0:	f242 000b 	movw	r0, #8203	; 0x200b
 80114e4:	4283      	cmp	r3, r0
 80114e6:	d131      	bne.n	801154c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 80114e8:	f1ba 0f00 	cmp.w	sl, #0
 80114ec:	bf0a      	itet	eq
 80114ee:	4688      	moveq	r8, r1
 80114f0:	4650      	movne	r0, sl
 80114f2:	2001      	moveq	r0, #1
 80114f4:	440a      	add	r2, r1
 80114f6:	8b23      	ldrh	r3, [r4, #24]
 80114f8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80114fc:	b292      	uxth	r2, r2
 80114fe:	83a2      	strh	r2, [r4, #28]
 8011500:	4413      	add	r3, r2
 8011502:	f1b9 0f00 	cmp.w	r9, #0
 8011506:	d102      	bne.n	801150e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 8011508:	2d00      	cmp	r5, #0
 801150a:	d042      	beq.n	8011592 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 801150c:	b300      	cbz	r0, 8011550 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 801150e:	8c21      	ldrh	r1, [r4, #32]
 8011510:	4419      	add	r1, r3
 8011512:	458c      	cmp	ip, r1
 8011514:	da37      	bge.n	8011586 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 8011516:	8ae1      	ldrh	r1, [r4, #22]
 8011518:	2900      	cmp	r1, #0
 801151a:	d034      	beq.n	8011586 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 801151c:	4563      	cmp	r3, ip
 801151e:	dd8e      	ble.n	801143e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011520:	e01d      	b.n	801155e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 8011522:	8893      	ldrh	r3, [r2, #4]
 8011524:	9901      	ldr	r1, [sp, #4]
 8011526:	8023      	strh	r3, [r4, #0]
 8011528:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801152c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8011530:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8011534:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8011538:	ea4b 0b00 	orr.w	fp, fp, r0
 801153c:	68e0      	ldr	r0, [r4, #12]
 801153e:	6803      	ldr	r3, [r0, #0]
 8011540:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011542:	4798      	blx	r3
 8011544:	eb0b 0200 	add.w	r2, fp, r0
 8011548:	b292      	uxth	r2, r2
 801154a:	e7c5      	b.n	80114d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 801154c:	2000      	movs	r0, #0
 801154e:	e7d1      	b.n	80114f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 8011550:	4563      	cmp	r3, ip
 8011552:	f77f af74 	ble.w	801143e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011556:	8ae3      	ldrh	r3, [r4, #22]
 8011558:	2b00      	cmp	r3, #0
 801155a:	f43f af70 	beq.w	801143e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801155e:	2301      	movs	r3, #1
 8011560:	8c22      	ldrh	r2, [r4, #32]
 8011562:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8011566:	8be3      	ldrh	r3, [r4, #30]
 8011568:	4413      	add	r3, r2
 801156a:	83e3      	strh	r3, [r4, #30]
 801156c:	68e0      	ldr	r0, [r4, #12]
 801156e:	6803      	ldr	r3, [r0, #0]
 8011570:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011572:	4798      	blx	r3
 8011574:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8011578:	4418      	add	r0, r3
 801157a:	8a63      	ldrh	r3, [r4, #18]
 801157c:	1a18      	subs	r0, r3, r0
 801157e:	8260      	strh	r0, [r4, #18]
 8011580:	b005      	add	sp, #20
 8011582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011586:	2300      	movs	r3, #0
 8011588:	4611      	mov	r1, r2
 801158a:	4620      	mov	r0, r4
 801158c:	f7ff ff0f 	bl	80113ae <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8011590:	e755      	b.n	801143e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011592:	4563      	cmp	r3, ip
 8011594:	dd14      	ble.n	80115c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 8011596:	b117      	cbz	r7, 801159e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 8011598:	2301      	movs	r3, #1
 801159a:	460a      	mov	r2, r1
 801159c:	e772      	b.n	8011484 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 801159e:	2e00      	cmp	r6, #0
 80115a0:	f43f af4d 	beq.w	801143e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80115a4:	2800      	cmp	r0, #0
 80115a6:	f47f af4a 	bne.w	801143e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80115aa:	f1ba 0f00 	cmp.w	sl, #0
 80115ae:	d002      	beq.n	80115b6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 80115b0:	2301      	movs	r3, #1
 80115b2:	4642      	mov	r2, r8
 80115b4:	e767      	b.n	8011486 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80115b6:	8ae3      	ldrh	r3, [r4, #22]
 80115b8:	2b00      	cmp	r3, #0
 80115ba:	f43f af40 	beq.w	801143e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80115be:	e7d5      	b.n	801156c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 80115c0:	2800      	cmp	r0, #0
 80115c2:	f47f af3c 	bne.w	801143e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80115c6:	f1ba 0f00 	cmp.w	sl, #0
 80115ca:	f43f af38 	beq.w	801143e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80115ce:	2301      	movs	r3, #1
 80115d0:	4642      	mov	r2, r8
 80115d2:	e7da      	b.n	801158a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

080115d4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80115d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80115d6:	4605      	mov	r5, r0
 80115d8:	b08f      	sub	sp, #60	; 0x3c
 80115da:	4617      	mov	r7, r2
 80115dc:	461c      	mov	r4, r3
 80115de:	460e      	mov	r6, r1
 80115e0:	b1d1      	cbz	r1, 8011618 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80115e2:	681b      	ldr	r3, [r3, #0]
 80115e4:	4620      	mov	r0, r4
 80115e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80115e8:	4798      	blx	r3
 80115ea:	4240      	negs	r0, r0
 80115ec:	9603      	str	r6, [sp, #12]
 80115ee:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80115f2:	b200      	sxth	r0, r0
 80115f4:	9700      	str	r7, [sp, #0]
 80115f6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80115fa:	4629      	mov	r1, r5
 80115fc:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8011600:	2401      	movs	r4, #1
 8011602:	a805      	add	r0, sp, #20
 8011604:	f7ff fcaa 	bl	8010f5c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8011608:	a805      	add	r0, sp, #20
 801160a:	f7ff fee0 	bl	80113ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801160e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8011612:	b163      	cbz	r3, 801162e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8011614:	3401      	adds	r4, #1
 8011616:	e7f7      	b.n	8011608 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8011618:	2401      	movs	r4, #1
 801161a:	f002 fd59 	bl	80140d0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801161e:	280a      	cmp	r0, #10
 8011620:	4628      	mov	r0, r5
 8011622:	bf08      	it	eq
 8011624:	3401      	addeq	r4, #1
 8011626:	f002 fd53 	bl	80140d0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801162a:	2800      	cmp	r0, #0
 801162c:	d1f7      	bne.n	801161e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801162e:	b2a0      	uxth	r0, r4
 8011630:	b00f      	add	sp, #60	; 0x3c
 8011632:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011634 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8011634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011638:	b0e3      	sub	sp, #396	; 0x18c
 801163a:	461c      	mov	r4, r3
 801163c:	4683      	mov	fp, r0
 801163e:	4688      	mov	r8, r1
 8011640:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8011642:	2b00      	cmp	r3, #0
 8011644:	f000 8112 	beq.w	801186c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011648:	6823      	ldr	r3, [r4, #0]
 801164a:	2b00      	cmp	r3, #0
 801164c:	f000 810e 	beq.w	801186c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011650:	7ba3      	ldrb	r3, [r4, #14]
 8011652:	2b00      	cmp	r3, #0
 8011654:	f000 810a 	beq.w	801186c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011658:	ad0a      	add	r5, sp, #40	; 0x28
 801165a:	6810      	ldr	r0, [r2, #0]
 801165c:	6851      	ldr	r1, [r2, #4]
 801165e:	462b      	mov	r3, r5
 8011660:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8011664:	c303      	stmia	r3!, {r0, r1}
 8011666:	2100      	movs	r1, #0
 8011668:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801166c:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011670:	4628      	mov	r0, r5
 8011672:	910c      	str	r1, [sp, #48]	; 0x30
 8011674:	a90c      	add	r1, sp, #48	; 0x30
 8011676:	79a2      	ldrb	r2, [r4, #6]
 8011678:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801167c:	f7ff fced 	bl	801105a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8011680:	a90c      	add	r1, sp, #48	; 0x30
 8011682:	79a2      	ldrb	r2, [r4, #6]
 8011684:	4608      	mov	r0, r1
 8011686:	f7ff fce8 	bl	801105a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801168a:	a817      	add	r0, sp, #92	; 0x5c
 801168c:	f002 f8f4 	bl	8013878 <_ZN8touchgfx12TextProviderC1Ev>
 8011690:	6820      	ldr	r0, [r4, #0]
 8011692:	6803      	ldr	r3, [r0, #0]
 8011694:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011696:	4798      	blx	r3
 8011698:	4606      	mov	r6, r0
 801169a:	6820      	ldr	r0, [r4, #0]
 801169c:	6803      	ldr	r3, [r0, #0]
 801169e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80116a0:	4798      	blx	r3
 80116a2:	4633      	mov	r3, r6
 80116a4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80116a6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80116a8:	9000      	str	r0, [sp, #0]
 80116aa:	a817      	add	r0, sp, #92	; 0x5c
 80116ac:	f002 f93f 	bl	801392e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80116b0:	6820      	ldr	r0, [r4, #0]
 80116b2:	f894 a004 	ldrb.w	sl, [r4, #4]
 80116b6:	6803      	ldr	r3, [r0, #0]
 80116b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80116ba:	4798      	blx	r3
 80116bc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80116c0:	6823      	ldr	r3, [r4, #0]
 80116c2:	4607      	mov	r7, r0
 80116c4:	4406      	add	r6, r0
 80116c6:	a830      	add	r0, sp, #192	; 0xc0
 80116c8:	f893 9009 	ldrb.w	r9, [r3, #9]
 80116cc:	f002 f8d4 	bl	8013878 <_ZN8touchgfx12TextProviderC1Ev>
 80116d0:	7c23      	ldrb	r3, [r4, #16]
 80116d2:	b17b      	cbz	r3, 80116f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80116d4:	6820      	ldr	r0, [r4, #0]
 80116d6:	6803      	ldr	r3, [r0, #0]
 80116d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80116da:	4798      	blx	r3
 80116dc:	9009      	str	r0, [sp, #36]	; 0x24
 80116de:	6820      	ldr	r0, [r4, #0]
 80116e0:	6802      	ldr	r2, [r0, #0]
 80116e2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80116e4:	4790      	blx	r2
 80116e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80116e8:	9000      	str	r0, [sp, #0]
 80116ea:	a830      	add	r0, sp, #192	; 0xc0
 80116ec:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80116ee:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80116f0:	f002 f91d 	bl	801392e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80116f4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80116f8:	a80e      	add	r0, sp, #56	; 0x38
 80116fa:	7be2      	ldrb	r2, [r4, #15]
 80116fc:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8011700:	1a8a      	subs	r2, r1, r2
 8011702:	7c21      	ldrb	r1, [r4, #16]
 8011704:	9103      	str	r1, [sp, #12]
 8011706:	b292      	uxth	r2, r2
 8011708:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 801170c:	9102      	str	r1, [sp, #8]
 801170e:	6821      	ldr	r1, [r4, #0]
 8011710:	9101      	str	r1, [sp, #4]
 8011712:	7961      	ldrb	r1, [r4, #5]
 8011714:	9100      	str	r1, [sp, #0]
 8011716:	a930      	add	r1, sp, #192	; 0xc0
 8011718:	f7ff fc20 	bl	8010f5c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801171c:	2e00      	cmp	r6, #0
 801171e:	dc5b      	bgt.n	80117d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8011720:	af17      	add	r7, sp, #92	; 0x5c
 8011722:	f04f 0900 	mov.w	r9, #0
 8011726:	7c23      	ldrb	r3, [r4, #16]
 8011728:	2b00      	cmp	r3, #0
 801172a:	f000 80b1 	beq.w	8011890 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801172e:	a80e      	add	r0, sp, #56	; 0x38
 8011730:	f7ff fe4d 	bl	80113ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011734:	f1ba 0f00 	cmp.w	sl, #0
 8011738:	f000 80a5 	beq.w	8011886 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801173c:	7c23      	ldrb	r3, [r4, #16]
 801173e:	2264      	movs	r2, #100	; 0x64
 8011740:	4639      	mov	r1, r7
 8011742:	a849      	add	r0, sp, #292	; 0x124
 8011744:	9309      	str	r3, [sp, #36]	; 0x24
 8011746:	f012 f8cc 	bl	80238e2 <memcpy>
 801174a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801174c:	2b00      	cmp	r3, #0
 801174e:	f000 80a7 	beq.w	80118a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8011752:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8011756:	7922      	ldrb	r2, [r4, #4]
 8011758:	2a01      	cmp	r2, #1
 801175a:	f040 808a 	bne.w	8011872 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801175e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8011762:	1ac0      	subs	r0, r0, r3
 8011764:	2302      	movs	r3, #2
 8011766:	fb90 f0f3 	sdiv	r0, r0, r3
 801176a:	b200      	sxth	r0, r0
 801176c:	7c23      	ldrb	r3, [r4, #16]
 801176e:	2b00      	cmp	r3, #0
 8011770:	f000 808b 	beq.w	801188a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8011774:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8011778:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801177c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8011780:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8011784:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8011788:	2100      	movs	r1, #0
 801178a:	4410      	add	r0, r2
 801178c:	4642      	mov	r2, r8
 801178e:	b200      	sxth	r0, r0
 8011790:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8011794:	9000      	str	r0, [sp, #0]
 8011796:	4658      	mov	r0, fp
 8011798:	e9cd 5401 	strd	r5, r4, [sp, #4]
 801179c:	f7ff fc8e 	bl	80110bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80117a0:	2800      	cmp	r0, #0
 80117a2:	d163      	bne.n	801186c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80117a4:	b2b2      	uxth	r2, r6
 80117a6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80117aa:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80117ae:	4413      	add	r3, r2
 80117b0:	1a8a      	subs	r2, r1, r2
 80117b2:	b21b      	sxth	r3, r3
 80117b4:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 80117b8:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 80117bc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80117c0:	2a00      	cmp	r2, #0
 80117c2:	d153      	bne.n	801186c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80117c4:	6822      	ldr	r2, [r4, #0]
 80117c6:	8869      	ldrh	r1, [r5, #2]
 80117c8:	7a12      	ldrb	r2, [r2, #8]
 80117ca:	1a9b      	subs	r3, r3, r2
 80117cc:	88ea      	ldrh	r2, [r5, #6]
 80117ce:	440a      	add	r2, r1
 80117d0:	b212      	sxth	r2, r2
 80117d2:	4293      	cmp	r3, r2
 80117d4:	dda7      	ble.n	8011726 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80117d6:	e049      	b.n	801186c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80117d8:	7c23      	ldrb	r3, [r4, #16]
 80117da:	444f      	add	r7, r9
 80117dc:	b1c3      	cbz	r3, 8011810 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80117de:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80117e2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80117e6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80117ea:	443b      	add	r3, r7
 80117ec:	4293      	cmp	r3, r2
 80117ee:	da97      	bge.n	8011720 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80117f0:	a80e      	add	r0, sp, #56	; 0x38
 80117f2:	f7ff fdec 	bl	80113ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80117f6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 80117fa:	3b01      	subs	r3, #1
 80117fc:	b29b      	uxth	r3, r3
 80117fe:	454b      	cmp	r3, r9
 8011800:	9309      	str	r3, [sp, #36]	; 0x24
 8011802:	d021      	beq.n	8011848 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8011804:	7961      	ldrb	r1, [r4, #5]
 8011806:	a817      	add	r0, sp, #92	; 0x5c
 8011808:	f7fa fd56 	bl	800c2b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801180c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801180e:	e7f4      	b.n	80117fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8011810:	fa1f f986 	uxth.w	r9, r6
 8011814:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8011818:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801181c:	443b      	add	r3, r7
 801181e:	4293      	cmp	r3, r2
 8011820:	f6bf af7e 	bge.w	8011720 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8011824:	a817      	add	r0, sp, #92	; 0x5c
 8011826:	f002 fc53 	bl	80140d0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801182a:	b1f8      	cbz	r0, 801186c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801182c:	280a      	cmp	r0, #10
 801182e:	d1f1      	bne.n	8011814 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8011830:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8011834:	444b      	add	r3, r9
 8011836:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801183a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801183e:	eba3 0309 	sub.w	r3, r3, r9
 8011842:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011846:	e7e5      	b.n	8011814 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8011848:	b2b3      	uxth	r3, r6
 801184a:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801184e:	441a      	add	r2, r3
 8011850:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8011854:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8011858:	1ad3      	subs	r3, r2, r3
 801185a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801185e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011862:	b11b      	cbz	r3, 801186c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011864:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8011868:	2b00      	cmp	r3, #0
 801186a:	d0ba      	beq.n	80117e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801186c:	b063      	add	sp, #396	; 0x18c
 801186e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011872:	2a02      	cmp	r2, #2
 8011874:	d105      	bne.n	8011882 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8011876:	7be2      	ldrb	r2, [r4, #15]
 8011878:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801187c:	1a80      	subs	r0, r0, r2
 801187e:	1ac0      	subs	r0, r0, r3
 8011880:	e773      	b.n	801176a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8011882:	2000      	movs	r0, #0
 8011884:	e772      	b.n	801176c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8011886:	7be0      	ldrb	r0, [r4, #15]
 8011888:	e770      	b.n	801176c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801188a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801188e:	e773      	b.n	8011778 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8011890:	f1ba 0f00 	cmp.w	sl, #0
 8011894:	d0f7      	beq.n	8011886 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8011896:	2264      	movs	r2, #100	; 0x64
 8011898:	4639      	mov	r1, r7
 801189a:	a849      	add	r0, sp, #292	; 0x124
 801189c:	f012 f821 	bl	80238e2 <memcpy>
 80118a0:	2300      	movs	r3, #0
 80118a2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80118a6:	6821      	ldr	r1, [r4, #0]
 80118a8:	a849      	add	r0, sp, #292	; 0x124
 80118aa:	f7ff fb9a 	bl	8010fe2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80118ae:	b203      	sxth	r3, r0
 80118b0:	e751      	b.n	8011756 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080118b2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80118b2:	2b03      	cmp	r3, #3
 80118b4:	d818      	bhi.n	80118e8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80118b6:	e8df f003 	tbb	[pc, r3]
 80118ba:	0602      	.short	0x0602
 80118bc:	130d      	.short	0x130d
 80118be:	f9b0 2000 	ldrsh.w	r2, [r0]
 80118c2:	1850      	adds	r0, r2, r1
 80118c4:	4770      	bx	lr
 80118c6:	8803      	ldrh	r3, [r0, #0]
 80118c8:	8880      	ldrh	r0, [r0, #4]
 80118ca:	4418      	add	r0, r3
 80118cc:	b200      	sxth	r0, r0
 80118ce:	1a80      	subs	r0, r0, r2
 80118d0:	3801      	subs	r0, #1
 80118d2:	4770      	bx	lr
 80118d4:	8803      	ldrh	r3, [r0, #0]
 80118d6:	8880      	ldrh	r0, [r0, #4]
 80118d8:	4418      	add	r0, r3
 80118da:	b200      	sxth	r0, r0
 80118dc:	1a40      	subs	r0, r0, r1
 80118de:	e7f7      	b.n	80118d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80118e0:	f9b0 0000 	ldrsh.w	r0, [r0]
 80118e4:	4410      	add	r0, r2
 80118e6:	4770      	bx	lr
 80118e8:	2000      	movs	r0, #0
 80118ea:	4770      	bx	lr

080118ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80118ec:	2b03      	cmp	r3, #3
 80118ee:	d817      	bhi.n	8011920 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80118f0:	e8df f003 	tbb	[pc, r3]
 80118f4:	10090602 	.word	0x10090602
 80118f8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80118fc:	1850      	adds	r0, r2, r1
 80118fe:	4770      	bx	lr
 8011900:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011904:	e7fa      	b.n	80118fc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8011906:	8843      	ldrh	r3, [r0, #2]
 8011908:	88c0      	ldrh	r0, [r0, #6]
 801190a:	4418      	add	r0, r3
 801190c:	b200      	sxth	r0, r0
 801190e:	1a80      	subs	r0, r0, r2
 8011910:	3801      	subs	r0, #1
 8011912:	4770      	bx	lr
 8011914:	8843      	ldrh	r3, [r0, #2]
 8011916:	88c0      	ldrh	r0, [r0, #6]
 8011918:	4418      	add	r0, r3
 801191a:	b200      	sxth	r0, r0
 801191c:	1a40      	subs	r0, r0, r1
 801191e:	e7f7      	b.n	8011910 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8011920:	2000      	movs	r0, #0
 8011922:	4770      	bx	lr

08011924 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8011924:	4b01      	ldr	r3, [pc, #4]	; (801192c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8011926:	2200      	movs	r2, #0
 8011928:	601a      	str	r2, [r3, #0]
 801192a:	4770      	bx	lr
 801192c:	20032434 	.word	0x20032434

08011930 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8011930:	4603      	mov	r3, r0
 8011932:	b1c8      	cbz	r0, 8011968 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8011934:	0c02      	lsrs	r2, r0, #16
 8011936:	0412      	lsls	r2, r2, #16
 8011938:	b9a2      	cbnz	r2, 8011964 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801193a:	0403      	lsls	r3, r0, #16
 801193c:	2010      	movs	r0, #16
 801193e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8011942:	bf04      	itt	eq
 8011944:	021b      	lsleq	r3, r3, #8
 8011946:	3008      	addeq	r0, #8
 8011948:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801194c:	bf04      	itt	eq
 801194e:	011b      	lsleq	r3, r3, #4
 8011950:	3004      	addeq	r0, #4
 8011952:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8011956:	bf04      	itt	eq
 8011958:	009b      	lsleq	r3, r3, #2
 801195a:	3002      	addeq	r0, #2
 801195c:	2b00      	cmp	r3, #0
 801195e:	db04      	blt.n	801196a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8011960:	3001      	adds	r0, #1
 8011962:	4770      	bx	lr
 8011964:	2000      	movs	r0, #0
 8011966:	e7ea      	b.n	801193e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8011968:	2020      	movs	r0, #32
 801196a:	4770      	bx	lr

0801196c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801196c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011970:	b087      	sub	sp, #28
 8011972:	460d      	mov	r5, r1
 8011974:	4616      	mov	r6, r2
 8011976:	4698      	mov	r8, r3
 8011978:	4601      	mov	r1, r0
 801197a:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801197e:	b120      	cbz	r0, 801198a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8011980:	b11a      	cbz	r2, 801198a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8011982:	2d1f      	cmp	r5, #31
 8011984:	d801      	bhi.n	801198a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8011986:	2b1f      	cmp	r3, #31
 8011988:	d904      	bls.n	8011994 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801198a:	2000      	movs	r0, #0
 801198c:	6038      	str	r0, [r7, #0]
 801198e:	b007      	add	sp, #28
 8011990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011994:	b97d      	cbnz	r5, 80119b6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8011996:	b143      	cbz	r3, 80119aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8011998:	4602      	mov	r2, r0
 801199a:	462b      	mov	r3, r5
 801199c:	4641      	mov	r1, r8
 801199e:	4630      	mov	r0, r6
 80119a0:	e9cd 4700 	strd	r4, r7, [sp]
 80119a4:	f7ff ffe2 	bl	801196c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80119a8:	e7f1      	b.n	801198e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80119aa:	f04f 33ff 	mov.w	r3, #4294967295
 80119ae:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80119b2:	603b      	str	r3, [r7, #0]
 80119b4:	e7eb      	b.n	801198e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80119b6:	fa32 fa05 	lsrs.w	sl, r2, r5
 80119ba:	d106      	bne.n	80119ca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80119bc:	4346      	muls	r6, r0
 80119be:	fbb6 f0f4 	udiv	r0, r6, r4
 80119c2:	fb04 6610 	mls	r6, r4, r0, r6
 80119c6:	603e      	str	r6, [r7, #0]
 80119c8:	e7e1      	b.n	801198e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80119ca:	2201      	movs	r2, #1
 80119cc:	fa00 fb05 	lsl.w	fp, r0, r5
 80119d0:	40aa      	lsls	r2, r5
 80119d2:	fbbb f9f4 	udiv	r9, fp, r4
 80119d6:	3a01      	subs	r2, #1
 80119d8:	fb0a f309 	mul.w	r3, sl, r9
 80119dc:	fb04 b919 	mls	r9, r4, r9, fp
 80119e0:	4016      	ands	r6, r2
 80119e2:	9303      	str	r3, [sp, #12]
 80119e4:	4630      	mov	r0, r6
 80119e6:	f7ff ffa3 	bl	8011930 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80119ea:	462b      	mov	r3, r5
 80119ec:	460a      	mov	r2, r1
 80119ee:	4601      	mov	r1, r0
 80119f0:	4630      	mov	r0, r6
 80119f2:	e9cd 4700 	strd	r4, r7, [sp]
 80119f6:	f7ff ffb9 	bl	801196c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80119fa:	4606      	mov	r6, r0
 80119fc:	4648      	mov	r0, r9
 80119fe:	eb05 0108 	add.w	r1, r5, r8
 8011a02:	f7ff ff95 	bl	8011930 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011a06:	ab05      	add	r3, sp, #20
 8011a08:	464a      	mov	r2, r9
 8011a0a:	e9cd 4300 	strd	r4, r3, [sp]
 8011a0e:	4603      	mov	r3, r0
 8011a10:	4650      	mov	r0, sl
 8011a12:	f7ff ffab 	bl	801196c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011a16:	6839      	ldr	r1, [r7, #0]
 8011a18:	9a05      	ldr	r2, [sp, #20]
 8011a1a:	9b03      	ldr	r3, [sp, #12]
 8011a1c:	4411      	add	r1, r2
 8011a1e:	fbb1 f2f4 	udiv	r2, r1, r4
 8011a22:	18d3      	adds	r3, r2, r3
 8011a24:	fb04 1412 	mls	r4, r4, r2, r1
 8011a28:	441e      	add	r6, r3
 8011a2a:	603c      	str	r4, [r7, #0]
 8011a2c:	4430      	add	r0, r6
 8011a2e:	e7ae      	b.n	801198e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08011a30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8011a30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011a34:	b085      	sub	sp, #20
 8011a36:	f1b0 0900 	subs.w	r9, r0, #0
 8011a3a:	461d      	mov	r5, r3
 8011a3c:	4617      	mov	r7, r2
 8011a3e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8011a40:	bfbb      	ittet	lt
 8011a42:	f1c9 0900 	rsblt	r9, r9, #0
 8011a46:	f04f 36ff 	movlt.w	r6, #4294967295
 8011a4a:	2601      	movge	r6, #1
 8011a4c:	6823      	ldrlt	r3, [r4, #0]
 8011a4e:	bfbc      	itt	lt
 8011a50:	425b      	neglt	r3, r3
 8011a52:	6023      	strlt	r3, [r4, #0]
 8011a54:	2a00      	cmp	r2, #0
 8011a56:	da04      	bge.n	8011a62 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8011a58:	6823      	ldr	r3, [r4, #0]
 8011a5a:	4257      	negs	r7, r2
 8011a5c:	4276      	negs	r6, r6
 8011a5e:	425b      	negs	r3, r3
 8011a60:	6023      	str	r3, [r4, #0]
 8011a62:	2d00      	cmp	r5, #0
 8011a64:	4638      	mov	r0, r7
 8011a66:	bfba      	itte	lt
 8011a68:	426d      	neglt	r5, r5
 8011a6a:	f04f 38ff 	movlt.w	r8, #4294967295
 8011a6e:	f04f 0801 	movge.w	r8, #1
 8011a72:	f7ff ff5d 	bl	8011930 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011a76:	ab03      	add	r3, sp, #12
 8011a78:	463a      	mov	r2, r7
 8011a7a:	e9cd 5300 	strd	r5, r3, [sp]
 8011a7e:	4603      	mov	r3, r0
 8011a80:	4648      	mov	r0, r9
 8011a82:	f7ff ff73 	bl	801196c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011a86:	6823      	ldr	r3, [r4, #0]
 8011a88:	9a03      	ldr	r2, [sp, #12]
 8011a8a:	4546      	cmp	r6, r8
 8011a8c:	441a      	add	r2, r3
 8011a8e:	fb92 f3f5 	sdiv	r3, r2, r5
 8011a92:	4418      	add	r0, r3
 8011a94:	fb05 2313 	mls	r3, r5, r3, r2
 8011a98:	bf18      	it	ne
 8011a9a:	4240      	negne	r0, r0
 8011a9c:	1c72      	adds	r2, r6, #1
 8011a9e:	6023      	str	r3, [r4, #0]
 8011aa0:	d105      	bne.n	8011aae <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8011aa2:	2b00      	cmp	r3, #0
 8011aa4:	f1c3 0200 	rsb	r2, r3, #0
 8011aa8:	db0b      	blt.n	8011ac2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8011aaa:	6022      	str	r2, [r4, #0]
 8011aac:	e006      	b.n	8011abc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011aae:	2e01      	cmp	r6, #1
 8011ab0:	d104      	bne.n	8011abc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011ab2:	2b00      	cmp	r3, #0
 8011ab4:	da02      	bge.n	8011abc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011ab6:	442b      	add	r3, r5
 8011ab8:	3801      	subs	r0, #1
 8011aba:	6023      	str	r3, [r4, #0]
 8011abc:	b005      	add	sp, #20
 8011abe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011ac2:	3801      	subs	r0, #1
 8011ac4:	1b52      	subs	r2, r2, r5
 8011ac6:	e7f0      	b.n	8011aaa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08011ac8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8011ac8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8011acc:	4c1c      	ldr	r4, [pc, #112]	; (8011b40 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8011ace:	4605      	mov	r5, r0
 8011ad0:	6807      	ldr	r7, [r0, #0]
 8011ad2:	69a3      	ldr	r3, [r4, #24]
 8011ad4:	b92b      	cbnz	r3, 8011ae2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8011ad6:	6840      	ldr	r0, [r0, #4]
 8011ad8:	e9c5 7000 	strd	r7, r0, [r5]
 8011adc:	b004      	add	sp, #16
 8011ade:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011ae2:	f04f 0802 	mov.w	r8, #2
 8011ae6:	68a2      	ldr	r2, [r4, #8]
 8011ae8:	ae04      	add	r6, sp, #16
 8011aea:	6820      	ldr	r0, [r4, #0]
 8011aec:	fb93 f1f8 	sdiv	r1, r3, r8
 8011af0:	440a      	add	r2, r1
 8011af2:	69e1      	ldr	r1, [r4, #28]
 8011af4:	f846 2d04 	str.w	r2, [r6, #-4]!
 8011af8:	463a      	mov	r2, r7
 8011afa:	9600      	str	r6, [sp, #0]
 8011afc:	f7ff ff98 	bl	8011a30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011b00:	69a3      	ldr	r3, [r4, #24]
 8011b02:	4607      	mov	r7, r0
 8011b04:	686a      	ldr	r2, [r5, #4]
 8011b06:	6a21      	ldr	r1, [r4, #32]
 8011b08:	9600      	str	r6, [sp, #0]
 8011b0a:	6860      	ldr	r0, [r4, #4]
 8011b0c:	f7ff ff90 	bl	8011a30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011b10:	69a3      	ldr	r3, [r4, #24]
 8011b12:	6962      	ldr	r2, [r4, #20]
 8011b14:	4407      	add	r7, r0
 8011b16:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8011b18:	9600      	str	r6, [sp, #0]
 8011b1a:	68e0      	ldr	r0, [r4, #12]
 8011b1c:	fb93 f8f8 	sdiv	r8, r3, r8
 8011b20:	4442      	add	r2, r8
 8011b22:	9203      	str	r2, [sp, #12]
 8011b24:	682a      	ldr	r2, [r5, #0]
 8011b26:	f7ff ff83 	bl	8011a30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011b2a:	4680      	mov	r8, r0
 8011b2c:	9600      	str	r6, [sp, #0]
 8011b2e:	69a3      	ldr	r3, [r4, #24]
 8011b30:	686a      	ldr	r2, [r5, #4]
 8011b32:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8011b34:	6920      	ldr	r0, [r4, #16]
 8011b36:	f7ff ff7b 	bl	8011a30 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011b3a:	4440      	add	r0, r8
 8011b3c:	e7cc      	b.n	8011ad8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8011b3e:	bf00      	nop
 8011b40:	20032438 	.word	0x20032438

08011b44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8011b44:	4b07      	ldr	r3, [pc, #28]	; (8011b64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8011b46:	781b      	ldrb	r3, [r3, #0]
 8011b48:	2b01      	cmp	r3, #1
 8011b4a:	d109      	bne.n	8011b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8011b4c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8011b50:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011b54:	8003      	strh	r3, [r0, #0]
 8011b56:	4b04      	ldr	r3, [pc, #16]	; (8011b68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8011b58:	881b      	ldrh	r3, [r3, #0]
 8011b5a:	3b01      	subs	r3, #1
 8011b5c:	1a9b      	subs	r3, r3, r2
 8011b5e:	800b      	strh	r3, [r1, #0]
 8011b60:	4770      	bx	lr
 8011b62:	bf00      	nop
 8011b64:	20032424 	.word	0x20032424
 8011b68:	20032420 	.word	0x20032420

08011b6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8011b6c:	4b07      	ldr	r3, [pc, #28]	; (8011b8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8011b6e:	b510      	push	{r4, lr}
 8011b70:	781b      	ldrb	r3, [r3, #0]
 8011b72:	2b01      	cmp	r3, #1
 8011b74:	d108      	bne.n	8011b88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8011b76:	4b06      	ldr	r3, [pc, #24]	; (8011b90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8011b78:	880c      	ldrh	r4, [r1, #0]
 8011b7a:	881b      	ldrh	r3, [r3, #0]
 8011b7c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011b80:	3b01      	subs	r3, #1
 8011b82:	1b1b      	subs	r3, r3, r4
 8011b84:	8003      	strh	r3, [r0, #0]
 8011b86:	800a      	strh	r2, [r1, #0]
 8011b88:	bd10      	pop	{r4, pc}
 8011b8a:	bf00      	nop
 8011b8c:	20032424 	.word	0x20032424
 8011b90:	20032420 	.word	0x20032420

08011b94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8011b94:	4b0a      	ldr	r3, [pc, #40]	; (8011bc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8011b96:	b510      	push	{r4, lr}
 8011b98:	781b      	ldrb	r3, [r3, #0]
 8011b9a:	2b01      	cmp	r3, #1
 8011b9c:	d10e      	bne.n	8011bbc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8011b9e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8011ba2:	8843      	ldrh	r3, [r0, #2]
 8011ba4:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011ba8:	18ca      	adds	r2, r1, r3
 8011baa:	4b06      	ldr	r3, [pc, #24]	; (8011bc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8011bac:	8044      	strh	r4, [r0, #2]
 8011bae:	881b      	ldrh	r3, [r3, #0]
 8011bb0:	1a9b      	subs	r3, r3, r2
 8011bb2:	8003      	strh	r3, [r0, #0]
 8011bb4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011bb8:	8081      	strh	r1, [r0, #4]
 8011bba:	80c3      	strh	r3, [r0, #6]
 8011bbc:	bd10      	pop	{r4, pc}
 8011bbe:	bf00      	nop
 8011bc0:	20032424 	.word	0x20032424
 8011bc4:	20032420 	.word	0x20032420

08011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8011bc8:	4b08      	ldr	r3, [pc, #32]	; (8011bec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8011bca:	781b      	ldrb	r3, [r3, #0]
 8011bcc:	2b01      	cmp	r3, #1
 8011bce:	d10c      	bne.n	8011bea <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8011bd0:	8803      	ldrh	r3, [r0, #0]
 8011bd2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8011bd6:	8842      	ldrh	r2, [r0, #2]
 8011bd8:	8002      	strh	r2, [r0, #0]
 8011bda:	185a      	adds	r2, r3, r1
 8011bdc:	4b04      	ldr	r3, [pc, #16]	; (8011bf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8011bde:	881b      	ldrh	r3, [r3, #0]
 8011be0:	1a9b      	subs	r3, r3, r2
 8011be2:	8043      	strh	r3, [r0, #2]
 8011be4:	88c3      	ldrh	r3, [r0, #6]
 8011be6:	80c1      	strh	r1, [r0, #6]
 8011be8:	8083      	strh	r3, [r0, #4]
 8011bea:	4770      	bx	lr
 8011bec:	20032424 	.word	0x20032424
 8011bf0:	20032420 	.word	0x20032420

08011bf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8011bf4:	4b07      	ldr	r3, [pc, #28]	; (8011c14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8011bf6:	b510      	push	{r4, lr}
 8011bf8:	781b      	ldrb	r3, [r3, #0]
 8011bfa:	2b01      	cmp	r3, #1
 8011bfc:	d108      	bne.n	8011c10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8011bfe:	f9b1 3000 	ldrsh.w	r3, [r1]
 8011c02:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011c06:	8003      	strh	r3, [r0, #0]
 8011c08:	8893      	ldrh	r3, [r2, #4]
 8011c0a:	3b01      	subs	r3, #1
 8011c0c:	1b1b      	subs	r3, r3, r4
 8011c0e:	800b      	strh	r3, [r1, #0]
 8011c10:	bd10      	pop	{r4, pc}
 8011c12:	bf00      	nop
 8011c14:	20032424 	.word	0x20032424

08011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8011c18:	4b0a      	ldr	r3, [pc, #40]	; (8011c44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8011c1a:	460a      	mov	r2, r1
 8011c1c:	b510      	push	{r4, lr}
 8011c1e:	781b      	ldrb	r3, [r3, #0]
 8011c20:	2b01      	cmp	r3, #1
 8011c22:	d10d      	bne.n	8011c40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8011c24:	8881      	ldrh	r1, [r0, #4]
 8011c26:	8803      	ldrh	r3, [r0, #0]
 8011c28:	440b      	add	r3, r1
 8011c2a:	4601      	mov	r1, r0
 8011c2c:	3b01      	subs	r3, #1
 8011c2e:	f821 3b02 	strh.w	r3, [r1], #2
 8011c32:	f7ff ffdf 	bl	8011bf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8011c36:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011c3a:	88c2      	ldrh	r2, [r0, #6]
 8011c3c:	80c3      	strh	r3, [r0, #6]
 8011c3e:	8082      	strh	r2, [r0, #4]
 8011c40:	bd10      	pop	{r4, pc}
 8011c42:	bf00      	nop
 8011c44:	20032424 	.word	0x20032424

08011c48 <_ZN8touchgfx11Application13requestRedrawEv>:
 8011c48:	4b06      	ldr	r3, [pc, #24]	; (8011c64 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8011c4a:	2100      	movs	r1, #0
 8011c4c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011c50:	4b05      	ldr	r3, [pc, #20]	; (8011c68 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8011c52:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8011c56:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011c5a:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8011c5e:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8011c62:	4770      	bx	lr
 8011c64:	20032420 	.word	0x20032420
 8011c68:	20032422 	.word	0x20032422

08011c6c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8011c6c:	4b03      	ldr	r3, [pc, #12]	; (8011c7c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8011c6e:	6818      	ldr	r0, [r3, #0]
 8011c70:	b110      	cbz	r0, 8011c78 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8011c72:	6803      	ldr	r3, [r0, #0]
 8011c74:	699b      	ldr	r3, [r3, #24]
 8011c76:	4718      	bx	r3
 8011c78:	4770      	bx	lr
 8011c7a:	bf00      	nop
 8011c7c:	20032468 	.word	0x20032468

08011c80 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8011c80:	4770      	bx	lr
	...

08011c84 <_ZN8touchgfx11Application4drawEv>:
 8011c84:	4b09      	ldr	r3, [pc, #36]	; (8011cac <_ZN8touchgfx11Application4drawEv+0x28>)
 8011c86:	b507      	push	{r0, r1, r2, lr}
 8011c88:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011c8c:	2100      	movs	r1, #0
 8011c8e:	4b08      	ldr	r3, [pc, #32]	; (8011cb0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8011c90:	9100      	str	r1, [sp, #0]
 8011c92:	4669      	mov	r1, sp
 8011c94:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011c98:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011c9c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011ca0:	6803      	ldr	r3, [r0, #0]
 8011ca2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011ca4:	4798      	blx	r3
 8011ca6:	b003      	add	sp, #12
 8011ca8:	f85d fb04 	ldr.w	pc, [sp], #4
 8011cac:	20032420 	.word	0x20032420
 8011cb0:	20032422 	.word	0x20032422

08011cb4 <_ZN8touchgfx11Application10invalidateEv>:
 8011cb4:	4b09      	ldr	r3, [pc, #36]	; (8011cdc <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8011cb6:	b082      	sub	sp, #8
 8011cb8:	2100      	movs	r1, #0
 8011cba:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011cbe:	4b08      	ldr	r3, [pc, #32]	; (8011ce0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8011cc0:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011cc4:	aa02      	add	r2, sp, #8
 8011cc6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011cca:	9100      	str	r1, [sp, #0]
 8011ccc:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011cd0:	6803      	ldr	r3, [r0, #0]
 8011cd2:	e912 0006 	ldmdb	r2, {r1, r2}
 8011cd6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011cd8:	b002      	add	sp, #8
 8011cda:	4718      	bx	r3
 8011cdc:	20032420 	.word	0x20032420
 8011ce0:	20032422 	.word	0x20032422

08011ce4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8011ce4:	4b03      	ldr	r3, [pc, #12]	; (8011cf4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8011ce6:	6818      	ldr	r0, [r3, #0]
 8011ce8:	b110      	cbz	r0, 8011cf0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8011cea:	6803      	ldr	r3, [r0, #0]
 8011cec:	69db      	ldr	r3, [r3, #28]
 8011cee:	4718      	bx	r3
 8011cf0:	4770      	bx	lr
 8011cf2:	bf00      	nop
 8011cf4:	20032468 	.word	0x20032468

08011cf8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8011cf8:	4b03      	ldr	r3, [pc, #12]	; (8011d08 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8011cfa:	6818      	ldr	r0, [r3, #0]
 8011cfc:	b110      	cbz	r0, 8011d04 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8011cfe:	6803      	ldr	r3, [r0, #0]
 8011d00:	6a1b      	ldr	r3, [r3, #32]
 8011d02:	4718      	bx	r3
 8011d04:	4770      	bx	lr
 8011d06:	bf00      	nop
 8011d08:	20032468 	.word	0x20032468

08011d0c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8011d0c:	2300      	movs	r3, #0
 8011d0e:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8011d12:	4770      	bx	lr

08011d14 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8011d14:	4b03      	ldr	r3, [pc, #12]	; (8011d24 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8011d16:	6818      	ldr	r0, [r3, #0]
 8011d18:	b110      	cbz	r0, 8011d20 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8011d1a:	6803      	ldr	r3, [r0, #0]
 8011d1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011d1e:	4718      	bx	r3
 8011d20:	4770      	bx	lr
 8011d22:	bf00      	nop
 8011d24:	20032468 	.word	0x20032468

08011d28 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8011d28:	b510      	push	{r4, lr}
 8011d2a:	f9b1 4000 	ldrsh.w	r4, [r1]
 8011d2e:	888a      	ldrh	r2, [r1, #4]
 8011d30:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011d34:	4422      	add	r2, r4
 8011d36:	b212      	sxth	r2, r2
 8011d38:	4293      	cmp	r3, r2
 8011d3a:	da15      	bge.n	8011d68 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011d3c:	8882      	ldrh	r2, [r0, #4]
 8011d3e:	4413      	add	r3, r2
 8011d40:	b21b      	sxth	r3, r3
 8011d42:	429c      	cmp	r4, r3
 8011d44:	da10      	bge.n	8011d68 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011d46:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8011d4a:	88c9      	ldrh	r1, [r1, #6]
 8011d4c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011d50:	4419      	add	r1, r3
 8011d52:	b209      	sxth	r1, r1
 8011d54:	428a      	cmp	r2, r1
 8011d56:	da07      	bge.n	8011d68 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011d58:	88c0      	ldrh	r0, [r0, #6]
 8011d5a:	4410      	add	r0, r2
 8011d5c:	b200      	sxth	r0, r0
 8011d5e:	4283      	cmp	r3, r0
 8011d60:	bfac      	ite	ge
 8011d62:	2000      	movge	r0, #0
 8011d64:	2001      	movlt	r0, #1
 8011d66:	bd10      	pop	{r4, pc}
 8011d68:	2000      	movs	r0, #0
 8011d6a:	e7fc      	b.n	8011d66 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08011d6c <_ZN8touchgfx4Rect10restrictToEss>:
 8011d6c:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011d70:	2b00      	cmp	r3, #0
 8011d72:	b510      	push	{r4, lr}
 8011d74:	da04      	bge.n	8011d80 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8011d76:	8884      	ldrh	r4, [r0, #4]
 8011d78:	4423      	add	r3, r4
 8011d7a:	8083      	strh	r3, [r0, #4]
 8011d7c:	2300      	movs	r3, #0
 8011d7e:	8003      	strh	r3, [r0, #0]
 8011d80:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011d84:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011d88:	1b09      	subs	r1, r1, r4
 8011d8a:	428b      	cmp	r3, r1
 8011d8c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8011d90:	bfc8      	it	gt
 8011d92:	8081      	strhgt	r1, [r0, #4]
 8011d94:	2b00      	cmp	r3, #0
 8011d96:	da04      	bge.n	8011da2 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8011d98:	88c1      	ldrh	r1, [r0, #6]
 8011d9a:	440b      	add	r3, r1
 8011d9c:	80c3      	strh	r3, [r0, #6]
 8011d9e:	2300      	movs	r3, #0
 8011da0:	8043      	strh	r3, [r0, #2]
 8011da2:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8011da6:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8011daa:	1a52      	subs	r2, r2, r1
 8011dac:	4293      	cmp	r3, r2
 8011dae:	bfc8      	it	gt
 8011db0:	80c2      	strhgt	r2, [r0, #6]
 8011db2:	bd10      	pop	{r4, pc}

08011db4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8011db4:	4b10      	ldr	r3, [pc, #64]	; (8011df8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8011db6:	b510      	push	{r4, lr}
 8011db8:	460c      	mov	r4, r1
 8011dba:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011dbe:	4b0f      	ldr	r3, [pc, #60]	; (8011dfc <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8011dc0:	4620      	mov	r0, r4
 8011dc2:	f9b3 1000 	ldrsh.w	r1, [r3]
 8011dc6:	f7ff ffd1 	bl	8011d6c <_ZN8touchgfx4Rect10restrictToEss>
 8011dca:	4b0d      	ldr	r3, [pc, #52]	; (8011e00 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8011dcc:	6818      	ldr	r0, [r3, #0]
 8011dce:	b190      	cbz	r0, 8011df6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8011dd0:	6803      	ldr	r3, [r0, #0]
 8011dd2:	4621      	mov	r1, r4
 8011dd4:	689b      	ldr	r3, [r3, #8]
 8011dd6:	4798      	blx	r3
 8011dd8:	4b0a      	ldr	r3, [pc, #40]	; (8011e04 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8011dda:	6818      	ldr	r0, [r3, #0]
 8011ddc:	b118      	cbz	r0, 8011de6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8011dde:	6803      	ldr	r3, [r0, #0]
 8011de0:	4621      	mov	r1, r4
 8011de2:	689b      	ldr	r3, [r3, #8]
 8011de4:	4798      	blx	r3
 8011de6:	4b08      	ldr	r3, [pc, #32]	; (8011e08 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8011de8:	4621      	mov	r1, r4
 8011dea:	6818      	ldr	r0, [r3, #0]
 8011dec:	6803      	ldr	r3, [r0, #0]
 8011dee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011df2:	69db      	ldr	r3, [r3, #28]
 8011df4:	4718      	bx	r3
 8011df6:	bd10      	pop	{r4, pc}
 8011df8:	20032422 	.word	0x20032422
 8011dfc:	20032420 	.word	0x20032420
 8011e00:	20032468 	.word	0x20032468
 8011e04:	20032464 	.word	0x20032464
 8011e08:	2003242c 	.word	0x2003242c

08011e0c <_ZNK8touchgfx4Rect8includesERKS0_>:
 8011e0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011e0e:	4606      	mov	r6, r0
 8011e10:	4608      	mov	r0, r1
 8011e12:	460f      	mov	r7, r1
 8011e14:	f7fc ff15 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011e18:	b9e8      	cbnz	r0, 8011e56 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011e1a:	f9b7 5000 	ldrsh.w	r5, [r7]
 8011e1e:	f9b6 4000 	ldrsh.w	r4, [r6]
 8011e22:	42a5      	cmp	r5, r4
 8011e24:	db17      	blt.n	8011e56 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011e26:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8011e2a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8011e2e:	429a      	cmp	r2, r3
 8011e30:	db11      	blt.n	8011e56 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011e32:	88b9      	ldrh	r1, [r7, #4]
 8011e34:	440d      	add	r5, r1
 8011e36:	88b1      	ldrh	r1, [r6, #4]
 8011e38:	440c      	add	r4, r1
 8011e3a:	b22d      	sxth	r5, r5
 8011e3c:	b224      	sxth	r4, r4
 8011e3e:	42a5      	cmp	r5, r4
 8011e40:	dc09      	bgt.n	8011e56 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011e42:	88f8      	ldrh	r0, [r7, #6]
 8011e44:	4410      	add	r0, r2
 8011e46:	88f2      	ldrh	r2, [r6, #6]
 8011e48:	4413      	add	r3, r2
 8011e4a:	b200      	sxth	r0, r0
 8011e4c:	b21b      	sxth	r3, r3
 8011e4e:	4298      	cmp	r0, r3
 8011e50:	bfcc      	ite	gt
 8011e52:	2000      	movgt	r0, #0
 8011e54:	2001      	movle	r0, #1
 8011e56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011e58 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8011e58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011e5a:	4604      	mov	r4, r0
 8011e5c:	4608      	mov	r0, r1
 8011e5e:	460d      	mov	r5, r1
 8011e60:	f7fc feef 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011e64:	b978      	cbnz	r0, 8011e86 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8011e66:	4620      	mov	r0, r4
 8011e68:	f7fc feeb 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011e6c:	f9b5 6000 	ldrsh.w	r6, [r5]
 8011e70:	b150      	cbz	r0, 8011e88 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8011e72:	8026      	strh	r6, [r4, #0]
 8011e74:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8011e78:	8063      	strh	r3, [r4, #2]
 8011e7a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8011e7e:	80a3      	strh	r3, [r4, #4]
 8011e80:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8011e84:	80e3      	strh	r3, [r4, #6]
 8011e86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011e88:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011e8c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8011e90:	42b1      	cmp	r1, r6
 8011e92:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8011e96:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8011e9a:	460f      	mov	r7, r1
 8011e9c:	88ed      	ldrh	r5, [r5, #6]
 8011e9e:	bfa8      	it	ge
 8011ea0:	4637      	movge	r7, r6
 8011ea2:	4293      	cmp	r3, r2
 8011ea4:	4618      	mov	r0, r3
 8011ea6:	4466      	add	r6, ip
 8011ea8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8011eac:	bfa8      	it	ge
 8011eae:	4610      	movge	r0, r2
 8011eb0:	442a      	add	r2, r5
 8011eb2:	88e5      	ldrh	r5, [r4, #6]
 8011eb4:	4461      	add	r1, ip
 8011eb6:	b236      	sxth	r6, r6
 8011eb8:	8027      	strh	r7, [r4, #0]
 8011eba:	442b      	add	r3, r5
 8011ebc:	b209      	sxth	r1, r1
 8011ebe:	b212      	sxth	r2, r2
 8011ec0:	8060      	strh	r0, [r4, #2]
 8011ec2:	b21b      	sxth	r3, r3
 8011ec4:	428e      	cmp	r6, r1
 8011ec6:	bfac      	ite	ge
 8011ec8:	ebc7 0106 	rsbge	r1, r7, r6
 8011ecc:	ebc7 0101 	rsblt	r1, r7, r1
 8011ed0:	429a      	cmp	r2, r3
 8011ed2:	bfac      	ite	ge
 8011ed4:	ebc0 0202 	rsbge	r2, r0, r2
 8011ed8:	ebc0 0203 	rsblt	r2, r0, r3
 8011edc:	80a1      	strh	r1, [r4, #4]
 8011ede:	80e2      	strh	r2, [r4, #6]
 8011ee0:	e7d1      	b.n	8011e86 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08011ee4 <_ZN8touchgfx11Application11getInstanceEv>:
 8011ee4:	4b01      	ldr	r3, [pc, #4]	; (8011eec <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8011ee6:	6818      	ldr	r0, [r3, #0]
 8011ee8:	4770      	bx	lr
 8011eea:	bf00      	nop
 8011eec:	20032478 	.word	0x20032478

08011ef0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8011ef0:	2300      	movs	r3, #0
 8011ef2:	b510      	push	{r4, lr}
 8011ef4:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8011ef8:	4604      	mov	r4, r0
 8011efa:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8011efe:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8011f02:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8011f06:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8011f0a:	429a      	cmp	r2, r3
 8011f0c:	d90e      	bls.n	8011f2c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8011f0e:	18e2      	adds	r2, r4, r3
 8011f10:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8011f14:	b122      	cbz	r2, 8011f20 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8011f16:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8011f1a:	6803      	ldr	r3, [r0, #0]
 8011f1c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011f1e:	4798      	blx	r3
 8011f20:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8011f24:	3301      	adds	r3, #1
 8011f26:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8011f2a:	e7ea      	b.n	8011f02 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8011f2c:	bd10      	pop	{r4, pc}

08011f2e <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8011f2e:	2300      	movs	r3, #0
 8011f30:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8011f34:	30a4      	adds	r0, #164	; 0xa4
 8011f36:	f820 3c24 	strh.w	r3, [r0, #-36]
 8011f3a:	f802 3b01 	strb.w	r3, [r2], #1
 8011f3e:	4282      	cmp	r2, r0
 8011f40:	d1fb      	bne.n	8011f3a <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8011f42:	4770      	bx	lr

08011f44 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8011f44:	b570      	push	{r4, r5, r6, lr}
 8011f46:	4c0b      	ldr	r4, [pc, #44]	; (8011f74 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8011f48:	4605      	mov	r5, r0
 8011f4a:	460e      	mov	r6, r1
 8011f4c:	6820      	ldr	r0, [r4, #0]
 8011f4e:	b110      	cbz	r0, 8011f56 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8011f50:	6803      	ldr	r3, [r0, #0]
 8011f52:	695b      	ldr	r3, [r3, #20]
 8011f54:	4798      	blx	r3
 8011f56:	1d28      	adds	r0, r5, #4
 8011f58:	f7ff ffe9 	bl	8011f2e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8011f5c:	6026      	str	r6, [r4, #0]
 8011f5e:	6833      	ldr	r3, [r6, #0]
 8011f60:	4630      	mov	r0, r6
 8011f62:	68db      	ldr	r3, [r3, #12]
 8011f64:	4798      	blx	r3
 8011f66:	682b      	ldr	r3, [r5, #0]
 8011f68:	4628      	mov	r0, r5
 8011f6a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011f6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011f70:	4718      	bx	r3
 8011f72:	bf00      	nop
 8011f74:	20032468 	.word	0x20032468

08011f78 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8011f78:	2300      	movs	r3, #0
 8011f7a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8011f7e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8011f82:	461a      	mov	r2, r3
 8011f84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011f86:	461c      	mov	r4, r3
 8011f88:	461d      	mov	r5, r3
 8011f8a:	459c      	cmp	ip, r3
 8011f8c:	dd1a      	ble.n	8011fc4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8011f8e:	18c6      	adds	r6, r0, r3
 8011f90:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8011f94:	b16e      	cbz	r6, 8011fb2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8011f96:	429a      	cmp	r2, r3
 8011f98:	d008      	beq.n	8011fac <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8011f9a:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8011f9e:	fa1f fe82 	uxth.w	lr, r2
 8011fa2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8011fa6:	1887      	adds	r7, r0, r2
 8011fa8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8011fac:	3201      	adds	r2, #1
 8011fae:	3301      	adds	r3, #1
 8011fb0:	e7eb      	b.n	8011f8a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8011fb2:	4299      	cmp	r1, r3
 8011fb4:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8011fb8:	bfa8      	it	ge
 8011fba:	3501      	addge	r5, #1
 8011fbc:	429e      	cmp	r6, r3
 8011fbe:	bfc8      	it	gt
 8011fc0:	3401      	addgt	r4, #1
 8011fc2:	e7f4      	b.n	8011fae <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8011fc4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8011fc8:	1b49      	subs	r1, r1, r5
 8011fca:	1b1b      	subs	r3, r3, r4
 8011fcc:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8011fd0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8011fd4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8011fd8:	4293      	cmp	r3, r2
 8011fda:	dd03      	ble.n	8011fe4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8011fdc:	3b01      	subs	r3, #1
 8011fde:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8011fe2:	e7f7      	b.n	8011fd4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8011fe4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08011fe8 <_ZN8touchgfx11Application15handleTickEventEv>:
 8011fe8:	b570      	push	{r4, r5, r6, lr}
 8011fea:	4d16      	ldr	r5, [pc, #88]	; (8012044 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8011fec:	4604      	mov	r4, r0
 8011fee:	6828      	ldr	r0, [r5, #0]
 8011ff0:	b140      	cbz	r0, 8012004 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8011ff2:	7a03      	ldrb	r3, [r0, #8]
 8011ff4:	b933      	cbnz	r3, 8012004 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8011ff6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8011ffa:	6803      	ldr	r3, [r0, #0]
 8011ffc:	689b      	ldr	r3, [r3, #8]
 8011ffe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012002:	4718      	bx	r3
 8012004:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8012008:	4e0f      	ldr	r6, [pc, #60]	; (8012048 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801200a:	b973      	cbnz	r3, 801202a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801200c:	b168      	cbz	r0, 801202a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801200e:	7a03      	ldrb	r3, [r0, #8]
 8012010:	b15b      	cbz	r3, 801202a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8012012:	6830      	ldr	r0, [r6, #0]
 8012014:	b110      	cbz	r0, 801201c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8012016:	6803      	ldr	r3, [r0, #0]
 8012018:	691b      	ldr	r3, [r3, #16]
 801201a:	4798      	blx	r3
 801201c:	6828      	ldr	r0, [r5, #0]
 801201e:	6803      	ldr	r3, [r0, #0]
 8012020:	68db      	ldr	r3, [r3, #12]
 8012022:	4798      	blx	r3
 8012024:	2301      	movs	r3, #1
 8012026:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801202a:	3404      	adds	r4, #4
 801202c:	4620      	mov	r0, r4
 801202e:	f7ff ff5f 	bl	8011ef0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8012032:	4620      	mov	r0, r4
 8012034:	f7ff ffa0 	bl	8011f78 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8012038:	6830      	ldr	r0, [r6, #0]
 801203a:	b110      	cbz	r0, 8012042 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801203c:	6803      	ldr	r3, [r0, #0]
 801203e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012040:	e7dd      	b.n	8011ffe <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8012042:	bd70      	pop	{r4, r5, r6, pc}
 8012044:	2003246c 	.word	0x2003246c
 8012048:	20032468 	.word	0x20032468

0801204c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801204c:	4603      	mov	r3, r0
 801204e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8012052:	2200      	movs	r2, #0
 8012054:	801a      	strh	r2, [r3, #0]
 8012056:	3308      	adds	r3, #8
 8012058:	f823 2c06 	strh.w	r2, [r3, #-6]
 801205c:	f823 2c04 	strh.w	r2, [r3, #-4]
 8012060:	f823 2c02 	strh.w	r2, [r3, #-2]
 8012064:	428b      	cmp	r3, r1
 8012066:	d1f5      	bne.n	8012054 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8012068:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 801206c:	4770      	bx	lr
	...

08012070 <_ZN8touchgfx11ApplicationC1Ev>:
 8012070:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012072:	4b1d      	ldr	r3, [pc, #116]	; (80120e8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8012074:	4606      	mov	r6, r0
 8012076:	4604      	mov	r4, r0
 8012078:	2500      	movs	r5, #0
 801207a:	f846 3b04 	str.w	r3, [r6], #4
 801207e:	22a8      	movs	r2, #168	; 0xa8
 8012080:	2100      	movs	r1, #0
 8012082:	4630      	mov	r0, r6
 8012084:	f011 fb5d 	bl	8023742 <memset>
 8012088:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 801208c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8012090:	4f16      	ldr	r7, [pc, #88]	; (80120ec <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8012092:	f7ff ffdb 	bl	801204c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8012096:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 801209a:	f7ff ffd7 	bl	801204c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801209e:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80120a2:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80120a6:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80120aa:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80120ae:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 80120b2:	490f      	ldr	r1, [pc, #60]	; (80120f0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80120b4:	480f      	ldr	r0, [pc, #60]	; (80120f4 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80120b6:	f010 faab 	bl	8022610 <CRC_Lock>
 80120ba:	4b0f      	ldr	r3, [pc, #60]	; (80120f8 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80120bc:	b158      	cbz	r0, 80120d6 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80120be:	801d      	strh	r5, [r3, #0]
 80120c0:	2300      	movs	r3, #0
 80120c2:	4a0e      	ldr	r2, [pc, #56]	; (80120fc <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80120c4:	4630      	mov	r0, r6
 80120c6:	6013      	str	r3, [r2, #0]
 80120c8:	4a0d      	ldr	r2, [pc, #52]	; (8012100 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80120ca:	603b      	str	r3, [r7, #0]
 80120cc:	6013      	str	r3, [r2, #0]
 80120ce:	f7ff ff2e 	bl	8011f2e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80120d2:	4620      	mov	r0, r4
 80120d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80120d6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80120da:	2002      	movs	r0, #2
 80120dc:	801a      	strh	r2, [r3, #0]
 80120de:	6038      	str	r0, [r7, #0]
 80120e0:	f001 fa50 	bl	8013584 <_ZN8touchgfx6Screen4drawEv>
 80120e4:	e7ec      	b.n	80120c0 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80120e6:	bf00      	nop
 80120e8:	08026358 	.word	0x08026358
 80120ec:	20032468 	.word	0x20032468
 80120f0:	b5e8b5cd 	.word	0xb5e8b5cd
 80120f4:	f407a5c2 	.word	0xf407a5c2
 80120f8:	20000040 	.word	0x20000040
 80120fc:	20032478 	.word	0x20032478
 8012100:	2003246c 	.word	0x2003246c

08012104 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8012104:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8012108:	3b01      	subs	r3, #1
 801210a:	b29b      	uxth	r3, r3
 801210c:	428b      	cmp	r3, r1
 801210e:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8012112:	b510      	push	{r4, lr}
 8012114:	d908      	bls.n	8012128 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8012116:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801211a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801211e:	681a      	ldr	r2, [r3, #0]
 8012120:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8012124:	685a      	ldr	r2, [r3, #4]
 8012126:	6062      	str	r2, [r4, #4]
 8012128:	bd10      	pop	{r4, pc}
	...

0801212c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801212c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012130:	b08f      	sub	sp, #60	; 0x3c
 8012132:	4b8f      	ldr	r3, [pc, #572]	; (8012370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8012134:	4683      	mov	fp, r0
 8012136:	ac0a      	add	r4, sp, #40	; 0x28
 8012138:	e884 0006 	stmia.w	r4, {r1, r2}
 801213c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012140:	4620      	mov	r0, r4
 8012142:	4b8c      	ldr	r3, [pc, #560]	; (8012374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8012144:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012148:	f7ff fe10 	bl	8011d6c <_ZN8touchgfx4Rect10restrictToEss>
 801214c:	4620      	mov	r0, r4
 801214e:	f7fc fd78 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012152:	2800      	cmp	r0, #0
 8012154:	d16a      	bne.n	801222c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8012156:	9403      	str	r4, [sp, #12]
 8012158:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 801215c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8012160:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8012164:	9301      	str	r3, [sp, #4]
 8012166:	35a4      	adds	r5, #164	; 0xa4
 8012168:	b15c      	cbz	r4, 8012182 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 801216a:	4629      	mov	r1, r5
 801216c:	9803      	ldr	r0, [sp, #12]
 801216e:	f7ff fe4d 	bl	8011e0c <_ZNK8touchgfx4Rect8includesERKS0_>
 8012172:	3c01      	subs	r4, #1
 8012174:	b118      	cbz	r0, 801217e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8012176:	b2a1      	uxth	r1, r4
 8012178:	9801      	ldr	r0, [sp, #4]
 801217a:	f7ff ffc3 	bl	8012104 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801217e:	3d08      	subs	r5, #8
 8012180:	e7f2      	b.n	8012168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8012182:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8012186:	f10a 33ff 	add.w	r3, sl, #4294967295
 801218a:	f8cd a010 	str.w	sl, [sp, #16]
 801218e:	9302      	str	r3, [sp, #8]
 8012190:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8012194:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8012198:	9306      	str	r3, [sp, #24]
 801219a:	445c      	add	r4, fp
 801219c:	2500      	movs	r5, #0
 801219e:	4626      	mov	r6, r4
 80121a0:	f8cd a014 	str.w	sl, [sp, #20]
 80121a4:	462f      	mov	r7, r5
 80121a6:	9b05      	ldr	r3, [sp, #20]
 80121a8:	2b00      	cmp	r3, #0
 80121aa:	d073      	beq.n	8012294 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80121ac:	9903      	ldr	r1, [sp, #12]
 80121ae:	4630      	mov	r0, r6
 80121b0:	f7ff fdba 	bl	8011d28 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80121b4:	b350      	cbz	r0, 801220c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80121b6:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80121ba:	f9b6 c000 	ldrsh.w	ip, [r6]
 80121be:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 80121c2:	45e6      	cmp	lr, ip
 80121c4:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80121c8:	db33      	blt.n	8012232 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80121ca:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80121ce:	88b3      	ldrh	r3, [r6, #4]
 80121d0:	4472      	add	r2, lr
 80121d2:	4463      	add	r3, ip
 80121d4:	b212      	sxth	r2, r2
 80121d6:	b21b      	sxth	r3, r3
 80121d8:	429a      	cmp	r2, r3
 80121da:	dc2a      	bgt.n	8012232 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80121dc:	fa1f f289 	uxth.w	r2, r9
 80121e0:	88f3      	ldrh	r3, [r6, #6]
 80121e2:	45c8      	cmp	r8, r9
 80121e4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80121e8:	4413      	add	r3, r2
 80121ea:	fa1f fc88 	uxth.w	ip, r8
 80121ee:	b29b      	uxth	r3, r3
 80121f0:	fa0f fe83 	sxth.w	lr, r3
 80121f4:	db0f      	blt.n	8012216 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80121f6:	eba3 030c 	sub.w	r3, r3, ip
 80121fa:	1ac9      	subs	r1, r1, r3
 80121fc:	b209      	sxth	r1, r1
 80121fe:	2900      	cmp	r1, #0
 8012200:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8012204:	dd12      	ble.n	801222c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8012206:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801220a:	4605      	mov	r5, r0
 801220c:	9b05      	ldr	r3, [sp, #20]
 801220e:	3e08      	subs	r6, #8
 8012210:	3b01      	subs	r3, #1
 8012212:	9305      	str	r3, [sp, #20]
 8012214:	e7c7      	b.n	80121a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8012216:	4461      	add	r1, ip
 8012218:	b209      	sxth	r1, r1
 801221a:	4571      	cmp	r1, lr
 801221c:	dc38      	bgt.n	8012290 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801221e:	eba2 020c 	sub.w	r2, r2, ip
 8012222:	b212      	sxth	r2, r2
 8012224:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8012228:	2a00      	cmp	r2, #0
 801222a:	dcee      	bgt.n	801220a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801222c:	b00f      	add	sp, #60	; 0x3c
 801222e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012232:	45c8      	cmp	r8, r9
 8012234:	db2c      	blt.n	8012290 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8012236:	88f3      	ldrh	r3, [r6, #6]
 8012238:	4499      	add	r9, r3
 801223a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801223e:	4498      	add	r8, r3
 8012240:	fa0f f989 	sxth.w	r9, r9
 8012244:	fa0f f888 	sxth.w	r8, r8
 8012248:	45c1      	cmp	r9, r8
 801224a:	db21      	blt.n	8012290 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801224c:	fa1f f28c 	uxth.w	r2, ip
 8012250:	88b3      	ldrh	r3, [r6, #4]
 8012252:	45e6      	cmp	lr, ip
 8012254:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8012258:	4413      	add	r3, r2
 801225a:	fa1f f88e 	uxth.w	r8, lr
 801225e:	b29b      	uxth	r3, r3
 8012260:	fa0f f983 	sxth.w	r9, r3
 8012264:	db0a      	blt.n	801227c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8012266:	eba3 0308 	sub.w	r3, r3, r8
 801226a:	1ac9      	subs	r1, r1, r3
 801226c:	b209      	sxth	r1, r1
 801226e:	2900      	cmp	r1, #0
 8012270:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8012274:	ddda      	ble.n	801222c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8012276:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801227a:	e7c6      	b.n	801220a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801227c:	4441      	add	r1, r8
 801227e:	b209      	sxth	r1, r1
 8012280:	4549      	cmp	r1, r9
 8012282:	dc05      	bgt.n	8012290 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8012284:	eba2 0208 	sub.w	r2, r2, r8
 8012288:	b212      	sxth	r2, r2
 801228a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801228e:	e7cb      	b.n	8012228 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8012290:	4607      	mov	r7, r0
 8012292:	e7bb      	b.n	801220c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8012294:	2d00      	cmp	r5, #0
 8012296:	d181      	bne.n	801219c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8012298:	2f00      	cmp	r7, #0
 801229a:	f000 81dd 	beq.w	8012658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801229e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80122a2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80122a6:	b2b3      	uxth	r3, r6
 80122a8:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80122ac:	9305      	str	r3, [sp, #20]
 80122ae:	9a05      	ldr	r2, [sp, #20]
 80122b0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80122b4:	4413      	add	r3, r2
 80122b6:	b2ba      	uxth	r2, r7
 80122b8:	4492      	add	sl, r2
 80122ba:	b29b      	uxth	r3, r3
 80122bc:	fa1f fa8a 	uxth.w	sl, sl
 80122c0:	fa0f f883 	sxth.w	r8, r3
 80122c4:	fa0f f98a 	sxth.w	r9, sl
 80122c8:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80122cc:	9b04      	ldr	r3, [sp, #16]
 80122ce:	2b00      	cmp	r3, #0
 80122d0:	d052      	beq.n	8012378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80122d2:	9903      	ldr	r1, [sp, #12]
 80122d4:	4620      	mov	r0, r4
 80122d6:	f7ff fd27 	bl	8011d28 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80122da:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80122de:	b1c0      	cbz	r0, 8012312 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80122e0:	f9b4 e000 	ldrsh.w	lr, [r4]
 80122e4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80122e8:	4576      	cmp	r6, lr
 80122ea:	dc22      	bgt.n	8012332 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80122ec:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80122f0:	44f4      	add	ip, lr
 80122f2:	fa0f fc8c 	sxth.w	ip, ip
 80122f6:	45e0      	cmp	r8, ip
 80122f8:	db1b      	blt.n	8012332 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80122fa:	428f      	cmp	r7, r1
 80122fc:	fa1f fc81 	uxth.w	ip, r1
 8012300:	88e1      	ldrh	r1, [r4, #6]
 8012302:	dc0d      	bgt.n	8012320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8012304:	ebaa 0c0c 	sub.w	ip, sl, ip
 8012308:	f8a4 9002 	strh.w	r9, [r4, #2]
 801230c:	eba1 010c 	sub.w	r1, r1, ip
 8012310:	80e1      	strh	r1, [r4, #6]
 8012312:	4628      	mov	r0, r5
 8012314:	9904      	ldr	r1, [sp, #16]
 8012316:	3c08      	subs	r4, #8
 8012318:	4605      	mov	r5, r0
 801231a:	3901      	subs	r1, #1
 801231c:	9104      	str	r1, [sp, #16]
 801231e:	e7d3      	b.n	80122c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8012320:	4461      	add	r1, ip
 8012322:	b209      	sxth	r1, r1
 8012324:	4549      	cmp	r1, r9
 8012326:	dcf5      	bgt.n	8012314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8012328:	eba2 0c0c 	sub.w	ip, r2, ip
 801232c:	f8a4 c006 	strh.w	ip, [r4, #6]
 8012330:	e7ef      	b.n	8012312 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8012332:	428f      	cmp	r7, r1
 8012334:	dcee      	bgt.n	8012314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8012336:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 801233a:	4461      	add	r1, ip
 801233c:	b209      	sxth	r1, r1
 801233e:	4589      	cmp	r9, r1
 8012340:	dbe8      	blt.n	8012314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8012342:	4576      	cmp	r6, lr
 8012344:	fa1f fc8e 	uxth.w	ip, lr
 8012348:	88a1      	ldrh	r1, [r4, #4]
 801234a:	dc07      	bgt.n	801235c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 801234c:	eba3 0c0c 	sub.w	ip, r3, ip
 8012350:	f8a4 8000 	strh.w	r8, [r4]
 8012354:	eba1 010c 	sub.w	r1, r1, ip
 8012358:	80a1      	strh	r1, [r4, #4]
 801235a:	e7da      	b.n	8012312 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801235c:	4461      	add	r1, ip
 801235e:	b209      	sxth	r1, r1
 8012360:	4588      	cmp	r8, r1
 8012362:	dbd7      	blt.n	8012314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8012364:	9905      	ldr	r1, [sp, #20]
 8012366:	eba1 0c0c 	sub.w	ip, r1, ip
 801236a:	f8a4 c004 	strh.w	ip, [r4, #4]
 801236e:	e7d0      	b.n	8012312 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8012370:	20032422 	.word	0x20032422
 8012374:	20032420 	.word	0x20032420
 8012378:	2d00      	cmp	r5, #0
 801237a:	f000 816d 	beq.w	8012658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801237e:	9b06      	ldr	r3, [sp, #24]
 8012380:	445b      	add	r3, fp
 8012382:	461c      	mov	r4, r3
 8012384:	9b02      	ldr	r3, [sp, #8]
 8012386:	3301      	adds	r3, #1
 8012388:	f000 8166 	beq.w	8012658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801238c:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8012390:	9803      	ldr	r0, [sp, #12]
 8012392:	4629      	mov	r1, r5
 8012394:	f7ff fd3a 	bl	8011e0c <_ZNK8touchgfx4Rect8includesERKS0_>
 8012398:	b120      	cbz	r0, 80123a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 801239a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801239e:	9801      	ldr	r0, [sp, #4]
 80123a0:	f7ff feb0 	bl	8012104 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80123a4:	9903      	ldr	r1, [sp, #12]
 80123a6:	4628      	mov	r0, r5
 80123a8:	f7ff fcbe 	bl	8011d28 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80123ac:	2800      	cmp	r0, #0
 80123ae:	f000 809c 	beq.w	80124ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80123b2:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80123b6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80123ba:	fa1f f189 	uxth.w	r1, r9
 80123be:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80123c2:	9309      	str	r3, [sp, #36]	; 0x24
 80123c4:	eb01 0c03 	add.w	ip, r1, r3
 80123c8:	b283      	uxth	r3, r0
 80123ca:	4548      	cmp	r0, r9
 80123cc:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80123d0:	fa1f fa8c 	uxth.w	sl, ip
 80123d4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80123d8:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 80123dc:	eb03 050c 	add.w	r5, r3, ip
 80123e0:	b2ad      	uxth	r5, r5
 80123e2:	9505      	str	r5, [sp, #20]
 80123e4:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80123e8:	9504      	str	r5, [sp, #16]
 80123ea:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 80123ee:	f340 8099 	ble.w	8012524 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80123f2:	1a5b      	subs	r3, r3, r1
 80123f4:	4596      	cmp	lr, r2
 80123f6:	fa0f f08a 	sxth.w	r0, sl
 80123fa:	b29b      	uxth	r3, r3
 80123fc:	b21e      	sxth	r6, r3
 80123fe:	dd2e      	ble.n	801245e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8012400:	9f02      	ldr	r7, [sp, #8]
 8012402:	fa1f fe8e 	uxth.w	lr, lr
 8012406:	b292      	uxth	r2, r2
 8012408:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801240c:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8012410:	9f04      	ldr	r7, [sp, #16]
 8012412:	ebae 0102 	sub.w	r1, lr, r2
 8012416:	44a6      	add	lr, r4
 8012418:	1a3f      	subs	r7, r7, r0
 801241a:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801241e:	b289      	uxth	r1, r1
 8012420:	4402      	add	r2, r0
 8012422:	fa0f fe8e 	sxth.w	lr, lr
 8012426:	b20d      	sxth	r5, r1
 8012428:	b212      	sxth	r2, r2
 801242a:	436f      	muls	r7, r5
 801242c:	ebae 0202 	sub.w	r2, lr, r2
 8012430:	4372      	muls	r2, r6
 8012432:	4297      	cmp	r7, r2
 8012434:	db09      	blt.n	801244a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8012436:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 801243a:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 801243e:	449c      	add	ip, r3
 8012440:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012444:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8012448:	e686      	b.n	8012158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801244a:	4421      	add	r1, r4
 801244c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8012450:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8012454:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8012458:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801245c:	e67c      	b.n	8012158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801245e:	9f04      	ldr	r7, [sp, #16]
 8012460:	42b8      	cmp	r0, r7
 8012462:	da27      	bge.n	80124b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8012464:	9902      	ldr	r1, [sp, #8]
 8012466:	1a3f      	subs	r7, r7, r0
 8012468:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 801246c:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8012470:	eb05 010e 	add.w	r1, r5, lr
 8012474:	fa1f f881 	uxth.w	r8, r1
 8012478:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 801247c:	4411      	add	r1, r2
 801247e:	fa0f f988 	sxth.w	r9, r8
 8012482:	eba2 020e 	sub.w	r2, r2, lr
 8012486:	eba1 0108 	sub.w	r1, r1, r8
 801248a:	4372      	muls	r2, r6
 801248c:	b289      	uxth	r1, r1
 801248e:	fa0f f881 	sxth.w	r8, r1
 8012492:	fb08 f707 	mul.w	r7, r8, r7
 8012496:	42ba      	cmp	r2, r7
 8012498:	dc06      	bgt.n	80124a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 801249a:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 801249e:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 80124a2:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80124a6:	e7ca      	b.n	801243e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80124a8:	4429      	add	r1, r5
 80124aa:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80124ae:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80124b2:	e651      	b.n	8012158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80124b4:	9805      	ldr	r0, [sp, #20]
 80124b6:	2d06      	cmp	r5, #6
 80124b8:	ebaa 0000 	sub.w	r0, sl, r0
 80124bc:	b280      	uxth	r0, r0
 80124be:	fa0f fe80 	sxth.w	lr, r0
 80124c2:	d817      	bhi.n	80124f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80124c4:	9b04      	ldr	r3, [sp, #16]
 80124c6:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 80124ca:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80124ce:	1c6b      	adds	r3, r5, #1
 80124d0:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 80124d4:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80124d8:	9b01      	ldr	r3, [sp, #4]
 80124da:	9801      	ldr	r0, [sp, #4]
 80124dc:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80124e0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80124e4:	805a      	strh	r2, [r3, #2]
 80124e6:	809e      	strh	r6, [r3, #4]
 80124e8:	80d9      	strh	r1, [r3, #6]
 80124ea:	9b02      	ldr	r3, [sp, #8]
 80124ec:	3c08      	subs	r4, #8
 80124ee:	3b01      	subs	r3, #1
 80124f0:	9302      	str	r3, [sp, #8]
 80124f2:	e747      	b.n	8012384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80124f4:	9a02      	ldr	r2, [sp, #8]
 80124f6:	45b6      	cmp	lr, r6
 80124f8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80124fc:	db0d      	blt.n	801251a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80124fe:	449c      	add	ip, r3
 8012500:	445a      	add	r2, fp
 8012502:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8012506:	fa1f fc8c 	uxth.w	ip, ip
 801250a:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 801250e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8012512:	448c      	add	ip, r1
 8012514:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8012518:	e61e      	b.n	8012158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801251a:	445a      	add	r2, fp
 801251c:	4484      	add	ip, r0
 801251e:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8012522:	e78f      	b.n	8012444 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8012524:	fa1f f18e 	uxth.w	r1, lr
 8012528:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 801252c:	b293      	uxth	r3, r2
 801252e:	4596      	cmp	lr, r2
 8012530:	eb01 0806 	add.w	r8, r1, r6
 8012534:	9306      	str	r3, [sp, #24]
 8012536:	fa1f f888 	uxth.w	r8, r8
 801253a:	9f06      	ldr	r7, [sp, #24]
 801253c:	fa0f f388 	sxth.w	r3, r8
 8012540:	9307      	str	r3, [sp, #28]
 8012542:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8012546:	443b      	add	r3, r7
 8012548:	b29b      	uxth	r3, r3
 801254a:	9308      	str	r3, [sp, #32]
 801254c:	da24      	bge.n	8012598 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 801254e:	9905      	ldr	r1, [sp, #20]
 8012550:	eba3 0308 	sub.w	r3, r3, r8
 8012554:	eba2 020e 	sub.w	r2, r2, lr
 8012558:	eba9 0000 	sub.w	r0, r9, r0
 801255c:	ebaa 0401 	sub.w	r4, sl, r1
 8012560:	b29b      	uxth	r3, r3
 8012562:	b2a4      	uxth	r4, r4
 8012564:	b219      	sxth	r1, r3
 8012566:	b225      	sxth	r5, r4
 8012568:	4348      	muls	r0, r1
 801256a:	436a      	muls	r2, r5
 801256c:	4282      	cmp	r2, r0
 801256e:	9a02      	ldr	r2, [sp, #8]
 8012570:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8012574:	445a      	add	r2, fp
 8012576:	dc06      	bgt.n	8012586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8012578:	9b07      	ldr	r3, [sp, #28]
 801257a:	44a4      	add	ip, r4
 801257c:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8012580:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8012584:	e75e      	b.n	8012444 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8012586:	9904      	ldr	r1, [sp, #16]
 8012588:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 801258c:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8012590:	4433      	add	r3, r6
 8012592:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012596:	e5df      	b.n	8012158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012598:	9f06      	ldr	r7, [sp, #24]
 801259a:	9b04      	ldr	r3, [sp, #16]
 801259c:	1bc9      	subs	r1, r1, r7
 801259e:	fa0f f78a 	sxth.w	r7, sl
 80125a2:	b289      	uxth	r1, r1
 80125a4:	429f      	cmp	r7, r3
 80125a6:	fa0f fe81 	sxth.w	lr, r1
 80125aa:	dd23      	ble.n	80125f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80125ac:	9a05      	ldr	r2, [sp, #20]
 80125ae:	eba9 0000 	sub.w	r0, r9, r0
 80125b2:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80125b6:	ebaa 0202 	sub.w	r2, sl, r2
 80125ba:	9d07      	ldr	r5, [sp, #28]
 80125bc:	fb0e f000 	mul.w	r0, lr, r0
 80125c0:	b292      	uxth	r2, r2
 80125c2:	eba5 0a03 	sub.w	sl, r5, r3
 80125c6:	9b02      	ldr	r3, [sp, #8]
 80125c8:	b214      	sxth	r4, r2
 80125ca:	00db      	lsls	r3, r3, #3
 80125cc:	fb04 fa0a 	mul.w	sl, r4, sl
 80125d0:	445b      	add	r3, fp
 80125d2:	4550      	cmp	r0, sl
 80125d4:	db03      	blt.n	80125de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80125d6:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 80125da:	4494      	add	ip, r2
 80125dc:	e732      	b.n	8012444 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80125de:	9a04      	ldr	r2, [sp, #16]
 80125e0:	4431      	add	r1, r6
 80125e2:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 80125e6:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 80125ea:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 80125ee:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80125f2:	e75c      	b.n	80124ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80125f4:	9b08      	ldr	r3, [sp, #32]
 80125f6:	2d06      	cmp	r5, #6
 80125f8:	eba3 0308 	sub.w	r3, r3, r8
 80125fc:	b29b      	uxth	r3, r3
 80125fe:	b218      	sxth	r0, r3
 8012600:	d813      	bhi.n	801262a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8012602:	9b07      	ldr	r3, [sp, #28]
 8012604:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8012608:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 801260c:	1c6b      	adds	r3, r5, #1
 801260e:	9901      	ldr	r1, [sp, #4]
 8012610:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8012614:	9b01      	ldr	r3, [sp, #4]
 8012616:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 801261a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801261e:	805a      	strh	r2, [r3, #2]
 8012620:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012622:	f8a3 e006 	strh.w	lr, [r3, #6]
 8012626:	809a      	strh	r2, [r3, #4]
 8012628:	e75f      	b.n	80124ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801262a:	9c02      	ldr	r4, [sp, #8]
 801262c:	4570      	cmp	r0, lr
 801262e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8012632:	db0d      	blt.n	8012650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8012634:	4431      	add	r1, r6
 8012636:	9b06      	ldr	r3, [sp, #24]
 8012638:	445c      	add	r4, fp
 801263a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801263e:	b289      	uxth	r1, r1
 8012640:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8012644:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8012648:	4419      	add	r1, r3
 801264a:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 801264e:	e583      	b.n	8012158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012650:	445c      	add	r4, fp
 8012652:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8012656:	e79b      	b.n	8012590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8012658:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 801265c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8012660:	1e65      	subs	r5, r4, #1
 8012662:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8012666:	b2ad      	uxth	r5, r5
 8012668:	42b5      	cmp	r5, r6
 801266a:	d044      	beq.n	80126f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 801266c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8012670:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8012674:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8012678:	4282      	cmp	r2, r0
 801267a:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 801267e:	d11f      	bne.n	80126c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8012680:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8012684:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8012688:	459c      	cmp	ip, r3
 801268a:	d119      	bne.n	80126c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 801268c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8012690:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8012694:	19d8      	adds	r0, r3, r7
 8012696:	b200      	sxth	r0, r0
 8012698:	4288      	cmp	r0, r1
 801269a:	d109      	bne.n	80126b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 801269c:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80126a0:	4413      	add	r3, r2
 80126a2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80126a6:	4629      	mov	r1, r5
 80126a8:	9801      	ldr	r0, [sp, #4]
 80126aa:	f7ff fd2b 	bl	8012104 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80126ae:	e003      	b.n	80126b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80126b0:	4411      	add	r1, r2
 80126b2:	b209      	sxth	r1, r1
 80126b4:	42b9      	cmp	r1, r7
 80126b6:	d0f3      	beq.n	80126a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80126b8:	3d01      	subs	r5, #1
 80126ba:	3c08      	subs	r4, #8
 80126bc:	b2ad      	uxth	r5, r5
 80126be:	e7d3      	b.n	8012668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80126c0:	42b9      	cmp	r1, r7
 80126c2:	d1f9      	bne.n	80126b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80126c4:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 80126c8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80126cc:	4299      	cmp	r1, r3
 80126ce:	d1f3      	bne.n	80126b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80126d0:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80126d4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80126d8:	181f      	adds	r7, r3, r0
 80126da:	b23f      	sxth	r7, r7
 80126dc:	42ba      	cmp	r2, r7
 80126de:	d105      	bne.n	80126ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80126e0:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80126e4:	440b      	add	r3, r1
 80126e6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80126ea:	e7dc      	b.n	80126a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80126ec:	440a      	add	r2, r1
 80126ee:	b212      	sxth	r2, r2
 80126f0:	4290      	cmp	r0, r2
 80126f2:	d1e1      	bne.n	80126b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80126f4:	e7f6      	b.n	80126e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80126f6:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80126fa:	2e07      	cmp	r6, #7
 80126fc:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8012700:	d812      	bhi.n	8012728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8012702:	1c75      	adds	r5, r6, #1
 8012704:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8012708:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801270c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8012710:	9d01      	ldr	r5, [sp, #4]
 8012712:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8012716:	442c      	add	r4, r5
 8012718:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801271c:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8012720:	8061      	strh	r1, [r4, #2]
 8012722:	80a2      	strh	r2, [r4, #4]
 8012724:	80e3      	strh	r3, [r4, #6]
 8012726:	e581      	b.n	801222c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8012728:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 801272c:	3e01      	subs	r6, #1
 801272e:	445c      	add	r4, fp
 8012730:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8012734:	f04f 37ff 	mov.w	r7, #4294967295
 8012738:	2500      	movs	r5, #0
 801273a:	9305      	str	r3, [sp, #20]
 801273c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8012740:	1e72      	subs	r2, r6, #1
 8012742:	9302      	str	r3, [sp, #8]
 8012744:	4691      	mov	r9, r2
 8012746:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 801274a:	9304      	str	r3, [sp, #16]
 801274c:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8012750:	f1b9 3fff 	cmp.w	r9, #4294967295
 8012754:	6818      	ldr	r0, [r3, #0]
 8012756:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801275a:	9207      	str	r2, [sp, #28]
 801275c:	bf16      	itet	ne
 801275e:	9905      	ldrne	r1, [sp, #20]
 8012760:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8012764:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8012768:	9306      	str	r3, [sp, #24]
 801276a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801276e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8012772:	fb18 f801 	smulbb	r8, r8, r1
 8012776:	6859      	ldr	r1, [r3, #4]
 8012778:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801277c:	4671      	mov	r1, lr
 801277e:	a80c      	add	r0, sp, #48	; 0x30
 8012780:	f7ff fb6a 	bl	8011e58 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012784:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8012788:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801278c:	f04f 0c08 	mov.w	ip, #8
 8012790:	9b04      	ldr	r3, [sp, #16]
 8012792:	9a02      	ldr	r2, [sp, #8]
 8012794:	fb10 f001 	smulbb	r0, r0, r1
 8012798:	fb02 8803 	mla	r8, r2, r3, r8
 801279c:	eba0 0108 	sub.w	r1, r0, r8
 80127a0:	fb90 f0fc 	sdiv	r0, r0, ip
 80127a4:	4288      	cmp	r0, r1
 80127a6:	dc20      	bgt.n	80127ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 80127a8:	4551      	cmp	r1, sl
 80127aa:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80127ae:	da03      	bge.n	80127b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 80127b0:	b1d9      	cbz	r1, 80127ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 80127b2:	468a      	mov	sl, r1
 80127b4:	464f      	mov	r7, r9
 80127b6:	4635      	mov	r5, r6
 80127b8:	f109 39ff 	add.w	r9, r9, #4294967295
 80127bc:	f119 0f02 	cmn.w	r9, #2
 80127c0:	d1c6      	bne.n	8012750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80127c2:	4616      	mov	r6, r2
 80127c4:	3201      	adds	r2, #1
 80127c6:	f1a4 0408 	sub.w	r4, r4, #8
 80127ca:	d1b7      	bne.n	801273c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80127cc:	9b01      	ldr	r3, [sp, #4]
 80127ce:	b2ac      	uxth	r4, r5
 80127d0:	00ed      	lsls	r5, r5, #3
 80127d2:	1958      	adds	r0, r3, r5
 80127d4:	1c7b      	adds	r3, r7, #1
 80127d6:	d10b      	bne.n	80127f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 80127d8:	4601      	mov	r1, r0
 80127da:	9803      	ldr	r0, [sp, #12]
 80127dc:	f7ff fb3c 	bl	8011e58 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80127e0:	4621      	mov	r1, r4
 80127e2:	9801      	ldr	r0, [sp, #4]
 80127e4:	f7ff fc8e 	bl	8012104 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80127e8:	e4b6      	b.n	8012158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80127ea:	464f      	mov	r7, r9
 80127ec:	4635      	mov	r5, r6
 80127ee:	e7ed      	b.n	80127cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 80127f0:	9b01      	ldr	r3, [sp, #4]
 80127f2:	00ff      	lsls	r7, r7, #3
 80127f4:	445d      	add	r5, fp
 80127f6:	19d9      	adds	r1, r3, r7
 80127f8:	445f      	add	r7, fp
 80127fa:	f7ff fb2d 	bl	8011e58 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80127fe:	9b03      	ldr	r3, [sp, #12]
 8012800:	cb03      	ldmia	r3!, {r0, r1}
 8012802:	9b03      	ldr	r3, [sp, #12]
 8012804:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8012808:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 801280c:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8012810:	6869      	ldr	r1, [r5, #4]
 8012812:	c303      	stmia	r3!, {r0, r1}
 8012814:	e7e4      	b.n	80127e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 8012816:	bf00      	nop

08012818 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8012818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801281c:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8012820:	b09b      	sub	sp, #108	; 0x6c
 8012822:	4604      	mov	r4, r0
 8012824:	4630      	mov	r0, r6
 8012826:	f7fc fa0c 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 801282a:	4605      	mov	r5, r0
 801282c:	b948      	cbnz	r0, 8012842 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 801282e:	6823      	ldr	r3, [r4, #0]
 8012830:	4620      	mov	r0, r4
 8012832:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012834:	e896 0006 	ldmia.w	r6, {r1, r2}
 8012838:	4798      	blx	r3
 801283a:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 801283e:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8012842:	4bc5      	ldr	r3, [pc, #788]	; (8012b58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 8012844:	681b      	ldr	r3, [r3, #0]
 8012846:	2b00      	cmp	r3, #0
 8012848:	d03f      	beq.n	80128ca <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 801284a:	4dc4      	ldr	r5, [pc, #784]	; (8012b5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801284c:	4628      	mov	r0, r5
 801284e:	f7fc f9f8 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012852:	4606      	mov	r6, r0
 8012854:	2800      	cmp	r0, #0
 8012856:	d138      	bne.n	80128ca <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8012858:	4628      	mov	r0, r5
 801285a:	f7ff f99b 	bl	8011b94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801285e:	6823      	ldr	r3, [r4, #0]
 8012860:	6829      	ldr	r1, [r5, #0]
 8012862:	4620      	mov	r0, r4
 8012864:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012866:	686a      	ldr	r2, [r5, #4]
 8012868:	4798      	blx	r3
 801286a:	802e      	strh	r6, [r5, #0]
 801286c:	806e      	strh	r6, [r5, #2]
 801286e:	80ae      	strh	r6, [r5, #4]
 8012870:	80ee      	strh	r6, [r5, #6]
 8012872:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8012876:	4dba      	ldr	r5, [pc, #744]	; (8012b60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8012878:	4640      	mov	r0, r8
 801287a:	f7ff fbe7 	bl	801204c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801287e:	882e      	ldrh	r6, [r5, #0]
 8012880:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8012884:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8012888:	4633      	mov	r3, r6
 801288a:	42bb      	cmp	r3, r7
 801288c:	d224      	bcs.n	80128d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801288e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8012892:	2907      	cmp	r1, #7
 8012894:	d816      	bhi.n	80128c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8012896:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801289a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 801289e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80128a2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80128a6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80128aa:	1c4a      	adds	r2, r1, #1
 80128ac:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80128b0:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80128b4:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80128b8:	f8a2 a002 	strh.w	sl, [r2, #2]
 80128bc:	f8a2 e004 	strh.w	lr, [r2, #4]
 80128c0:	f8a2 c006 	strh.w	ip, [r2, #6]
 80128c4:	3301      	adds	r3, #1
 80128c6:	b29b      	uxth	r3, r3
 80128c8:	e7df      	b.n	801288a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80128ca:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80128ce:	2b00      	cmp	r3, #0
 80128d0:	d1cf      	bne.n	8012872 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80128d2:	b01b      	add	sp, #108	; 0x6c
 80128d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128d8:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80128dc:	42b3      	cmp	r3, r6
 80128de:	d90c      	bls.n	80128fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80128e0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80128e4:	6822      	ldr	r2, [r4, #0]
 80128e6:	3601      	adds	r6, #1
 80128e8:	4620      	mov	r0, r4
 80128ea:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80128ec:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80128f0:	b2b6      	uxth	r6, r6
 80128f2:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80128f6:	47b8      	blx	r7
 80128f8:	e7ee      	b.n	80128d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80128fa:	4a9a      	ldr	r2, [pc, #616]	; (8012b64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80128fc:	6813      	ldr	r3, [r2, #0]
 80128fe:	4691      	mov	r9, r2
 8012900:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8012904:	2b01      	cmp	r3, #1
 8012906:	f040 80e0 	bne.w	8012aca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 801290a:	8829      	ldrh	r1, [r5, #0]
 801290c:	2600      	movs	r6, #0
 801290e:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8012912:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8012916:	33ae      	adds	r3, #174	; 0xae
 8012918:	428f      	cmp	r7, r1
 801291a:	f103 0308 	add.w	r3, r3, #8
 801291e:	dd0a      	ble.n	8012936 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8012920:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8012924:	3101      	adds	r1, #1
 8012926:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 801292a:	4402      	add	r2, r0
 801292c:	b212      	sxth	r2, r2
 801292e:	4296      	cmp	r6, r2
 8012930:	bfb8      	it	lt
 8012932:	4616      	movlt	r6, r2
 8012934:	e7f0      	b.n	8012918 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8012936:	4b8c      	ldr	r3, [pc, #560]	; (8012b68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8012938:	f8df 9228 	ldr.w	r9, [pc, #552]	; 8012b64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 801293c:	881b      	ldrh	r3, [r3, #0]
 801293e:	2b0f      	cmp	r3, #15
 8012940:	bf8c      	ite	hi
 8012942:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8012946:	f04f 0b01 	movls.w	fp, #1
 801294a:	2300      	movs	r3, #0
 801294c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8012950:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8012954:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8012958:	4b82      	ldr	r3, [pc, #520]	; (8012b64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 801295a:	4438      	add	r0, r7
 801295c:	b207      	sxth	r7, r0
 801295e:	6818      	ldr	r0, [r3, #0]
 8012960:	42b7      	cmp	r7, r6
 8012962:	6803      	ldr	r3, [r0, #0]
 8012964:	f280 8083 	bge.w	8012a6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 8012968:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801296c:	4798      	blx	r3
 801296e:	eb07 030b 	add.w	r3, r7, fp
 8012972:	4298      	cmp	r0, r3
 8012974:	da07      	bge.n	8012986 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8012976:	42b0      	cmp	r0, r6
 8012978:	da05      	bge.n	8012986 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 801297a:	4287      	cmp	r7, r0
 801297c:	dd6c      	ble.n	8012a58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 801297e:	2f00      	cmp	r7, #0
 8012980:	dd6a      	ble.n	8012a58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8012982:	4630      	mov	r0, r6
 8012984:	e004      	b.n	8012990 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 8012986:	4287      	cmp	r7, r0
 8012988:	dcfb      	bgt.n	8012982 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 801298a:	42b0      	cmp	r0, r6
 801298c:	bfa8      	it	ge
 801298e:	4630      	movge	r0, r6
 8012990:	4b76      	ldr	r3, [pc, #472]	; (8012b6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8012992:	1bc0      	subs	r0, r0, r7
 8012994:	2200      	movs	r2, #0
 8012996:	f8ad 7016 	strh.w	r7, [sp, #22]
 801299a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801299e:	882f      	ldrh	r7, [r5, #0]
 80129a0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80129a4:	f8ad 3018 	strh.w	r3, [sp, #24]
 80129a8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80129ac:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80129b0:	42bb      	cmp	r3, r7
 80129b2:	d9cd      	bls.n	8012950 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 80129b4:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80129b8:	ab07      	add	r3, sp, #28
 80129ba:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80129be:	6851      	ldr	r1, [r2, #4]
 80129c0:	c303      	stmia	r3!, {r0, r1}
 80129c2:	a905      	add	r1, sp, #20
 80129c4:	a807      	add	r0, sp, #28
 80129c6:	f7ff f9af 	bl	8011d28 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80129ca:	2800      	cmp	r0, #0
 80129cc:	d04c      	beq.n	8012a68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 80129ce:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80129d2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80129d6:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80129da:	4686      	mov	lr, r0
 80129dc:	4290      	cmp	r0, r2
 80129de:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80129e2:	4450      	add	r0, sl
 80129e4:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80129e8:	bfb8      	it	lt
 80129ea:	4696      	movlt	lr, r2
 80129ec:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80129f0:	4452      	add	r2, sl
 80129f2:	b280      	uxth	r0, r0
 80129f4:	4299      	cmp	r1, r3
 80129f6:	468c      	mov	ip, r1
 80129f8:	b292      	uxth	r2, r2
 80129fa:	9302      	str	r3, [sp, #8]
 80129fc:	bfb8      	it	lt
 80129fe:	469c      	movlt	ip, r3
 8012a00:	b203      	sxth	r3, r0
 8012a02:	fa0f fa82 	sxth.w	sl, r2
 8012a06:	f8ad e01c 	strh.w	lr, [sp, #28]
 8012a0a:	f8ad c01e 	strh.w	ip, [sp, #30]
 8012a0e:	4553      	cmp	r3, sl
 8012a10:	bfb8      	it	lt
 8012a12:	4602      	movlt	r2, r0
 8012a14:	9b02      	ldr	r3, [sp, #8]
 8012a16:	eba2 020e 	sub.w	r2, r2, lr
 8012a1a:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012a1e:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8012a22:	4411      	add	r1, r2
 8012a24:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8012a28:	4413      	add	r3, r2
 8012a2a:	b289      	uxth	r1, r1
 8012a2c:	b29b      	uxth	r3, r3
 8012a2e:	b208      	sxth	r0, r1
 8012a30:	b21a      	sxth	r2, r3
 8012a32:	4290      	cmp	r0, r2
 8012a34:	bfb8      	it	lt
 8012a36:	460b      	movlt	r3, r1
 8012a38:	eba3 030c 	sub.w	r3, r3, ip
 8012a3c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012a40:	a807      	add	r0, sp, #28
 8012a42:	f7fc f8fe 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012a46:	b920      	cbnz	r0, 8012a52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 8012a48:	6823      	ldr	r3, [r4, #0]
 8012a4a:	a907      	add	r1, sp, #28
 8012a4c:	4620      	mov	r0, r4
 8012a4e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012a50:	4798      	blx	r3
 8012a52:	3701      	adds	r7, #1
 8012a54:	b2bf      	uxth	r7, r7
 8012a56:	e7a9      	b.n	80129ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 8012a58:	f8d9 0000 	ldr.w	r0, [r9]
 8012a5c:	2101      	movs	r1, #1
 8012a5e:	6803      	ldr	r3, [r0, #0]
 8012a60:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8012a64:	4798      	blx	r3
 8012a66:	e773      	b.n	8012950 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8012a68:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8012a6c:	e7e8      	b.n	8012a40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 8012a6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012a70:	4798      	blx	r3
 8012a72:	4b3f      	ldr	r3, [pc, #252]	; (8012b70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8012a74:	781b      	ldrb	r3, [r3, #0]
 8012a76:	2b00      	cmp	r3, #0
 8012a78:	f43f af2b 	beq.w	80128d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8012a7c:	2300      	movs	r3, #0
 8012a7e:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8012a82:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8012a86:	882b      	ldrh	r3, [r5, #0]
 8012a88:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8012a8c:	42ab      	cmp	r3, r5
 8012a8e:	f4bf af20 	bcs.w	80128d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8012a92:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8012a96:	2907      	cmp	r1, #7
 8012a98:	d814      	bhi.n	8012ac4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 8012a9a:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8012a9e:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8012aa2:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8012aa6:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8012aaa:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8012aae:	1c4a      	adds	r2, r1, #1
 8012ab0:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8012ab4:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8012ab8:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8012abc:	f8a2 c002 	strh.w	ip, [r2, #2]
 8012ac0:	8097      	strh	r7, [r2, #4]
 8012ac2:	80d6      	strh	r6, [r2, #6]
 8012ac4:	3301      	adds	r3, #1
 8012ac6:	b29b      	uxth	r3, r3
 8012ac8:	e7e0      	b.n	8012a8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 8012aca:	2b02      	cmp	r3, #2
 8012acc:	f040 8133 	bne.w	8012d36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 8012ad0:	4b28      	ldr	r3, [pc, #160]	; (8012b74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8012ad2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8012ad6:	781b      	ldrb	r3, [r3, #0]
 8012ad8:	2b01      	cmp	r3, #1
 8012ada:	f000 8098 	beq.w	8012c0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8012ade:	882a      	ldrh	r2, [r5, #0]
 8012ae0:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8012ae4:	3201      	adds	r2, #1
 8012ae6:	b292      	uxth	r2, r2
 8012ae8:	2900      	cmp	r1, #0
 8012aea:	d0c2      	beq.n	8012a72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8012aec:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8012af0:	4694      	mov	ip, r2
 8012af2:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8012af6:	f04f 0900 	mov.w	r9, #0
 8012afa:	441e      	add	r6, r3
 8012afc:	b236      	sxth	r6, r6
 8012afe:	fa1f f38c 	uxth.w	r3, ip
 8012b02:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8012b06:	4299      	cmp	r1, r3
 8012b08:	f240 80be 	bls.w	8012c88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 8012b0c:	4427      	add	r7, r4
 8012b0e:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8012b12:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8012b16:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8012b1a:	4283      	cmp	r3, r0
 8012b1c:	f340 80a0 	ble.w	8012c60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 8012b20:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8012b24:	46e1      	mov	r9, ip
 8012b26:	4406      	add	r6, r0
 8012b28:	b236      	sxth	r6, r6
 8012b2a:	429e      	cmp	r6, r3
 8012b2c:	bfa8      	it	ge
 8012b2e:	461e      	movge	r6, r3
 8012b30:	f10c 0c01 	add.w	ip, ip, #1
 8012b34:	e7e3      	b.n	8012afe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 8012b36:	d10a      	bne.n	8012b4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 8012b38:	4562      	cmp	r2, ip
 8012b3a:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8012b3e:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8012b42:	bfb8      	it	lt
 8012b44:	4662      	movlt	r2, ip
 8012b46:	4288      	cmp	r0, r1
 8012b48:	bfb8      	it	lt
 8012b4a:	461f      	movlt	r7, r3
 8012b4c:	e086      	b.n	8012c5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8012b4e:	428a      	cmp	r2, r1
 8012b50:	bfb8      	it	lt
 8012b52:	460a      	movlt	r2, r1
 8012b54:	e082      	b.n	8012c5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8012b56:	bf00      	nop
 8012b58:	20032464 	.word	0x20032464
 8012b5c:	20032470 	.word	0x20032470
 8012b60:	20000040 	.word	0x20000040
 8012b64:	2003242c 	.word	0x2003242c
 8012b68:	20032422 	.word	0x20032422
 8012b6c:	20032420 	.word	0x20032420
 8012b70:	2003242a 	.word	0x2003242a
 8012b74:	20032424 	.word	0x20032424
 8012b78:	19a1      	adds	r1, r4, r6
 8012b7a:	ab07      	add	r3, sp, #28
 8012b7c:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8012b80:	6849      	ldr	r1, [r1, #4]
 8012b82:	c303      	stmia	r3!, {r0, r1}
 8012b84:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8012b88:	a807      	add	r0, sp, #28
 8012b8a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8012b8e:	2b13      	cmp	r3, #19
 8012b90:	440b      	add	r3, r1
 8012b92:	bfd8      	it	le
 8012b94:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8012b98:	1a9b      	subs	r3, r3, r2
 8012b9a:	f8ad 201c 	strh.w	r2, [sp, #28]
 8012b9e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012ba2:	f7ff f811 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012ba6:	a807      	add	r0, sp, #28
 8012ba8:	f7fc f84b 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012bac:	bb78      	cbnz	r0, 8012c0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8012bae:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8012bb2:	4426      	add	r6, r4
 8012bb4:	f8d9 0000 	ldr.w	r0, [r9]
 8012bb8:	f1bc 0f14 	cmp.w	ip, #20
 8012bbc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012bc0:	f8d0 e000 	ldr.w	lr, [r0]
 8012bc4:	bfa8      	it	ge
 8012bc6:	f04f 0c14 	movge.w	ip, #20
 8012bca:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8012bce:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8012bd2:	fa1f fc8c 	uxth.w	ip, ip
 8012bd6:	f8cd c000 	str.w	ip, [sp]
 8012bda:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8012bde:	47d8      	blx	fp
 8012be0:	4683      	mov	fp, r0
 8012be2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8012be6:	a807      	add	r0, sp, #28
 8012be8:	f7fe ffd4 	bl	8011b94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8012bec:	6823      	ldr	r3, [r4, #0]
 8012bee:	4620      	mov	r0, r4
 8012bf0:	a907      	add	r1, sp, #28
 8012bf2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012bf4:	4798      	blx	r3
 8012bf6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8012bfa:	eba0 000b 	sub.w	r0, r0, fp
 8012bfe:	b200      	sxth	r0, r0
 8012c00:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8012c04:	b918      	cbnz	r0, 8012c0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8012c06:	b2b9      	uxth	r1, r7
 8012c08:	4650      	mov	r0, sl
 8012c0a:	f7ff fa7b 	bl	8012104 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012c0e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8012c12:	f1bb 0f00 	cmp.w	fp, #0
 8012c16:	f43f af2c 	beq.w	8012a72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8012c1a:	882b      	ldrh	r3, [r5, #0]
 8012c1c:	2700      	movs	r7, #0
 8012c1e:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8012c22:	3301      	adds	r3, #1
 8012c24:	b29b      	uxth	r3, r3
 8012c26:	b299      	uxth	r1, r3
 8012c28:	00fe      	lsls	r6, r7, #3
 8012c2a:	458b      	cmp	fp, r1
 8012c2c:	d9a4      	bls.n	8012b78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 8012c2e:	4426      	add	r6, r4
 8012c30:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8012c34:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8012c38:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8012c3c:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8012c40:	4408      	add	r0, r1
 8012c42:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8012c46:	4461      	add	r1, ip
 8012c48:	b200      	sxth	r0, r0
 8012c4a:	b209      	sxth	r1, r1
 8012c4c:	4288      	cmp	r0, r1
 8012c4e:	f6bf af72 	bge.w	8012b36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 8012c52:	4584      	cmp	ip, r0
 8012c54:	4662      	mov	r2, ip
 8012c56:	461f      	mov	r7, r3
 8012c58:	bfb8      	it	lt
 8012c5a:	4602      	movlt	r2, r0
 8012c5c:	3301      	adds	r3, #1
 8012c5e:	e7e2      	b.n	8012c26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 8012c60:	d10e      	bne.n	8012c80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 8012c62:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8012c66:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8012c6a:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8012c6e:	4473      	add	r3, lr
 8012c70:	b21b      	sxth	r3, r3
 8012c72:	429e      	cmp	r6, r3
 8012c74:	bfa8      	it	ge
 8012c76:	461e      	movge	r6, r3
 8012c78:	4287      	cmp	r7, r0
 8012c7a:	bfb8      	it	lt
 8012c7c:	46e1      	movlt	r9, ip
 8012c7e:	e757      	b.n	8012b30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8012c80:	4286      	cmp	r6, r0
 8012c82:	bfa8      	it	ge
 8012c84:	4606      	movge	r6, r0
 8012c86:	e753      	b.n	8012b30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8012c88:	eb0a 0007 	add.w	r0, sl, r7
 8012c8c:	4427      	add	r7, r4
 8012c8e:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8012c92:	f1bb 0f13 	cmp.w	fp, #19
 8012c96:	bfdc      	itt	le
 8012c98:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8012c9c:	445e      	addle	r6, fp
 8012c9e:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8012ca2:	bfd8      	it	le
 8012ca4:	b236      	sxthle	r6, r6
 8012ca6:	f7fb ffcc 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012caa:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8012cae:	2800      	cmp	r0, #0
 8012cb0:	f47f af1a 	bne.w	8012ae8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 8012cb4:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8012cb8:	fa1f fb8b 	uxth.w	fp, fp
 8012cbc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8012cc0:	1ab6      	subs	r6, r6, r2
 8012cc2:	4829      	ldr	r0, [pc, #164]	; (8012d68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 8012cc4:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8012cc8:	2e14      	cmp	r6, #20
 8012cca:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8012cce:	6800      	ldr	r0, [r0, #0]
 8012cd0:	bfa8      	it	ge
 8012cd2:	2614      	movge	r6, #20
 8012cd4:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012cd8:	f8ad 201e 	strh.w	r2, [sp, #30]
 8012cdc:	b289      	uxth	r1, r1
 8012cde:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012ce2:	b2b6      	uxth	r6, r6
 8012ce4:	f8d0 c000 	ldr.w	ip, [r0]
 8012ce8:	b292      	uxth	r2, r2
 8012cea:	455e      	cmp	r6, fp
 8012cec:	bf94      	ite	ls
 8012cee:	9600      	strls	r6, [sp, #0]
 8012cf0:	f8cd b000 	strhi.w	fp, [sp]
 8012cf4:	b29b      	uxth	r3, r3
 8012cf6:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8012cfa:	47b0      	blx	r6
 8012cfc:	6823      	ldr	r3, [r4, #0]
 8012cfe:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8012d02:	a907      	add	r1, sp, #28
 8012d04:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012d06:	4620      	mov	r0, r4
 8012d08:	4798      	blx	r3
 8012d0a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8012d0e:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8012d12:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8012d16:	1a5b      	subs	r3, r3, r1
 8012d18:	440a      	add	r2, r1
 8012d1a:	b21b      	sxth	r3, r3
 8012d1c:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8012d20:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8012d24:	2b00      	cmp	r3, #0
 8012d26:	f47f aeda 	bne.w	8012ade <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 8012d2a:	fa1f f189 	uxth.w	r1, r9
 8012d2e:	4650      	mov	r0, sl
 8012d30:	f7ff f9e8 	bl	8012104 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012d34:	e6d3      	b.n	8012ade <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 8012d36:	882e      	ldrh	r6, [r5, #0]
 8012d38:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8012d3c:	42b3      	cmp	r3, r6
 8012d3e:	f67f ae98 	bls.w	8012a72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8012d42:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8012d46:	ab07      	add	r3, sp, #28
 8012d48:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8012d4c:	6851      	ldr	r1, [r2, #4]
 8012d4e:	c303      	stmia	r3!, {r0, r1}
 8012d50:	a807      	add	r0, sp, #28
 8012d52:	f7fb ff76 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012d56:	b920      	cbnz	r0, 8012d62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 8012d58:	6823      	ldr	r3, [r4, #0]
 8012d5a:	a907      	add	r1, sp, #28
 8012d5c:	4620      	mov	r0, r4
 8012d5e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012d60:	4798      	blx	r3
 8012d62:	3601      	adds	r6, #1
 8012d64:	b2b6      	uxth	r6, r6
 8012d66:	e7e7      	b.n	8012d38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 8012d68:	2003242c 	.word	0x2003242c

08012d6c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8012d6c:	4b03      	ldr	r3, [pc, #12]	; (8012d7c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8012d6e:	2200      	movs	r2, #0
 8012d70:	801a      	strh	r2, [r3, #0]
 8012d72:	805a      	strh	r2, [r3, #2]
 8012d74:	809a      	strh	r2, [r3, #4]
 8012d76:	80da      	strh	r2, [r3, #6]
 8012d78:	4770      	bx	lr
 8012d7a:	bf00      	nop
 8012d7c:	20032470 	.word	0x20032470

08012d80 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8012d80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d84:	b09d      	sub	sp, #116	; 0x74
 8012d86:	4606      	mov	r6, r0
 8012d88:	4614      	mov	r4, r2
 8012d8a:	468a      	mov	sl, r1
 8012d8c:	a803      	add	r0, sp, #12
 8012d8e:	461d      	mov	r5, r3
 8012d90:	f000 fd72 	bl	8013878 <_ZN8touchgfx12TextProviderC1Ev>
 8012d94:	6833      	ldr	r3, [r6, #0]
 8012d96:	4630      	mov	r0, r6
 8012d98:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8012d9c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012d9e:	4798      	blx	r3
 8012da0:	6833      	ldr	r3, [r6, #0]
 8012da2:	4607      	mov	r7, r0
 8012da4:	4630      	mov	r0, r6
 8012da6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012da8:	4798      	blx	r3
 8012daa:	462a      	mov	r2, r5
 8012dac:	2500      	movs	r5, #0
 8012dae:	4621      	mov	r1, r4
 8012db0:	9000      	str	r0, [sp, #0]
 8012db2:	463b      	mov	r3, r7
 8012db4:	462c      	mov	r4, r5
 8012db6:	46a9      	mov	r9, r5
 8012db8:	46a8      	mov	r8, r5
 8012dba:	a803      	add	r0, sp, #12
 8012dbc:	f000 fdb7 	bl	801392e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012dc0:	2300      	movs	r3, #0
 8012dc2:	9302      	str	r3, [sp, #8]
 8012dc4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012dc8:	429c      	cmp	r4, r3
 8012dca:	d002      	beq.n	8012dd2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8012dcc:	455c      	cmp	r4, fp
 8012dce:	bf18      	it	ne
 8012dd0:	4625      	movne	r5, r4
 8012dd2:	ab02      	add	r3, sp, #8
 8012dd4:	4632      	mov	r2, r6
 8012dd6:	4651      	mov	r1, sl
 8012dd8:	a803      	add	r0, sp, #12
 8012dda:	f001 f8ad 	bl	8013f38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012dde:	4604      	mov	r4, r0
 8012de0:	b108      	cbz	r0, 8012de6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8012de2:	280a      	cmp	r0, #10
 8012de4:	d10a      	bne.n	8012dfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8012de6:	45c1      	cmp	r9, r8
 8012de8:	bf38      	it	cc
 8012dea:	46c1      	movcc	r9, r8
 8012dec:	f04f 0800 	mov.w	r8, #0
 8012df0:	2c00      	cmp	r4, #0
 8012df2:	d1e5      	bne.n	8012dc0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8012df4:	4648      	mov	r0, r9
 8012df6:	b01d      	add	sp, #116	; 0x74
 8012df8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012dfc:	9a02      	ldr	r2, [sp, #8]
 8012dfe:	2a00      	cmp	r2, #0
 8012e00:	d0de      	beq.n	8012dc0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8012e02:	7b57      	ldrb	r7, [r2, #13]
 8012e04:	4629      	mov	r1, r5
 8012e06:	6833      	ldr	r3, [r6, #0]
 8012e08:	007f      	lsls	r7, r7, #1
 8012e0a:	8894      	ldrh	r4, [r2, #4]
 8012e0c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012e0e:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8012e12:	7a97      	ldrb	r7, [r2, #10]
 8012e14:	4307      	orrs	r7, r0
 8012e16:	4630      	mov	r0, r6
 8012e18:	4798      	blx	r3
 8012e1a:	4438      	add	r0, r7
 8012e1c:	4480      	add	r8, r0
 8012e1e:	fa1f f888 	uxth.w	r8, r8
 8012e22:	e7e5      	b.n	8012df0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08012e24 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8012e24:	b508      	push	{r3, lr}
 8012e26:	6803      	ldr	r3, [r0, #0]
 8012e28:	68db      	ldr	r3, [r3, #12]
 8012e2a:	4798      	blx	r3
 8012e2c:	b128      	cbz	r0, 8012e3a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8012e2e:	7b43      	ldrb	r3, [r0, #13]
 8012e30:	7a80      	ldrb	r0, [r0, #10]
 8012e32:	005b      	lsls	r3, r3, #1
 8012e34:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012e38:	4318      	orrs	r0, r3
 8012e3a:	bd08      	pop	{r3, pc}

08012e3c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8012e3c:	b40e      	push	{r1, r2, r3}
 8012e3e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012e40:	b09e      	sub	sp, #120	; 0x78
 8012e42:	4605      	mov	r5, r0
 8012e44:	ab23      	add	r3, sp, #140	; 0x8c
 8012e46:	a805      	add	r0, sp, #20
 8012e48:	f853 4b04 	ldr.w	r4, [r3], #4
 8012e4c:	9303      	str	r3, [sp, #12]
 8012e4e:	f000 fd13 	bl	8013878 <_ZN8touchgfx12TextProviderC1Ev>
 8012e52:	682b      	ldr	r3, [r5, #0]
 8012e54:	4628      	mov	r0, r5
 8012e56:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012e58:	4798      	blx	r3
 8012e5a:	682b      	ldr	r3, [r5, #0]
 8012e5c:	4606      	mov	r6, r0
 8012e5e:	4628      	mov	r0, r5
 8012e60:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012e62:	4798      	blx	r3
 8012e64:	4633      	mov	r3, r6
 8012e66:	4621      	mov	r1, r4
 8012e68:	ae1e      	add	r6, sp, #120	; 0x78
 8012e6a:	2400      	movs	r4, #0
 8012e6c:	9000      	str	r0, [sp, #0]
 8012e6e:	9a03      	ldr	r2, [sp, #12]
 8012e70:	a805      	add	r0, sp, #20
 8012e72:	f000 fd5c 	bl	801392e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012e76:	f846 4d68 	str.w	r4, [r6, #-104]!
 8012e7a:	462a      	mov	r2, r5
 8012e7c:	4633      	mov	r3, r6
 8012e7e:	4621      	mov	r1, r4
 8012e80:	a805      	add	r0, sp, #20
 8012e82:	f001 f859 	bl	8013f38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012e86:	b300      	cbz	r0, 8012eca <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 8012e88:	280a      	cmp	r0, #10
 8012e8a:	d01a      	beq.n	8012ec2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8012e8c:	9f04      	ldr	r7, [sp, #16]
 8012e8e:	b1c7      	cbz	r7, 8012ec2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8012e90:	7b78      	ldrb	r0, [r7, #13]
 8012e92:	7a3b      	ldrb	r3, [r7, #8]
 8012e94:	00c1      	lsls	r1, r0, #3
 8012e96:	88ea      	ldrh	r2, [r5, #6]
 8012e98:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012e9c:	4319      	orrs	r1, r3
 8012e9e:	0643      	lsls	r3, r0, #25
 8012ea0:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8012ea4:	bf48      	it	mi
 8012ea6:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8012eaa:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8012eae:	bf48      	it	mi
 8012eb0:	b219      	sxthmi	r1, r3
 8012eb2:	79fb      	ldrb	r3, [r7, #7]
 8012eb4:	4303      	orrs	r3, r0
 8012eb6:	4413      	add	r3, r2
 8012eb8:	1a5b      	subs	r3, r3, r1
 8012eba:	b21b      	sxth	r3, r3
 8012ebc:	429c      	cmp	r4, r3
 8012ebe:	bfb8      	it	lt
 8012ec0:	461c      	movlt	r4, r3
 8012ec2:	4633      	mov	r3, r6
 8012ec4:	462a      	mov	r2, r5
 8012ec6:	2100      	movs	r1, #0
 8012ec8:	e7da      	b.n	8012e80 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8012eca:	b2a0      	uxth	r0, r4
 8012ecc:	b01e      	add	sp, #120	; 0x78
 8012ece:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8012ed2:	b003      	add	sp, #12
 8012ed4:	4770      	bx	lr

08012ed6 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8012ed6:	7a43      	ldrb	r3, [r0, #9]
 8012ed8:	8880      	ldrh	r0, [r0, #4]
 8012eda:	4418      	add	r0, r3
 8012edc:	b280      	uxth	r0, r0
 8012ede:	4770      	bx	lr

08012ee0 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8012ee0:	6803      	ldr	r3, [r0, #0]
 8012ee2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012ee4:	4718      	bx	r3

08012ee6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8012ee6:	b40e      	push	{r1, r2, r3}
 8012ee8:	b570      	push	{r4, r5, r6, lr}
 8012eea:	b09d      	sub	sp, #116	; 0x74
 8012eec:	4604      	mov	r4, r0
 8012eee:	ab21      	add	r3, sp, #132	; 0x84
 8012ef0:	a803      	add	r0, sp, #12
 8012ef2:	f853 5b04 	ldr.w	r5, [r3], #4
 8012ef6:	9302      	str	r3, [sp, #8]
 8012ef8:	f000 fcbe 	bl	8013878 <_ZN8touchgfx12TextProviderC1Ev>
 8012efc:	6823      	ldr	r3, [r4, #0]
 8012efe:	4620      	mov	r0, r4
 8012f00:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012f02:	4798      	blx	r3
 8012f04:	6823      	ldr	r3, [r4, #0]
 8012f06:	4606      	mov	r6, r0
 8012f08:	4620      	mov	r0, r4
 8012f0a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012f0c:	2401      	movs	r4, #1
 8012f0e:	4798      	blx	r3
 8012f10:	4633      	mov	r3, r6
 8012f12:	9000      	str	r0, [sp, #0]
 8012f14:	4629      	mov	r1, r5
 8012f16:	9a02      	ldr	r2, [sp, #8]
 8012f18:	a803      	add	r0, sp, #12
 8012f1a:	f000 fd08 	bl	801392e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012f1e:	a803      	add	r0, sp, #12
 8012f20:	f001 f8d6 	bl	80140d0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012f24:	b2a3      	uxth	r3, r4
 8012f26:	b138      	cbz	r0, 8012f38 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 8012f28:	280a      	cmp	r0, #10
 8012f2a:	a803      	add	r0, sp, #12
 8012f2c:	bf04      	itt	eq
 8012f2e:	3301      	addeq	r3, #1
 8012f30:	b21c      	sxtheq	r4, r3
 8012f32:	f001 f8cd 	bl	80140d0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012f36:	e7f5      	b.n	8012f24 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8012f38:	4618      	mov	r0, r3
 8012f3a:	b01d      	add	sp, #116	; 0x74
 8012f3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012f40:	b003      	add	sp, #12
 8012f42:	4770      	bx	lr

08012f44 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8012f44:	b40e      	push	{r1, r2, r3}
 8012f46:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012f48:	b09e      	sub	sp, #120	; 0x78
 8012f4a:	4604      	mov	r4, r0
 8012f4c:	ab23      	add	r3, sp, #140	; 0x8c
 8012f4e:	a805      	add	r0, sp, #20
 8012f50:	f853 5b04 	ldr.w	r5, [r3], #4
 8012f54:	9303      	str	r3, [sp, #12]
 8012f56:	f000 fc8f 	bl	8013878 <_ZN8touchgfx12TextProviderC1Ev>
 8012f5a:	6823      	ldr	r3, [r4, #0]
 8012f5c:	4620      	mov	r0, r4
 8012f5e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012f60:	4798      	blx	r3
 8012f62:	6823      	ldr	r3, [r4, #0]
 8012f64:	4606      	mov	r6, r0
 8012f66:	4620      	mov	r0, r4
 8012f68:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012f6a:	4798      	blx	r3
 8012f6c:	4633      	mov	r3, r6
 8012f6e:	4629      	mov	r1, r5
 8012f70:	9000      	str	r0, [sp, #0]
 8012f72:	9a03      	ldr	r2, [sp, #12]
 8012f74:	a805      	add	r0, sp, #20
 8012f76:	f000 fcda 	bl	801392e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012f7a:	ad1e      	add	r5, sp, #120	; 0x78
 8012f7c:	2100      	movs	r1, #0
 8012f7e:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8012f82:	4622      	mov	r2, r4
 8012f84:	a805      	add	r0, sp, #20
 8012f86:	f845 1d68 	str.w	r1, [r5, #-104]!
 8012f8a:	462b      	mov	r3, r5
 8012f8c:	f000 ffd4 	bl	8013f38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012f90:	b1d8      	cbz	r0, 8012fca <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8012f92:	280a      	cmp	r0, #10
 8012f94:	d012      	beq.n	8012fbc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8012f96:	9804      	ldr	r0, [sp, #16]
 8012f98:	b180      	cbz	r0, 8012fbc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8012f9a:	7b47      	ldrb	r7, [r0, #13]
 8012f9c:	88e2      	ldrh	r2, [r4, #6]
 8012f9e:	00fb      	lsls	r3, r7, #3
 8012fa0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012fa4:	7a03      	ldrb	r3, [r0, #8]
 8012fa6:	430b      	orrs	r3, r1
 8012fa8:	0679      	lsls	r1, r7, #25
 8012faa:	bf44      	itt	mi
 8012fac:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012fb0:	b21b      	sxthmi	r3, r3
 8012fb2:	1ad3      	subs	r3, r2, r3
 8012fb4:	b21b      	sxth	r3, r3
 8012fb6:	429e      	cmp	r6, r3
 8012fb8:	bfa8      	it	ge
 8012fba:	461e      	movge	r6, r3
 8012fbc:	462b      	mov	r3, r5
 8012fbe:	4622      	mov	r2, r4
 8012fc0:	2100      	movs	r1, #0
 8012fc2:	a805      	add	r0, sp, #20
 8012fc4:	f000 ffb8 	bl	8013f38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012fc8:	e7e2      	b.n	8012f90 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8012fca:	4630      	mov	r0, r6
 8012fcc:	b01e      	add	sp, #120	; 0x78
 8012fce:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8012fd2:	b003      	add	sp, #12
 8012fd4:	4770      	bx	lr

08012fd6 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8012fd6:	b513      	push	{r0, r1, r4, lr}
 8012fd8:	6803      	ldr	r3, [r0, #0]
 8012fda:	2400      	movs	r4, #0
 8012fdc:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8012fe0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012fe4:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012fe8:	4669      	mov	r1, sp
 8012fea:	691b      	ldr	r3, [r3, #16]
 8012fec:	9400      	str	r4, [sp, #0]
 8012fee:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012ff2:	4798      	blx	r3
 8012ff4:	b002      	add	sp, #8
 8012ff6:	bd10      	pop	{r4, pc}

08012ff8 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8012ff8:	b538      	push	{r3, r4, r5, lr}
 8012ffa:	680b      	ldr	r3, [r1, #0]
 8012ffc:	460c      	mov	r4, r1
 8012ffe:	4605      	mov	r5, r0
 8013000:	68db      	ldr	r3, [r3, #12]
 8013002:	4798      	blx	r3
 8013004:	6823      	ldr	r3, [r4, #0]
 8013006:	4620      	mov	r0, r4
 8013008:	4629      	mov	r1, r5
 801300a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801300c:	4798      	blx	r3
 801300e:	4628      	mov	r0, r5
 8013010:	bd38      	pop	{r3, r4, r5, pc}

08013012 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8013012:	b410      	push	{r4}
 8013014:	880a      	ldrh	r2, [r1, #0]
 8013016:	8884      	ldrh	r4, [r0, #4]
 8013018:	4422      	add	r2, r4
 801301a:	800a      	strh	r2, [r1, #0]
 801301c:	884a      	ldrh	r2, [r1, #2]
 801301e:	88c4      	ldrh	r4, [r0, #6]
 8013020:	4422      	add	r2, r4
 8013022:	804a      	strh	r2, [r1, #2]
 8013024:	6940      	ldr	r0, [r0, #20]
 8013026:	b120      	cbz	r0, 8013032 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8013028:	6803      	ldr	r3, [r0, #0]
 801302a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801302e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013030:	4718      	bx	r3
 8013032:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013036:	4770      	bx	lr

08013038 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8013038:	b570      	push	{r4, r5, r6, lr}
 801303a:	8882      	ldrh	r2, [r0, #4]
 801303c:	460c      	mov	r4, r1
 801303e:	880b      	ldrh	r3, [r1, #0]
 8013040:	4605      	mov	r5, r0
 8013042:	4413      	add	r3, r2
 8013044:	800b      	strh	r3, [r1, #0]
 8013046:	884b      	ldrh	r3, [r1, #2]
 8013048:	88c2      	ldrh	r2, [r0, #6]
 801304a:	4413      	add	r3, r2
 801304c:	804b      	strh	r3, [r1, #2]
 801304e:	1d01      	adds	r1, r0, #4
 8013050:	4620      	mov	r0, r4
 8013052:	f7fb fdb3 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 8013056:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801305a:	2b00      	cmp	r3, #0
 801305c:	dd0b      	ble.n	8013076 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801305e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8013062:	2b00      	cmp	r3, #0
 8013064:	dd07      	ble.n	8013076 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8013066:	6968      	ldr	r0, [r5, #20]
 8013068:	b128      	cbz	r0, 8013076 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801306a:	6803      	ldr	r3, [r0, #0]
 801306c:	4621      	mov	r1, r4
 801306e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013070:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013074:	4718      	bx	r3
 8013076:	bd70      	pop	{r4, r5, r6, pc}

08013078 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8013078:	b570      	push	{r4, r5, r6, lr}
 801307a:	8882      	ldrh	r2, [r0, #4]
 801307c:	460c      	mov	r4, r1
 801307e:	880b      	ldrh	r3, [r1, #0]
 8013080:	4605      	mov	r5, r0
 8013082:	4413      	add	r3, r2
 8013084:	800b      	strh	r3, [r1, #0]
 8013086:	884b      	ldrh	r3, [r1, #2]
 8013088:	88c2      	ldrh	r2, [r0, #6]
 801308a:	4413      	add	r3, r2
 801308c:	804b      	strh	r3, [r1, #2]
 801308e:	1d01      	adds	r1, r0, #4
 8013090:	4620      	mov	r0, r4
 8013092:	f7fb fd93 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 8013096:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801309a:	2b00      	cmp	r3, #0
 801309c:	dd19      	ble.n	80130d2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801309e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80130a2:	2b00      	cmp	r3, #0
 80130a4:	dd15      	ble.n	80130d2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80130a6:	6968      	ldr	r0, [r5, #20]
 80130a8:	b128      	cbz	r0, 80130b6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80130aa:	6803      	ldr	r3, [r0, #0]
 80130ac:	4621      	mov	r1, r4
 80130ae:	691b      	ldr	r3, [r3, #16]
 80130b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80130b4:	4718      	bx	r3
 80130b6:	4b07      	ldr	r3, [pc, #28]	; (80130d4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80130b8:	681b      	ldr	r3, [r3, #0]
 80130ba:	3304      	adds	r3, #4
 80130bc:	429d      	cmp	r5, r3
 80130be:	d108      	bne.n	80130d2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80130c0:	f7fe ff10 	bl	8011ee4 <_ZN8touchgfx11Application11getInstanceEv>
 80130c4:	6803      	ldr	r3, [r0, #0]
 80130c6:	6821      	ldr	r1, [r4, #0]
 80130c8:	6862      	ldr	r2, [r4, #4]
 80130ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80130cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80130d0:	4718      	bx	r3
 80130d2:	bd70      	pop	{r4, r5, r6, pc}
 80130d4:	20032468 	.word	0x20032468

080130d8 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80130d8:	b570      	push	{r4, r5, r6, lr}
 80130da:	4604      	mov	r4, r0
 80130dc:	4616      	mov	r6, r2
 80130de:	460d      	mov	r5, r1
 80130e0:	b901      	cbnz	r1, 80130e4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80130e2:	b192      	cbz	r2, 801310a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80130e4:	6823      	ldr	r3, [r4, #0]
 80130e6:	4620      	mov	r0, r4
 80130e8:	699b      	ldr	r3, [r3, #24]
 80130ea:	4798      	blx	r3
 80130ec:	88e2      	ldrh	r2, [r4, #6]
 80130ee:	88a1      	ldrh	r1, [r4, #4]
 80130f0:	4620      	mov	r0, r4
 80130f2:	4432      	add	r2, r6
 80130f4:	4429      	add	r1, r5
 80130f6:	b212      	sxth	r2, r2
 80130f8:	b209      	sxth	r1, r1
 80130fa:	f7f6 fff6 	bl	800a0ea <_ZN8touchgfx8Drawable5setXYEss>
 80130fe:	6823      	ldr	r3, [r4, #0]
 8013100:	4620      	mov	r0, r4
 8013102:	699b      	ldr	r3, [r3, #24]
 8013104:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013108:	4718      	bx	r3
 801310a:	bd70      	pop	{r4, r5, r6, pc}

0801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801310c:	b510      	push	{r4, lr}
 801310e:	2300      	movs	r3, #0
 8013110:	4604      	mov	r4, r0
 8013112:	4608      	mov	r0, r1
 8013114:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8013118:	8023      	strh	r3, [r4, #0]
 801311a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801311e:	8063      	strh	r3, [r4, #2]
 8013120:	6803      	ldr	r3, [r0, #0]
 8013122:	80a1      	strh	r1, [r4, #4]
 8013124:	4621      	mov	r1, r4
 8013126:	80e2      	strh	r2, [r4, #6]
 8013128:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801312a:	4798      	blx	r3
 801312c:	4620      	mov	r0, r4
 801312e:	bd10      	pop	{r4, pc}

08013130 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8013130:	b530      	push	{r4, r5, lr}
 8013132:	8083      	strh	r3, [r0, #4]
 8013134:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8013138:	f89d 5018 	ldrb.w	r5, [sp, #24]
 801313c:	80c3      	strh	r3, [r0, #6]
 801313e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8013142:	6141      	str	r1, [r0, #20]
 8013144:	7203      	strb	r3, [r0, #8]
 8013146:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801314a:	8302      	strh	r2, [r0, #24]
 801314c:	7243      	strb	r3, [r0, #9]
 801314e:	7a83      	ldrb	r3, [r0, #10]
 8013150:	f365 0306 	bfi	r3, r5, #0, #7
 8013154:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8013158:	f365 13c7 	bfi	r3, r5, #7, #1
 801315c:	7283      	strb	r3, [r0, #10]
 801315e:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8013162:	72c3      	strb	r3, [r0, #11]
 8013164:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8013168:	7303      	strb	r3, [r0, #12]
 801316a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801316e:	81c3      	strh	r3, [r0, #14]
 8013170:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8013174:	8203      	strh	r3, [r0, #16]
 8013176:	4b01      	ldr	r3, [pc, #4]	; (801317c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8013178:	6003      	str	r3, [r0, #0]
 801317a:	bd30      	pop	{r4, r5, pc}
 801317c:	08026414 	.word	0x08026414

08013180 <_ZNK8touchgfx9ConstFont4findEt>:
 8013180:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013182:	6944      	ldr	r4, [r0, #20]
 8013184:	b3bc      	cbz	r4, 80131f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013186:	88a3      	ldrh	r3, [r4, #4]
 8013188:	8b02      	ldrh	r2, [r0, #24]
 801318a:	1acb      	subs	r3, r1, r3
 801318c:	f102 32ff 	add.w	r2, r2, #4294967295
 8013190:	d431      	bmi.n	80131f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013192:	4293      	cmp	r3, r2
 8013194:	dd0c      	ble.n	80131b0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8013196:	230e      	movs	r3, #14
 8013198:	fb03 4302 	mla	r3, r3, r2, r4
 801319c:	889b      	ldrh	r3, [r3, #4]
 801319e:	1a5b      	subs	r3, r3, r1
 80131a0:	1ad3      	subs	r3, r2, r3
 80131a2:	429a      	cmp	r2, r3
 80131a4:	db27      	blt.n	80131f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80131a6:	2b00      	cmp	r3, #0
 80131a8:	bfbc      	itt	lt
 80131aa:	2302      	movlt	r3, #2
 80131ac:	fb92 f3f3 	sdivlt	r3, r2, r3
 80131b0:	2500      	movs	r5, #0
 80131b2:	260e      	movs	r6, #14
 80131b4:	4295      	cmp	r5, r2
 80131b6:	dc1e      	bgt.n	80131f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80131b8:	fb06 4003 	mla	r0, r6, r3, r4
 80131bc:	8887      	ldrh	r7, [r0, #4]
 80131be:	42b9      	cmp	r1, r7
 80131c0:	d01a      	beq.n	80131f8 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80131c2:	d20d      	bcs.n	80131e0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80131c4:	1e5a      	subs	r2, r3, #1
 80131c6:	4295      	cmp	r5, r2
 80131c8:	dc15      	bgt.n	80131f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80131ca:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80131ce:	1a5b      	subs	r3, r3, r1
 80131d0:	1ad3      	subs	r3, r2, r3
 80131d2:	429a      	cmp	r2, r3
 80131d4:	db0f      	blt.n	80131f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80131d6:	429d      	cmp	r5, r3
 80131d8:	ddec      	ble.n	80131b4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80131da:	1953      	adds	r3, r2, r5
 80131dc:	105b      	asrs	r3, r3, #1
 80131de:	e7e9      	b.n	80131b4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80131e0:	1c5d      	adds	r5, r3, #1
 80131e2:	42aa      	cmp	r2, r5
 80131e4:	db07      	blt.n	80131f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80131e6:	8a43      	ldrh	r3, [r0, #18]
 80131e8:	1acb      	subs	r3, r1, r3
 80131ea:	442b      	add	r3, r5
 80131ec:	429d      	cmp	r5, r3
 80131ee:	dc02      	bgt.n	80131f6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80131f0:	429a      	cmp	r2, r3
 80131f2:	dadf      	bge.n	80131b4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80131f4:	e7f1      	b.n	80131da <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80131f6:	2000      	movs	r0, #0
 80131f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080131fa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80131fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80131fc:	4604      	mov	r4, r0
 80131fe:	4617      	mov	r7, r2
 8013200:	461e      	mov	r6, r3
 8013202:	b911      	cbnz	r1, 801320a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8013204:	2500      	movs	r5, #0
 8013206:	4628      	mov	r0, r5
 8013208:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801320a:	290a      	cmp	r1, #10
 801320c:	d0fa      	beq.n	8013204 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801320e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8013212:	4291      	cmp	r1, r2
 8013214:	d0f6      	beq.n	8013204 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8013216:	f242 020b 	movw	r2, #8203	; 0x200b
 801321a:	4291      	cmp	r1, r2
 801321c:	d0f2      	beq.n	8013204 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801321e:	f7ff ffaf 	bl	8013180 <_ZNK8touchgfx9ConstFont4findEt>
 8013222:	4605      	mov	r5, r0
 8013224:	b950      	cbnz	r0, 801323c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8013226:	6823      	ldr	r3, [r4, #0]
 8013228:	4620      	mov	r0, r4
 801322a:	691b      	ldr	r3, [r3, #16]
 801322c:	4798      	blx	r3
 801322e:	4601      	mov	r1, r0
 8013230:	4620      	mov	r0, r4
 8013232:	f7ff ffa5 	bl	8013180 <_ZNK8touchgfx9ConstFont4findEt>
 8013236:	4605      	mov	r5, r0
 8013238:	2800      	cmp	r0, #0
 801323a:	d0e3      	beq.n	8013204 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801323c:	6823      	ldr	r3, [r4, #0]
 801323e:	4629      	mov	r1, r5
 8013240:	4620      	mov	r0, r4
 8013242:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8013244:	4798      	blx	r3
 8013246:	6038      	str	r0, [r7, #0]
 8013248:	6823      	ldr	r3, [r4, #0]
 801324a:	4620      	mov	r0, r4
 801324c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801324e:	4798      	blx	r3
 8013250:	7030      	strb	r0, [r6, #0]
 8013252:	e7d8      	b.n	8013206 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08013254 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8013254:	2000      	movs	r0, #0
 8013256:	4770      	bx	lr

08013258 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8013258:	2001      	movs	r0, #1
 801325a:	4770      	bx	lr

0801325c <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801325c:	2002      	movs	r0, #2
 801325e:	4770      	bx	lr

08013260 <_ZN8touchgfx12GestureEventD1Ev>:
 8013260:	4770      	bx	lr

08013262 <_ZN8touchgfx9DragEventD1Ev>:
 8013262:	4770      	bx	lr

08013264 <_ZN8touchgfx10ClickEventD1Ev>:
 8013264:	4770      	bx	lr

08013266 <_ZN8touchgfx10ClickEventD0Ev>:
 8013266:	b510      	push	{r4, lr}
 8013268:	4604      	mov	r4, r0
 801326a:	210c      	movs	r1, #12
 801326c:	f00f fad9 	bl	8022822 <_ZdlPvj>
 8013270:	4620      	mov	r0, r4
 8013272:	bd10      	pop	{r4, pc}

08013274 <_ZN8touchgfx9DragEventD0Ev>:
 8013274:	b510      	push	{r4, lr}
 8013276:	4604      	mov	r4, r0
 8013278:	2110      	movs	r1, #16
 801327a:	f00f fad2 	bl	8022822 <_ZdlPvj>
 801327e:	4620      	mov	r0, r4
 8013280:	bd10      	pop	{r4, pc}

08013282 <_ZN8touchgfx12GestureEventD0Ev>:
 8013282:	b510      	push	{r4, lr}
 8013284:	4604      	mov	r4, r0
 8013286:	210c      	movs	r1, #12
 8013288:	f00f facb 	bl	8022822 <_ZdlPvj>
 801328c:	4620      	mov	r0, r4
 801328e:	bd10      	pop	{r4, pc}

08013290 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8013290:	b530      	push	{r4, r5, lr}
 8013292:	460d      	mov	r5, r1
 8013294:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8013296:	b087      	sub	sp, #28
 8013298:	4604      	mov	r4, r0
 801329a:	b301      	cbz	r1, 80132de <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801329c:	a801      	add	r0, sp, #4
 801329e:	f7ff ff35 	bl	801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80132a2:	892a      	ldrh	r2, [r5, #8]
 80132a4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80132a8:	7928      	ldrb	r0, [r5, #4]
 80132aa:	1ad2      	subs	r2, r2, r3
 80132ac:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80132ae:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80132b2:	441a      	add	r2, r3
 80132b4:	896b      	ldrh	r3, [r5, #10]
 80132b6:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80132ba:	f88d 0010 	strb.w	r0, [sp, #16]
 80132be:	1b5b      	subs	r3, r3, r5
 80132c0:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80132c2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80132c4:	442b      	add	r3, r5
 80132c6:	4d07      	ldr	r5, [pc, #28]	; (80132e4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80132c8:	f8ad 1012 	strh.w	r1, [sp, #18]
 80132cc:	a903      	add	r1, sp, #12
 80132ce:	9503      	str	r5, [sp, #12]
 80132d0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80132d4:	f8ad 3016 	strh.w	r3, [sp, #22]
 80132d8:	6803      	ldr	r3, [r0, #0]
 80132da:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80132dc:	4798      	blx	r3
 80132de:	b007      	add	sp, #28
 80132e0:	bd30      	pop	{r4, r5, pc}
 80132e2:	bf00      	nop
 80132e4:	080264a4 	.word	0x080264a4

080132e8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80132e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80132ec:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80132ee:	b08a      	sub	sp, #40	; 0x28
 80132f0:	4604      	mov	r4, r0
 80132f2:	460d      	mov	r5, r1
 80132f4:	b113      	cbz	r3, 80132fc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80132f6:	790b      	ldrb	r3, [r1, #4]
 80132f8:	2b00      	cmp	r3, #0
 80132fa:	d044      	beq.n	8013386 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80132fc:	f104 0804 	add.w	r8, r4, #4
 8013300:	a803      	add	r0, sp, #12
 8013302:	4641      	mov	r1, r8
 8013304:	f7ff ff02 	bl	801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013308:	792b      	ldrb	r3, [r5, #4]
 801330a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801330e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8013312:	b983      	cbnz	r3, 8013336 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8013314:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8013318:	892a      	ldrh	r2, [r5, #8]
 801331a:	88e9      	ldrh	r1, [r5, #6]
 801331c:	4640      	mov	r0, r8
 801331e:	1b92      	subs	r2, r2, r6
 8013320:	9301      	str	r3, [sp, #4]
 8013322:	1bc9      	subs	r1, r1, r7
 8013324:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8013328:	b212      	sxth	r2, r2
 801332a:	9300      	str	r3, [sp, #0]
 801332c:	b209      	sxth	r1, r1
 801332e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8013332:	f7fb fb61 	bl	800e9f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8013336:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8013338:	b329      	cbz	r1, 8013386 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801333a:	a805      	add	r0, sp, #20
 801333c:	f7ff fee6 	bl	801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013340:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013344:	792b      	ldrb	r3, [r5, #4]
 8013346:	a907      	add	r1, sp, #28
 8013348:	1abf      	subs	r7, r7, r2
 801334a:	88ea      	ldrh	r2, [r5, #6]
 801334c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801334e:	4417      	add	r7, r2
 8013350:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8013352:	f88d 3020 	strb.w	r3, [sp, #32]
 8013356:	4417      	add	r7, r2
 8013358:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801335c:	1ab6      	subs	r6, r6, r2
 801335e:	892a      	ldrh	r2, [r5, #8]
 8013360:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8013364:	4416      	add	r6, r2
 8013366:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013368:	4416      	add	r6, r2
 801336a:	4a08      	ldr	r2, [pc, #32]	; (801338c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801336c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8013370:	2600      	movs	r6, #0
 8013372:	9207      	str	r2, [sp, #28]
 8013374:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8013378:	6803      	ldr	r3, [r0, #0]
 801337a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801337c:	4798      	blx	r3
 801337e:	792b      	ldrb	r3, [r5, #4]
 8013380:	b10b      	cbz	r3, 8013386 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8013382:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8013386:	b00a      	add	sp, #40	; 0x28
 8013388:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801338c:	0802647c 	.word	0x0802647c

08013390 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8013390:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013394:	460c      	mov	r4, r1
 8013396:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8013398:	b088      	sub	sp, #32
 801339a:	4605      	mov	r5, r0
 801339c:	2900      	cmp	r1, #0
 801339e:	d06d      	beq.n	801347c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80133a0:	4668      	mov	r0, sp
 80133a2:	f7ff feb3 	bl	801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80133a6:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80133a8:	88e3      	ldrh	r3, [r4, #6]
 80133aa:	f9bd 8000 	ldrsh.w	r8, [sp]
 80133ae:	440b      	add	r3, r1
 80133b0:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80133b4:	b21b      	sxth	r3, r3
 80133b6:	4543      	cmp	r3, r8
 80133b8:	db31      	blt.n	801341e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80133ba:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80133be:	44c4      	add	ip, r8
 80133c0:	fa0f fc8c 	sxth.w	ip, ip
 80133c4:	4563      	cmp	r3, ip
 80133c6:	da2a      	bge.n	801341e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80133c8:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80133ca:	8926      	ldrh	r6, [r4, #8]
 80133cc:	4416      	add	r6, r2
 80133ce:	b236      	sxth	r6, r6
 80133d0:	42be      	cmp	r6, r7
 80133d2:	db24      	blt.n	801341e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80133d4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80133d8:	4438      	add	r0, r7
 80133da:	b200      	sxth	r0, r0
 80133dc:	4286      	cmp	r6, r0
 80133de:	da1e      	bge.n	801341e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80133e0:	8963      	ldrh	r3, [r4, #10]
 80133e2:	4419      	add	r1, r3
 80133e4:	b209      	sxth	r1, r1
 80133e6:	4541      	cmp	r1, r8
 80133e8:	db08      	blt.n	80133fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80133ea:	4561      	cmp	r1, ip
 80133ec:	da06      	bge.n	80133fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80133ee:	89a3      	ldrh	r3, [r4, #12]
 80133f0:	441a      	add	r2, r3
 80133f2:	b212      	sxth	r2, r2
 80133f4:	42ba      	cmp	r2, r7
 80133f6:	db01      	blt.n	80133fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80133f8:	4282      	cmp	r2, r0
 80133fa:	db10      	blt.n	801341e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80133fc:	4b21      	ldr	r3, [pc, #132]	; (8013484 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80133fe:	a904      	add	r1, sp, #16
 8013400:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8013402:	9304      	str	r3, [sp, #16]
 8013404:	2302      	movs	r3, #2
 8013406:	f88d 3014 	strb.w	r3, [sp, #20]
 801340a:	2300      	movs	r3, #0
 801340c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013410:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013414:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013418:	6803      	ldr	r3, [r0, #0]
 801341a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801341c:	4798      	blx	r3
 801341e:	1d29      	adds	r1, r5, #4
 8013420:	a802      	add	r0, sp, #8
 8013422:	f7ff fe73 	bl	801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013426:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801342a:	88e0      	ldrh	r0, [r4, #6]
 801342c:	eba3 0808 	sub.w	r8, r3, r8
 8013430:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013434:	7921      	ldrb	r1, [r4, #4]
 8013436:	fa1f f888 	uxth.w	r8, r8
 801343a:	1bdf      	subs	r7, r3, r7
 801343c:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8013440:	b2bb      	uxth	r3, r7
 8013442:	4440      	add	r0, r8
 8013444:	8922      	ldrh	r2, [r4, #8]
 8013446:	8967      	ldrh	r7, [r4, #10]
 8013448:	4460      	add	r0, ip
 801344a:	89a4      	ldrh	r4, [r4, #12]
 801344c:	441a      	add	r2, r3
 801344e:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8013450:	44b8      	add	r8, r7
 8013452:	4423      	add	r3, r4
 8013454:	f8ad 0016 	strh.w	r0, [sp, #22]
 8013458:	4432      	add	r2, r6
 801345a:	44e0      	add	r8, ip
 801345c:	4433      	add	r3, r6
 801345e:	4c0a      	ldr	r4, [pc, #40]	; (8013488 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8013460:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8013462:	f88d 1014 	strb.w	r1, [sp, #20]
 8013466:	a904      	add	r1, sp, #16
 8013468:	9404      	str	r4, [sp, #16]
 801346a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801346e:	f8ad 801a 	strh.w	r8, [sp, #26]
 8013472:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013476:	6803      	ldr	r3, [r0, #0]
 8013478:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801347a:	4798      	blx	r3
 801347c:	b008      	add	sp, #32
 801347e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013482:	bf00      	nop
 8013484:	0802647c 	.word	0x0802647c
 8013488:	08026490 	.word	0x08026490

0801348c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801348c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801348e:	4604      	mov	r4, r0
 8013490:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8013494:	3201      	adds	r2, #1
 8013496:	d112      	bne.n	80134be <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8013498:	2500      	movs	r5, #0
 801349a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801349e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80134a2:	6803      	ldr	r3, [r0, #0]
 80134a4:	9500      	str	r5, [sp, #0]
 80134a6:	466d      	mov	r5, sp
 80134a8:	f8ad 1004 	strh.w	r1, [sp, #4]
 80134ac:	f8ad 2006 	strh.w	r2, [sp, #6]
 80134b0:	4629      	mov	r1, r5
 80134b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80134b4:	4798      	blx	r3
 80134b6:	e895 0003 	ldmia.w	r5, {r0, r1}
 80134ba:	e884 0003 	stmia.w	r4, {r0, r1}
 80134be:	4620      	mov	r0, r4
 80134c0:	b003      	add	sp, #12
 80134c2:	bd30      	pop	{r4, r5, pc}

080134c4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80134c4:	b513      	push	{r0, r1, r4, lr}
 80134c6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80134ca:	4604      	mov	r4, r0
 80134cc:	3301      	adds	r3, #1
 80134ce:	d109      	bne.n	80134e4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80134d0:	4601      	mov	r1, r0
 80134d2:	4668      	mov	r0, sp
 80134d4:	f7ff fe1a 	bl	801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80134d8:	f8bd 3000 	ldrh.w	r3, [sp]
 80134dc:	8423      	strh	r3, [r4, #32]
 80134de:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80134e2:	8463      	strh	r3, [r4, #34]	; 0x22
 80134e4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80134e8:	b002      	add	sp, #8
 80134ea:	bd10      	pop	{r4, pc}

080134ec <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80134ec:	b513      	push	{r0, r1, r4, lr}
 80134ee:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80134f2:	4604      	mov	r4, r0
 80134f4:	3301      	adds	r3, #1
 80134f6:	d109      	bne.n	801350c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80134f8:	4601      	mov	r1, r0
 80134fa:	4668      	mov	r0, sp
 80134fc:	f7ff fe06 	bl	801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013500:	f8bd 3000 	ldrh.w	r3, [sp]
 8013504:	8423      	strh	r3, [r4, #32]
 8013506:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801350a:	8463      	strh	r3, [r4, #34]	; 0x22
 801350c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8013510:	b002      	add	sp, #8
 8013512:	bd10      	pop	{r4, pc}

08013514 <_ZN8touchgfx6ScreenC1Ev>:
 8013514:	b570      	push	{r4, r5, r6, lr}
 8013516:	4b17      	ldr	r3, [pc, #92]	; (8013574 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8013518:	4605      	mov	r5, r0
 801351a:	4a17      	ldr	r2, [pc, #92]	; (8013578 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801351c:	2101      	movs	r1, #1
 801351e:	f845 3b04 	str.w	r3, [r5], #4
 8013522:	2300      	movs	r3, #0
 8013524:	6042      	str	r2, [r0, #4]
 8013526:	4604      	mov	r4, r0
 8013528:	8103      	strh	r3, [r0, #8]
 801352a:	8143      	strh	r3, [r0, #10]
 801352c:	8183      	strh	r3, [r0, #12]
 801352e:	81c3      	strh	r3, [r0, #14]
 8013530:	8203      	strh	r3, [r0, #16]
 8013532:	8243      	strh	r3, [r0, #18]
 8013534:	8283      	strh	r3, [r0, #20]
 8013536:	82c3      	strh	r3, [r0, #22]
 8013538:	6203      	str	r3, [r0, #32]
 801353a:	8483      	strh	r3, [r0, #36]	; 0x24
 801353c:	84c3      	strh	r3, [r0, #38]	; 0x26
 801353e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8013542:	6343      	str	r3, [r0, #52]	; 0x34
 8013544:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8013548:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801354c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8013550:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8013554:	4b09      	ldr	r3, [pc, #36]	; (801357c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8013556:	4628      	mov	r0, r5
 8013558:	f9b3 6000 	ldrsh.w	r6, [r3]
 801355c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801355e:	4a08      	ldr	r2, [pc, #32]	; (8013580 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8013560:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013564:	4798      	blx	r3
 8013566:	6863      	ldr	r3, [r4, #4]
 8013568:	4628      	mov	r0, r5
 801356a:	4631      	mov	r1, r6
 801356c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801356e:	4798      	blx	r3
 8013570:	4620      	mov	r0, r4
 8013572:	bd70      	pop	{r4, r5, r6, pc}
 8013574:	080264b8 	.word	0x080264b8
 8013578:	08025f28 	.word	0x08025f28
 801357c:	20032422 	.word	0x20032422
 8013580:	20032420 	.word	0x20032420

08013584 <_ZN8touchgfx6Screen4drawEv>:
 8013584:	4b09      	ldr	r3, [pc, #36]	; (80135ac <_ZN8touchgfx6Screen4drawEv+0x28>)
 8013586:	b507      	push	{r0, r1, r2, lr}
 8013588:	f9b3 2000 	ldrsh.w	r2, [r3]
 801358c:	2100      	movs	r1, #0
 801358e:	4b08      	ldr	r3, [pc, #32]	; (80135b0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8013590:	9100      	str	r1, [sp, #0]
 8013592:	4669      	mov	r1, sp
 8013594:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013598:	f8ad 2004 	strh.w	r2, [sp, #4]
 801359c:	f8ad 3006 	strh.w	r3, [sp, #6]
 80135a0:	6803      	ldr	r3, [r0, #0]
 80135a2:	689b      	ldr	r3, [r3, #8]
 80135a4:	4798      	blx	r3
 80135a6:	b003      	add	sp, #12
 80135a8:	f85d fb04 	ldr.w	pc, [sp], #4
 80135ac:	20032420 	.word	0x20032420
 80135b0:	20032422 	.word	0x20032422

080135b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80135b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135b8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80135bc:	b089      	sub	sp, #36	; 0x24
 80135be:	4680      	mov	r8, r0
 80135c0:	460c      	mov	r4, r1
 80135c2:	2b00      	cmp	r3, #0
 80135c4:	4615      	mov	r5, r2
 80135c6:	dd0e      	ble.n	80135e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80135c8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80135cc:	2b00      	cmp	r3, #0
 80135ce:	dd0a      	ble.n	80135e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80135d0:	4628      	mov	r0, r5
 80135d2:	f7ff ff5b 	bl	801348c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80135d6:	4621      	mov	r1, r4
 80135d8:	f7fe fba6 	bl	8011d28 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80135dc:	69eb      	ldr	r3, [r5, #28]
 80135de:	b928      	cbnz	r0, 80135ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80135e0:	461d      	mov	r5, r3
 80135e2:	2b00      	cmp	r3, #0
 80135e4:	d1f4      	bne.n	80135d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80135e6:	b009      	add	sp, #36	; 0x24
 80135e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80135ec:	ae04      	add	r6, sp, #16
 80135ee:	2b00      	cmp	r3, #0
 80135f0:	f000 80b5 	beq.w	801375e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80135f4:	682b      	ldr	r3, [r5, #0]
 80135f6:	4629      	mov	r1, r5
 80135f8:	a802      	add	r0, sp, #8
 80135fa:	68db      	ldr	r3, [r3, #12]
 80135fc:	4798      	blx	r3
 80135fe:	4628      	mov	r0, r5
 8013600:	f7ff ff60 	bl	80134c4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8013604:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8013608:	4407      	add	r7, r0
 801360a:	4628      	mov	r0, r5
 801360c:	f7ff ff6e 	bl	80134ec <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8013610:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013614:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8013618:	b23f      	sxth	r7, r7
 801361a:	4418      	add	r0, r3
 801361c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8013620:	4621      	mov	r1, r4
 8013622:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013626:	f8ad 0012 	strh.w	r0, [sp, #18]
 801362a:	4630      	mov	r0, r6
 801362c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013630:	f8ad 7010 	strh.w	r7, [sp, #16]
 8013634:	f7fb fac2 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 8013638:	4628      	mov	r0, r5
 801363a:	f7ff ff27 	bl	801348c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801363e:	ab06      	add	r3, sp, #24
 8013640:	4602      	mov	r2, r0
 8013642:	e896 0003 	ldmia.w	r6, {r0, r1}
 8013646:	e883 0003 	stmia.w	r3, {r0, r1}
 801364a:	4611      	mov	r1, r2
 801364c:	4618      	mov	r0, r3
 801364e:	f7fb fab5 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 8013652:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013656:	f9b4 1000 	ldrsh.w	r1, [r4]
 801365a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801365e:	4299      	cmp	r1, r3
 8013660:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8013664:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8013668:	d10b      	bne.n	8013682 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801366a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801366e:	4552      	cmp	r2, sl
 8013670:	d107      	bne.n	8013682 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8013672:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8013676:	455a      	cmp	r2, fp
 8013678:	d103      	bne.n	8013682 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801367a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801367e:	454a      	cmp	r2, r9
 8013680:	d06d      	beq.n	801375e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013682:	f1bb 0f00 	cmp.w	fp, #0
 8013686:	dd65      	ble.n	8013754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8013688:	f1b9 0f00 	cmp.w	r9, #0
 801368c:	dd62      	ble.n	8013754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801368e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013692:	fa1f f08a 	uxth.w	r0, sl
 8013696:	4552      	cmp	r2, sl
 8013698:	9000      	str	r0, [sp, #0]
 801369a:	da12      	bge.n	80136c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801369c:	9301      	str	r3, [sp, #4]
 801369e:	9b00      	ldr	r3, [sp, #0]
 80136a0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80136a4:	f8ad 2012 	strh.w	r2, [sp, #18]
 80136a8:	1a9a      	subs	r2, r3, r2
 80136aa:	f8ad 1010 	strh.w	r1, [sp, #16]
 80136ae:	4631      	mov	r1, r6
 80136b0:	f8ad 0014 	strh.w	r0, [sp, #20]
 80136b4:	4640      	mov	r0, r8
 80136b6:	f8ad 2016 	strh.w	r2, [sp, #22]
 80136ba:	69ea      	ldr	r2, [r5, #28]
 80136bc:	f7ff ff7a 	bl	80135b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80136c0:	9b01      	ldr	r3, [sp, #4]
 80136c2:	f9b4 2000 	ldrsh.w	r2, [r4]
 80136c6:	b29f      	uxth	r7, r3
 80136c8:	429a      	cmp	r2, r3
 80136ca:	da0d      	bge.n	80136e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80136cc:	f8ad 2010 	strh.w	r2, [sp, #16]
 80136d0:	1aba      	subs	r2, r7, r2
 80136d2:	f8ad a012 	strh.w	sl, [sp, #18]
 80136d6:	4631      	mov	r1, r6
 80136d8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80136dc:	4640      	mov	r0, r8
 80136de:	f8ad 9016 	strh.w	r9, [sp, #22]
 80136e2:	69ea      	ldr	r2, [r5, #28]
 80136e4:	f7ff ff66 	bl	80135b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80136e8:	8822      	ldrh	r2, [r4, #0]
 80136ea:	445f      	add	r7, fp
 80136ec:	88a3      	ldrh	r3, [r4, #4]
 80136ee:	b2bf      	uxth	r7, r7
 80136f0:	4413      	add	r3, r2
 80136f2:	b23a      	sxth	r2, r7
 80136f4:	b29b      	uxth	r3, r3
 80136f6:	b219      	sxth	r1, r3
 80136f8:	4291      	cmp	r1, r2
 80136fa:	dd0d      	ble.n	8013718 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80136fc:	1bdb      	subs	r3, r3, r7
 80136fe:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013702:	f8ad a012 	strh.w	sl, [sp, #18]
 8013706:	4631      	mov	r1, r6
 8013708:	f8ad 3014 	strh.w	r3, [sp, #20]
 801370c:	4640      	mov	r0, r8
 801370e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8013712:	69ea      	ldr	r2, [r5, #28]
 8013714:	f7ff ff4e 	bl	80135b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013718:	88e2      	ldrh	r2, [r4, #6]
 801371a:	8863      	ldrh	r3, [r4, #2]
 801371c:	4413      	add	r3, r2
 801371e:	9a00      	ldr	r2, [sp, #0]
 8013720:	444a      	add	r2, r9
 8013722:	b29b      	uxth	r3, r3
 8013724:	fa1f f982 	uxth.w	r9, r2
 8013728:	b219      	sxth	r1, r3
 801372a:	fa0f f289 	sxth.w	r2, r9
 801372e:	428a      	cmp	r2, r1
 8013730:	da15      	bge.n	801375e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013732:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013736:	eba3 0309 	sub.w	r3, r3, r9
 801373a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801373e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8013742:	4631      	mov	r1, r6
 8013744:	f8ad 0010 	strh.w	r0, [sp, #16]
 8013748:	f8ad 2012 	strh.w	r2, [sp, #18]
 801374c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013750:	69ea      	ldr	r2, [r5, #28]
 8013752:	e001      	b.n	8013758 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8013754:	69ea      	ldr	r2, [r5, #28]
 8013756:	4621      	mov	r1, r4
 8013758:	4640      	mov	r0, r8
 801375a:	f7ff ff2b 	bl	80135b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801375e:	4628      	mov	r0, r5
 8013760:	f7ff fe94 	bl	801348c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013764:	6861      	ldr	r1, [r4, #4]
 8013766:	4602      	mov	r2, r0
 8013768:	4633      	mov	r3, r6
 801376a:	6820      	ldr	r0, [r4, #0]
 801376c:	c303      	stmia	r3!, {r0, r1}
 801376e:	4611      	mov	r1, r2
 8013770:	4630      	mov	r0, r6
 8013772:	f7fb fa23 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 8013776:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801377a:	2b00      	cmp	r3, #0
 801377c:	f77f af33 	ble.w	80135e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013780:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8013784:	2b00      	cmp	r3, #0
 8013786:	f77f af2e 	ble.w	80135e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801378a:	4628      	mov	r0, r5
 801378c:	f7ff fe9a 	bl	80134c4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8013790:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8013794:	1a18      	subs	r0, r3, r0
 8013796:	f8ad 0010 	strh.w	r0, [sp, #16]
 801379a:	4628      	mov	r0, r5
 801379c:	f7ff fea6 	bl	80134ec <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80137a0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80137a4:	4631      	mov	r1, r6
 80137a6:	1a18      	subs	r0, r3, r0
 80137a8:	f8ad 0012 	strh.w	r0, [sp, #18]
 80137ac:	4628      	mov	r0, r5
 80137ae:	682b      	ldr	r3, [r5, #0]
 80137b0:	689b      	ldr	r3, [r3, #8]
 80137b2:	4798      	blx	r3
 80137b4:	e717      	b.n	80135e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080137b6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80137b6:	b570      	push	{r4, r5, r6, lr}
 80137b8:	1d06      	adds	r6, r0, #4
 80137ba:	b086      	sub	sp, #24
 80137bc:	460c      	mov	r4, r1
 80137be:	2300      	movs	r3, #0
 80137c0:	4631      	mov	r1, r6
 80137c2:	4605      	mov	r5, r0
 80137c4:	a802      	add	r0, sp, #8
 80137c6:	9301      	str	r3, [sp, #4]
 80137c8:	f7ff fca0 	bl	801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80137cc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80137d0:	8822      	ldrh	r2, [r4, #0]
 80137d2:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80137d6:	1ad2      	subs	r2, r2, r3
 80137d8:	8863      	ldrh	r3, [r4, #2]
 80137da:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80137de:	1a5b      	subs	r3, r3, r1
 80137e0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80137e4:	f8ad 2010 	strh.w	r2, [sp, #16]
 80137e8:	aa01      	add	r2, sp, #4
 80137ea:	f8ad 0014 	strh.w	r0, [sp, #20]
 80137ee:	4630      	mov	r0, r6
 80137f0:	f8ad 1016 	strh.w	r1, [sp, #22]
 80137f4:	a904      	add	r1, sp, #16
 80137f6:	f8ad 3012 	strh.w	r3, [sp, #18]
 80137fa:	f7fb fab7 	bl	800ed6c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80137fe:	9a01      	ldr	r2, [sp, #4]
 8013800:	b11a      	cbz	r2, 801380a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8013802:	4621      	mov	r1, r4
 8013804:	4628      	mov	r0, r5
 8013806:	f7ff fed5 	bl	80135b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801380a:	b006      	add	sp, #24
 801380c:	bd70      	pop	{r4, r5, r6, pc}

0801380e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801380e:	4602      	mov	r2, r0
 8013810:	b530      	push	{r4, r5, lr}
 8013812:	4604      	mov	r4, r0
 8013814:	b085      	sub	sp, #20
 8013816:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801381a:	460d      	mov	r5, r1
 801381c:	466b      	mov	r3, sp
 801381e:	6851      	ldr	r1, [r2, #4]
 8013820:	c303      	stmia	r3!, {r0, r1}
 8013822:	4629      	mov	r1, r5
 8013824:	4668      	mov	r0, sp
 8013826:	f7fb f9c9 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 801382a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801382e:	b12b      	cbz	r3, 801383c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8013830:	4669      	mov	r1, sp
 8013832:	4620      	mov	r0, r4
 8013834:	f7ff ffbf 	bl	80137b6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8013838:	b005      	add	sp, #20
 801383a:	bd30      	pop	{r4, r5, pc}
 801383c:	3404      	adds	r4, #4
 801383e:	a802      	add	r0, sp, #8
 8013840:	4621      	mov	r1, r4
 8013842:	f7ff fc63 	bl	801310c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013846:	f8bd 3000 	ldrh.w	r3, [sp]
 801384a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801384e:	4669      	mov	r1, sp
 8013850:	4620      	mov	r0, r4
 8013852:	1a9b      	subs	r3, r3, r2
 8013854:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013858:	f8ad 3000 	strh.w	r3, [sp]
 801385c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013860:	1a9b      	subs	r3, r3, r2
 8013862:	f8ad 3002 	strh.w	r3, [sp, #2]
 8013866:	f7fb fa48 	bl	800ecfa <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801386a:	e7e5      	b.n	8013838 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801386c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801386c:	460b      	mov	r3, r1
 801386e:	680a      	ldr	r2, [r1, #0]
 8013870:	1d01      	adds	r1, r0, #4
 8013872:	6992      	ldr	r2, [r2, #24]
 8013874:	4618      	mov	r0, r3
 8013876:	4710      	bx	r2

08013878 <_ZN8touchgfx12TextProviderC1Ev>:
 8013878:	b538      	push	{r3, r4, r5, lr}
 801387a:	2500      	movs	r5, #0
 801387c:	2302      	movs	r3, #2
 801387e:	4604      	mov	r4, r0
 8013880:	220e      	movs	r2, #14
 8013882:	7403      	strb	r3, [r0, #16]
 8013884:	4629      	mov	r1, r5
 8013886:	6145      	str	r5, [r0, #20]
 8013888:	7605      	strb	r5, [r0, #24]
 801388a:	83c5      	strh	r5, [r0, #30]
 801388c:	8405      	strh	r5, [r0, #32]
 801388e:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013890:	8705      	strh	r5, [r0, #56]	; 0x38
 8013892:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8013894:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8013898:	e9c0 5500 	strd	r5, r5, [r0]
 801389c:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80138a0:	304c      	adds	r0, #76	; 0x4c
 80138a2:	f00f ff4e 	bl	8023742 <memset>
 80138a6:	2301      	movs	r3, #1
 80138a8:	4620      	mov	r0, r4
 80138aa:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80138ae:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80138b2:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80138b6:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80138ba:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80138be:	f7f8 fda1 	bl	800c404 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80138c2:	4620      	mov	r0, r4
 80138c4:	bd38      	pop	{r3, r4, r5, pc}

080138c6 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80138c6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80138c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80138cc:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80138ce:	fab0 f080 	clz	r0, r0
 80138d2:	0940      	lsrs	r0, r0, #5
 80138d4:	4770      	bx	lr

080138d6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80138d6:	b530      	push	{r4, r5, lr}
 80138d8:	2500      	movs	r5, #0
 80138da:	2401      	movs	r4, #1
 80138dc:	6843      	ldr	r3, [r0, #4]
 80138de:	b913      	cbnz	r3, 80138e6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80138e0:	6803      	ldr	r3, [r0, #0]
 80138e2:	b313      	cbz	r3, 801392a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80138e4:	6043      	str	r3, [r0, #4]
 80138e6:	7e03      	ldrb	r3, [r0, #24]
 80138e8:	b143      	cbz	r3, 80138fc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80138ea:	6943      	ldr	r3, [r0, #20]
 80138ec:	b12b      	cbz	r3, 80138fa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80138ee:	881a      	ldrh	r2, [r3, #0]
 80138f0:	b11a      	cbz	r2, 80138fa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80138f2:	1c9a      	adds	r2, r3, #2
 80138f4:	6142      	str	r2, [r0, #20]
 80138f6:	8818      	ldrh	r0, [r3, #0]
 80138f8:	bd30      	pop	{r4, r5, pc}
 80138fa:	7605      	strb	r5, [r0, #24]
 80138fc:	6843      	ldr	r3, [r0, #4]
 80138fe:	8819      	ldrh	r1, [r3, #0]
 8013900:	b199      	cbz	r1, 801392a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8013902:	1c9a      	adds	r2, r3, #2
 8013904:	2902      	cmp	r1, #2
 8013906:	6042      	str	r2, [r0, #4]
 8013908:	d1f5      	bne.n	80138f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801390a:	7c03      	ldrb	r3, [r0, #16]
 801390c:	2b01      	cmp	r3, #1
 801390e:	d8e5      	bhi.n	80138dc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013910:	1c5a      	adds	r2, r3, #1
 8013912:	3302      	adds	r3, #2
 8013914:	7402      	strb	r2, [r0, #16]
 8013916:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801391a:	6143      	str	r3, [r0, #20]
 801391c:	2b00      	cmp	r3, #0
 801391e:	d0dd      	beq.n	80138dc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013920:	881b      	ldrh	r3, [r3, #0]
 8013922:	2b00      	cmp	r3, #0
 8013924:	d0da      	beq.n	80138dc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013926:	7604      	strb	r4, [r0, #24]
 8013928:	e7d8      	b.n	80138dc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801392a:	2000      	movs	r0, #0
 801392c:	e7e4      	b.n	80138f8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801392e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801392e:	6001      	str	r1, [r0, #0]
 8013930:	2100      	movs	r1, #0
 8013932:	b430      	push	{r4, r5}
 8013934:	6041      	str	r1, [r0, #4]
 8013936:	6815      	ldr	r5, [r2, #0]
 8013938:	6085      	str	r5, [r0, #8]
 801393a:	6852      	ldr	r2, [r2, #4]
 801393c:	6443      	str	r3, [r0, #68]	; 0x44
 801393e:	9b02      	ldr	r3, [sp, #8]
 8013940:	60c2      	str	r2, [r0, #12]
 8013942:	7401      	strb	r1, [r0, #16]
 8013944:	6141      	str	r1, [r0, #20]
 8013946:	7601      	strb	r1, [r0, #24]
 8013948:	8701      	strh	r1, [r0, #56]	; 0x38
 801394a:	8401      	strh	r1, [r0, #32]
 801394c:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8013950:	6483      	str	r3, [r0, #72]	; 0x48
 8013952:	bc30      	pop	{r4, r5}
 8013954:	f7f8 bd56 	b.w	800c404 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08013958 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8013958:	b408      	push	{r3}
 801395a:	b510      	push	{r4, lr}
 801395c:	b085      	sub	sp, #20
 801395e:	ac07      	add	r4, sp, #28
 8013960:	f854 3b04 	ldr.w	r3, [r4], #4
 8013964:	9300      	str	r3, [sp, #0]
 8013966:	4613      	mov	r3, r2
 8013968:	4622      	mov	r2, r4
 801396a:	9403      	str	r4, [sp, #12]
 801396c:	f7ff ffdf 	bl	801392e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013970:	b005      	add	sp, #20
 8013972:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013976:	b001      	add	sp, #4
 8013978:	4770      	bx	lr

0801397a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801397a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801397c:	4605      	mov	r5, r0
 801397e:	4608      	mov	r0, r1
 8013980:	b1f1      	cbz	r1, 80139c0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 8013982:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8013986:	460b      	mov	r3, r1
 8013988:	f101 0708 	add.w	r7, r1, #8
 801398c:	4622      	mov	r2, r4
 801398e:	6818      	ldr	r0, [r3, #0]
 8013990:	3308      	adds	r3, #8
 8013992:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8013996:	4626      	mov	r6, r4
 8013998:	42bb      	cmp	r3, r7
 801399a:	c603      	stmia	r6!, {r0, r1}
 801399c:	4634      	mov	r4, r6
 801399e:	d1f6      	bne.n	801398e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80139a0:	6818      	ldr	r0, [r3, #0]
 80139a2:	6030      	str	r0, [r6, #0]
 80139a4:	4610      	mov	r0, r2
 80139a6:	889b      	ldrh	r3, [r3, #4]
 80139a8:	80b3      	strh	r3, [r6, #4]
 80139aa:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80139ae:	015b      	lsls	r3, r3, #5
 80139b0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80139b4:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80139b8:	430b      	orrs	r3, r1
 80139ba:	425b      	negs	r3, r3
 80139bc:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80139c0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080139c2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80139c2:	b538      	push	{r3, r4, r5, lr}
 80139c4:	460c      	mov	r4, r1
 80139c6:	6811      	ldr	r1, [r2, #0]
 80139c8:	4610      	mov	r0, r2
 80139ca:	68cd      	ldr	r5, [r1, #12]
 80139cc:	4619      	mov	r1, r3
 80139ce:	47a8      	blx	r5
 80139d0:	2800      	cmp	r0, #0
 80139d2:	bf08      	it	eq
 80139d4:	4620      	moveq	r0, r4
 80139d6:	bd38      	pop	{r3, r4, r5, pc}

080139d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80139d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80139da:	4604      	mov	r4, r0
 80139dc:	4615      	mov	r5, r2
 80139de:	4608      	mov	r0, r1
 80139e0:	b93a      	cbnz	r2, 80139f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80139e2:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80139e6:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80139ea:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80139ee:	4628      	mov	r0, r5
 80139f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80139f2:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80139f6:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 80139fa:	8893      	ldrh	r3, [r2, #4]
 80139fc:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8013a00:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8013a04:	79ee      	ldrb	r6, [r5, #7]
 8013a06:	4316      	orrs	r6, r2
 8013a08:	19da      	adds	r2, r3, r7
 8013a0a:	b291      	uxth	r1, r2
 8013a0c:	b2b7      	uxth	r7, r6
 8013a0e:	291d      	cmp	r1, #29
 8013a10:	d87b      	bhi.n	8013b0a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8013a12:	2201      	movs	r2, #1
 8013a14:	10f6      	asrs	r6, r6, #3
 8013a16:	408a      	lsls	r2, r1
 8013a18:	4974      	ldr	r1, [pc, #464]	; (8013bec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8013a1a:	420a      	tst	r2, r1
 8013a1c:	d12e      	bne.n	8013a7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8013a1e:	f412 7f60 	tst.w	r2, #896	; 0x380
 8013a22:	d072      	beq.n	8013b0a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8013a24:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8013a28:	462b      	mov	r3, r5
 8013a2a:	f105 0e08 	add.w	lr, r5, #8
 8013a2e:	4615      	mov	r5, r2
 8013a30:	6818      	ldr	r0, [r3, #0]
 8013a32:	3308      	adds	r3, #8
 8013a34:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8013a38:	4694      	mov	ip, r2
 8013a3a:	4573      	cmp	r3, lr
 8013a3c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8013a40:	4662      	mov	r2, ip
 8013a42:	d1f5      	bne.n	8013a30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 8013a44:	6818      	ldr	r0, [r3, #0]
 8013a46:	f8cc 0000 	str.w	r0, [ip]
 8013a4a:	889b      	ldrh	r3, [r3, #4]
 8013a4c:	f8ac 3004 	strh.w	r3, [ip, #4]
 8013a50:	b2b3      	uxth	r3, r6
 8013a52:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8013a56:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8013a5a:	1aca      	subs	r2, r1, r3
 8013a5c:	1bcf      	subs	r7, r1, r7
 8013a5e:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8013a62:	b292      	uxth	r2, r2
 8013a64:	1afb      	subs	r3, r7, r3
 8013a66:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8013a6a:	10d2      	asrs	r2, r2, #3
 8013a6c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8013a70:	4302      	orrs	r2, r0
 8013a72:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8013a76:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8013a7a:	e7b8      	b.n	80139ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8013a7c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013a7e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013a82:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8013a84:	f640 6333 	movw	r3, #3635	; 0xe33
 8013a88:	4299      	cmp	r1, r3
 8013a8a:	d110      	bne.n	8013aae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8013a8c:	6803      	ldr	r3, [r0, #0]
 8013a8e:	68db      	ldr	r3, [r3, #12]
 8013a90:	4798      	blx	r3
 8013a92:	7b41      	ldrb	r1, [r0, #13]
 8013a94:	00cb      	lsls	r3, r1, #3
 8013a96:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013a9a:	7a03      	ldrb	r3, [r0, #8]
 8013a9c:	0648      	lsls	r0, r1, #25
 8013a9e:	ea43 0302 	orr.w	r3, r3, r2
 8013aa2:	bf44      	itt	mi
 8013aa4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013aa8:	b21b      	sxthmi	r3, r3
 8013aaa:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013aae:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8013ab2:	462a      	mov	r2, r5
 8013ab4:	f105 0c08 	add.w	ip, r5, #8
 8013ab8:	443b      	add	r3, r7
 8013aba:	4433      	add	r3, r6
 8013abc:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8013ac0:	b29b      	uxth	r3, r3
 8013ac2:	4635      	mov	r5, r6
 8013ac4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013ac8:	6810      	ldr	r0, [r2, #0]
 8013aca:	3208      	adds	r2, #8
 8013acc:	f852 1c04 	ldr.w	r1, [r2, #-4]
 8013ad0:	4637      	mov	r7, r6
 8013ad2:	4562      	cmp	r2, ip
 8013ad4:	c703      	stmia	r7!, {r0, r1}
 8013ad6:	463e      	mov	r6, r7
 8013ad8:	d1f6      	bne.n	8013ac8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8013ada:	6810      	ldr	r0, [r2, #0]
 8013adc:	6038      	str	r0, [r7, #0]
 8013ade:	8892      	ldrh	r2, [r2, #4]
 8013ae0:	80ba      	strh	r2, [r7, #4]
 8013ae2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8013ae6:	10db      	asrs	r3, r3, #3
 8013ae8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013aec:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013af0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013af4:	4313      	orrs	r3, r2
 8013af6:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8013afa:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013afe:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8013b02:	1a9b      	subs	r3, r3, r2
 8013b04:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8013b08:	e771      	b.n	80139ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8013b0a:	f023 0204 	bic.w	r2, r3, #4
 8013b0e:	f640 611b 	movw	r1, #3611	; 0xe1b
 8013b12:	428a      	cmp	r2, r1
 8013b14:	d003      	beq.n	8013b1e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 8013b16:	f640 621d 	movw	r2, #3613	; 0xe1d
 8013b1a:	4293      	cmp	r3, r2
 8013b1c:	d120      	bne.n	8013b60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 8013b1e:	3b01      	subs	r3, #1
 8013b20:	4602      	mov	r2, r0
 8013b22:	4629      	mov	r1, r5
 8013b24:	4620      	mov	r0, r4
 8013b26:	b29b      	uxth	r3, r3
 8013b28:	f7ff ff4b 	bl	80139c2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8013b2c:	7b41      	ldrb	r1, [r0, #13]
 8013b2e:	00cb      	lsls	r3, r1, #3
 8013b30:	0649      	lsls	r1, r1, #25
 8013b32:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013b36:	7a03      	ldrb	r3, [r0, #8]
 8013b38:	ea43 0302 	orr.w	r3, r3, r2
 8013b3c:	bf44      	itt	mi
 8013b3e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013b42:	b21b      	sxthmi	r3, r3
 8013b44:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013b48:	7b6b      	ldrb	r3, [r5, #13]
 8013b4a:	7aaa      	ldrb	r2, [r5, #10]
 8013b4c:	005b      	lsls	r3, r3, #1
 8013b4e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013b52:	4313      	orrs	r3, r2
 8013b54:	115a      	asrs	r2, r3, #5
 8013b56:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8013b5a:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8013b5e:	e035      	b.n	8013bcc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8013b60:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8013b64:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8013b68:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8013b6c:	7a2a      	ldrb	r2, [r5, #8]
 8013b6e:	ea42 0201 	orr.w	r2, r2, r1
 8013b72:	f640 6109 	movw	r1, #3593	; 0xe09
 8013b76:	bf1c      	itt	ne
 8013b78:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8013b7c:	b212      	sxthne	r2, r2
 8013b7e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8013b82:	f023 0210 	bic.w	r2, r3, #16
 8013b86:	428a      	cmp	r2, r1
 8013b88:	d003      	beq.n	8013b92 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 8013b8a:	f640 6213 	movw	r2, #3603	; 0xe13
 8013b8e:	4293      	cmp	r3, r2
 8013b90:	d129      	bne.n	8013be6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8013b92:	7b6e      	ldrb	r6, [r5, #13]
 8013b94:	4629      	mov	r1, r5
 8013b96:	0076      	lsls	r6, r6, #1
 8013b98:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8013b9c:	7aae      	ldrb	r6, [r5, #10]
 8013b9e:	4316      	orrs	r6, r2
 8013ba0:	f640 6213 	movw	r2, #3603	; 0xe13
 8013ba4:	4293      	cmp	r3, r2
 8013ba6:	4602      	mov	r2, r0
 8013ba8:	4620      	mov	r0, r4
 8013baa:	bf16      	itet	ne
 8013bac:	f103 33ff 	addne.w	r3, r3, #4294967295
 8013bb0:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8013bb4:	b29b      	uxthne	r3, r3
 8013bb6:	f7ff ff04 	bl	80139c2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8013bba:	7b43      	ldrb	r3, [r0, #13]
 8013bbc:	7a82      	ldrb	r2, [r0, #10]
 8013bbe:	005b      	lsls	r3, r3, #1
 8013bc0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013bc4:	4313      	orrs	r3, r2
 8013bc6:	1af6      	subs	r6, r6, r3
 8013bc8:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8013bcc:	7b69      	ldrb	r1, [r5, #13]
 8013bce:	00cb      	lsls	r3, r1, #3
 8013bd0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013bd4:	7a2b      	ldrb	r3, [r5, #8]
 8013bd6:	4313      	orrs	r3, r2
 8013bd8:	064a      	lsls	r2, r1, #25
 8013bda:	bf44      	itt	mi
 8013bdc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013be0:	b21b      	sxthmi	r3, r3
 8013be2:	1bdb      	subs	r3, r3, r7
 8013be4:	e747      	b.n	8013a76 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8013be6:	2300      	movs	r3, #0
 8013be8:	e7b7      	b.n	8013b5a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 8013bea:	bf00      	nop
 8013bec:	3fc00079 	.word	0x3fc00079

08013bf0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8013bf0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013bf4:	4604      	mov	r4, r0
 8013bf6:	b942      	cbnz	r2, 8013c0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8013bf8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013bfc:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8013c00:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8013c04:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8013c08:	e047      	b.n	8013c9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013c0a:	7b51      	ldrb	r1, [r2, #13]
 8013c0c:	8893      	ldrh	r3, [r2, #4]
 8013c0e:	010d      	lsls	r5, r1, #4
 8013c10:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8013c14:	79d5      	ldrb	r5, [r2, #7]
 8013c16:	4305      	orrs	r5, r0
 8013c18:	2d04      	cmp	r5, #4
 8013c1a:	bfcc      	ite	gt
 8013c1c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8013c20:	f04f 0e01 	movle.w	lr, #1
 8013c24:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8013c28:	f200 80ab 	bhi.w	8013d82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8013c2c:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8013c30:	4283      	cmp	r3, r0
 8013c32:	d216      	bcs.n	8013c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013c34:	f240 605b 	movw	r0, #1627	; 0x65b
 8013c38:	4283      	cmp	r3, r0
 8013c3a:	d859      	bhi.n	8013cf0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8013c3c:	f240 6057 	movw	r0, #1623	; 0x657
 8013c40:	4283      	cmp	r3, r0
 8013c42:	d20e      	bcs.n	8013c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013c44:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8013c48:	d24a      	bcs.n	8013ce0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8013c4a:	f240 604e 	movw	r0, #1614	; 0x64e
 8013c4e:	4283      	cmp	r3, r0
 8013c50:	d207      	bcs.n	8013c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013c52:	f240 601a 	movw	r0, #1562	; 0x61a
 8013c56:	4283      	cmp	r3, r0
 8013c58:	d02a      	beq.n	8013cb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013c5a:	d821      	bhi.n	8013ca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8013c5c:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8013c60:	d35b      	bcc.n	8013d1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013c62:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8013c66:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013c6a:	f040 80d0 	bne.w	8013e0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8013c6e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8013c72:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013c76:	f040 80ca 	bne.w	8013e0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8013c7a:	00cb      	lsls	r3, r1, #3
 8013c7c:	0649      	lsls	r1, r1, #25
 8013c7e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013c82:	7a13      	ldrb	r3, [r2, #8]
 8013c84:	ea43 0300 	orr.w	r3, r3, r0
 8013c88:	bf44      	itt	mi
 8013c8a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013c8e:	b21b      	sxthmi	r3, r3
 8013c90:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013c94:	1b5d      	subs	r5, r3, r5
 8013c96:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013c9a:	4610      	mov	r0, r2
 8013c9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013ca0:	f240 604b 	movw	r0, #1611	; 0x64b
 8013ca4:	4283      	cmp	r3, r0
 8013ca6:	d338      	bcc.n	8013d1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013ca8:	f240 604c 	movw	r0, #1612	; 0x64c
 8013cac:	4283      	cmp	r3, r0
 8013cae:	d9d8      	bls.n	8013c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013cb0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8013cb4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8013cb8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013cbc:	f040 80f3 	bne.w	8013ea6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8013cc0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013cc4:	f040 80ef 	bne.w	8013ea6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8013cc8:	00cb      	lsls	r3, r1, #3
 8013cca:	064e      	lsls	r6, r1, #25
 8013ccc:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013cd0:	7a13      	ldrb	r3, [r2, #8]
 8013cd2:	ea43 0300 	orr.w	r3, r3, r0
 8013cd6:	bf44      	itt	mi
 8013cd8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013cdc:	b21b      	sxthmi	r3, r3
 8013cde:	e7d9      	b.n	8013c94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8013ce0:	f240 6054 	movw	r0, #1620	; 0x654
 8013ce4:	4283      	cmp	r3, r0
 8013ce6:	d8e3      	bhi.n	8013cb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013ce8:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8013cec:	d9e0      	bls.n	8013cb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013cee:	e7b8      	b.n	8013c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013cf0:	f240 6074 	movw	r0, #1652	; 0x674
 8013cf4:	4283      	cmp	r3, r0
 8013cf6:	d0b4      	beq.n	8013c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013cf8:	d82d      	bhi.n	8013d56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8013cfa:	f240 605e 	movw	r0, #1630	; 0x65e
 8013cfe:	4283      	cmp	r3, r0
 8013d00:	d804      	bhi.n	8013d0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8013d02:	f240 605d 	movw	r0, #1629	; 0x65d
 8013d06:	4283      	cmp	r3, r0
 8013d08:	d3d2      	bcc.n	8013cb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013d0a:	e7aa      	b.n	8013c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013d0c:	f240 605f 	movw	r0, #1631	; 0x65f
 8013d10:	4283      	cmp	r3, r0
 8013d12:	d0cd      	beq.n	8013cb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013d14:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8013d18:	d0a3      	beq.n	8013c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013d1a:	00cb      	lsls	r3, r1, #3
 8013d1c:	0649      	lsls	r1, r1, #25
 8013d1e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013d22:	7a13      	ldrb	r3, [r2, #8]
 8013d24:	ea43 0300 	orr.w	r3, r3, r0
 8013d28:	bf44      	itt	mi
 8013d2a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013d2e:	b21b      	sxthmi	r3, r3
 8013d30:	1b5d      	subs	r5, r3, r5
 8013d32:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013d36:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013d3a:	7b53      	ldrb	r3, [r2, #13]
 8013d3c:	015b      	lsls	r3, r3, #5
 8013d3e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8013d42:	7993      	ldrb	r3, [r2, #6]
 8013d44:	430b      	orrs	r3, r1
 8013d46:	2105      	movs	r1, #5
 8013d48:	005b      	lsls	r3, r3, #1
 8013d4a:	fb93 f3f1 	sdiv	r3, r3, r1
 8013d4e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8013d52:	440b      	add	r3, r1
 8013d54:	e756      	b.n	8013c04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8013d56:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8013d5a:	4283      	cmp	r3, r0
 8013d5c:	d809      	bhi.n	8013d72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8013d5e:	f240 60df 	movw	r0, #1759	; 0x6df
 8013d62:	4283      	cmp	r3, r0
 8013d64:	f4bf af7d 	bcs.w	8013c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013d68:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8013d6c:	2b05      	cmp	r3, #5
 8013d6e:	d8d4      	bhi.n	8013d1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013d70:	e777      	b.n	8013c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013d72:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8013d76:	4283      	cmp	r3, r0
 8013d78:	d09a      	beq.n	8013cb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013d7a:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8013d7e:	4283      	cmp	r3, r0
 8013d80:	e7ca      	b.n	8013d18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8013d82:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8013d86:	d22b      	bcs.n	8013de0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8013d88:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8013d8c:	4283      	cmp	r3, r0
 8013d8e:	d28f      	bcs.n	8013cb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013d90:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8013d94:	4283      	cmp	r3, r0
 8013d96:	d816      	bhi.n	8013dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8013d98:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8013d9c:	4283      	cmp	r3, r0
 8013d9e:	f4bf af60 	bcs.w	8013c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013da2:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8013da6:	4283      	cmp	r3, r0
 8013da8:	d80a      	bhi.n	8013dc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8013daa:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8013dae:	4283      	cmp	r3, r0
 8013db0:	f4bf af57 	bcs.w	8013c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013db4:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8013db8:	4283      	cmp	r3, r0
 8013dba:	f43f af79 	beq.w	8013cb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013dbe:	e7ac      	b.n	8013d1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013dc0:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8013dc4:	e7f8      	b.n	8013db8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8013dc6:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8013dca:	4283      	cmp	r3, r0
 8013dcc:	d802      	bhi.n	8013dd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8013dce:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8013dd2:	e798      	b.n	8013d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8013dd4:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8013dd8:	4283      	cmp	r3, r0
 8013dda:	f47f af42 	bne.w	8013c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013dde:	e767      	b.n	8013cb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013de0:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8013de4:	4283      	cmp	r3, r0
 8013de6:	f43f af63 	beq.w	8013cb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013dea:	d802      	bhi.n	8013df2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8013dec:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8013df0:	e7f2      	b.n	8013dd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8013df2:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8013df6:	4283      	cmp	r3, r0
 8013df8:	d805      	bhi.n	8013e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8013dfa:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8013dfe:	4283      	cmp	r3, r0
 8013e00:	f4ff af2f 	bcc.w	8013c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013e04:	e754      	b.n	8013cb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013e06:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8013e0a:	4283      	cmp	r3, r0
 8013e0c:	e7af      	b.n	8013d6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8013e0e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8013e12:	4617      	mov	r7, r2
 8013e14:	f102 0808 	add.w	r8, r2, #8
 8013e18:	4666      	mov	r6, ip
 8013e1a:	6838      	ldr	r0, [r7, #0]
 8013e1c:	3708      	adds	r7, #8
 8013e1e:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8013e22:	46e6      	mov	lr, ip
 8013e24:	4547      	cmp	r7, r8
 8013e26:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013e2a:	46f4      	mov	ip, lr
 8013e2c:	d1f5      	bne.n	8013e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8013e2e:	6838      	ldr	r0, [r7, #0]
 8013e30:	f8ce 0000 	str.w	r0, [lr]
 8013e34:	88b9      	ldrh	r1, [r7, #4]
 8013e36:	f8ae 1004 	strh.w	r1, [lr, #4]
 8013e3a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013e3e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013e42:	d009      	beq.n	8013e58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 8013e44:	7b51      	ldrb	r1, [r2, #13]
 8013e46:	7992      	ldrb	r2, [r2, #6]
 8013e48:	0149      	lsls	r1, r1, #5
 8013e4a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013e4e:	4311      	orrs	r1, r2
 8013e50:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013e54:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8013e58:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013e5c:	b2ad      	uxth	r5, r5
 8013e5e:	d00d      	beq.n	8013e7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 8013e60:	442b      	add	r3, r5
 8013e62:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013e66:	b29b      	uxth	r3, r3
 8013e68:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013e6c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8013e70:	10db      	asrs	r3, r3, #3
 8013e72:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013e76:	4313      	orrs	r3, r2
 8013e78:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013e7c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013e80:	00cb      	lsls	r3, r1, #3
 8013e82:	064f      	lsls	r7, r1, #25
 8013e84:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013e88:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8013e8c:	ea43 0302 	orr.w	r3, r3, r2
 8013e90:	bf44      	itt	mi
 8013e92:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013e96:	b21b      	sxthmi	r3, r3
 8013e98:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013e9c:	1b5b      	subs	r3, r3, r5
 8013e9e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8013ea2:	4632      	mov	r2, r6
 8013ea4:	e6f9      	b.n	8013c9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013ea6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8013eaa:	4617      	mov	r7, r2
 8013eac:	f102 0908 	add.w	r9, r2, #8
 8013eb0:	4666      	mov	r6, ip
 8013eb2:	6838      	ldr	r0, [r7, #0]
 8013eb4:	3708      	adds	r7, #8
 8013eb6:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8013eba:	46e0      	mov	r8, ip
 8013ebc:	454f      	cmp	r7, r9
 8013ebe:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8013ec2:	46c4      	mov	ip, r8
 8013ec4:	d1f5      	bne.n	8013eb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 8013ec6:	6838      	ldr	r0, [r7, #0]
 8013ec8:	f8c8 0000 	str.w	r0, [r8]
 8013ecc:	88b9      	ldrh	r1, [r7, #4]
 8013ece:	f8a8 1004 	strh.w	r1, [r8, #4]
 8013ed2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013ed6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013eda:	d009      	beq.n	8013ef0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 8013edc:	7b51      	ldrb	r1, [r2, #13]
 8013ede:	7992      	ldrb	r2, [r2, #6]
 8013ee0:	0149      	lsls	r1, r1, #5
 8013ee2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013ee6:	4311      	orrs	r1, r2
 8013ee8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013eec:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8013ef0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013ef4:	d00e      	beq.n	8013f14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 8013ef6:	eba3 030e 	sub.w	r3, r3, lr
 8013efa:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013efe:	b29b      	uxth	r3, r3
 8013f00:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013f04:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8013f08:	10db      	asrs	r3, r3, #3
 8013f0a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013f0e:	4313      	orrs	r3, r2
 8013f10:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013f14:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013f18:	00cb      	lsls	r3, r1, #3
 8013f1a:	0648      	lsls	r0, r1, #25
 8013f1c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013f20:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8013f24:	ea43 0302 	orr.w	r3, r3, r2
 8013f28:	bf44      	itt	mi
 8013f2a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013f2e:	b21b      	sxthmi	r3, r3
 8013f30:	1b5d      	subs	r5, r3, r5
 8013f32:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013f36:	e7b4      	b.n	8013ea2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

08013f38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8013f38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f3c:	461e      	mov	r6, r3
 8013f3e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013f40:	4604      	mov	r4, r0
 8013f42:	4617      	mov	r7, r2
 8013f44:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013f48:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013f4c:	f7f8 f9b4 	bl	800c2b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013f50:	4605      	mov	r5, r0
 8013f52:	b918      	cbnz	r0, 8013f5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8013f54:	6030      	str	r0, [r6, #0]
 8013f56:	4628      	mov	r0, r5
 8013f58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f5c:	683b      	ldr	r3, [r7, #0]
 8013f5e:	4601      	mov	r1, r0
 8013f60:	4638      	mov	r0, r7
 8013f62:	68db      	ldr	r3, [r3, #12]
 8013f64:	4798      	blx	r3
 8013f66:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8013f6a:	4602      	mov	r2, r0
 8013f6c:	6030      	str	r0, [r6, #0]
 8013f6e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8013f72:	d213      	bcs.n	8013f9c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8013f74:	4643      	mov	r3, r8
 8013f76:	4639      	mov	r1, r7
 8013f78:	4620      	mov	r0, r4
 8013f7a:	f7ff fe39 	bl	8013bf0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013f7e:	6030      	str	r0, [r6, #0]
 8013f80:	6833      	ldr	r3, [r6, #0]
 8013f82:	b143      	cbz	r3, 8013f96 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8013f84:	7b5a      	ldrb	r2, [r3, #13]
 8013f86:	7a9b      	ldrb	r3, [r3, #10]
 8013f88:	0052      	lsls	r2, r2, #1
 8013f8a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013f8e:	4313      	orrs	r3, r2
 8013f90:	bf0c      	ite	eq
 8013f92:	2301      	moveq	r3, #1
 8013f94:	2300      	movne	r3, #0
 8013f96:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8013f9a:	e7dc      	b.n	8013f56 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8013f9c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013fa0:	b29b      	uxth	r3, r3
 8013fa2:	2b7f      	cmp	r3, #127	; 0x7f
 8013fa4:	d804      	bhi.n	8013fb0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8013fa6:	4639      	mov	r1, r7
 8013fa8:	4620      	mov	r0, r4
 8013faa:	f7ff fd15 	bl	80139d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013fae:	e7e6      	b.n	8013f7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8013fb0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013fb4:	2b00      	cmp	r3, #0
 8013fb6:	d0e3      	beq.n	8013f80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013fb8:	f640 1302 	movw	r3, #2306	; 0x902
 8013fbc:	429d      	cmp	r5, r3
 8013fbe:	d1df      	bne.n	8013f80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013fc0:	4601      	mov	r1, r0
 8013fc2:	4620      	mov	r0, r4
 8013fc4:	f7ff fcd9 	bl	801397a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013fc8:	e7d9      	b.n	8013f7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08013fca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8013fca:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013fce:	461e      	mov	r6, r3
 8013fd0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013fd2:	4604      	mov	r4, r0
 8013fd4:	4617      	mov	r7, r2
 8013fd6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013fda:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013fde:	f7f8 f96b 	bl	800c2b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013fe2:	4605      	mov	r5, r0
 8013fe4:	b918      	cbnz	r0, 8013fee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8013fe6:	6030      	str	r0, [r6, #0]
 8013fe8:	4628      	mov	r0, r5
 8013fea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013fee:	683b      	ldr	r3, [r7, #0]
 8013ff0:	4601      	mov	r1, r0
 8013ff2:	4638      	mov	r0, r7
 8013ff4:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8013ff8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8013ffc:	47c8      	blx	r9
 8013ffe:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8014002:	4602      	mov	r2, r0
 8014004:	6030      	str	r0, [r6, #0]
 8014006:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801400a:	d213      	bcs.n	8014034 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801400c:	4643      	mov	r3, r8
 801400e:	4639      	mov	r1, r7
 8014010:	4620      	mov	r0, r4
 8014012:	f7ff fded 	bl	8013bf0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8014016:	6030      	str	r0, [r6, #0]
 8014018:	6833      	ldr	r3, [r6, #0]
 801401a:	b143      	cbz	r3, 801402e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801401c:	7b5a      	ldrb	r2, [r3, #13]
 801401e:	7a9b      	ldrb	r3, [r3, #10]
 8014020:	0052      	lsls	r2, r2, #1
 8014022:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8014026:	4313      	orrs	r3, r2
 8014028:	bf0c      	ite	eq
 801402a:	2301      	moveq	r3, #1
 801402c:	2300      	movne	r3, #0
 801402e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8014032:	e7d9      	b.n	8013fe8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8014034:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8014038:	b29b      	uxth	r3, r3
 801403a:	2b7f      	cmp	r3, #127	; 0x7f
 801403c:	d804      	bhi.n	8014048 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801403e:	4639      	mov	r1, r7
 8014040:	4620      	mov	r0, r4
 8014042:	f7ff fcc9 	bl	80139d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8014046:	e7e6      	b.n	8014016 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8014048:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801404c:	2b00      	cmp	r3, #0
 801404e:	d0e3      	beq.n	8014018 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8014050:	f640 1302 	movw	r3, #2306	; 0x902
 8014054:	429d      	cmp	r5, r3
 8014056:	d1df      	bne.n	8014018 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8014058:	4601      	mov	r1, r0
 801405a:	4620      	mov	r0, r4
 801405c:	f7ff fc8d 	bl	801397a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8014060:	e7d9      	b.n	8014016 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08014062 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8014062:	b510      	push	{r4, lr}
 8014064:	4604      	mov	r4, r0
 8014066:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801406a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801406c:	b1e1      	cbz	r1, 80140a8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 801406e:	2b0a      	cmp	r3, #10
 8014070:	d02d      	beq.n	80140ce <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8014072:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8014074:	3901      	subs	r1, #1
 8014076:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801407a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801407c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8014080:	1c51      	adds	r1, r2, #1
 8014082:	b289      	uxth	r1, r1
 8014084:	2901      	cmp	r1, #1
 8014086:	bf8a      	itet	hi
 8014088:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801408c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801408e:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8014090:	1c5a      	adds	r2, r3, #1
 8014092:	8722      	strh	r2, [r4, #56]	; 0x38
 8014094:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8014096:	4413      	add	r3, r2
 8014098:	b29b      	uxth	r3, r3
 801409a:	2b09      	cmp	r3, #9
 801409c:	bf88      	it	hi
 801409e:	3b0a      	subhi	r3, #10
 80140a0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80140a4:	8458      	strh	r0, [r3, #34]	; 0x22
 80140a6:	e7de      	b.n	8014066 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80140a8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80140aa:	2b0a      	cmp	r3, #10
 80140ac:	d00f      	beq.n	80140ce <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 80140ae:	4620      	mov	r0, r4
 80140b0:	f7ff fc11 	bl	80138d6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80140b4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80140b6:	1c5a      	adds	r2, r3, #1
 80140b8:	8722      	strh	r2, [r4, #56]	; 0x38
 80140ba:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80140bc:	4413      	add	r3, r2
 80140be:	b29b      	uxth	r3, r3
 80140c0:	2b09      	cmp	r3, #9
 80140c2:	bf88      	it	hi
 80140c4:	3b0a      	subhi	r3, #10
 80140c6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80140ca:	8458      	strh	r0, [r3, #34]	; 0x22
 80140cc:	e7ec      	b.n	80140a8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 80140ce:	bd10      	pop	{r4, pc}

080140d0 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80140d0:	b538      	push	{r3, r4, r5, lr}
 80140d2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80140d4:	4604      	mov	r4, r0
 80140d6:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80140da:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80140dc:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80140de:	3a01      	subs	r2, #1
 80140e0:	8702      	strh	r2, [r0, #56]	; 0x38
 80140e2:	1c5a      	adds	r2, r3, #1
 80140e4:	b292      	uxth	r2, r2
 80140e6:	2a09      	cmp	r2, #9
 80140e8:	bf8a      	itet	hi
 80140ea:	3b09      	subhi	r3, #9
 80140ec:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80140ee:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80140f0:	f7ff ffb7 	bl	8014062 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80140f4:	8c23      	ldrh	r3, [r4, #32]
 80140f6:	2b01      	cmp	r3, #1
 80140f8:	bf9c      	itt	ls
 80140fa:	3301      	addls	r3, #1
 80140fc:	8423      	strhls	r3, [r4, #32]
 80140fe:	8be3      	ldrh	r3, [r4, #30]
 8014100:	b90b      	cbnz	r3, 8014106 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8014102:	2302      	movs	r3, #2
 8014104:	83e3      	strh	r3, [r4, #30]
 8014106:	8be3      	ldrh	r3, [r4, #30]
 8014108:	4628      	mov	r0, r5
 801410a:	3b01      	subs	r3, #1
 801410c:	b29b      	uxth	r3, r3
 801410e:	83e3      	strh	r3, [r4, #30]
 8014110:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014114:	8365      	strh	r5, [r4, #26]
 8014116:	bd38      	pop	{r3, r4, r5, pc}

08014118 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8014118:	428a      	cmp	r2, r1
 801411a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801411e:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8014120:	d932      	bls.n	8014188 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 8014122:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8014124:	1a54      	subs	r4, r2, r1
 8014126:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801412a:	19ee      	adds	r6, r5, r7
 801412c:	fa1f fe84 	uxth.w	lr, r4
 8014130:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8014134:	3e01      	subs	r6, #1
 8014136:	b2b4      	uxth	r4, r6
 8014138:	eba4 090e 	sub.w	r9, r4, lr
 801413c:	fa1f f989 	uxth.w	r9, r9
 8014140:	2c09      	cmp	r4, #9
 8014142:	4626      	mov	r6, r4
 8014144:	bf88      	it	hi
 8014146:	f1a4 060a 	subhi.w	r6, r4, #10
 801414a:	f1bc 0f00 	cmp.w	ip, #0
 801414e:	f104 34ff 	add.w	r4, r4, #4294967295
 8014152:	bf08      	it	eq
 8014154:	f04f 0c02 	moveq.w	ip, #2
 8014158:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801415c:	b2a4      	uxth	r4, r4
 801415e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014162:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8014166:	454c      	cmp	r4, r9
 8014168:	fa1f fc8c 	uxth.w	ip, ip
 801416c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8014170:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8014174:	d1e4      	bne.n	8014140 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8014176:	eba5 050e 	sub.w	r5, r5, lr
 801417a:	eb0e 0408 	add.w	r4, lr, r8
 801417e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8014182:	8705      	strh	r5, [r0, #56]	; 0x38
 8014184:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8014188:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801418a:	250a      	movs	r5, #10
 801418c:	1a64      	subs	r4, r4, r1
 801418e:	4439      	add	r1, r7
 8014190:	b289      	uxth	r1, r1
 8014192:	8704      	strh	r4, [r0, #56]	; 0x38
 8014194:	2909      	cmp	r1, #9
 8014196:	bf88      	it	hi
 8014198:	390a      	subhi	r1, #10
 801419a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801419c:	b18a      	cbz	r2, 80141c2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 801419e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80141a0:	3a01      	subs	r2, #1
 80141a2:	3101      	adds	r1, #1
 80141a4:	b292      	uxth	r2, r2
 80141a6:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80141aa:	8701      	strh	r1, [r0, #56]	; 0x38
 80141ac:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80141ae:	b901      	cbnz	r1, 80141b2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 80141b0:	86c5      	strh	r5, [r0, #54]	; 0x36
 80141b2:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80141b4:	3901      	subs	r1, #1
 80141b6:	b289      	uxth	r1, r1
 80141b8:	86c1      	strh	r1, [r0, #54]	; 0x36
 80141ba:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80141be:	844c      	strh	r4, [r1, #34]	; 0x22
 80141c0:	e7ec      	b.n	801419c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 80141c2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80141c6:	f7ff bf4c 	b.w	8014062 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080141ca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80141ca:	b570      	push	{r4, r5, r6, lr}
 80141cc:	2500      	movs	r5, #0
 80141ce:	4295      	cmp	r5, r2
 80141d0:	d011      	beq.n	80141f6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80141d2:	8bc4      	ldrh	r4, [r0, #30]
 80141d4:	f831 6b02 	ldrh.w	r6, [r1], #2
 80141d8:	4414      	add	r4, r2
 80141da:	3c01      	subs	r4, #1
 80141dc:	1b64      	subs	r4, r4, r5
 80141de:	b2a4      	uxth	r4, r4
 80141e0:	2c01      	cmp	r4, #1
 80141e2:	bf88      	it	hi
 80141e4:	3c02      	subhi	r4, #2
 80141e6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80141ea:	8b64      	ldrh	r4, [r4, #26]
 80141ec:	42b4      	cmp	r4, r6
 80141ee:	d117      	bne.n	8014220 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80141f0:	3501      	adds	r5, #1
 80141f2:	b2ad      	uxth	r5, r5
 80141f4:	e7eb      	b.n	80141ce <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80141f6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80141fa:	2400      	movs	r4, #0
 80141fc:	4413      	add	r3, r2
 80141fe:	b2a2      	uxth	r2, r4
 8014200:	429a      	cmp	r2, r3
 8014202:	da0f      	bge.n	8014224 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8014204:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8014206:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801420a:	3401      	adds	r4, #1
 801420c:	4432      	add	r2, r6
 801420e:	b292      	uxth	r2, r2
 8014210:	2a09      	cmp	r2, #9
 8014212:	bf88      	it	hi
 8014214:	3a0a      	subhi	r2, #10
 8014216:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801421a:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801421c:	42aa      	cmp	r2, r5
 801421e:	d0ee      	beq.n	80141fe <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8014220:	2000      	movs	r0, #0
 8014222:	bd70      	pop	{r4, r5, r6, pc}
 8014224:	2001      	movs	r0, #1
 8014226:	e7fc      	b.n	8014222 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08014228 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8014228:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801422c:	4605      	mov	r5, r0
 801422e:	4616      	mov	r6, r2
 8014230:	1c8c      	adds	r4, r1, #2
 8014232:	8809      	ldrh	r1, [r1, #0]
 8014234:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8014238:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801423c:	42b3      	cmp	r3, r6
 801423e:	d124      	bne.n	801428a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8014240:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8014244:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8014248:	f001 070f 	and.w	r7, r1, #15
 801424c:	4652      	mov	r2, sl
 801424e:	f8cd 8000 	str.w	r8, [sp]
 8014252:	464b      	mov	r3, r9
 8014254:	4621      	mov	r1, r4
 8014256:	4628      	mov	r0, r5
 8014258:	f7ff ffb7 	bl	80141ca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801425c:	4683      	mov	fp, r0
 801425e:	b168      	cbz	r0, 801427c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8014260:	eb0a 0109 	add.w	r1, sl, r9
 8014264:	463a      	mov	r2, r7
 8014266:	4628      	mov	r0, r5
 8014268:	4441      	add	r1, r8
 801426a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801426e:	4649      	mov	r1, r9
 8014270:	f7ff ff52 	bl	8014118 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8014274:	4658      	mov	r0, fp
 8014276:	b003      	add	sp, #12
 8014278:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801427c:	eb07 010a 	add.w	r1, r7, sl
 8014280:	4449      	add	r1, r9
 8014282:	4441      	add	r1, r8
 8014284:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8014288:	e7d2      	b.n	8014230 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801428a:	f04f 0b00 	mov.w	fp, #0
 801428e:	e7f1      	b.n	8014274 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08014290 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8014290:	b570      	push	{r4, r5, r6, lr}
 8014292:	8810      	ldrh	r0, [r2, #0]
 8014294:	4298      	cmp	r0, r3
 8014296:	d817      	bhi.n	80142c8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014298:	1e48      	subs	r0, r1, #1
 801429a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801429e:	4298      	cmp	r0, r3
 80142a0:	d312      	bcc.n	80142c8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80142a2:	2400      	movs	r4, #0
 80142a4:	428c      	cmp	r4, r1
 80142a6:	d20f      	bcs.n	80142c8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80142a8:	1860      	adds	r0, r4, r1
 80142aa:	1040      	asrs	r0, r0, #1
 80142ac:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80142b0:	0085      	lsls	r5, r0, #2
 80142b2:	42b3      	cmp	r3, r6
 80142b4:	d902      	bls.n	80142bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80142b6:	3001      	adds	r0, #1
 80142b8:	b284      	uxth	r4, r0
 80142ba:	e7f3      	b.n	80142a4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80142bc:	d201      	bcs.n	80142c2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80142be:	b281      	uxth	r1, r0
 80142c0:	e7f0      	b.n	80142a4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80142c2:	442a      	add	r2, r5
 80142c4:	8850      	ldrh	r0, [r2, #2]
 80142c6:	bd70      	pop	{r4, r5, r6, pc}
 80142c8:	2000      	movs	r0, #0
 80142ca:	e7fc      	b.n	80142c6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080142cc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80142cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80142d0:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80142d2:	4604      	mov	r4, r0
 80142d4:	260b      	movs	r6, #11
 80142d6:	886f      	ldrh	r7, [r5, #2]
 80142d8:	087f      	lsrs	r7, r7, #1
 80142da:	3e01      	subs	r6, #1
 80142dc:	d013      	beq.n	8014306 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80142de:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80142e0:	462a      	mov	r2, r5
 80142e2:	4639      	mov	r1, r7
 80142e4:	4620      	mov	r0, r4
 80142e6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80142ea:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80142ee:	4643      	mov	r3, r8
 80142f0:	f7ff ffce 	bl	8014290 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80142f4:	b138      	cbz	r0, 8014306 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80142f6:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80142fa:	4642      	mov	r2, r8
 80142fc:	4620      	mov	r0, r4
 80142fe:	f7ff ff93 	bl	8014228 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8014302:	2800      	cmp	r0, #0
 8014304:	d1e9      	bne.n	80142da <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8014306:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0801430c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801430c:	b570      	push	{r4, r5, r6, lr}
 801430e:	694a      	ldr	r2, [r1, #20]
 8014310:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8014312:	684b      	ldr	r3, [r1, #4]
 8014314:	1b54      	subs	r4, r2, r5
 8014316:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8014318:	f000 8106 	beq.w	8014528 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801431c:	1b9b      	subs	r3, r3, r6
 801431e:	d003      	beq.n	8014328 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8014320:	4363      	muls	r3, r4
 8014322:	2210      	movs	r2, #16
 8014324:	fb93 f3f2 	sdiv	r3, r3, r2
 8014328:	680c      	ldr	r4, [r1, #0]
 801432a:	698a      	ldr	r2, [r1, #24]
 801432c:	1b65      	subs	r5, r4, r5
 801432e:	f000 80fd 	beq.w	801452c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8014332:	1b92      	subs	r2, r2, r6
 8014334:	d003      	beq.n	801433e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8014336:	436a      	muls	r2, r5
 8014338:	2410      	movs	r4, #16
 801433a:	fb92 f2f4 	sdiv	r2, r2, r4
 801433e:	1a9b      	subs	r3, r3, r2
 8014340:	ed9f 4a89 	vldr	s8, [pc, #548]	; 8014568 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8014344:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014348:	460a      	mov	r2, r1
 801434a:	ee07 3a90 	vmov	s15, r3
 801434e:	f100 040c 	add.w	r4, r0, #12
 8014352:	4603      	mov	r3, r0
 8014354:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014358:	ee67 7a84 	vmul.f32	s15, s15, s8
 801435c:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8014360:	eeb1 6a43 	vneg.f32	s12, s6
 8014364:	edd2 7a02 	vldr	s15, [r2, #8]
 8014368:	3214      	adds	r2, #20
 801436a:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801436e:	ece3 6a01 	vstmia	r3!, {s13}
 8014372:	429c      	cmp	r4, r3
 8014374:	ed52 7a02 	vldr	s15, [r2, #-8]
 8014378:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801437c:	edc3 7a02 	vstr	s15, [r3, #8]
 8014380:	ed52 7a01 	vldr	s15, [r2, #-4]
 8014384:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014388:	edc3 7a05 	vstr	s15, [r3, #20]
 801438c:	d1ea      	bne.n	8014364 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801438e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014390:	698b      	ldr	r3, [r1, #24]
 8014392:	edd0 4a02 	vldr	s9, [r0, #8]
 8014396:	1a9b      	subs	r3, r3, r2
 8014398:	edd0 3a00 	vldr	s7, [r0]
 801439c:	edd0 6a01 	vldr	s13, [r0, #4]
 80143a0:	ee07 3a90 	vmov	s15, r3
 80143a4:	684b      	ldr	r3, [r1, #4]
 80143a6:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80143aa:	ed90 5a05 	vldr	s10, [r0, #20]
 80143ae:	1a9b      	subs	r3, r3, r2
 80143b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80143b4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80143b8:	ed90 2a03 	vldr	s4, [r0, #12]
 80143bc:	ee07 3a10 	vmov	s14, r3
 80143c0:	edd0 5a04 	vldr	s11, [r0, #16]
 80143c4:	ee67 7a84 	vmul.f32	s15, s15, s8
 80143c8:	ed90 1a07 	vldr	s2, [r0, #28]
 80143cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80143d0:	edd0 2a06 	vldr	s5, [r0, #24]
 80143d4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80143d8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80143dc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80143e0:	ee32 5a45 	vsub.f32	s10, s4, s10
 80143e4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80143e8:	ee67 7a83 	vmul.f32	s15, s15, s6
 80143ec:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80143f0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80143f2:	694a      	ldr	r2, [r1, #20]
 80143f4:	1b13      	subs	r3, r2, r4
 80143f6:	ee07 3a10 	vmov	s14, r3
 80143fa:	680b      	ldr	r3, [r1, #0]
 80143fc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014400:	1b1b      	subs	r3, r3, r4
 8014402:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014406:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801440a:	ee07 3a10 	vmov	s14, r3
 801440e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014412:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014416:	eee6 4a87 	vfma.f32	s9, s13, s14
 801441a:	ee64 4a86 	vmul.f32	s9, s9, s12
 801441e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8014422:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014424:	698b      	ldr	r3, [r1, #24]
 8014426:	1a9b      	subs	r3, r3, r2
 8014428:	ee06 3a90 	vmov	s13, r3
 801442c:	684b      	ldr	r3, [r1, #4]
 801442e:	1a9b      	subs	r3, r3, r2
 8014430:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014434:	ee07 3a10 	vmov	s14, r3
 8014438:	ee66 6a84 	vmul.f32	s13, s13, s8
 801443c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014440:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8014444:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014448:	eee5 6a87 	vfma.f32	s13, s11, s14
 801444c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8014450:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8014454:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8014456:	694a      	ldr	r2, [r1, #20]
 8014458:	1b13      	subs	r3, r2, r4
 801445a:	ee07 3a10 	vmov	s14, r3
 801445e:	680b      	ldr	r3, [r1, #0]
 8014460:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014464:	1b1b      	subs	r3, r3, r4
 8014466:	ee27 7a04 	vmul.f32	s14, s14, s8
 801446a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801446e:	ee07 3a10 	vmov	s14, r3
 8014472:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014476:	ee27 7a04 	vmul.f32	s14, s14, s8
 801447a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801447e:	edd0 5a08 	vldr	s11, [r0, #32]
 8014482:	ee31 1a65 	vsub.f32	s2, s2, s11
 8014486:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801448a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801448e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8014492:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014494:	698b      	ldr	r3, [r1, #24]
 8014496:	1a9b      	subs	r3, r3, r2
 8014498:	ee07 3a10 	vmov	s14, r3
 801449c:	684b      	ldr	r3, [r1, #4]
 801449e:	1a9b      	subs	r3, r3, r2
 80144a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80144a4:	ee01 3a90 	vmov	s3, r3
 80144a8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80144ac:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80144b0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80144b4:	ee61 1a84 	vmul.f32	s3, s3, s8
 80144b8:	eea1 7a21 	vfma.f32	s14, s2, s3
 80144bc:	ee27 7a03 	vmul.f32	s14, s14, s6
 80144c0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80144c4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80144c6:	694a      	ldr	r2, [r1, #20]
 80144c8:	1b13      	subs	r3, r2, r4
 80144ca:	ee03 3a10 	vmov	s6, r3
 80144ce:	680b      	ldr	r3, [r1, #0]
 80144d0:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80144d4:	1b1b      	subs	r3, r3, r4
 80144d6:	ee23 3a04 	vmul.f32	s6, s6, s8
 80144da:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80144de:	ee03 3a10 	vmov	s6, r3
 80144e2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80144e6:	ee23 4a04 	vmul.f32	s8, s6, s8
 80144ea:	eee1 5a04 	vfma.f32	s11, s2, s8
 80144ee:	ee25 6a86 	vmul.f32	s12, s11, s12
 80144f2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80144f6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80144fa:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80144fe:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8014502:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014506:	dd13      	ble.n	8014530 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8014508:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801450c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8014510:	63c3      	str	r3, [r0, #60]	; 0x3c
 8014512:	eee3 7a87 	vfma.f32	s15, s7, s14
 8014516:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801451a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801451e:	dd15      	ble.n	801454c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8014520:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014524:	6403      	str	r3, [r0, #64]	; 0x40
 8014526:	bd70      	pop	{r4, r5, r6, pc}
 8014528:	4623      	mov	r3, r4
 801452a:	e6fd      	b.n	8014328 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801452c:	462a      	mov	r2, r5
 801452e:	e706      	b.n	801433e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8014530:	d502      	bpl.n	8014538 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8014532:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8014536:	e7e9      	b.n	801450c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8014538:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801453c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8014540:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8014544:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014548:	dade      	bge.n	8014508 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801454a:	e7f2      	b.n	8014532 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801454c:	d502      	bpl.n	8014554 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801454e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8014552:	e7e7      	b.n	8014524 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8014554:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8014558:	eee3 4a86 	vfma.f32	s9, s7, s12
 801455c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8014560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014564:	dadc      	bge.n	8014520 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8014566:	e7f2      	b.n	801454e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8014568:	3d800000 	.word	0x3d800000

0801456c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801456c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014570:	2714      	movs	r7, #20
 8014572:	435f      	muls	r7, r3
 8014574:	eb02 0c07 	add.w	ip, r2, r7
 8014578:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801457c:	f115 0e0f 	adds.w	lr, r5, #15
 8014580:	f100 80a2 	bmi.w	80146c8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8014584:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8014588:	9c08      	ldr	r4, [sp, #32]
 801458a:	2614      	movs	r6, #20
 801458c:	f8c0 e014 	str.w	lr, [r0, #20]
 8014590:	4366      	muls	r6, r4
 8014592:	eb02 0806 	add.w	r8, r2, r6
 8014596:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801459a:	f115 040f 	adds.w	r4, r5, #15
 801459e:	f100 809f 	bmi.w	80146e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80145a2:	1124      	asrs	r4, r4, #4
 80145a4:	eba4 040e 	sub.w	r4, r4, lr
 80145a8:	6184      	str	r4, [r0, #24]
 80145aa:	2c00      	cmp	r4, #0
 80145ac:	f000 808a 	beq.w	80146c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80145b0:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80145b4:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80145b8:	5995      	ldr	r5, [r2, r6]
 80145ba:	eba4 0809 	sub.w	r8, r4, r9
 80145be:	59d4      	ldr	r4, [r2, r7]
 80145c0:	eba5 0a04 	sub.w	sl, r5, r4
 80145c4:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80145c8:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80145cc:	fb0e fe05 	mul.w	lr, lr, r5
 80145d0:	fb0a ee19 	mls	lr, sl, r9, lr
 80145d4:	fb08 e404 	mla	r4, r8, r4, lr
 80145d8:	3c01      	subs	r4, #1
 80145da:	19a4      	adds	r4, r4, r6
 80145dc:	f100 808c 	bmi.w	80146f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80145e0:	fb94 fef6 	sdiv	lr, r4, r6
 80145e4:	fb06 441e 	mls	r4, r6, lr, r4
 80145e8:	f8c0 e000 	str.w	lr, [r0]
 80145ec:	6104      	str	r4, [r0, #16]
 80145ee:	2d00      	cmp	r5, #0
 80145f0:	f2c0 8095 	blt.w	801471e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80145f4:	fb95 f4f6 	sdiv	r4, r5, r6
 80145f8:	fb06 5514 	mls	r5, r6, r4, r5
 80145fc:	6044      	str	r4, [r0, #4]
 80145fe:	6085      	str	r5, [r0, #8]
 8014600:	60c6      	str	r6, [r0, #12]
 8014602:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8014606:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801460a:	6945      	ldr	r5, [r0, #20]
 801460c:	59d2      	ldr	r2, [r2, r7]
 801460e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8014612:	eddf 6a4b 	vldr	s13, [pc, #300]	; 8014740 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8014616:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801461a:	ee07 4a10 	vmov	s14, r4
 801461e:	6804      	ldr	r4, [r0, #0]
 8014620:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8014624:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014628:	ee07 2a90 	vmov	s15, r2
 801462c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8014630:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014634:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014638:	edd3 6a00 	vldr	s13, [r3]
 801463c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8014640:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8014644:	eee6 6a27 	vfma.f32	s13, s12, s15
 8014648:	edc0 6a07 	vstr	s13, [r0, #28]
 801464c:	edd0 6a01 	vldr	s13, [r0, #4]
 8014650:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8014654:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014658:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801465c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014660:	ed80 6a08 	vstr	s12, [r0, #32]
 8014664:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8014666:	6242      	str	r2, [r0, #36]	; 0x24
 8014668:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801466c:	ed93 6a03 	vldr	s12, [r3, #12]
 8014670:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014674:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8014678:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801467c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8014680:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8014684:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8014688:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801468c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8014690:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014692:	6302      	str	r2, [r0, #48]	; 0x30
 8014694:	ed93 6a06 	vldr	s12, [r3, #24]
 8014698:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801469c:	eea5 6a87 	vfma.f32	s12, s11, s14
 80146a0:	eeb0 7a46 	vmov.f32	s14, s12
 80146a4:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80146a8:	eea6 7a27 	vfma.f32	s14, s12, s15
 80146ac:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80146b0:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80146b4:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80146b8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80146bc:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80146c0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80146c2:	63c3      	str	r3, [r0, #60]	; 0x3c
 80146c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80146c8:	2410      	movs	r4, #16
 80146ca:	f1c5 0501 	rsb	r5, r5, #1
 80146ce:	fb9e fef4 	sdiv	lr, lr, r4
 80146d2:	f015 050f 	ands.w	r5, r5, #15
 80146d6:	bf18      	it	ne
 80146d8:	2501      	movne	r5, #1
 80146da:	ebae 0e05 	sub.w	lr, lr, r5
 80146de:	e753      	b.n	8014588 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80146e0:	f04f 0910 	mov.w	r9, #16
 80146e4:	f1c5 0501 	rsb	r5, r5, #1
 80146e8:	fb94 f4f9 	sdiv	r4, r4, r9
 80146ec:	f015 050f 	ands.w	r5, r5, #15
 80146f0:	bf18      	it	ne
 80146f2:	2501      	movne	r5, #1
 80146f4:	1b64      	subs	r4, r4, r5
 80146f6:	e755      	b.n	80145a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80146f8:	4264      	negs	r4, r4
 80146fa:	fb94 fef6 	sdiv	lr, r4, r6
 80146fe:	f1ce 0800 	rsb	r8, lr, #0
 8014702:	fb06 441e 	mls	r4, r6, lr, r4
 8014706:	f8c0 8000 	str.w	r8, [r0]
 801470a:	6104      	str	r4, [r0, #16]
 801470c:	2c00      	cmp	r4, #0
 801470e:	f43f af6e 	beq.w	80145ee <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8014712:	ea6f 0e0e 	mvn.w	lr, lr
 8014716:	1b34      	subs	r4, r6, r4
 8014718:	f8c0 e000 	str.w	lr, [r0]
 801471c:	e766      	b.n	80145ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801471e:	426d      	negs	r5, r5
 8014720:	fb95 f4f6 	sdiv	r4, r5, r6
 8014724:	f1c4 0e00 	rsb	lr, r4, #0
 8014728:	fb06 5514 	mls	r5, r6, r4, r5
 801472c:	f8c0 e004 	str.w	lr, [r0, #4]
 8014730:	6085      	str	r5, [r0, #8]
 8014732:	2d00      	cmp	r5, #0
 8014734:	f43f af64 	beq.w	8014600 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8014738:	43e4      	mvns	r4, r4
 801473a:	1b75      	subs	r5, r6, r5
 801473c:	6044      	str	r4, [r0, #4]
 801473e:	e75e      	b.n	80145fe <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8014740:	3d800000 	.word	0x3d800000

08014744 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8014744:	4602      	mov	r2, r0
 8014746:	b148      	cbz	r0, 801475c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8014748:	2300      	movs	r3, #0
 801474a:	b298      	uxth	r0, r3
 801474c:	3301      	adds	r3, #1
 801474e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8014752:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8014756:	2900      	cmp	r1, #0
 8014758:	d1f7      	bne.n	801474a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801475a:	4770      	bx	lr
 801475c:	4770      	bx	lr

0801475e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801475e:	b530      	push	{r4, r5, lr}
 8014760:	4604      	mov	r4, r0
 8014762:	b159      	cbz	r1, 801477c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8014764:	b148      	cbz	r0, 801477a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8014766:	2300      	movs	r3, #0
 8014768:	b298      	uxth	r0, r3
 801476a:	4282      	cmp	r2, r0
 801476c:	d905      	bls.n	801477a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801476e:	5ccd      	ldrb	r5, [r1, r3]
 8014770:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8014774:	3301      	adds	r3, #1
 8014776:	2d00      	cmp	r5, #0
 8014778:	d1f6      	bne.n	8014768 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801477a:	bd30      	pop	{r4, r5, pc}
 801477c:	4608      	mov	r0, r1
 801477e:	e7fc      	b.n	801477a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08014780 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8014780:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014782:	b08b      	sub	sp, #44	; 0x2c
 8014784:	468c      	mov	ip, r1
 8014786:	4604      	mov	r4, r0
 8014788:	2100      	movs	r1, #0
 801478a:	261f      	movs	r6, #31
 801478c:	af01      	add	r7, sp, #4
 801478e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8014792:	1e71      	subs	r1, r6, #1
 8014794:	fb94 fef3 	sdiv	lr, r4, r3
 8014798:	fb03 441e 	mls	r4, r3, lr, r4
 801479c:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80147a0:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80147a4:	b2ec      	uxtb	r4, r5
 80147a6:	2d09      	cmp	r5, #9
 80147a8:	bfd4      	ite	le
 80147aa:	3430      	addle	r4, #48	; 0x30
 80147ac:	3457      	addgt	r4, #87	; 0x57
 80147ae:	b2e4      	uxtb	r4, r4
 80147b0:	55bc      	strb	r4, [r7, r6]
 80147b2:	4674      	mov	r4, lr
 80147b4:	b974      	cbnz	r4, 80147d4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80147b6:	2800      	cmp	r0, #0
 80147b8:	da05      	bge.n	80147c6 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80147ba:	ab0a      	add	r3, sp, #40	; 0x28
 80147bc:	4419      	add	r1, r3
 80147be:	232d      	movs	r3, #45	; 0x2d
 80147c0:	f801 3c24 	strb.w	r3, [r1, #-36]
 80147c4:	1eb1      	subs	r1, r6, #2
 80147c6:	3101      	adds	r1, #1
 80147c8:	4660      	mov	r0, ip
 80147ca:	4439      	add	r1, r7
 80147cc:	f7ff ffc7 	bl	801475e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80147d0:	b00b      	add	sp, #44	; 0x2c
 80147d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80147d4:	460e      	mov	r6, r1
 80147d6:	e7dc      	b.n	8014792 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

080147d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 80147d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80147da:	468c      	mov	ip, r1
 80147dc:	b08b      	sub	sp, #44	; 0x2c
 80147de:	2100      	movs	r1, #0
 80147e0:	ae01      	add	r6, sp, #4
 80147e2:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80147e6:	211f      	movs	r1, #31
 80147e8:	fbb0 f7f3 	udiv	r7, r0, r3
 80147ec:	fb03 0517 	mls	r5, r3, r7, r0
 80147f0:	4638      	mov	r0, r7
 80147f2:	b2ec      	uxtb	r4, r5
 80147f4:	2d09      	cmp	r5, #9
 80147f6:	bfd4      	ite	le
 80147f8:	3430      	addle	r4, #48	; 0x30
 80147fa:	3457      	addgt	r4, #87	; 0x57
 80147fc:	b2e4      	uxtb	r4, r4
 80147fe:	558c      	strb	r4, [r1, r6]
 8014800:	1e4c      	subs	r4, r1, #1
 8014802:	b92f      	cbnz	r7, 8014810 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8014804:	4431      	add	r1, r6
 8014806:	4660      	mov	r0, ip
 8014808:	f7ff ffa9 	bl	801475e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801480c:	b00b      	add	sp, #44	; 0x2c
 801480e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014810:	4621      	mov	r1, r4
 8014812:	e7e9      	b.n	80147e8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08014814 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8014814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014818:	b085      	sub	sp, #20
 801481a:	4691      	mov	r9, r2
 801481c:	6802      	ldr	r2, [r0, #0]
 801481e:	4688      	mov	r8, r1
 8014820:	461c      	mov	r4, r3
 8014822:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8014826:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801482a:	4683      	mov	fp, r0
 801482c:	4610      	mov	r0, r2
 801482e:	9103      	str	r1, [sp, #12]
 8014830:	9302      	str	r3, [sp, #8]
 8014832:	9201      	str	r2, [sp, #4]
 8014834:	f7ff ff86 	bl	8014744 <_ZN8touchgfx7Unicode6strlenEPKt>
 8014838:	f1b8 0f00 	cmp.w	r8, #0
 801483c:	bf0c      	ite	eq
 801483e:	4684      	moveq	ip, r0
 8014840:	f100 0c01 	addne.w	ip, r0, #1
 8014844:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8014848:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801484c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801484e:	fa1f fc8c 	uxth.w	ip, ip
 8014852:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014854:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8014858:	9903      	ldr	r1, [sp, #12]
 801485a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801485e:	d041      	beq.n	80148e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8014860:	d834      	bhi.n	80148cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8014862:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8014866:	d059      	beq.n	801491c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8014868:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801486c:	d03a      	beq.n	80148e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801486e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8014872:	d034      	beq.n	80148de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8014874:	2400      	movs	r4, #0
 8014876:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801487a:	3a01      	subs	r2, #1
 801487c:	b169      	cbz	r1, 801489a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801487e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8014880:	458c      	cmp	ip, r1
 8014882:	da09      	bge.n	8014898 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8014884:	eba1 010c 	sub.w	r1, r1, ip
 8014888:	b289      	uxth	r1, r1
 801488a:	b933      	cbnz	r3, 801489a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801488c:	2e00      	cmp	r6, #0
 801488e:	d051      	beq.n	8014934 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8014890:	2800      	cmp	r0, #0
 8014892:	d04f      	beq.n	8014934 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8014894:	440c      	add	r4, r1
 8014896:	b2a4      	uxth	r4, r4
 8014898:	2100      	movs	r1, #0
 801489a:	682b      	ldr	r3, [r5, #0]
 801489c:	4293      	cmp	r3, r2
 801489e:	da07      	bge.n	80148b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80148a0:	f1b8 0f00 	cmp.w	r8, #0
 80148a4:	d004      	beq.n	80148b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80148a6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80148aa:	682b      	ldr	r3, [r5, #0]
 80148ac:	3301      	adds	r3, #1
 80148ae:	602b      	str	r3, [r5, #0]
 80148b0:	2730      	movs	r7, #48	; 0x30
 80148b2:	2c00      	cmp	r4, #0
 80148b4:	d04e      	beq.n	8014954 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80148b6:	682e      	ldr	r6, [r5, #0]
 80148b8:	3c01      	subs	r4, #1
 80148ba:	42b2      	cmp	r2, r6
 80148bc:	b2a4      	uxth	r4, r4
 80148be:	dd49      	ble.n	8014954 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80148c0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80148c4:	682b      	ldr	r3, [r5, #0]
 80148c6:	3301      	adds	r3, #1
 80148c8:	602b      	str	r3, [r5, #0]
 80148ca:	e7f2      	b.n	80148b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80148cc:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80148d0:	d01d      	beq.n	801490e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80148d2:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80148d6:	d002      	beq.n	80148de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80148d8:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80148dc:	e7c9      	b.n	8014872 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80148de:	4684      	mov	ip, r0
 80148e0:	f04f 0800 	mov.w	r8, #0
 80148e4:	2c00      	cmp	r4, #0
 80148e6:	d0c6      	beq.n	8014876 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80148e8:	b947      	cbnz	r7, 80148fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80148ea:	2801      	cmp	r0, #1
 80148ec:	d106      	bne.n	80148fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80148ee:	8814      	ldrh	r4, [r2, #0]
 80148f0:	2c30      	cmp	r4, #48	; 0x30
 80148f2:	bf02      	ittt	eq
 80148f4:	3202      	addeq	r2, #2
 80148f6:	4638      	moveq	r0, r7
 80148f8:	f8cb 2000 	streq.w	r2, [fp]
 80148fc:	45bc      	cmp	ip, r7
 80148fe:	da14      	bge.n	801492a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8014900:	b2bf      	uxth	r7, r7
 8014902:	eba7 040c 	sub.w	r4, r7, ip
 8014906:	46bc      	mov	ip, r7
 8014908:	b2a4      	uxth	r4, r4
 801490a:	2600      	movs	r6, #0
 801490c:	e7b3      	b.n	8014876 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801490e:	4684      	mov	ip, r0
 8014910:	b16c      	cbz	r4, 801492e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8014912:	42b8      	cmp	r0, r7
 8014914:	dd00      	ble.n	8014918 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8014916:	b2b8      	uxth	r0, r7
 8014918:	2400      	movs	r4, #0
 801491a:	e003      	b.n	8014924 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801491c:	f04f 0c01 	mov.w	ip, #1
 8014920:	2400      	movs	r4, #0
 8014922:	4660      	mov	r0, ip
 8014924:	4626      	mov	r6, r4
 8014926:	46a0      	mov	r8, r4
 8014928:	e7a5      	b.n	8014876 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801492a:	2400      	movs	r4, #0
 801492c:	e7ed      	b.n	801490a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801492e:	4626      	mov	r6, r4
 8014930:	46a0      	mov	r8, r4
 8014932:	e7a0      	b.n	8014876 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014934:	2900      	cmp	r1, #0
 8014936:	d0b0      	beq.n	801489a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014938:	2720      	movs	r7, #32
 801493a:	682e      	ldr	r6, [r5, #0]
 801493c:	2900      	cmp	r1, #0
 801493e:	d0ac      	beq.n	801489a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014940:	3901      	subs	r1, #1
 8014942:	4296      	cmp	r6, r2
 8014944:	b289      	uxth	r1, r1
 8014946:	daa7      	bge.n	8014898 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8014948:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801494c:	682b      	ldr	r3, [r5, #0]
 801494e:	3301      	adds	r3, #1
 8014950:	602b      	str	r3, [r5, #0]
 8014952:	e7f2      	b.n	801493a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8014954:	b188      	cbz	r0, 801497a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8014956:	682b      	ldr	r3, [r5, #0]
 8014958:	3801      	subs	r0, #1
 801495a:	429a      	cmp	r2, r3
 801495c:	b280      	uxth	r0, r0
 801495e:	dd0c      	ble.n	801497a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8014960:	f8db 3000 	ldr.w	r3, [fp]
 8014964:	1c9c      	adds	r4, r3, #2
 8014966:	f8cb 4000 	str.w	r4, [fp]
 801496a:	881c      	ldrh	r4, [r3, #0]
 801496c:	682b      	ldr	r3, [r5, #0]
 801496e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8014972:	682b      	ldr	r3, [r5, #0]
 8014974:	3301      	adds	r3, #1
 8014976:	602b      	str	r3, [r5, #0]
 8014978:	e7ec      	b.n	8014954 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801497a:	2620      	movs	r6, #32
 801497c:	b151      	cbz	r1, 8014994 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801497e:	6828      	ldr	r0, [r5, #0]
 8014980:	3901      	subs	r1, #1
 8014982:	4282      	cmp	r2, r0
 8014984:	b289      	uxth	r1, r1
 8014986:	dd05      	ble.n	8014994 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8014988:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801498c:	682b      	ldr	r3, [r5, #0]
 801498e:	3301      	adds	r3, #1
 8014990:	602b      	str	r3, [r5, #0]
 8014992:	e7f3      	b.n	801497c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8014994:	b005      	add	sp, #20
 8014996:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801499a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801499a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801499e:	2400      	movs	r4, #0
 80149a0:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80149a4:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 80149a8:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 80149ac:	8014      	strh	r4, [r2, #0]
 80149ae:	701c      	strb	r4, [r3, #0]
 80149b0:	f888 4000 	strb.w	r4, [r8]
 80149b4:	f88c 4000 	strb.w	r4, [ip]
 80149b8:	f88e 4000 	strb.w	r4, [lr]
 80149bc:	703c      	strb	r4, [r7, #0]
 80149be:	6804      	ldr	r4, [r0, #0]
 80149c0:	b1a4      	cbz	r4, 80149ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80149c2:	8824      	ldrh	r4, [r4, #0]
 80149c4:	f04f 0901 	mov.w	r9, #1
 80149c8:	b314      	cbz	r4, 8014a10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80149ca:	2c2b      	cmp	r4, #43	; 0x2b
 80149cc:	d001      	beq.n	80149d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80149ce:	2c20      	cmp	r4, #32
 80149d0:	d110      	bne.n	80149f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80149d2:	8014      	strh	r4, [r2, #0]
 80149d4:	6804      	ldr	r4, [r0, #0]
 80149d6:	b10c      	cbz	r4, 80149dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80149d8:	3402      	adds	r4, #2
 80149da:	6004      	str	r4, [r0, #0]
 80149dc:	680c      	ldr	r4, [r1, #0]
 80149de:	b10c      	cbz	r4, 80149e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80149e0:	3401      	adds	r4, #1
 80149e2:	600c      	str	r4, [r1, #0]
 80149e4:	6804      	ldr	r4, [r0, #0]
 80149e6:	b17c      	cbz	r4, 8014a08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80149e8:	8824      	ldrh	r4, [r4, #0]
 80149ea:	e7ed      	b.n	80149c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80149ec:	680c      	ldr	r4, [r1, #0]
 80149ee:	b17c      	cbz	r4, 8014a10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80149f0:	7824      	ldrb	r4, [r4, #0]
 80149f2:	e7e7      	b.n	80149c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80149f4:	2c2d      	cmp	r4, #45	; 0x2d
 80149f6:	d102      	bne.n	80149fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80149f8:	f883 9000 	strb.w	r9, [r3]
 80149fc:	e7ea      	b.n	80149d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80149fe:	2c23      	cmp	r4, #35	; 0x23
 8014a00:	d107      	bne.n	8014a12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8014a02:	f888 9000 	strb.w	r9, [r8]
 8014a06:	e7e5      	b.n	80149d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8014a08:	680c      	ldr	r4, [r1, #0]
 8014a0a:	b10c      	cbz	r4, 8014a10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014a0c:	7824      	ldrb	r4, [r4, #0]
 8014a0e:	e7db      	b.n	80149c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8014a10:	2400      	movs	r4, #0
 8014a12:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8014a16:	2b09      	cmp	r3, #9
 8014a18:	d901      	bls.n	8014a1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8014a1a:	2c2a      	cmp	r4, #42	; 0x2a
 8014a1c:	d122      	bne.n	8014a64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014a1e:	2301      	movs	r3, #1
 8014a20:	2c30      	cmp	r4, #48	; 0x30
 8014a22:	f88e 3000 	strb.w	r3, [lr]
 8014a26:	d10d      	bne.n	8014a44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8014a28:	f88c 3000 	strb.w	r3, [ip]
 8014a2c:	6803      	ldr	r3, [r0, #0]
 8014a2e:	b10b      	cbz	r3, 8014a34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8014a30:	3302      	adds	r3, #2
 8014a32:	6003      	str	r3, [r0, #0]
 8014a34:	680b      	ldr	r3, [r1, #0]
 8014a36:	b10b      	cbz	r3, 8014a3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8014a38:	3301      	adds	r3, #1
 8014a3a:	600b      	str	r3, [r1, #0]
 8014a3c:	6803      	ldr	r3, [r0, #0]
 8014a3e:	2b00      	cmp	r3, #0
 8014a40:	d02f      	beq.n	8014aa2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8014a42:	881c      	ldrh	r4, [r3, #0]
 8014a44:	2c2a      	cmp	r4, #42	; 0x2a
 8014a46:	d135      	bne.n	8014ab4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8014a48:	f04f 33ff 	mov.w	r3, #4294967295
 8014a4c:	6033      	str	r3, [r6, #0]
 8014a4e:	6803      	ldr	r3, [r0, #0]
 8014a50:	b10b      	cbz	r3, 8014a56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8014a52:	3302      	adds	r3, #2
 8014a54:	6003      	str	r3, [r0, #0]
 8014a56:	680b      	ldr	r3, [r1, #0]
 8014a58:	b10b      	cbz	r3, 8014a5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8014a5a:	3301      	adds	r3, #1
 8014a5c:	600b      	str	r3, [r1, #0]
 8014a5e:	6803      	ldr	r3, [r0, #0]
 8014a60:	b31b      	cbz	r3, 8014aaa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8014a62:	881c      	ldrh	r4, [r3, #0]
 8014a64:	2c2e      	cmp	r4, #46	; 0x2e
 8014a66:	d11a      	bne.n	8014a9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014a68:	2301      	movs	r3, #1
 8014a6a:	703b      	strb	r3, [r7, #0]
 8014a6c:	6803      	ldr	r3, [r0, #0]
 8014a6e:	b10b      	cbz	r3, 8014a74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8014a70:	3302      	adds	r3, #2
 8014a72:	6003      	str	r3, [r0, #0]
 8014a74:	680b      	ldr	r3, [r1, #0]
 8014a76:	b10b      	cbz	r3, 8014a7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8014a78:	3301      	adds	r3, #1
 8014a7a:	600b      	str	r3, [r1, #0]
 8014a7c:	6803      	ldr	r3, [r0, #0]
 8014a7e:	2b00      	cmp	r3, #0
 8014a80:	d036      	beq.n	8014af0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8014a82:	881b      	ldrh	r3, [r3, #0]
 8014a84:	2b2a      	cmp	r3, #42	; 0x2a
 8014a86:	d137      	bne.n	8014af8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8014a88:	f04f 33ff 	mov.w	r3, #4294967295
 8014a8c:	602b      	str	r3, [r5, #0]
 8014a8e:	6803      	ldr	r3, [r0, #0]
 8014a90:	b10b      	cbz	r3, 8014a96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8014a92:	3302      	adds	r3, #2
 8014a94:	6003      	str	r3, [r0, #0]
 8014a96:	680b      	ldr	r3, [r1, #0]
 8014a98:	b10b      	cbz	r3, 8014a9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014a9a:	3301      	adds	r3, #1
 8014a9c:	600b      	str	r3, [r1, #0]
 8014a9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014aa2:	680c      	ldr	r4, [r1, #0]
 8014aa4:	b134      	cbz	r4, 8014ab4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8014aa6:	7824      	ldrb	r4, [r4, #0]
 8014aa8:	e7cc      	b.n	8014a44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8014aaa:	680b      	ldr	r3, [r1, #0]
 8014aac:	2b00      	cmp	r3, #0
 8014aae:	d0f6      	beq.n	8014a9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014ab0:	781c      	ldrb	r4, [r3, #0]
 8014ab2:	e7d7      	b.n	8014a64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014ab4:	2300      	movs	r3, #0
 8014ab6:	220a      	movs	r2, #10
 8014ab8:	6033      	str	r3, [r6, #0]
 8014aba:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8014abe:	fa1f f38c 	uxth.w	r3, ip
 8014ac2:	2b09      	cmp	r3, #9
 8014ac4:	d8ce      	bhi.n	8014a64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014ac6:	6833      	ldr	r3, [r6, #0]
 8014ac8:	fb02 c303 	mla	r3, r2, r3, ip
 8014acc:	6033      	str	r3, [r6, #0]
 8014ace:	6803      	ldr	r3, [r0, #0]
 8014ad0:	b10b      	cbz	r3, 8014ad6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8014ad2:	3302      	adds	r3, #2
 8014ad4:	6003      	str	r3, [r0, #0]
 8014ad6:	680b      	ldr	r3, [r1, #0]
 8014ad8:	b10b      	cbz	r3, 8014ade <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8014ada:	3301      	adds	r3, #1
 8014adc:	600b      	str	r3, [r1, #0]
 8014ade:	6803      	ldr	r3, [r0, #0]
 8014ae0:	b10b      	cbz	r3, 8014ae6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8014ae2:	881c      	ldrh	r4, [r3, #0]
 8014ae4:	e7e9      	b.n	8014aba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014ae6:	680c      	ldr	r4, [r1, #0]
 8014ae8:	2c00      	cmp	r4, #0
 8014aea:	d0e6      	beq.n	8014aba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014aec:	7824      	ldrb	r4, [r4, #0]
 8014aee:	e7e4      	b.n	8014aba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014af0:	680b      	ldr	r3, [r1, #0]
 8014af2:	b10b      	cbz	r3, 8014af8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8014af4:	781b      	ldrb	r3, [r3, #0]
 8014af6:	e7c5      	b.n	8014a84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8014af8:	2200      	movs	r2, #0
 8014afa:	240a      	movs	r4, #10
 8014afc:	602a      	str	r2, [r5, #0]
 8014afe:	3b30      	subs	r3, #48	; 0x30
 8014b00:	682a      	ldr	r2, [r5, #0]
 8014b02:	b29e      	uxth	r6, r3
 8014b04:	2e09      	cmp	r6, #9
 8014b06:	d813      	bhi.n	8014b30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8014b08:	fb04 3302 	mla	r3, r4, r2, r3
 8014b0c:	602b      	str	r3, [r5, #0]
 8014b0e:	6803      	ldr	r3, [r0, #0]
 8014b10:	b10b      	cbz	r3, 8014b16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8014b12:	3302      	adds	r3, #2
 8014b14:	6003      	str	r3, [r0, #0]
 8014b16:	680b      	ldr	r3, [r1, #0]
 8014b18:	b10b      	cbz	r3, 8014b1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8014b1a:	3301      	adds	r3, #1
 8014b1c:	600b      	str	r3, [r1, #0]
 8014b1e:	6803      	ldr	r3, [r0, #0]
 8014b20:	b10b      	cbz	r3, 8014b26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8014b22:	881b      	ldrh	r3, [r3, #0]
 8014b24:	e7eb      	b.n	8014afe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014b26:	680b      	ldr	r3, [r1, #0]
 8014b28:	2b00      	cmp	r3, #0
 8014b2a:	d0e8      	beq.n	8014afe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014b2c:	781b      	ldrb	r3, [r3, #0]
 8014b2e:	e7e6      	b.n	8014afe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014b30:	2a06      	cmp	r2, #6
 8014b32:	bfa8      	it	ge
 8014b34:	2206      	movge	r2, #6
 8014b36:	602a      	str	r2, [r5, #0]
 8014b38:	e7b1      	b.n	8014a9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08014b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8014b3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b3e:	b0a3      	sub	sp, #140	; 0x8c
 8014b40:	2600      	movs	r6, #0
 8014b42:	4607      	mov	r7, r0
 8014b44:	4688      	mov	r8, r1
 8014b46:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8014b4a:	4631      	mov	r1, r6
 8014b4c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8014b4e:	4648      	mov	r0, r9
 8014b50:	960d      	str	r6, [sp, #52]	; 0x34
 8014b52:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8014b56:	2242      	movs	r2, #66	; 0x42
 8014b58:	f00e fdf3 	bl	8023742 <memset>
 8014b5c:	b15f      	cbz	r7, 8014b76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8014b5e:	f108 3aff 	add.w	sl, r8, #4294967295
 8014b62:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014b64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014b66:	b152      	cbz	r2, 8014b7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8014b68:	8812      	ldrh	r2, [r2, #0]
 8014b6a:	b10a      	cbz	r2, 8014b70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014b6c:	459a      	cmp	sl, r3
 8014b6e:	dc2e      	bgt.n	8014bce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8014b70:	2200      	movs	r2, #0
 8014b72:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014b76:	4638      	mov	r0, r7
 8014b78:	b023      	add	sp, #140	; 0x8c
 8014b7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014b7e:	9a08      	ldr	r2, [sp, #32]
 8014b80:	2a00      	cmp	r2, #0
 8014b82:	d0f5      	beq.n	8014b70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014b84:	7812      	ldrb	r2, [r2, #0]
 8014b86:	e7f0      	b.n	8014b6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8014b88:	2d00      	cmp	r5, #0
 8014b8a:	d0ea      	beq.n	8014b62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014b8c:	782a      	ldrb	r2, [r5, #0]
 8014b8e:	b142      	cbz	r2, 8014ba2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8014b90:	2a25      	cmp	r2, #37	; 0x25
 8014b92:	d001      	beq.n	8014b98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8014b94:	459a      	cmp	sl, r3
 8014b96:	dc08      	bgt.n	8014baa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8014b98:	f1bb 0f00 	cmp.w	fp, #0
 8014b9c:	d121      	bne.n	8014be2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8014b9e:	2d00      	cmp	r5, #0
 8014ba0:	d0df      	beq.n	8014b62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014ba2:	782a      	ldrb	r2, [r5, #0]
 8014ba4:	f04f 0b00 	mov.w	fp, #0
 8014ba8:	e01d      	b.n	8014be6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8014baa:	f1bb 0f00 	cmp.w	fp, #0
 8014bae:	d077      	beq.n	8014ca0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
 8014bb0:	f8bb 2000 	ldrh.w	r2, [fp]
 8014bb4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014bb8:	f1bb 0f00 	cmp.w	fp, #0
 8014bbc:	d002      	beq.n	8014bc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8014bbe:	f10b 0202 	add.w	r2, fp, #2
 8014bc2:	9209      	str	r2, [sp, #36]	; 0x24
 8014bc4:	b10d      	cbz	r5, 8014bca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8014bc6:	3501      	adds	r5, #1
 8014bc8:	9508      	str	r5, [sp, #32]
 8014bca:	3301      	adds	r3, #1
 8014bcc:	930d      	str	r3, [sp, #52]	; 0x34
 8014bce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014bd0:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8014bd4:	f1bb 0f00 	cmp.w	fp, #0
 8014bd8:	d0d6      	beq.n	8014b88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8014bda:	f8bb 2000 	ldrh.w	r2, [fp]
 8014bde:	2a00      	cmp	r2, #0
 8014be0:	d1d6      	bne.n	8014b90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8014be2:	f8bb 2000 	ldrh.w	r2, [fp]
 8014be6:	2a00      	cmp	r2, #0
 8014be8:	d0bb      	beq.n	8014b62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014bea:	459a      	cmp	sl, r3
 8014bec:	ddb9      	ble.n	8014b62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014bee:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8014bf2:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8014bf6:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8014bfa:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8014bfe:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8014c02:	960e      	str	r6, [sp, #56]	; 0x38
 8014c04:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8014c08:	960f      	str	r6, [sp, #60]	; 0x3c
 8014c0a:	f1bb 0f00 	cmp.w	fp, #0
 8014c0e:	d002      	beq.n	8014c16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8014c10:	f10b 0302 	add.w	r3, fp, #2
 8014c14:	9309      	str	r3, [sp, #36]	; 0x24
 8014c16:	b10d      	cbz	r5, 8014c1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8014c18:	1c6b      	adds	r3, r5, #1
 8014c1a:	9308      	str	r3, [sp, #32]
 8014c1c:	ab0f      	add	r3, sp, #60	; 0x3c
 8014c1e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8014c22:	a908      	add	r1, sp, #32
 8014c24:	a809      	add	r0, sp, #36	; 0x24
 8014c26:	9305      	str	r3, [sp, #20]
 8014c28:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8014c2c:	9304      	str	r3, [sp, #16]
 8014c2e:	ab0e      	add	r3, sp, #56	; 0x38
 8014c30:	9303      	str	r3, [sp, #12]
 8014c32:	ab0c      	add	r3, sp, #48	; 0x30
 8014c34:	9302      	str	r3, [sp, #8]
 8014c36:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8014c3a:	9301      	str	r3, [sp, #4]
 8014c3c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8014c40:	9300      	str	r3, [sp, #0]
 8014c42:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8014c46:	f7ff fea8 	bl	801499a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014c4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014c4c:	2b00      	cmp	r3, #0
 8014c4e:	bfbf      	itttt	lt
 8014c50:	6823      	ldrlt	r3, [r4, #0]
 8014c52:	3404      	addlt	r4, #4
 8014c54:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014c58:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014c5a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014c5c:	2b00      	cmp	r3, #0
 8014c5e:	bfbe      	ittt	lt
 8014c60:	6823      	ldrlt	r3, [r4, #0]
 8014c62:	3404      	addlt	r4, #4
 8014c64:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014c68:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8014c6c:	bfb8      	it	lt
 8014c6e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8014c70:	b1d9      	cbz	r1, 8014caa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 8014c72:	880b      	ldrh	r3, [r1, #0]
 8014c74:	2b69      	cmp	r3, #105	; 0x69
 8014c76:	d01f      	beq.n	8014cb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8014c78:	d82f      	bhi.n	8014cda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 8014c7a:	2b58      	cmp	r3, #88	; 0x58
 8014c7c:	d01c      	beq.n	8014cb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8014c7e:	d818      	bhi.n	8014cb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
 8014c80:	2b25      	cmp	r3, #37	; 0x25
 8014c82:	d034      	beq.n	8014cee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 8014c84:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014c86:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8014c8a:	f1bb 0f00 	cmp.w	fp, #0
 8014c8e:	f000 80b7 	beq.w	8014e00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 8014c92:	f8bb 5000 	ldrh.w	r5, [fp]
 8014c96:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8014c9a:	3301      	adds	r3, #1
 8014c9c:	930d      	str	r3, [sp, #52]	; 0x34
 8014c9e:	e029      	b.n	8014cf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8014ca0:	b10d      	cbz	r5, 8014ca6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
 8014ca2:	782a      	ldrb	r2, [r5, #0]
 8014ca4:	e786      	b.n	8014bb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8014ca6:	462a      	mov	r2, r5
 8014ca8:	e784      	b.n	8014bb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8014caa:	2a00      	cmp	r2, #0
 8014cac:	d0ea      	beq.n	8014c84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8014cae:	7813      	ldrb	r3, [r2, #0]
 8014cb0:	e7e0      	b.n	8014c74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
 8014cb2:	3b63      	subs	r3, #99	; 0x63
 8014cb4:	2b01      	cmp	r3, #1
 8014cb6:	d8e5      	bhi.n	8014c84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8014cb8:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8014cbc:	b329      	cbz	r1, 8014d0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
 8014cbe:	880b      	ldrh	r3, [r1, #0]
 8014cc0:	2b69      	cmp	r3, #105	; 0x69
 8014cc2:	d063      	beq.n	8014d8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8014cc4:	d825      	bhi.n	8014d12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
 8014cc6:	2b63      	cmp	r3, #99	; 0x63
 8014cc8:	d038      	beq.n	8014d3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
 8014cca:	2b64      	cmp	r3, #100	; 0x64
 8014ccc:	d05e      	beq.n	8014d8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8014cce:	2b58      	cmp	r3, #88	; 0x58
 8014cd0:	d07a      	beq.n	8014dc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
 8014cd2:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8014cd6:	4625      	mov	r5, r4
 8014cd8:	e036      	b.n	8014d48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8014cda:	2b73      	cmp	r3, #115	; 0x73
 8014cdc:	d0ec      	beq.n	8014cb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8014cde:	d802      	bhi.n	8014ce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
 8014ce0:	2b6f      	cmp	r3, #111	; 0x6f
 8014ce2:	d1cf      	bne.n	8014c84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8014ce4:	e7e8      	b.n	8014cb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8014ce6:	2b75      	cmp	r3, #117	; 0x75
 8014ce8:	d0e6      	beq.n	8014cb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8014cea:	2b78      	cmp	r3, #120	; 0x78
 8014cec:	e7f9      	b.n	8014ce2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 8014cee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014cf0:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8014cf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014cf6:	b10b      	cbz	r3, 8014cfc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
 8014cf8:	3302      	adds	r3, #2
 8014cfa:	9309      	str	r3, [sp, #36]	; 0x24
 8014cfc:	9b08      	ldr	r3, [sp, #32]
 8014cfe:	2b00      	cmp	r3, #0
 8014d00:	f43f af2f 	beq.w	8014b62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014d04:	3301      	adds	r3, #1
 8014d06:	9308      	str	r3, [sp, #32]
 8014d08:	e72b      	b.n	8014b62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014d0a:	2a00      	cmp	r2, #0
 8014d0c:	d0e1      	beq.n	8014cd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8014d0e:	7813      	ldrb	r3, [r2, #0]
 8014d10:	e7d6      	b.n	8014cc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
 8014d12:	2b73      	cmp	r3, #115	; 0x73
 8014d14:	d036      	beq.n	8014d84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
 8014d16:	d807      	bhi.n	8014d28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
 8014d18:	2b6f      	cmp	r3, #111	; 0x6f
 8014d1a:	d1da      	bne.n	8014cd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8014d1c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014d1e:	1d25      	adds	r5, r4, #4
 8014d20:	2308      	movs	r3, #8
 8014d22:	eba8 0202 	sub.w	r2, r8, r2
 8014d26:	e049      	b.n	8014dbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8014d28:	2b75      	cmp	r3, #117	; 0x75
 8014d2a:	d042      	beq.n	8014db2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
 8014d2c:	2b78      	cmp	r3, #120	; 0x78
 8014d2e:	d1d0      	bne.n	8014cd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8014d30:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014d32:	1d25      	adds	r5, r4, #4
 8014d34:	2310      	movs	r3, #16
 8014d36:	eba8 0202 	sub.w	r2, r8, r2
 8014d3a:	e03f      	b.n	8014dbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8014d3c:	6823      	ldr	r3, [r4, #0]
 8014d3e:	1d25      	adds	r5, r4, #4
 8014d40:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8014d44:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8014d48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d4a:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8014d4e:	2b00      	cmp	r3, #0
 8014d50:	d051      	beq.n	8014df6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
 8014d52:	881a      	ldrh	r2, [r3, #0]
 8014d54:	a80d      	add	r0, sp, #52	; 0x34
 8014d56:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8014d5a:	462c      	mov	r4, r5
 8014d5c:	9005      	str	r0, [sp, #20]
 8014d5e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8014d62:	9004      	str	r0, [sp, #16]
 8014d64:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014d66:	9003      	str	r0, [sp, #12]
 8014d68:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8014d6c:	9002      	str	r0, [sp, #8]
 8014d6e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014d70:	9001      	str	r0, [sp, #4]
 8014d72:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8014d76:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8014d7a:	9000      	str	r0, [sp, #0]
 8014d7c:	a810      	add	r0, sp, #64	; 0x40
 8014d7e:	f7ff fd49 	bl	8014814 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8014d82:	e7b7      	b.n	8014cf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8014d84:	1d25      	adds	r5, r4, #4
 8014d86:	6823      	ldr	r3, [r4, #0]
 8014d88:	9310      	str	r3, [sp, #64]	; 0x40
 8014d8a:	e7dd      	b.n	8014d48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8014d8c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014d8e:	230a      	movs	r3, #10
 8014d90:	4649      	mov	r1, r9
 8014d92:	6820      	ldr	r0, [r4, #0]
 8014d94:	eba8 0202 	sub.w	r2, r8, r2
 8014d98:	1d25      	adds	r5, r4, #4
 8014d9a:	b292      	uxth	r2, r2
 8014d9c:	f7ff fcf0 	bl	8014780 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8014da0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8014da4:	2b2d      	cmp	r3, #45	; 0x2d
 8014da6:	d1cf      	bne.n	8014d48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8014da8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014dac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014dae:	3302      	adds	r3, #2
 8014db0:	e7ea      	b.n	8014d88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
 8014db2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014db4:	1d25      	adds	r5, r4, #4
 8014db6:	230a      	movs	r3, #10
 8014db8:	eba8 0202 	sub.w	r2, r8, r2
 8014dbc:	b292      	uxth	r2, r2
 8014dbe:	4649      	mov	r1, r9
 8014dc0:	6820      	ldr	r0, [r4, #0]
 8014dc2:	f7ff fd09 	bl	80147d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8014dc6:	e7bf      	b.n	8014d48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8014dc8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014dca:	2310      	movs	r3, #16
 8014dcc:	4649      	mov	r1, r9
 8014dce:	6820      	ldr	r0, [r4, #0]
 8014dd0:	eba8 0202 	sub.w	r2, r8, r2
 8014dd4:	1d25      	adds	r5, r4, #4
 8014dd6:	b292      	uxth	r2, r2
 8014dd8:	f7ff fcfe 	bl	80147d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8014ddc:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8014de0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8014de4:	2b00      	cmp	r3, #0
 8014de6:	d0af      	beq.n	8014d48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8014de8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8014dec:	2919      	cmp	r1, #25
 8014dee:	d8f7      	bhi.n	8014de0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8014df0:	3b20      	subs	r3, #32
 8014df2:	8013      	strh	r3, [r2, #0]
 8014df4:	e7f4      	b.n	8014de0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8014df6:	9a08      	ldr	r2, [sp, #32]
 8014df8:	2a00      	cmp	r2, #0
 8014dfa:	d0ab      	beq.n	8014d54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8014dfc:	7812      	ldrb	r2, [r2, #0]
 8014dfe:	e7a9      	b.n	8014d54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8014e00:	2d00      	cmp	r5, #0
 8014e02:	f43f af48 	beq.w	8014c96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
 8014e06:	782d      	ldrb	r5, [r5, #0]
 8014e08:	e745      	b.n	8014c96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

08014e0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8014e0a:	b507      	push	{r0, r1, r2, lr}
 8014e0c:	9300      	str	r3, [sp, #0]
 8014e0e:	4613      	mov	r3, r2
 8014e10:	2200      	movs	r2, #0
 8014e12:	f7ff fe92 	bl	8014b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8014e16:	b003      	add	sp, #12
 8014e18:	f85d fb04 	ldr.w	pc, [sp], #4

08014e1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8014e1c:	b40c      	push	{r2, r3}
 8014e1e:	b507      	push	{r0, r1, r2, lr}
 8014e20:	ab04      	add	r3, sp, #16
 8014e22:	f853 2b04 	ldr.w	r2, [r3], #4
 8014e26:	9301      	str	r3, [sp, #4]
 8014e28:	f7ff ffef 	bl	8014e0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8014e2c:	b003      	add	sp, #12
 8014e2e:	f85d eb04 	ldr.w	lr, [sp], #4
 8014e32:	b002      	add	sp, #8
 8014e34:	4770      	bx	lr
	...

08014e38 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8014e38:	4b01      	ldr	r3, [pc, #4]	; (8014e40 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8014e3a:	6018      	str	r0, [r3, #0]
 8014e3c:	4770      	bx	lr
 8014e3e:	bf00      	nop
 8014e40:	2003248c 	.word	0x2003248c

08014e44 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8014e44:	4b06      	ldr	r3, [pc, #24]	; (8014e60 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8014e46:	881a      	ldrh	r2, [r3, #0]
 8014e48:	4282      	cmp	r2, r0
 8014e4a:	d807      	bhi.n	8014e5c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8014e4c:	4b05      	ldr	r3, [pc, #20]	; (8014e64 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8014e4e:	881b      	ldrh	r3, [r3, #0]
 8014e50:	4413      	add	r3, r2
 8014e52:	4298      	cmp	r0, r3
 8014e54:	bfac      	ite	ge
 8014e56:	2000      	movge	r0, #0
 8014e58:	2001      	movlt	r0, #1
 8014e5a:	4770      	bx	lr
 8014e5c:	2000      	movs	r0, #0
 8014e5e:	4770      	bx	lr
 8014e60:	200324ac 	.word	0x200324ac
 8014e64:	200324b0 	.word	0x200324b0

08014e68 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8014e68:	b508      	push	{r3, lr}
 8014e6a:	4601      	mov	r1, r0
 8014e6c:	f7ff ffea 	bl	8014e44 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8014e70:	b118      	cbz	r0, 8014e7a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8014e72:	4b02      	ldr	r3, [pc, #8]	; (8014e7c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8014e74:	681b      	ldr	r3, [r3, #0]
 8014e76:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8014e7a:	bd08      	pop	{r3, pc}
 8014e7c:	20032490 	.word	0x20032490

08014e80 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8014e80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014e82:	4c24      	ldr	r4, [pc, #144]	; (8014f14 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8014e84:	6823      	ldr	r3, [r4, #0]
 8014e86:	2b00      	cmp	r3, #0
 8014e88:	d042      	beq.n	8014f10 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014e8a:	4a23      	ldr	r2, [pc, #140]	; (8014f18 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8014e8c:	4d23      	ldr	r5, [pc, #140]	; (8014f1c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8014e8e:	8811      	ldrh	r1, [r2, #0]
 8014e90:	f8b5 c000 	ldrh.w	ip, [r5]
 8014e94:	4822      	ldr	r0, [pc, #136]	; (8014f20 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8014e96:	4461      	add	r1, ip
 8014e98:	1c4a      	adds	r2, r1, #1
 8014e9a:	008f      	lsls	r7, r1, #2
 8014e9c:	f022 0201 	bic.w	r2, r2, #1
 8014ea0:	19de      	adds	r6, r3, r7
 8014ea2:	0412      	lsls	r2, r2, #16
 8014ea4:	6006      	str	r6, [r0, #0]
 8014ea6:	4e1f      	ldr	r6, [pc, #124]	; (8014f24 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8014ea8:	0c12      	lsrs	r2, r2, #16
 8014eaa:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8014eae:	19da      	adds	r2, r3, r7
 8014eb0:	6032      	str	r2, [r6, #0]
 8014eb2:	220e      	movs	r2, #14
 8014eb4:	fb02 f20c 	mul.w	r2, r2, ip
 8014eb8:	3203      	adds	r2, #3
 8014eba:	f022 0203 	bic.w	r2, r2, #3
 8014ebe:	443a      	add	r2, r7
 8014ec0:	4f19      	ldr	r7, [pc, #100]	; (8014f28 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8014ec2:	4413      	add	r3, r2
 8014ec4:	603b      	str	r3, [r7, #0]
 8014ec6:	2300      	movs	r3, #0
 8014ec8:	4f18      	ldr	r7, [pc, #96]	; (8014f2c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8014eca:	469c      	mov	ip, r3
 8014ecc:	803b      	strh	r3, [r7, #0]
 8014ece:	4f18      	ldr	r7, [pc, #96]	; (8014f30 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8014ed0:	683f      	ldr	r7, [r7, #0]
 8014ed2:	1aba      	subs	r2, r7, r2
 8014ed4:	4f17      	ldr	r7, [pc, #92]	; (8014f34 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8014ed6:	603a      	str	r2, [r7, #0]
 8014ed8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8014edc:	4a16      	ldr	r2, [pc, #88]	; (8014f38 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014ede:	8013      	strh	r3, [r2, #0]
 8014ee0:	428b      	cmp	r3, r1
 8014ee2:	d10d      	bne.n	8014f00 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014ee4:	882d      	ldrh	r5, [r5, #0]
 8014ee6:	2300      	movs	r3, #0
 8014ee8:	6830      	ldr	r0, [r6, #0]
 8014eea:	240e      	movs	r4, #14
 8014eec:	429d      	cmp	r5, r3
 8014eee:	d90f      	bls.n	8014f10 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014ef0:	fb04 0203 	mla	r2, r4, r3, r0
 8014ef4:	3301      	adds	r3, #1
 8014ef6:	7b11      	ldrb	r1, [r2, #12]
 8014ef8:	f36f 1145 	bfc	r1, #5, #1
 8014efc:	7311      	strb	r1, [r2, #12]
 8014efe:	e7f5      	b.n	8014eec <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014f00:	6822      	ldr	r2, [r4, #0]
 8014f02:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014f06:	6802      	ldr	r2, [r0, #0]
 8014f08:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8014f0c:	3301      	adds	r3, #1
 8014f0e:	e7e7      	b.n	8014ee0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014f10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014f12:	bf00      	nop
 8014f14:	20032490 	.word	0x20032490
 8014f18:	200324ac 	.word	0x200324ac
 8014f1c:	200324b0 	.word	0x200324b0
 8014f20:	200324a4 	.word	0x200324a4
 8014f24:	20032494 	.word	0x20032494
 8014f28:	2003249c 	.word	0x2003249c
 8014f2c:	200324ae 	.word	0x200324ae
 8014f30:	20032498 	.word	0x20032498
 8014f34:	200324a8 	.word	0x200324a8
 8014f38:	200324a0 	.word	0x200324a0

08014f3c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8014f3c:	4b06      	ldr	r3, [pc, #24]	; (8014f58 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8014f3e:	681b      	ldr	r3, [r3, #0]
 8014f40:	b943      	cbnz	r3, 8014f54 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014f42:	b139      	cbz	r1, 8014f54 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014f44:	4b05      	ldr	r3, [pc, #20]	; (8014f5c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8014f46:	801a      	strh	r2, [r3, #0]
 8014f48:	4b05      	ldr	r3, [pc, #20]	; (8014f60 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8014f4a:	6019      	str	r1, [r3, #0]
 8014f4c:	4b05      	ldr	r3, [pc, #20]	; (8014f64 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8014f4e:	6018      	str	r0, [r3, #0]
 8014f50:	f7ff bf96 	b.w	8014e80 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8014f54:	4770      	bx	lr
 8014f56:	bf00      	nop
 8014f58:	2003249c 	.word	0x2003249c
 8014f5c:	200324b0 	.word	0x200324b0
 8014f60:	20032498 	.word	0x20032498
 8014f64:	20032490 	.word	0x20032490

08014f68 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8014f68:	b470      	push	{r4, r5, r6}
 8014f6a:	4c07      	ldr	r4, [pc, #28]	; (8014f88 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8014f6c:	4605      	mov	r5, r0
 8014f6e:	4610      	mov	r0, r2
 8014f70:	9a03      	ldr	r2, [sp, #12]
 8014f72:	6826      	ldr	r6, [r4, #0]
 8014f74:	b936      	cbnz	r6, 8014f84 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8014f76:	6025      	str	r5, [r4, #0]
 8014f78:	4c04      	ldr	r4, [pc, #16]	; (8014f8c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8014f7a:	8021      	strh	r1, [r4, #0]
 8014f7c:	4619      	mov	r1, r3
 8014f7e:	bc70      	pop	{r4, r5, r6}
 8014f80:	f7ff bfdc 	b.w	8014f3c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8014f84:	bc70      	pop	{r4, r5, r6}
 8014f86:	4770      	bx	lr
 8014f88:	200324b4 	.word	0x200324b4
 8014f8c:	200324ac 	.word	0x200324ac

08014f90 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8014f90:	4a12      	ldr	r2, [pc, #72]	; (8014fdc <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8014f92:	8803      	ldrh	r3, [r0, #0]
 8014f94:	8812      	ldrh	r2, [r2, #0]
 8014f96:	4293      	cmp	r3, r2
 8014f98:	d207      	bcs.n	8014faa <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8014f9a:	4a11      	ldr	r2, [pc, #68]	; (8014fe0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8014f9c:	2114      	movs	r1, #20
 8014f9e:	6812      	ldr	r2, [r2, #0]
 8014fa0:	fb01 2303 	mla	r3, r1, r3, r2
 8014fa4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8014fa8:	4770      	bx	lr
 8014faa:	490e      	ldr	r1, [pc, #56]	; (8014fe4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8014fac:	8809      	ldrh	r1, [r1, #0]
 8014fae:	4411      	add	r1, r2
 8014fb0:	428b      	cmp	r3, r1
 8014fb2:	da04      	bge.n	8014fbe <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8014fb4:	1a9b      	subs	r3, r3, r2
 8014fb6:	4a0c      	ldr	r2, [pc, #48]	; (8014fe8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8014fb8:	210e      	movs	r1, #14
 8014fba:	6812      	ldr	r2, [r2, #0]
 8014fbc:	e7f0      	b.n	8014fa0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8014fbe:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014fc2:	4293      	cmp	r3, r2
 8014fc4:	d108      	bne.n	8014fd8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8014fc6:	4b09      	ldr	r3, [pc, #36]	; (8014fec <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8014fc8:	781b      	ldrb	r3, [r3, #0]
 8014fca:	b91b      	cbnz	r3, 8014fd4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8014fcc:	4b08      	ldr	r3, [pc, #32]	; (8014ff0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8014fce:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014fd2:	4770      	bx	lr
 8014fd4:	4b07      	ldr	r3, [pc, #28]	; (8014ff4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8014fd6:	e7fa      	b.n	8014fce <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8014fd8:	2000      	movs	r0, #0
 8014fda:	4770      	bx	lr
 8014fdc:	200324ac 	.word	0x200324ac
 8014fe0:	200324b4 	.word	0x200324b4
 8014fe4:	200324b0 	.word	0x200324b0
 8014fe8:	20032494 	.word	0x20032494
 8014fec:	20032424 	.word	0x20032424
 8014ff0:	20032426 	.word	0x20032426
 8014ff4:	20032428 	.word	0x20032428

08014ff8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014ff8:	4a12      	ldr	r2, [pc, #72]	; (8015044 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8014ffa:	8803      	ldrh	r3, [r0, #0]
 8014ffc:	8812      	ldrh	r2, [r2, #0]
 8014ffe:	4293      	cmp	r3, r2
 8015000:	d207      	bcs.n	8015012 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8015002:	4a11      	ldr	r2, [pc, #68]	; (8015048 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8015004:	2114      	movs	r1, #20
 8015006:	6812      	ldr	r2, [r2, #0]
 8015008:	fb01 2303 	mla	r3, r1, r3, r2
 801500c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8015010:	4770      	bx	lr
 8015012:	490e      	ldr	r1, [pc, #56]	; (801504c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8015014:	8809      	ldrh	r1, [r1, #0]
 8015016:	4411      	add	r1, r2
 8015018:	428b      	cmp	r3, r1
 801501a:	da04      	bge.n	8015026 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801501c:	1a9b      	subs	r3, r3, r2
 801501e:	4a0c      	ldr	r2, [pc, #48]	; (8015050 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8015020:	210e      	movs	r1, #14
 8015022:	6812      	ldr	r2, [r2, #0]
 8015024:	e7f0      	b.n	8015008 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8015026:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801502a:	4293      	cmp	r3, r2
 801502c:	d108      	bne.n	8015040 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801502e:	4b09      	ldr	r3, [pc, #36]	; (8015054 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8015030:	781b      	ldrb	r3, [r3, #0]
 8015032:	b91b      	cbnz	r3, 801503c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8015034:	4b08      	ldr	r3, [pc, #32]	; (8015058 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8015036:	f9b3 0000 	ldrsh.w	r0, [r3]
 801503a:	4770      	bx	lr
 801503c:	4b07      	ldr	r3, [pc, #28]	; (801505c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801503e:	e7fa      	b.n	8015036 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8015040:	2000      	movs	r0, #0
 8015042:	4770      	bx	lr
 8015044:	200324ac 	.word	0x200324ac
 8015048:	200324b4 	.word	0x200324b4
 801504c:	200324b0 	.word	0x200324b0
 8015050:	20032494 	.word	0x20032494
 8015054:	20032424 	.word	0x20032424
 8015058:	20032428 	.word	0x20032428
 801505c:	20032426 	.word	0x20032426

08015060 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8015060:	4a1f      	ldr	r2, [pc, #124]	; (80150e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8015062:	b510      	push	{r4, lr}
 8015064:	880b      	ldrh	r3, [r1, #0]
 8015066:	8812      	ldrh	r2, [r2, #0]
 8015068:	4293      	cmp	r3, r2
 801506a:	d213      	bcs.n	8015094 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801506c:	4a1d      	ldr	r2, [pc, #116]	; (80150e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801506e:	2114      	movs	r1, #20
 8015070:	6812      	ldr	r2, [r2, #0]
 8015072:	fb01 2303 	mla	r3, r1, r3, r2
 8015076:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801507a:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801507e:	8a1a      	ldrh	r2, [r3, #16]
 8015080:	8a5b      	ldrh	r3, [r3, #18]
 8015082:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8015086:	8004      	strh	r4, [r0, #0]
 8015088:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801508c:	8041      	strh	r1, [r0, #2]
 801508e:	8082      	strh	r2, [r0, #4]
 8015090:	80c3      	strh	r3, [r0, #6]
 8015092:	e00e      	b.n	80150b2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8015094:	4914      	ldr	r1, [pc, #80]	; (80150e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8015096:	8809      	ldrh	r1, [r1, #0]
 8015098:	4411      	add	r1, r2
 801509a:	428b      	cmp	r3, r1
 801509c:	da0a      	bge.n	80150b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801509e:	1a9b      	subs	r3, r3, r2
 80150a0:	4a12      	ldr	r2, [pc, #72]	; (80150ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80150a2:	210e      	movs	r1, #14
 80150a4:	6812      	ldr	r2, [r2, #0]
 80150a6:	fb01 2303 	mla	r3, r1, r3, r2
 80150aa:	681a      	ldr	r2, [r3, #0]
 80150ac:	6002      	str	r2, [r0, #0]
 80150ae:	685a      	ldr	r2, [r3, #4]
 80150b0:	6042      	str	r2, [r0, #4]
 80150b2:	bd10      	pop	{r4, pc}
 80150b4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80150b8:	4293      	cmp	r3, r2
 80150ba:	d10b      	bne.n	80150d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80150bc:	4b0c      	ldr	r3, [pc, #48]	; (80150f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80150be:	f9b3 1000 	ldrsh.w	r1, [r3]
 80150c2:	4b0c      	ldr	r3, [pc, #48]	; (80150f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80150c4:	8081      	strh	r1, [r0, #4]
 80150c6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80150ca:	2300      	movs	r3, #0
 80150cc:	80c2      	strh	r2, [r0, #6]
 80150ce:	8003      	strh	r3, [r0, #0]
 80150d0:	8043      	strh	r3, [r0, #2]
 80150d2:	e7ee      	b.n	80150b2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80150d4:	2300      	movs	r3, #0
 80150d6:	8003      	strh	r3, [r0, #0]
 80150d8:	8043      	strh	r3, [r0, #2]
 80150da:	8083      	strh	r3, [r0, #4]
 80150dc:	e7d8      	b.n	8015090 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80150de:	bf00      	nop
 80150e0:	200324ac 	.word	0x200324ac
 80150e4:	200324b4 	.word	0x200324b4
 80150e8:	200324b0 	.word	0x200324b0
 80150ec:	20032494 	.word	0x20032494
 80150f0:	20032420 	.word	0x20032420
 80150f4:	20032422 	.word	0x20032422

080150f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80150f8:	4a17      	ldr	r2, [pc, #92]	; (8015158 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80150fa:	8803      	ldrh	r3, [r0, #0]
 80150fc:	8812      	ldrh	r2, [r2, #0]
 80150fe:	4293      	cmp	r3, r2
 8015100:	d213      	bcs.n	801512a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8015102:	4a16      	ldr	r2, [pc, #88]	; (801515c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8015104:	2114      	movs	r1, #20
 8015106:	6812      	ldr	r2, [r2, #0]
 8015108:	fb01 2303 	mla	r3, r1, r3, r2
 801510c:	8a1a      	ldrh	r2, [r3, #16]
 801510e:	8919      	ldrh	r1, [r3, #8]
 8015110:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8015114:	428a      	cmp	r2, r1
 8015116:	db1d      	blt.n	8015154 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8015118:	8a58      	ldrh	r0, [r3, #18]
 801511a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801511e:	895b      	ldrh	r3, [r3, #10]
 8015120:	4298      	cmp	r0, r3
 8015122:	bfac      	ite	ge
 8015124:	2000      	movge	r0, #0
 8015126:	2001      	movlt	r0, #1
 8015128:	4770      	bx	lr
 801512a:	490d      	ldr	r1, [pc, #52]	; (8015160 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801512c:	8809      	ldrh	r1, [r1, #0]
 801512e:	4411      	add	r1, r2
 8015130:	428b      	cmp	r3, r1
 8015132:	da0d      	bge.n	8015150 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8015134:	1a9b      	subs	r3, r3, r2
 8015136:	4a0b      	ldr	r2, [pc, #44]	; (8015164 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8015138:	210e      	movs	r1, #14
 801513a:	6812      	ldr	r2, [r2, #0]
 801513c:	fb01 2303 	mla	r3, r1, r3, r2
 8015140:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8015144:	891a      	ldrh	r2, [r3, #8]
 8015146:	4291      	cmp	r1, r2
 8015148:	db04      	blt.n	8015154 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801514a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801514e:	e7e6      	b.n	801511e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8015150:	2000      	movs	r0, #0
 8015152:	4770      	bx	lr
 8015154:	2001      	movs	r0, #1
 8015156:	4770      	bx	lr
 8015158:	200324ac 	.word	0x200324ac
 801515c:	200324b4 	.word	0x200324b4
 8015160:	200324b0 	.word	0x200324b0
 8015164:	20032494 	.word	0x20032494

08015168 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8015168:	4a12      	ldr	r2, [pc, #72]	; (80151b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801516a:	8803      	ldrh	r3, [r0, #0]
 801516c:	8811      	ldrh	r1, [r2, #0]
 801516e:	428b      	cmp	r3, r1
 8015170:	d20b      	bcs.n	801518a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8015172:	4a11      	ldr	r2, [pc, #68]	; (80151b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8015174:	6812      	ldr	r2, [r2, #0]
 8015176:	b112      	cbz	r2, 801517e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8015178:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801517c:	b9c0      	cbnz	r0, 80151b0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801517e:	4a0f      	ldr	r2, [pc, #60]	; (80151bc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8015180:	6811      	ldr	r1, [r2, #0]
 8015182:	2214      	movs	r2, #20
 8015184:	4353      	muls	r3, r2
 8015186:	58c8      	ldr	r0, [r1, r3]
 8015188:	4770      	bx	lr
 801518a:	4a0d      	ldr	r2, [pc, #52]	; (80151c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801518c:	8812      	ldrh	r2, [r2, #0]
 801518e:	440a      	add	r2, r1
 8015190:	4293      	cmp	r3, r2
 8015192:	da04      	bge.n	801519e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8015194:	4a08      	ldr	r2, [pc, #32]	; (80151b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8015196:	6812      	ldr	r2, [r2, #0]
 8015198:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801519c:	4770      	bx	lr
 801519e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80151a2:	4293      	cmp	r3, r2
 80151a4:	d103      	bne.n	80151ae <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80151a6:	4b07      	ldr	r3, [pc, #28]	; (80151c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80151a8:	681b      	ldr	r3, [r3, #0]
 80151aa:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80151ac:	4770      	bx	lr
 80151ae:	2000      	movs	r0, #0
 80151b0:	4770      	bx	lr
 80151b2:	bf00      	nop
 80151b4:	200324ac 	.word	0x200324ac
 80151b8:	20032490 	.word	0x20032490
 80151bc:	200324b4 	.word	0x200324b4
 80151c0:	200324b0 	.word	0x200324b0
 80151c4:	2003242c 	.word	0x2003242c

080151c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80151c8:	4b24      	ldr	r3, [pc, #144]	; (801525c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80151ca:	8802      	ldrh	r2, [r0, #0]
 80151cc:	8818      	ldrh	r0, [r3, #0]
 80151ce:	4282      	cmp	r2, r0
 80151d0:	d221      	bcs.n	8015216 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80151d2:	4b23      	ldr	r3, [pc, #140]	; (8015260 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80151d4:	6819      	ldr	r1, [r3, #0]
 80151d6:	2314      	movs	r3, #20
 80151d8:	fb03 1302 	mla	r3, r3, r2, r1
 80151dc:	6858      	ldr	r0, [r3, #4]
 80151de:	2800      	cmp	r0, #0
 80151e0:	d03a      	beq.n	8015258 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80151e2:	4920      	ldr	r1, [pc, #128]	; (8015264 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80151e4:	6809      	ldr	r1, [r1, #0]
 80151e6:	2900      	cmp	r1, #0
 80151e8:	d036      	beq.n	8015258 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80151ea:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80151ee:	2900      	cmp	r1, #0
 80151f0:	d032      	beq.n	8015258 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80151f2:	891a      	ldrh	r2, [r3, #8]
 80151f4:	8958      	ldrh	r0, [r3, #10]
 80151f6:	4350      	muls	r0, r2
 80151f8:	7c5a      	ldrb	r2, [r3, #17]
 80151fa:	7cdb      	ldrb	r3, [r3, #19]
 80151fc:	0952      	lsrs	r2, r2, #5
 80151fe:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8015202:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8015206:	2b0b      	cmp	r3, #11
 8015208:	bf18      	it	ne
 801520a:	0040      	lslne	r0, r0, #1
 801520c:	3003      	adds	r0, #3
 801520e:	f020 0003 	bic.w	r0, r0, #3
 8015212:	4408      	add	r0, r1
 8015214:	4770      	bx	lr
 8015216:	4b14      	ldr	r3, [pc, #80]	; (8015268 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8015218:	881b      	ldrh	r3, [r3, #0]
 801521a:	4403      	add	r3, r0
 801521c:	429a      	cmp	r2, r3
 801521e:	da1a      	bge.n	8015256 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8015220:	4b12      	ldr	r3, [pc, #72]	; (801526c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8015222:	1a10      	subs	r0, r2, r0
 8015224:	210e      	movs	r1, #14
 8015226:	681b      	ldr	r3, [r3, #0]
 8015228:	fb01 3000 	mla	r0, r1, r0, r3
 801522c:	7b03      	ldrb	r3, [r0, #12]
 801522e:	f003 031f 	and.w	r3, r3, #31
 8015232:	2b0b      	cmp	r3, #11
 8015234:	d10b      	bne.n	801524e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8015236:	8903      	ldrh	r3, [r0, #8]
 8015238:	8940      	ldrh	r0, [r0, #10]
 801523a:	4358      	muls	r0, r3
 801523c:	4b09      	ldr	r3, [pc, #36]	; (8015264 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801523e:	3003      	adds	r0, #3
 8015240:	6819      	ldr	r1, [r3, #0]
 8015242:	f020 0303 	bic.w	r3, r0, #3
 8015246:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801524a:	4418      	add	r0, r3
 801524c:	4770      	bx	lr
 801524e:	2b0d      	cmp	r3, #13
 8015250:	d101      	bne.n	8015256 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8015252:	300d      	adds	r0, #13
 8015254:	4770      	bx	lr
 8015256:	2000      	movs	r0, #0
 8015258:	4770      	bx	lr
 801525a:	bf00      	nop
 801525c:	200324ac 	.word	0x200324ac
 8015260:	200324b4 	.word	0x200324b4
 8015264:	20032490 	.word	0x20032490
 8015268:	200324b0 	.word	0x200324b0
 801526c:	20032494 	.word	0x20032494

08015270 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8015270:	4a17      	ldr	r2, [pc, #92]	; (80152d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8015272:	b510      	push	{r4, lr}
 8015274:	8803      	ldrh	r3, [r0, #0]
 8015276:	8812      	ldrh	r2, [r2, #0]
 8015278:	4293      	cmp	r3, r2
 801527a:	d20c      	bcs.n	8015296 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801527c:	4a15      	ldr	r2, [pc, #84]	; (80152d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801527e:	2114      	movs	r1, #20
 8015280:	6812      	ldr	r2, [r2, #0]
 8015282:	fb01 2303 	mla	r3, r1, r3, r2
 8015286:	7c58      	ldrb	r0, [r3, #17]
 8015288:	0942      	lsrs	r2, r0, #5
 801528a:	7cd8      	ldrb	r0, [r3, #19]
 801528c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8015290:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8015294:	bd10      	pop	{r4, pc}
 8015296:	4910      	ldr	r1, [pc, #64]	; (80152d8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8015298:	8809      	ldrh	r1, [r1, #0]
 801529a:	4411      	add	r1, r2
 801529c:	428b      	cmp	r3, r1
 801529e:	da09      	bge.n	80152b4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80152a0:	1a9b      	subs	r3, r3, r2
 80152a2:	4a0e      	ldr	r2, [pc, #56]	; (80152dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80152a4:	210e      	movs	r1, #14
 80152a6:	6812      	ldr	r2, [r2, #0]
 80152a8:	fb01 2303 	mla	r3, r1, r3, r2
 80152ac:	7b18      	ldrb	r0, [r3, #12]
 80152ae:	f000 001f 	and.w	r0, r0, #31
 80152b2:	e7ef      	b.n	8015294 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80152b4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80152b8:	4293      	cmp	r3, r2
 80152ba:	d106      	bne.n	80152ca <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80152bc:	f7f4 f9a4 	bl	8009608 <_ZN8touchgfx3HAL3lcdEv>
 80152c0:	6803      	ldr	r3, [r0, #0]
 80152c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80152c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80152c8:	4718      	bx	r3
 80152ca:	2000      	movs	r0, #0
 80152cc:	e7e2      	b.n	8015294 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80152ce:	bf00      	nop
 80152d0:	200324ac 	.word	0x200324ac
 80152d4:	200324b4 	.word	0x200324b4
 80152d8:	200324b0 	.word	0x200324b0
 80152dc:	20032494 	.word	0x20032494

080152e0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80152e0:	2010      	movs	r0, #16
 80152e2:	4770      	bx	lr

080152e4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80152e4:	2000      	movs	r0, #0
 80152e6:	4770      	bx	lr

080152e8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80152e8:	4b02      	ldr	r3, [pc, #8]	; (80152f4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80152ea:	8818      	ldrh	r0, [r3, #0]
 80152ec:	0040      	lsls	r0, r0, #1
 80152ee:	b280      	uxth	r0, r0
 80152f0:	4770      	bx	lr
 80152f2:	bf00      	nop
 80152f4:	20032426 	.word	0x20032426

080152f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80152f8:	2bff      	cmp	r3, #255	; 0xff
 80152fa:	d050      	beq.n	801539e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80152fc:	2a0b      	cmp	r2, #11
 80152fe:	d04a      	beq.n	8015396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8015300:	d80e      	bhi.n	8015320 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8015302:	2a03      	cmp	r2, #3
 8015304:	d03f      	beq.n	8015386 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8015306:	d804      	bhi.n	8015312 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8015308:	2a01      	cmp	r2, #1
 801530a:	d03e      	beq.n	801538a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801530c:	d93f      	bls.n	801538e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801530e:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8015310:	4770      	bx	lr
 8015312:	2a09      	cmp	r2, #9
 8015314:	d03f      	beq.n	8015396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8015316:	d83c      	bhi.n	8015392 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8015318:	2a08      	cmp	r2, #8
 801531a:	d03a      	beq.n	8015392 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801531c:	2000      	movs	r0, #0
 801531e:	4770      	bx	lr
 8015320:	2a2f      	cmp	r2, #47	; 0x2f
 8015322:	d024      	beq.n	801536e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8015324:	d80d      	bhi.n	8015342 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8015326:	2a2d      	cmp	r2, #45	; 0x2d
 8015328:	d014      	beq.n	8015354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801532a:	d826      	bhi.n	801537a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801532c:	2a2c      	cmp	r2, #44	; 0x2c
 801532e:	d1f5      	bne.n	801531c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015330:	684b      	ldr	r3, [r1, #4]
 8015332:	781b      	ldrb	r3, [r3, #0]
 8015334:	2b01      	cmp	r3, #1
 8015336:	d018      	beq.n	801536a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8015338:	d323      	bcc.n	8015382 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801533a:	2b02      	cmp	r3, #2
 801533c:	d1ee      	bne.n	801531c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801533e:	68c0      	ldr	r0, [r0, #12]
 8015340:	4770      	bx	lr
 8015342:	2a31      	cmp	r2, #49	; 0x31
 8015344:	d004      	beq.n	8015350 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8015346:	d328      	bcc.n	801539a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8015348:	2a32      	cmp	r2, #50	; 0x32
 801534a:	d026      	beq.n	801539a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801534c:	2a33      	cmp	r2, #51	; 0x33
 801534e:	d1e5      	bne.n	801531c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015350:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8015352:	4770      	bx	lr
 8015354:	684b      	ldr	r3, [r1, #4]
 8015356:	781b      	ldrb	r3, [r3, #0]
 8015358:	2b01      	cmp	r3, #1
 801535a:	d004      	beq.n	8015366 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801535c:	d30b      	bcc.n	8015376 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801535e:	2b02      	cmp	r3, #2
 8015360:	d1dc      	bne.n	801531c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015362:	6940      	ldr	r0, [r0, #20]
 8015364:	4770      	bx	lr
 8015366:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8015368:	4770      	bx	lr
 801536a:	69c0      	ldr	r0, [r0, #28]
 801536c:	4770      	bx	lr
 801536e:	684b      	ldr	r3, [r1, #4]
 8015370:	781b      	ldrb	r3, [r3, #0]
 8015372:	2b00      	cmp	r3, #0
 8015374:	d1d2      	bne.n	801531c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015376:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8015378:	4770      	bx	lr
 801537a:	684b      	ldr	r3, [r1, #4]
 801537c:	781b      	ldrb	r3, [r3, #0]
 801537e:	2b00      	cmp	r3, #0
 8015380:	d1cc      	bne.n	801531c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015382:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8015384:	4770      	bx	lr
 8015386:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8015388:	4770      	bx	lr
 801538a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801538c:	4770      	bx	lr
 801538e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8015390:	4770      	bx	lr
 8015392:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8015394:	4770      	bx	lr
 8015396:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8015398:	4770      	bx	lr
 801539a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801539c:	4770      	bx	lr
 801539e:	2a0b      	cmp	r2, #11
 80153a0:	d049      	beq.n	8015436 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80153a2:	d80e      	bhi.n	80153c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80153a4:	2a03      	cmp	r2, #3
 80153a6:	d040      	beq.n	801542a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80153a8:	d804      	bhi.n	80153b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80153aa:	2a01      	cmp	r2, #1
 80153ac:	d03f      	beq.n	801542e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80153ae:	d940      	bls.n	8015432 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80153b0:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80153b2:	4770      	bx	lr
 80153b4:	2a09      	cmp	r2, #9
 80153b6:	d03e      	beq.n	8015436 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80153b8:	d801      	bhi.n	80153be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80153ba:	2a08      	cmp	r2, #8
 80153bc:	d1ae      	bne.n	801531c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80153be:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80153c0:	4770      	bx	lr
 80153c2:	2a2f      	cmp	r2, #47	; 0x2f
 80153c4:	d024      	beq.n	8015410 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80153c6:	d80d      	bhi.n	80153e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80153c8:	2a2d      	cmp	r2, #45	; 0x2d
 80153ca:	d014      	beq.n	80153f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80153cc:	d826      	bhi.n	801541c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80153ce:	2a2c      	cmp	r2, #44	; 0x2c
 80153d0:	d1a4      	bne.n	801531c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80153d2:	684b      	ldr	r3, [r1, #4]
 80153d4:	781b      	ldrb	r3, [r3, #0]
 80153d6:	2b01      	cmp	r3, #1
 80153d8:	d018      	beq.n	801540c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80153da:	d324      	bcc.n	8015426 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80153dc:	2b02      	cmp	r3, #2
 80153de:	d19d      	bne.n	801531c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80153e0:	6900      	ldr	r0, [r0, #16]
 80153e2:	4770      	bx	lr
 80153e4:	2a31      	cmp	r2, #49	; 0x31
 80153e6:	d004      	beq.n	80153f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80153e8:	d327      	bcc.n	801543a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80153ea:	2a32      	cmp	r2, #50	; 0x32
 80153ec:	d025      	beq.n	801543a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80153ee:	2a33      	cmp	r2, #51	; 0x33
 80153f0:	d194      	bne.n	801531c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80153f2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80153f4:	4770      	bx	lr
 80153f6:	684b      	ldr	r3, [r1, #4]
 80153f8:	781b      	ldrb	r3, [r3, #0]
 80153fa:	2b01      	cmp	r3, #1
 80153fc:	d004      	beq.n	8015408 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80153fe:	d30b      	bcc.n	8015418 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8015400:	2b02      	cmp	r3, #2
 8015402:	d18b      	bne.n	801531c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015404:	6980      	ldr	r0, [r0, #24]
 8015406:	4770      	bx	lr
 8015408:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801540a:	4770      	bx	lr
 801540c:	6a00      	ldr	r0, [r0, #32]
 801540e:	4770      	bx	lr
 8015410:	684b      	ldr	r3, [r1, #4]
 8015412:	781b      	ldrb	r3, [r3, #0]
 8015414:	2b00      	cmp	r3, #0
 8015416:	d181      	bne.n	801531c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015418:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801541a:	4770      	bx	lr
 801541c:	684b      	ldr	r3, [r1, #4]
 801541e:	781b      	ldrb	r3, [r3, #0]
 8015420:	2b00      	cmp	r3, #0
 8015422:	f47f af7b 	bne.w	801531c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015426:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8015428:	4770      	bx	lr
 801542a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801542c:	4770      	bx	lr
 801542e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8015430:	4770      	bx	lr
 8015432:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8015434:	4770      	bx	lr
 8015436:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8015438:	4770      	bx	lr
 801543a:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801543c:	4770      	bx	lr

0801543e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801543e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015442:	b087      	sub	sp, #28
 8015444:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015446:	9205      	str	r2, [sp, #20]
 8015448:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801544c:	9101      	str	r1, [sp, #4]
 801544e:	9202      	str	r2, [sp, #8]
 8015450:	6841      	ldr	r1, [r0, #4]
 8015452:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8015456:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801545a:	fb01 2404 	mla	r4, r1, r4, r2
 801545e:	6802      	ldr	r2, [r0, #0]
 8015460:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015464:	f8de 2000 	ldr.w	r2, [lr]
 8015468:	9203      	str	r2, [sp, #12]
 801546a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801546e:	3204      	adds	r2, #4
 8015470:	9204      	str	r2, [sp, #16]
 8015472:	9a02      	ldr	r2, [sp, #8]
 8015474:	43d6      	mvns	r6, r2
 8015476:	b2f6      	uxtb	r6, r6
 8015478:	9a01      	ldr	r2, [sp, #4]
 801547a:	2a00      	cmp	r2, #0
 801547c:	dc03      	bgt.n	8015486 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801547e:	9a05      	ldr	r2, [sp, #20]
 8015480:	2a00      	cmp	r2, #0
 8015482:	f340 8129 	ble.w	80156d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8015486:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015488:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801548c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015490:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015492:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015496:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801549a:	2b00      	cmp	r3, #0
 801549c:	dd0e      	ble.n	80154bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801549e:	1408      	asrs	r0, r1, #16
 80154a0:	d405      	bmi.n	80154ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80154a2:	4560      	cmp	r0, ip
 80154a4:	da03      	bge.n	80154ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80154a6:	1410      	asrs	r0, r2, #16
 80154a8:	d401      	bmi.n	80154ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80154aa:	42b8      	cmp	r0, r7
 80154ac:	db07      	blt.n	80154be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80154ae:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80154b0:	3b01      	subs	r3, #1
 80154b2:	3402      	adds	r4, #2
 80154b4:	4401      	add	r1, r0
 80154b6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80154b8:	4402      	add	r2, r0
 80154ba:	e7ee      	b.n	801549a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80154bc:	d071      	beq.n	80155a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80154be:	1e58      	subs	r0, r3, #1
 80154c0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80154c2:	fb05 1500 	mla	r5, r5, r0, r1
 80154c6:	142d      	asrs	r5, r5, #16
 80154c8:	d45f      	bmi.n	801558a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80154ca:	4565      	cmp	r5, ip
 80154cc:	da5d      	bge.n	801558a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80154ce:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80154d0:	fb05 2000 	mla	r0, r5, r0, r2
 80154d4:	1400      	asrs	r0, r0, #16
 80154d6:	d458      	bmi.n	801558a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80154d8:	42b8      	cmp	r0, r7
 80154da:	da56      	bge.n	801558a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80154dc:	4699      	mov	r9, r3
 80154de:	46a2      	mov	sl, r4
 80154e0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80154e4:	f1b9 0f00 	cmp.w	r9, #0
 80154e8:	dd57      	ble.n	801559a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80154ea:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80154ee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80154f2:	9803      	ldr	r0, [sp, #12]
 80154f4:	140d      	asrs	r5, r1, #16
 80154f6:	f109 39ff 	add.w	r9, r9, #4294967295
 80154fa:	fb07 000c 	mla	r0, r7, ip, r0
 80154fe:	5d40      	ldrb	r0, [r0, r5]
 8015500:	9d04      	ldr	r5, [sp, #16]
 8015502:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015506:	f8ba 5000 	ldrh.w	r5, [sl]
 801550a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801550e:	122f      	asrs	r7, r5, #8
 8015510:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015514:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015518:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801551c:	00ed      	lsls	r5, r5, #3
 801551e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8015522:	fb17 f706 	smulbb	r7, r7, r6
 8015526:	b2ed      	uxtb	r5, r5
 8015528:	fb18 f806 	smulbb	r8, r8, r6
 801552c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015530:	10c7      	asrs	r7, r0, #3
 8015532:	fb15 f506 	smulbb	r5, r5, r6
 8015536:	00c0      	lsls	r0, r0, #3
 8015538:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801553c:	fa1f fc8c 	uxth.w	ip, ip
 8015540:	b2c0      	uxtb	r0, r0
 8015542:	fb07 870b 	mla	r7, r7, fp, r8
 8015546:	fb00 500b 	mla	r0, r0, fp, r5
 801554a:	f10c 0501 	add.w	r5, ip, #1
 801554e:	b2bf      	uxth	r7, r7
 8015550:	b280      	uxth	r0, r0
 8015552:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015556:	f107 0801 	add.w	r8, r7, #1
 801555a:	1c45      	adds	r5, r0, #1
 801555c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015560:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015564:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015568:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801556a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801556e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015572:	4401      	add	r1, r0
 8015574:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015578:	9814      	ldr	r0, [sp, #80]	; 0x50
 801557a:	ea45 0c0c 	orr.w	ip, r5, ip
 801557e:	4402      	add	r2, r0
 8015580:	ea4c 0c08 	orr.w	ip, ip, r8
 8015584:	f82a cb02 	strh.w	ip, [sl], #2
 8015588:	e7ac      	b.n	80154e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801558a:	f04f 0800 	mov.w	r8, #0
 801558e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8015592:	eb03 0008 	add.w	r0, r3, r8
 8015596:	2800      	cmp	r0, #0
 8015598:	dc41      	bgt.n	801561e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801559a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801559e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80155a2:	9b01      	ldr	r3, [sp, #4]
 80155a4:	2b00      	cmp	r3, #0
 80155a6:	f340 8097 	ble.w	80156d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80155aa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80155ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80155b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80155b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80155b8:	eef0 6a62 	vmov.f32	s13, s5
 80155bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80155c0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80155c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80155c8:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80155cc:	eef0 6a43 	vmov.f32	s13, s6
 80155d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80155d4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80155d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80155dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80155e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80155e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80155e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80155ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80155f0:	ee12 2a90 	vmov	r2, s5
 80155f4:	eef0 2a47 	vmov.f32	s5, s14
 80155f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80155fc:	ee13 2a10 	vmov	r2, s6
 8015600:	9313      	str	r3, [sp, #76]	; 0x4c
 8015602:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015604:	eeb0 3a67 	vmov.f32	s6, s15
 8015608:	fb92 f3f3 	sdiv	r3, r2, r3
 801560c:	9314      	str	r3, [sp, #80]	; 0x50
 801560e:	9b01      	ldr	r3, [sp, #4]
 8015610:	9a05      	ldr	r2, [sp, #20]
 8015612:	3b01      	subs	r3, #1
 8015614:	9301      	str	r3, [sp, #4]
 8015616:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015618:	bf08      	it	eq
 801561a:	4613      	moveq	r3, r2
 801561c:	e72c      	b.n	8015478 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801561e:	140f      	asrs	r7, r1, #16
 8015620:	d453      	bmi.n	80156ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015622:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015626:	42bd      	cmp	r5, r7
 8015628:	dd4f      	ble.n	80156ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801562a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801562e:	d44c      	bmi.n	80156ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015630:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015634:	4560      	cmp	r0, ip
 8015636:	dd48      	ble.n	80156ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015638:	9803      	ldr	r0, [sp, #12]
 801563a:	b22d      	sxth	r5, r5
 801563c:	fb0c 0505 	mla	r5, ip, r5, r0
 8015640:	5de8      	ldrb	r0, [r5, r7]
 8015642:	9d04      	ldr	r5, [sp, #16]
 8015644:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015648:	f06f 0501 	mvn.w	r5, #1
 801564c:	fb05 fb08 	mul.w	fp, r5, r8
 8015650:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015654:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015658:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801565c:	122f      	asrs	r7, r5, #8
 801565e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015662:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015666:	00ed      	lsls	r5, r5, #3
 8015668:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801566c:	fb17 f706 	smulbb	r7, r7, r6
 8015670:	b2ed      	uxtb	r5, r5
 8015672:	fb19 f906 	smulbb	r9, r9, r6
 8015676:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801567a:	10c7      	asrs	r7, r0, #3
 801567c:	fb15 f506 	smulbb	r5, r5, r6
 8015680:	00c0      	lsls	r0, r0, #3
 8015682:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015686:	fa1f fc8c 	uxth.w	ip, ip
 801568a:	b2c0      	uxtb	r0, r0
 801568c:	fb07 970a 	mla	r7, r7, sl, r9
 8015690:	fb00 500a 	mla	r0, r0, sl, r5
 8015694:	f10c 0501 	add.w	r5, ip, #1
 8015698:	b2bf      	uxth	r7, r7
 801569a:	b280      	uxth	r0, r0
 801569c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80156a0:	f107 0901 	add.w	r9, r7, #1
 80156a4:	1c45      	adds	r5, r0, #1
 80156a6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80156aa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80156ae:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80156b2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80156b6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80156ba:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80156be:	ea45 0c0c 	orr.w	ip, r5, ip
 80156c2:	ea4c 0c09 	orr.w	ip, ip, r9
 80156c6:	f824 c00b 	strh.w	ip, [r4, fp]
 80156ca:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80156cc:	f108 38ff 	add.w	r8, r8, #4294967295
 80156d0:	4401      	add	r1, r0
 80156d2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80156d4:	4402      	add	r2, r0
 80156d6:	e75c      	b.n	8015592 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80156d8:	b007      	add	sp, #28
 80156da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080156de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80156de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156e2:	b085      	sub	sp, #20
 80156e4:	4693      	mov	fp, r2
 80156e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80156ea:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80156ec:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80156ee:	6870      	ldr	r0, [r6, #4]
 80156f0:	9100      	str	r1, [sp, #0]
 80156f2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80156f6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80156fa:	fb00 2404 	mla	r4, r0, r4, r2
 80156fe:	6832      	ldr	r2, [r6, #0]
 8015700:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015704:	682a      	ldr	r2, [r5, #0]
 8015706:	9201      	str	r2, [sp, #4]
 8015708:	686a      	ldr	r2, [r5, #4]
 801570a:	3204      	adds	r2, #4
 801570c:	9202      	str	r2, [sp, #8]
 801570e:	9a00      	ldr	r2, [sp, #0]
 8015710:	2a00      	cmp	r2, #0
 8015712:	dc03      	bgt.n	801571c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015714:	f1bb 0f00 	cmp.w	fp, #0
 8015718:	f340 80a0 	ble.w	801585c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801571c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801571e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015722:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015726:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015728:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801572c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015730:	2b00      	cmp	r3, #0
 8015732:	dd0c      	ble.n	801574e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015734:	1406      	asrs	r6, r0, #16
 8015736:	d405      	bmi.n	8015744 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015738:	454e      	cmp	r6, r9
 801573a:	da03      	bge.n	8015744 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801573c:	1416      	asrs	r6, r2, #16
 801573e:	d401      	bmi.n	8015744 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015740:	4546      	cmp	r6, r8
 8015742:	db05      	blt.n	8015750 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015744:	4470      	add	r0, lr
 8015746:	4462      	add	r2, ip
 8015748:	3b01      	subs	r3, #1
 801574a:	3402      	adds	r4, #2
 801574c:	e7f0      	b.n	8015730 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801574e:	d00f      	beq.n	8015770 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015750:	1e5e      	subs	r6, r3, #1
 8015752:	fb0e 0706 	mla	r7, lr, r6, r0
 8015756:	143f      	asrs	r7, r7, #16
 8015758:	d541      	bpl.n	80157de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801575a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801575e:	4698      	mov	r8, r3
 8015760:	9603      	str	r6, [sp, #12]
 8015762:	f1b8 0f00 	cmp.w	r8, #0
 8015766:	dc59      	bgt.n	801581c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015768:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801576c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015770:	9b00      	ldr	r3, [sp, #0]
 8015772:	2b00      	cmp	r3, #0
 8015774:	dd72      	ble.n	801585c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8015776:	ee30 0a04 	vadd.f32	s0, s0, s8
 801577a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801577c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015780:	eeb0 6a62 	vmov.f32	s12, s5
 8015784:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015788:	ee31 1a05 	vadd.f32	s2, s2, s10
 801578c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015790:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015794:	eeb0 6a43 	vmov.f32	s12, s6
 8015798:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801579c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80157a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80157a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80157a8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80157ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80157b0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80157b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80157b8:	ee12 2a90 	vmov	r2, s5
 80157bc:	eef0 2a47 	vmov.f32	s5, s14
 80157c0:	fb92 fef3 	sdiv	lr, r2, r3
 80157c4:	ee13 2a10 	vmov	r2, s6
 80157c8:	eeb0 3a67 	vmov.f32	s6, s15
 80157cc:	fb92 fcf3 	sdiv	ip, r2, r3
 80157d0:	9b00      	ldr	r3, [sp, #0]
 80157d2:	3b01      	subs	r3, #1
 80157d4:	9300      	str	r3, [sp, #0]
 80157d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80157d8:	bf08      	it	eq
 80157da:	465b      	moveq	r3, fp
 80157dc:	e797      	b.n	801570e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80157de:	454f      	cmp	r7, r9
 80157e0:	dabb      	bge.n	801575a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80157e2:	fb0c 2606 	mla	r6, ip, r6, r2
 80157e6:	1436      	asrs	r6, r6, #16
 80157e8:	d4b7      	bmi.n	801575a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80157ea:	4546      	cmp	r6, r8
 80157ec:	dab5      	bge.n	801575a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80157ee:	461e      	mov	r6, r3
 80157f0:	46a0      	mov	r8, r4
 80157f2:	2e00      	cmp	r6, #0
 80157f4:	ddb8      	ble.n	8015768 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80157f6:	1417      	asrs	r7, r2, #16
 80157f8:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80157fc:	9901      	ldr	r1, [sp, #4]
 80157fe:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015802:	4462      	add	r2, ip
 8015804:	4470      	add	r0, lr
 8015806:	fb0a 1707 	mla	r7, sl, r7, r1
 801580a:	9902      	ldr	r1, [sp, #8]
 801580c:	3e01      	subs	r6, #1
 801580e:	f817 7009 	ldrb.w	r7, [r7, r9]
 8015812:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015816:	f828 7b02 	strh.w	r7, [r8], #2
 801581a:	e7ea      	b.n	80157f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801581c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015820:	d417      	bmi.n	8015852 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015822:	68ae      	ldr	r6, [r5, #8]
 8015824:	454e      	cmp	r6, r9
 8015826:	dd14      	ble.n	8015852 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015828:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801582c:	d411      	bmi.n	8015852 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801582e:	68ef      	ldr	r7, [r5, #12]
 8015830:	4557      	cmp	r7, sl
 8015832:	dd0e      	ble.n	8015852 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015834:	9f01      	ldr	r7, [sp, #4]
 8015836:	b236      	sxth	r6, r6
 8015838:	f06f 0101 	mvn.w	r1, #1
 801583c:	fb0a 7606 	mla	r6, sl, r6, r7
 8015840:	9f02      	ldr	r7, [sp, #8]
 8015842:	f816 6009 	ldrb.w	r6, [r6, r9]
 8015846:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801584a:	fb01 f608 	mul.w	r6, r1, r8
 801584e:	9903      	ldr	r1, [sp, #12]
 8015850:	538f      	strh	r7, [r1, r6]
 8015852:	4470      	add	r0, lr
 8015854:	4462      	add	r2, ip
 8015856:	f108 38ff 	add.w	r8, r8, #4294967295
 801585a:	e782      	b.n	8015762 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801585c:	b005      	add	sp, #20
 801585e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015862 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015862:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015866:	b087      	sub	sp, #28
 8015868:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801586a:	9205      	str	r2, [sp, #20]
 801586c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015870:	9102      	str	r1, [sp, #8]
 8015872:	9203      	str	r2, [sp, #12]
 8015874:	6861      	ldr	r1, [r4, #4]
 8015876:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801587a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801587e:	fb01 2000 	mla	r0, r1, r0, r2
 8015882:	6822      	ldr	r2, [r4, #0]
 8015884:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8015888:	9200      	str	r2, [sp, #0]
 801588a:	f8dc 2000 	ldr.w	r2, [ip]
 801588e:	9204      	str	r2, [sp, #16]
 8015890:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015894:	3204      	adds	r2, #4
 8015896:	9201      	str	r2, [sp, #4]
 8015898:	9a03      	ldr	r2, [sp, #12]
 801589a:	43d5      	mvns	r5, r2
 801589c:	b2ed      	uxtb	r5, r5
 801589e:	9a02      	ldr	r2, [sp, #8]
 80158a0:	2a00      	cmp	r2, #0
 80158a2:	dc03      	bgt.n	80158ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80158a4:	9a05      	ldr	r2, [sp, #20]
 80158a6:	2a00      	cmp	r2, #0
 80158a8:	f340 812c 	ble.w	8015b04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80158ac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80158ae:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80158b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80158b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80158b8:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80158bc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80158c0:	2b00      	cmp	r3, #0
 80158c2:	dd10      	ble.n	80158e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80158c4:	140c      	asrs	r4, r1, #16
 80158c6:	d405      	bmi.n	80158d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80158c8:	4574      	cmp	r4, lr
 80158ca:	da03      	bge.n	80158d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80158cc:	1414      	asrs	r4, r2, #16
 80158ce:	d401      	bmi.n	80158d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80158d0:	42bc      	cmp	r4, r7
 80158d2:	db09      	blt.n	80158e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80158d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80158d6:	3b01      	subs	r3, #1
 80158d8:	9800      	ldr	r0, [sp, #0]
 80158da:	4421      	add	r1, r4
 80158dc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80158de:	3002      	adds	r0, #2
 80158e0:	4422      	add	r2, r4
 80158e2:	9000      	str	r0, [sp, #0]
 80158e4:	e7ec      	b.n	80158c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80158e6:	d071      	beq.n	80159cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80158e8:	1e5c      	subs	r4, r3, #1
 80158ea:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80158ec:	fb06 1604 	mla	r6, r6, r4, r1
 80158f0:	1436      	asrs	r6, r6, #16
 80158f2:	d45d      	bmi.n	80159b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80158f4:	4576      	cmp	r6, lr
 80158f6:	da5b      	bge.n	80159b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80158f8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80158fa:	fb06 2404 	mla	r4, r6, r4, r2
 80158fe:	1424      	asrs	r4, r4, #16
 8015900:	d456      	bmi.n	80159b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015902:	42bc      	cmp	r4, r7
 8015904:	da54      	bge.n	80159b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015906:	4698      	mov	r8, r3
 8015908:	f8dd 9000 	ldr.w	r9, [sp]
 801590c:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8015910:	f1b8 0f00 	cmp.w	r8, #0
 8015914:	dd54      	ble.n	80159c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015916:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801591a:	1414      	asrs	r4, r2, #16
 801591c:	9804      	ldr	r0, [sp, #16]
 801591e:	140e      	asrs	r6, r1, #16
 8015920:	f108 38ff 	add.w	r8, r8, #4294967295
 8015924:	fb07 0404 	mla	r4, r7, r4, r0
 8015928:	9801      	ldr	r0, [sp, #4]
 801592a:	f814 e006 	ldrb.w	lr, [r4, r6]
 801592e:	f8b9 4000 	ldrh.w	r4, [r9]
 8015932:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015936:	1227      	asrs	r7, r4, #8
 8015938:	eb00 0b0e 	add.w	fp, r0, lr
 801593c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8015940:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015944:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015946:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801594a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801594e:	4401      	add	r1, r0
 8015950:	fb16 f60a 	smulbb	r6, r6, sl
 8015954:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015956:	fb1b fb0a 	smulbb	fp, fp, sl
 801595a:	fb07 6705 	mla	r7, r7, r5, r6
 801595e:	10e6      	asrs	r6, r4, #3
 8015960:	00e4      	lsls	r4, r4, #3
 8015962:	4402      	add	r2, r0
 8015964:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015968:	b2bf      	uxth	r7, r7
 801596a:	b2e4      	uxtb	r4, r4
 801596c:	fb06 b605 	mla	r6, r6, r5, fp
 8015970:	fb14 f405 	smulbb	r4, r4, r5
 8015974:	b2b6      	uxth	r6, r6
 8015976:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801597a:	1c7c      	adds	r4, r7, #1
 801597c:	f106 0b01 	add.w	fp, r6, #1
 8015980:	fa1f fe8e 	uxth.w	lr, lr
 8015984:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8015988:	f10e 0401 	add.w	r4, lr, #1
 801598c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8015990:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015994:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8015998:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801599c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80159a0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80159a4:	4327      	orrs	r7, r4
 80159a6:	ea47 070b 	orr.w	r7, r7, fp
 80159aa:	f829 7b02 	strh.w	r7, [r9], #2
 80159ae:	e7af      	b.n	8015910 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80159b0:	f04f 0e00 	mov.w	lr, #0
 80159b4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80159b8:	eb03 040e 	add.w	r4, r3, lr
 80159bc:	2c00      	cmp	r4, #0
 80159be:	dc43      	bgt.n	8015a48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80159c0:	9a00      	ldr	r2, [sp, #0]
 80159c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80159c6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80159ca:	9300      	str	r3, [sp, #0]
 80159cc:	9b02      	ldr	r3, [sp, #8]
 80159ce:	2b00      	cmp	r3, #0
 80159d0:	f340 8098 	ble.w	8015b04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80159d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80159d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80159da:	ee30 0a04 	vadd.f32	s0, s0, s8
 80159de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80159e2:	eef0 6a62 	vmov.f32	s13, s5
 80159e6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80159ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80159ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80159f2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80159f6:	eef0 6a43 	vmov.f32	s13, s6
 80159fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80159fe:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8015a02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015a06:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015a0a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015a0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015a12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015a16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015a1a:	ee12 2a90 	vmov	r2, s5
 8015a1e:	eef0 2a47 	vmov.f32	s5, s14
 8015a22:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a26:	ee13 2a10 	vmov	r2, s6
 8015a2a:	9313      	str	r3, [sp, #76]	; 0x4c
 8015a2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015a2e:	eeb0 3a67 	vmov.f32	s6, s15
 8015a32:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a36:	9314      	str	r3, [sp, #80]	; 0x50
 8015a38:	9b02      	ldr	r3, [sp, #8]
 8015a3a:	9a05      	ldr	r2, [sp, #20]
 8015a3c:	3b01      	subs	r3, #1
 8015a3e:	9302      	str	r3, [sp, #8]
 8015a40:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015a42:	bf08      	it	eq
 8015a44:	4613      	moveq	r3, r2
 8015a46:	e72a      	b.n	801589e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015a48:	140f      	asrs	r7, r1, #16
 8015a4a:	d454      	bmi.n	8015af6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015a4c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8015a50:	42be      	cmp	r6, r7
 8015a52:	dd50      	ble.n	8015af6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015a54:	ea5f 4822 	movs.w	r8, r2, asr #16
 8015a58:	d44d      	bmi.n	8015af6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015a5a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8015a5e:	4544      	cmp	r4, r8
 8015a60:	dd49      	ble.n	8015af6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015a62:	9c04      	ldr	r4, [sp, #16]
 8015a64:	b236      	sxth	r6, r6
 8015a66:	f06f 0001 	mvn.w	r0, #1
 8015a6a:	fb08 4606 	mla	r6, r8, r6, r4
 8015a6e:	9c01      	ldr	r4, [sp, #4]
 8015a70:	fb00 fa0e 	mul.w	sl, r0, lr
 8015a74:	9800      	ldr	r0, [sp, #0]
 8015a76:	f816 8007 	ldrb.w	r8, [r6, r7]
 8015a7a:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015a7e:	eb04 0b08 	add.w	fp, r4, r8
 8015a82:	f830 400a 	ldrh.w	r4, [r0, sl]
 8015a86:	9801      	ldr	r0, [sp, #4]
 8015a88:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8015a8c:	1227      	asrs	r7, r4, #8
 8015a8e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015a92:	fb16 f609 	smulbb	r6, r6, r9
 8015a96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015a9a:	f810 8008 	ldrb.w	r8, [r0, r8]
 8015a9e:	fb1b fb09 	smulbb	fp, fp, r9
 8015aa2:	fb07 6705 	mla	r7, r7, r5, r6
 8015aa6:	10e6      	asrs	r6, r4, #3
 8015aa8:	00e4      	lsls	r4, r4, #3
 8015aaa:	9800      	ldr	r0, [sp, #0]
 8015aac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015ab0:	b2bf      	uxth	r7, r7
 8015ab2:	b2e4      	uxtb	r4, r4
 8015ab4:	fb06 b605 	mla	r6, r6, r5, fp
 8015ab8:	fb14 f405 	smulbb	r4, r4, r5
 8015abc:	b2b6      	uxth	r6, r6
 8015abe:	fb08 4809 	mla	r8, r8, r9, r4
 8015ac2:	1c7c      	adds	r4, r7, #1
 8015ac4:	f106 0b01 	add.w	fp, r6, #1
 8015ac8:	fa1f f888 	uxth.w	r8, r8
 8015acc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8015ad0:	f108 0401 	add.w	r4, r8, #1
 8015ad4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8015ad8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015adc:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8015ae0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015ae4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015ae8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8015aec:	4327      	orrs	r7, r4
 8015aee:	ea47 070b 	orr.w	r7, r7, fp
 8015af2:	f820 700a 	strh.w	r7, [r0, sl]
 8015af6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015af8:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015afc:	4401      	add	r1, r0
 8015afe:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015b00:	4402      	add	r2, r0
 8015b02:	e759      	b.n	80159b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015b04:	b007      	add	sp, #28
 8015b06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015b0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b10:	b085      	sub	sp, #20
 8015b12:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015b16:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015b18:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015b1a:	9203      	str	r2, [sp, #12]
 8015b1c:	6870      	ldr	r0, [r6, #4]
 8015b1e:	686f      	ldr	r7, [r5, #4]
 8015b20:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8015b24:	3704      	adds	r7, #4
 8015b26:	9101      	str	r1, [sp, #4]
 8015b28:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015b2c:	fb00 2404 	mla	r4, r0, r4, r2
 8015b30:	6832      	ldr	r2, [r6, #0]
 8015b32:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015b36:	682a      	ldr	r2, [r5, #0]
 8015b38:	9202      	str	r2, [sp, #8]
 8015b3a:	9a01      	ldr	r2, [sp, #4]
 8015b3c:	2a00      	cmp	r2, #0
 8015b3e:	dc03      	bgt.n	8015b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015b40:	9a03      	ldr	r2, [sp, #12]
 8015b42:	2a00      	cmp	r2, #0
 8015b44:	f340 80cc 	ble.w	8015ce0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015b48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015b4a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015b4e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015b52:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015b54:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015b58:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015b5c:	2b00      	cmp	r3, #0
 8015b5e:	dd0d      	ble.n	8015b7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015b60:	1406      	asrs	r6, r0, #16
 8015b62:	d405      	bmi.n	8015b70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015b64:	454e      	cmp	r6, r9
 8015b66:	da03      	bge.n	8015b70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015b68:	1416      	asrs	r6, r2, #16
 8015b6a:	d401      	bmi.n	8015b70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015b6c:	4546      	cmp	r6, r8
 8015b6e:	db06      	blt.n	8015b7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015b70:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8015b72:	4460      	add	r0, ip
 8015b74:	3b01      	subs	r3, #1
 8015b76:	3402      	adds	r4, #2
 8015b78:	4432      	add	r2, r6
 8015b7a:	e7ef      	b.n	8015b5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8015b7c:	d00f      	beq.n	8015b9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015b7e:	1e5e      	subs	r6, r3, #1
 8015b80:	fb0c 0e06 	mla	lr, ip, r6, r0
 8015b84:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8015b88:	d543      	bpl.n	8015c12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8015b8a:	4698      	mov	r8, r3
 8015b8c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8015b90:	f1b8 0f00 	cmp.w	r8, #0
 8015b94:	dc71      	bgt.n	8015c7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8015b96:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015b9a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015b9e:	9b01      	ldr	r3, [sp, #4]
 8015ba0:	2b00      	cmp	r3, #0
 8015ba2:	f340 809d 	ble.w	8015ce0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015ba6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015baa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015bac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015bb0:	eeb0 6a62 	vmov.f32	s12, s5
 8015bb4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015bb8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015bbc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015bc0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015bc4:	eeb0 6a43 	vmov.f32	s12, s6
 8015bc8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015bcc:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015bd0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015bd4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015bd8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015bdc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015be0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015be4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015be8:	ee12 2a90 	vmov	r2, s5
 8015bec:	eef0 2a47 	vmov.f32	s5, s14
 8015bf0:	fb92 fcf3 	sdiv	ip, r2, r3
 8015bf4:	ee13 2a10 	vmov	r2, s6
 8015bf8:	eeb0 3a67 	vmov.f32	s6, s15
 8015bfc:	fb92 f3f3 	sdiv	r3, r2, r3
 8015c00:	9312      	str	r3, [sp, #72]	; 0x48
 8015c02:	9b01      	ldr	r3, [sp, #4]
 8015c04:	9a03      	ldr	r2, [sp, #12]
 8015c06:	3b01      	subs	r3, #1
 8015c08:	9301      	str	r3, [sp, #4]
 8015c0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015c0c:	bf08      	it	eq
 8015c0e:	4613      	moveq	r3, r2
 8015c10:	e793      	b.n	8015b3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8015c12:	45ce      	cmp	lr, r9
 8015c14:	dab9      	bge.n	8015b8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015c16:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015c18:	fb01 2606 	mla	r6, r1, r6, r2
 8015c1c:	1436      	asrs	r6, r6, #16
 8015c1e:	d4b4      	bmi.n	8015b8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015c20:	4546      	cmp	r6, r8
 8015c22:	dab2      	bge.n	8015b8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015c24:	4698      	mov	r8, r3
 8015c26:	46a2      	mov	sl, r4
 8015c28:	f1b8 0f00 	cmp.w	r8, #0
 8015c2c:	ddb3      	ble.n	8015b96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015c2e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015c32:	1416      	asrs	r6, r2, #16
 8015c34:	9902      	ldr	r1, [sp, #8]
 8015c36:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8015c3a:	f108 38ff 	add.w	r8, r8, #4294967295
 8015c3e:	4460      	add	r0, ip
 8015c40:	fb09 1606 	mla	r6, r9, r6, r1
 8015c44:	4928      	ldr	r1, [pc, #160]	; (8015ce8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8015c46:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8015c4a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015c4e:	eb07 0b0e 	add.w	fp, r7, lr
 8015c52:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8015c56:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8015c5a:	00f6      	lsls	r6, r6, #3
 8015c5c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8015c60:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015c62:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015c66:	440a      	add	r2, r1
 8015c68:	ea49 0606 	orr.w	r6, r9, r6
 8015c6c:	f817 900e 	ldrb.w	r9, [r7, lr]
 8015c70:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8015c74:	f82a 6b02 	strh.w	r6, [sl], #2
 8015c78:	e7d6      	b.n	8015c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015c7a:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015c7e:	d429      	bmi.n	8015cd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015c80:	68ae      	ldr	r6, [r5, #8]
 8015c82:	454e      	cmp	r6, r9
 8015c84:	dd26      	ble.n	8015cd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015c86:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8015c8a:	d423      	bmi.n	8015cd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015c8c:	68e9      	ldr	r1, [r5, #12]
 8015c8e:	4559      	cmp	r1, fp
 8015c90:	dd20      	ble.n	8015cd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015c92:	fa0f fe86 	sxth.w	lr, r6
 8015c96:	9902      	ldr	r1, [sp, #8]
 8015c98:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8015c9c:	f06f 0101 	mvn.w	r1, #1
 8015ca0:	f81e e009 	ldrb.w	lr, [lr, r9]
 8015ca4:	fb01 f908 	mul.w	r9, r1, r8
 8015ca8:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8015cac:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015cb0:	eb07 060e 	add.w	r6, r7, lr
 8015cb4:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015cb8:	7876      	ldrb	r6, [r6, #1]
 8015cba:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8015cbe:	00f6      	lsls	r6, r6, #3
 8015cc0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015cc4:	ea4b 0606 	orr.w	r6, fp, r6
 8015cc8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8015ccc:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8015cd0:	f82a 6009 	strh.w	r6, [sl, r9]
 8015cd4:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015cd6:	4460      	add	r0, ip
 8015cd8:	f108 38ff 	add.w	r8, r8, #4294967295
 8015cdc:	440a      	add	r2, r1
 8015cde:	e757      	b.n	8015b90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015ce0:	b005      	add	sp, #20
 8015ce2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ce6:	bf00      	nop
 8015ce8:	fffff800 	.word	0xfffff800

08015cec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cf0:	b087      	sub	sp, #28
 8015cf2:	468b      	mov	fp, r1
 8015cf4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015cf8:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015cfa:	9204      	str	r2, [sp, #16]
 8015cfc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015d00:	6841      	ldr	r1, [r0, #4]
 8015d02:	9205      	str	r2, [sp, #20]
 8015d04:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015d08:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015d0c:	fb01 2404 	mla	r4, r1, r4, r2
 8015d10:	6802      	ldr	r2, [r0, #0]
 8015d12:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015d16:	f8dc 2000 	ldr.w	r2, [ip]
 8015d1a:	9201      	str	r2, [sp, #4]
 8015d1c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015d20:	3204      	adds	r2, #4
 8015d22:	9202      	str	r2, [sp, #8]
 8015d24:	f1bb 0f00 	cmp.w	fp, #0
 8015d28:	dc03      	bgt.n	8015d32 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8015d2a:	9a04      	ldr	r2, [sp, #16]
 8015d2c:	2a00      	cmp	r2, #0
 8015d2e:	f340 8138 	ble.w	8015fa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015d32:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015d34:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015d38:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015d3c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015d3e:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8015d42:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015d46:	2b00      	cmp	r3, #0
 8015d48:	dd0e      	ble.n	8015d68 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015d4a:	1402      	asrs	r2, r0, #16
 8015d4c:	d405      	bmi.n	8015d5a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015d4e:	42ba      	cmp	r2, r7
 8015d50:	da03      	bge.n	8015d5a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015d52:	140a      	asrs	r2, r1, #16
 8015d54:	d401      	bmi.n	8015d5a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015d56:	42b2      	cmp	r2, r6
 8015d58:	db07      	blt.n	8015d6a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015d5a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015d5c:	3b01      	subs	r3, #1
 8015d5e:	3402      	adds	r4, #2
 8015d60:	4410      	add	r0, r2
 8015d62:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015d64:	4411      	add	r1, r2
 8015d66:	e7ee      	b.n	8015d46 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8015d68:	d019      	beq.n	8015d9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015d6a:	1e5a      	subs	r2, r3, #1
 8015d6c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015d6e:	fb05 0502 	mla	r5, r5, r2, r0
 8015d72:	142d      	asrs	r5, r5, #16
 8015d74:	d409      	bmi.n	8015d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015d76:	42bd      	cmp	r5, r7
 8015d78:	da07      	bge.n	8015d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015d7a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015d7c:	fb05 1202 	mla	r2, r5, r2, r1
 8015d80:	1412      	asrs	r2, r2, #16
 8015d82:	d402      	bmi.n	8015d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015d84:	42b2      	cmp	r2, r6
 8015d86:	f2c0 80ac 	blt.w	8015ee2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8015d8a:	f04f 0e00 	mov.w	lr, #0
 8015d8e:	eb03 020e 	add.w	r2, r3, lr
 8015d92:	2a00      	cmp	r2, #0
 8015d94:	dc3e      	bgt.n	8015e14 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015d96:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015d9a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015d9e:	f1bb 0f00 	cmp.w	fp, #0
 8015da2:	f340 80fe 	ble.w	8015fa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015da6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015daa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015dac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015db0:	f1bb 0b01 	subs.w	fp, fp, #1
 8015db4:	eeb0 6a62 	vmov.f32	s12, s5
 8015db8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015dbc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015dc0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015dc4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015dc8:	eeb0 6a43 	vmov.f32	s12, s6
 8015dcc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015dd0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015dd4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015dd8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015ddc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015de0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015de4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015de8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015dec:	ee12 2a90 	vmov	r2, s5
 8015df0:	eef0 2a47 	vmov.f32	s5, s14
 8015df4:	fb92 f3f3 	sdiv	r3, r2, r3
 8015df8:	ee13 2a10 	vmov	r2, s6
 8015dfc:	9313      	str	r3, [sp, #76]	; 0x4c
 8015dfe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e00:	eeb0 3a67 	vmov.f32	s6, s15
 8015e04:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e08:	9a04      	ldr	r2, [sp, #16]
 8015e0a:	9314      	str	r3, [sp, #80]	; 0x50
 8015e0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e0e:	bf08      	it	eq
 8015e10:	4613      	moveq	r3, r2
 8015e12:	e787      	b.n	8015d24 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015e14:	1406      	asrs	r6, r0, #16
 8015e16:	d45d      	bmi.n	8015ed4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015e18:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8015e1c:	42b5      	cmp	r5, r6
 8015e1e:	dd59      	ble.n	8015ed4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015e20:	140f      	asrs	r7, r1, #16
 8015e22:	d457      	bmi.n	8015ed4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015e24:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015e28:	42ba      	cmp	r2, r7
 8015e2a:	dd53      	ble.n	8015ed4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015e2c:	9a01      	ldr	r2, [sp, #4]
 8015e2e:	b22d      	sxth	r5, r5
 8015e30:	fb07 2505 	mla	r5, r7, r5, r2
 8015e34:	5daa      	ldrb	r2, [r5, r6]
 8015e36:	9d02      	ldr	r5, [sp, #8]
 8015e38:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015e3c:	0e2e      	lsrs	r6, r5, #24
 8015e3e:	d049      	beq.n	8015ed4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015e40:	f06f 0201 	mvn.w	r2, #1
 8015e44:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015e48:	fb02 f20e 	mul.w	r2, r2, lr
 8015e4c:	f834 8002 	ldrh.w	r8, [r4, r2]
 8015e50:	9203      	str	r2, [sp, #12]
 8015e52:	9a05      	ldr	r2, [sp, #20]
 8015e54:	ea4f 2728 	mov.w	r7, r8, asr #8
 8015e58:	4356      	muls	r6, r2
 8015e5a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015e5e:	1c72      	adds	r2, r6, #1
 8015e60:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015e64:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015e68:	b2ed      	uxtb	r5, r5
 8015e6a:	1212      	asrs	r2, r2, #8
 8015e6c:	fa1f f982 	uxth.w	r9, r2
 8015e70:	43d2      	mvns	r2, r2
 8015e72:	fb16 f609 	smulbb	r6, r6, r9
 8015e76:	b2d2      	uxtb	r2, r2
 8015e78:	fb15 f509 	smulbb	r5, r5, r9
 8015e7c:	fb07 6702 	mla	r7, r7, r2, r6
 8015e80:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015e84:	fb1a fa09 	smulbb	sl, sl, r9
 8015e88:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015e8c:	b2bf      	uxth	r7, r7
 8015e8e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015e92:	fa5f f888 	uxtb.w	r8, r8
 8015e96:	fb06 a602 	mla	r6, r6, r2, sl
 8015e9a:	fb08 5502 	mla	r5, r8, r2, r5
 8015e9e:	1c7a      	adds	r2, r7, #1
 8015ea0:	b2b6      	uxth	r6, r6
 8015ea2:	b2ad      	uxth	r5, r5
 8015ea4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015ea8:	9a03      	ldr	r2, [sp, #12]
 8015eaa:	f105 0a01 	add.w	sl, r5, #1
 8015eae:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015eb2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015eb6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015eba:	ea4a 0707 	orr.w	r7, sl, r7
 8015ebe:	f106 0a01 	add.w	sl, r6, #1
 8015ec2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015ec6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015eca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015ece:	ea47 070a 	orr.w	r7, r7, sl
 8015ed2:	52a7      	strh	r7, [r4, r2]
 8015ed4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015ed6:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015eda:	4410      	add	r0, r2
 8015edc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015ede:	4411      	add	r1, r2
 8015ee0:	e755      	b.n	8015d8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015ee2:	f04f 0800 	mov.w	r8, #0
 8015ee6:	eba3 0208 	sub.w	r2, r3, r8
 8015eea:	2a00      	cmp	r2, #0
 8015eec:	f77f af53 	ble.w	8015d96 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015ef0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015ef4:	140a      	asrs	r2, r1, #16
 8015ef6:	9f01      	ldr	r7, [sp, #4]
 8015ef8:	1405      	asrs	r5, r0, #16
 8015efa:	fb06 7202 	mla	r2, r6, r2, r7
 8015efe:	5d52      	ldrb	r2, [r2, r5]
 8015f00:	9d02      	ldr	r5, [sp, #8]
 8015f02:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015f06:	0e2e      	lsrs	r6, r5, #24
 8015f08:	d044      	beq.n	8015f94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8015f0a:	9a05      	ldr	r2, [sp, #20]
 8015f0c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015f10:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015f14:	4356      	muls	r6, r2
 8015f16:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015f1a:	1c72      	adds	r2, r6, #1
 8015f1c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015f20:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015f24:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015f28:	b2ed      	uxtb	r5, r5
 8015f2a:	1212      	asrs	r2, r2, #8
 8015f2c:	fa1f f982 	uxth.w	r9, r2
 8015f30:	43d2      	mvns	r2, r2
 8015f32:	fb16 f609 	smulbb	r6, r6, r9
 8015f36:	b2d2      	uxtb	r2, r2
 8015f38:	fb15 f509 	smulbb	r5, r5, r9
 8015f3c:	fb07 6702 	mla	r7, r7, r2, r6
 8015f40:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015f44:	fb1a fa09 	smulbb	sl, sl, r9
 8015f48:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015f4c:	b2bf      	uxth	r7, r7
 8015f4e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015f52:	fa5f fe8e 	uxtb.w	lr, lr
 8015f56:	fb06 a602 	mla	r6, r6, r2, sl
 8015f5a:	fb0e 5502 	mla	r5, lr, r2, r5
 8015f5e:	1c7a      	adds	r2, r7, #1
 8015f60:	b2b6      	uxth	r6, r6
 8015f62:	b2ad      	uxth	r5, r5
 8015f64:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015f68:	f105 0a01 	add.w	sl, r5, #1
 8015f6c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015f70:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015f74:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015f78:	ea4a 0707 	orr.w	r7, sl, r7
 8015f7c:	f106 0a01 	add.w	sl, r6, #1
 8015f80:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015f84:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015f88:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015f8c:	ea47 070a 	orr.w	r7, r7, sl
 8015f90:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8015f94:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015f96:	f108 0801 	add.w	r8, r8, #1
 8015f9a:	4410      	add	r0, r2
 8015f9c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015f9e:	4411      	add	r1, r2
 8015fa0:	e7a1      	b.n	8015ee6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8015fa2:	b007      	add	sp, #28
 8015fa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015fa8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015fa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015fac:	b085      	sub	sp, #20
 8015fae:	468b      	mov	fp, r1
 8015fb0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015fb4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015fb6:	9203      	str	r2, [sp, #12]
 8015fb8:	6841      	ldr	r1, [r0, #4]
 8015fba:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015fbe:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015fc2:	fb01 2404 	mla	r4, r1, r4, r2
 8015fc6:	6802      	ldr	r2, [r0, #0]
 8015fc8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015fcc:	f8de 2000 	ldr.w	r2, [lr]
 8015fd0:	9200      	str	r2, [sp, #0]
 8015fd2:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015fd6:	3204      	adds	r2, #4
 8015fd8:	9201      	str	r2, [sp, #4]
 8015fda:	f1bb 0f00 	cmp.w	fp, #0
 8015fde:	dc03      	bgt.n	8015fe8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015fe0:	9a03      	ldr	r2, [sp, #12]
 8015fe2:	2a00      	cmp	r2, #0
 8015fe4:	f340 8153 	ble.w	801628e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015fe8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015fea:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015fee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015ff2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015ff4:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015ff8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015ffc:	2b00      	cmp	r3, #0
 8015ffe:	dd0e      	ble.n	801601e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016000:	1408      	asrs	r0, r1, #16
 8016002:	d405      	bmi.n	8016010 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016004:	42b8      	cmp	r0, r7
 8016006:	da03      	bge.n	8016010 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016008:	1410      	asrs	r0, r2, #16
 801600a:	d401      	bmi.n	8016010 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801600c:	42b0      	cmp	r0, r6
 801600e:	db07      	blt.n	8016020 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016010:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016012:	3b01      	subs	r3, #1
 8016014:	3402      	adds	r4, #2
 8016016:	4401      	add	r1, r0
 8016018:	9812      	ldr	r0, [sp, #72]	; 0x48
 801601a:	4402      	add	r2, r0
 801601c:	e7ee      	b.n	8015ffc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801601e:	d017      	beq.n	8016050 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016020:	1e58      	subs	r0, r3, #1
 8016022:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016024:	fb05 1500 	mla	r5, r5, r0, r1
 8016028:	142d      	asrs	r5, r5, #16
 801602a:	d409      	bmi.n	8016040 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801602c:	42bd      	cmp	r5, r7
 801602e:	da07      	bge.n	8016040 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016030:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8016032:	fb05 2000 	mla	r0, r5, r0, r2
 8016036:	1400      	asrs	r0, r0, #16
 8016038:	d402      	bmi.n	8016040 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801603a:	42b0      	cmp	r0, r6
 801603c:	f2c0 80bc 	blt.w	80161b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8016040:	2600      	movs	r6, #0
 8016042:	1998      	adds	r0, r3, r6
 8016044:	2800      	cmp	r0, #0
 8016046:	dc3e      	bgt.n	80160c6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8016048:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801604c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016050:	f1bb 0f00 	cmp.w	fp, #0
 8016054:	f340 811b 	ble.w	801628e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8016058:	ee30 0a04 	vadd.f32	s0, s0, s8
 801605c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801605e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016062:	f1bb 0b01 	subs.w	fp, fp, #1
 8016066:	eeb0 6a62 	vmov.f32	s12, s5
 801606a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801606e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016072:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016076:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801607a:	eeb0 6a43 	vmov.f32	s12, s6
 801607e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016082:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016086:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801608a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801608e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016092:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016096:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801609a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801609e:	ee12 2a90 	vmov	r2, s5
 80160a2:	eef0 2a47 	vmov.f32	s5, s14
 80160a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80160aa:	ee13 2a10 	vmov	r2, s6
 80160ae:	9311      	str	r3, [sp, #68]	; 0x44
 80160b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80160b2:	eeb0 3a67 	vmov.f32	s6, s15
 80160b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80160ba:	9a03      	ldr	r2, [sp, #12]
 80160bc:	9312      	str	r3, [sp, #72]	; 0x48
 80160be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80160c0:	bf08      	it	eq
 80160c2:	4613      	moveq	r3, r2
 80160c4:	e789      	b.n	8015fda <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80160c6:	140f      	asrs	r7, r1, #16
 80160c8:	d426      	bmi.n	8016118 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80160ca:	f8de 5008 	ldr.w	r5, [lr, #8]
 80160ce:	42bd      	cmp	r5, r7
 80160d0:	dd22      	ble.n	8016118 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80160d2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80160d6:	d41f      	bmi.n	8016118 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80160d8:	f8de 000c 	ldr.w	r0, [lr, #12]
 80160dc:	4560      	cmp	r0, ip
 80160de:	dd1b      	ble.n	8016118 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80160e0:	9800      	ldr	r0, [sp, #0]
 80160e2:	b22d      	sxth	r5, r5
 80160e4:	fb0c 0505 	mla	r5, ip, r5, r0
 80160e8:	5de8      	ldrb	r0, [r5, r7]
 80160ea:	9d01      	ldr	r5, [sp, #4]
 80160ec:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80160f0:	0e07      	lsrs	r7, r0, #24
 80160f2:	2fff      	cmp	r7, #255	; 0xff
 80160f4:	d116      	bne.n	8016124 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80160f6:	f06f 0501 	mvn.w	r5, #1
 80160fa:	fb05 f706 	mul.w	r7, r5, r6
 80160fe:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8016102:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8016106:	0945      	lsrs	r5, r0, #5
 8016108:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801610c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016110:	ea4c 0505 	orr.w	r5, ip, r5
 8016114:	4305      	orrs	r5, r0
 8016116:	53e5      	strh	r5, [r4, r7]
 8016118:	9811      	ldr	r0, [sp, #68]	; 0x44
 801611a:	3e01      	subs	r6, #1
 801611c:	4401      	add	r1, r0
 801611e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016120:	4402      	add	r2, r0
 8016122:	e78e      	b.n	8016042 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8016124:	b2fd      	uxtb	r5, r7
 8016126:	2f00      	cmp	r7, #0
 8016128:	d0f6      	beq.n	8016118 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801612a:	f06f 0701 	mvn.w	r7, #1
 801612e:	fa1f f985 	uxth.w	r9, r5
 8016132:	43ed      	mvns	r5, r5
 8016134:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8016138:	4377      	muls	r7, r6
 801613a:	fb1a fa09 	smulbb	sl, sl, r9
 801613e:	b2ed      	uxtb	r5, r5
 8016140:	f834 8007 	ldrh.w	r8, [r4, r7]
 8016144:	9702      	str	r7, [sp, #8]
 8016146:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801614a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801614e:	fb17 f709 	smulbb	r7, r7, r9
 8016152:	b2c0      	uxtb	r0, r0
 8016154:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016158:	fb10 f009 	smulbb	r0, r0, r9
 801615c:	fb0c 7c05 	mla	ip, ip, r5, r7
 8016160:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8016164:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016168:	fa1f fc8c 	uxth.w	ip, ip
 801616c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016170:	fa5f f888 	uxtb.w	r8, r8
 8016174:	fb07 a705 	mla	r7, r7, r5, sl
 8016178:	fb08 0005 	mla	r0, r8, r5, r0
 801617c:	f10c 0501 	add.w	r5, ip, #1
 8016180:	b2bf      	uxth	r7, r7
 8016182:	b280      	uxth	r0, r0
 8016184:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016188:	f100 0a01 	add.w	sl, r0, #1
 801618c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016190:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016194:	9802      	ldr	r0, [sp, #8]
 8016196:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801619a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801619e:	f107 0a01 	add.w	sl, r7, #1
 80161a2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80161a6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80161aa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80161ae:	ea4c 0c0a 	orr.w	ip, ip, sl
 80161b2:	f824 c000 	strh.w	ip, [r4, r0]
 80161b6:	e7af      	b.n	8016118 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80161b8:	f04f 0800 	mov.w	r8, #0
 80161bc:	eba3 0008 	sub.w	r0, r3, r8
 80161c0:	2800      	cmp	r0, #0
 80161c2:	f77f af41 	ble.w	8016048 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80161c6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80161ca:	1410      	asrs	r0, r2, #16
 80161cc:	9f00      	ldr	r7, [sp, #0]
 80161ce:	140d      	asrs	r5, r1, #16
 80161d0:	fb06 7000 	mla	r0, r6, r0, r7
 80161d4:	5d40      	ldrb	r0, [r0, r5]
 80161d6:	9d01      	ldr	r5, [sp, #4]
 80161d8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80161dc:	0e2e      	lsrs	r6, r5, #24
 80161de:	2eff      	cmp	r6, #255	; 0xff
 80161e0:	d112      	bne.n	8016208 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80161e2:	482c      	ldr	r0, [pc, #176]	; (8016294 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80161e4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80161e8:	0968      	lsrs	r0, r5, #5
 80161ea:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80161ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80161f2:	4330      	orrs	r0, r6
 80161f4:	4328      	orrs	r0, r5
 80161f6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80161fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80161fc:	f108 0801 	add.w	r8, r8, #1
 8016200:	4401      	add	r1, r0
 8016202:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016204:	4402      	add	r2, r0
 8016206:	e7d9      	b.n	80161bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016208:	b2f0      	uxtb	r0, r6
 801620a:	2e00      	cmp	r6, #0
 801620c:	d0f5      	beq.n	80161fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801620e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8016212:	fa1f f980 	uxth.w	r9, r0
 8016216:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801621a:	43c0      	mvns	r0, r0
 801621c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016220:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016224:	fb16 f609 	smulbb	r6, r6, r9
 8016228:	b2c0      	uxtb	r0, r0
 801622a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801622e:	b2ed      	uxtb	r5, r5
 8016230:	fb1a fa09 	smulbb	sl, sl, r9
 8016234:	fb07 6700 	mla	r7, r7, r0, r6
 8016238:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801623c:	fb15 f509 	smulbb	r5, r5, r9
 8016240:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016244:	b2bf      	uxth	r7, r7
 8016246:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801624a:	fa5f fc8c 	uxtb.w	ip, ip
 801624e:	fb06 a600 	mla	r6, r6, r0, sl
 8016252:	fb0c 5500 	mla	r5, ip, r0, r5
 8016256:	1c78      	adds	r0, r7, #1
 8016258:	b2b6      	uxth	r6, r6
 801625a:	b2ad      	uxth	r5, r5
 801625c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016260:	f105 0a01 	add.w	sl, r5, #1
 8016264:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016268:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801626c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016270:	ea4a 0707 	orr.w	r7, sl, r7
 8016274:	f106 0a01 	add.w	sl, r6, #1
 8016278:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801627c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016280:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016284:	ea47 070a 	orr.w	r7, r7, sl
 8016288:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801628c:	e7b5      	b.n	80161fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801628e:	b005      	add	sp, #20
 8016290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016294:	fffff800 	.word	0xfffff800

08016298 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801629c:	b087      	sub	sp, #28
 801629e:	468b      	mov	fp, r1
 80162a0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80162a4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80162a6:	9204      	str	r2, [sp, #16]
 80162a8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80162ac:	6861      	ldr	r1, [r4, #4]
 80162ae:	9205      	str	r2, [sp, #20]
 80162b0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80162b4:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80162b8:	fb01 2000 	mla	r0, r1, r0, r2
 80162bc:	6822      	ldr	r2, [r4, #0]
 80162be:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80162c2:	f8de 2000 	ldr.w	r2, [lr]
 80162c6:	9201      	str	r2, [sp, #4]
 80162c8:	f8de 2004 	ldr.w	r2, [lr, #4]
 80162cc:	9202      	str	r2, [sp, #8]
 80162ce:	f1bb 0f00 	cmp.w	fp, #0
 80162d2:	dc03      	bgt.n	80162dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80162d4:	9a04      	ldr	r2, [sp, #16]
 80162d6:	2a00      	cmp	r2, #0
 80162d8:	f340 8142 	ble.w	8016560 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80162dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80162de:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80162e2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80162e6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80162e8:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80162ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80162f0:	2b00      	cmp	r3, #0
 80162f2:	dd0e      	ble.n	8016312 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80162f4:	140c      	asrs	r4, r1, #16
 80162f6:	d405      	bmi.n	8016304 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80162f8:	42bc      	cmp	r4, r7
 80162fa:	da03      	bge.n	8016304 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80162fc:	1414      	asrs	r4, r2, #16
 80162fe:	d401      	bmi.n	8016304 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016300:	42b4      	cmp	r4, r6
 8016302:	db07      	blt.n	8016314 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016304:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016306:	3b01      	subs	r3, #1
 8016308:	3002      	adds	r0, #2
 801630a:	4421      	add	r1, r4
 801630c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801630e:	4422      	add	r2, r4
 8016310:	e7ee      	b.n	80162f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8016312:	d019      	beq.n	8016348 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016314:	1e5c      	subs	r4, r3, #1
 8016316:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016318:	fb05 1504 	mla	r5, r5, r4, r1
 801631c:	142d      	asrs	r5, r5, #16
 801631e:	d409      	bmi.n	8016334 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016320:	42bd      	cmp	r5, r7
 8016322:	da07      	bge.n	8016334 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016324:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016326:	fb05 2404 	mla	r4, r5, r4, r2
 801632a:	1424      	asrs	r4, r4, #16
 801632c:	d402      	bmi.n	8016334 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801632e:	42b4      	cmp	r4, r6
 8016330:	f2c0 80b1 	blt.w	8016496 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8016334:	f04f 0800 	mov.w	r8, #0
 8016338:	eb03 0408 	add.w	r4, r3, r8
 801633c:	2c00      	cmp	r4, #0
 801633e:	dc3e      	bgt.n	80163be <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016340:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016344:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016348:	f1bb 0f00 	cmp.w	fp, #0
 801634c:	f340 8108 	ble.w	8016560 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8016350:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016354:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016356:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801635a:	f1bb 0b01 	subs.w	fp, fp, #1
 801635e:	eeb0 6a62 	vmov.f32	s12, s5
 8016362:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016366:	ee31 1a05 	vadd.f32	s2, s2, s10
 801636a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801636e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016372:	eeb0 6a43 	vmov.f32	s12, s6
 8016376:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801637a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801637e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016382:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016386:	ee77 2a62 	vsub.f32	s5, s14, s5
 801638a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801638e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016392:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016396:	ee12 2a90 	vmov	r2, s5
 801639a:	eef0 2a47 	vmov.f32	s5, s14
 801639e:	fb92 f3f3 	sdiv	r3, r2, r3
 80163a2:	ee13 2a10 	vmov	r2, s6
 80163a6:	9313      	str	r3, [sp, #76]	; 0x4c
 80163a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80163aa:	eeb0 3a67 	vmov.f32	s6, s15
 80163ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80163b2:	9a04      	ldr	r2, [sp, #16]
 80163b4:	9314      	str	r3, [sp, #80]	; 0x50
 80163b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80163b8:	bf08      	it	eq
 80163ba:	4613      	moveq	r3, r2
 80163bc:	e787      	b.n	80162ce <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80163be:	140e      	asrs	r6, r1, #16
 80163c0:	d462      	bmi.n	8016488 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80163c2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80163c6:	42b5      	cmp	r5, r6
 80163c8:	dd5e      	ble.n	8016488 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80163ca:	1417      	asrs	r7, r2, #16
 80163cc:	d45c      	bmi.n	8016488 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80163ce:	f8de 400c 	ldr.w	r4, [lr, #12]
 80163d2:	42bc      	cmp	r4, r7
 80163d4:	dd58      	ble.n	8016488 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80163d6:	b22d      	sxth	r5, r5
 80163d8:	9c02      	ldr	r4, [sp, #8]
 80163da:	fb07 6505 	mla	r5, r7, r5, r6
 80163de:	5d66      	ldrb	r6, [r4, r5]
 80163e0:	2e00      	cmp	r6, #0
 80163e2:	d051      	beq.n	8016488 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80163e4:	9c01      	ldr	r4, [sp, #4]
 80163e6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80163ea:	f06f 0401 	mvn.w	r4, #1
 80163ee:	fb04 f408 	mul.w	r4, r4, r8
 80163f2:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80163f6:	5b05      	ldrh	r5, [r0, r4]
 80163f8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80163fc:	9403      	str	r4, [sp, #12]
 80163fe:	9c05      	ldr	r4, [sp, #20]
 8016400:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016404:	4366      	muls	r6, r4
 8016406:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801640a:	1c74      	adds	r4, r6, #1
 801640c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8016410:	122e      	asrs	r6, r5, #8
 8016412:	1224      	asrs	r4, r4, #8
 8016414:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016418:	00ed      	lsls	r5, r5, #3
 801641a:	b2a7      	uxth	r7, r4
 801641c:	43e4      	mvns	r4, r4
 801641e:	b2ed      	uxtb	r5, r5
 8016420:	b2e4      	uxtb	r4, r4
 8016422:	fb16 f604 	smulbb	r6, r6, r4
 8016426:	fb15 f504 	smulbb	r5, r5, r4
 801642a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801642e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8016432:	fb1a fa04 	smulbb	sl, sl, r4
 8016436:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801643a:	fa1f fc8c 	uxth.w	ip, ip
 801643e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016442:	fa5f f989 	uxtb.w	r9, r9
 8016446:	fb06 a607 	mla	r6, r6, r7, sl
 801644a:	f10c 0401 	add.w	r4, ip, #1
 801644e:	fb09 5507 	mla	r5, r9, r7, r5
 8016452:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016456:	9c03      	ldr	r4, [sp, #12]
 8016458:	b2ad      	uxth	r5, r5
 801645a:	b2b6      	uxth	r6, r6
 801645c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016460:	f105 0a01 	add.w	sl, r5, #1
 8016464:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016468:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801646c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016470:	f106 0a01 	add.w	sl, r6, #1
 8016474:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016478:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801647c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016480:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016484:	f820 c004 	strh.w	ip, [r0, r4]
 8016488:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801648a:	f108 38ff 	add.w	r8, r8, #4294967295
 801648e:	4421      	add	r1, r4
 8016490:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016492:	4422      	add	r2, r4
 8016494:	e750      	b.n	8016338 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016496:	f04f 0900 	mov.w	r9, #0
 801649a:	eba3 0409 	sub.w	r4, r3, r9
 801649e:	2c00      	cmp	r4, #0
 80164a0:	f77f af4e 	ble.w	8016340 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80164a4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80164a8:	140d      	asrs	r5, r1, #16
 80164aa:	1414      	asrs	r4, r2, #16
 80164ac:	fb06 5404 	mla	r4, r6, r4, r5
 80164b0:	9d02      	ldr	r5, [sp, #8]
 80164b2:	5d2e      	ldrb	r6, [r5, r4]
 80164b4:	2e00      	cmp	r6, #0
 80164b6:	d04c      	beq.n	8016552 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80164b8:	9d01      	ldr	r5, [sp, #4]
 80164ba:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80164be:	9c05      	ldr	r4, [sp, #20]
 80164c0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80164c4:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80164c8:	4366      	muls	r6, r4
 80164ca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80164ce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80164d2:	1c74      	adds	r4, r6, #1
 80164d4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80164d8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80164dc:	122e      	asrs	r6, r5, #8
 80164de:	1224      	asrs	r4, r4, #8
 80164e0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80164e4:	00ed      	lsls	r5, r5, #3
 80164e6:	b2a7      	uxth	r7, r4
 80164e8:	43e4      	mvns	r4, r4
 80164ea:	b2ed      	uxtb	r5, r5
 80164ec:	b2e4      	uxtb	r4, r4
 80164ee:	fb16 f604 	smulbb	r6, r6, r4
 80164f2:	fb15 f504 	smulbb	r5, r5, r4
 80164f6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80164fa:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80164fe:	fb1a fa04 	smulbb	sl, sl, r4
 8016502:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016506:	fa1f fc8c 	uxth.w	ip, ip
 801650a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801650e:	fa5f f888 	uxtb.w	r8, r8
 8016512:	fb06 a607 	mla	r6, r6, r7, sl
 8016516:	f10c 0401 	add.w	r4, ip, #1
 801651a:	fb08 5507 	mla	r5, r8, r7, r5
 801651e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016522:	b2ad      	uxth	r5, r5
 8016524:	b2b6      	uxth	r6, r6
 8016526:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801652a:	f105 0a01 	add.w	sl, r5, #1
 801652e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016532:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016536:	ea4a 0c0c 	orr.w	ip, sl, ip
 801653a:	f106 0a01 	add.w	sl, r6, #1
 801653e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016542:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016546:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801654a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801654e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8016552:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016554:	f109 0901 	add.w	r9, r9, #1
 8016558:	4421      	add	r1, r4
 801655a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801655c:	4422      	add	r2, r4
 801655e:	e79c      	b.n	801649a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8016560:	b007      	add	sp, #28
 8016562:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016566 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016566:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801656a:	b085      	sub	sp, #20
 801656c:	468b      	mov	fp, r1
 801656e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016572:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016574:	9203      	str	r2, [sp, #12]
 8016576:	6861      	ldr	r1, [r4, #4]
 8016578:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801657c:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8016580:	fb01 2000 	mla	r0, r1, r0, r2
 8016584:	6822      	ldr	r2, [r4, #0]
 8016586:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801658a:	f8d8 2000 	ldr.w	r2, [r8]
 801658e:	9200      	str	r2, [sp, #0]
 8016590:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8016594:	9201      	str	r2, [sp, #4]
 8016596:	f1bb 0f00 	cmp.w	fp, #0
 801659a:	dc03      	bgt.n	80165a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801659c:	9a03      	ldr	r2, [sp, #12]
 801659e:	2a00      	cmp	r2, #0
 80165a0:	f340 8146 	ble.w	8016830 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80165a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80165a6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80165aa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80165ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80165b0:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80165b4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80165b8:	2b00      	cmp	r3, #0
 80165ba:	dd0e      	ble.n	80165da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80165bc:	140c      	asrs	r4, r1, #16
 80165be:	d405      	bmi.n	80165cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80165c0:	42bc      	cmp	r4, r7
 80165c2:	da03      	bge.n	80165cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80165c4:	1414      	asrs	r4, r2, #16
 80165c6:	d401      	bmi.n	80165cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80165c8:	42b4      	cmp	r4, r6
 80165ca:	db07      	blt.n	80165dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80165cc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80165ce:	3b01      	subs	r3, #1
 80165d0:	3002      	adds	r0, #2
 80165d2:	4421      	add	r1, r4
 80165d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80165d6:	4422      	add	r2, r4
 80165d8:	e7ee      	b.n	80165b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80165da:	d017      	beq.n	801660c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80165dc:	1e5c      	subs	r4, r3, #1
 80165de:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80165e0:	fb05 1504 	mla	r5, r5, r4, r1
 80165e4:	142d      	asrs	r5, r5, #16
 80165e6:	d409      	bmi.n	80165fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80165e8:	42bd      	cmp	r5, r7
 80165ea:	da07      	bge.n	80165fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80165ec:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80165ee:	fb05 2404 	mla	r4, r5, r4, r2
 80165f2:	1424      	asrs	r4, r4, #16
 80165f4:	d402      	bmi.n	80165fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80165f6:	42b4      	cmp	r4, r6
 80165f8:	f2c0 80b3 	blt.w	8016762 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80165fc:	2600      	movs	r6, #0
 80165fe:	199c      	adds	r4, r3, r6
 8016600:	2c00      	cmp	r4, #0
 8016602:	dc3e      	bgt.n	8016682 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016604:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016608:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801660c:	f1bb 0f00 	cmp.w	fp, #0
 8016610:	f340 810e 	ble.w	8016830 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8016614:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016618:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801661a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801661e:	f1bb 0b01 	subs.w	fp, fp, #1
 8016622:	eeb0 6a62 	vmov.f32	s12, s5
 8016626:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801662a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801662e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016632:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016636:	eeb0 6a43 	vmov.f32	s12, s6
 801663a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801663e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016642:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016646:	ee61 7a27 	vmul.f32	s15, s2, s15
 801664a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801664e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016652:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016656:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801665a:	ee12 2a90 	vmov	r2, s5
 801665e:	eef0 2a47 	vmov.f32	s5, s14
 8016662:	fb92 f3f3 	sdiv	r3, r2, r3
 8016666:	ee13 2a10 	vmov	r2, s6
 801666a:	9311      	str	r3, [sp, #68]	; 0x44
 801666c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801666e:	eeb0 3a67 	vmov.f32	s6, s15
 8016672:	fb92 f3f3 	sdiv	r3, r2, r3
 8016676:	9a03      	ldr	r2, [sp, #12]
 8016678:	9312      	str	r3, [sp, #72]	; 0x48
 801667a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801667c:	bf08      	it	eq
 801667e:	4613      	moveq	r3, r2
 8016680:	e789      	b.n	8016596 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016682:	140f      	asrs	r7, r1, #16
 8016684:	d418      	bmi.n	80166b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016686:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801668a:	42bd      	cmp	r5, r7
 801668c:	dd14      	ble.n	80166b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801668e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016692:	d411      	bmi.n	80166b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016694:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8016698:	4564      	cmp	r4, ip
 801669a:	dd0d      	ble.n	80166b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801669c:	b22d      	sxth	r5, r5
 801669e:	9c01      	ldr	r4, [sp, #4]
 80166a0:	fb0c 7505 	mla	r5, ip, r5, r7
 80166a4:	5d64      	ldrb	r4, [r4, r5]
 80166a6:	2cff      	cmp	r4, #255	; 0xff
 80166a8:	d10c      	bne.n	80166c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80166aa:	9c00      	ldr	r4, [sp, #0]
 80166ac:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80166b0:	f06f 0401 	mvn.w	r4, #1
 80166b4:	4374      	muls	r4, r6
 80166b6:	5305      	strh	r5, [r0, r4]
 80166b8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80166ba:	3e01      	subs	r6, #1
 80166bc:	4421      	add	r1, r4
 80166be:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80166c0:	4422      	add	r2, r4
 80166c2:	e79c      	b.n	80165fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80166c4:	2c00      	cmp	r4, #0
 80166c6:	d0f7      	beq.n	80166b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80166c8:	9f00      	ldr	r7, [sp, #0]
 80166ca:	fa1f fc84 	uxth.w	ip, r4
 80166ce:	43e4      	mvns	r4, r4
 80166d0:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80166d4:	f06f 0501 	mvn.w	r5, #1
 80166d8:	b2e4      	uxtb	r4, r4
 80166da:	4375      	muls	r5, r6
 80166dc:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80166e0:	9502      	str	r5, [sp, #8]
 80166e2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80166e6:	5b45      	ldrh	r5, [r0, r5]
 80166e8:	122f      	asrs	r7, r5, #8
 80166ea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80166ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80166f2:	00ed      	lsls	r5, r5, #3
 80166f4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80166f8:	fb17 f704 	smulbb	r7, r7, r4
 80166fc:	b2ed      	uxtb	r5, r5
 80166fe:	fb1a fa04 	smulbb	sl, sl, r4
 8016702:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8016706:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801670a:	fb15 f504 	smulbb	r5, r5, r4
 801670e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8016712:	fa1f fe8e 	uxth.w	lr, lr
 8016716:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801671a:	fa5f f989 	uxtb.w	r9, r9
 801671e:	fb07 a70c 	mla	r7, r7, ip, sl
 8016722:	f10e 0401 	add.w	r4, lr, #1
 8016726:	fb09 550c 	mla	r5, r9, ip, r5
 801672a:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801672e:	9c02      	ldr	r4, [sp, #8]
 8016730:	b2ad      	uxth	r5, r5
 8016732:	b2bf      	uxth	r7, r7
 8016734:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016738:	f105 0a01 	add.w	sl, r5, #1
 801673c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016740:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016744:	ea4a 0e0e 	orr.w	lr, sl, lr
 8016748:	f107 0a01 	add.w	sl, r7, #1
 801674c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016750:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016754:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016758:	ea4e 0e0a 	orr.w	lr, lr, sl
 801675c:	f820 e004 	strh.w	lr, [r0, r4]
 8016760:	e7aa      	b.n	80166b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016762:	f04f 0900 	mov.w	r9, #0
 8016766:	eba3 0409 	sub.w	r4, r3, r9
 801676a:	2c00      	cmp	r4, #0
 801676c:	f77f af4a 	ble.w	8016604 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016770:	1414      	asrs	r4, r2, #16
 8016772:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8016776:	140d      	asrs	r5, r1, #16
 8016778:	fb06 5504 	mla	r5, r6, r4, r5
 801677c:	9c01      	ldr	r4, [sp, #4]
 801677e:	5d64      	ldrb	r4, [r4, r5]
 8016780:	2cff      	cmp	r4, #255	; 0xff
 8016782:	d10b      	bne.n	801679c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8016784:	9c00      	ldr	r4, [sp, #0]
 8016786:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801678a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801678e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016790:	f109 0901 	add.w	r9, r9, #1
 8016794:	4421      	add	r1, r4
 8016796:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016798:	4422      	add	r2, r4
 801679a:	e7e4      	b.n	8016766 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801679c:	2c00      	cmp	r4, #0
 801679e:	d0f6      	beq.n	801678e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80167a0:	9e00      	ldr	r6, [sp, #0]
 80167a2:	b2a7      	uxth	r7, r4
 80167a4:	43e4      	mvns	r4, r4
 80167a6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80167aa:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80167ae:	b2e4      	uxtb	r4, r4
 80167b0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80167b4:	122e      	asrs	r6, r5, #8
 80167b6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80167ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80167be:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80167c2:	00ed      	lsls	r5, r5, #3
 80167c4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80167c8:	fb16 f604 	smulbb	r6, r6, r4
 80167cc:	b2ed      	uxtb	r5, r5
 80167ce:	fb1a fa04 	smulbb	sl, sl, r4
 80167d2:	fb0c 6c07 	mla	ip, ip, r7, r6
 80167d6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80167da:	fb15 f504 	smulbb	r5, r5, r4
 80167de:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80167e2:	fa1f fc8c 	uxth.w	ip, ip
 80167e6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80167ea:	fa5f fe8e 	uxtb.w	lr, lr
 80167ee:	fb06 a607 	mla	r6, r6, r7, sl
 80167f2:	f10c 0401 	add.w	r4, ip, #1
 80167f6:	fb0e 5507 	mla	r5, lr, r7, r5
 80167fa:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80167fe:	b2ad      	uxth	r5, r5
 8016800:	b2b6      	uxth	r6, r6
 8016802:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016806:	f105 0a01 	add.w	sl, r5, #1
 801680a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801680e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016812:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016816:	f106 0a01 	add.w	sl, r6, #1
 801681a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801681e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016822:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016826:	ea4c 0c0a 	orr.w	ip, ip, sl
 801682a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801682e:	e7ae      	b.n	801678e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016830:	b005      	add	sp, #20
 8016832:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016836 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016836:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801683a:	b085      	sub	sp, #20
 801683c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801683e:	9203      	str	r2, [sp, #12]
 8016840:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8016844:	9100      	str	r1, [sp, #0]
 8016846:	9201      	str	r2, [sp, #4]
 8016848:	6841      	ldr	r1, [r0, #4]
 801684a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801684e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016852:	fb01 2404 	mla	r4, r1, r4, r2
 8016856:	6802      	ldr	r2, [r0, #0]
 8016858:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801685c:	f8de 2000 	ldr.w	r2, [lr]
 8016860:	9202      	str	r2, [sp, #8]
 8016862:	9a01      	ldr	r2, [sp, #4]
 8016864:	43d6      	mvns	r6, r2
 8016866:	b2f6      	uxtb	r6, r6
 8016868:	9a00      	ldr	r2, [sp, #0]
 801686a:	2a00      	cmp	r2, #0
 801686c:	dc03      	bgt.n	8016876 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801686e:	9a03      	ldr	r2, [sp, #12]
 8016870:	2a00      	cmp	r2, #0
 8016872:	f340 8124 	ble.w	8016abe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8016876:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016878:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801687c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016880:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016882:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8016886:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801688a:	2b00      	cmp	r3, #0
 801688c:	dd0e      	ble.n	80168ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801688e:	1408      	asrs	r0, r1, #16
 8016890:	d405      	bmi.n	801689e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016892:	4560      	cmp	r0, ip
 8016894:	da03      	bge.n	801689e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016896:	1410      	asrs	r0, r2, #16
 8016898:	d401      	bmi.n	801689e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801689a:	42b8      	cmp	r0, r7
 801689c:	db07      	blt.n	80168ae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801689e:	9811      	ldr	r0, [sp, #68]	; 0x44
 80168a0:	3b01      	subs	r3, #1
 80168a2:	3402      	adds	r4, #2
 80168a4:	4401      	add	r1, r0
 80168a6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80168a8:	4402      	add	r2, r0
 80168aa:	e7ee      	b.n	801688a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80168ac:	d06e      	beq.n	801698c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80168ae:	1e58      	subs	r0, r3, #1
 80168b0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80168b2:	fb05 1500 	mla	r5, r5, r0, r1
 80168b6:	142d      	asrs	r5, r5, #16
 80168b8:	d45c      	bmi.n	8016974 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80168ba:	4565      	cmp	r5, ip
 80168bc:	da5a      	bge.n	8016974 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80168be:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80168c0:	fb05 2000 	mla	r0, r5, r0, r2
 80168c4:	1400      	asrs	r0, r0, #16
 80168c6:	d455      	bmi.n	8016974 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80168c8:	42b8      	cmp	r0, r7
 80168ca:	da53      	bge.n	8016974 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80168cc:	4699      	mov	r9, r3
 80168ce:	46a2      	mov	sl, r4
 80168d0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80168d4:	f1b9 0f00 	cmp.w	r9, #0
 80168d8:	dd54      	ble.n	8016984 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80168da:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80168de:	140d      	asrs	r5, r1, #16
 80168e0:	1410      	asrs	r0, r2, #16
 80168e2:	f109 39ff 	add.w	r9, r9, #4294967295
 80168e6:	fb07 5000 	mla	r0, r7, r0, r5
 80168ea:	9d02      	ldr	r5, [sp, #8]
 80168ec:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80168f0:	f8ba 5000 	ldrh.w	r5, [sl]
 80168f4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80168f8:	122f      	asrs	r7, r5, #8
 80168fa:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80168fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016902:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016906:	00ed      	lsls	r5, r5, #3
 8016908:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801690c:	fb17 f706 	smulbb	r7, r7, r6
 8016910:	b2ed      	uxtb	r5, r5
 8016912:	fb18 f806 	smulbb	r8, r8, r6
 8016916:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801691a:	10c7      	asrs	r7, r0, #3
 801691c:	fb15 f506 	smulbb	r5, r5, r6
 8016920:	00c0      	lsls	r0, r0, #3
 8016922:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016926:	fa1f fc8c 	uxth.w	ip, ip
 801692a:	b2c0      	uxtb	r0, r0
 801692c:	fb07 870b 	mla	r7, r7, fp, r8
 8016930:	fb00 500b 	mla	r0, r0, fp, r5
 8016934:	f10c 0501 	add.w	r5, ip, #1
 8016938:	b2bf      	uxth	r7, r7
 801693a:	b280      	uxth	r0, r0
 801693c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016940:	f107 0801 	add.w	r8, r7, #1
 8016944:	1c45      	adds	r5, r0, #1
 8016946:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801694a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801694e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016952:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016954:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016958:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801695c:	4401      	add	r1, r0
 801695e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016962:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016964:	ea45 0c0c 	orr.w	ip, r5, ip
 8016968:	4402      	add	r2, r0
 801696a:	ea4c 0c08 	orr.w	ip, ip, r8
 801696e:	f82a cb02 	strh.w	ip, [sl], #2
 8016972:	e7af      	b.n	80168d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016974:	f04f 0800 	mov.w	r8, #0
 8016978:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801697c:	eb03 0008 	add.w	r0, r3, r8
 8016980:	2800      	cmp	r0, #0
 8016982:	dc41      	bgt.n	8016a08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016984:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016988:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801698c:	9b00      	ldr	r3, [sp, #0]
 801698e:	2b00      	cmp	r3, #0
 8016990:	f340 8095 	ble.w	8016abe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8016994:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016998:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801699a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801699e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80169a2:	eef0 6a62 	vmov.f32	s13, s5
 80169a6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80169aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80169ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80169b2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80169b6:	eef0 6a43 	vmov.f32	s13, s6
 80169ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80169be:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80169c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80169c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80169ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 80169ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80169d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80169d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80169da:	ee12 2a90 	vmov	r2, s5
 80169de:	eef0 2a47 	vmov.f32	s5, s14
 80169e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80169e6:	ee13 2a10 	vmov	r2, s6
 80169ea:	9311      	str	r3, [sp, #68]	; 0x44
 80169ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80169ee:	eeb0 3a67 	vmov.f32	s6, s15
 80169f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80169f6:	9312      	str	r3, [sp, #72]	; 0x48
 80169f8:	9b00      	ldr	r3, [sp, #0]
 80169fa:	9a03      	ldr	r2, [sp, #12]
 80169fc:	3b01      	subs	r3, #1
 80169fe:	9300      	str	r3, [sp, #0]
 8016a00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016a02:	bf08      	it	eq
 8016a04:	4613      	moveq	r3, r2
 8016a06:	e72f      	b.n	8016868 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016a08:	140f      	asrs	r7, r1, #16
 8016a0a:	d451      	bmi.n	8016ab0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016a0c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016a10:	42bd      	cmp	r5, r7
 8016a12:	dd4d      	ble.n	8016ab0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016a14:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016a18:	d44a      	bmi.n	8016ab0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016a1a:	f8de 000c 	ldr.w	r0, [lr, #12]
 8016a1e:	4560      	cmp	r0, ip
 8016a20:	dd46      	ble.n	8016ab0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016a22:	b22d      	sxth	r5, r5
 8016a24:	9802      	ldr	r0, [sp, #8]
 8016a26:	fb0c 7505 	mla	r5, ip, r5, r7
 8016a2a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8016a2e:	f06f 0501 	mvn.w	r5, #1
 8016a32:	fb05 fb08 	mul.w	fp, r5, r8
 8016a36:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016a3a:	f834 500b 	ldrh.w	r5, [r4, fp]
 8016a3e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016a42:	122f      	asrs	r7, r5, #8
 8016a44:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8016a48:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016a4c:	00ed      	lsls	r5, r5, #3
 8016a4e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8016a52:	fb17 f706 	smulbb	r7, r7, r6
 8016a56:	b2ed      	uxtb	r5, r5
 8016a58:	fb19 f906 	smulbb	r9, r9, r6
 8016a5c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8016a60:	10c7      	asrs	r7, r0, #3
 8016a62:	fb15 f506 	smulbb	r5, r5, r6
 8016a66:	00c0      	lsls	r0, r0, #3
 8016a68:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016a6c:	fa1f fc8c 	uxth.w	ip, ip
 8016a70:	b2c0      	uxtb	r0, r0
 8016a72:	fb07 970a 	mla	r7, r7, sl, r9
 8016a76:	fb00 500a 	mla	r0, r0, sl, r5
 8016a7a:	f10c 0501 	add.w	r5, ip, #1
 8016a7e:	b2bf      	uxth	r7, r7
 8016a80:	b280      	uxth	r0, r0
 8016a82:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016a86:	f107 0901 	add.w	r9, r7, #1
 8016a8a:	1c45      	adds	r5, r0, #1
 8016a8c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8016a90:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016a94:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016a98:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016a9c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016aa0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016aa4:	ea45 0c0c 	orr.w	ip, r5, ip
 8016aa8:	ea4c 0c09 	orr.w	ip, ip, r9
 8016aac:	f824 c00b 	strh.w	ip, [r4, fp]
 8016ab0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016ab2:	f108 38ff 	add.w	r8, r8, #4294967295
 8016ab6:	4401      	add	r1, r0
 8016ab8:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016aba:	4402      	add	r2, r0
 8016abc:	e75e      	b.n	801697c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8016abe:	b005      	add	sp, #20
 8016ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016ac4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ac8:	b085      	sub	sp, #20
 8016aca:	4693      	mov	fp, r2
 8016acc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016ad0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8016ad2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016ad4:	6870      	ldr	r0, [r6, #4]
 8016ad6:	9101      	str	r1, [sp, #4]
 8016ad8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016adc:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8016ae0:	fb00 2404 	mla	r4, r0, r4, r2
 8016ae4:	6832      	ldr	r2, [r6, #0]
 8016ae6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016aea:	682a      	ldr	r2, [r5, #0]
 8016aec:	9202      	str	r2, [sp, #8]
 8016aee:	9a01      	ldr	r2, [sp, #4]
 8016af0:	2a00      	cmp	r2, #0
 8016af2:	dc03      	bgt.n	8016afc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016af4:	f1bb 0f00 	cmp.w	fp, #0
 8016af8:	f340 809a 	ble.w	8016c30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016afc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016afe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016b02:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016b06:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016b08:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016b0c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016b10:	2b00      	cmp	r3, #0
 8016b12:	dd0c      	ble.n	8016b2e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016b14:	1406      	asrs	r6, r0, #16
 8016b16:	d405      	bmi.n	8016b24 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016b18:	454e      	cmp	r6, r9
 8016b1a:	da03      	bge.n	8016b24 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016b1c:	1416      	asrs	r6, r2, #16
 8016b1e:	d401      	bmi.n	8016b24 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016b20:	4546      	cmp	r6, r8
 8016b22:	db05      	blt.n	8016b30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016b24:	4470      	add	r0, lr
 8016b26:	4462      	add	r2, ip
 8016b28:	3b01      	subs	r3, #1
 8016b2a:	3402      	adds	r4, #2
 8016b2c:	e7f0      	b.n	8016b10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8016b2e:	d00f      	beq.n	8016b50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016b30:	1e5e      	subs	r6, r3, #1
 8016b32:	fb0e 0706 	mla	r7, lr, r6, r0
 8016b36:	143f      	asrs	r7, r7, #16
 8016b38:	d541      	bpl.n	8016bbe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8016b3a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8016b3e:	4698      	mov	r8, r3
 8016b40:	9603      	str	r6, [sp, #12]
 8016b42:	f1b8 0f00 	cmp.w	r8, #0
 8016b46:	dc56      	bgt.n	8016bf6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8016b48:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016b4c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016b50:	9b01      	ldr	r3, [sp, #4]
 8016b52:	2b00      	cmp	r3, #0
 8016b54:	dd6c      	ble.n	8016c30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016b56:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016b5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016b5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016b60:	eeb0 6a62 	vmov.f32	s12, s5
 8016b64:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016b68:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016b6c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016b70:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016b74:	eeb0 6a43 	vmov.f32	s12, s6
 8016b78:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016b7c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016b80:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016b84:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016b88:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016b8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016b90:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016b94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016b98:	ee12 2a90 	vmov	r2, s5
 8016b9c:	eef0 2a47 	vmov.f32	s5, s14
 8016ba0:	fb92 fef3 	sdiv	lr, r2, r3
 8016ba4:	ee13 2a10 	vmov	r2, s6
 8016ba8:	eeb0 3a67 	vmov.f32	s6, s15
 8016bac:	fb92 fcf3 	sdiv	ip, r2, r3
 8016bb0:	9b01      	ldr	r3, [sp, #4]
 8016bb2:	3b01      	subs	r3, #1
 8016bb4:	9301      	str	r3, [sp, #4]
 8016bb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016bb8:	bf08      	it	eq
 8016bba:	465b      	moveq	r3, fp
 8016bbc:	e797      	b.n	8016aee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8016bbe:	454f      	cmp	r7, r9
 8016bc0:	dabb      	bge.n	8016b3a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016bc2:	fb0c 2606 	mla	r6, ip, r6, r2
 8016bc6:	1436      	asrs	r6, r6, #16
 8016bc8:	d4b7      	bmi.n	8016b3a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016bca:	4546      	cmp	r6, r8
 8016bcc:	dab5      	bge.n	8016b3a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016bce:	461e      	mov	r6, r3
 8016bd0:	46a0      	mov	r8, r4
 8016bd2:	2e00      	cmp	r6, #0
 8016bd4:	ddb8      	ble.n	8016b48 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016bd6:	1417      	asrs	r7, r2, #16
 8016bd8:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8016bdc:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016be0:	9902      	ldr	r1, [sp, #8]
 8016be2:	4470      	add	r0, lr
 8016be4:	4462      	add	r2, ip
 8016be6:	fb0a 9707 	mla	r7, sl, r7, r9
 8016bea:	3e01      	subs	r6, #1
 8016bec:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8016bf0:	f828 7b02 	strh.w	r7, [r8], #2
 8016bf4:	e7ed      	b.n	8016bd2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016bf6:	ea5f 4920 	movs.w	r9, r0, asr #16
 8016bfa:	d414      	bmi.n	8016c26 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016bfc:	68ae      	ldr	r6, [r5, #8]
 8016bfe:	454e      	cmp	r6, r9
 8016c00:	dd11      	ble.n	8016c26 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016c02:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016c06:	d40e      	bmi.n	8016c26 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016c08:	68ef      	ldr	r7, [r5, #12]
 8016c0a:	4557      	cmp	r7, sl
 8016c0c:	dd0b      	ble.n	8016c26 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016c0e:	b236      	sxth	r6, r6
 8016c10:	f06f 0101 	mvn.w	r1, #1
 8016c14:	9f02      	ldr	r7, [sp, #8]
 8016c16:	fb0a 9606 	mla	r6, sl, r6, r9
 8016c1a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8016c1e:	fb01 f608 	mul.w	r6, r1, r8
 8016c22:	9903      	ldr	r1, [sp, #12]
 8016c24:	538f      	strh	r7, [r1, r6]
 8016c26:	4470      	add	r0, lr
 8016c28:	4462      	add	r2, ip
 8016c2a:	f108 38ff 	add.w	r8, r8, #4294967295
 8016c2e:	e788      	b.n	8016b42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016c30:	b005      	add	sp, #20
 8016c32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016c36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016c36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c3a:	b087      	sub	sp, #28
 8016c3c:	468b      	mov	fp, r1
 8016c3e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016c42:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016c44:	9203      	str	r2, [sp, #12]
 8016c46:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016c4a:	6841      	ldr	r1, [r0, #4]
 8016c4c:	9204      	str	r2, [sp, #16]
 8016c4e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016c52:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8016c56:	fb01 2505 	mla	r5, r1, r5, r2
 8016c5a:	6802      	ldr	r2, [r0, #0]
 8016c5c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8016c60:	f8d9 2000 	ldr.w	r2, [r9]
 8016c64:	9201      	str	r2, [sp, #4]
 8016c66:	f1bb 0f00 	cmp.w	fp, #0
 8016c6a:	dc03      	bgt.n	8016c74 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8016c6c:	9a03      	ldr	r2, [sp, #12]
 8016c6e:	2a00      	cmp	r2, #0
 8016c70:	f340 8158 	ble.w	8016f24 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8016c74:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016c76:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8016c7a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016c7e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016c80:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8016c84:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016c88:	2b00      	cmp	r3, #0
 8016c8a:	dd0e      	ble.n	8016caa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8016c8c:	1402      	asrs	r2, r0, #16
 8016c8e:	d405      	bmi.n	8016c9c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016c90:	42ba      	cmp	r2, r7
 8016c92:	da03      	bge.n	8016c9c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016c94:	140a      	asrs	r2, r1, #16
 8016c96:	d401      	bmi.n	8016c9c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016c98:	42b2      	cmp	r2, r6
 8016c9a:	db07      	blt.n	8016cac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016c9c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016c9e:	3b01      	subs	r3, #1
 8016ca0:	3502      	adds	r5, #2
 8016ca2:	4410      	add	r0, r2
 8016ca4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016ca6:	4411      	add	r1, r2
 8016ca8:	e7ee      	b.n	8016c88 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016caa:	d017      	beq.n	8016cdc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8016cac:	1e5a      	subs	r2, r3, #1
 8016cae:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016cb0:	fb04 0402 	mla	r4, r4, r2, r0
 8016cb4:	1424      	asrs	r4, r4, #16
 8016cb6:	d409      	bmi.n	8016ccc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016cb8:	42bc      	cmp	r4, r7
 8016cba:	da07      	bge.n	8016ccc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016cbc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016cbe:	fb04 1202 	mla	r2, r4, r2, r1
 8016cc2:	1412      	asrs	r2, r2, #16
 8016cc4:	d402      	bmi.n	8016ccc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016cc6:	42b2      	cmp	r2, r6
 8016cc8:	f2c0 80bf 	blt.w	8016e4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016ccc:	2700      	movs	r7, #0
 8016cce:	19da      	adds	r2, r3, r7
 8016cd0:	2a00      	cmp	r2, #0
 8016cd2:	dc3e      	bgt.n	8016d52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016cd4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016cd8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8016cdc:	f1bb 0f00 	cmp.w	fp, #0
 8016ce0:	f340 8120 	ble.w	8016f24 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8016ce4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016ce8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016cea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016cee:	f1bb 0b01 	subs.w	fp, fp, #1
 8016cf2:	eeb0 6a62 	vmov.f32	s12, s5
 8016cf6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016cfa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016cfe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016d02:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016d06:	eeb0 6a43 	vmov.f32	s12, s6
 8016d0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016d0e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016d12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016d16:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016d1a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016d1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016d22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016d26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016d2a:	ee12 2a90 	vmov	r2, s5
 8016d2e:	eef0 2a47 	vmov.f32	s5, s14
 8016d32:	fb92 f3f3 	sdiv	r3, r2, r3
 8016d36:	ee13 2a10 	vmov	r2, s6
 8016d3a:	9313      	str	r3, [sp, #76]	; 0x4c
 8016d3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016d3e:	eeb0 3a67 	vmov.f32	s6, s15
 8016d42:	fb92 f3f3 	sdiv	r3, r2, r3
 8016d46:	9a03      	ldr	r2, [sp, #12]
 8016d48:	9314      	str	r3, [sp, #80]	; 0x50
 8016d4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016d4c:	bf08      	it	eq
 8016d4e:	4613      	moveq	r3, r2
 8016d50:	e789      	b.n	8016c66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016d52:	1406      	asrs	r6, r0, #16
 8016d54:	d42d      	bmi.n	8016db2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016d56:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8016d5a:	42b4      	cmp	r4, r6
 8016d5c:	dd29      	ble.n	8016db2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016d5e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8016d62:	d426      	bmi.n	8016db2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016d64:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016d68:	4562      	cmp	r2, ip
 8016d6a:	dd22      	ble.n	8016db2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016d6c:	b224      	sxth	r4, r4
 8016d6e:	9a01      	ldr	r2, [sp, #4]
 8016d70:	fb0c 6404 	mla	r4, ip, r4, r6
 8016d74:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8016d78:	0e22      	lsrs	r2, r4, #24
 8016d7a:	d01a      	beq.n	8016db2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016d7c:	9e04      	ldr	r6, [sp, #16]
 8016d7e:	4372      	muls	r2, r6
 8016d80:	1c56      	adds	r6, r2, #1
 8016d82:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016d86:	0a26      	lsrs	r6, r4, #8
 8016d88:	1212      	asrs	r2, r2, #8
 8016d8a:	9605      	str	r6, [sp, #20]
 8016d8c:	2aff      	cmp	r2, #255	; 0xff
 8016d8e:	d116      	bne.n	8016dbe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8016d90:	f06f 0201 	mvn.w	r2, #1
 8016d94:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016d98:	fb02 fc07 	mul.w	ip, r2, r7
 8016d9c:	0962      	lsrs	r2, r4, #5
 8016d9e:	f026 0607 	bic.w	r6, r6, #7
 8016da2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016da6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016daa:	4316      	orrs	r6, r2
 8016dac:	4326      	orrs	r6, r4
 8016dae:	f825 600c 	strh.w	r6, [r5, ip]
 8016db2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016db4:	3f01      	subs	r7, #1
 8016db6:	4410      	add	r0, r2
 8016db8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016dba:	4411      	add	r1, r2
 8016dbc:	e787      	b.n	8016cce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016dbe:	f06f 0601 	mvn.w	r6, #1
 8016dc2:	fa1f fa82 	uxth.w	sl, r2
 8016dc6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8016dca:	43d2      	mvns	r2, r2
 8016dcc:	437e      	muls	r6, r7
 8016dce:	b2e4      	uxtb	r4, r4
 8016dd0:	fb1c fc0a 	smulbb	ip, ip, sl
 8016dd4:	b2d2      	uxtb	r2, r2
 8016dd6:	f835 8006 	ldrh.w	r8, [r5, r6]
 8016dda:	fb14 f40a 	smulbb	r4, r4, sl
 8016dde:	9602      	str	r6, [sp, #8]
 8016de0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016de4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016de8:	fb16 f60a 	smulbb	r6, r6, sl
 8016dec:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016df0:	fb0e ce02 	mla	lr, lr, r2, ip
 8016df4:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016df8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016dfc:	fa1f fe8e 	uxth.w	lr, lr
 8016e00:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016e04:	fa5f f888 	uxtb.w	r8, r8
 8016e08:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016e0c:	fb08 4402 	mla	r4, r8, r2, r4
 8016e10:	f10e 0201 	add.w	r2, lr, #1
 8016e14:	fa1f fc8c 	uxth.w	ip, ip
 8016e18:	b2a4      	uxth	r4, r4
 8016e1a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016e1e:	9a02      	ldr	r2, [sp, #8]
 8016e20:	1c66      	adds	r6, r4, #1
 8016e22:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016e26:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016e2a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016e2e:	ea46 0e0e 	orr.w	lr, r6, lr
 8016e32:	f10c 0601 	add.w	r6, ip, #1
 8016e36:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016e3a:	0976      	lsrs	r6, r6, #5
 8016e3c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016e40:	ea4e 0e06 	orr.w	lr, lr, r6
 8016e44:	f825 e002 	strh.w	lr, [r5, r2]
 8016e48:	e7b3      	b.n	8016db2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016e4a:	f04f 0800 	mov.w	r8, #0
 8016e4e:	eba3 0208 	sub.w	r2, r3, r8
 8016e52:	2a00      	cmp	r2, #0
 8016e54:	f77f af3e 	ble.w	8016cd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016e58:	1404      	asrs	r4, r0, #16
 8016e5a:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8016e5e:	140a      	asrs	r2, r1, #16
 8016e60:	fb06 4202 	mla	r2, r6, r2, r4
 8016e64:	9c01      	ldr	r4, [sp, #4]
 8016e66:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8016e6a:	0e22      	lsrs	r2, r4, #24
 8016e6c:	d015      	beq.n	8016e9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8016e6e:	9e04      	ldr	r6, [sp, #16]
 8016e70:	4372      	muls	r2, r6
 8016e72:	1c56      	adds	r6, r2, #1
 8016e74:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016e78:	0a26      	lsrs	r6, r4, #8
 8016e7a:	1212      	asrs	r2, r2, #8
 8016e7c:	2aff      	cmp	r2, #255	; 0xff
 8016e7e:	d113      	bne.n	8016ea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8016e80:	0962      	lsrs	r2, r4, #5
 8016e82:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016e86:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016e8a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016e8e:	f026 0607 	bic.w	r6, r6, #7
 8016e92:	4316      	orrs	r6, r2
 8016e94:	4326      	orrs	r6, r4
 8016e96:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8016e9a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016e9c:	f108 0801 	add.w	r8, r8, #1
 8016ea0:	4410      	add	r0, r2
 8016ea2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016ea4:	4411      	add	r1, r2
 8016ea6:	e7d2      	b.n	8016e4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8016ea8:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8016eac:	fa1f fa82 	uxth.w	sl, r2
 8016eb0:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8016eb4:	43d2      	mvns	r2, r2
 8016eb6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016eba:	fb17 f70a 	smulbb	r7, r7, sl
 8016ebe:	b2d2      	uxtb	r2, r2
 8016ec0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016ec4:	b2e4      	uxtb	r4, r4
 8016ec6:	b2f6      	uxtb	r6, r6
 8016ec8:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016ecc:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016ed0:	fb14 f40a 	smulbb	r4, r4, sl
 8016ed4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016ed8:	fa1f fc8c 	uxth.w	ip, ip
 8016edc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016ee0:	fb16 f60a 	smulbb	r6, r6, sl
 8016ee4:	fa5f fe8e 	uxtb.w	lr, lr
 8016ee8:	fb0e 4402 	mla	r4, lr, r2, r4
 8016eec:	fb07 6702 	mla	r7, r7, r2, r6
 8016ef0:	f10c 0201 	add.w	r2, ip, #1
 8016ef4:	b2a4      	uxth	r4, r4
 8016ef6:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016efa:	1c66      	adds	r6, r4, #1
 8016efc:	b2bf      	uxth	r7, r7
 8016efe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016f02:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016f06:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016f0a:	ea46 0c0c 	orr.w	ip, r6, ip
 8016f0e:	1c7e      	adds	r6, r7, #1
 8016f10:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016f14:	0976      	lsrs	r6, r6, #5
 8016f16:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016f1a:	ea4c 0c06 	orr.w	ip, ip, r6
 8016f1e:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016f22:	e7ba      	b.n	8016e9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8016f24:	b007      	add	sp, #28
 8016f26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08016f2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f30:	b085      	sub	sp, #20
 8016f32:	468b      	mov	fp, r1
 8016f34:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016f38:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016f3a:	9203      	str	r2, [sp, #12]
 8016f3c:	6841      	ldr	r1, [r0, #4]
 8016f3e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8016f42:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016f46:	fb01 2404 	mla	r4, r1, r4, r2
 8016f4a:	6802      	ldr	r2, [r0, #0]
 8016f4c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016f50:	f8d8 2000 	ldr.w	r2, [r8]
 8016f54:	9201      	str	r2, [sp, #4]
 8016f56:	f1bb 0f00 	cmp.w	fp, #0
 8016f5a:	dc03      	bgt.n	8016f64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016f5c:	9a03      	ldr	r2, [sp, #12]
 8016f5e:	2a00      	cmp	r2, #0
 8016f60:	f340 814f 	ble.w	8017202 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016f64:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016f66:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8016f6a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016f6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016f70:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8016f74:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016f78:	2b00      	cmp	r3, #0
 8016f7a:	dd0e      	ble.n	8016f9a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016f7c:	1408      	asrs	r0, r1, #16
 8016f7e:	d405      	bmi.n	8016f8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016f80:	42b8      	cmp	r0, r7
 8016f82:	da03      	bge.n	8016f8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016f84:	1410      	asrs	r0, r2, #16
 8016f86:	d401      	bmi.n	8016f8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016f88:	42b0      	cmp	r0, r6
 8016f8a:	db07      	blt.n	8016f9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016f8c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016f8e:	3b01      	subs	r3, #1
 8016f90:	3402      	adds	r4, #2
 8016f92:	4401      	add	r1, r0
 8016f94:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016f96:	4402      	add	r2, r0
 8016f98:	e7ee      	b.n	8016f78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8016f9a:	d017      	beq.n	8016fcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016f9c:	1e58      	subs	r0, r3, #1
 8016f9e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016fa0:	fb05 1500 	mla	r5, r5, r0, r1
 8016fa4:	142d      	asrs	r5, r5, #16
 8016fa6:	d409      	bmi.n	8016fbc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016fa8:	42bd      	cmp	r5, r7
 8016faa:	da07      	bge.n	8016fbc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016fac:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8016fae:	fb05 2000 	mla	r0, r5, r0, r2
 8016fb2:	1400      	asrs	r0, r0, #16
 8016fb4:	d402      	bmi.n	8016fbc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016fb6:	42b0      	cmp	r0, r6
 8016fb8:	f2c0 80ba 	blt.w	8017130 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016fbc:	2600      	movs	r6, #0
 8016fbe:	1998      	adds	r0, r3, r6
 8016fc0:	2800      	cmp	r0, #0
 8016fc2:	dc3e      	bgt.n	8017042 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016fc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016fc8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016fcc:	f1bb 0f00 	cmp.w	fp, #0
 8016fd0:	f340 8117 	ble.w	8017202 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016fd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016fd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016fda:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016fde:	f1bb 0b01 	subs.w	fp, fp, #1
 8016fe2:	eeb0 6a62 	vmov.f32	s12, s5
 8016fe6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016fea:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016fee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016ff2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016ff6:	eeb0 6a43 	vmov.f32	s12, s6
 8016ffa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016ffe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017002:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017006:	ee61 7a27 	vmul.f32	s15, s2, s15
 801700a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801700e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017012:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017016:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801701a:	ee12 2a90 	vmov	r2, s5
 801701e:	eef0 2a47 	vmov.f32	s5, s14
 8017022:	fb92 f3f3 	sdiv	r3, r2, r3
 8017026:	ee13 2a10 	vmov	r2, s6
 801702a:	9311      	str	r3, [sp, #68]	; 0x44
 801702c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801702e:	eeb0 3a67 	vmov.f32	s6, s15
 8017032:	fb92 f3f3 	sdiv	r3, r2, r3
 8017036:	9a03      	ldr	r2, [sp, #12]
 8017038:	9312      	str	r3, [sp, #72]	; 0x48
 801703a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801703c:	bf08      	it	eq
 801703e:	4613      	moveq	r3, r2
 8017040:	e789      	b.n	8016f56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8017042:	140f      	asrs	r7, r1, #16
 8017044:	d424      	bmi.n	8017090 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017046:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801704a:	42bd      	cmp	r5, r7
 801704c:	dd20      	ble.n	8017090 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801704e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017052:	d41d      	bmi.n	8017090 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017054:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8017058:	4560      	cmp	r0, ip
 801705a:	dd19      	ble.n	8017090 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801705c:	b22d      	sxth	r5, r5
 801705e:	9801      	ldr	r0, [sp, #4]
 8017060:	fb0c 7505 	mla	r5, ip, r5, r7
 8017064:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8017068:	0e07      	lsrs	r7, r0, #24
 801706a:	2fff      	cmp	r7, #255	; 0xff
 801706c:	d116      	bne.n	801709c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801706e:	f06f 0501 	mvn.w	r5, #1
 8017072:	fb05 f706 	mul.w	r7, r5, r6
 8017076:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801707a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801707e:	0945      	lsrs	r5, r0, #5
 8017080:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017084:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017088:	ea4c 0505 	orr.w	r5, ip, r5
 801708c:	4305      	orrs	r5, r0
 801708e:	53e5      	strh	r5, [r4, r7]
 8017090:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017092:	3e01      	subs	r6, #1
 8017094:	4401      	add	r1, r0
 8017096:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017098:	4402      	add	r2, r0
 801709a:	e790      	b.n	8016fbe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801709c:	b2fd      	uxtb	r5, r7
 801709e:	2f00      	cmp	r7, #0
 80170a0:	d0f6      	beq.n	8017090 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80170a2:	f06f 0701 	mvn.w	r7, #1
 80170a6:	fa1f f985 	uxth.w	r9, r5
 80170aa:	43ed      	mvns	r5, r5
 80170ac:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80170b0:	4377      	muls	r7, r6
 80170b2:	fb1a fa09 	smulbb	sl, sl, r9
 80170b6:	b2ed      	uxtb	r5, r5
 80170b8:	f834 e007 	ldrh.w	lr, [r4, r7]
 80170bc:	9702      	str	r7, [sp, #8]
 80170be:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80170c2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80170c6:	fb17 f709 	smulbb	r7, r7, r9
 80170ca:	b2c0      	uxtb	r0, r0
 80170cc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80170d0:	fb10 f009 	smulbb	r0, r0, r9
 80170d4:	fb0c 7c05 	mla	ip, ip, r5, r7
 80170d8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80170dc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80170e0:	fa1f fc8c 	uxth.w	ip, ip
 80170e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80170e8:	fa5f fe8e 	uxtb.w	lr, lr
 80170ec:	fb07 a705 	mla	r7, r7, r5, sl
 80170f0:	fb0e 0005 	mla	r0, lr, r5, r0
 80170f4:	f10c 0501 	add.w	r5, ip, #1
 80170f8:	b2bf      	uxth	r7, r7
 80170fa:	b280      	uxth	r0, r0
 80170fc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017100:	f100 0a01 	add.w	sl, r0, #1
 8017104:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017108:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801710c:	9802      	ldr	r0, [sp, #8]
 801710e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017112:	ea4a 0c0c 	orr.w	ip, sl, ip
 8017116:	f107 0a01 	add.w	sl, r7, #1
 801711a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801711e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017122:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017126:	ea4c 0c0a 	orr.w	ip, ip, sl
 801712a:	f824 c000 	strh.w	ip, [r4, r0]
 801712e:	e7af      	b.n	8017090 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017130:	f04f 0e00 	mov.w	lr, #0
 8017134:	eba3 000e 	sub.w	r0, r3, lr
 8017138:	2800      	cmp	r0, #0
 801713a:	f77f af43 	ble.w	8016fc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801713e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8017142:	140d      	asrs	r5, r1, #16
 8017144:	1410      	asrs	r0, r2, #16
 8017146:	fb06 5000 	mla	r0, r6, r0, r5
 801714a:	9d01      	ldr	r5, [sp, #4]
 801714c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8017150:	0e2e      	lsrs	r6, r5, #24
 8017152:	2eff      	cmp	r6, #255	; 0xff
 8017154:	d112      	bne.n	801717c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8017156:	482c      	ldr	r0, [pc, #176]	; (8017208 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8017158:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801715c:	0968      	lsrs	r0, r5, #5
 801715e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017162:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017166:	4330      	orrs	r0, r6
 8017168:	4328      	orrs	r0, r5
 801716a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801716e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017170:	f10e 0e01 	add.w	lr, lr, #1
 8017174:	4401      	add	r1, r0
 8017176:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017178:	4402      	add	r2, r0
 801717a:	e7db      	b.n	8017134 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801717c:	b2f0      	uxtb	r0, r6
 801717e:	2e00      	cmp	r6, #0
 8017180:	d0f5      	beq.n	801716e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8017182:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8017186:	fa1f f980 	uxth.w	r9, r0
 801718a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801718e:	43c0      	mvns	r0, r0
 8017190:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017194:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8017198:	fb16 f609 	smulbb	r6, r6, r9
 801719c:	b2c0      	uxtb	r0, r0
 801719e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80171a2:	b2ed      	uxtb	r5, r5
 80171a4:	fb1a fa09 	smulbb	sl, sl, r9
 80171a8:	fb07 6700 	mla	r7, r7, r0, r6
 80171ac:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80171b0:	fb15 f509 	smulbb	r5, r5, r9
 80171b4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80171b8:	b2bf      	uxth	r7, r7
 80171ba:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80171be:	fa5f fc8c 	uxtb.w	ip, ip
 80171c2:	fb06 a600 	mla	r6, r6, r0, sl
 80171c6:	fb0c 5500 	mla	r5, ip, r0, r5
 80171ca:	1c78      	adds	r0, r7, #1
 80171cc:	b2b6      	uxth	r6, r6
 80171ce:	b2ad      	uxth	r5, r5
 80171d0:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80171d4:	f105 0a01 	add.w	sl, r5, #1
 80171d8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80171dc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80171e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80171e4:	ea4a 0707 	orr.w	r7, sl, r7
 80171e8:	f106 0a01 	add.w	sl, r6, #1
 80171ec:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80171f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80171f4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80171f8:	ea47 070a 	orr.w	r7, r7, sl
 80171fc:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8017200:	e7b5      	b.n	801716e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8017202:	b005      	add	sp, #20
 8017204:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017208:	fffff800 	.word	0xfffff800

0801720c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801720c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017210:	b087      	sub	sp, #28
 8017212:	468b      	mov	fp, r1
 8017214:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017218:	9815      	ldr	r0, [sp, #84]	; 0x54
 801721a:	9203      	str	r2, [sp, #12]
 801721c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017220:	6841      	ldr	r1, [r0, #4]
 8017222:	9204      	str	r2, [sp, #16]
 8017224:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8017228:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801722c:	fb01 2404 	mla	r4, r1, r4, r2
 8017230:	6802      	ldr	r2, [r0, #0]
 8017232:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017236:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801723a:	3201      	adds	r2, #1
 801723c:	f022 0201 	bic.w	r2, r2, #1
 8017240:	9200      	str	r2, [sp, #0]
 8017242:	f8d9 2000 	ldr.w	r2, [r9]
 8017246:	9201      	str	r2, [sp, #4]
 8017248:	f1bb 0f00 	cmp.w	fp, #0
 801724c:	dc03      	bgt.n	8017256 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801724e:	9a03      	ldr	r2, [sp, #12]
 8017250:	2a00      	cmp	r2, #0
 8017252:	f340 816a 	ble.w	801752a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8017256:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017258:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801725c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017260:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017262:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8017266:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801726a:	2b00      	cmp	r3, #0
 801726c:	dd0e      	ble.n	801728c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801726e:	1402      	asrs	r2, r0, #16
 8017270:	d405      	bmi.n	801727e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017272:	42ba      	cmp	r2, r7
 8017274:	da03      	bge.n	801727e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017276:	140a      	asrs	r2, r1, #16
 8017278:	d401      	bmi.n	801727e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801727a:	42b2      	cmp	r2, r6
 801727c:	db07      	blt.n	801728e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801727e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017280:	3b01      	subs	r3, #1
 8017282:	3402      	adds	r4, #2
 8017284:	4410      	add	r0, r2
 8017286:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017288:	4411      	add	r1, r2
 801728a:	e7ee      	b.n	801726a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801728c:	d017      	beq.n	80172be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801728e:	1e5a      	subs	r2, r3, #1
 8017290:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017292:	fb05 0502 	mla	r5, r5, r2, r0
 8017296:	142d      	asrs	r5, r5, #16
 8017298:	d409      	bmi.n	80172ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801729a:	42bd      	cmp	r5, r7
 801729c:	da07      	bge.n	80172ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801729e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80172a0:	fb05 1202 	mla	r2, r5, r2, r1
 80172a4:	1412      	asrs	r2, r2, #16
 80172a6:	d402      	bmi.n	80172ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80172a8:	42b2      	cmp	r2, r6
 80172aa:	f2c0 80c8 	blt.w	801743e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80172ae:	2700      	movs	r7, #0
 80172b0:	19da      	adds	r2, r3, r7
 80172b2:	2a00      	cmp	r2, #0
 80172b4:	dc3e      	bgt.n	8017334 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80172b6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80172ba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80172be:	f1bb 0f00 	cmp.w	fp, #0
 80172c2:	f340 8132 	ble.w	801752a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80172c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80172ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80172cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80172d0:	f1bb 0b01 	subs.w	fp, fp, #1
 80172d4:	eeb0 6a62 	vmov.f32	s12, s5
 80172d8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80172dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80172e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80172e4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80172e8:	eeb0 6a43 	vmov.f32	s12, s6
 80172ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80172f0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80172f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80172f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80172fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017300:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017304:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017308:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801730c:	ee12 2a90 	vmov	r2, s5
 8017310:	eef0 2a47 	vmov.f32	s5, s14
 8017314:	fb92 f3f3 	sdiv	r3, r2, r3
 8017318:	ee13 2a10 	vmov	r2, s6
 801731c:	9313      	str	r3, [sp, #76]	; 0x4c
 801731e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017320:	eeb0 3a67 	vmov.f32	s6, s15
 8017324:	fb92 f3f3 	sdiv	r3, r2, r3
 8017328:	9a03      	ldr	r2, [sp, #12]
 801732a:	9314      	str	r3, [sp, #80]	; 0x50
 801732c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801732e:	bf08      	it	eq
 8017330:	4613      	moveq	r3, r2
 8017332:	e789      	b.n	8017248 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017334:	1405      	asrs	r5, r0, #16
 8017336:	d436      	bmi.n	80173a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017338:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801733c:	42aa      	cmp	r2, r5
 801733e:	dd32      	ble.n	80173a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017340:	140e      	asrs	r6, r1, #16
 8017342:	d430      	bmi.n	80173a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017344:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8017348:	42b2      	cmp	r2, r6
 801734a:	dd2c      	ble.n	80173a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801734c:	9a00      	ldr	r2, [sp, #0]
 801734e:	fb06 5502 	mla	r5, r6, r2, r5
 8017352:	9e01      	ldr	r6, [sp, #4]
 8017354:	086a      	lsrs	r2, r5, #1
 8017356:	5cb2      	ldrb	r2, [r6, r2]
 8017358:	07ee      	lsls	r6, r5, #31
 801735a:	bf54      	ite	pl
 801735c:	f002 020f 	andpl.w	r2, r2, #15
 8017360:	1112      	asrmi	r2, r2, #4
 8017362:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017366:	b2d2      	uxtb	r2, r2
 8017368:	b1ea      	cbz	r2, 80173a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801736a:	9d04      	ldr	r5, [sp, #16]
 801736c:	436a      	muls	r2, r5
 801736e:	1c55      	adds	r5, r2, #1
 8017370:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8017374:	4d6e      	ldr	r5, [pc, #440]	; (8017530 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8017376:	1212      	asrs	r2, r2, #8
 8017378:	682d      	ldr	r5, [r5, #0]
 801737a:	2aff      	cmp	r2, #255	; 0xff
 801737c:	ea4f 2615 	mov.w	r6, r5, lsr #8
 8017380:	9605      	str	r6, [sp, #20]
 8017382:	d116      	bne.n	80173b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8017384:	f06f 0201 	mvn.w	r2, #1
 8017388:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801738c:	fb02 fc07 	mul.w	ip, r2, r7
 8017390:	096a      	lsrs	r2, r5, #5
 8017392:	f026 0607 	bic.w	r6, r6, #7
 8017396:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801739a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801739e:	4316      	orrs	r6, r2
 80173a0:	432e      	orrs	r6, r5
 80173a2:	f824 600c 	strh.w	r6, [r4, ip]
 80173a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80173a8:	3f01      	subs	r7, #1
 80173aa:	4410      	add	r0, r2
 80173ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80173ae:	4411      	add	r1, r2
 80173b0:	e77e      	b.n	80172b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80173b2:	f06f 0601 	mvn.w	r6, #1
 80173b6:	fa1f fa82 	uxth.w	sl, r2
 80173ba:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80173be:	43d2      	mvns	r2, r2
 80173c0:	437e      	muls	r6, r7
 80173c2:	b2ed      	uxtb	r5, r5
 80173c4:	fb1c fc0a 	smulbb	ip, ip, sl
 80173c8:	b2d2      	uxtb	r2, r2
 80173ca:	f834 8006 	ldrh.w	r8, [r4, r6]
 80173ce:	fb15 f50a 	smulbb	r5, r5, sl
 80173d2:	9602      	str	r6, [sp, #8]
 80173d4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80173d8:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80173dc:	fb16 f60a 	smulbb	r6, r6, sl
 80173e0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80173e4:	fb0e ce02 	mla	lr, lr, r2, ip
 80173e8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80173ec:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80173f0:	fa1f fe8e 	uxth.w	lr, lr
 80173f4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80173f8:	fa5f f888 	uxtb.w	r8, r8
 80173fc:	fb0c 6c02 	mla	ip, ip, r2, r6
 8017400:	fb08 5502 	mla	r5, r8, r2, r5
 8017404:	f10e 0201 	add.w	r2, lr, #1
 8017408:	fa1f fc8c 	uxth.w	ip, ip
 801740c:	b2ad      	uxth	r5, r5
 801740e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8017412:	9a02      	ldr	r2, [sp, #8]
 8017414:	1c6e      	adds	r6, r5, #1
 8017416:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801741a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801741e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017422:	ea46 0e0e 	orr.w	lr, r6, lr
 8017426:	f10c 0601 	add.w	r6, ip, #1
 801742a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801742e:	0976      	lsrs	r6, r6, #5
 8017430:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017434:	ea4e 0e06 	orr.w	lr, lr, r6
 8017438:	f824 e002 	strh.w	lr, [r4, r2]
 801743c:	e7b3      	b.n	80173a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801743e:	f04f 0800 	mov.w	r8, #0
 8017442:	eba3 0208 	sub.w	r2, r3, r8
 8017446:	2a00      	cmp	r2, #0
 8017448:	f77f af35 	ble.w	80172b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801744c:	1402      	asrs	r2, r0, #16
 801744e:	9e00      	ldr	r6, [sp, #0]
 8017450:	140d      	asrs	r5, r1, #16
 8017452:	fb06 2505 	mla	r5, r6, r5, r2
 8017456:	9e01      	ldr	r6, [sp, #4]
 8017458:	086a      	lsrs	r2, r5, #1
 801745a:	07ed      	lsls	r5, r5, #31
 801745c:	5cb2      	ldrb	r2, [r6, r2]
 801745e:	bf54      	ite	pl
 8017460:	f002 020f 	andpl.w	r2, r2, #15
 8017464:	1112      	asrmi	r2, r2, #4
 8017466:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801746a:	b2d2      	uxtb	r2, r2
 801746c:	b1c2      	cbz	r2, 80174a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801746e:	9d04      	ldr	r5, [sp, #16]
 8017470:	436a      	muls	r2, r5
 8017472:	1c55      	adds	r5, r2, #1
 8017474:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8017478:	4d2d      	ldr	r5, [pc, #180]	; (8017530 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801747a:	1212      	asrs	r2, r2, #8
 801747c:	682e      	ldr	r6, [r5, #0]
 801747e:	2aff      	cmp	r2, #255	; 0xff
 8017480:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8017484:	d113      	bne.n	80174ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017486:	0972      	lsrs	r2, r6, #5
 8017488:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801748c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017490:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017494:	f025 0507 	bic.w	r5, r5, #7
 8017498:	4315      	orrs	r5, r2
 801749a:	4335      	orrs	r5, r6
 801749c:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80174a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80174a2:	f108 0801 	add.w	r8, r8, #1
 80174a6:	4410      	add	r0, r2
 80174a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80174aa:	4411      	add	r1, r2
 80174ac:	e7c9      	b.n	8017442 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80174ae:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80174b2:	fa1f fa82 	uxth.w	sl, r2
 80174b6:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80174ba:	43d2      	mvns	r2, r2
 80174bc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80174c0:	fb17 f70a 	smulbb	r7, r7, sl
 80174c4:	b2d2      	uxtb	r2, r2
 80174c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80174ca:	b2f6      	uxtb	r6, r6
 80174cc:	b2ed      	uxtb	r5, r5
 80174ce:	fb0c 7c02 	mla	ip, ip, r2, r7
 80174d2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80174d6:	fb16 f60a 	smulbb	r6, r6, sl
 80174da:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80174de:	fa1f fc8c 	uxth.w	ip, ip
 80174e2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80174e6:	fb15 f50a 	smulbb	r5, r5, sl
 80174ea:	fa5f fe8e 	uxtb.w	lr, lr
 80174ee:	fb0e 6602 	mla	r6, lr, r2, r6
 80174f2:	fb07 5702 	mla	r7, r7, r2, r5
 80174f6:	f10c 0201 	add.w	r2, ip, #1
 80174fa:	b2b6      	uxth	r6, r6
 80174fc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017500:	1c75      	adds	r5, r6, #1
 8017502:	b2bf      	uxth	r7, r7
 8017504:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017508:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801750c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017510:	ea45 0c0c 	orr.w	ip, r5, ip
 8017514:	1c7d      	adds	r5, r7, #1
 8017516:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801751a:	096d      	lsrs	r5, r5, #5
 801751c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017520:	ea4c 0c05 	orr.w	ip, ip, r5
 8017524:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8017528:	e7ba      	b.n	80174a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801752a:	b007      	add	sp, #28
 801752c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017530:	20032434 	.word	0x20032434

08017534 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017538:	b087      	sub	sp, #28
 801753a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801753e:	f8df 8308 	ldr.w	r8, [pc, #776]	; 8017848 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8017542:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017544:	9101      	str	r1, [sp, #4]
 8017546:	9205      	str	r2, [sp, #20]
 8017548:	6841      	ldr	r1, [r0, #4]
 801754a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801754e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8017552:	fb01 2404 	mla	r4, r1, r4, r2
 8017556:	6802      	ldr	r2, [r0, #0]
 8017558:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801755c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8017560:	3201      	adds	r2, #1
 8017562:	f022 0201 	bic.w	r2, r2, #1
 8017566:	9202      	str	r2, [sp, #8]
 8017568:	f8db 2000 	ldr.w	r2, [fp]
 801756c:	9203      	str	r2, [sp, #12]
 801756e:	9a01      	ldr	r2, [sp, #4]
 8017570:	2a00      	cmp	r2, #0
 8017572:	dc03      	bgt.n	801757c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8017574:	9a05      	ldr	r2, [sp, #20]
 8017576:	2a00      	cmp	r2, #0
 8017578:	f340 8162 	ble.w	8017840 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801757c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801757e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8017582:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017586:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017588:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801758c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017590:	2b00      	cmp	r3, #0
 8017592:	dd0e      	ble.n	80175b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017594:	1402      	asrs	r2, r0, #16
 8017596:	d405      	bmi.n	80175a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017598:	42ba      	cmp	r2, r7
 801759a:	da03      	bge.n	80175a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801759c:	140a      	asrs	r2, r1, #16
 801759e:	d401      	bmi.n	80175a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80175a0:	42b2      	cmp	r2, r6
 80175a2:	db07      	blt.n	80175b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80175a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80175a6:	3b01      	subs	r3, #1
 80175a8:	3402      	adds	r4, #2
 80175aa:	4410      	add	r0, r2
 80175ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80175ae:	4411      	add	r1, r2
 80175b0:	e7ee      	b.n	8017590 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80175b2:	d017      	beq.n	80175e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80175b4:	1e5a      	subs	r2, r3, #1
 80175b6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80175b8:	fb05 0502 	mla	r5, r5, r2, r0
 80175bc:	142d      	asrs	r5, r5, #16
 80175be:	d409      	bmi.n	80175d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80175c0:	42bd      	cmp	r5, r7
 80175c2:	da07      	bge.n	80175d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80175c4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80175c6:	fb05 1202 	mla	r2, r5, r2, r1
 80175ca:	1412      	asrs	r2, r2, #16
 80175cc:	d402      	bmi.n	80175d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80175ce:	42b2      	cmp	r2, r6
 80175d0:	f2c0 80c3 	blt.w	801775a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80175d4:	2500      	movs	r5, #0
 80175d6:	195a      	adds	r2, r3, r5
 80175d8:	2a00      	cmp	r2, #0
 80175da:	dc3f      	bgt.n	801765c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80175dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80175e0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80175e4:	9b01      	ldr	r3, [sp, #4]
 80175e6:	2b00      	cmp	r3, #0
 80175e8:	f340 812a 	ble.w	8017840 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80175ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80175f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80175f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80175f6:	eeb0 6a62 	vmov.f32	s12, s5
 80175fa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80175fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017602:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017606:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801760a:	eeb0 6a43 	vmov.f32	s12, s6
 801760e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017612:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8017616:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801761a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801761e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017622:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017626:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801762a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801762e:	ee12 2a90 	vmov	r2, s5
 8017632:	eef0 2a47 	vmov.f32	s5, s14
 8017636:	fb92 f3f3 	sdiv	r3, r2, r3
 801763a:	ee13 2a10 	vmov	r2, s6
 801763e:	9313      	str	r3, [sp, #76]	; 0x4c
 8017640:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017642:	eeb0 3a67 	vmov.f32	s6, s15
 8017646:	fb92 f3f3 	sdiv	r3, r2, r3
 801764a:	9314      	str	r3, [sp, #80]	; 0x50
 801764c:	9b01      	ldr	r3, [sp, #4]
 801764e:	9a05      	ldr	r2, [sp, #20]
 8017650:	3b01      	subs	r3, #1
 8017652:	9301      	str	r3, [sp, #4]
 8017654:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017656:	bf08      	it	eq
 8017658:	4613      	moveq	r3, r2
 801765a:	e788      	b.n	801756e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801765c:	1406      	asrs	r6, r0, #16
 801765e:	d42c      	bmi.n	80176ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017660:	f8db 2008 	ldr.w	r2, [fp, #8]
 8017664:	42b2      	cmp	r2, r6
 8017666:	dd28      	ble.n	80176ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017668:	140f      	asrs	r7, r1, #16
 801766a:	d426      	bmi.n	80176ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801766c:	f8db 200c 	ldr.w	r2, [fp, #12]
 8017670:	42ba      	cmp	r2, r7
 8017672:	dd22      	ble.n	80176ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017674:	9a02      	ldr	r2, [sp, #8]
 8017676:	fb07 6602 	mla	r6, r7, r2, r6
 801767a:	9f03      	ldr	r7, [sp, #12]
 801767c:	0872      	lsrs	r2, r6, #1
 801767e:	07f6      	lsls	r6, r6, #31
 8017680:	5cba      	ldrb	r2, [r7, r2]
 8017682:	bf54      	ite	pl
 8017684:	f002 020f 	andpl.w	r2, r2, #15
 8017688:	1112      	asrmi	r2, r2, #4
 801768a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801768e:	b2d2      	uxtb	r2, r2
 8017690:	2aff      	cmp	r2, #255	; 0xff
 8017692:	d118      	bne.n	80176c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8017694:	f06f 0601 	mvn.w	r6, #1
 8017698:	f8d8 2000 	ldr.w	r2, [r8]
 801769c:	fb06 f705 	mul.w	r7, r6, r5
 80176a0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80176a4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80176a8:	0956      	lsrs	r6, r2, #5
 80176aa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80176ae:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80176b2:	ea4c 0606 	orr.w	r6, ip, r6
 80176b6:	4316      	orrs	r6, r2
 80176b8:	53e6      	strh	r6, [r4, r7]
 80176ba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80176bc:	3d01      	subs	r5, #1
 80176be:	4410      	add	r0, r2
 80176c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80176c2:	4411      	add	r1, r2
 80176c4:	e787      	b.n	80175d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80176c6:	2a00      	cmp	r2, #0
 80176c8:	d0f7      	beq.n	80176ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80176ca:	f06f 0601 	mvn.w	r6, #1
 80176ce:	f8d8 c000 	ldr.w	ip, [r8]
 80176d2:	fa1f f982 	uxth.w	r9, r2
 80176d6:	43d2      	mvns	r2, r2
 80176d8:	436e      	muls	r6, r5
 80176da:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80176de:	b2d2      	uxtb	r2, r2
 80176e0:	f834 e006 	ldrh.w	lr, [r4, r6]
 80176e4:	fb1a fa09 	smulbb	sl, sl, r9
 80176e8:	9604      	str	r6, [sp, #16]
 80176ea:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80176ee:	ea4f 272e 	mov.w	r7, lr, asr #8
 80176f2:	fb16 f609 	smulbb	r6, r6, r9
 80176f6:	fa5f fc8c 	uxtb.w	ip, ip
 80176fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80176fe:	fb1c fc09 	smulbb	ip, ip, r9
 8017702:	fb07 6702 	mla	r7, r7, r2, r6
 8017706:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801770a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801770e:	b2bf      	uxth	r7, r7
 8017710:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017714:	fa5f fe8e 	uxtb.w	lr, lr
 8017718:	fb06 a602 	mla	r6, r6, r2, sl
 801771c:	fb0e cc02 	mla	ip, lr, r2, ip
 8017720:	1c7a      	adds	r2, r7, #1
 8017722:	b2b6      	uxth	r6, r6
 8017724:	fa1f fc8c 	uxth.w	ip, ip
 8017728:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801772c:	9a04      	ldr	r2, [sp, #16]
 801772e:	f10c 0a01 	add.w	sl, ip, #1
 8017732:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017736:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801773a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801773e:	ea4a 0707 	orr.w	r7, sl, r7
 8017742:	f106 0a01 	add.w	sl, r6, #1
 8017746:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801774a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801774e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017752:	ea47 070a 	orr.w	r7, r7, sl
 8017756:	52a7      	strh	r7, [r4, r2]
 8017758:	e7af      	b.n	80176ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801775a:	f04f 0e00 	mov.w	lr, #0
 801775e:	eba3 020e 	sub.w	r2, r3, lr
 8017762:	2a00      	cmp	r2, #0
 8017764:	f77f af3a 	ble.w	80175dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017768:	1402      	asrs	r2, r0, #16
 801776a:	9e02      	ldr	r6, [sp, #8]
 801776c:	140d      	asrs	r5, r1, #16
 801776e:	fb06 2505 	mla	r5, r6, r5, r2
 8017772:	9e03      	ldr	r6, [sp, #12]
 8017774:	086a      	lsrs	r2, r5, #1
 8017776:	07ed      	lsls	r5, r5, #31
 8017778:	5cb2      	ldrb	r2, [r6, r2]
 801777a:	bf54      	ite	pl
 801777c:	f002 020f 	andpl.w	r2, r2, #15
 8017780:	1112      	asrmi	r2, r2, #4
 8017782:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017786:	b2d2      	uxtb	r2, r2
 8017788:	2aff      	cmp	r2, #255	; 0xff
 801778a:	d115      	bne.n	80177b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801778c:	f8d8 5000 	ldr.w	r5, [r8]
 8017790:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8017794:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8017798:	096a      	lsrs	r2, r5, #5
 801779a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801779e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80177a2:	4332      	orrs	r2, r6
 80177a4:	432a      	orrs	r2, r5
 80177a6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80177aa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80177ac:	f10e 0e01 	add.w	lr, lr, #1
 80177b0:	4410      	add	r0, r2
 80177b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80177b4:	4411      	add	r1, r2
 80177b6:	e7d2      	b.n	801775e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80177b8:	2a00      	cmp	r2, #0
 80177ba:	d0f6      	beq.n	80177aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80177bc:	f8d8 7000 	ldr.w	r7, [r8]
 80177c0:	fa1f f982 	uxth.w	r9, r2
 80177c4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80177c8:	43d2      	mvns	r2, r2
 80177ca:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80177ce:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80177d2:	ea4f 262c 	mov.w	r6, ip, asr #8
 80177d6:	fb15 f509 	smulbb	r5, r5, r9
 80177da:	b2d2      	uxtb	r2, r2
 80177dc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80177e0:	b2ff      	uxtb	r7, r7
 80177e2:	fb1a fa09 	smulbb	sl, sl, r9
 80177e6:	fb06 5602 	mla	r6, r6, r2, r5
 80177ea:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80177ee:	fb17 f709 	smulbb	r7, r7, r9
 80177f2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80177f6:	b2b6      	uxth	r6, r6
 80177f8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80177fc:	fa5f fc8c 	uxtb.w	ip, ip
 8017800:	fb05 a502 	mla	r5, r5, r2, sl
 8017804:	fb0c 7702 	mla	r7, ip, r2, r7
 8017808:	1c72      	adds	r2, r6, #1
 801780a:	b2ad      	uxth	r5, r5
 801780c:	b2bf      	uxth	r7, r7
 801780e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8017812:	f107 0a01 	add.w	sl, r7, #1
 8017816:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801781a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801781e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017822:	ea4a 0606 	orr.w	r6, sl, r6
 8017826:	f105 0a01 	add.w	sl, r5, #1
 801782a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801782e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017832:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017836:	ea46 060a 	orr.w	r6, r6, sl
 801783a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801783e:	e7b4      	b.n	80177aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8017840:	b007      	add	sp, #28
 8017842:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017846:	bf00      	nop
 8017848:	20032434 	.word	0x20032434

0801784c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801784c:	4770      	bx	lr

0801784e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801784e:	4770      	bx	lr

08017850 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8017850:	4770      	bx	lr

08017852 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8017852:	4770      	bx	lr

08017854 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8017854:	4770      	bx	lr

08017856 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8017856:	4770      	bx	lr

08017858 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8017858:	4770      	bx	lr

0801785a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801785a:	4770      	bx	lr

0801785c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801785c:	4770      	bx	lr

0801785e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801785e:	4770      	bx	lr

08017860 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8017860:	4770      	bx	lr

08017862 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8017862:	4770      	bx	lr

08017864 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8017864:	4770      	bx	lr

08017866 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017866:	4770      	bx	lr

08017868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017868:	4770      	bx	lr

0801786a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801786a:	4770      	bx	lr

0801786c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801786c:	4770      	bx	lr

0801786e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801786e:	4770      	bx	lr

08017870 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8017870:	4770      	bx	lr

08017872 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017872:	4770      	bx	lr

08017874 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017874:	4770      	bx	lr

08017876 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8017876:	4770      	bx	lr

08017878 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8017878:	4770      	bx	lr

0801787a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801787a:	4770      	bx	lr

0801787c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801787c:	4770      	bx	lr

0801787e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801787e:	4770      	bx	lr

08017880 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8017880:	4770      	bx	lr

08017882 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8017882:	4770      	bx	lr

08017884 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8017884:	4770      	bx	lr

08017886 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8017886:	4770      	bx	lr

08017888 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8017888:	4770      	bx	lr

0801788a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801788a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801788e:	b088      	sub	sp, #32
 8017890:	4606      	mov	r6, r0
 8017892:	4688      	mov	r8, r1
 8017894:	4691      	mov	r9, r2
 8017896:	ac08      	add	r4, sp, #32
 8017898:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801789c:	4620      	mov	r0, r4
 801789e:	f7fd fc63 	bl	8015168 <_ZNK8touchgfx6Bitmap7getDataEv>
 80178a2:	6833      	ldr	r3, [r6, #0]
 80178a4:	4605      	mov	r5, r0
 80178a6:	4620      	mov	r0, r4
 80178a8:	699f      	ldr	r7, [r3, #24]
 80178aa:	f7fd fb71 	bl	8014f90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80178ae:	4682      	mov	sl, r0
 80178b0:	4620      	mov	r0, r4
 80178b2:	f7fd fba1 	bl	8014ff8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80178b6:	9500      	str	r5, [sp, #0]
 80178b8:	464b      	mov	r3, r9
 80178ba:	4642      	mov	r2, r8
 80178bc:	4631      	mov	r1, r6
 80178be:	e9cd a001 	strd	sl, r0, [sp, #4]
 80178c2:	a806      	add	r0, sp, #24
 80178c4:	47b8      	blx	r7
 80178c6:	4628      	mov	r0, r5
 80178c8:	b008      	add	sp, #32
 80178ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080178d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80178d0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80178d4:	2300      	movs	r3, #0
 80178d6:	9300      	str	r3, [sp, #0]
 80178d8:	4b3d      	ldr	r3, [pc, #244]	; (80179d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80178da:	781b      	ldrb	r3, [r3, #0]
 80178dc:	2b00      	cmp	r3, #0
 80178de:	d137      	bne.n	8017950 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80178e0:	4a3c      	ldr	r2, [pc, #240]	; (80179d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80178e2:	f9b2 2000 	ldrsh.w	r2, [r2]
 80178e6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80178ea:	2b00      	cmp	r3, #0
 80178ec:	d132      	bne.n	8017954 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80178ee:	4b3a      	ldr	r3, [pc, #232]	; (80179d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80178f0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80178f4:	ac02      	add	r4, sp, #8
 80178f6:	6808      	ldr	r0, [r1, #0]
 80178f8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80178fc:	ab02      	add	r3, sp, #8
 80178fe:	6849      	ldr	r1, [r1, #4]
 8017900:	4d36      	ldr	r5, [pc, #216]	; (80179dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8017902:	c303      	stmia	r3!, {r0, r1}
 8017904:	4669      	mov	r1, sp
 8017906:	4620      	mov	r0, r4
 8017908:	f7fa f986 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801790c:	4668      	mov	r0, sp
 801790e:	f7fa f95b 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017912:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017916:	f8bd 2000 	ldrh.w	r2, [sp]
 801791a:	462f      	mov	r7, r5
 801791c:	6828      	ldr	r0, [r5, #0]
 801791e:	4413      	add	r3, r2
 8017920:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017924:	f8ad 3008 	strh.w	r3, [sp, #8]
 8017928:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801792c:	4413      	add	r3, r2
 801792e:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017932:	6803      	ldr	r3, [r0, #0]
 8017934:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017936:	4798      	blx	r3
 8017938:	f010 0f01 	tst.w	r0, #1
 801793c:	d00c      	beq.n	8017958 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801793e:	6828      	ldr	r0, [r5, #0]
 8017940:	6803      	ldr	r3, [r0, #0]
 8017942:	e894 0006 	ldmia.w	r4, {r1, r2}
 8017946:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8017948:	4798      	blx	r3
 801794a:	b004      	add	sp, #16
 801794c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017950:	4a21      	ldr	r2, [pc, #132]	; (80179d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8017952:	e7c6      	b.n	80178e2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8017954:	4b1f      	ldr	r3, [pc, #124]	; (80179d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8017956:	e7cb      	b.n	80178f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8017958:	6838      	ldr	r0, [r7, #0]
 801795a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801795e:	6803      	ldr	r3, [r0, #0]
 8017960:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8017964:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8017968:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801796a:	4798      	blx	r3
 801796c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8017970:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017974:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8017978:	fb16 3602 	smlabb	r6, r6, r2, r3
 801797c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017980:	6838      	ldr	r0, [r7, #0]
 8017982:	6803      	ldr	r3, [r0, #0]
 8017984:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017986:	4798      	blx	r3
 8017988:	4a12      	ldr	r2, [pc, #72]	; (80179d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801798a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801798e:	8813      	ldrh	r3, [r2, #0]
 8017990:	4691      	mov	r9, r2
 8017992:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017996:	435d      	muls	r5, r3
 8017998:	fb03 1404 	mla	r4, r3, r4, r1
 801799c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80179a0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80179a4:	6838      	ldr	r0, [r7, #0]
 80179a6:	42ac      	cmp	r4, r5
 80179a8:	6803      	ldr	r3, [r0, #0]
 80179aa:	d20e      	bcs.n	80179ca <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80179ac:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 80179b0:	4632      	mov	r2, r6
 80179b2:	4643      	mov	r3, r8
 80179b4:	4621      	mov	r1, r4
 80179b6:	47d0      	blx	sl
 80179b8:	f8b9 3000 	ldrh.w	r3, [r9]
 80179bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80179c0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80179c4:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80179c8:	e7ec      	b.n	80179a4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80179ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80179cc:	4798      	blx	r3
 80179ce:	e7bc      	b.n	801794a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80179d0:	20032424 	.word	0x20032424
 80179d4:	20032426 	.word	0x20032426
 80179d8:	20032428 	.word	0x20032428
 80179dc:	2003242c 	.word	0x2003242c

080179e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80179e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179e4:	b08b      	sub	sp, #44	; 0x2c
 80179e6:	460f      	mov	r7, r1
 80179e8:	4616      	mov	r6, r2
 80179ea:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 80179ee:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80179f2:	f1bb 0f00 	cmp.w	fp, #0
 80179f6:	d04a      	beq.n	8017a8e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80179f8:	6810      	ldr	r0, [r2, #0]
 80179fa:	ad06      	add	r5, sp, #24
 80179fc:	6851      	ldr	r1, [r2, #4]
 80179fe:	c503      	stmia	r5!, {r0, r1}
 8017a00:	6818      	ldr	r0, [r3, #0]
 8017a02:	ad08      	add	r5, sp, #32
 8017a04:	6859      	ldr	r1, [r3, #4]
 8017a06:	c503      	stmia	r5!, {r0, r1}
 8017a08:	a806      	add	r0, sp, #24
 8017a0a:	f7fa f8dd 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a0e:	4631      	mov	r1, r6
 8017a10:	a808      	add	r0, sp, #32
 8017a12:	f7fa f901 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017a16:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8017a1a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8017a1e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8017a22:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8017a26:	fb16 2103 	smlabb	r1, r6, r3, r2
 8017a2a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8017a2e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8017a32:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8017a36:	4f5f      	ldr	r7, [pc, #380]	; (8017bb4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017a38:	440a      	add	r2, r1
 8017a3a:	6838      	ldr	r0, [r7, #0]
 8017a3c:	46b9      	mov	r9, r7
 8017a3e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8017a42:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8017a46:	4413      	add	r3, r2
 8017a48:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8017a4c:	6803      	ldr	r3, [r0, #0]
 8017a4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017a50:	4798      	blx	r3
 8017a52:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017a56:	d11d      	bne.n	8017a94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8017a58:	b9fc      	cbnz	r4, 8017a9a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8017a5a:	f010 0f01 	tst.w	r0, #1
 8017a5e:	d01c      	beq.n	8017a9a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8017a60:	f8d9 0000 	ldr.w	r0, [r9]
 8017a64:	2700      	movs	r7, #0
 8017a66:	b2ad      	uxth	r5, r5
 8017a68:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8017a6c:	6801      	ldr	r1, [r0, #0]
 8017a6e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8017a72:	f8cd b00c 	str.w	fp, [sp, #12]
 8017a76:	9501      	str	r5, [sp, #4]
 8017a78:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8017a7c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8017a80:	9402      	str	r4, [sp, #8]
 8017a82:	fa1f f488 	uxth.w	r4, r8
 8017a86:	9400      	str	r4, [sp, #0]
 8017a88:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8017a8a:	4631      	mov	r1, r6
 8017a8c:	47a0      	blx	r4
 8017a8e:	b00b      	add	sp, #44	; 0x2c
 8017a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a94:	f010 0f04 	tst.w	r0, #4
 8017a98:	e7e1      	b.n	8017a5e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8017a9a:	f8d9 0000 	ldr.w	r0, [r9]
 8017a9e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8017aa2:	6803      	ldr	r3, [r0, #0]
 8017aa4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017aa6:	4798      	blx	r3
 8017aa8:	4b43      	ldr	r3, [pc, #268]	; (8017bb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8017aaa:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8017aae:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017ab2:	881a      	ldrh	r2, [r3, #0]
 8017ab4:	469a      	mov	sl, r3
 8017ab6:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8017aba:	fb05 f502 	mul.w	r5, r5, r2
 8017abe:	fb02 1404 	mla	r4, r2, r4, r1
 8017ac2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017ac6:	d059      	beq.n	8017b7c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8017ac8:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8017acc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017ad0:	fa1f f28b 	uxth.w	r2, fp
 8017ad4:	469e      	mov	lr, r3
 8017ad6:	fa1f f989 	uxth.w	r9, r9
 8017ada:	42ac      	cmp	r4, r5
 8017adc:	d264      	bcs.n	8017ba8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8017ade:	eb04 0a07 	add.w	sl, r4, r7
 8017ae2:	4554      	cmp	r4, sl
 8017ae4:	d23d      	bcs.n	8017b62 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8017ae6:	8821      	ldrh	r1, [r4, #0]
 8017ae8:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017aec:	1208      	asrs	r0, r1, #8
 8017aee:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017af2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017af6:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8017afa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017afe:	00c9      	lsls	r1, r1, #3
 8017b00:	fb10 f009 	smulbb	r0, r0, r9
 8017b04:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017b08:	b2c9      	uxtb	r1, r1
 8017b0a:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017b0e:	10d8      	asrs	r0, r3, #3
 8017b10:	fb1b fb09 	smulbb	fp, fp, r9
 8017b14:	00db      	lsls	r3, r3, #3
 8017b16:	fa1f fc8c 	uxth.w	ip, ip
 8017b1a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017b1e:	fb11 f109 	smulbb	r1, r1, r9
 8017b22:	b2db      	uxtb	r3, r3
 8017b24:	fb00 b002 	mla	r0, r0, r2, fp
 8017b28:	f10c 0b01 	add.w	fp, ip, #1
 8017b2c:	fb03 1302 	mla	r3, r3, r2, r1
 8017b30:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8017b34:	b29b      	uxth	r3, r3
 8017b36:	b280      	uxth	r0, r0
 8017b38:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8017b3c:	f103 0c01 	add.w	ip, r3, #1
 8017b40:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017b44:	1c43      	adds	r3, r0, #1
 8017b46:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017b4a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017b4e:	0940      	lsrs	r0, r0, #5
 8017b50:	ea4c 0c0b 	orr.w	ip, ip, fp
 8017b54:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017b58:	ea4c 0c00 	orr.w	ip, ip, r0
 8017b5c:	f824 cb02 	strh.w	ip, [r4], #2
 8017b60:	e7bf      	b.n	8017ae2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8017b62:	f8be 3000 	ldrh.w	r3, [lr]
 8017b66:	eba3 0308 	sub.w	r3, r3, r8
 8017b6a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017b6e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8017b72:	eba3 0308 	sub.w	r3, r3, r8
 8017b76:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017b7a:	e7ae      	b.n	8017ada <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8017b7c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017b80:	f8d9 0000 	ldr.w	r0, [r9]
 8017b84:	42ac      	cmp	r4, r5
 8017b86:	6803      	ldr	r3, [r0, #0]
 8017b88:	d20e      	bcs.n	8017ba8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8017b8a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8017b8e:	4632      	mov	r2, r6
 8017b90:	463b      	mov	r3, r7
 8017b92:	4621      	mov	r1, r4
 8017b94:	47c0      	blx	r8
 8017b96:	f8ba 3000 	ldrh.w	r3, [sl]
 8017b9a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017b9e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8017ba2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017ba6:	e7eb      	b.n	8017b80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8017ba8:	4b02      	ldr	r3, [pc, #8]	; (8017bb4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017baa:	6818      	ldr	r0, [r3, #0]
 8017bac:	6803      	ldr	r3, [r0, #0]
 8017bae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017bb0:	4798      	blx	r3
 8017bb2:	e76c      	b.n	8017a8e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8017bb4:	2003242c 	.word	0x2003242c
 8017bb8:	20032426 	.word	0x20032426

08017bbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8017bbc:	b510      	push	{r4, lr}
 8017bbe:	4604      	mov	r4, r0
 8017bc0:	2104      	movs	r1, #4
 8017bc2:	f00a fe2e 	bl	8022822 <_ZdlPvj>
 8017bc6:	4620      	mov	r0, r4
 8017bc8:	bd10      	pop	{r4, pc}

08017bca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8017bca:	b510      	push	{r4, lr}
 8017bcc:	4604      	mov	r4, r0
 8017bce:	2104      	movs	r1, #4
 8017bd0:	f00a fe27 	bl	8022822 <_ZdlPvj>
 8017bd4:	4620      	mov	r0, r4
 8017bd6:	bd10      	pop	{r4, pc}

08017bd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8017bd8:	b510      	push	{r4, lr}
 8017bda:	4604      	mov	r4, r0
 8017bdc:	f640 0144 	movw	r1, #2116	; 0x844
 8017be0:	f00a fe1f 	bl	8022822 <_ZdlPvj>
 8017be4:	4620      	mov	r0, r4
 8017be6:	bd10      	pop	{r4, pc}

08017be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017be8:	b510      	push	{r4, lr}
 8017bea:	4604      	mov	r4, r0
 8017bec:	2104      	movs	r1, #4
 8017bee:	f00a fe18 	bl	8022822 <_ZdlPvj>
 8017bf2:	4620      	mov	r0, r4
 8017bf4:	bd10      	pop	{r4, pc}

08017bf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017bf6:	b510      	push	{r4, lr}
 8017bf8:	4604      	mov	r4, r0
 8017bfa:	2104      	movs	r1, #4
 8017bfc:	f00a fe11 	bl	8022822 <_ZdlPvj>
 8017c00:	4620      	mov	r0, r4
 8017c02:	bd10      	pop	{r4, pc}

08017c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017c04:	b510      	push	{r4, lr}
 8017c06:	4604      	mov	r4, r0
 8017c08:	2104      	movs	r1, #4
 8017c0a:	f00a fe0a 	bl	8022822 <_ZdlPvj>
 8017c0e:	4620      	mov	r0, r4
 8017c10:	bd10      	pop	{r4, pc}

08017c12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017c12:	b510      	push	{r4, lr}
 8017c14:	4604      	mov	r4, r0
 8017c16:	2104      	movs	r1, #4
 8017c18:	f00a fe03 	bl	8022822 <_ZdlPvj>
 8017c1c:	4620      	mov	r0, r4
 8017c1e:	bd10      	pop	{r4, pc}

08017c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017c20:	b510      	push	{r4, lr}
 8017c22:	4604      	mov	r4, r0
 8017c24:	2104      	movs	r1, #4
 8017c26:	f00a fdfc 	bl	8022822 <_ZdlPvj>
 8017c2a:	4620      	mov	r0, r4
 8017c2c:	bd10      	pop	{r4, pc}

08017c2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8017c2e:	b510      	push	{r4, lr}
 8017c30:	4604      	mov	r4, r0
 8017c32:	2104      	movs	r1, #4
 8017c34:	f00a fdf5 	bl	8022822 <_ZdlPvj>
 8017c38:	4620      	mov	r0, r4
 8017c3a:	bd10      	pop	{r4, pc}

08017c3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017c3c:	b510      	push	{r4, lr}
 8017c3e:	4604      	mov	r4, r0
 8017c40:	2104      	movs	r1, #4
 8017c42:	f00a fdee 	bl	8022822 <_ZdlPvj>
 8017c46:	4620      	mov	r0, r4
 8017c48:	bd10      	pop	{r4, pc}

08017c4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017c4a:	b510      	push	{r4, lr}
 8017c4c:	4604      	mov	r4, r0
 8017c4e:	2104      	movs	r1, #4
 8017c50:	f00a fde7 	bl	8022822 <_ZdlPvj>
 8017c54:	4620      	mov	r0, r4
 8017c56:	bd10      	pop	{r4, pc}

08017c58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017c58:	b510      	push	{r4, lr}
 8017c5a:	4604      	mov	r4, r0
 8017c5c:	2104      	movs	r1, #4
 8017c5e:	f00a fde0 	bl	8022822 <_ZdlPvj>
 8017c62:	4620      	mov	r0, r4
 8017c64:	bd10      	pop	{r4, pc}

08017c66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017c66:	b510      	push	{r4, lr}
 8017c68:	4604      	mov	r4, r0
 8017c6a:	2104      	movs	r1, #4
 8017c6c:	f00a fdd9 	bl	8022822 <_ZdlPvj>
 8017c70:	4620      	mov	r0, r4
 8017c72:	bd10      	pop	{r4, pc}

08017c74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017c74:	b510      	push	{r4, lr}
 8017c76:	4604      	mov	r4, r0
 8017c78:	2104      	movs	r1, #4
 8017c7a:	f00a fdd2 	bl	8022822 <_ZdlPvj>
 8017c7e:	4620      	mov	r0, r4
 8017c80:	bd10      	pop	{r4, pc}

08017c82 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017c82:	b510      	push	{r4, lr}
 8017c84:	4604      	mov	r4, r0
 8017c86:	2104      	movs	r1, #4
 8017c88:	f00a fdcb 	bl	8022822 <_ZdlPvj>
 8017c8c:	4620      	mov	r0, r4
 8017c8e:	bd10      	pop	{r4, pc}

08017c90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017c90:	b510      	push	{r4, lr}
 8017c92:	4604      	mov	r4, r0
 8017c94:	2104      	movs	r1, #4
 8017c96:	f00a fdc4 	bl	8022822 <_ZdlPvj>
 8017c9a:	4620      	mov	r0, r4
 8017c9c:	bd10      	pop	{r4, pc}

08017c9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017c9e:	b510      	push	{r4, lr}
 8017ca0:	4604      	mov	r4, r0
 8017ca2:	2104      	movs	r1, #4
 8017ca4:	f00a fdbd 	bl	8022822 <_ZdlPvj>
 8017ca8:	4620      	mov	r0, r4
 8017caa:	bd10      	pop	{r4, pc}

08017cac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017cac:	b510      	push	{r4, lr}
 8017cae:	4604      	mov	r4, r0
 8017cb0:	2104      	movs	r1, #4
 8017cb2:	f00a fdb6 	bl	8022822 <_ZdlPvj>
 8017cb6:	4620      	mov	r0, r4
 8017cb8:	bd10      	pop	{r4, pc}

08017cba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017cba:	b510      	push	{r4, lr}
 8017cbc:	4604      	mov	r4, r0
 8017cbe:	2104      	movs	r1, #4
 8017cc0:	f00a fdaf 	bl	8022822 <_ZdlPvj>
 8017cc4:	4620      	mov	r0, r4
 8017cc6:	bd10      	pop	{r4, pc}

08017cc8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017cc8:	b510      	push	{r4, lr}
 8017cca:	4604      	mov	r4, r0
 8017ccc:	2104      	movs	r1, #4
 8017cce:	f00a fda8 	bl	8022822 <_ZdlPvj>
 8017cd2:	4620      	mov	r0, r4
 8017cd4:	bd10      	pop	{r4, pc}

08017cd6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017cd6:	b510      	push	{r4, lr}
 8017cd8:	4604      	mov	r4, r0
 8017cda:	2104      	movs	r1, #4
 8017cdc:	f00a fda1 	bl	8022822 <_ZdlPvj>
 8017ce0:	4620      	mov	r0, r4
 8017ce2:	bd10      	pop	{r4, pc}

08017ce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017ce4:	b510      	push	{r4, lr}
 8017ce6:	4604      	mov	r4, r0
 8017ce8:	2104      	movs	r1, #4
 8017cea:	f00a fd9a 	bl	8022822 <_ZdlPvj>
 8017cee:	4620      	mov	r0, r4
 8017cf0:	bd10      	pop	{r4, pc}

08017cf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017cf2:	b510      	push	{r4, lr}
 8017cf4:	4604      	mov	r4, r0
 8017cf6:	2104      	movs	r1, #4
 8017cf8:	f00a fd93 	bl	8022822 <_ZdlPvj>
 8017cfc:	4620      	mov	r0, r4
 8017cfe:	bd10      	pop	{r4, pc}

08017d00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017d00:	b510      	push	{r4, lr}
 8017d02:	4604      	mov	r4, r0
 8017d04:	2104      	movs	r1, #4
 8017d06:	f00a fd8c 	bl	8022822 <_ZdlPvj>
 8017d0a:	4620      	mov	r0, r4
 8017d0c:	bd10      	pop	{r4, pc}

08017d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017d0e:	b510      	push	{r4, lr}
 8017d10:	4604      	mov	r4, r0
 8017d12:	2104      	movs	r1, #4
 8017d14:	f00a fd85 	bl	8022822 <_ZdlPvj>
 8017d18:	4620      	mov	r0, r4
 8017d1a:	bd10      	pop	{r4, pc}

08017d1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017d1c:	b510      	push	{r4, lr}
 8017d1e:	4604      	mov	r4, r0
 8017d20:	2104      	movs	r1, #4
 8017d22:	f00a fd7e 	bl	8022822 <_ZdlPvj>
 8017d26:	4620      	mov	r0, r4
 8017d28:	bd10      	pop	{r4, pc}

08017d2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017d2a:	b510      	push	{r4, lr}
 8017d2c:	4604      	mov	r4, r0
 8017d2e:	2104      	movs	r1, #4
 8017d30:	f00a fd77 	bl	8022822 <_ZdlPvj>
 8017d34:	4620      	mov	r0, r4
 8017d36:	bd10      	pop	{r4, pc}

08017d38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017d38:	b510      	push	{r4, lr}
 8017d3a:	4604      	mov	r4, r0
 8017d3c:	2104      	movs	r1, #4
 8017d3e:	f00a fd70 	bl	8022822 <_ZdlPvj>
 8017d42:	4620      	mov	r0, r4
 8017d44:	bd10      	pop	{r4, pc}

08017d46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017d46:	b510      	push	{r4, lr}
 8017d48:	4604      	mov	r4, r0
 8017d4a:	2104      	movs	r1, #4
 8017d4c:	f00a fd69 	bl	8022822 <_ZdlPvj>
 8017d50:	4620      	mov	r0, r4
 8017d52:	bd10      	pop	{r4, pc}

08017d54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8017d54:	b510      	push	{r4, lr}
 8017d56:	4604      	mov	r4, r0
 8017d58:	2104      	movs	r1, #4
 8017d5a:	f00a fd62 	bl	8022822 <_ZdlPvj>
 8017d5e:	4620      	mov	r0, r4
 8017d60:	bd10      	pop	{r4, pc}

08017d62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8017d62:	b510      	push	{r4, lr}
 8017d64:	4604      	mov	r4, r0
 8017d66:	2104      	movs	r1, #4
 8017d68:	f00a fd5b 	bl	8022822 <_ZdlPvj>
 8017d6c:	4620      	mov	r0, r4
 8017d6e:	bd10      	pop	{r4, pc}

08017d70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8017d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d74:	b08f      	sub	sp, #60	; 0x3c
 8017d76:	461c      	mov	r4, r3
 8017d78:	9205      	str	r2, [sp, #20]
 8017d7a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017d7e:	9100      	str	r1, [sp, #0]
 8017d80:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017d82:	9201      	str	r2, [sp, #4]
 8017d84:	2a00      	cmp	r2, #0
 8017d86:	f000 8116 	beq.w	8017fb6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 8017d8a:	6820      	ldr	r0, [r4, #0]
 8017d8c:	aa0a      	add	r2, sp, #40	; 0x28
 8017d8e:	6861      	ldr	r1, [r4, #4]
 8017d90:	c203      	stmia	r2!, {r0, r1}
 8017d92:	6818      	ldr	r0, [r3, #0]
 8017d94:	aa0c      	add	r2, sp, #48	; 0x30
 8017d96:	6859      	ldr	r1, [r3, #4]
 8017d98:	c203      	stmia	r2!, {r0, r1}
 8017d9a:	a80a      	add	r0, sp, #40	; 0x28
 8017d9c:	f7f9 ff14 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017da0:	4621      	mov	r1, r4
 8017da2:	a80c      	add	r0, sp, #48	; 0x30
 8017da4:	f7f9 ff38 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017da8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017dac:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8017db0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8017db4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8017db8:	bfdb      	ittet	le
 8017dba:	b2b3      	uxthle	r3, r6
 8017dbc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8017dc0:	2301      	movgt	r3, #1
 8017dc2:	fb92 f3f3 	sdivle	r3, r2, r3
 8017dc6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8017dca:	441d      	add	r5, r3
 8017dcc:	fb92 f1f3 	sdiv	r1, r2, r3
 8017dd0:	fa1f fc81 	uxth.w	ip, r1
 8017dd4:	3d01      	subs	r5, #1
 8017dd6:	fb0c 2413 	mls	r4, ip, r3, r2
 8017dda:	4661      	mov	r1, ip
 8017ddc:	fb14 f406 	smulbb	r4, r4, r6
 8017de0:	4404      	add	r4, r0
 8017de2:	fb95 f5f3 	sdiv	r5, r5, r3
 8017de6:	b2a4      	uxth	r4, r4
 8017de8:	b131      	cbz	r1, 8017df8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 8017dea:	9b05      	ldr	r3, [sp, #20]
 8017dec:	9900      	ldr	r1, [sp, #0]
 8017dee:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8017df2:	ba1b      	rev	r3, r3
 8017df4:	4419      	add	r1, r3
 8017df6:	9100      	str	r1, [sp, #0]
 8017df8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8017dfc:	b2ad      	uxth	r5, r5
 8017dfe:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8017e02:	4418      	add	r0, r3
 8017e04:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8017e08:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8017e0c:	00ad      	lsls	r5, r5, #2
 8017e0e:	441a      	add	r2, r3
 8017e10:	4b6a      	ldr	r3, [pc, #424]	; (8017fbc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8017e12:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8017e16:	6818      	ldr	r0, [r3, #0]
 8017e18:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8017e1c:	6803      	ldr	r3, [r0, #0]
 8017e1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017e20:	4798      	blx	r3
 8017e22:	4967      	ldr	r1, [pc, #412]	; (8017fc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8017e24:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8017e28:	2c00      	cmp	r4, #0
 8017e2a:	880b      	ldrh	r3, [r1, #0]
 8017e2c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8017e30:	bf0c      	ite	eq
 8017e32:	46c6      	moveq	lr, r8
 8017e34:	f04f 0e00 	movne.w	lr, #0
 8017e38:	9109      	str	r1, [sp, #36]	; 0x24
 8017e3a:	fb03 c202 	mla	r2, r3, r2, ip
 8017e3e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017e42:	4373      	muls	r3, r6
 8017e44:	fa1f fe8e 	uxth.w	lr, lr
 8017e48:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017e4c:	9103      	str	r1, [sp, #12]
 8017e4e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017e52:	9306      	str	r3, [sp, #24]
 8017e54:	1d2b      	adds	r3, r5, #4
 8017e56:	9307      	str	r3, [sp, #28]
 8017e58:	9b01      	ldr	r3, [sp, #4]
 8017e5a:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 8017e5e:	2300      	movs	r3, #0
 8017e60:	b292      	uxth	r2, r2
 8017e62:	9302      	str	r3, [sp, #8]
 8017e64:	9204      	str	r2, [sp, #16]
 8017e66:	9a06      	ldr	r2, [sp, #24]
 8017e68:	4282      	cmp	r2, r0
 8017e6a:	f240 809f 	bls.w	8017fac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 8017e6e:	b963      	cbnz	r3, 8017e8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8017e70:	9b00      	ldr	r3, [sp, #0]
 8017e72:	781a      	ldrb	r2, [r3, #0]
 8017e74:	0993      	lsrs	r3, r2, #6
 8017e76:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8017e7a:	9202      	str	r2, [sp, #8]
 8017e7c:	1e5a      	subs	r2, r3, #1
 8017e7e:	2a02      	cmp	r2, #2
 8017e80:	d815      	bhi.n	8017eae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8017e82:	9a00      	ldr	r2, [sp, #0]
 8017e84:	b29b      	uxth	r3, r3
 8017e86:	3201      	adds	r2, #1
 8017e88:	9200      	str	r2, [sp, #0]
 8017e8a:	b1b4      	cbz	r4, 8017eba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 8017e8c:	429c      	cmp	r4, r3
 8017e8e:	bf91      	iteee	ls
 8017e90:	1b1c      	subls	r4, r3, r4
 8017e92:	1ae4      	subhi	r4, r4, r3
 8017e94:	4671      	movhi	r1, lr
 8017e96:	f04f 0a00 	movhi.w	sl, #0
 8017e9a:	bf9b      	ittet	ls
 8017e9c:	fa1f fa84 	uxthls.w	sl, r4
 8017ea0:	2400      	movls	r4, #0
 8017ea2:	b2a4      	uxthhi	r4, r4
 8017ea4:	fa1f f188 	uxthls.w	r1, r8
 8017ea8:	4653      	mov	r3, sl
 8017eaa:	468e      	mov	lr, r1
 8017eac:	e7db      	b.n	8017e66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 8017eae:	9a00      	ldr	r2, [sp, #0]
 8017eb0:	9b00      	ldr	r3, [sp, #0]
 8017eb2:	3202      	adds	r2, #2
 8017eb4:	785b      	ldrb	r3, [r3, #1]
 8017eb6:	9200      	str	r2, [sp, #0]
 8017eb8:	e7e7      	b.n	8017e8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8017eba:	2202      	movs	r2, #2
 8017ebc:	9907      	ldr	r1, [sp, #28]
 8017ebe:	4573      	cmp	r3, lr
 8017ec0:	4615      	mov	r5, r2
 8017ec2:	9a02      	ldr	r2, [sp, #8]
 8017ec4:	bf24      	itt	cs
 8017ec6:	eba3 0a0e 	subcs.w	sl, r3, lr
 8017eca:	46f1      	movcs	r9, lr
 8017ecc:	fb15 1202 	smlabb	r2, r5, r2, r1
 8017ed0:	9905      	ldr	r1, [sp, #20]
 8017ed2:	bf34      	ite	cc
 8017ed4:	4699      	movcc	r9, r3
 8017ed6:	fa1f fa8a 	uxthcs.w	sl, sl
 8017eda:	f831 c002 	ldrh.w	ip, [r1, r2]
 8017ede:	bf38      	it	cc
 8017ee0:	ebae 0103 	subcc.w	r1, lr, r3
 8017ee4:	9a01      	ldr	r2, [sp, #4]
 8017ee6:	bf2e      	itee	cs
 8017ee8:	4621      	movcs	r1, r4
 8017eea:	b289      	uxthcc	r1, r1
 8017eec:	46a2      	movcc	sl, r4
 8017eee:	2aff      	cmp	r2, #255	; 0xff
 8017ef0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017ef4:	d105      	bne.n	8017f02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 8017ef6:	4481      	add	r9, r0
 8017ef8:	4581      	cmp	r9, r0
 8017efa:	d045      	beq.n	8017f88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8017efc:	f820 cb02 	strh.w	ip, [r0], #2
 8017f00:	e7fa      	b.n	8017ef8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 8017f02:	ea4f 222c 	mov.w	r2, ip, asr #8
 8017f06:	9d03      	ldr	r5, [sp, #12]
 8017f08:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8017f0c:	4481      	add	r9, r0
 8017f0e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017f12:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017f16:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017f1a:	fa5f fc8c 	uxtb.w	ip, ip
 8017f1e:	436a      	muls	r2, r5
 8017f20:	fb0b fb05 	mul.w	fp, fp, r5
 8017f24:	fb0c fc05 	mul.w	ip, ip, r5
 8017f28:	9208      	str	r2, [sp, #32]
 8017f2a:	4581      	cmp	r9, r0
 8017f2c:	d02c      	beq.n	8017f88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8017f2e:	8802      	ldrh	r2, [r0, #0]
 8017f30:	9d04      	ldr	r5, [sp, #16]
 8017f32:	1216      	asrs	r6, r2, #8
 8017f34:	9f04      	ldr	r7, [sp, #16]
 8017f36:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017f3a:	fb16 f605 	smulbb	r6, r6, r5
 8017f3e:	9d08      	ldr	r5, [sp, #32]
 8017f40:	442e      	add	r6, r5
 8017f42:	10d5      	asrs	r5, r2, #3
 8017f44:	00d2      	lsls	r2, r2, #3
 8017f46:	b2b6      	uxth	r6, r6
 8017f48:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017f4c:	b2d2      	uxtb	r2, r2
 8017f4e:	fb15 f507 	smulbb	r5, r5, r7
 8017f52:	fb12 f207 	smulbb	r2, r2, r7
 8017f56:	1c77      	adds	r7, r6, #1
 8017f58:	445d      	add	r5, fp
 8017f5a:	4462      	add	r2, ip
 8017f5c:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8017f60:	b2ad      	uxth	r5, r5
 8017f62:	b292      	uxth	r2, r2
 8017f64:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8017f68:	1c57      	adds	r7, r2, #1
 8017f6a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8017f6e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017f72:	4316      	orrs	r6, r2
 8017f74:	1c6a      	adds	r2, r5, #1
 8017f76:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017f7a:	096d      	lsrs	r5, r5, #5
 8017f7c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017f80:	432e      	orrs	r6, r5
 8017f82:	f820 6b02 	strh.w	r6, [r0], #2
 8017f86:	e7d0      	b.n	8017f2a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 8017f88:	4573      	cmp	r3, lr
 8017f8a:	d38d      	bcc.n	8017ea8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8017f8c:	fa1f f188 	uxth.w	r1, r8
 8017f90:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8017f94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017f96:	1a64      	subs	r4, r4, r1
 8017f98:	881b      	ldrh	r3, [r3, #0]
 8017f9a:	b2a4      	uxth	r4, r4
 8017f9c:	eba3 0308 	sub.w	r3, r3, r8
 8017fa0:	2c00      	cmp	r4, #0
 8017fa2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017fa6:	bf18      	it	ne
 8017fa8:	2100      	movne	r1, #0
 8017faa:	e77d      	b.n	8017ea8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8017fac:	4b03      	ldr	r3, [pc, #12]	; (8017fbc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8017fae:	6818      	ldr	r0, [r3, #0]
 8017fb0:	6803      	ldr	r3, [r0, #0]
 8017fb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017fb4:	4798      	blx	r3
 8017fb6:	b00f      	add	sp, #60	; 0x3c
 8017fb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017fbc:	2003242c 	.word	0x2003242c
 8017fc0:	20032426 	.word	0x20032426

08017fc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8017fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017fc8:	b09f      	sub	sp, #124	; 0x7c
 8017fca:	461d      	mov	r5, r3
 8017fcc:	4604      	mov	r4, r0
 8017fce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017fd0:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8017fd4:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8017fd8:	9209      	str	r2, [sp, #36]	; 0x24
 8017fda:	2a00      	cmp	r2, #0
 8017fdc:	f000 81ed 	beq.w	80183ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 8017fe0:	6828      	ldr	r0, [r5, #0]
 8017fe2:	aa1a      	add	r2, sp, #104	; 0x68
 8017fe4:	6869      	ldr	r1, [r5, #4]
 8017fe6:	c203      	stmia	r2!, {r0, r1}
 8017fe8:	6818      	ldr	r0, [r3, #0]
 8017fea:	aa1c      	add	r2, sp, #112	; 0x70
 8017fec:	6859      	ldr	r1, [r3, #4]
 8017fee:	c203      	stmia	r2!, {r0, r1}
 8017ff0:	a81a      	add	r0, sp, #104	; 0x68
 8017ff2:	f7f9 fde9 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017ff6:	4629      	mov	r1, r5
 8017ff8:	a81c      	add	r0, sp, #112	; 0x70
 8017ffa:	f7f9 fe0d 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017ffe:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8018002:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 8018006:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801800a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801800e:	bfdb      	ittet	le
 8018010:	b29a      	uxthle	r2, r3
 8018012:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8018016:	2201      	movgt	r2, #1
 8018018:	fb91 f2f2 	sdivle	r2, r1, r2
 801801c:	9202      	str	r2, [sp, #8]
 801801e:	9802      	ldr	r0, [sp, #8]
 8018020:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8018024:	9902      	ldr	r1, [sp, #8]
 8018026:	fb92 f0f0 	sdiv	r0, r2, r0
 801802a:	b280      	uxth	r0, r0
 801802c:	4488      	add	r8, r1
 801802e:	9010      	str	r0, [sp, #64]	; 0x40
 8018030:	f108 38ff 	add.w	r8, r8, #4294967295
 8018034:	9802      	ldr	r0, [sp, #8]
 8018036:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018038:	fb05 2510 	mls	r5, r5, r0, r2
 801803c:	fb98 f8f1 	sdiv	r8, r8, r1
 8018040:	fb15 f503 	smulbb	r5, r5, r3
 8018044:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8018048:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801804c:	f108 0801 	add.w	r8, r8, #1
 8018050:	440d      	add	r5, r1
 8018052:	4419      	add	r1, r3
 8018054:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8018058:	fa1f f888 	uxth.w	r8, r8
 801805c:	441a      	add	r2, r3
 801805e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8018062:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8018066:	b2ad      	uxth	r5, r5
 8018068:	9304      	str	r3, [sp, #16]
 801806a:	4b94      	ldr	r3, [pc, #592]	; (80182bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801806c:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8018070:	6818      	ldr	r0, [r3, #0]
 8018072:	6803      	ldr	r3, [r0, #0]
 8018074:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018076:	4798      	blx	r3
 8018078:	4b91      	ldr	r3, [pc, #580]	; (80182c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801807a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801807e:	2d00      	cmp	r5, #0
 8018080:	881a      	ldrh	r2, [r3, #0]
 8018082:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8018086:	fb02 f606 	mul.w	r6, r2, r6
 801808a:	fb02 7101 	mla	r1, r2, r1, r7
 801808e:	9318      	str	r3, [sp, #96]	; 0x60
 8018090:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018094:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8018098:	f04f 0100 	mov.w	r1, #0
 801809c:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 80180a0:	930f      	str	r3, [sp, #60]	; 0x3c
 80180a2:	4b88      	ldr	r3, [pc, #544]	; (80182c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 80180a4:	920a      	str	r2, [sp, #40]	; 0x28
 80180a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80180a8:	eba3 0304 	sub.w	r3, r3, r4
 80180ac:	910d      	str	r1, [sp, #52]	; 0x34
 80180ae:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 80180b2:	9319      	str	r3, [sp, #100]	; 0x64
 80180b4:	f108 0204 	add.w	r2, r8, #4
 80180b8:	9211      	str	r2, [sp, #68]	; 0x44
 80180ba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80180bc:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 80180c0:	9215      	str	r2, [sp, #84]	; 0x54
 80180c2:	9a04      	ldr	r2, [sp, #16]
 80180c4:	bf18      	it	ne
 80180c6:	2200      	movne	r2, #0
 80180c8:	b292      	uxth	r2, r2
 80180ca:	9910      	ldr	r1, [sp, #64]	; 0x40
 80180cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80180ce:	fa11 f383 	uxtah	r3, r1, r3
 80180d2:	9914      	ldr	r1, [sp, #80]	; 0x50
 80180d4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80180d8:	3304      	adds	r3, #4
 80180da:	9306      	str	r3, [sp, #24]
 80180dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80180de:	4283      	cmp	r3, r0
 80180e0:	f240 8166 	bls.w	80183b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 80180e4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 80180e8:	f04f 0a01 	mov.w	sl, #1
 80180ec:	9902      	ldr	r1, [sp, #8]
 80180ee:	9e06      	ldr	r6, [sp, #24]
 80180f0:	46d3      	mov	fp, sl
 80180f2:	4657      	mov	r7, sl
 80180f4:	7836      	ldrb	r6, [r6, #0]
 80180f6:	fbb5 f3f3 	udiv	r3, r5, r3
 80180fa:	1acb      	subs	r3, r1, r3
 80180fc:	9612      	str	r6, [sp, #72]	; 0x48
 80180fe:	3601      	adds	r6, #1
 8018100:	b29b      	uxth	r3, r3
 8018102:	9605      	str	r6, [sp, #20]
 8018104:	9316      	str	r3, [sp, #88]	; 0x58
 8018106:	9b06      	ldr	r3, [sp, #24]
 8018108:	7859      	ldrb	r1, [r3, #1]
 801810a:	789b      	ldrb	r3, [r3, #2]
 801810c:	021b      	lsls	r3, r3, #8
 801810e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8018112:	9906      	ldr	r1, [sp, #24]
 8018114:	78c9      	ldrb	r1, [r1, #3]
 8018116:	430b      	orrs	r3, r1
 8018118:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801811a:	4419      	add	r1, r3
 801811c:	1c4e      	adds	r6, r1, #1
 801811e:	7849      	ldrb	r1, [r1, #1]
 8018120:	9603      	str	r6, [sp, #12]
 8018122:	0209      	lsls	r1, r1, #8
 8018124:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018126:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801812a:	5cf3      	ldrb	r3, [r6, r3]
 801812c:	4319      	orrs	r1, r3
 801812e:	b28b      	uxth	r3, r1
 8018130:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8018134:	930c      	str	r3, [sp, #48]	; 0x30
 8018136:	2300      	movs	r3, #0
 8018138:	9307      	str	r3, [sp, #28]
 801813a:	469c      	mov	ip, r3
 801813c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8018140:	930e      	str	r3, [sp, #56]	; 0x38
 8018142:	2d00      	cmp	r5, #0
 8018144:	d07e      	beq.n	8018244 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 8018146:	42af      	cmp	r7, r5
 8018148:	d26e      	bcs.n	8018228 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 801814a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801814c:	1bed      	subs	r5, r5, r7
 801814e:	9201      	str	r2, [sp, #4]
 8018150:	4283      	cmp	r3, r0
 8018152:	b2ad      	uxth	r5, r5
 8018154:	d802      	bhi.n	801815c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 8018156:	e073      	b.n	8018240 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8018158:	2b00      	cmp	r3, #0
 801815a:	d15f      	bne.n	801821c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 801815c:	9b03      	ldr	r3, [sp, #12]
 801815e:	f1cb 0207 	rsb	r2, fp, #7
 8018162:	785b      	ldrb	r3, [r3, #1]
 8018164:	4093      	lsls	r3, r2
 8018166:	005b      	lsls	r3, r3, #1
 8018168:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801816c:	9b03      	ldr	r3, [sp, #12]
 801816e:	781b      	ldrb	r3, [r3, #0]
 8018170:	fa43 f30b 	asr.w	r3, r3, fp
 8018174:	b2db      	uxtb	r3, r3
 8018176:	4313      	orrs	r3, r2
 8018178:	f10b 0201 	add.w	r2, fp, #1
 801817c:	fa5f fb82 	uxtb.w	fp, r2
 8018180:	9a03      	ldr	r2, [sp, #12]
 8018182:	b29f      	uxth	r7, r3
 8018184:	f1bb 0f08 	cmp.w	fp, #8
 8018188:	bf13      	iteet	ne
 801818a:	3201      	addne	r2, #1
 801818c:	3202      	addeq	r2, #2
 801818e:	f04f 0b00 	moveq.w	fp, #0
 8018192:	9203      	strne	r2, [sp, #12]
 8018194:	bf08      	it	eq
 8018196:	9203      	streq	r2, [sp, #12]
 8018198:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801819a:	42ba      	cmp	r2, r7
 801819c:	d309      	bcc.n	80181b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 801819e:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 80181a2:	2301      	movs	r3, #1
 80181a4:	9a05      	ldr	r2, [sp, #20]
 80181a6:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 80181aa:	d30e      	bcc.n	80181ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80181ac:	469a      	mov	sl, r3
 80181ae:	2600      	movs	r6, #0
 80181b0:	e035      	b.n	801821e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 80181b2:	9b05      	ldr	r3, [sp, #20]
 80181b4:	429f      	cmp	r7, r3
 80181b6:	d318      	bcc.n	80181ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 80181b8:	eb04 030a 	add.w	r3, r4, sl
 80181bc:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 80181c0:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 80181c4:	f10a 0301 	add.w	r3, sl, #1
 80181c8:	b29b      	uxth	r3, r3
 80181ca:	9a05      	ldr	r2, [sp, #20]
 80181cc:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 80181d0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80181d4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80181d6:	7116      	strb	r6, [r2, #4]
 80181d8:	f10a 0601 	add.w	r6, sl, #1
 80181dc:	80d1      	strh	r1, [r2, #6]
 80181de:	7156      	strb	r6, [r2, #5]
 80181e0:	9a05      	ldr	r2, [sp, #20]
 80181e2:	3201      	adds	r2, #1
 80181e4:	b292      	uxth	r2, r2
 80181e6:	9205      	str	r2, [sp, #20]
 80181e8:	e7e0      	b.n	80181ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 80181ea:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 80181ee:	463a      	mov	r2, r7
 80181f0:	795b      	ldrb	r3, [r3, #5]
 80181f2:	f603 0604 	addw	r6, r3, #2052	; 0x804
 80181f6:	4426      	add	r6, r4
 80181f8:	9919      	ldr	r1, [sp, #100]	; 0x64
 80181fa:	eb01 0c06 	add.w	ip, r1, r6
 80181fe:	f1bc 0f00 	cmp.w	ip, #0
 8018202:	dd07      	ble.n	8018214 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 8018204:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8018208:	f892 c004 	ldrb.w	ip, [r2, #4]
 801820c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8018210:	88d2      	ldrh	r2, [r2, #6]
 8018212:	e7f1      	b.n	80181f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 8018214:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8018218:	b29b      	uxth	r3, r3
 801821a:	e7c3      	b.n	80181a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 801821c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801821e:	970c      	str	r7, [sp, #48]	; 0x30
 8018220:	46b4      	mov	ip, r6
 8018222:	9a01      	ldr	r2, [sp, #4]
 8018224:	461f      	mov	r7, r3
 8018226:	e78c      	b.n	8018142 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 8018228:	1b7b      	subs	r3, r7, r5
 801822a:	eb0c 0605 	add.w	r6, ip, r5
 801822e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018232:	b29b      	uxth	r3, r3
 8018234:	b2b6      	uxth	r6, r6
 8018236:	9201      	str	r2, [sp, #4]
 8018238:	2500      	movs	r5, #0
 801823a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801823c:	4282      	cmp	r2, r0
 801823e:	d88b      	bhi.n	8018158 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8018240:	9a01      	ldr	r2, [sp, #4]
 8018242:	e74b      	b.n	80180dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 8018244:	4297      	cmp	r7, r2
 8018246:	d332      	bcc.n	80182ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 8018248:	1abb      	subs	r3, r7, r2
 801824a:	9208      	str	r2, [sp, #32]
 801824c:	9501      	str	r5, [sp, #4]
 801824e:	b29b      	uxth	r3, r3
 8018250:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018252:	29ff      	cmp	r1, #255	; 0xff
 8018254:	9908      	ldr	r1, [sp, #32]
 8018256:	eb0c 0601 	add.w	r6, ip, r1
 801825a:	d135      	bne.n	80182c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801825c:	f1a0 0e02 	sub.w	lr, r0, #2
 8018260:	b2b6      	uxth	r6, r6
 8018262:	45b4      	cmp	ip, r6
 8018264:	f040 808c 	bne.w	8018380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 8018268:	9908      	ldr	r1, [sp, #32]
 801826a:	4297      	cmp	r7, r2
 801826c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018270:	d3e2      	bcc.n	8018238 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 8018272:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8018274:	9904      	ldr	r1, [sp, #16]
 8018276:	8812      	ldrh	r2, [r2, #0]
 8018278:	1a52      	subs	r2, r2, r1
 801827a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801827c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018280:	9a07      	ldr	r2, [sp, #28]
 8018282:	3201      	adds	r2, #1
 8018284:	428a      	cmp	r2, r1
 8018286:	9207      	str	r2, [sp, #28]
 8018288:	f040 8087 	bne.w	801839a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 801828c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8018290:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 8018294:	9b04      	ldr	r3, [sp, #16]
 8018296:	1bed      	subs	r5, r5, r7
 8018298:	b2ad      	uxth	r5, r5
 801829a:	2d00      	cmp	r5, #0
 801829c:	bf08      	it	eq
 801829e:	461a      	moveq	r2, r3
 80182a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80182a2:	bf18      	it	ne
 80182a4:	2200      	movne	r2, #0
 80182a6:	3301      	adds	r3, #1
 80182a8:	b292      	uxth	r2, r2
 80182aa:	930d      	str	r3, [sp, #52]	; 0x34
 80182ac:	e70d      	b.n	80180ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 80182ae:	1bd1      	subs	r1, r2, r7
 80182b0:	9708      	str	r7, [sp, #32]
 80182b2:	b28b      	uxth	r3, r1
 80182b4:	9301      	str	r3, [sp, #4]
 80182b6:	462b      	mov	r3, r5
 80182b8:	e7ca      	b.n	8018250 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 80182ba:	bf00      	nop
 80182bc:	2003242c 	.word	0x2003242c
 80182c0:	20032426 	.word	0x20032426
 80182c4:	fffff7fb 	.word	0xfffff7fb
 80182c8:	b2b6      	uxth	r6, r6
 80182ca:	900b      	str	r0, [sp, #44]	; 0x2c
 80182cc:	45b4      	cmp	ip, r6
 80182ce:	d0cb      	beq.n	8018268 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 80182d0:	f10c 0101 	add.w	r1, ip, #1
 80182d4:	44a4      	add	ip, r4
 80182d6:	9117      	str	r1, [sp, #92]	; 0x5c
 80182d8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 80182dc:	9911      	ldr	r1, [sp, #68]	; 0x44
 80182de:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80182e2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80182e4:	ea4f 2825 	mov.w	r8, r5, asr #8
 80182e8:	f8b1 c000 	ldrh.w	ip, [r1]
 80182ec:	990e      	ldr	r1, [sp, #56]	; 0x38
 80182ee:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 80182f2:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 80182f6:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80182fa:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80182fe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018302:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018306:	fb1e fe01 	smulbb	lr, lr, r1
 801830a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801830c:	fa5f fc8c 	uxtb.w	ip, ip
 8018310:	fb08 e801 	mla	r8, r8, r1, lr
 8018314:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8018318:	990e      	ldr	r1, [sp, #56]	; 0x38
 801831a:	00ed      	lsls	r5, r5, #3
 801831c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018320:	fa1f f888 	uxth.w	r8, r8
 8018324:	fb19 f901 	smulbb	r9, r9, r1
 8018328:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801832a:	b2ed      	uxtb	r5, r5
 801832c:	fb0e 9e01 	mla	lr, lr, r1, r9
 8018330:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018332:	fb1c fc01 	smulbb	ip, ip, r1
 8018336:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8018338:	fa1f fe8e 	uxth.w	lr, lr
 801833c:	fb05 c501 	mla	r5, r5, r1, ip
 8018340:	f108 0c01 	add.w	ip, r8, #1
 8018344:	f10e 0901 	add.w	r9, lr, #1
 8018348:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801834a:	b2ad      	uxth	r5, r5
 801834c:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8018350:	f105 0c01 	add.w	ip, r5, #1
 8018354:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8018358:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801835c:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8018360:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018364:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018368:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801836c:	ea4c 0808 	orr.w	r8, ip, r8
 8018370:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 8018374:	ea48 0809 	orr.w	r8, r8, r9
 8018378:	f821 8b02 	strh.w	r8, [r1], #2
 801837c:	910b      	str	r1, [sp, #44]	; 0x2c
 801837e:	e7a5      	b.n	80182cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 8018380:	f10c 0801 	add.w	r8, ip, #1
 8018384:	44a4      	add	ip, r4
 8018386:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018388:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801838c:	fa1f fc88 	uxth.w	ip, r8
 8018390:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8018394:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8018398:	e763      	b.n	8018262 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 801839a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801839e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 80183a2:	1aad      	subs	r5, r5, r2
 80183a4:	b2ad      	uxth	r5, r5
 80183a6:	2d00      	cmp	r5, #0
 80183a8:	bf18      	it	ne
 80183aa:	2200      	movne	r2, #0
 80183ac:	9201      	str	r2, [sp, #4]
 80183ae:	e744      	b.n	801823a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 80183b0:	4b03      	ldr	r3, [pc, #12]	; (80183c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 80183b2:	6818      	ldr	r0, [r3, #0]
 80183b4:	6803      	ldr	r3, [r0, #0]
 80183b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80183b8:	4798      	blx	r3
 80183ba:	b01f      	add	sp, #124	; 0x7c
 80183bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183c0:	2003242c 	.word	0x2003242c

080183c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80183c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183c8:	b08f      	sub	sp, #60	; 0x3c
 80183ca:	461c      	mov	r4, r3
 80183cc:	460f      	mov	r7, r1
 80183ce:	9203      	str	r2, [sp, #12]
 80183d0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80183d4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80183d6:	9202      	str	r2, [sp, #8]
 80183d8:	2a00      	cmp	r2, #0
 80183da:	f000 8128 	beq.w	801862e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 80183de:	6820      	ldr	r0, [r4, #0]
 80183e0:	aa0a      	add	r2, sp, #40	; 0x28
 80183e2:	6861      	ldr	r1, [r4, #4]
 80183e4:	c203      	stmia	r2!, {r0, r1}
 80183e6:	6818      	ldr	r0, [r3, #0]
 80183e8:	aa0c      	add	r2, sp, #48	; 0x30
 80183ea:	6859      	ldr	r1, [r3, #4]
 80183ec:	c203      	stmia	r2!, {r0, r1}
 80183ee:	a80a      	add	r0, sp, #40	; 0x28
 80183f0:	f7f9 fbea 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80183f4:	4621      	mov	r1, r4
 80183f6:	a80c      	add	r0, sp, #48	; 0x30
 80183f8:	f7f9 fc0e 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80183fc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8018400:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8018404:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8018408:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801840c:	bfdb      	ittet	le
 801840e:	b2b3      	uxthle	r3, r6
 8018410:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8018414:	2301      	movgt	r3, #1
 8018416:	fb92 f3f3 	sdivle	r3, r2, r3
 801841a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801841e:	441d      	add	r5, r3
 8018420:	fb92 f1f3 	sdiv	r1, r2, r3
 8018424:	fa1f fc81 	uxth.w	ip, r1
 8018428:	3d01      	subs	r5, #1
 801842a:	fb0c 2413 	mls	r4, ip, r3, r2
 801842e:	4661      	mov	r1, ip
 8018430:	fb14 f406 	smulbb	r4, r4, r6
 8018434:	4404      	add	r4, r0
 8018436:	fb95 f5f3 	sdiv	r5, r5, r3
 801843a:	b2a4      	uxth	r4, r4
 801843c:	b121      	cbz	r1, 8018448 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 801843e:	9b03      	ldr	r3, [sp, #12]
 8018440:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8018444:	ba1b      	rev	r3, r3
 8018446:	441f      	add	r7, r3
 8018448:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801844c:	b2ad      	uxth	r5, r5
 801844e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8018452:	4418      	add	r0, r3
 8018454:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8018458:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801845c:	00ad      	lsls	r5, r5, #2
 801845e:	441a      	add	r2, r3
 8018460:	4b74      	ldr	r3, [pc, #464]	; (8018634 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8018462:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8018466:	6818      	ldr	r0, [r3, #0]
 8018468:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801846c:	6803      	ldr	r3, [r0, #0]
 801846e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018470:	4798      	blx	r3
 8018472:	4a71      	ldr	r2, [pc, #452]	; (8018638 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8018474:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8018478:	2c00      	cmp	r4, #0
 801847a:	8813      	ldrh	r3, [r2, #0]
 801847c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8018480:	bf0c      	ite	eq
 8018482:	46c8      	moveq	r8, r9
 8018484:	f04f 0800 	movne.w	r8, #0
 8018488:	9209      	str	r2, [sp, #36]	; 0x24
 801848a:	fb03 c101 	mla	r1, r3, r1, ip
 801848e:	4373      	muls	r3, r6
 8018490:	fa1f f888 	uxth.w	r8, r8
 8018494:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018498:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801849c:	9304      	str	r3, [sp, #16]
 801849e:	1d2b      	adds	r3, r5, #4
 80184a0:	9305      	str	r3, [sp, #20]
 80184a2:	2300      	movs	r3, #0
 80184a4:	9301      	str	r3, [sp, #4]
 80184a6:	9a04      	ldr	r2, [sp, #16]
 80184a8:	4282      	cmp	r2, r0
 80184aa:	f240 80bb 	bls.w	8018624 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 80184ae:	b95b      	cbnz	r3, 80184c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 80184b0:	783a      	ldrb	r2, [r7, #0]
 80184b2:	0993      	lsrs	r3, r2, #6
 80184b4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80184b8:	9201      	str	r2, [sp, #4]
 80184ba:	1e5a      	subs	r2, r3, #1
 80184bc:	2a02      	cmp	r2, #2
 80184be:	bf8d      	iteet	hi
 80184c0:	787b      	ldrbhi	r3, [r7, #1]
 80184c2:	3701      	addls	r7, #1
 80184c4:	b29b      	uxthls	r3, r3
 80184c6:	3702      	addhi	r7, #2
 80184c8:	b184      	cbz	r4, 80184ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 80184ca:	429c      	cmp	r4, r3
 80184cc:	bf91      	iteee	ls
 80184ce:	1b1c      	subls	r4, r3, r4
 80184d0:	1ae4      	subhi	r4, r4, r3
 80184d2:	46c4      	movhi	ip, r8
 80184d4:	f04f 0a00 	movhi.w	sl, #0
 80184d8:	bf9b      	ittet	ls
 80184da:	fa1f fa84 	uxthls.w	sl, r4
 80184de:	2400      	movls	r4, #0
 80184e0:	b2a4      	uxthhi	r4, r4
 80184e2:	fa1f fc89 	uxthls.w	ip, r9
 80184e6:	4653      	mov	r3, sl
 80184e8:	46e0      	mov	r8, ip
 80184ea:	e7dc      	b.n	80184a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 80184ec:	2204      	movs	r2, #4
 80184ee:	9905      	ldr	r1, [sp, #20]
 80184f0:	4543      	cmp	r3, r8
 80184f2:	4615      	mov	r5, r2
 80184f4:	9a01      	ldr	r2, [sp, #4]
 80184f6:	bf24      	itt	cs
 80184f8:	eba3 0a08 	subcs.w	sl, r3, r8
 80184fc:	46c6      	movcs	lr, r8
 80184fe:	fb15 1202 	smlabb	r2, r5, r2, r1
 8018502:	9903      	ldr	r1, [sp, #12]
 8018504:	bf3c      	itt	cc
 8018506:	eba8 0c03 	subcc.w	ip, r8, r3
 801850a:	469e      	movcc	lr, r3
 801850c:	588a      	ldr	r2, [r1, r2]
 801850e:	bf26      	itte	cs
 8018510:	fa1f fa8a 	uxthcs.w	sl, sl
 8018514:	46a4      	movcs	ip, r4
 8018516:	fa1f fc8c 	uxthcc.w	ip, ip
 801851a:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801851e:	bf38      	it	cc
 8018520:	46a2      	movcc	sl, r4
 8018522:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8018526:	2900      	cmp	r1, #0
 8018528:	d066      	beq.n	80185f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801852a:	29ff      	cmp	r1, #255	; 0xff
 801852c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8018530:	d114      	bne.n	801855c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8018532:	9d02      	ldr	r5, [sp, #8]
 8018534:	2dff      	cmp	r5, #255	; 0xff
 8018536:	d111      	bne.n	801855c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8018538:	0951      	lsrs	r1, r2, #5
 801853a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801853e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018542:	4486      	add	lr, r0
 8018544:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018548:	f026 0607 	bic.w	r6, r6, #7
 801854c:	430e      	orrs	r6, r1
 801854e:	4316      	orrs	r6, r2
 8018550:	b2b6      	uxth	r6, r6
 8018552:	4586      	cmp	lr, r0
 8018554:	d051      	beq.n	80185fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8018556:	f820 6b02 	strh.w	r6, [r0], #2
 801855a:	e7fa      	b.n	8018552 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801855c:	9d02      	ldr	r5, [sp, #8]
 801855e:	b2f6      	uxtb	r6, r6
 8018560:	4486      	add	lr, r0
 8018562:	4369      	muls	r1, r5
 8018564:	1c4d      	adds	r5, r1, #1
 8018566:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801856a:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801856e:	b2d2      	uxtb	r2, r2
 8018570:	122d      	asrs	r5, r5, #8
 8018572:	ea6f 0b05 	mvn.w	fp, r5
 8018576:	b2ad      	uxth	r5, r5
 8018578:	fb11 f105 	smulbb	r1, r1, r5
 801857c:	fa5f fb8b 	uxtb.w	fp, fp
 8018580:	fb16 f605 	smulbb	r6, r6, r5
 8018584:	fb12 f205 	smulbb	r2, r2, r5
 8018588:	b289      	uxth	r1, r1
 801858a:	b2b6      	uxth	r6, r6
 801858c:	b292      	uxth	r2, r2
 801858e:	9106      	str	r1, [sp, #24]
 8018590:	9607      	str	r6, [sp, #28]
 8018592:	9208      	str	r2, [sp, #32]
 8018594:	4586      	cmp	lr, r0
 8018596:	d030      	beq.n	80185fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8018598:	8802      	ldrh	r2, [r0, #0]
 801859a:	9906      	ldr	r1, [sp, #24]
 801859c:	1216      	asrs	r6, r2, #8
 801859e:	10d5      	asrs	r5, r2, #3
 80185a0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80185a4:	00d2      	lsls	r2, r2, #3
 80185a6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80185aa:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80185ae:	b2d2      	uxtb	r2, r2
 80185b0:	fb06 160b 	mla	r6, r6, fp, r1
 80185b4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80185b8:	9907      	ldr	r1, [sp, #28]
 80185ba:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80185be:	b2b6      	uxth	r6, r6
 80185c0:	fb05 150b 	mla	r5, r5, fp, r1
 80185c4:	9908      	ldr	r1, [sp, #32]
 80185c6:	fb02 120b 	mla	r2, r2, fp, r1
 80185ca:	1c71      	adds	r1, r6, #1
 80185cc:	b2ad      	uxth	r5, r5
 80185ce:	b292      	uxth	r2, r2
 80185d0:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 80185d4:	1c51      	adds	r1, r2, #1
 80185d6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80185da:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80185de:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80185e2:	4316      	orrs	r6, r2
 80185e4:	1c6a      	adds	r2, r5, #1
 80185e6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80185ea:	096d      	lsrs	r5, r5, #5
 80185ec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80185f0:	432e      	orrs	r6, r5
 80185f2:	f820 6b02 	strh.w	r6, [r0], #2
 80185f6:	e7cd      	b.n	8018594 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 80185f8:	4470      	add	r0, lr
 80185fa:	4543      	cmp	r3, r8
 80185fc:	f4ff af73 	bcc.w	80184e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8018600:	fa1f fc89 	uxth.w	ip, r9
 8018604:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8018608:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801860a:	eba4 040c 	sub.w	r4, r4, ip
 801860e:	881b      	ldrh	r3, [r3, #0]
 8018610:	b2a4      	uxth	r4, r4
 8018612:	eba3 0309 	sub.w	r3, r3, r9
 8018616:	2c00      	cmp	r4, #0
 8018618:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801861c:	bf18      	it	ne
 801861e:	f04f 0c00 	movne.w	ip, #0
 8018622:	e760      	b.n	80184e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8018624:	4b03      	ldr	r3, [pc, #12]	; (8018634 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8018626:	6818      	ldr	r0, [r3, #0]
 8018628:	6803      	ldr	r3, [r0, #0]
 801862a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801862c:	4798      	blx	r3
 801862e:	b00f      	add	sp, #60	; 0x3c
 8018630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018634:	2003242c 	.word	0x2003242c
 8018638:	20032426 	.word	0x20032426

0801863c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801863c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018640:	b093      	sub	sp, #76	; 0x4c
 8018642:	461c      	mov	r4, r3
 8018644:	9205      	str	r2, [sp, #20]
 8018646:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801864a:	9101      	str	r1, [sp, #4]
 801864c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801864e:	9202      	str	r2, [sp, #8]
 8018650:	2a00      	cmp	r2, #0
 8018652:	f000 812e 	beq.w	80188b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 8018656:	6820      	ldr	r0, [r4, #0]
 8018658:	aa0e      	add	r2, sp, #56	; 0x38
 801865a:	6861      	ldr	r1, [r4, #4]
 801865c:	c203      	stmia	r2!, {r0, r1}
 801865e:	6818      	ldr	r0, [r3, #0]
 8018660:	aa10      	add	r2, sp, #64	; 0x40
 8018662:	6859      	ldr	r1, [r3, #4]
 8018664:	c203      	stmia	r2!, {r0, r1}
 8018666:	a80e      	add	r0, sp, #56	; 0x38
 8018668:	f7f9 faae 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801866c:	4621      	mov	r1, r4
 801866e:	a810      	add	r0, sp, #64	; 0x40
 8018670:	f7f9 fad2 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018674:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8018678:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801867c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8018680:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8018684:	bfdb      	ittet	le
 8018686:	b2b3      	uxthle	r3, r6
 8018688:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801868c:	2301      	movgt	r3, #1
 801868e:	fb92 f3f3 	sdivle	r3, r2, r3
 8018692:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8018696:	441d      	add	r5, r3
 8018698:	fb92 f1f3 	sdiv	r1, r2, r3
 801869c:	fa1f fc81 	uxth.w	ip, r1
 80186a0:	3d01      	subs	r5, #1
 80186a2:	fb0c 2413 	mls	r4, ip, r3, r2
 80186a6:	4661      	mov	r1, ip
 80186a8:	fb14 f406 	smulbb	r4, r4, r6
 80186ac:	4404      	add	r4, r0
 80186ae:	fb95 f5f3 	sdiv	r5, r5, r3
 80186b2:	b2a4      	uxth	r4, r4
 80186b4:	b131      	cbz	r1, 80186c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 80186b6:	9b05      	ldr	r3, [sp, #20]
 80186b8:	9901      	ldr	r1, [sp, #4]
 80186ba:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80186be:	ba1b      	rev	r3, r3
 80186c0:	4419      	add	r1, r3
 80186c2:	9101      	str	r1, [sp, #4]
 80186c4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80186c8:	b2ad      	uxth	r5, r5
 80186ca:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80186ce:	4418      	add	r0, r3
 80186d0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 80186d4:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 80186d8:	00ad      	lsls	r5, r5, #2
 80186da:	441a      	add	r2, r3
 80186dc:	4b76      	ldr	r3, [pc, #472]	; (80188b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 80186de:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 80186e2:	6818      	ldr	r0, [r3, #0]
 80186e4:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 80186e8:	6803      	ldr	r3, [r0, #0]
 80186ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80186ec:	4798      	blx	r3
 80186ee:	4973      	ldr	r1, [pc, #460]	; (80188bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 80186f0:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 80186f4:	2c00      	cmp	r4, #0
 80186f6:	880b      	ldrh	r3, [r1, #0]
 80186f8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80186fc:	910d      	str	r1, [sp, #52]	; 0x34
 80186fe:	fb03 c202 	mla	r2, r3, r2, ip
 8018702:	bf08      	it	eq
 8018704:	46dc      	moveq	ip, fp
 8018706:	fb03 f306 	mul.w	r3, r3, r6
 801870a:	bf18      	it	ne
 801870c:	f04f 0c00 	movne.w	ip, #0
 8018710:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018714:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018718:	fa1f fc8c 	uxth.w	ip, ip
 801871c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018720:	9106      	str	r1, [sp, #24]
 8018722:	9308      	str	r3, [sp, #32]
 8018724:	1d2b      	adds	r3, r5, #4
 8018726:	9309      	str	r3, [sp, #36]	; 0x24
 8018728:	9b02      	ldr	r3, [sp, #8]
 801872a:	43da      	mvns	r2, r3
 801872c:	2300      	movs	r3, #0
 801872e:	b2d2      	uxtb	r2, r2
 8018730:	9303      	str	r3, [sp, #12]
 8018732:	9207      	str	r2, [sp, #28]
 8018734:	9a08      	ldr	r2, [sp, #32]
 8018736:	4282      	cmp	r2, r0
 8018738:	f240 80b6 	bls.w	80188a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 801873c:	b963      	cbnz	r3, 8018758 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 801873e:	9b01      	ldr	r3, [sp, #4]
 8018740:	781a      	ldrb	r2, [r3, #0]
 8018742:	0993      	lsrs	r3, r2, #6
 8018744:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8018748:	9203      	str	r2, [sp, #12]
 801874a:	1e5a      	subs	r2, r3, #1
 801874c:	2a02      	cmp	r2, #2
 801874e:	d815      	bhi.n	801877c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 8018750:	9a01      	ldr	r2, [sp, #4]
 8018752:	b29b      	uxth	r3, r3
 8018754:	3201      	adds	r2, #1
 8018756:	9201      	str	r2, [sp, #4]
 8018758:	b1b4      	cbz	r4, 8018788 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 801875a:	429c      	cmp	r4, r3
 801875c:	bf91      	iteee	ls
 801875e:	1b1c      	subls	r4, r3, r4
 8018760:	1ae4      	subhi	r4, r4, r3
 8018762:	4666      	movhi	r6, ip
 8018764:	f04f 0800 	movhi.w	r8, #0
 8018768:	bf9b      	ittet	ls
 801876a:	fa1f f884 	uxthls.w	r8, r4
 801876e:	2400      	movls	r4, #0
 8018770:	b2a4      	uxthhi	r4, r4
 8018772:	fa1f f68b 	uxthls.w	r6, fp
 8018776:	4643      	mov	r3, r8
 8018778:	46b4      	mov	ip, r6
 801877a:	e7db      	b.n	8018734 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 801877c:	9a01      	ldr	r2, [sp, #4]
 801877e:	9b01      	ldr	r3, [sp, #4]
 8018780:	3202      	adds	r2, #2
 8018782:	785b      	ldrb	r3, [r3, #1]
 8018784:	9201      	str	r2, [sp, #4]
 8018786:	e7e7      	b.n	8018758 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 8018788:	2203      	movs	r2, #3
 801878a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801878c:	4563      	cmp	r3, ip
 801878e:	4615      	mov	r5, r2
 8018790:	9a03      	ldr	r2, [sp, #12]
 8018792:	bf2c      	ite	cs
 8018794:	eba3 080c 	subcs.w	r8, r3, ip
 8018798:	ebac 0603 	subcc.w	r6, ip, r3
 801879c:	fb15 1202 	smlabb	r2, r5, r2, r1
 80187a0:	9905      	ldr	r1, [sp, #20]
 80187a2:	bf24      	itt	cs
 80187a4:	fa1f f888 	uxthcs.w	r8, r8
 80187a8:	46e1      	movcs	r9, ip
 80187aa:	eb01 0502 	add.w	r5, r1, r2
 80187ae:	9902      	ldr	r1, [sp, #8]
 80187b0:	bf2f      	iteee	cs
 80187b2:	4626      	movcs	r6, r4
 80187b4:	b2b6      	uxthcc	r6, r6
 80187b6:	4699      	movcc	r9, r3
 80187b8:	46a0      	movcc	r8, r4
 80187ba:	29ff      	cmp	r1, #255	; 0xff
 80187bc:	d04a      	beq.n	8018854 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 80187be:	9f06      	ldr	r7, [sp, #24]
 80187c0:	46ca      	mov	sl, r9
 80187c2:	78a9      	ldrb	r1, [r5, #2]
 80187c4:	9004      	str	r0, [sp, #16]
 80187c6:	4379      	muls	r1, r7
 80187c8:	910a      	str	r1, [sp, #40]	; 0x28
 80187ca:	7869      	ldrb	r1, [r5, #1]
 80187cc:	4379      	muls	r1, r7
 80187ce:	910b      	str	r1, [sp, #44]	; 0x2c
 80187d0:	9905      	ldr	r1, [sp, #20]
 80187d2:	5c8a      	ldrb	r2, [r1, r2]
 80187d4:	437a      	muls	r2, r7
 80187d6:	920c      	str	r2, [sp, #48]	; 0x30
 80187d8:	f1ba 0f00 	cmp.w	sl, #0
 80187dc:	d03d      	beq.n	801885a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 80187de:	9a04      	ldr	r2, [sp, #16]
 80187e0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80187e4:	9f07      	ldr	r7, [sp, #28]
 80187e6:	8812      	ldrh	r2, [r2, #0]
 80187e8:	fa1f fa8a 	uxth.w	sl, sl
 80187ec:	46be      	mov	lr, r7
 80187ee:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80187f0:	1215      	asrs	r5, r2, #8
 80187f2:	10d1      	asrs	r1, r2, #3
 80187f4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80187f8:	00d2      	lsls	r2, r2, #3
 80187fa:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80187fe:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8018802:	b2d2      	uxtb	r2, r2
 8018804:	fb05 750e 	mla	r5, r5, lr, r7
 8018808:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801880c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801880e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018812:	b2ad      	uxth	r5, r5
 8018814:	fb01 710e 	mla	r1, r1, lr, r7
 8018818:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801881a:	fb02 720e 	mla	r2, r2, lr, r7
 801881e:	f105 0e01 	add.w	lr, r5, #1
 8018822:	b289      	uxth	r1, r1
 8018824:	b292      	uxth	r2, r2
 8018826:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801882a:	f102 0e01 	add.w	lr, r2, #1
 801882e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018832:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8018836:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801883a:	4315      	orrs	r5, r2
 801883c:	1c4a      	adds	r2, r1, #1
 801883e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018842:	9a04      	ldr	r2, [sp, #16]
 8018844:	0949      	lsrs	r1, r1, #5
 8018846:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801884a:	430d      	orrs	r5, r1
 801884c:	f822 5b02 	strh.w	r5, [r2], #2
 8018850:	9204      	str	r2, [sp, #16]
 8018852:	e7c1      	b.n	80187d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 8018854:	4649      	mov	r1, r9
 8018856:	4686      	mov	lr, r0
 8018858:	b999      	cbnz	r1, 8018882 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 801885a:	4563      	cmp	r3, ip
 801885c:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8018860:	d389      	bcc.n	8018776 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8018862:	fa1f f68b 	uxth.w	r6, fp
 8018866:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801886a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801886c:	1ba4      	subs	r4, r4, r6
 801886e:	881b      	ldrh	r3, [r3, #0]
 8018870:	b2a4      	uxth	r4, r4
 8018872:	eba3 030b 	sub.w	r3, r3, fp
 8018876:	2c00      	cmp	r4, #0
 8018878:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801887c:	bf18      	it	ne
 801887e:	2600      	movne	r6, #0
 8018880:	e779      	b.n	8018776 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8018882:	78aa      	ldrb	r2, [r5, #2]
 8018884:	3901      	subs	r1, #1
 8018886:	4f0e      	ldr	r7, [pc, #56]	; (80188c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 8018888:	b289      	uxth	r1, r1
 801888a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801888e:	786a      	ldrb	r2, [r5, #1]
 8018890:	00d2      	lsls	r2, r2, #3
 8018892:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018896:	ea4a 0202 	orr.w	r2, sl, r2
 801889a:	f895 a000 	ldrb.w	sl, [r5]
 801889e:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 80188a2:	f82e 2b02 	strh.w	r2, [lr], #2
 80188a6:	e7d7      	b.n	8018858 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 80188a8:	4b03      	ldr	r3, [pc, #12]	; (80188b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 80188aa:	6818      	ldr	r0, [r3, #0]
 80188ac:	6803      	ldr	r3, [r0, #0]
 80188ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80188b0:	4798      	blx	r3
 80188b2:	b013      	add	sp, #76	; 0x4c
 80188b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80188b8:	2003242c 	.word	0x2003242c
 80188bc:	20032426 	.word	0x20032426
 80188c0:	fffff800 	.word	0xfffff800

080188c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80188c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188c8:	b09d      	sub	sp, #116	; 0x74
 80188ca:	461c      	mov	r4, r3
 80188cc:	4683      	mov	fp, r0
 80188ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80188d0:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 80188d4:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 80188d8:	920e      	str	r2, [sp, #56]	; 0x38
 80188da:	2a00      	cmp	r2, #0
 80188dc:	f000 81e4 	beq.w	8018ca8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 80188e0:	6820      	ldr	r0, [r4, #0]
 80188e2:	aa18      	add	r2, sp, #96	; 0x60
 80188e4:	6861      	ldr	r1, [r4, #4]
 80188e6:	c203      	stmia	r2!, {r0, r1}
 80188e8:	6818      	ldr	r0, [r3, #0]
 80188ea:	aa1a      	add	r2, sp, #104	; 0x68
 80188ec:	6859      	ldr	r1, [r3, #4]
 80188ee:	c203      	stmia	r2!, {r0, r1}
 80188f0:	a818      	add	r0, sp, #96	; 0x60
 80188f2:	f7f9 f969 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80188f6:	4621      	mov	r1, r4
 80188f8:	a81a      	add	r0, sp, #104	; 0x68
 80188fa:	f7f9 f98d 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80188fe:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 8018902:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 8018906:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801890a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801890e:	bfdb      	ittet	le
 8018910:	b29a      	uxthle	r2, r3
 8018912:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8018916:	2201      	movgt	r2, #1
 8018918:	fb91 f2f2 	sdivle	r2, r1, r2
 801891c:	9202      	str	r2, [sp, #8]
 801891e:	9802      	ldr	r0, [sp, #8]
 8018920:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 8018924:	9902      	ldr	r1, [sp, #8]
 8018926:	fb92 f0f0 	sdiv	r0, r2, r0
 801892a:	b280      	uxth	r0, r0
 801892c:	440c      	add	r4, r1
 801892e:	900f      	str	r0, [sp, #60]	; 0x3c
 8018930:	3c01      	subs	r4, #1
 8018932:	9802      	ldr	r0, [sp, #8]
 8018934:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8018936:	fb05 2510 	mls	r5, r5, r0, r2
 801893a:	fb94 f4f1 	sdiv	r4, r4, r1
 801893e:	fb15 f503 	smulbb	r5, r5, r3
 8018942:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 8018946:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801894a:	3401      	adds	r4, #1
 801894c:	440d      	add	r5, r1
 801894e:	4419      	add	r1, r3
 8018950:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 8018954:	b2a4      	uxth	r4, r4
 8018956:	441a      	add	r2, r3
 8018958:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801895c:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 8018960:	00a4      	lsls	r4, r4, #2
 8018962:	9306      	str	r3, [sp, #24]
 8018964:	b2ad      	uxth	r5, r5
 8018966:	4bb3      	ldr	r3, [pc, #716]	; (8018c34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8018968:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801896c:	6818      	ldr	r0, [r3, #0]
 801896e:	6803      	ldr	r3, [r0, #0]
 8018970:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018972:	4798      	blx	r3
 8018974:	4bb0      	ldr	r3, [pc, #704]	; (8018c38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 8018976:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801897a:	2d00      	cmp	r5, #0
 801897c:	881a      	ldrh	r2, [r3, #0]
 801897e:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 8018982:	fb02 f606 	mul.w	r6, r2, r6
 8018986:	fb02 7101 	mla	r1, r2, r1, r7
 801898a:	9316      	str	r3, [sp, #88]	; 0x58
 801898c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8018990:	4baa      	ldr	r3, [pc, #680]	; (8018c3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 8018992:	bf18      	it	ne
 8018994:	2100      	movne	r1, #0
 8018996:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801899a:	eba3 030b 	sub.w	r3, r3, fp
 801899e:	920a      	str	r2, [sp, #40]	; 0x28
 80189a0:	f104 0204 	add.w	r2, r4, #4
 80189a4:	9317      	str	r3, [sp, #92]	; 0x5c
 80189a6:	9213      	str	r2, [sp, #76]	; 0x4c
 80189a8:	9a06      	ldr	r2, [sp, #24]
 80189aa:	bf08      	it	eq
 80189ac:	4611      	moveq	r1, r2
 80189ae:	2200      	movs	r2, #0
 80189b0:	b289      	uxth	r1, r1
 80189b2:	920d      	str	r2, [sp, #52]	; 0x34
 80189b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80189b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80189b8:	fa12 f383 	uxtah	r3, r2, r3
 80189bc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80189be:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80189c2:	3304      	adds	r3, #4
 80189c4:	9308      	str	r3, [sp, #32]
 80189c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80189c8:	4543      	cmp	r3, r8
 80189ca:	f240 8168 	bls.w	8018c9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 80189ce:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 80189d2:	f04f 0e01 	mov.w	lr, #1
 80189d6:	9a02      	ldr	r2, [sp, #8]
 80189d8:	9808      	ldr	r0, [sp, #32]
 80189da:	fbb5 f3f3 	udiv	r3, r5, r3
 80189de:	1ad3      	subs	r3, r2, r3
 80189e0:	7800      	ldrb	r0, [r0, #0]
 80189e2:	b29b      	uxth	r3, r3
 80189e4:	9010      	str	r0, [sp, #64]	; 0x40
 80189e6:	3001      	adds	r0, #1
 80189e8:	9314      	str	r3, [sp, #80]	; 0x50
 80189ea:	9b08      	ldr	r3, [sp, #32]
 80189ec:	9007      	str	r0, [sp, #28]
 80189ee:	785a      	ldrb	r2, [r3, #1]
 80189f0:	789b      	ldrb	r3, [r3, #2]
 80189f2:	021b      	lsls	r3, r3, #8
 80189f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80189f8:	9a08      	ldr	r2, [sp, #32]
 80189fa:	78d2      	ldrb	r2, [r2, #3]
 80189fc:	4313      	orrs	r3, r2
 80189fe:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018a00:	441a      	add	r2, r3
 8018a02:	1c50      	adds	r0, r2, #1
 8018a04:	7852      	ldrb	r2, [r2, #1]
 8018a06:	9005      	str	r0, [sp, #20]
 8018a08:	0212      	lsls	r2, r2, #8
 8018a0a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018a0c:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8018a10:	5cc3      	ldrb	r3, [r0, r3]
 8018a12:	431a      	orrs	r2, r3
 8018a14:	b293      	uxth	r3, r2
 8018a16:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 8018a1a:	930b      	str	r3, [sp, #44]	; 0x2c
 8018a1c:	2300      	movs	r3, #0
 8018a1e:	9309      	str	r3, [sp, #36]	; 0x24
 8018a20:	2301      	movs	r3, #1
 8018a22:	9301      	str	r3, [sp, #4]
 8018a24:	9304      	str	r3, [sp, #16]
 8018a26:	2300      	movs	r3, #0
 8018a28:	9303      	str	r3, [sp, #12]
 8018a2a:	2d00      	cmp	r5, #0
 8018a2c:	d07d      	beq.n	8018b2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 8018a2e:	45ae      	cmp	lr, r5
 8018a30:	d26c      	bcs.n	8018b0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 8018a32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018a34:	eba5 050e 	sub.w	r5, r5, lr
 8018a38:	460c      	mov	r4, r1
 8018a3a:	4543      	cmp	r3, r8
 8018a3c:	b2ad      	uxth	r5, r5
 8018a3e:	d802      	bhi.n	8018a46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 8018a40:	e071      	b.n	8018b26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 8018a42:	2b00      	cmp	r3, #0
 8018a44:	d15d      	bne.n	8018b02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 8018a46:	9b05      	ldr	r3, [sp, #20]
 8018a48:	9a04      	ldr	r2, [sp, #16]
 8018a4a:	785b      	ldrb	r3, [r3, #1]
 8018a4c:	f1c2 0207 	rsb	r2, r2, #7
 8018a50:	9904      	ldr	r1, [sp, #16]
 8018a52:	4093      	lsls	r3, r2
 8018a54:	005b      	lsls	r3, r3, #1
 8018a56:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8018a5a:	9b05      	ldr	r3, [sp, #20]
 8018a5c:	781b      	ldrb	r3, [r3, #0]
 8018a5e:	410b      	asrs	r3, r1
 8018a60:	3101      	adds	r1, #1
 8018a62:	b2c9      	uxtb	r1, r1
 8018a64:	b2db      	uxtb	r3, r3
 8018a66:	2908      	cmp	r1, #8
 8018a68:	9104      	str	r1, [sp, #16]
 8018a6a:	9905      	ldr	r1, [sp, #20]
 8018a6c:	ea43 0302 	orr.w	r3, r3, r2
 8018a70:	bf0c      	ite	eq
 8018a72:	3102      	addeq	r1, #2
 8018a74:	3101      	addne	r1, #1
 8018a76:	b29a      	uxth	r2, r3
 8018a78:	bf05      	ittet	eq
 8018a7a:	9105      	streq	r1, [sp, #20]
 8018a7c:	2100      	moveq	r1, #0
 8018a7e:	9105      	strne	r1, [sp, #20]
 8018a80:	9104      	streq	r1, [sp, #16]
 8018a82:	9910      	ldr	r1, [sp, #64]	; 0x40
 8018a84:	4291      	cmp	r1, r2
 8018a86:	d30a      	bcc.n	8018a9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 8018a88:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 8018a8c:	2301      	movs	r3, #1
 8018a8e:	9907      	ldr	r1, [sp, #28]
 8018a90:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8018a94:	d30f      	bcc.n	8018ab6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8018a96:	2100      	movs	r1, #0
 8018a98:	9301      	str	r3, [sp, #4]
 8018a9a:	9103      	str	r1, [sp, #12]
 8018a9c:	e032      	b.n	8018b04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8018a9e:	9b07      	ldr	r3, [sp, #28]
 8018aa0:	429a      	cmp	r2, r3
 8018aa2:	d318      	bcc.n	8018ad6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 8018aa4:	9b01      	ldr	r3, [sp, #4]
 8018aa6:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 8018aaa:	445b      	add	r3, fp
 8018aac:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8018ab0:	9b01      	ldr	r3, [sp, #4]
 8018ab2:	3301      	adds	r3, #1
 8018ab4:	b29b      	uxth	r3, r3
 8018ab6:	9907      	ldr	r1, [sp, #28]
 8018ab8:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 8018abc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8018ac0:	7108      	strb	r0, [r1, #4]
 8018ac2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018ac4:	80c8      	strh	r0, [r1, #6]
 8018ac6:	9801      	ldr	r0, [sp, #4]
 8018ac8:	3001      	adds	r0, #1
 8018aca:	7148      	strb	r0, [r1, #5]
 8018acc:	9907      	ldr	r1, [sp, #28]
 8018ace:	3101      	adds	r1, #1
 8018ad0:	b289      	uxth	r1, r1
 8018ad2:	9107      	str	r1, [sp, #28]
 8018ad4:	e7df      	b.n	8018a96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8018ad6:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8018ada:	4611      	mov	r1, r2
 8018adc:	795b      	ldrb	r3, [r3, #5]
 8018ade:	f603 0004 	addw	r0, r3, #2052	; 0x804
 8018ae2:	4458      	add	r0, fp
 8018ae4:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8018ae6:	4406      	add	r6, r0
 8018ae8:	2e00      	cmp	r6, #0
 8018aea:	dd06      	ble.n	8018afa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8018aec:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8018af0:	790e      	ldrb	r6, [r1, #4]
 8018af2:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8018af6:	88c9      	ldrh	r1, [r1, #6]
 8018af8:	e7f4      	b.n	8018ae4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 8018afa:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 8018afe:	b29b      	uxth	r3, r3
 8018b00:	e7c5      	b.n	8018a8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8018b02:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018b04:	4621      	mov	r1, r4
 8018b06:	920b      	str	r2, [sp, #44]	; 0x2c
 8018b08:	469e      	mov	lr, r3
 8018b0a:	e78e      	b.n	8018a2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 8018b0c:	9a03      	ldr	r2, [sp, #12]
 8018b0e:	ebae 0305 	sub.w	r3, lr, r5
 8018b12:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8018b16:	442a      	add	r2, r5
 8018b18:	b29b      	uxth	r3, r3
 8018b1a:	b292      	uxth	r2, r2
 8018b1c:	9203      	str	r2, [sp, #12]
 8018b1e:	2500      	movs	r5, #0
 8018b20:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018b22:	4542      	cmp	r2, r8
 8018b24:	d88d      	bhi.n	8018a42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 8018b26:	4621      	mov	r1, r4
 8018b28:	e74d      	b.n	80189c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 8018b2a:	458e      	cmp	lr, r1
 8018b2c:	f04f 0900 	mov.w	r9, #0
 8018b30:	bf2b      	itete	cs
 8018b32:	ebae 0301 	subcs.w	r3, lr, r1
 8018b36:	eba1 040e 	subcc.w	r4, r1, lr
 8018b3a:	462c      	movcs	r4, r5
 8018b3c:	462b      	movcc	r3, r5
 8018b3e:	bf27      	ittee	cs
 8018b40:	b29b      	uxthcs	r3, r3
 8018b42:	910c      	strcs	r1, [sp, #48]	; 0x30
 8018b44:	b2a4      	uxthcc	r4, r4
 8018b46:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 8018b4a:	9a03      	ldr	r2, [sp, #12]
 8018b4c:	980c      	ldr	r0, [sp, #48]	; 0x30
 8018b4e:	444a      	add	r2, r9
 8018b50:	4548      	cmp	r0, r9
 8018b52:	b292      	uxth	r2, r2
 8018b54:	d074      	beq.n	8018c40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 8018b56:	2004      	movs	r0, #4
 8018b58:	445a      	add	r2, fp
 8018b5a:	4605      	mov	r5, r0
 8018b5c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 8018b60:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018b62:	fb15 0202 	smlabb	r2, r5, r2, r0
 8018b66:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018b68:	5880      	ldr	r0, [r0, r2]
 8018b6a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8018b6e:	d014      	beq.n	8018b9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8018b70:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018b74:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8018b78:	d112      	bne.n	8018ba0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8018b7a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018b7c:	2aff      	cmp	r2, #255	; 0xff
 8018b7e:	d10f      	bne.n	8018ba0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8018b80:	0942      	lsrs	r2, r0, #5
 8018b82:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8018b86:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8018b8a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018b8e:	f025 0507 	bic.w	r5, r5, #7
 8018b92:	4315      	orrs	r5, r2
 8018b94:	4305      	orrs	r5, r0
 8018b96:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8018b9a:	f109 0901 	add.w	r9, r9, #1
 8018b9e:	e7d4      	b.n	8018b4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 8018ba0:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8018ba4:	b2ed      	uxtb	r5, r5
 8018ba6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8018baa:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018bae:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 8018bb2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018bb6:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8018bba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018bbe:	9215      	str	r2, [sp, #84]	; 0x54
 8018bc0:	fa5f fc8c 	uxtb.w	ip, ip
 8018bc4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018bc6:	b2c0      	uxtb	r0, r0
 8018bc8:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8018bcc:	fb02 fa0a 	mul.w	sl, r2, sl
 8018bd0:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8018bd4:	f10a 0201 	add.w	r2, sl, #1
 8018bd8:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8018bdc:	1212      	asrs	r2, r2, #8
 8018bde:	fa1f fa82 	uxth.w	sl, r2
 8018be2:	43d2      	mvns	r2, r2
 8018be4:	fb16 f60a 	smulbb	r6, r6, sl
 8018be8:	b2d2      	uxtb	r2, r2
 8018bea:	fb10 f00a 	smulbb	r0, r0, sl
 8018bee:	fb07 6702 	mla	r7, r7, r2, r6
 8018bf2:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8018bf4:	fb0c 0002 	mla	r0, ip, r2, r0
 8018bf8:	fb15 f50a 	smulbb	r5, r5, sl
 8018bfc:	b2bf      	uxth	r7, r7
 8018bfe:	b280      	uxth	r0, r0
 8018c00:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8018c04:	fb06 5602 	mla	r6, r6, r2, r5
 8018c08:	1c7a      	adds	r2, r7, #1
 8018c0a:	1c45      	adds	r5, r0, #1
 8018c0c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018c10:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018c14:	b2b6      	uxth	r6, r6
 8018c16:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018c1a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018c1e:	432f      	orrs	r7, r5
 8018c20:	1c75      	adds	r5, r6, #1
 8018c22:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8018c26:	096d      	lsrs	r5, r5, #5
 8018c28:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018c2c:	432f      	orrs	r7, r5
 8018c2e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8018c32:	e7b2      	b.n	8018b9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8018c34:	2003242c 	.word	0x2003242c
 8018c38:	20032426 	.word	0x20032426
 8018c3c:	fffff7fb 	.word	0xfffff7fb
 8018c40:	9203      	str	r2, [sp, #12]
 8018c42:	458e      	cmp	lr, r1
 8018c44:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018c46:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8018c4a:	f4ff af68 	bcc.w	8018b1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8018c4e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018c50:	9906      	ldr	r1, [sp, #24]
 8018c52:	8812      	ldrh	r2, [r2, #0]
 8018c54:	1a52      	subs	r2, r2, r1
 8018c56:	9914      	ldr	r1, [sp, #80]	; 0x50
 8018c58:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8018c5c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018c5e:	3201      	adds	r2, #1
 8018c60:	428a      	cmp	r2, r1
 8018c62:	9209      	str	r2, [sp, #36]	; 0x24
 8018c64:	d111      	bne.n	8018c8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 8018c66:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 8018c6a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8018c6e:	9b06      	ldr	r3, [sp, #24]
 8018c70:	eba5 0509 	sub.w	r5, r5, r9
 8018c74:	b2ad      	uxth	r5, r5
 8018c76:	2d00      	cmp	r5, #0
 8018c78:	bf08      	it	eq
 8018c7a:	4619      	moveq	r1, r3
 8018c7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018c7e:	bf18      	it	ne
 8018c80:	2100      	movne	r1, #0
 8018c82:	3301      	adds	r3, #1
 8018c84:	b289      	uxth	r1, r1
 8018c86:	930d      	str	r3, [sp, #52]	; 0x34
 8018c88:	e694      	b.n	80189b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 8018c8a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8018c8e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8018c92:	1b2d      	subs	r5, r5, r4
 8018c94:	b2ad      	uxth	r5, r5
 8018c96:	2d00      	cmp	r5, #0
 8018c98:	bf18      	it	ne
 8018c9a:	2400      	movne	r4, #0
 8018c9c:	e740      	b.n	8018b20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 8018c9e:	4b04      	ldr	r3, [pc, #16]	; (8018cb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 8018ca0:	6818      	ldr	r0, [r3, #0]
 8018ca2:	6803      	ldr	r3, [r0, #0]
 8018ca4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018ca6:	4798      	blx	r3
 8018ca8:	b01d      	add	sp, #116	; 0x74
 8018caa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018cae:	bf00      	nop
 8018cb0:	2003242c 	.word	0x2003242c

08018cb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8018cb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018cb8:	b09f      	sub	sp, #124	; 0x7c
 8018cba:	461d      	mov	r5, r3
 8018cbc:	4604      	mov	r4, r0
 8018cbe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018cc0:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8018cc4:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8018cc8:	920a      	str	r2, [sp, #40]	; 0x28
 8018cca:	2a00      	cmp	r2, #0
 8018ccc:	f000 81fe 	beq.w	80190cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 8018cd0:	6828      	ldr	r0, [r5, #0]
 8018cd2:	aa1a      	add	r2, sp, #104	; 0x68
 8018cd4:	6869      	ldr	r1, [r5, #4]
 8018cd6:	c203      	stmia	r2!, {r0, r1}
 8018cd8:	6818      	ldr	r0, [r3, #0]
 8018cda:	aa1c      	add	r2, sp, #112	; 0x70
 8018cdc:	6859      	ldr	r1, [r3, #4]
 8018cde:	c203      	stmia	r2!, {r0, r1}
 8018ce0:	a81a      	add	r0, sp, #104	; 0x68
 8018ce2:	f7f8 ff71 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018ce6:	4629      	mov	r1, r5
 8018ce8:	a81c      	add	r0, sp, #112	; 0x70
 8018cea:	f7f8 ff95 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018cee:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8018cf2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 8018cf6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8018cfa:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 8018cfe:	bfdb      	ittet	le
 8018d00:	b29a      	uxthle	r2, r3
 8018d02:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8018d06:	2201      	movgt	r2, #1
 8018d08:	fb91 f2f2 	sdivle	r2, r1, r2
 8018d0c:	9201      	str	r2, [sp, #4]
 8018d0e:	9801      	ldr	r0, [sp, #4]
 8018d10:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8018d14:	9901      	ldr	r1, [sp, #4]
 8018d16:	fb92 f0f0 	sdiv	r0, r2, r0
 8018d1a:	b280      	uxth	r0, r0
 8018d1c:	440e      	add	r6, r1
 8018d1e:	9010      	str	r0, [sp, #64]	; 0x40
 8018d20:	3e01      	subs	r6, #1
 8018d22:	9801      	ldr	r0, [sp, #4]
 8018d24:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018d26:	fb05 2510 	mls	r5, r5, r0, r2
 8018d2a:	fb96 f6f1 	sdiv	r6, r6, r1
 8018d2e:	fb15 f503 	smulbb	r5, r5, r3
 8018d32:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8018d36:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8018d3a:	3601      	adds	r6, #1
 8018d3c:	440d      	add	r5, r1
 8018d3e:	4419      	add	r1, r3
 8018d40:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8018d44:	b2b6      	uxth	r6, r6
 8018d46:	441a      	add	r2, r3
 8018d48:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8018d4c:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8018d50:	b2ad      	uxth	r5, r5
 8018d52:	9304      	str	r3, [sp, #16]
 8018d54:	4b96      	ldr	r3, [pc, #600]	; (8018fb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8018d56:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8018d5a:	6818      	ldr	r0, [r3, #0]
 8018d5c:	6803      	ldr	r3, [r0, #0]
 8018d5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018d60:	4798      	blx	r3
 8018d62:	4b94      	ldr	r3, [pc, #592]	; (8018fb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 8018d64:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8018d68:	2d00      	cmp	r5, #0
 8018d6a:	881a      	ldrh	r2, [r3, #0]
 8018d6c:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8018d70:	fb02 f707 	mul.w	r7, r2, r7
 8018d74:	fb02 c101 	mla	r1, r2, r1, ip
 8018d78:	9318      	str	r3, [sp, #96]	; 0x60
 8018d7a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8018d7e:	4b8e      	ldr	r3, [pc, #568]	; (8018fb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 8018d80:	bf18      	it	ne
 8018d82:	2100      	movne	r1, #0
 8018d84:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8018d88:	eba3 0304 	sub.w	r3, r3, r4
 8018d8c:	920b      	str	r2, [sp, #44]	; 0x2c
 8018d8e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018d90:	9319      	str	r3, [sp, #100]	; 0x64
 8018d92:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8018d96:	f106 0204 	add.w	r2, r6, #4
 8018d9a:	9206      	str	r2, [sp, #24]
 8018d9c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018d9e:	ea6f 0202 	mvn.w	r2, r2
 8018da2:	b2d2      	uxtb	r2, r2
 8018da4:	9215      	str	r2, [sp, #84]	; 0x54
 8018da6:	9a04      	ldr	r2, [sp, #16]
 8018da8:	bf08      	it	eq
 8018daa:	4611      	moveq	r1, r2
 8018dac:	2200      	movs	r2, #0
 8018dae:	b289      	uxth	r1, r1
 8018db0:	920d      	str	r2, [sp, #52]	; 0x34
 8018db2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018db4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018db6:	fa12 f383 	uxtah	r3, r2, r3
 8018dba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018dbc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8018dc0:	3304      	adds	r3, #4
 8018dc2:	9307      	str	r3, [sp, #28]
 8018dc4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018dc6:	455b      	cmp	r3, fp
 8018dc8:	f240 817b 	bls.w	80190c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 8018dcc:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8018dd0:	f04f 0801 	mov.w	r8, #1
 8018dd4:	9a01      	ldr	r2, [sp, #4]
 8018dd6:	9807      	ldr	r0, [sp, #28]
 8018dd8:	46c4      	mov	ip, r8
 8018dda:	f8cd 8008 	str.w	r8, [sp, #8]
 8018dde:	7800      	ldrb	r0, [r0, #0]
 8018de0:	fbb5 f3f3 	udiv	r3, r5, r3
 8018de4:	1ad3      	subs	r3, r2, r3
 8018de6:	9011      	str	r0, [sp, #68]	; 0x44
 8018de8:	3001      	adds	r0, #1
 8018dea:	b29b      	uxth	r3, r3
 8018dec:	9005      	str	r0, [sp, #20]
 8018dee:	9316      	str	r3, [sp, #88]	; 0x58
 8018df0:	9b07      	ldr	r3, [sp, #28]
 8018df2:	785a      	ldrb	r2, [r3, #1]
 8018df4:	789b      	ldrb	r3, [r3, #2]
 8018df6:	021b      	lsls	r3, r3, #8
 8018df8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8018dfc:	9a07      	ldr	r2, [sp, #28]
 8018dfe:	78d2      	ldrb	r2, [r2, #3]
 8018e00:	4313      	orrs	r3, r2
 8018e02:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018e04:	441a      	add	r2, r3
 8018e06:	1c50      	adds	r0, r2, #1
 8018e08:	7852      	ldrb	r2, [r2, #1]
 8018e0a:	9003      	str	r0, [sp, #12]
 8018e0c:	0212      	lsls	r2, r2, #8
 8018e0e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018e10:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8018e14:	5cc3      	ldrb	r3, [r0, r3]
 8018e16:	431a      	orrs	r2, r3
 8018e18:	b293      	uxth	r3, r2
 8018e1a:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8018e1e:	930c      	str	r3, [sp, #48]	; 0x30
 8018e20:	2300      	movs	r3, #0
 8018e22:	9308      	str	r3, [sp, #32]
 8018e24:	461a      	mov	r2, r3
 8018e26:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8018e2a:	930e      	str	r3, [sp, #56]	; 0x38
 8018e2c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8018e30:	930f      	str	r3, [sp, #60]	; 0x3c
 8018e32:	2d00      	cmp	r5, #0
 8018e34:	d07d      	beq.n	8018f32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 8018e36:	45ac      	cmp	ip, r5
 8018e38:	d26d      	bcs.n	8018f16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 8018e3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018e3c:	eba5 050c 	sub.w	r5, r5, ip
 8018e40:	4608      	mov	r0, r1
 8018e42:	455b      	cmp	r3, fp
 8018e44:	b2ad      	uxth	r5, r5
 8018e46:	d802      	bhi.n	8018e4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 8018e48:	e071      	b.n	8018f2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 8018e4a:	2b00      	cmp	r3, #0
 8018e4c:	d15d      	bne.n	8018f0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8018e4e:	9b03      	ldr	r3, [sp, #12]
 8018e50:	9a02      	ldr	r2, [sp, #8]
 8018e52:	785b      	ldrb	r3, [r3, #1]
 8018e54:	f1c2 0207 	rsb	r2, r2, #7
 8018e58:	9902      	ldr	r1, [sp, #8]
 8018e5a:	4093      	lsls	r3, r2
 8018e5c:	005b      	lsls	r3, r3, #1
 8018e5e:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8018e62:	9b03      	ldr	r3, [sp, #12]
 8018e64:	781b      	ldrb	r3, [r3, #0]
 8018e66:	410b      	asrs	r3, r1
 8018e68:	3101      	adds	r1, #1
 8018e6a:	b2c9      	uxtb	r1, r1
 8018e6c:	b2db      	uxtb	r3, r3
 8018e6e:	2908      	cmp	r1, #8
 8018e70:	9102      	str	r1, [sp, #8]
 8018e72:	9903      	ldr	r1, [sp, #12]
 8018e74:	ea43 0302 	orr.w	r3, r3, r2
 8018e78:	bf0c      	ite	eq
 8018e7a:	3102      	addeq	r1, #2
 8018e7c:	3101      	addne	r1, #1
 8018e7e:	b29a      	uxth	r2, r3
 8018e80:	bf05      	ittet	eq
 8018e82:	9103      	streq	r1, [sp, #12]
 8018e84:	2100      	moveq	r1, #0
 8018e86:	9103      	strne	r1, [sp, #12]
 8018e88:	9102      	streq	r1, [sp, #8]
 8018e8a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018e8c:	4291      	cmp	r1, r2
 8018e8e:	d30a      	bcc.n	8018ea6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8018e90:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8018e94:	2301      	movs	r3, #1
 8018e96:	9905      	ldr	r1, [sp, #20]
 8018e98:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8018e9c:	d30f      	bcc.n	8018ebe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 8018e9e:	2100      	movs	r1, #0
 8018ea0:	4698      	mov	r8, r3
 8018ea2:	9100      	str	r1, [sp, #0]
 8018ea4:	e032      	b.n	8018f0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 8018ea6:	9b05      	ldr	r3, [sp, #20]
 8018ea8:	429a      	cmp	r2, r3
 8018eaa:	d318      	bcc.n	8018ede <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 8018eac:	eb04 0308 	add.w	r3, r4, r8
 8018eb0:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8018eb4:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8018eb8:	f108 0301 	add.w	r3, r8, #1
 8018ebc:	b29b      	uxth	r3, r3
 8018ebe:	9905      	ldr	r1, [sp, #20]
 8018ec0:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8018ec4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8018ec8:	710e      	strb	r6, [r1, #4]
 8018eca:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8018ecc:	80ce      	strh	r6, [r1, #6]
 8018ece:	f108 0601 	add.w	r6, r8, #1
 8018ed2:	714e      	strb	r6, [r1, #5]
 8018ed4:	9905      	ldr	r1, [sp, #20]
 8018ed6:	3101      	adds	r1, #1
 8018ed8:	b289      	uxth	r1, r1
 8018eda:	9105      	str	r1, [sp, #20]
 8018edc:	e7df      	b.n	8018e9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8018ede:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8018ee2:	4611      	mov	r1, r2
 8018ee4:	795b      	ldrb	r3, [r3, #5]
 8018ee6:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8018eea:	4426      	add	r6, r4
 8018eec:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8018eee:	4437      	add	r7, r6
 8018ef0:	2f00      	cmp	r7, #0
 8018ef2:	dd06      	ble.n	8018f02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 8018ef4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8018ef8:	790f      	ldrb	r7, [r1, #4]
 8018efa:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8018efe:	88c9      	ldrh	r1, [r1, #6]
 8018f00:	e7f4      	b.n	8018eec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 8018f02:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8018f06:	b29b      	uxth	r3, r3
 8018f08:	e7c5      	b.n	8018e96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 8018f0a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018f0c:	920c      	str	r2, [sp, #48]	; 0x30
 8018f0e:	4601      	mov	r1, r0
 8018f10:	9a00      	ldr	r2, [sp, #0]
 8018f12:	469c      	mov	ip, r3
 8018f14:	e78d      	b.n	8018e32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 8018f16:	ebac 0305 	sub.w	r3, ip, r5
 8018f1a:	1957      	adds	r7, r2, r5
 8018f1c:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8018f20:	b2ba      	uxth	r2, r7
 8018f22:	b29b      	uxth	r3, r3
 8018f24:	9200      	str	r2, [sp, #0]
 8018f26:	2500      	movs	r5, #0
 8018f28:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018f2a:	455a      	cmp	r2, fp
 8018f2c:	d88d      	bhi.n	8018e4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8018f2e:	4601      	mov	r1, r0
 8018f30:	e748      	b.n	8018dc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 8018f32:	458c      	cmp	ip, r1
 8018f34:	bf27      	ittee	cs
 8018f36:	ebac 0301 	subcs.w	r3, ip, r1
 8018f3a:	4628      	movcs	r0, r5
 8018f3c:	eba1 000c 	subcc.w	r0, r1, ip
 8018f40:	462b      	movcc	r3, r5
 8018f42:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8018f44:	bf27      	ittee	cs
 8018f46:	b29b      	uxthcs	r3, r3
 8018f48:	9109      	strcs	r1, [sp, #36]	; 0x24
 8018f4a:	b280      	uxthcc	r0, r0
 8018f4c:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 8018f50:	2dff      	cmp	r5, #255	; 0xff
 8018f52:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018f54:	eb02 0705 	add.w	r7, r2, r5
 8018f58:	b2bd      	uxth	r5, r7
 8018f5a:	9500      	str	r5, [sp, #0]
 8018f5c:	d12e      	bne.n	8018fbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 8018f5e:	465e      	mov	r6, fp
 8018f60:	9d00      	ldr	r5, [sp, #0]
 8018f62:	42aa      	cmp	r2, r5
 8018f64:	f040 8083 	bne.w	801906e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 8018f68:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018f6a:	458c      	cmp	ip, r1
 8018f6c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8018f70:	d3d9      	bcc.n	8018f26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8018f72:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8018f74:	9904      	ldr	r1, [sp, #16]
 8018f76:	8812      	ldrh	r2, [r2, #0]
 8018f78:	1a52      	subs	r2, r2, r1
 8018f7a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8018f7c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8018f80:	9a08      	ldr	r2, [sp, #32]
 8018f82:	3201      	adds	r2, #1
 8018f84:	428a      	cmp	r2, r1
 8018f86:	9208      	str	r2, [sp, #32]
 8018f88:	f040 8091 	bne.w	80190ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 8018f8c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8018f90:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 8018f94:	9b04      	ldr	r3, [sp, #16]
 8018f96:	eba5 050c 	sub.w	r5, r5, ip
 8018f9a:	b2ad      	uxth	r5, r5
 8018f9c:	2d00      	cmp	r5, #0
 8018f9e:	bf08      	it	eq
 8018fa0:	4619      	moveq	r1, r3
 8018fa2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018fa4:	bf18      	it	ne
 8018fa6:	2100      	movne	r1, #0
 8018fa8:	3301      	adds	r3, #1
 8018faa:	b289      	uxth	r1, r1
 8018fac:	930d      	str	r3, [sp, #52]	; 0x34
 8018fae:	e700      	b.n	8018db2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 8018fb0:	2003242c 	.word	0x2003242c
 8018fb4:	20032426 	.word	0x20032426
 8018fb8:	fffff7fb 	.word	0xfffff7fb
 8018fbc:	46d9      	mov	r9, fp
 8018fbe:	9d00      	ldr	r5, [sp, #0]
 8018fc0:	42aa      	cmp	r2, r5
 8018fc2:	d0d1      	beq.n	8018f68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 8018fc4:	1c55      	adds	r5, r2, #1
 8018fc6:	4422      	add	r2, r4
 8018fc8:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 8018fcc:	9a06      	ldr	r2, [sp, #24]
 8018fce:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018fd2:	9517      	str	r5, [sp, #92]	; 0x5c
 8018fd4:	4472      	add	r2, lr
 8018fd6:	9212      	str	r2, [sp, #72]	; 0x48
 8018fd8:	f8b9 2000 	ldrh.w	r2, [r9]
 8018fdc:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8018fde:	1216      	asrs	r6, r2, #8
 8018fe0:	f897 a002 	ldrb.w	sl, [r7, #2]
 8018fe4:	10d5      	asrs	r5, r2, #3
 8018fe6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8018fe8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018fec:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018ff0:	00d2      	lsls	r2, r2, #3
 8018ff2:	fb1a fa07 	smulbb	sl, sl, r7
 8018ff6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018ffa:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8018ffc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8019000:	b2d2      	uxtb	r2, r2
 8019002:	fb06 a607 	mla	r6, r6, r7, sl
 8019006:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8019008:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801900c:	f897 a001 	ldrb.w	sl, [r7, #1]
 8019010:	b2b6      	uxth	r6, r6
 8019012:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8019014:	fb1a fa07 	smulbb	sl, sl, r7
 8019018:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801901a:	fb05 a507 	mla	r5, r5, r7, sl
 801901e:	9f06      	ldr	r7, [sp, #24]
 8019020:	f106 0a01 	add.w	sl, r6, #1
 8019024:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019028:	b2ad      	uxth	r5, r5
 801902a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801902c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8019030:	f105 0a01 	add.w	sl, r5, #1
 8019034:	fb1e fe07 	smulbb	lr, lr, r7
 8019038:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801903a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801903e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8019042:	fb02 e207 	mla	r2, r2, r7, lr
 8019046:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801904a:	b292      	uxth	r2, r2
 801904c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019050:	f102 0e01 	add.w	lr, r2, #1
 8019054:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8019058:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801905c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8019060:	ea4e 0606 	orr.w	r6, lr, r6
 8019064:	ea46 060a 	orr.w	r6, r6, sl
 8019068:	f829 6b02 	strh.w	r6, [r9], #2
 801906c:	e7a7      	b.n	8018fbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 801906e:	f102 0e01 	add.w	lr, r2, #1
 8019072:	4422      	add	r2, r4
 8019074:	9f06      	ldr	r7, [sp, #24]
 8019076:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801907a:	9a06      	ldr	r2, [sp, #24]
 801907c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019080:	eb02 0a05 	add.w	sl, r2, r5
 8019084:	4a13      	ldr	r2, [pc, #76]	; (80190d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 8019086:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801908a:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801908e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019092:	00d2      	lsls	r2, r2, #3
 8019094:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019098:	ea49 0202 	orr.w	r2, r9, r2
 801909c:	f817 9005 	ldrb.w	r9, [r7, r5]
 80190a0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80190a4:	f826 2b02 	strh.w	r2, [r6], #2
 80190a8:	fa1f f28e 	uxth.w	r2, lr
 80190ac:	e758      	b.n	8018f60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 80190ae:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80190b2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 80190b6:	1a2d      	subs	r5, r5, r0
 80190b8:	b2ad      	uxth	r5, r5
 80190ba:	2d00      	cmp	r5, #0
 80190bc:	bf18      	it	ne
 80190be:	2000      	movne	r0, #0
 80190c0:	e732      	b.n	8018f28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 80190c2:	4b05      	ldr	r3, [pc, #20]	; (80190d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 80190c4:	6818      	ldr	r0, [r3, #0]
 80190c6:	6803      	ldr	r3, [r0, #0]
 80190c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80190ca:	4798      	blx	r3
 80190cc:	b01f      	add	sp, #124	; 0x7c
 80190ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190d2:	bf00      	nop
 80190d4:	fffff800 	.word	0xfffff800
 80190d8:	2003242c 	.word	0x2003242c

080190dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80190dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190e0:	b091      	sub	sp, #68	; 0x44
 80190e2:	469b      	mov	fp, r3
 80190e4:	4616      	mov	r6, r2
 80190e6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80190ea:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80190ee:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80190f2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 80190f6:	4604      	mov	r4, r0
 80190f8:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80190fc:	4640      	mov	r0, r8
 80190fe:	460d      	mov	r5, r1
 8019100:	4659      	mov	r1, fp
 8019102:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8019106:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801910a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801910e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8019112:	f7f5 fd53 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 8019116:	4631      	mov	r1, r6
 8019118:	4640      	mov	r0, r8
 801911a:	f7f5 fd4f 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 801911e:	4b74      	ldr	r3, [pc, #464]	; (80192f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8019120:	8818      	ldrh	r0, [r3, #0]
 8019122:	4b74      	ldr	r3, [pc, #464]	; (80192f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8019124:	b202      	sxth	r2, r0
 8019126:	8819      	ldrh	r1, [r3, #0]
 8019128:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801912c:	b20e      	sxth	r6, r1
 801912e:	2b00      	cmp	r3, #0
 8019130:	da07      	bge.n	8019142 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8019132:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8019136:	4463      	add	r3, ip
 8019138:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801913c:	2300      	movs	r3, #0
 801913e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8019142:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8019146:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801914a:	1ad2      	subs	r2, r2, r3
 801914c:	4594      	cmp	ip, r2
 801914e:	bfc4      	itt	gt
 8019150:	1ac2      	subgt	r2, r0, r3
 8019152:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8019156:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801915a:	2a00      	cmp	r2, #0
 801915c:	da07      	bge.n	801916e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801915e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8019162:	4462      	add	r2, ip
 8019164:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8019168:	2200      	movs	r2, #0
 801916a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801916e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8019172:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8019176:	eba6 060a 	sub.w	r6, r6, sl
 801917a:	42b2      	cmp	r2, r6
 801917c:	bfc4      	itt	gt
 801917e:	eba1 020a 	subgt.w	r2, r1, sl
 8019182:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8019186:	4a5c      	ldr	r2, [pc, #368]	; (80192f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8019188:	7812      	ldrb	r2, [r2, #0]
 801918a:	b9a2      	cbnz	r2, 80191b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801918c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8019190:	4286      	cmp	r6, r0
 8019192:	4640      	mov	r0, r8
 8019194:	9303      	str	r3, [sp, #12]
 8019196:	bf14      	ite	ne
 8019198:	2600      	movne	r6, #0
 801919a:	2601      	moveq	r6, #1
 801919c:	f7f5 fd51 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 80191a0:	9b03      	ldr	r3, [sp, #12]
 80191a2:	b160      	cbz	r0, 80191be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80191a4:	2300      	movs	r3, #0
 80191a6:	8023      	strh	r3, [r4, #0]
 80191a8:	8063      	strh	r3, [r4, #2]
 80191aa:	80a3      	strh	r3, [r4, #4]
 80191ac:	4620      	mov	r0, r4
 80191ae:	80e3      	strh	r3, [r4, #6]
 80191b0:	b011      	add	sp, #68	; 0x44
 80191b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80191b6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80191ba:	428e      	cmp	r6, r1
 80191bc:	e7e9      	b.n	8019192 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80191be:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80191c2:	a90e      	add	r1, sp, #56	; 0x38
 80191c4:	900e      	str	r0, [sp, #56]	; 0x38
 80191c6:	a80c      	add	r0, sp, #48	; 0x30
 80191c8:	9205      	str	r2, [sp, #20]
 80191ca:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80191ce:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 80191d2:	9206      	str	r2, [sp, #24]
 80191d4:	f8bb 2000 	ldrh.w	r2, [fp]
 80191d8:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80191dc:	1a9b      	subs	r3, r3, r2
 80191de:	b21b      	sxth	r3, r3
 80191e0:	9303      	str	r3, [sp, #12]
 80191e2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80191e6:	f8df b118 	ldr.w	fp, [pc, #280]	; 8019300 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80191ea:	ebaa 0a03 	sub.w	sl, sl, r3
 80191ee:	fa0f f38a 	sxth.w	r3, sl
 80191f2:	9304      	str	r3, [sp, #16]
 80191f4:	9b03      	ldr	r3, [sp, #12]
 80191f6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80191fa:	9b04      	ldr	r3, [sp, #16]
 80191fc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019200:	9b05      	ldr	r3, [sp, #20]
 8019202:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8019206:	9b06      	ldr	r3, [sp, #24]
 8019208:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801920c:	f7f8 fd04 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019210:	4640      	mov	r0, r8
 8019212:	f7f8 fcd9 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019216:	a80e      	add	r0, sp, #56	; 0x38
 8019218:	f7f8 fcd6 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801921c:	4b37      	ldr	r3, [pc, #220]	; (80192fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801921e:	4628      	mov	r0, r5
 8019220:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8019224:	881b      	ldrh	r3, [r3, #0]
 8019226:	9307      	str	r3, [sp, #28]
 8019228:	682b      	ldr	r3, [r5, #0]
 801922a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801922c:	4798      	blx	r3
 801922e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8019232:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8019236:	4681      	mov	r9, r0
 8019238:	f8db 0000 	ldr.w	r0, [fp]
 801923c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8019240:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8019242:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8019246:	6803      	ldr	r3, [r0, #0]
 8019248:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801924a:	4798      	blx	r3
 801924c:	4607      	mov	r7, r0
 801924e:	f8db 0000 	ldr.w	r0, [fp]
 8019252:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8019256:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801925a:	6803      	ldr	r3, [r0, #0]
 801925c:	9109      	str	r1, [sp, #36]	; 0x24
 801925e:	9208      	str	r2, [sp, #32]
 8019260:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019262:	4798      	blx	r3
 8019264:	f010 0f01 	tst.w	r0, #1
 8019268:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801926c:	d012      	beq.n	8019294 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801926e:	f8db 0000 	ldr.w	r0, [fp]
 8019272:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8019276:	6803      	ldr	r3, [r0, #0]
 8019278:	9200      	str	r2, [sp, #0]
 801927a:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801927c:	462b      	mov	r3, r5
 801927e:	e898 0006 	ldmia.w	r8, {r1, r2}
 8019282:	47b0      	blx	r6
 8019284:	9b03      	ldr	r3, [sp, #12]
 8019286:	8023      	strh	r3, [r4, #0]
 8019288:	9b04      	ldr	r3, [sp, #16]
 801928a:	8063      	strh	r3, [r4, #2]
 801928c:	9b05      	ldr	r3, [sp, #20]
 801928e:	80a3      	strh	r3, [r4, #4]
 8019290:	9b06      	ldr	r3, [sp, #24]
 8019292:	e78b      	b.n	80191ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8019294:	fb09 f202 	mul.w	r2, r9, r2
 8019298:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801929c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80192a0:	440f      	add	r7, r1
 80192a2:	b166      	cbz	r6, 80192be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80192a4:	9a07      	ldr	r2, [sp, #28]
 80192a6:	4592      	cmp	sl, r2
 80192a8:	d109      	bne.n	80192be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80192aa:	f8db 0000 	ldr.w	r0, [fp]
 80192ae:	fb09 f303 	mul.w	r3, r9, r3
 80192b2:	4629      	mov	r1, r5
 80192b4:	6802      	ldr	r2, [r0, #0]
 80192b6:	6b56      	ldr	r6, [r2, #52]	; 0x34
 80192b8:	463a      	mov	r2, r7
 80192ba:	47b0      	blx	r6
 80192bc:	e7e2      	b.n	8019284 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80192be:	fb0a f303 	mul.w	r3, sl, r3
 80192c2:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80192c6:	f8df b038 	ldr.w	fp, [pc, #56]	; 8019300 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80192ca:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80192ce:	4545      	cmp	r5, r8
 80192d0:	d2d8      	bcs.n	8019284 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80192d2:	f8db 0000 	ldr.w	r0, [fp]
 80192d6:	4629      	mov	r1, r5
 80192d8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80192dc:	4435      	add	r5, r6
 80192de:	6802      	ldr	r2, [r0, #0]
 80192e0:	005b      	lsls	r3, r3, #1
 80192e2:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 80192e6:	463a      	mov	r2, r7
 80192e8:	47d0      	blx	sl
 80192ea:	444f      	add	r7, r9
 80192ec:	e7ef      	b.n	80192ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80192ee:	bf00      	nop
 80192f0:	20032420 	.word	0x20032420
 80192f4:	20032422 	.word	0x20032422
 80192f8:	20032424 	.word	0x20032424
 80192fc:	20032426 	.word	0x20032426
 8019300:	2003242c 	.word	0x2003242c

08019304 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8019304:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019306:	4606      	mov	r6, r0
 8019308:	b087      	sub	sp, #28
 801930a:	460c      	mov	r4, r1
 801930c:	4617      	mov	r7, r2
 801930e:	461d      	mov	r5, r3
 8019310:	b333      	cbz	r3, 8019360 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8019312:	4608      	mov	r0, r1
 8019314:	f7f5 fc95 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019318:	bb10      	cbnz	r0, 8019360 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801931a:	6820      	ldr	r0, [r4, #0]
 801931c:	ab04      	add	r3, sp, #16
 801931e:	6861      	ldr	r1, [r4, #4]
 8019320:	4c1b      	ldr	r4, [pc, #108]	; (8019390 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8019322:	c303      	stmia	r3!, {r0, r1}
 8019324:	a804      	add	r0, sp, #16
 8019326:	f7f8 fc4f 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801932a:	6820      	ldr	r0, [r4, #0]
 801932c:	6803      	ldr	r3, [r0, #0]
 801932e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019330:	4798      	blx	r3
 8019332:	2dff      	cmp	r5, #255	; 0xff
 8019334:	d016      	beq.n	8019364 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8019336:	f010 0f08 	tst.w	r0, #8
 801933a:	6820      	ldr	r0, [r4, #0]
 801933c:	d015      	beq.n	801936a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801933e:	2400      	movs	r4, #0
 8019340:	6801      	ldr	r1, [r0, #0]
 8019342:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8019346:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801934a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801934e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8019352:	9401      	str	r4, [sp, #4]
 8019354:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8019358:	9400      	str	r4, [sp, #0]
 801935a:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801935c:	4639      	mov	r1, r7
 801935e:	47a0      	blx	r4
 8019360:	b007      	add	sp, #28
 8019362:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019364:	f010 0f02 	tst.w	r0, #2
 8019368:	e7e7      	b.n	801933a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801936a:	6803      	ldr	r3, [r0, #0]
 801936c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801936e:	4798      	blx	r3
 8019370:	4b08      	ldr	r3, [pc, #32]	; (8019394 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8019372:	4601      	mov	r1, r0
 8019374:	4630      	mov	r0, r6
 8019376:	881a      	ldrh	r2, [r3, #0]
 8019378:	6833      	ldr	r3, [r6, #0]
 801937a:	e9cd 7500 	strd	r7, r5, [sp]
 801937e:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8019380:	ab04      	add	r3, sp, #16
 8019382:	47a8      	blx	r5
 8019384:	6820      	ldr	r0, [r4, #0]
 8019386:	6803      	ldr	r3, [r0, #0]
 8019388:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801938a:	4798      	blx	r3
 801938c:	e7e8      	b.n	8019360 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801938e:	bf00      	nop
 8019390:	2003242c 	.word	0x2003242c
 8019394:	20032426 	.word	0x20032426

08019398 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8019398:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801939c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 80193a0:	4688      	mov	r8, r1
 80193a2:	4614      	mov	r4, r2
 80193a4:	461d      	mov	r5, r3
 80193a6:	9e08      	ldr	r6, [sp, #32]
 80193a8:	2f00      	cmp	r7, #0
 80193aa:	f000 80ab 	beq.w	8019504 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80193ae:	4618      	mov	r0, r3
 80193b0:	f7f5 fc47 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 80193b4:	2800      	cmp	r0, #0
 80193b6:	f040 80a5 	bne.w	8019504 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80193ba:	f9b5 1000 	ldrsh.w	r1, [r5]
 80193be:	2fff      	cmp	r7, #255	; 0xff
 80193c0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80193c4:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80193c8:	fb04 1303 	mla	r3, r4, r3, r1
 80193cc:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80193d0:	eba4 0200 	sub.w	r2, r4, r0
 80193d4:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80193d8:	fb04 f505 	mul.w	r5, r4, r5
 80193dc:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80193e0:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80193e4:	d04a      	beq.n	801947c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 80193e6:	b2bc      	uxth	r4, r7
 80193e8:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 80193ec:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80193f0:	fa5f f788 	uxtb.w	r7, r8
 80193f4:	b2f3      	uxtb	r3, r6
 80193f6:	0040      	lsls	r0, r0, #1
 80193f8:	fb0e fe04 	mul.w	lr, lr, r4
 80193fc:	4367      	muls	r7, r4
 80193fe:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8019402:	4363      	muls	r3, r4
 8019404:	fa1f fc8c 	uxth.w	ip, ip
 8019408:	42a9      	cmp	r1, r5
 801940a:	d27b      	bcs.n	8019504 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801940c:	eb01 0900 	add.w	r9, r1, r0
 8019410:	4549      	cmp	r1, r9
 8019412:	d231      	bcs.n	8019478 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8019414:	880a      	ldrh	r2, [r1, #0]
 8019416:	1214      	asrs	r4, r2, #8
 8019418:	10d6      	asrs	r6, r2, #3
 801941a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801941e:	00d2      	lsls	r2, r2, #3
 8019420:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019424:	b2d2      	uxtb	r2, r2
 8019426:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801942a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801942e:	fb14 f40c 	smulbb	r4, r4, ip
 8019432:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8019436:	fb12 f20c 	smulbb	r2, r2, ip
 801943a:	fb16 f60c 	smulbb	r6, r6, ip
 801943e:	4474      	add	r4, lr
 8019440:	441a      	add	r2, r3
 8019442:	b2a4      	uxth	r4, r4
 8019444:	443e      	add	r6, r7
 8019446:	b292      	uxth	r2, r2
 8019448:	f104 0a01 	add.w	sl, r4, #1
 801944c:	b2b6      	uxth	r6, r6
 801944e:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019452:	f102 0a01 	add.w	sl, r2, #1
 8019456:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801945a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801945e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019462:	4322      	orrs	r2, r4
 8019464:	1c74      	adds	r4, r6, #1
 8019466:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801946a:	0976      	lsrs	r6, r6, #5
 801946c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019470:	4332      	orrs	r2, r6
 8019472:	f821 2b02 	strh.w	r2, [r1], #2
 8019476:	e7cb      	b.n	8019410 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8019478:	4441      	add	r1, r8
 801947a:	e7c5      	b.n	8019408 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 801947c:	0973      	lsrs	r3, r6, #5
 801947e:	4f22      	ldr	r7, [pc, #136]	; (8019508 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 8019480:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019484:	ea08 0707 	and.w	r7, r8, r7
 8019488:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801948c:	433b      	orrs	r3, r7
 801948e:	07e7      	lsls	r7, r4, #31
 8019490:	ea43 0306 	orr.w	r3, r3, r6
 8019494:	b29b      	uxth	r3, r3
 8019496:	d50b      	bpl.n	80194b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 8019498:	0040      	lsls	r0, r0, #1
 801949a:	0052      	lsls	r2, r2, #1
 801949c:	42a9      	cmp	r1, r5
 801949e:	d231      	bcs.n	8019504 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80194a0:	180c      	adds	r4, r1, r0
 80194a2:	42a1      	cmp	r1, r4
 80194a4:	d202      	bcs.n	80194ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80194a6:	f821 3b02 	strh.w	r3, [r1], #2
 80194aa:	e7fa      	b.n	80194a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 80194ac:	4411      	add	r1, r2
 80194ae:	e7f5      	b.n	801949c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 80194b0:	078e      	lsls	r6, r1, #30
 80194b2:	d008      	beq.n	80194c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 80194b4:	0066      	lsls	r6, r4, #1
 80194b6:	460a      	mov	r2, r1
 80194b8:	42aa      	cmp	r2, r5
 80194ba:	d202      	bcs.n	80194c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80194bc:	8013      	strh	r3, [r2, #0]
 80194be:	4432      	add	r2, r6
 80194c0:	e7fa      	b.n	80194b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 80194c2:	3102      	adds	r1, #2
 80194c4:	3801      	subs	r0, #1
 80194c6:	07c2      	lsls	r2, r0, #31
 80194c8:	d50b      	bpl.n	80194e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 80194ca:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 80194ce:	0066      	lsls	r6, r4, #1
 80194d0:	3a01      	subs	r2, #1
 80194d2:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80194d6:	42aa      	cmp	r2, r5
 80194d8:	d202      	bcs.n	80194e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 80194da:	8013      	strh	r3, [r2, #0]
 80194dc:	4432      	add	r2, r6
 80194de:	e7fa      	b.n	80194d6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 80194e0:	3801      	subs	r0, #1
 80194e2:	b178      	cbz	r0, 8019504 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80194e4:	1040      	asrs	r0, r0, #1
 80194e6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80194ea:	0080      	lsls	r0, r0, #2
 80194ec:	0064      	lsls	r4, r4, #1
 80194ee:	42a9      	cmp	r1, r5
 80194f0:	d208      	bcs.n	8019504 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80194f2:	180e      	adds	r6, r1, r0
 80194f4:	460a      	mov	r2, r1
 80194f6:	42b2      	cmp	r2, r6
 80194f8:	d202      	bcs.n	8019500 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80194fa:	f842 3b04 	str.w	r3, [r2], #4
 80194fe:	e7fa      	b.n	80194f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 8019500:	4421      	add	r1, r4
 8019502:	e7f4      	b.n	80194ee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 8019504:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019508:	00fff800 	.word	0x00fff800

0801950c <_ZN8touchgfx8LCD16bppC1Ev>:
 801950c:	2200      	movs	r2, #0
 801950e:	4912      	ldr	r1, [pc, #72]	; (8019558 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8019510:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8019514:	6001      	str	r1, [r0, #0]
 8019516:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801951a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801951e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8019522:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8019526:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 801952a:	e9c0 220d 	strd	r2, r2, [r0, #52]	; 0x34
 801952e:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8019532:	e9c0 2211 	strd	r2, r2, [r0, #68]	; 0x44
 8019536:	e9c0 2213 	strd	r2, r2, [r0, #76]	; 0x4c
 801953a:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 801953e:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8019542:	e9c0 2219 	strd	r2, r2, [r0, #100]	; 0x64
 8019546:	e9c0 221b 	strd	r2, r2, [r0, #108]	; 0x6c
 801954a:	e9c0 221d 	strd	r2, r2, [r0, #116]	; 0x74
 801954e:	e9c0 221f 	strd	r2, r2, [r0, #124]	; 0x7c
 8019552:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84
 8019556:	4770      	bx	lr
 8019558:	08026770 	.word	0x08026770

0801955c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801955c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019560:	b08d      	sub	sp, #52	; 0x34
 8019562:	460d      	mov	r5, r1
 8019564:	4604      	mov	r4, r0
 8019566:	4699      	mov	r9, r3
 8019568:	6808      	ldr	r0, [r1, #0]
 801956a:	ab08      	add	r3, sp, #32
 801956c:	6849      	ldr	r1, [r1, #4]
 801956e:	c303      	stmia	r3!, {r0, r1}
 8019570:	6810      	ldr	r0, [r2, #0]
 8019572:	ab0a      	add	r3, sp, #40	; 0x28
 8019574:	6851      	ldr	r1, [r2, #4]
 8019576:	c303      	stmia	r3!, {r0, r1}
 8019578:	a808      	add	r0, sp, #32
 801957a:	f7f8 fb25 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801957e:	4629      	mov	r1, r5
 8019580:	a80a      	add	r0, sp, #40	; 0x28
 8019582:	4d67      	ldr	r5, [pc, #412]	; (8019720 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8019584:	f7f8 fb48 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019588:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801958c:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8019590:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8019594:	6828      	ldr	r0, [r5, #0]
 8019596:	fb11 2103 	smlabb	r1, r1, r3, r2
 801959a:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801959e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80195a2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80195a6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80195aa:	440a      	add	r2, r1
 80195ac:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80195b0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80195b4:	4413      	add	r3, r2
 80195b6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80195ba:	6803      	ldr	r3, [r0, #0]
 80195bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80195be:	4798      	blx	r3
 80195c0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80195c4:	d119      	bne.n	80195fa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 80195c6:	f010 0f20 	tst.w	r0, #32
 80195ca:	6828      	ldr	r0, [r5, #0]
 80195cc:	d018      	beq.n	8019600 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80195ce:	2500      	movs	r5, #0
 80195d0:	6801      	ldr	r1, [r0, #0]
 80195d2:	b2b6      	uxth	r6, r6
 80195d4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80195d8:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80195dc:	9601      	str	r6, [sp, #4]
 80195de:	e9cd 9503 	strd	r9, r5, [sp, #12]
 80195e2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 80195e6:	9502      	str	r5, [sp, #8]
 80195e8:	fa1f f588 	uxth.w	r5, r8
 80195ec:	9500      	str	r5, [sp, #0]
 80195ee:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 80195f0:	4621      	mov	r1, r4
 80195f2:	47a8      	blx	r5
 80195f4:	b00d      	add	sp, #52	; 0x34
 80195f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80195fa:	f010 0f40 	tst.w	r0, #64	; 0x40
 80195fe:	e7e4      	b.n	80195ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8019600:	6803      	ldr	r3, [r0, #0]
 8019602:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019604:	4798      	blx	r3
 8019606:	4947      	ldr	r1, [pc, #284]	; (8019724 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8019608:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801960c:	880b      	ldrh	r3, [r1, #0]
 801960e:	468a      	mov	sl, r1
 8019610:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8019614:	fb03 5202 	mla	r2, r3, r2, r5
 8019618:	4373      	muls	r3, r6
 801961a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801961e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019622:	9307      	str	r3, [sp, #28]
 8019624:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8019628:	9306      	str	r3, [sp, #24]
 801962a:	9b07      	ldr	r3, [sp, #28]
 801962c:	4298      	cmp	r0, r3
 801962e:	d270      	bcs.n	8019712 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8019630:	9b06      	ldr	r3, [sp, #24]
 8019632:	4621      	mov	r1, r4
 8019634:	eb00 0b03 	add.w	fp, r0, r3
 8019638:	4558      	cmp	r0, fp
 801963a:	d25d      	bcs.n	80196f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801963c:	f851 4b04 	ldr.w	r4, [r1], #4
 8019640:	0e23      	lsrs	r3, r4, #24
 8019642:	d014      	beq.n	801966e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8019644:	2bff      	cmp	r3, #255	; 0xff
 8019646:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801964a:	d112      	bne.n	8019672 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801964c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019650:	d10f      	bne.n	8019672 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8019652:	0963      	lsrs	r3, r4, #5
 8019654:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8019658:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801965c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019660:	f02c 0c07 	bic.w	ip, ip, #7
 8019664:	ea43 0c0c 	orr.w	ip, r3, ip
 8019668:	ea4c 0404 	orr.w	r4, ip, r4
 801966c:	8004      	strh	r4, [r0, #0]
 801966e:	3002      	adds	r0, #2
 8019670:	e7e2      	b.n	8019638 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8019672:	fb09 f303 	mul.w	r3, r9, r3
 8019676:	8807      	ldrh	r7, [r0, #0]
 8019678:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801967c:	fa5f fc8c 	uxtb.w	ip, ip
 8019680:	1c5a      	adds	r2, r3, #1
 8019682:	123e      	asrs	r6, r7, #8
 8019684:	10fd      	asrs	r5, r7, #3
 8019686:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801968a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801968e:	00ff      	lsls	r7, r7, #3
 8019690:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019694:	1212      	asrs	r2, r2, #8
 8019696:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801969a:	b293      	uxth	r3, r2
 801969c:	43d2      	mvns	r2, r2
 801969e:	b2ff      	uxtb	r7, r7
 80196a0:	fb1e fe03 	smulbb	lr, lr, r3
 80196a4:	b2d2      	uxtb	r2, r2
 80196a6:	fb1c fc03 	smulbb	ip, ip, r3
 80196aa:	b2e4      	uxtb	r4, r4
 80196ac:	fb06 e602 	mla	r6, r6, r2, lr
 80196b0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80196b4:	fb14 f403 	smulbb	r4, r4, r3
 80196b8:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80196bc:	b2b6      	uxth	r6, r6
 80196be:	fb05 c502 	mla	r5, r5, r2, ip
 80196c2:	fb07 4702 	mla	r7, r7, r2, r4
 80196c6:	f106 0e01 	add.w	lr, r6, #1
 80196ca:	b2ad      	uxth	r5, r5
 80196cc:	b2bf      	uxth	r7, r7
 80196ce:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80196d2:	f105 0c01 	add.w	ip, r5, #1
 80196d6:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 80196da:	1c7e      	adds	r6, r7, #1
 80196dc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80196e0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80196e4:	096d      	lsrs	r5, r5, #5
 80196e6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80196ea:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80196ee:	ea46 060e 	orr.w	r6, r6, lr
 80196f2:	432e      	orrs	r6, r5
 80196f4:	8006      	strh	r6, [r0, #0]
 80196f6:	e7ba      	b.n	801966e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80196f8:	f8ba 3000 	ldrh.w	r3, [sl]
 80196fc:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8019700:	eba3 0308 	sub.w	r3, r3, r8
 8019704:	eba4 0408 	sub.w	r4, r4, r8
 8019708:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801970c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8019710:	e78b      	b.n	801962a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8019712:	4b03      	ldr	r3, [pc, #12]	; (8019720 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8019714:	6818      	ldr	r0, [r3, #0]
 8019716:	6803      	ldr	r3, [r0, #0]
 8019718:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801971a:	4798      	blx	r3
 801971c:	e76a      	b.n	80195f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801971e:	bf00      	nop
 8019720:	2003242c 	.word	0x2003242c
 8019724:	20032426 	.word	0x20032426

08019728 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8019728:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801972c:	b085      	sub	sp, #20
 801972e:	6810      	ldr	r0, [r2, #0]
 8019730:	460c      	mov	r4, r1
 8019732:	6851      	ldr	r1, [r2, #4]
 8019734:	466d      	mov	r5, sp
 8019736:	4616      	mov	r6, r2
 8019738:	c503      	stmia	r5!, {r0, r1}
 801973a:	6818      	ldr	r0, [r3, #0]
 801973c:	6859      	ldr	r1, [r3, #4]
 801973e:	c503      	stmia	r5!, {r0, r1}
 8019740:	4668      	mov	r0, sp
 8019742:	4d2e      	ldr	r5, [pc, #184]	; (80197fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8019744:	f7f8 fa40 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019748:	4631      	mov	r1, r6
 801974a:	a802      	add	r0, sp, #8
 801974c:	4e2c      	ldr	r6, [pc, #176]	; (8019800 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801974e:	f7f8 fa63 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019752:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8019756:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801975a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801975e:	6828      	ldr	r0, [r5, #0]
 8019760:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019764:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8019768:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801976c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8019770:	f8bd 1000 	ldrh.w	r1, [sp]
 8019774:	440a      	add	r2, r1
 8019776:	f8ad 2008 	strh.w	r2, [sp, #8]
 801977a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801977e:	4413      	add	r3, r2
 8019780:	f8ad 300a 	strh.w	r3, [sp, #10]
 8019784:	6803      	ldr	r3, [r0, #0]
 8019786:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019788:	4798      	blx	r3
 801978a:	8833      	ldrh	r3, [r6, #0]
 801978c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8019790:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8019794:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8019798:	f8df e068 	ldr.w	lr, [pc, #104]	; 8019804 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801979c:	fb03 1202 	mla	r2, r3, r2, r1
 80197a0:	fb08 f303 	mul.w	r3, r8, r3
 80197a4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80197a8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80197ac:	4298      	cmp	r0, r3
 80197ae:	d21d      	bcs.n	80197ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80197b0:	eb00 080c 	add.w	r8, r0, ip
 80197b4:	4540      	cmp	r0, r8
 80197b6:	d20f      	bcs.n	80197d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80197b8:	f854 1b04 	ldr.w	r1, [r4], #4
 80197bc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80197c0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 80197c4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80197c8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80197cc:	ea42 0209 	orr.w	r2, r2, r9
 80197d0:	430a      	orrs	r2, r1
 80197d2:	f820 2b02 	strh.w	r2, [r0], #2
 80197d6:	e7ed      	b.n	80197b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 80197d8:	8832      	ldrh	r2, [r6, #0]
 80197da:	1bd2      	subs	r2, r2, r7
 80197dc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80197e0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80197e4:	1bd2      	subs	r2, r2, r7
 80197e6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80197ea:	e7df      	b.n	80197ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80197ec:	6828      	ldr	r0, [r5, #0]
 80197ee:	6803      	ldr	r3, [r0, #0]
 80197f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80197f2:	4798      	blx	r3
 80197f4:	b005      	add	sp, #20
 80197f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80197fa:	bf00      	nop
 80197fc:	2003242c 	.word	0x2003242c
 8019800:	20032426 	.word	0x20032426
 8019804:	fffff800 	.word	0xfffff800

08019808 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8019808:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801980c:	b08e      	sub	sp, #56	; 0x38
 801980e:	460e      	mov	r6, r1
 8019810:	4604      	mov	r4, r0
 8019812:	461d      	mov	r5, r3
 8019814:	6808      	ldr	r0, [r1, #0]
 8019816:	ab0a      	add	r3, sp, #40	; 0x28
 8019818:	6849      	ldr	r1, [r1, #4]
 801981a:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 80199f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801981e:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 80199f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8019822:	c303      	stmia	r3!, {r0, r1}
 8019824:	6810      	ldr	r0, [r2, #0]
 8019826:	ab0c      	add	r3, sp, #48	; 0x30
 8019828:	6851      	ldr	r1, [r2, #4]
 801982a:	c303      	stmia	r3!, {r0, r1}
 801982c:	a80a      	add	r0, sp, #40	; 0x28
 801982e:	f7f8 f9cb 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019832:	4631      	mov	r1, r6
 8019834:	a80c      	add	r0, sp, #48	; 0x30
 8019836:	f7f8 f9ef 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801983a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801983e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8019842:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8019846:	f8d8 0000 	ldr.w	r0, [r8]
 801984a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801984e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8019852:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8019856:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801985a:	440c      	add	r4, r1
 801985c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8019860:	440a      	add	r2, r1
 8019862:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8019866:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801986a:	4413      	add	r3, r2
 801986c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019870:	6803      	ldr	r3, [r0, #0]
 8019872:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019874:	4798      	blx	r3
 8019876:	2dff      	cmp	r5, #255	; 0xff
 8019878:	d124      	bne.n	80198c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801987a:	f010 0f01 	tst.w	r0, #1
 801987e:	f8d8 0000 	ldr.w	r0, [r8]
 8019882:	d022      	beq.n	80198ca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8019884:	2100      	movs	r1, #0
 8019886:	f04f 0e01 	mov.w	lr, #1
 801988a:	f8d0 c000 	ldr.w	ip, [r0]
 801988e:	b2b6      	uxth	r6, r6
 8019890:	f8cd e018 	str.w	lr, [sp, #24]
 8019894:	b2bf      	uxth	r7, r7
 8019896:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801989a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801989e:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80198a2:	f8b9 e000 	ldrh.w	lr, [r9]
 80198a6:	9503      	str	r5, [sp, #12]
 80198a8:	9601      	str	r6, [sp, #4]
 80198aa:	9700      	str	r7, [sp, #0]
 80198ac:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80198b0:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80198b4:	9102      	str	r1, [sp, #8]
 80198b6:	4621      	mov	r1, r4
 80198b8:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 80198bc:	47a8      	blx	r5
 80198be:	b00e      	add	sp, #56	; 0x38
 80198c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80198c4:	f010 0f04 	tst.w	r0, #4
 80198c8:	e7d9      	b.n	801987e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80198ca:	6803      	ldr	r3, [r0, #0]
 80198cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80198ce:	4798      	blx	r3
 80198d0:	f8b9 3000 	ldrh.w	r3, [r9]
 80198d4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 80198d8:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80198dc:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 80198e0:	435e      	muls	r6, r3
 80198e2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80198e6:	2dff      	cmp	r5, #255	; 0xff
 80198e8:	fb03 1202 	mla	r2, r3, r2, r1
 80198ec:	ebac 0c07 	sub.w	ip, ip, r7
 80198f0:	eba3 0707 	sub.w	r7, r3, r7
 80198f4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80198f8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80198fc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019900:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8019904:	d049      	beq.n	801999a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8019906:	43eb      	mvns	r3, r5
 8019908:	fa1f f985 	uxth.w	r9, r5
 801990c:	b2db      	uxtb	r3, r3
 801990e:	42b0      	cmp	r0, r6
 8019910:	d266      	bcs.n	80199e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8019912:	eb00 0a0e 	add.w	sl, r0, lr
 8019916:	4550      	cmp	r0, sl
 8019918:	4621      	mov	r1, r4
 801991a:	f104 0403 	add.w	r4, r4, #3
 801991e:	d25b      	bcs.n	80199d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8019920:	8802      	ldrh	r2, [r0, #0]
 8019922:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8019926:	ea4f 2822 	mov.w	r8, r2, asr #8
 801992a:	fb11 f109 	smulbb	r1, r1, r9
 801992e:	10d5      	asrs	r5, r2, #3
 8019930:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8019934:	00d2      	lsls	r2, r2, #3
 8019936:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801993a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801993e:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8019942:	fb08 1803 	mla	r8, r8, r3, r1
 8019946:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801994a:	b2d2      	uxtb	r2, r2
 801994c:	fb11 f109 	smulbb	r1, r1, r9
 8019950:	fa1f f888 	uxth.w	r8, r8
 8019954:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019958:	fb05 1503 	mla	r5, r5, r3, r1
 801995c:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8019960:	fb11 f109 	smulbb	r1, r1, r9
 8019964:	b2ad      	uxth	r5, r5
 8019966:	fb02 1203 	mla	r2, r2, r3, r1
 801996a:	f108 0101 	add.w	r1, r8, #1
 801996e:	b292      	uxth	r2, r2
 8019970:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8019974:	1c51      	adds	r1, r2, #1
 8019976:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801997a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801997e:	1c69      	adds	r1, r5, #1
 8019980:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8019984:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019988:	096d      	lsrs	r5, r5, #5
 801998a:	ea42 0208 	orr.w	r2, r2, r8
 801998e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019992:	432a      	orrs	r2, r5
 8019994:	f820 2b02 	strh.w	r2, [r0], #2
 8019998:	e7bd      	b.n	8019916 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801999a:	4a14      	ldr	r2, [pc, #80]	; (80199ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801999c:	42b0      	cmp	r0, r6
 801999e:	d21f      	bcs.n	80199e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80199a0:	eb00 050e 	add.w	r5, r0, lr
 80199a4:	42a8      	cmp	r0, r5
 80199a6:	4621      	mov	r1, r4
 80199a8:	f104 0403 	add.w	r4, r4, #3
 80199ac:	d210      	bcs.n	80199d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80199ae:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80199b2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80199b6:	00db      	lsls	r3, r3, #3
 80199b8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80199bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80199c0:	430b      	orrs	r3, r1
 80199c2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80199c6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80199ca:	f820 3b02 	strh.w	r3, [r0], #2
 80199ce:	e7e9      	b.n	80199a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80199d0:	4438      	add	r0, r7
 80199d2:	eb01 040c 	add.w	r4, r1, ip
 80199d6:	e7e1      	b.n	801999c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 80199d8:	4438      	add	r0, r7
 80199da:	eb01 040c 	add.w	r4, r1, ip
 80199de:	e796      	b.n	801990e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80199e0:	4b03      	ldr	r3, [pc, #12]	; (80199f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80199e2:	6818      	ldr	r0, [r3, #0]
 80199e4:	6803      	ldr	r3, [r0, #0]
 80199e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80199e8:	4798      	blx	r3
 80199ea:	e768      	b.n	80198be <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80199ec:	fffff800 	.word	0xfffff800
 80199f0:	2003242c 	.word	0x2003242c
 80199f4:	20032426 	.word	0x20032426

080199f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80199f8:	b4f0      	push	{r4, r5, r6, r7}
 80199fa:	4616      	mov	r6, r2
 80199fc:	461c      	mov	r4, r3
 80199fe:	460d      	mov	r5, r1
 8019a00:	9a04      	ldr	r2, [sp, #16]
 8019a02:	2e01      	cmp	r6, #1
 8019a04:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8019a08:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8019a0c:	d012      	beq.n	8019a34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8019a0e:	d303      	bcc.n	8019a18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8019a10:	2e02      	cmp	r6, #2
 8019a12:	d00a      	beq.n	8019a2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8019a14:	bcf0      	pop	{r4, r5, r6, r7}
 8019a16:	4770      	bx	lr
 8019a18:	6805      	ldr	r5, [r0, #0]
 8019a1a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8019a1e:	68ed      	ldr	r5, [r5, #12]
 8019a20:	4613      	mov	r3, r2
 8019a22:	4622      	mov	r2, r4
 8019a24:	46ac      	mov	ip, r5
 8019a26:	bcf0      	pop	{r4, r5, r6, r7}
 8019a28:	4760      	bx	ip
 8019a2a:	4621      	mov	r1, r4
 8019a2c:	4628      	mov	r0, r5
 8019a2e:	bcf0      	pop	{r4, r5, r6, r7}
 8019a30:	f7ff bd94 	b.w	801955c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019a34:	4621      	mov	r1, r4
 8019a36:	4628      	mov	r0, r5
 8019a38:	bcf0      	pop	{r4, r5, r6, r7}
 8019a3a:	f7ff bee5 	b.w	8019808 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08019a40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8019a40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a44:	b093      	sub	sp, #76	; 0x4c
 8019a46:	4681      	mov	r9, r0
 8019a48:	4688      	mov	r8, r1
 8019a4a:	6810      	ldr	r0, [r2, #0]
 8019a4c:	6851      	ldr	r1, [r2, #4]
 8019a4e:	ac0e      	add	r4, sp, #56	; 0x38
 8019a50:	4616      	mov	r6, r2
 8019a52:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8019a56:	4f6b      	ldr	r7, [pc, #428]	; (8019c04 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8019a58:	c403      	stmia	r4!, {r0, r1}
 8019a5a:	6818      	ldr	r0, [r3, #0]
 8019a5c:	ac10      	add	r4, sp, #64	; 0x40
 8019a5e:	6859      	ldr	r1, [r3, #4]
 8019a60:	c403      	stmia	r4!, {r0, r1}
 8019a62:	a80e      	add	r0, sp, #56	; 0x38
 8019a64:	f7f8 f8b0 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019a68:	4631      	mov	r1, r6
 8019a6a:	a810      	add	r0, sp, #64	; 0x40
 8019a6c:	4e66      	ldr	r6, [pc, #408]	; (8019c08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8019a6e:	f7f8 f8d3 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019a72:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8019a76:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8019a7a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8019a7e:	6830      	ldr	r0, [r6, #0]
 8019a80:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019a84:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8019a88:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8019a8c:	4489      	add	r9, r1
 8019a8e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8019a92:	440a      	add	r2, r1
 8019a94:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8019a98:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8019a9c:	4413      	add	r3, r2
 8019a9e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8019aa2:	6803      	ldr	r3, [r0, #0]
 8019aa4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019aa6:	4798      	blx	r3
 8019aa8:	f010 0f80 	tst.w	r0, #128	; 0x80
 8019aac:	6830      	ldr	r0, [r6, #0]
 8019aae:	d01d      	beq.n	8019aec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8019ab0:	2200      	movs	r2, #0
 8019ab2:	6801      	ldr	r1, [r0, #0]
 8019ab4:	b2a4      	uxth	r4, r4
 8019ab6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8019aba:	b2ad      	uxth	r5, r5
 8019abc:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8019ac0:	220b      	movs	r2, #11
 8019ac2:	9207      	str	r2, [sp, #28]
 8019ac4:	883a      	ldrh	r2, [r7, #0]
 8019ac6:	9502      	str	r5, [sp, #8]
 8019ac8:	9206      	str	r2, [sp, #24]
 8019aca:	2201      	movs	r2, #1
 8019acc:	9401      	str	r4, [sp, #4]
 8019ace:	e9cd a204 	strd	sl, r2, [sp, #16]
 8019ad2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8019ad6:	9203      	str	r2, [sp, #12]
 8019ad8:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8019adc:	9200      	str	r2, [sp, #0]
 8019ade:	4642      	mov	r2, r8
 8019ae0:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8019ae2:	4649      	mov	r1, r9
 8019ae4:	47a0      	blx	r4
 8019ae6:	b013      	add	sp, #76	; 0x4c
 8019ae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019aec:	6803      	ldr	r3, [r0, #0]
 8019aee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019af0:	4798      	blx	r3
 8019af2:	883b      	ldrh	r3, [r7, #0]
 8019af4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8019af8:	f04f 0e04 	mov.w	lr, #4
 8019afc:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8019b00:	435d      	muls	r5, r3
 8019b02:	fb03 1202 	mla	r2, r3, r2, r1
 8019b06:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019b0a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8019b0e:	920c      	str	r2, [sp, #48]	; 0x30
 8019b10:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8019b14:	1b12      	subs	r2, r2, r4
 8019b16:	920d      	str	r2, [sp, #52]	; 0x34
 8019b18:	0062      	lsls	r2, r4, #1
 8019b1a:	1b1c      	subs	r4, r3, r4
 8019b1c:	920a      	str	r2, [sp, #40]	; 0x28
 8019b1e:	0063      	lsls	r3, r4, #1
 8019b20:	930b      	str	r3, [sp, #44]	; 0x2c
 8019b22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019b24:	4298      	cmp	r0, r3
 8019b26:	d266      	bcs.n	8019bf6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8019b28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019b2a:	eb00 0b03 	add.w	fp, r0, r3
 8019b2e:	4558      	cmp	r0, fp
 8019b30:	d25c      	bcs.n	8019bec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8019b32:	f819 3b01 	ldrb.w	r3, [r9], #1
 8019b36:	fb1e e303 	smlabb	r3, lr, r3, lr
 8019b3a:	f858 2003 	ldr.w	r2, [r8, r3]
 8019b3e:	0e11      	lsrs	r1, r2, #24
 8019b40:	d012      	beq.n	8019b68 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8019b42:	29ff      	cmp	r1, #255	; 0xff
 8019b44:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8019b48:	d110      	bne.n	8019b6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8019b4a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019b4e:	d10d      	bne.n	8019b6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8019b50:	0953      	lsrs	r3, r2, #5
 8019b52:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8019b56:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019b5a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019b5e:	f027 0707 	bic.w	r7, r7, #7
 8019b62:	431f      	orrs	r7, r3
 8019b64:	433a      	orrs	r2, r7
 8019b66:	8002      	strh	r2, [r0, #0]
 8019b68:	3002      	adds	r0, #2
 8019b6a:	e7e0      	b.n	8019b2e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8019b6c:	fb0a f101 	mul.w	r1, sl, r1
 8019b70:	8806      	ldrh	r6, [r0, #0]
 8019b72:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8019b76:	b2d2      	uxtb	r2, r2
 8019b78:	1c4b      	adds	r3, r1, #1
 8019b7a:	1235      	asrs	r5, r6, #8
 8019b7c:	10f4      	asrs	r4, r6, #3
 8019b7e:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8019b82:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019b86:	00f6      	lsls	r6, r6, #3
 8019b88:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8019b8c:	121b      	asrs	r3, r3, #8
 8019b8e:	b2f6      	uxtb	r6, r6
 8019b90:	b299      	uxth	r1, r3
 8019b92:	43db      	mvns	r3, r3
 8019b94:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8019b98:	fb1c fc01 	smulbb	ip, ip, r1
 8019b9c:	b2db      	uxtb	r3, r3
 8019b9e:	fb12 f201 	smulbb	r2, r2, r1
 8019ba2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8019ba6:	fb05 c503 	mla	r5, r5, r3, ip
 8019baa:	b2ff      	uxtb	r7, r7
 8019bac:	fb06 2203 	mla	r2, r6, r3, r2
 8019bb0:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8019bb4:	fb17 f701 	smulbb	r7, r7, r1
 8019bb8:	b2ad      	uxth	r5, r5
 8019bba:	b292      	uxth	r2, r2
 8019bbc:	fb04 7403 	mla	r4, r4, r3, r7
 8019bc0:	f105 0c01 	add.w	ip, r5, #1
 8019bc4:	1c57      	adds	r7, r2, #1
 8019bc6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8019bca:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8019bce:	b2a4      	uxth	r4, r4
 8019bd0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019bd4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019bd8:	433d      	orrs	r5, r7
 8019bda:	1c67      	adds	r7, r4, #1
 8019bdc:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8019be0:	0964      	lsrs	r4, r4, #5
 8019be2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8019be6:	4325      	orrs	r5, r4
 8019be8:	8005      	strh	r5, [r0, #0]
 8019bea:	e7bd      	b.n	8019b68 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8019bec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019bee:	4418      	add	r0, r3
 8019bf0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019bf2:	4499      	add	r9, r3
 8019bf4:	e795      	b.n	8019b22 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8019bf6:	4b04      	ldr	r3, [pc, #16]	; (8019c08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8019bf8:	6818      	ldr	r0, [r3, #0]
 8019bfa:	6803      	ldr	r3, [r0, #0]
 8019bfc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019bfe:	4798      	blx	r3
 8019c00:	e771      	b.n	8019ae6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8019c02:	bf00      	nop
 8019c04:	20032426 	.word	0x20032426
 8019c08:	2003242c 	.word	0x2003242c

08019c0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8019c0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c10:	b087      	sub	sp, #28
 8019c12:	4680      	mov	r8, r0
 8019c14:	460d      	mov	r5, r1
 8019c16:	4614      	mov	r4, r2
 8019c18:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8019c1c:	2e00      	cmp	r6, #0
 8019c1e:	f000 80b9 	beq.w	8019d94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8019c22:	6810      	ldr	r0, [r2, #0]
 8019c24:	af02      	add	r7, sp, #8
 8019c26:	6851      	ldr	r1, [r2, #4]
 8019c28:	c703      	stmia	r7!, {r0, r1}
 8019c2a:	6818      	ldr	r0, [r3, #0]
 8019c2c:	af04      	add	r7, sp, #16
 8019c2e:	6859      	ldr	r1, [r3, #4]
 8019c30:	c703      	stmia	r7!, {r0, r1}
 8019c32:	a802      	add	r0, sp, #8
 8019c34:	f7f7 ffc8 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019c38:	4621      	mov	r1, r4
 8019c3a:	a804      	add	r0, sp, #16
 8019c3c:	f7f7 ffec 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019c40:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019c44:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019c48:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8019c4c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8019c50:	fb14 2103 	smlabb	r1, r4, r3, r2
 8019c54:	eb08 0401 	add.w	r4, r8, r1
 8019c58:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8019c5c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8019c60:	440a      	add	r2, r1
 8019c62:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8019c66:	f8ad 2010 	strh.w	r2, [sp, #16]
 8019c6a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019c6e:	4413      	add	r3, r2
 8019c70:	f8ad 3012 	strh.w	r3, [sp, #18]
 8019c74:	4b49      	ldr	r3, [pc, #292]	; (8019d9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8019c76:	6818      	ldr	r0, [r3, #0]
 8019c78:	6803      	ldr	r3, [r0, #0]
 8019c7a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019c7c:	4798      	blx	r3
 8019c7e:	4b48      	ldr	r3, [pc, #288]	; (8019da0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8019c80:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8019c84:	2eff      	cmp	r6, #255	; 0xff
 8019c86:	881a      	ldrh	r2, [r3, #0]
 8019c88:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8019c8c:	fb02 c101 	mla	r1, r2, r1, ip
 8019c90:	fb02 f207 	mul.w	r2, r2, r7
 8019c94:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8019c98:	f105 0104 	add.w	r1, r5, #4
 8019c9c:	461d      	mov	r5, r3
 8019c9e:	d05a      	beq.n	8019d56 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8019ca0:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8019ca4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019ca8:	b2b6      	uxth	r6, r6
 8019caa:	9301      	str	r3, [sp, #4]
 8019cac:	fa1f fe8e 	uxth.w	lr, lr
 8019cb0:	4282      	cmp	r2, r0
 8019cb2:	d96a      	bls.n	8019d8a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8019cb4:	eb00 0b0a 	add.w	fp, r0, sl
 8019cb8:	4583      	cmp	fp, r0
 8019cba:	d940      	bls.n	8019d3e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8019cbc:	8805      	ldrh	r5, [r0, #0]
 8019cbe:	f814 3b01 	ldrb.w	r3, [r4], #1
 8019cc2:	122f      	asrs	r7, r5, #8
 8019cc4:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8019cc8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019ccc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019cd0:	00ed      	lsls	r5, r5, #3
 8019cd2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019cd6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019cda:	fb17 f70e 	smulbb	r7, r7, lr
 8019cde:	b2ed      	uxtb	r5, r5
 8019ce0:	fb19 f90e 	smulbb	r9, r9, lr
 8019ce4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019ce8:	fb15 f50e 	smulbb	r5, r5, lr
 8019cec:	fb0c 7c06 	mla	ip, ip, r6, r7
 8019cf0:	10df      	asrs	r7, r3, #3
 8019cf2:	00db      	lsls	r3, r3, #3
 8019cf4:	fa1f fc8c 	uxth.w	ip, ip
 8019cf8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019cfc:	b2db      	uxtb	r3, r3
 8019cfe:	fb07 9706 	mla	r7, r7, r6, r9
 8019d02:	f10c 0901 	add.w	r9, ip, #1
 8019d06:	fb03 5306 	mla	r3, r3, r6, r5
 8019d0a:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8019d0e:	b29b      	uxth	r3, r3
 8019d10:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8019d14:	b2bf      	uxth	r7, r7
 8019d16:	f103 0c01 	add.w	ip, r3, #1
 8019d1a:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019d1e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019d22:	ea4c 0c09 	orr.w	ip, ip, r9
 8019d26:	f107 0901 	add.w	r9, r7, #1
 8019d2a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8019d2e:	097f      	lsrs	r7, r7, #5
 8019d30:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019d34:	ea4c 0c07 	orr.w	ip, ip, r7
 8019d38:	f820 cb02 	strh.w	ip, [r0], #2
 8019d3c:	e7bc      	b.n	8019cb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8019d3e:	9b01      	ldr	r3, [sp, #4]
 8019d40:	881b      	ldrh	r3, [r3, #0]
 8019d42:	eba3 0308 	sub.w	r3, r3, r8
 8019d46:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019d4a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8019d4e:	eba3 0308 	sub.w	r3, r3, r8
 8019d52:	441c      	add	r4, r3
 8019d54:	e7ac      	b.n	8019cb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8019d56:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019d5a:	4282      	cmp	r2, r0
 8019d5c:	d915      	bls.n	8019d8a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8019d5e:	eb00 060a 	add.w	r6, r0, sl
 8019d62:	4286      	cmp	r6, r0
 8019d64:	d906      	bls.n	8019d74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8019d66:	f814 3b01 	ldrb.w	r3, [r4], #1
 8019d6a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8019d6e:	f820 3b02 	strh.w	r3, [r0], #2
 8019d72:	e7f6      	b.n	8019d62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8019d74:	882b      	ldrh	r3, [r5, #0]
 8019d76:	eba3 0308 	sub.w	r3, r3, r8
 8019d7a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019d7e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8019d82:	eba3 0308 	sub.w	r3, r3, r8
 8019d86:	441c      	add	r4, r3
 8019d88:	e7e7      	b.n	8019d5a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8019d8a:	4b04      	ldr	r3, [pc, #16]	; (8019d9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8019d8c:	6818      	ldr	r0, [r3, #0]
 8019d8e:	6803      	ldr	r3, [r0, #0]
 8019d90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019d92:	4798      	blx	r3
 8019d94:	b007      	add	sp, #28
 8019d96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d9a:	bf00      	nop
 8019d9c:	2003242c 	.word	0x2003242c
 8019da0:	20032426 	.word	0x20032426

08019da4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8019da4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019da8:	b091      	sub	sp, #68	; 0x44
 8019daa:	4680      	mov	r8, r0
 8019dac:	460f      	mov	r7, r1
 8019dae:	4614      	mov	r4, r2
 8019db0:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8019db4:	2d00      	cmp	r5, #0
 8019db6:	d051      	beq.n	8019e5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8019db8:	6810      	ldr	r0, [r2, #0]
 8019dba:	ae0c      	add	r6, sp, #48	; 0x30
 8019dbc:	6851      	ldr	r1, [r2, #4]
 8019dbe:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8019fc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8019dc2:	c603      	stmia	r6!, {r0, r1}
 8019dc4:	6818      	ldr	r0, [r3, #0]
 8019dc6:	ae0e      	add	r6, sp, #56	; 0x38
 8019dc8:	6859      	ldr	r1, [r3, #4]
 8019dca:	c603      	stmia	r6!, {r0, r1}
 8019dcc:	a80c      	add	r0, sp, #48	; 0x30
 8019dce:	f7f7 fefb 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019dd2:	4621      	mov	r1, r4
 8019dd4:	a80e      	add	r0, sp, #56	; 0x38
 8019dd6:	f7f7 ff1f 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019dda:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8019dde:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8019de2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8019de6:	f8d9 0000 	ldr.w	r0, [r9]
 8019dea:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019dee:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8019df2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8019df6:	eb08 0401 	add.w	r4, r8, r1
 8019dfa:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8019dfe:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8019fc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8019e02:	440a      	add	r2, r1
 8019e04:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8019e08:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8019e0c:	4413      	add	r3, r2
 8019e0e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8019e12:	6803      	ldr	r3, [r0, #0]
 8019e14:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019e16:	4798      	blx	r3
 8019e18:	f010 0f80 	tst.w	r0, #128	; 0x80
 8019e1c:	f8d9 0000 	ldr.w	r0, [r9]
 8019e20:	d01f      	beq.n	8019e62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8019e22:	2200      	movs	r2, #0
 8019e24:	6801      	ldr	r1, [r0, #0]
 8019e26:	b2b6      	uxth	r6, r6
 8019e28:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8019e2c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8019e30:	220b      	movs	r2, #11
 8019e32:	9207      	str	r2, [sp, #28]
 8019e34:	f8b8 2000 	ldrh.w	r2, [r8]
 8019e38:	9601      	str	r6, [sp, #4]
 8019e3a:	9206      	str	r2, [sp, #24]
 8019e3c:	2201      	movs	r2, #1
 8019e3e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8019e42:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8019e46:	9203      	str	r2, [sp, #12]
 8019e48:	fa1f f28a 	uxth.w	r2, sl
 8019e4c:	9202      	str	r2, [sp, #8]
 8019e4e:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8019e52:	9200      	str	r2, [sp, #0]
 8019e54:	463a      	mov	r2, r7
 8019e56:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8019e58:	4621      	mov	r1, r4
 8019e5a:	47a8      	blx	r5
 8019e5c:	b011      	add	sp, #68	; 0x44
 8019e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e62:	6803      	ldr	r3, [r0, #0]
 8019e64:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8019e68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019e6a:	4798      	blx	r3
 8019e6c:	f8b8 2000 	ldrh.w	r2, [r8]
 8019e70:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8019e74:	2dff      	cmp	r5, #255	; 0xff
 8019e76:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8019e7a:	fb0a fa02 	mul.w	sl, sl, r2
 8019e7e:	fb02 1303 	mla	r3, r2, r3, r1
 8019e82:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019e86:	d062      	beq.n	8019f4e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8019e88:	ea6f 0c05 	mvn.w	ip, r5
 8019e8c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8019e90:	b2ad      	uxth	r5, r5
 8019e92:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8019e96:	fa5f fc8c 	uxtb.w	ip, ip
 8019e9a:	930a      	str	r3, [sp, #40]	; 0x28
 8019e9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019e9e:	4298      	cmp	r0, r3
 8019ea0:	f080 8085 	bcs.w	8019fae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8019ea4:	eb00 0b09 	add.w	fp, r0, r9
 8019ea8:	4558      	cmp	r0, fp
 8019eaa:	d246      	bcs.n	8019f3a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8019eac:	f814 eb01 	ldrb.w	lr, [r4], #1
 8019eb0:	2303      	movs	r3, #3
 8019eb2:	2204      	movs	r2, #4
 8019eb4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8019eb8:	8803      	ldrh	r3, [r0, #0]
 8019eba:	eb07 0a0e 	add.w	sl, r7, lr
 8019ebe:	1219      	asrs	r1, r3, #8
 8019ec0:	10da      	asrs	r2, r3, #3
 8019ec2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019ec6:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8019eca:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019ece:	00db      	lsls	r3, r3, #3
 8019ed0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019ed4:	fb18 f805 	smulbb	r8, r8, r5
 8019ed8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8019edc:	fb1e fe05 	smulbb	lr, lr, r5
 8019ee0:	b2db      	uxtb	r3, r3
 8019ee2:	fb01 810c 	mla	r1, r1, ip, r8
 8019ee6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019eea:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8019eee:	fb18 f805 	smulbb	r8, r8, r5
 8019ef2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8019ef6:	b289      	uxth	r1, r1
 8019ef8:	fb02 820c 	mla	r2, r2, ip, r8
 8019efc:	fb03 e30c 	mla	r3, r3, ip, lr
 8019f00:	f101 0801 	add.w	r8, r1, #1
 8019f04:	b292      	uxth	r2, r2
 8019f06:	b29b      	uxth	r3, r3
 8019f08:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8019f0c:	f102 0801 	add.w	r8, r2, #1
 8019f10:	f103 0e01 	add.w	lr, r3, #1
 8019f14:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8019f18:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8019f1c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8019f20:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019f24:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8019f28:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019f2c:	ea4e 0101 	orr.w	r1, lr, r1
 8019f30:	ea41 0108 	orr.w	r1, r1, r8
 8019f34:	f820 1b02 	strh.w	r1, [r0], #2
 8019f38:	e7b6      	b.n	8019ea8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8019f3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019f3c:	881b      	ldrh	r3, [r3, #0]
 8019f3e:	1b9b      	subs	r3, r3, r6
 8019f40:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019f44:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8019f48:	1b9b      	subs	r3, r3, r6
 8019f4a:	441c      	add	r4, r3
 8019f4c:	e7a6      	b.n	8019e9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8019f4e:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8019f52:	2203      	movs	r2, #3
 8019f54:	2504      	movs	r5, #4
 8019f56:	4919      	ldr	r1, [pc, #100]	; (8019fbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8019f58:	4550      	cmp	r0, sl
 8019f5a:	d228      	bcs.n	8019fae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8019f5c:	eb00 0c09 	add.w	ip, r0, r9
 8019f60:	4560      	cmp	r0, ip
 8019f62:	4623      	mov	r3, r4
 8019f64:	d219      	bcs.n	8019f9a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8019f66:	f893 e000 	ldrb.w	lr, [r3]
 8019f6a:	3401      	adds	r4, #1
 8019f6c:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8019f70:	eb07 0b0e 	add.w	fp, r7, lr
 8019f74:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019f78:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8019f7c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019f80:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8019f84:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8019f88:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019f8c:	ea43 030b 	orr.w	r3, r3, fp
 8019f90:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8019f94:	f820 3b02 	strh.w	r3, [r0], #2
 8019f98:	e7e2      	b.n	8019f60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8019f9a:	f8b8 3000 	ldrh.w	r3, [r8]
 8019f9e:	1b9b      	subs	r3, r3, r6
 8019fa0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019fa4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8019fa8:	1b9b      	subs	r3, r3, r6
 8019faa:	441c      	add	r4, r3
 8019fac:	e7d4      	b.n	8019f58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8019fae:	4b04      	ldr	r3, [pc, #16]	; (8019fc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8019fb0:	6818      	ldr	r0, [r3, #0]
 8019fb2:	6803      	ldr	r3, [r0, #0]
 8019fb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019fb6:	4798      	blx	r3
 8019fb8:	e750      	b.n	8019e5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8019fba:	bf00      	nop
 8019fbc:	fffff800 	.word	0xfffff800
 8019fc0:	2003242c 	.word	0x2003242c
 8019fc4:	20032426 	.word	0x20032426

08019fc8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8019fc8:	b4f0      	push	{r4, r5, r6, r7}
 8019fca:	460c      	mov	r4, r1
 8019fcc:	4611      	mov	r1, r2
 8019fce:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8019fd2:	461a      	mov	r2, r3
 8019fd4:	780f      	ldrb	r7, [r1, #0]
 8019fd6:	9b04      	ldr	r3, [sp, #16]
 8019fd8:	2f01      	cmp	r7, #1
 8019fda:	784e      	ldrb	r6, [r1, #1]
 8019fdc:	d038      	beq.n	801a050 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8019fde:	d31f      	bcc.n	801a020 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8019fe0:	2f02      	cmp	r7, #2
 8019fe2:	d14d      	bne.n	801a080 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019fe4:	2e03      	cmp	r6, #3
 8019fe6:	d84b      	bhi.n	801a080 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019fe8:	e8df f006 	tbb	[pc, r6]
 8019fec:	17140702 	.word	0x17140702
 8019ff0:	9504      	str	r5, [sp, #16]
 8019ff2:	4620      	mov	r0, r4
 8019ff4:	bcf0      	pop	{r4, r5, r6, r7}
 8019ff6:	f7ff be09 	b.w	8019c0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8019ffa:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8019ffc:	2800      	cmp	r0, #0
 8019ffe:	d03f      	beq.n	801a080 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a000:	6806      	ldr	r6, [r0, #0]
 801a002:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801a006:	68b5      	ldr	r5, [r6, #8]
 801a008:	4613      	mov	r3, r2
 801a00a:	46ac      	mov	ip, r5
 801a00c:	460a      	mov	r2, r1
 801a00e:	4621      	mov	r1, r4
 801a010:	bcf0      	pop	{r4, r5, r6, r7}
 801a012:	4760      	bx	ip
 801a014:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801a018:	e7f0      	b.n	8019ffc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801a01a:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
 801a01e:	e7ed      	b.n	8019ffc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801a020:	2e03      	cmp	r6, #3
 801a022:	d82d      	bhi.n	801a080 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a024:	e8df f006 	tbb	[pc, r6]
 801a028:	110e0702 	.word	0x110e0702
 801a02c:	9504      	str	r5, [sp, #16]
 801a02e:	4620      	mov	r0, r4
 801a030:	bcf0      	pop	{r4, r5, r6, r7}
 801a032:	f7ff bd05 	b.w	8019a40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801a036:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801a038:	b310      	cbz	r0, 801a080 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a03a:	6806      	ldr	r6, [r0, #0]
 801a03c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801a040:	68f5      	ldr	r5, [r6, #12]
 801a042:	e7e1      	b.n	801a008 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801a044:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801a048:	e7f6      	b.n	801a038 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801a04a:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
 801a04e:	e7f3      	b.n	801a038 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801a050:	2e03      	cmp	r6, #3
 801a052:	d815      	bhi.n	801a080 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a054:	e8df f006 	tbb	[pc, r6]
 801a058:	110e0702 	.word	0x110e0702
 801a05c:	9504      	str	r5, [sp, #16]
 801a05e:	4620      	mov	r0, r4
 801a060:	bcf0      	pop	{r4, r5, r6, r7}
 801a062:	f7ff be9f 	b.w	8019da4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801a066:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801a068:	b150      	cbz	r0, 801a080 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a06a:	6806      	ldr	r6, [r0, #0]
 801a06c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801a070:	6935      	ldr	r5, [r6, #16]
 801a072:	e7c9      	b.n	801a008 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801a074:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801a078:	e7f6      	b.n	801a068 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801a07a:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
 801a07e:	e7f3      	b.n	801a068 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801a080:	bcf0      	pop	{r4, r5, r6, r7}
 801a082:	4770      	bx	lr

0801a084 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801a084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a088:	b087      	sub	sp, #28
 801a08a:	4604      	mov	r4, r0
 801a08c:	460e      	mov	r6, r1
 801a08e:	6810      	ldr	r0, [r2, #0]
 801a090:	6851      	ldr	r1, [r2, #4]
 801a092:	ad02      	add	r5, sp, #8
 801a094:	4617      	mov	r7, r2
 801a096:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801a09a:	f8df 9230 	ldr.w	r9, [pc, #560]	; 801a2cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801a09e:	c503      	stmia	r5!, {r0, r1}
 801a0a0:	6818      	ldr	r0, [r3, #0]
 801a0a2:	ad04      	add	r5, sp, #16
 801a0a4:	6859      	ldr	r1, [r3, #4]
 801a0a6:	c503      	stmia	r5!, {r0, r1}
 801a0a8:	a802      	add	r0, sp, #8
 801a0aa:	f7f7 fd8d 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a0ae:	4639      	mov	r1, r7
 801a0b0:	a804      	add	r0, sp, #16
 801a0b2:	f7f7 fdb1 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a0b6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801a0ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a0be:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801a0c2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801a0c6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a0ca:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801a0ce:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801a0d2:	440e      	add	r6, r1
 801a0d4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801a0d8:	440a      	add	r2, r1
 801a0da:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a0de:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a0e2:	4413      	add	r3, r2
 801a0e4:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a0e8:	4b77      	ldr	r3, [pc, #476]	; (801a2c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801a0ea:	6818      	ldr	r0, [r3, #0]
 801a0ec:	6803      	ldr	r3, [r0, #0]
 801a0ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a0f0:	4798      	blx	r3
 801a0f2:	f8b9 b000 	ldrh.w	fp, [r9]
 801a0f6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a0fa:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a0fe:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801a102:	fb05 f50b 	mul.w	r5, r5, fp
 801a106:	fb0b 2303 	mla	r3, fp, r3, r2
 801a10a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a10e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801a112:	9300      	str	r3, [sp, #0]
 801a114:	d069      	beq.n	801a1ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801a116:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801a11a:	4558      	cmp	r0, fp
 801a11c:	f080 80cc 	bcs.w	801a2b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801a120:	9b00      	ldr	r3, [sp, #0]
 801a122:	4631      	mov	r1, r6
 801a124:	18c3      	adds	r3, r0, r3
 801a126:	9301      	str	r3, [sp, #4]
 801a128:	9b01      	ldr	r3, [sp, #4]
 801a12a:	4298      	cmp	r0, r3
 801a12c:	d24f      	bcs.n	801a1ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801a12e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801a132:	2a00      	cmp	r2, #0
 801a134:	d048      	beq.n	801a1c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801a136:	fb0a f202 	mul.w	r2, sl, r2
 801a13a:	1c53      	adds	r3, r2, #1
 801a13c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a140:	121b      	asrs	r3, r3, #8
 801a142:	d041      	beq.n	801a1c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801a144:	8802      	ldrh	r2, [r0, #0]
 801a146:	b29e      	uxth	r6, r3
 801a148:	f8b4 c000 	ldrh.w	ip, [r4]
 801a14c:	43db      	mvns	r3, r3
 801a14e:	1215      	asrs	r5, r2, #8
 801a150:	b2db      	uxtb	r3, r3
 801a152:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a156:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a15a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801a15e:	fb15 f503 	smulbb	r5, r5, r3
 801a162:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a166:	00d2      	lsls	r2, r2, #3
 801a168:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a16c:	fb07 5706 	mla	r7, r7, r6, r5
 801a170:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a174:	b2d2      	uxtb	r2, r2
 801a176:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a17a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a17e:	fb1e fe03 	smulbb	lr, lr, r3
 801a182:	b2bf      	uxth	r7, r7
 801a184:	fb12 f203 	smulbb	r2, r2, r3
 801a188:	fa5f fc8c 	uxtb.w	ip, ip
 801a18c:	fb05 e506 	mla	r5, r5, r6, lr
 801a190:	f107 0e01 	add.w	lr, r7, #1
 801a194:	fb0c 2c06 	mla	ip, ip, r6, r2
 801a198:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801a19c:	fa1f fc8c 	uxth.w	ip, ip
 801a1a0:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801a1a4:	b2ad      	uxth	r5, r5
 801a1a6:	f10c 0701 	add.w	r7, ip, #1
 801a1aa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a1ae:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a1b2:	ea47 070e 	orr.w	r7, r7, lr
 801a1b6:	f105 0e01 	add.w	lr, r5, #1
 801a1ba:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801a1be:	096d      	lsrs	r5, r5, #5
 801a1c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a1c4:	432f      	orrs	r7, r5
 801a1c6:	8007      	strh	r7, [r0, #0]
 801a1c8:	3002      	adds	r0, #2
 801a1ca:	3402      	adds	r4, #2
 801a1cc:	e7ac      	b.n	801a128 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801a1ce:	f8b9 3000 	ldrh.w	r3, [r9]
 801a1d2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801a1d6:	eba3 0308 	sub.w	r3, r3, r8
 801a1da:	eba6 0608 	sub.w	r6, r6, r8
 801a1de:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a1e2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801a1e6:	440e      	add	r6, r1
 801a1e8:	e797      	b.n	801a11a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801a1ea:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801a1ee:	42a8      	cmp	r0, r5
 801a1f0:	d262      	bcs.n	801a2b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801a1f2:	9b00      	ldr	r3, [sp, #0]
 801a1f4:	4631      	mov	r1, r6
 801a1f6:	eb00 0b03 	add.w	fp, r0, r3
 801a1fa:	4558      	cmp	r0, fp
 801a1fc:	d24e      	bcs.n	801a29c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801a1fe:	f811 3b01 	ldrb.w	r3, [r1], #1
 801a202:	b12b      	cbz	r3, 801a210 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801a204:	2bff      	cmp	r3, #255	; 0xff
 801a206:	f8b4 e000 	ldrh.w	lr, [r4]
 801a20a:	d104      	bne.n	801a216 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801a20c:	f8a0 e000 	strh.w	lr, [r0]
 801a210:	3002      	adds	r0, #2
 801a212:	3402      	adds	r4, #2
 801a214:	e7f1      	b.n	801a1fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801a216:	8802      	ldrh	r2, [r0, #0]
 801a218:	b29f      	uxth	r7, r3
 801a21a:	43db      	mvns	r3, r3
 801a21c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a220:	1216      	asrs	r6, r2, #8
 801a222:	b2db      	uxtb	r3, r3
 801a224:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a228:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a22c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801a230:	00d2      	lsls	r2, r2, #3
 801a232:	fb16 f603 	smulbb	r6, r6, r3
 801a236:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a23a:	b2d2      	uxtb	r2, r2
 801a23c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a240:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a244:	fb1a fa03 	smulbb	sl, sl, r3
 801a248:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a24c:	fa1f fc8c 	uxth.w	ip, ip
 801a250:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a254:	fb12 f303 	smulbb	r3, r2, r3
 801a258:	fa5f fe8e 	uxtb.w	lr, lr
 801a25c:	fb06 a607 	mla	r6, r6, r7, sl
 801a260:	f10c 0201 	add.w	r2, ip, #1
 801a264:	fb0e 3307 	mla	r3, lr, r7, r3
 801a268:	b2b6      	uxth	r6, r6
 801a26a:	b29b      	uxth	r3, r3
 801a26c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a270:	f106 0a01 	add.w	sl, r6, #1
 801a274:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801a278:	f103 0c01 	add.w	ip, r3, #1
 801a27c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801a280:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a284:	0976      	lsrs	r6, r6, #5
 801a286:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a28a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a28e:	ea4c 0c02 	orr.w	ip, ip, r2
 801a292:	ea4c 0c06 	orr.w	ip, ip, r6
 801a296:	f8a0 c000 	strh.w	ip, [r0]
 801a29a:	e7b9      	b.n	801a210 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801a29c:	f8b9 3000 	ldrh.w	r3, [r9]
 801a2a0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801a2a4:	eba3 0308 	sub.w	r3, r3, r8
 801a2a8:	eba6 0608 	sub.w	r6, r6, r8
 801a2ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a2b0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801a2b4:	440e      	add	r6, r1
 801a2b6:	e79a      	b.n	801a1ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801a2b8:	4b03      	ldr	r3, [pc, #12]	; (801a2c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801a2ba:	6818      	ldr	r0, [r3, #0]
 801a2bc:	6803      	ldr	r3, [r0, #0]
 801a2be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a2c0:	4798      	blx	r3
 801a2c2:	b007      	add	sp, #28
 801a2c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a2c8:	2003242c 	.word	0x2003242c
 801a2cc:	20032426 	.word	0x20032426

0801a2d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801a2d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2d4:	b089      	sub	sp, #36	; 0x24
 801a2d6:	4682      	mov	sl, r0
 801a2d8:	460f      	mov	r7, r1
 801a2da:	4691      	mov	r9, r2
 801a2dc:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801a2e0:	4698      	mov	r8, r3
 801a2e2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a2e4:	2e00      	cmp	r6, #0
 801a2e6:	d03d      	beq.n	801a364 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a2e8:	4608      	mov	r0, r1
 801a2ea:	f7fa fe51 	bl	8014f90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801a2ee:	4605      	mov	r5, r0
 801a2f0:	4638      	mov	r0, r7
 801a2f2:	f7fa fe81 	bl	8014ff8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801a2f6:	f8ad 000e 	strh.w	r0, [sp, #14]
 801a2fa:	4638      	mov	r0, r7
 801a2fc:	f8ad 9008 	strh.w	r9, [sp, #8]
 801a300:	f8ad 500c 	strh.w	r5, [sp, #12]
 801a304:	f8ad 800a 	strh.w	r8, [sp, #10]
 801a308:	f7fa ff2e 	bl	8015168 <_ZNK8touchgfx6Bitmap7getDataEv>
 801a30c:	4605      	mov	r5, r0
 801a30e:	4638      	mov	r0, r7
 801a310:	f7fa ff5a 	bl	80151c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801a314:	4681      	mov	r9, r0
 801a316:	4638      	mov	r0, r7
 801a318:	f7fa ffaa 	bl	8015270 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801a31c:	280b      	cmp	r0, #11
 801a31e:	d821      	bhi.n	801a364 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a320:	e8df f000 	tbb	[pc, r0]
 801a324:	2006aebe 	.word	0x2006aebe
 801a328:	20202020 	.word	0x20202020
 801a32c:	b5202020 	.word	0xb5202020
 801a330:	4bb0      	ldr	r3, [pc, #704]	; (801a5f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801a332:	6818      	ldr	r0, [r3, #0]
 801a334:	6803      	ldr	r3, [r0, #0]
 801a336:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a338:	4798      	blx	r3
 801a33a:	2eff      	cmp	r6, #255	; 0xff
 801a33c:	d101      	bne.n	801a342 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801a33e:	0683      	lsls	r3, r0, #26
 801a340:	d506      	bpl.n	801a350 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801a342:	4633      	mov	r3, r6
 801a344:	4622      	mov	r2, r4
 801a346:	a902      	add	r1, sp, #8
 801a348:	4628      	mov	r0, r5
 801a34a:	f7ff f907 	bl	801955c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a34e:	e009      	b.n	801a364 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a350:	4638      	mov	r0, r7
 801a352:	f7fa fed1 	bl	80150f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801a356:	b940      	cbnz	r0, 801a36a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801a358:	4623      	mov	r3, r4
 801a35a:	aa02      	add	r2, sp, #8
 801a35c:	4629      	mov	r1, r5
 801a35e:	4650      	mov	r0, sl
 801a360:	f7ff f9e2 	bl	8019728 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801a364:	b009      	add	sp, #36	; 0x24
 801a366:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a36a:	f10d 0818 	add.w	r8, sp, #24
 801a36e:	4639      	mov	r1, r7
 801a370:	af04      	add	r7, sp, #16
 801a372:	4640      	mov	r0, r8
 801a374:	f7fa fe74 	bl	8015060 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801a378:	e898 0003 	ldmia.w	r8, {r0, r1}
 801a37c:	e887 0003 	stmia.w	r7, {r0, r1}
 801a380:	4638      	mov	r0, r7
 801a382:	4621      	mov	r1, r4
 801a384:	f7f4 fc1a 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 801a388:	4638      	mov	r0, r7
 801a38a:	f7f4 fc5a 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a38e:	2800      	cmp	r0, #0
 801a390:	d1d7      	bne.n	801a342 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801a392:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a396:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a39a:	4293      	cmp	r3, r2
 801a39c:	dd12      	ble.n	801a3c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801a39e:	1a9b      	subs	r3, r3, r2
 801a3a0:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a3a4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a3a8:	f8ad 0018 	strh.w	r0, [sp, #24]
 801a3ac:	4628      	mov	r0, r5
 801a3ae:	f8ad 201a 	strh.w	r2, [sp, #26]
 801a3b2:	4642      	mov	r2, r8
 801a3b4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801a3b8:	a902      	add	r1, sp, #8
 801a3ba:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a3be:	4633      	mov	r3, r6
 801a3c0:	f7ff f8cc 	bl	801955c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a3c4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801a3c8:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a3cc:	4293      	cmp	r3, r2
 801a3ce:	dd12      	ble.n	801a3f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801a3d0:	1a9b      	subs	r3, r3, r2
 801a3d2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801a3d6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801a3da:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a3de:	4642      	mov	r2, r8
 801a3e0:	f8ad 001a 	strh.w	r0, [sp, #26]
 801a3e4:	4628      	mov	r0, r5
 801a3e6:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a3ea:	23ff      	movs	r3, #255	; 0xff
 801a3ec:	f8ad 101e 	strh.w	r1, [sp, #30]
 801a3f0:	a902      	add	r1, sp, #8
 801a3f2:	f7ff f8b3 	bl	801955c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a3f6:	463b      	mov	r3, r7
 801a3f8:	aa02      	add	r2, sp, #8
 801a3fa:	4629      	mov	r1, r5
 801a3fc:	4650      	mov	r0, sl
 801a3fe:	f7ff f993 	bl	8019728 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801a402:	88a2      	ldrh	r2, [r4, #4]
 801a404:	8823      	ldrh	r3, [r4, #0]
 801a406:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801a40a:	4413      	add	r3, r2
 801a40c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a410:	440a      	add	r2, r1
 801a412:	b29b      	uxth	r3, r3
 801a414:	b292      	uxth	r2, r2
 801a416:	b218      	sxth	r0, r3
 801a418:	b211      	sxth	r1, r2
 801a41a:	4288      	cmp	r0, r1
 801a41c:	dd12      	ble.n	801a444 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801a41e:	1a9b      	subs	r3, r3, r2
 801a420:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801a424:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801a428:	4642      	mov	r2, r8
 801a42a:	f8ad 1018 	strh.w	r1, [sp, #24]
 801a42e:	a902      	add	r1, sp, #8
 801a430:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a434:	23ff      	movs	r3, #255	; 0xff
 801a436:	f8ad 001e 	strh.w	r0, [sp, #30]
 801a43a:	4628      	mov	r0, r5
 801a43c:	f8ad 601a 	strh.w	r6, [sp, #26]
 801a440:	f7ff f88c 	bl	801955c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a444:	88e2      	ldrh	r2, [r4, #6]
 801a446:	8863      	ldrh	r3, [r4, #2]
 801a448:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801a44c:	4413      	add	r3, r2
 801a44e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801a452:	440a      	add	r2, r1
 801a454:	b29b      	uxth	r3, r3
 801a456:	b292      	uxth	r2, r2
 801a458:	b218      	sxth	r0, r3
 801a45a:	b211      	sxth	r1, r2
 801a45c:	4288      	cmp	r0, r1
 801a45e:	dd81      	ble.n	801a364 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a460:	1a9b      	subs	r3, r3, r2
 801a462:	f9b4 6000 	ldrsh.w	r6, [r4]
 801a466:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a46a:	4642      	mov	r2, r8
 801a46c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a470:	23ff      	movs	r3, #255	; 0xff
 801a472:	f8ad 6018 	strh.w	r6, [sp, #24]
 801a476:	f8ad 101a 	strh.w	r1, [sp, #26]
 801a47a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801a47e:	e762      	b.n	801a346 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801a480:	4633      	mov	r3, r6
 801a482:	4622      	mov	r2, r4
 801a484:	a902      	add	r1, sp, #8
 801a486:	4628      	mov	r0, r5
 801a488:	f7ff f9be 	bl	8019808 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801a48c:	e76a      	b.n	801a364 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a48e:	e9cd 4600 	strd	r4, r6, [sp]
 801a492:	ab02      	add	r3, sp, #8
 801a494:	464a      	mov	r2, r9
 801a496:	4629      	mov	r1, r5
 801a498:	4650      	mov	r0, sl
 801a49a:	f7ff fd95 	bl	8019fc8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801a49e:	e761      	b.n	801a364 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a4a0:	4638      	mov	r0, r7
 801a4a2:	f7fa fe29 	bl	80150f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801a4a6:	b950      	cbnz	r0, 801a4be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801a4a8:	f8da 3000 	ldr.w	r3, [sl]
 801a4ac:	aa02      	add	r2, sp, #8
 801a4ae:	4629      	mov	r1, r5
 801a4b0:	e9cd 6000 	strd	r6, r0, [sp]
 801a4b4:	4650      	mov	r0, sl
 801a4b6:	68de      	ldr	r6, [r3, #12]
 801a4b8:	4623      	mov	r3, r4
 801a4ba:	47b0      	blx	r6
 801a4bc:	e752      	b.n	801a364 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a4be:	f10d 0818 	add.w	r8, sp, #24
 801a4c2:	4639      	mov	r1, r7
 801a4c4:	af04      	add	r7, sp, #16
 801a4c6:	4640      	mov	r0, r8
 801a4c8:	f7fa fdca 	bl	8015060 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801a4cc:	e898 0003 	ldmia.w	r8, {r0, r1}
 801a4d0:	e887 0003 	stmia.w	r7, {r0, r1}
 801a4d4:	4638      	mov	r0, r7
 801a4d6:	4621      	mov	r1, r4
 801a4d8:	f7f4 fb70 	bl	800ebbc <_ZN8touchgfx4RectaNERKS0_>
 801a4dc:	4638      	mov	r0, r7
 801a4de:	f7f4 fbb0 	bl	800ec42 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a4e2:	b138      	cbz	r0, 801a4f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801a4e4:	4623      	mov	r3, r4
 801a4e6:	9600      	str	r6, [sp, #0]
 801a4e8:	aa02      	add	r2, sp, #8
 801a4ea:	4649      	mov	r1, r9
 801a4ec:	4628      	mov	r0, r5
 801a4ee:	f7ff fdc9 	bl	801a084 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a4f2:	e737      	b.n	801a364 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a4f4:	f8da 3000 	ldr.w	r3, [sl]
 801a4f8:	aa02      	add	r2, sp, #8
 801a4fa:	4629      	mov	r1, r5
 801a4fc:	e9cd 6000 	strd	r6, r0, [sp]
 801a500:	4650      	mov	r0, sl
 801a502:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801a506:	463b      	mov	r3, r7
 801a508:	47d8      	blx	fp
 801a50a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a50e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a512:	4293      	cmp	r3, r2
 801a514:	dd13      	ble.n	801a53e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801a516:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a51a:	1a9b      	subs	r3, r3, r2
 801a51c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a520:	f8ad 0018 	strh.w	r0, [sp, #24]
 801a524:	4628      	mov	r0, r5
 801a526:	f8ad 201a 	strh.w	r2, [sp, #26]
 801a52a:	aa02      	add	r2, sp, #8
 801a52c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801a530:	4649      	mov	r1, r9
 801a532:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a536:	4643      	mov	r3, r8
 801a538:	9600      	str	r6, [sp, #0]
 801a53a:	f7ff fda3 	bl	801a084 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a53e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801a542:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a546:	4293      	cmp	r3, r2
 801a548:	dd13      	ble.n	801a572 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801a54a:	1a9b      	subs	r3, r3, r2
 801a54c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801a550:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801a554:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a558:	aa02      	add	r2, sp, #8
 801a55a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801a55e:	4628      	mov	r0, r5
 801a560:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a564:	4643      	mov	r3, r8
 801a566:	f8ad 101e 	strh.w	r1, [sp, #30]
 801a56a:	4649      	mov	r1, r9
 801a56c:	9600      	str	r6, [sp, #0]
 801a56e:	f7ff fd89 	bl	801a084 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a572:	88a2      	ldrh	r2, [r4, #4]
 801a574:	8823      	ldrh	r3, [r4, #0]
 801a576:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801a57a:	4413      	add	r3, r2
 801a57c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a580:	440a      	add	r2, r1
 801a582:	b29b      	uxth	r3, r3
 801a584:	b292      	uxth	r2, r2
 801a586:	b218      	sxth	r0, r3
 801a588:	b211      	sxth	r1, r2
 801a58a:	4288      	cmp	r0, r1
 801a58c:	dd13      	ble.n	801a5b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801a58e:	1a9b      	subs	r3, r3, r2
 801a590:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801a594:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801a598:	aa02      	add	r2, sp, #8
 801a59a:	f8ad 1018 	strh.w	r1, [sp, #24]
 801a59e:	4649      	mov	r1, r9
 801a5a0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a5a4:	4643      	mov	r3, r8
 801a5a6:	f8ad 001e 	strh.w	r0, [sp, #30]
 801a5aa:	4628      	mov	r0, r5
 801a5ac:	9600      	str	r6, [sp, #0]
 801a5ae:	f8ad 701a 	strh.w	r7, [sp, #26]
 801a5b2:	f7ff fd67 	bl	801a084 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a5b6:	88e2      	ldrh	r2, [r4, #6]
 801a5b8:	8863      	ldrh	r3, [r4, #2]
 801a5ba:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801a5be:	4413      	add	r3, r2
 801a5c0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801a5c4:	440a      	add	r2, r1
 801a5c6:	b29b      	uxth	r3, r3
 801a5c8:	b292      	uxth	r2, r2
 801a5ca:	b218      	sxth	r0, r3
 801a5cc:	b211      	sxth	r1, r2
 801a5ce:	4288      	cmp	r0, r1
 801a5d0:	f77f aec8 	ble.w	801a364 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a5d4:	f9b4 7000 	ldrsh.w	r7, [r4]
 801a5d8:	1a9b      	subs	r3, r3, r2
 801a5da:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a5de:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a5e2:	4643      	mov	r3, r8
 801a5e4:	f8ad 7018 	strh.w	r7, [sp, #24]
 801a5e8:	f8ad 101a 	strh.w	r1, [sp, #26]
 801a5ec:	f8ad 001c 	strh.w	r0, [sp, #28]
 801a5f0:	9600      	str	r6, [sp, #0]
 801a5f2:	e779      	b.n	801a4e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801a5f4:	2003242c 	.word	0x2003242c

0801a5f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801a5f8:	b180      	cbz	r0, 801a61c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801a5fa:	2903      	cmp	r1, #3
 801a5fc:	d81c      	bhi.n	801a638 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801a5fe:	e8df f001 	tbb	[pc, r1]
 801a602:	1d02      	.short	0x1d02
 801a604:	1f08      	.short	0x1f08
 801a606:	4b10      	ldr	r3, [pc, #64]	; (801a648 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801a608:	8818      	ldrh	r0, [r3, #0]
 801a60a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a60e:	4240      	negs	r0, r0
 801a610:	4770      	bx	lr
 801a612:	4b0d      	ldr	r3, [pc, #52]	; (801a648 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801a614:	8818      	ldrh	r0, [r3, #0]
 801a616:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a61a:	4770      	bx	lr
 801a61c:	2903      	cmp	r1, #3
 801a61e:	d80b      	bhi.n	801a638 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801a620:	a301      	add	r3, pc, #4	; (adr r3, 801a628 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801a622:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801a626:	bf00      	nop
 801a628:	0801a63d 	.word	0x0801a63d
 801a62c:	0801a613 	.word	0x0801a613
 801a630:	0801a641 	.word	0x0801a641
 801a634:	0801a607 	.word	0x0801a607
 801a638:	2000      	movs	r0, #0
 801a63a:	4770      	bx	lr
 801a63c:	2001      	movs	r0, #1
 801a63e:	4770      	bx	lr
 801a640:	f04f 30ff 	mov.w	r0, #4294967295
 801a644:	4770      	bx	lr
 801a646:	bf00      	nop
 801a648:	20032426 	.word	0x20032426

0801a64c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801a64c:	b180      	cbz	r0, 801a670 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801a64e:	2903      	cmp	r1, #3
 801a650:	d81c      	bhi.n	801a68c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801a652:	e8df f001 	tbb	[pc, r1]
 801a656:	021d      	.short	0x021d
 801a658:	071f      	.short	0x071f
 801a65a:	4b10      	ldr	r3, [pc, #64]	; (801a69c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801a65c:	8818      	ldrh	r0, [r3, #0]
 801a65e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a662:	4770      	bx	lr
 801a664:	4b0d      	ldr	r3, [pc, #52]	; (801a69c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801a666:	8818      	ldrh	r0, [r3, #0]
 801a668:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a66c:	4240      	negs	r0, r0
 801a66e:	4770      	bx	lr
 801a670:	2903      	cmp	r1, #3
 801a672:	d80b      	bhi.n	801a68c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801a674:	a301      	add	r3, pc, #4	; (adr r3, 801a67c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801a676:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801a67a:	bf00      	nop
 801a67c:	0801a65b 	.word	0x0801a65b
 801a680:	0801a695 	.word	0x0801a695
 801a684:	0801a665 	.word	0x0801a665
 801a688:	0801a691 	.word	0x0801a691
 801a68c:	2000      	movs	r0, #0
 801a68e:	4770      	bx	lr
 801a690:	2001      	movs	r0, #1
 801a692:	4770      	bx	lr
 801a694:	f04f 30ff 	mov.w	r0, #4294967295
 801a698:	4770      	bx	lr
 801a69a:	bf00      	nop
 801a69c:	20032426 	.word	0x20032426

0801a6a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801a6a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6a4:	b099      	sub	sp, #100	; 0x64
 801a6a6:	910b      	str	r1, [sp, #44]	; 0x2c
 801a6a8:	a914      	add	r1, sp, #80	; 0x50
 801a6aa:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801a6ae:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801a6b2:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801a6b6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801a6ba:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801a6be:	e881 000c 	stmia.w	r1, {r2, r3}
 801a6c2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801a6c6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801a6ca:	9309      	str	r3, [sp, #36]	; 0x24
 801a6cc:	f891 900d 	ldrb.w	r9, [r1, #13]
 801a6d0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801a6d4:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801a6d8:	9310      	str	r3, [sp, #64]	; 0x40
 801a6da:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801a6de:	930c      	str	r3, [sp, #48]	; 0x30
 801a6e0:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801a6e4:	798f      	ldrb	r7, [r1, #6]
 801a6e6:	431f      	orrs	r7, r3
 801a6e8:	f000 8195 	beq.w	801aa16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a6ec:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801a6f0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801a6f4:	f891 9007 	ldrb.w	r9, [r1, #7]
 801a6f8:	ea59 0903 	orrs.w	r9, r9, r3
 801a6fc:	f000 818b 	beq.w	801aa16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a700:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801a704:	b29b      	uxth	r3, r3
 801a706:	2d00      	cmp	r5, #0
 801a708:	f000 812e 	beq.w	801a968 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801a70c:	1aed      	subs	r5, r5, r3
 801a70e:	b2ad      	uxth	r5, r5
 801a710:	042b      	lsls	r3, r5, #16
 801a712:	d502      	bpl.n	801a71a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801a714:	1b64      	subs	r4, r4, r5
 801a716:	2500      	movs	r5, #0
 801a718:	b224      	sxth	r4, r4
 801a71a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801a71e:	a814      	add	r0, sp, #80	; 0x50
 801a720:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801a724:	428c      	cmp	r4, r1
 801a726:	b28b      	uxth	r3, r1
 801a728:	bfbf      	itttt	lt
 801a72a:	18ed      	addlt	r5, r5, r3
 801a72c:	1b2c      	sublt	r4, r5, r4
 801a72e:	b2a5      	uxthlt	r5, r4
 801a730:	460c      	movlt	r4, r1
 801a732:	8891      	ldrh	r1, [r2, #4]
 801a734:	440b      	add	r3, r1
 801a736:	4621      	mov	r1, r4
 801a738:	b21b      	sxth	r3, r3
 801a73a:	930f      	str	r3, [sp, #60]	; 0x3c
 801a73c:	88d3      	ldrh	r3, [r2, #6]
 801a73e:	8852      	ldrh	r2, [r2, #2]
 801a740:	4413      	add	r3, r2
 801a742:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a744:	b21b      	sxth	r3, r3
 801a746:	930d      	str	r3, [sp, #52]	; 0x34
 801a748:	4bbd      	ldr	r3, [pc, #756]	; (801aa40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801a74a:	f893 b000 	ldrb.w	fp, [r3]
 801a74e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801a752:	f1dc 0300 	rsbs	r3, ip, #0
 801a756:	eb43 030c 	adc.w	r3, r3, ip
 801a75a:	930e      	str	r3, [sp, #56]	; 0x38
 801a75c:	4653      	mov	r3, sl
 801a75e:	f7f7 f8a8 	bl	80118b2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801a762:	4621      	mov	r1, r4
 801a764:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801a768:	4653      	mov	r3, sl
 801a76a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a76c:	a814      	add	r0, sp, #80	; 0x50
 801a76e:	f7f7 f8bd 	bl	80118ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801a772:	a918      	add	r1, sp, #96	; 0x60
 801a774:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801a778:	a817      	add	r0, sp, #92	; 0x5c
 801a77a:	f7f7 f9e3 	bl	8011b44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801a77e:	f1ba 0f00 	cmp.w	sl, #0
 801a782:	f040 80f4 	bne.w	801a96e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801a786:	f1bb 0f01 	cmp.w	fp, #1
 801a78a:	f040 80f8 	bne.w	801a97e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801a78e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a790:	2b00      	cmp	r3, #0
 801a792:	f040 8145 	bne.w	801aa20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801a796:	b2ba      	uxth	r2, r7
 801a798:	b905      	cbnz	r5, 801a79c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801a79a:	b16e      	cbz	r6, 801a7b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801a79c:	fb06 5302 	mla	r3, r6, r2, r5
 801a7a0:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801a7a2:	4631      	mov	r1, r6
 801a7a4:	fb08 f303 	mul.w	r3, r8, r3
 801a7a8:	f003 0607 	and.w	r6, r3, #7
 801a7ac:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801a7b0:	9328      	str	r3, [sp, #160]	; 0xa0
 801a7b2:	eba9 0301 	sub.w	r3, r9, r1
 801a7b6:	930a      	str	r3, [sp, #40]	; 0x28
 801a7b8:	4651      	mov	r1, sl
 801a7ba:	980e      	ldr	r0, [sp, #56]	; 0x38
 801a7bc:	f7ff ff1c 	bl	801a5f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801a7c0:	4681      	mov	r9, r0
 801a7c2:	980e      	ldr	r0, [sp, #56]	; 0x38
 801a7c4:	f7ff ff42 	bl	801a64c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801a7c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a7ca:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a7cc:	4683      	mov	fp, r0
 801a7ce:	eba3 0a01 	sub.w	sl, r3, r1
 801a7d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a7d4:	459a      	cmp	sl, r3
 801a7d6:	bfa8      	it	ge
 801a7d8:	469a      	movge	sl, r3
 801a7da:	f1ba 0f00 	cmp.w	sl, #0
 801a7de:	f340 811a 	ble.w	801aa16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a7e2:	1b64      	subs	r4, r4, r5
 801a7e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a7e6:	1b1c      	subs	r4, r3, r4
 801a7e8:	42bc      	cmp	r4, r7
 801a7ea:	bfd4      	ite	le
 801a7ec:	ebc5 0504 	rsble	r5, r5, r4
 801a7f0:	ebc5 0507 	rsbgt	r5, r5, r7
 801a7f4:	2d00      	cmp	r5, #0
 801a7f6:	f340 810e 	ble.w	801aa16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a7fa:	1b52      	subs	r2, r2, r5
 801a7fc:	fb08 f302 	mul.w	r3, r8, r2
 801a800:	930f      	str	r3, [sp, #60]	; 0x3c
 801a802:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a804:	2b00      	cmp	r3, #0
 801a806:	f040 8116 	bne.w	801aa36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801a80a:	4b8e      	ldr	r3, [pc, #568]	; (801aa44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801a80c:	6818      	ldr	r0, [r3, #0]
 801a80e:	6803      	ldr	r3, [r0, #0]
 801a810:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a812:	4798      	blx	r3
 801a814:	2301      	movs	r3, #1
 801a816:	4a8c      	ldr	r2, [pc, #560]	; (801aa48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801a818:	fa03 f308 	lsl.w	r3, r3, r8
 801a81c:	8811      	ldrh	r1, [r2, #0]
 801a81e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801a822:	3b01      	subs	r3, #1
 801a824:	b2db      	uxtb	r3, r3
 801a826:	930e      	str	r3, [sp, #56]	; 0x38
 801a828:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801a82c:	fb01 2303 	mla	r3, r1, r3, r2
 801a830:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a834:	930a      	str	r3, [sp, #40]	; 0x28
 801a836:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a838:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801a83c:	9313      	str	r3, [sp, #76]	; 0x4c
 801a83e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a840:	0a19      	lsrs	r1, r3, #8
 801a842:	b2cb      	uxtb	r3, r1
 801a844:	9312      	str	r3, [sp, #72]	; 0x48
 801a846:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a848:	b2db      	uxtb	r3, r3
 801a84a:	9311      	str	r3, [sp, #68]	; 0x44
 801a84c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a84e:	095a      	lsrs	r2, r3, #5
 801a850:	4b7e      	ldr	r3, [pc, #504]	; (801aa4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 801a852:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a856:	400b      	ands	r3, r1
 801a858:	4313      	orrs	r3, r2
 801a85a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801a85c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a860:	4313      	orrs	r3, r2
 801a862:	b29b      	uxth	r3, r3
 801a864:	9310      	str	r3, [sp, #64]	; 0x40
 801a866:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a868:	781a      	ldrb	r2, [r3, #0]
 801a86a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801a86e:	fb05 b919 	mls	r9, r5, r9, fp
 801a872:	4132      	asrs	r2, r6
 801a874:	fb03 fb05 	mul.w	fp, r3, r5
 801a878:	930d      	str	r3, [sp, #52]	; 0x34
 801a87a:	b2d2      	uxtb	r2, r2
 801a87c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801a880:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801a884:	f0c0 80f5 	bcc.w	801aa72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801a888:	46ae      	mov	lr, r5
 801a88a:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801a88e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801a892:	f0c0 80dd 	bcc.w	801aa50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801a896:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a898:	4013      	ands	r3, r2
 801a89a:	d055      	beq.n	801a948 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801a89c:	20ff      	movs	r0, #255	; 0xff
 801a89e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a8a0:	fb90 f1f1 	sdiv	r1, r0, r1
 801a8a4:	434b      	muls	r3, r1
 801a8a6:	2bfe      	cmp	r3, #254	; 0xfe
 801a8a8:	dd03      	ble.n	801a8b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801a8aa:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a8ac:	4281      	cmp	r1, r0
 801a8ae:	f000 80c4 	beq.w	801aa3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 801a8b2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a8b4:	f8bc 4000 	ldrh.w	r4, [ip]
 801a8b8:	fb11 f303 	smulbb	r3, r1, r3
 801a8bc:	1220      	asrs	r0, r4, #8
 801a8be:	b29b      	uxth	r3, r3
 801a8c0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a8c4:	1c59      	adds	r1, r3, #1
 801a8c6:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801a8ca:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a8ce:	10e1      	asrs	r1, r4, #3
 801a8d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a8d4:	00e4      	lsls	r4, r4, #3
 801a8d6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a8da:	b29f      	uxth	r7, r3
 801a8dc:	43db      	mvns	r3, r3
 801a8de:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801a8e2:	b2db      	uxtb	r3, r3
 801a8e4:	b2e4      	uxtb	r4, r4
 801a8e6:	9309      	str	r3, [sp, #36]	; 0x24
 801a8e8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a8ea:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801a8ee:	fb13 f907 	smulbb	r9, r3, r7
 801a8f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a8f4:	fb00 9003 	mla	r0, r0, r3, r9
 801a8f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a8fa:	fb13 f907 	smulbb	r9, r3, r7
 801a8fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a900:	b280      	uxth	r0, r0
 801a902:	fb01 9103 	mla	r1, r1, r3, r9
 801a906:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a908:	fb13 f707 	smulbb	r7, r3, r7
 801a90c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a90e:	b289      	uxth	r1, r1
 801a910:	fb04 7403 	mla	r4, r4, r3, r7
 801a914:	1c43      	adds	r3, r0, #1
 801a916:	b2a4      	uxth	r4, r4
 801a918:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a91c:	f104 0901 	add.w	r9, r4, #1
 801a920:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a924:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801a928:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801a92c:	ea49 0000 	orr.w	r0, r9, r0
 801a930:	f101 0901 	add.w	r9, r1, #1
 801a934:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801a938:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a93c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a940:	ea40 0009 	orr.w	r0, r0, r9
 801a944:	f8ac 0000 	strh.w	r0, [ip]
 801a948:	4446      	add	r6, r8
 801a94a:	b2b6      	uxth	r6, r6
 801a94c:	2e07      	cmp	r6, #7
 801a94e:	bf89      	itett	hi
 801a950:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801a952:	fa42 f208 	asrls.w	r2, r2, r8
 801a956:	2600      	movhi	r6, #0
 801a958:	785a      	ldrbhi	r2, [r3, #1]
 801a95a:	bf8a      	itet	hi
 801a95c:	3301      	addhi	r3, #1
 801a95e:	b2d2      	uxtbls	r2, r2
 801a960:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801a962:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a964:	449c      	add	ip, r3
 801a966:	e792      	b.n	801a88e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801a968:	441c      	add	r4, r3
 801a96a:	b224      	sxth	r4, r4
 801a96c:	e6d5      	b.n	801a71a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801a96e:	f1ba 0f01 	cmp.w	sl, #1
 801a972:	f47f af0c 	bne.w	801a78e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a976:	f1bb 0f01 	cmp.w	fp, #1
 801a97a:	f47f af08 	bne.w	801a78e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a97e:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 801aa44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 801a982:	f8db 0000 	ldr.w	r0, [fp]
 801a986:	6803      	ldr	r3, [r0, #0]
 801a988:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a98a:	4798      	blx	r3
 801a98c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801a990:	465a      	mov	r2, fp
 801a992:	d006      	beq.n	801a9a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801a994:	f1b8 0f04 	cmp.w	r8, #4
 801a998:	d140      	bne.n	801aa1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801a99a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a99c:	3300      	adds	r3, #0
 801a99e:	bf18      	it	ne
 801a9a0:	2301      	movne	r3, #1
 801a9a2:	0580      	lsls	r0, r0, #22
 801a9a4:	d56e      	bpl.n	801aa84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801a9a6:	f1b8 0f08 	cmp.w	r8, #8
 801a9aa:	d16b      	bne.n	801aa84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801a9ac:	2b00      	cmp	r3, #0
 801a9ae:	bf0c      	ite	eq
 801a9b0:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801a9b4:	f44f 7180 	movne.w	r1, #256	; 0x100
 801a9b8:	2d00      	cmp	r5, #0
 801a9ba:	f47f aee8 	bne.w	801a78e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a9be:	2e00      	cmp	r6, #0
 801a9c0:	f47f aee5 	bne.w	801a78e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a9c4:	19e3      	adds	r3, r4, r7
 801a9c6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801a9c8:	4283      	cmp	r3, r0
 801a9ca:	f73f aee0 	bgt.w	801a78e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a9ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a9d0:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a9d2:	444b      	add	r3, r9
 801a9d4:	4283      	cmp	r3, r0
 801a9d6:	f73f aeda 	bgt.w	801a78e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a9da:	b2bf      	uxth	r7, r7
 801a9dc:	f1b8 0f08 	cmp.w	r8, #8
 801a9e0:	6810      	ldr	r0, [r2, #0]
 801a9e2:	f04f 0500 	mov.w	r5, #0
 801a9e6:	bf18      	it	ne
 801a9e8:	3701      	addne	r7, #1
 801a9ea:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801a9ee:	6804      	ldr	r4, [r0, #0]
 801a9f0:	bf18      	it	ne
 801a9f2:	f027 0701 	bicne.w	r7, r7, #1
 801a9f6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801a9fa:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801a9fe:	990c      	ldr	r1, [sp, #48]	; 0x30
 801aa00:	bf18      	it	ne
 801aa02:	b2bf      	uxthne	r7, r7
 801aa04:	9104      	str	r1, [sp, #16]
 801aa06:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801aa08:	e9cd 7900 	strd	r7, r9, [sp]
 801aa0c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801aa10:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801aa12:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801aa14:	47a0      	blx	r4
 801aa16:	b019      	add	sp, #100	; 0x64
 801aa18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa1c:	2300      	movs	r3, #0
 801aa1e:	e7c0      	b.n	801a9a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801aa20:	2208      	movs	r2, #8
 801aa22:	fb92 f3f8 	sdiv	r3, r2, r8
 801aa26:	1e5a      	subs	r2, r3, #1
 801aa28:	443a      	add	r2, r7
 801aa2a:	fb92 f2f3 	sdiv	r2, r2, r3
 801aa2e:	fb12 f203 	smulbb	r2, r2, r3
 801aa32:	b292      	uxth	r2, r2
 801aa34:	e6b0      	b.n	801a798 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801aa36:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801aa38:	e6ec      	b.n	801a814 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801aa3a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801aa3c:	e782      	b.n	801a944 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801aa3e:	bf00      	nop
 801aa40:	20032424 	.word	0x20032424
 801aa44:	2003242c 	.word	0x2003242c
 801aa48:	20032426 	.word	0x20032426
 801aa4c:	00fff800 	.word	0x00fff800
 801aa50:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801aa52:	b153      	cbz	r3, 801aa6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801aa54:	441e      	add	r6, r3
 801aa56:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801aa58:	b2b6      	uxth	r6, r6
 801aa5a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801aa5e:	f006 0607 	and.w	r6, r6, #7
 801aa62:	781a      	ldrb	r2, [r3, #0]
 801aa64:	9328      	str	r3, [sp, #160]	; 0xa0
 801aa66:	4132      	asrs	r2, r6
 801aa68:	b2d2      	uxtb	r2, r2
 801aa6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aa6c:	445b      	add	r3, fp
 801aa6e:	930a      	str	r3, [sp, #40]	; 0x28
 801aa70:	e706      	b.n	801a880 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801aa72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801aa74:	2b00      	cmp	r3, #0
 801aa76:	d1ce      	bne.n	801aa16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801aa78:	4b05      	ldr	r3, [pc, #20]	; (801aa90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801aa7a:	6818      	ldr	r0, [r3, #0]
 801aa7c:	6803      	ldr	r3, [r0, #0]
 801aa7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801aa80:	4798      	blx	r3
 801aa82:	e7c8      	b.n	801aa16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801aa84:	2b00      	cmp	r3, #0
 801aa86:	f43f ae82 	beq.w	801a78e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801aa8a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801aa8e:	e793      	b.n	801a9b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801aa90:	2003242c 	.word	0x2003242c

0801aa94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801aa94:	b538      	push	{r3, r4, r5, lr}
 801aa96:	4c15      	ldr	r4, [pc, #84]	; (801aaec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801aa98:	4605      	mov	r5, r0
 801aa9a:	7823      	ldrb	r3, [r4, #0]
 801aa9c:	f3bf 8f5b 	dmb	ish
 801aaa0:	07da      	lsls	r2, r3, #31
 801aaa2:	d40b      	bmi.n	801aabc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801aaa4:	4620      	mov	r0, r4
 801aaa6:	f007 febe 	bl	8022826 <__cxa_guard_acquire>
 801aaaa:	b138      	cbz	r0, 801aabc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801aaac:	4620      	mov	r0, r4
 801aaae:	f007 fec6 	bl	802283e <__cxa_guard_release>
 801aab2:	4a0f      	ldr	r2, [pc, #60]	; (801aaf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801aab4:	490f      	ldr	r1, [pc, #60]	; (801aaf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801aab6:	4810      	ldr	r0, [pc, #64]	; (801aaf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801aab8:	f007 feae 	bl	8022818 <__aeabi_atexit>
 801aabc:	4c0f      	ldr	r4, [pc, #60]	; (801aafc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801aabe:	7823      	ldrb	r3, [r4, #0]
 801aac0:	f3bf 8f5b 	dmb	ish
 801aac4:	07db      	lsls	r3, r3, #31
 801aac6:	d40b      	bmi.n	801aae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801aac8:	4620      	mov	r0, r4
 801aaca:	f007 feac 	bl	8022826 <__cxa_guard_acquire>
 801aace:	b138      	cbz	r0, 801aae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801aad0:	4620      	mov	r0, r4
 801aad2:	f007 feb4 	bl	802283e <__cxa_guard_release>
 801aad6:	4a06      	ldr	r2, [pc, #24]	; (801aaf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801aad8:	4909      	ldr	r1, [pc, #36]	; (801ab00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801aada:	480a      	ldr	r0, [pc, #40]	; (801ab04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801aadc:	f007 fe9c 	bl	8022818 <__aeabi_atexit>
 801aae0:	4b05      	ldr	r3, [pc, #20]	; (801aaf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801aae2:	616b      	str	r3, [r5, #20]
 801aae4:	4b07      	ldr	r3, [pc, #28]	; (801ab04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801aae6:	61ab      	str	r3, [r5, #24]
 801aae8:	bd38      	pop	{r3, r4, r5, pc}
 801aaea:	bf00      	nop
 801aaec:	20032504 	.word	0x20032504
 801aaf0:	20000000 	.word	0x20000000
 801aaf4:	08017885 	.word	0x08017885
 801aaf8:	2000008c 	.word	0x2000008c
 801aafc:	20032508 	.word	0x20032508
 801ab00:	08017883 	.word	0x08017883
 801ab04:	20000090 	.word	0x20000090

0801ab08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801ab08:	b538      	push	{r3, r4, r5, lr}
 801ab0a:	4c15      	ldr	r4, [pc, #84]	; (801ab60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801ab0c:	4605      	mov	r5, r0
 801ab0e:	7823      	ldrb	r3, [r4, #0]
 801ab10:	f3bf 8f5b 	dmb	ish
 801ab14:	07da      	lsls	r2, r3, #31
 801ab16:	d40b      	bmi.n	801ab30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801ab18:	4620      	mov	r0, r4
 801ab1a:	f007 fe84 	bl	8022826 <__cxa_guard_acquire>
 801ab1e:	b138      	cbz	r0, 801ab30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801ab20:	4620      	mov	r0, r4
 801ab22:	f007 fe8c 	bl	802283e <__cxa_guard_release>
 801ab26:	4a0f      	ldr	r2, [pc, #60]	; (801ab64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801ab28:	490f      	ldr	r1, [pc, #60]	; (801ab68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801ab2a:	4810      	ldr	r0, [pc, #64]	; (801ab6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801ab2c:	f007 fe74 	bl	8022818 <__aeabi_atexit>
 801ab30:	4c0f      	ldr	r4, [pc, #60]	; (801ab70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801ab32:	7823      	ldrb	r3, [r4, #0]
 801ab34:	f3bf 8f5b 	dmb	ish
 801ab38:	07db      	lsls	r3, r3, #31
 801ab3a:	d40b      	bmi.n	801ab54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801ab3c:	4620      	mov	r0, r4
 801ab3e:	f007 fe72 	bl	8022826 <__cxa_guard_acquire>
 801ab42:	b138      	cbz	r0, 801ab54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801ab44:	4620      	mov	r0, r4
 801ab46:	f007 fe7a 	bl	802283e <__cxa_guard_release>
 801ab4a:	4a06      	ldr	r2, [pc, #24]	; (801ab64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801ab4c:	4909      	ldr	r1, [pc, #36]	; (801ab74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801ab4e:	480a      	ldr	r0, [pc, #40]	; (801ab78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801ab50:	f007 fe62 	bl	8022818 <__aeabi_atexit>
 801ab54:	4b05      	ldr	r3, [pc, #20]	; (801ab6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801ab56:	60eb      	str	r3, [r5, #12]
 801ab58:	4b07      	ldr	r3, [pc, #28]	; (801ab78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801ab5a:	612b      	str	r3, [r5, #16]
 801ab5c:	bd38      	pop	{r3, r4, r5, pc}
 801ab5e:	bf00      	nop
 801ab60:	200324dc 	.word	0x200324dc
 801ab64:	20000000 	.word	0x20000000
 801ab68:	08017889 	.word	0x08017889
 801ab6c:	20000064 	.word	0x20000064
 801ab70:	200324e0 	.word	0x200324e0
 801ab74:	08017887 	.word	0x08017887
 801ab78:	20000068 	.word	0x20000068

0801ab7c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801ab7c:	b510      	push	{r4, lr}
 801ab7e:	4604      	mov	r4, r0
 801ab80:	f7ff ff88 	bl	801aa94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801ab84:	4620      	mov	r0, r4
 801ab86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ab8a:	f7ff bfbd 	b.w	801ab08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801ab90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801ab90:	b538      	push	{r3, r4, r5, lr}
 801ab92:	4c15      	ldr	r4, [pc, #84]	; (801abe8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801ab94:	4605      	mov	r5, r0
 801ab96:	7823      	ldrb	r3, [r4, #0]
 801ab98:	f3bf 8f5b 	dmb	ish
 801ab9c:	07da      	lsls	r2, r3, #31
 801ab9e:	d40b      	bmi.n	801abb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801aba0:	4620      	mov	r0, r4
 801aba2:	f007 fe40 	bl	8022826 <__cxa_guard_acquire>
 801aba6:	b138      	cbz	r0, 801abb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801aba8:	4620      	mov	r0, r4
 801abaa:	f007 fe48 	bl	802283e <__cxa_guard_release>
 801abae:	4a0f      	ldr	r2, [pc, #60]	; (801abec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801abb0:	490f      	ldr	r1, [pc, #60]	; (801abf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801abb2:	4810      	ldr	r0, [pc, #64]	; (801abf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801abb4:	f007 fe30 	bl	8022818 <__aeabi_atexit>
 801abb8:	4c0f      	ldr	r4, [pc, #60]	; (801abf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801abba:	7823      	ldrb	r3, [r4, #0]
 801abbc:	f3bf 8f5b 	dmb	ish
 801abc0:	07db      	lsls	r3, r3, #31
 801abc2:	d40b      	bmi.n	801abdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801abc4:	4620      	mov	r0, r4
 801abc6:	f007 fe2e 	bl	8022826 <__cxa_guard_acquire>
 801abca:	b138      	cbz	r0, 801abdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801abcc:	4620      	mov	r0, r4
 801abce:	f007 fe36 	bl	802283e <__cxa_guard_release>
 801abd2:	4a06      	ldr	r2, [pc, #24]	; (801abec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801abd4:	4909      	ldr	r1, [pc, #36]	; (801abfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801abd6:	480a      	ldr	r0, [pc, #40]	; (801ac00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801abd8:	f007 fe1e 	bl	8022818 <__aeabi_atexit>
 801abdc:	4b05      	ldr	r3, [pc, #20]	; (801abf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801abde:	626b      	str	r3, [r5, #36]	; 0x24
 801abe0:	4b07      	ldr	r3, [pc, #28]	; (801ac00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801abe2:	62ab      	str	r3, [r5, #40]	; 0x28
 801abe4:	bd38      	pop	{r3, r4, r5, pc}
 801abe6:	bf00      	nop
 801abe8:	2003250c 	.word	0x2003250c
 801abec:	20000000 	.word	0x20000000
 801abf0:	0801787d 	.word	0x0801787d
 801abf4:	20000094 	.word	0x20000094
 801abf8:	20032510 	.word	0x20032510
 801abfc:	0801787b 	.word	0x0801787b
 801ac00:	20000098 	.word	0x20000098

0801ac04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801ac04:	b538      	push	{r3, r4, r5, lr}
 801ac06:	4c15      	ldr	r4, [pc, #84]	; (801ac5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801ac08:	4605      	mov	r5, r0
 801ac0a:	7823      	ldrb	r3, [r4, #0]
 801ac0c:	f3bf 8f5b 	dmb	ish
 801ac10:	07da      	lsls	r2, r3, #31
 801ac12:	d40b      	bmi.n	801ac2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ac14:	4620      	mov	r0, r4
 801ac16:	f007 fe06 	bl	8022826 <__cxa_guard_acquire>
 801ac1a:	b138      	cbz	r0, 801ac2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ac1c:	4620      	mov	r0, r4
 801ac1e:	f007 fe0e 	bl	802283e <__cxa_guard_release>
 801ac22:	4a0f      	ldr	r2, [pc, #60]	; (801ac60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801ac24:	490f      	ldr	r1, [pc, #60]	; (801ac64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801ac26:	4810      	ldr	r0, [pc, #64]	; (801ac68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801ac28:	f007 fdf6 	bl	8022818 <__aeabi_atexit>
 801ac2c:	4c0f      	ldr	r4, [pc, #60]	; (801ac6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801ac2e:	7823      	ldrb	r3, [r4, #0]
 801ac30:	f3bf 8f5b 	dmb	ish
 801ac34:	07db      	lsls	r3, r3, #31
 801ac36:	d40b      	bmi.n	801ac50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801ac38:	4620      	mov	r0, r4
 801ac3a:	f007 fdf4 	bl	8022826 <__cxa_guard_acquire>
 801ac3e:	b138      	cbz	r0, 801ac50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801ac40:	4620      	mov	r0, r4
 801ac42:	f007 fdfc 	bl	802283e <__cxa_guard_release>
 801ac46:	4a06      	ldr	r2, [pc, #24]	; (801ac60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801ac48:	4909      	ldr	r1, [pc, #36]	; (801ac70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801ac4a:	480a      	ldr	r0, [pc, #40]	; (801ac74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801ac4c:	f007 fde4 	bl	8022818 <__aeabi_atexit>
 801ac50:	4b05      	ldr	r3, [pc, #20]	; (801ac68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801ac52:	61eb      	str	r3, [r5, #28]
 801ac54:	4b07      	ldr	r3, [pc, #28]	; (801ac74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801ac56:	622b      	str	r3, [r5, #32]
 801ac58:	bd38      	pop	{r3, r4, r5, pc}
 801ac5a:	bf00      	nop
 801ac5c:	200324e4 	.word	0x200324e4
 801ac60:	20000000 	.word	0x20000000
 801ac64:	08017881 	.word	0x08017881
 801ac68:	2000006c 	.word	0x2000006c
 801ac6c:	200324e8 	.word	0x200324e8
 801ac70:	0801787f 	.word	0x0801787f
 801ac74:	20000070 	.word	0x20000070

0801ac78 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801ac78:	b510      	push	{r4, lr}
 801ac7a:	4604      	mov	r4, r0
 801ac7c:	f7ff ff88 	bl	801ab90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801ac80:	4620      	mov	r0, r4
 801ac82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ac86:	f7ff bfbd 	b.w	801ac04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801ac8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801ac8c:	b538      	push	{r3, r4, r5, lr}
 801ac8e:	4c15      	ldr	r4, [pc, #84]	; (801ace4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801ac90:	4605      	mov	r5, r0
 801ac92:	7823      	ldrb	r3, [r4, #0]
 801ac94:	f3bf 8f5b 	dmb	ish
 801ac98:	07da      	lsls	r2, r3, #31
 801ac9a:	d40b      	bmi.n	801acb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801ac9c:	4620      	mov	r0, r4
 801ac9e:	f007 fdc2 	bl	8022826 <__cxa_guard_acquire>
 801aca2:	b138      	cbz	r0, 801acb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801aca4:	4620      	mov	r0, r4
 801aca6:	f007 fdca 	bl	802283e <__cxa_guard_release>
 801acaa:	4a0f      	ldr	r2, [pc, #60]	; (801ace8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801acac:	490f      	ldr	r1, [pc, #60]	; (801acec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801acae:	4810      	ldr	r0, [pc, #64]	; (801acf0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801acb0:	f007 fdb2 	bl	8022818 <__aeabi_atexit>
 801acb4:	4c0f      	ldr	r4, [pc, #60]	; (801acf4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801acb6:	7823      	ldrb	r3, [r4, #0]
 801acb8:	f3bf 8f5b 	dmb	ish
 801acbc:	07db      	lsls	r3, r3, #31
 801acbe:	d40b      	bmi.n	801acd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801acc0:	4620      	mov	r0, r4
 801acc2:	f007 fdb0 	bl	8022826 <__cxa_guard_acquire>
 801acc6:	b138      	cbz	r0, 801acd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801acc8:	4620      	mov	r0, r4
 801acca:	f007 fdb8 	bl	802283e <__cxa_guard_release>
 801acce:	4a06      	ldr	r2, [pc, #24]	; (801ace8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801acd0:	4909      	ldr	r1, [pc, #36]	; (801acf8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801acd2:	480a      	ldr	r0, [pc, #40]	; (801acfc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801acd4:	f007 fda0 	bl	8022818 <__aeabi_atexit>
 801acd8:	4b05      	ldr	r3, [pc, #20]	; (801acf0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801acda:	636b      	str	r3, [r5, #52]	; 0x34
 801acdc:	4b07      	ldr	r3, [pc, #28]	; (801acfc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801acde:	63ab      	str	r3, [r5, #56]	; 0x38
 801ace0:	bd38      	pop	{r3, r4, r5, pc}
 801ace2:	bf00      	nop
 801ace4:	2003251c 	.word	0x2003251c
 801ace8:	20000000 	.word	0x20000000
 801acec:	08017875 	.word	0x08017875
 801acf0:	200000a4 	.word	0x200000a4
 801acf4:	20032520 	.word	0x20032520
 801acf8:	08017873 	.word	0x08017873
 801acfc:	200000a8 	.word	0x200000a8

0801ad00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801ad00:	b538      	push	{r3, r4, r5, lr}
 801ad02:	4c15      	ldr	r4, [pc, #84]	; (801ad58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801ad04:	4605      	mov	r5, r0
 801ad06:	7823      	ldrb	r3, [r4, #0]
 801ad08:	f3bf 8f5b 	dmb	ish
 801ad0c:	07da      	lsls	r2, r3, #31
 801ad0e:	d40b      	bmi.n	801ad28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801ad10:	4620      	mov	r0, r4
 801ad12:	f007 fd88 	bl	8022826 <__cxa_guard_acquire>
 801ad16:	b138      	cbz	r0, 801ad28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801ad18:	4620      	mov	r0, r4
 801ad1a:	f007 fd90 	bl	802283e <__cxa_guard_release>
 801ad1e:	4a0f      	ldr	r2, [pc, #60]	; (801ad5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801ad20:	490f      	ldr	r1, [pc, #60]	; (801ad60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801ad22:	4810      	ldr	r0, [pc, #64]	; (801ad64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801ad24:	f007 fd78 	bl	8022818 <__aeabi_atexit>
 801ad28:	4c0f      	ldr	r4, [pc, #60]	; (801ad68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801ad2a:	7823      	ldrb	r3, [r4, #0]
 801ad2c:	f3bf 8f5b 	dmb	ish
 801ad30:	07db      	lsls	r3, r3, #31
 801ad32:	d40b      	bmi.n	801ad4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801ad34:	4620      	mov	r0, r4
 801ad36:	f007 fd76 	bl	8022826 <__cxa_guard_acquire>
 801ad3a:	b138      	cbz	r0, 801ad4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801ad3c:	4620      	mov	r0, r4
 801ad3e:	f007 fd7e 	bl	802283e <__cxa_guard_release>
 801ad42:	4a06      	ldr	r2, [pc, #24]	; (801ad5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801ad44:	4909      	ldr	r1, [pc, #36]	; (801ad6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801ad46:	480a      	ldr	r0, [pc, #40]	; (801ad70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801ad48:	f007 fd66 	bl	8022818 <__aeabi_atexit>
 801ad4c:	4b05      	ldr	r3, [pc, #20]	; (801ad64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801ad4e:	62eb      	str	r3, [r5, #44]	; 0x2c
 801ad50:	4b07      	ldr	r3, [pc, #28]	; (801ad70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801ad52:	632b      	str	r3, [r5, #48]	; 0x30
 801ad54:	bd38      	pop	{r3, r4, r5, pc}
 801ad56:	bf00      	nop
 801ad58:	200324ec 	.word	0x200324ec
 801ad5c:	20000000 	.word	0x20000000
 801ad60:	08017879 	.word	0x08017879
 801ad64:	20000074 	.word	0x20000074
 801ad68:	200324f0 	.word	0x200324f0
 801ad6c:	08017877 	.word	0x08017877
 801ad70:	20000078 	.word	0x20000078

0801ad74 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801ad74:	b510      	push	{r4, lr}
 801ad76:	4604      	mov	r4, r0
 801ad78:	f7ff ff88 	bl	801ac8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801ad7c:	4620      	mov	r0, r4
 801ad7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ad82:	f7ff bfbd 	b.w	801ad00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801ad88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801ad88:	b538      	push	{r3, r4, r5, lr}
 801ad8a:	4c15      	ldr	r4, [pc, #84]	; (801ade0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801ad8c:	4605      	mov	r5, r0
 801ad8e:	7823      	ldrb	r3, [r4, #0]
 801ad90:	f3bf 8f5b 	dmb	ish
 801ad94:	07da      	lsls	r2, r3, #31
 801ad96:	d40b      	bmi.n	801adb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801ad98:	4620      	mov	r0, r4
 801ad9a:	f007 fd44 	bl	8022826 <__cxa_guard_acquire>
 801ad9e:	b138      	cbz	r0, 801adb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801ada0:	4620      	mov	r0, r4
 801ada2:	f007 fd4c 	bl	802283e <__cxa_guard_release>
 801ada6:	4a0f      	ldr	r2, [pc, #60]	; (801ade4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801ada8:	490f      	ldr	r1, [pc, #60]	; (801ade8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801adaa:	4810      	ldr	r0, [pc, #64]	; (801adec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801adac:	f007 fd34 	bl	8022818 <__aeabi_atexit>
 801adb0:	4c0f      	ldr	r4, [pc, #60]	; (801adf0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801adb2:	7823      	ldrb	r3, [r4, #0]
 801adb4:	f3bf 8f5b 	dmb	ish
 801adb8:	07db      	lsls	r3, r3, #31
 801adba:	d40b      	bmi.n	801add4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801adbc:	4620      	mov	r0, r4
 801adbe:	f007 fd32 	bl	8022826 <__cxa_guard_acquire>
 801adc2:	b138      	cbz	r0, 801add4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801adc4:	4620      	mov	r0, r4
 801adc6:	f007 fd3a 	bl	802283e <__cxa_guard_release>
 801adca:	4a06      	ldr	r2, [pc, #24]	; (801ade4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801adcc:	4909      	ldr	r1, [pc, #36]	; (801adf4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801adce:	480a      	ldr	r0, [pc, #40]	; (801adf8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801add0:	f007 fd22 	bl	8022818 <__aeabi_atexit>
 801add4:	4b05      	ldr	r3, [pc, #20]	; (801adec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801add6:	656b      	str	r3, [r5, #84]	; 0x54
 801add8:	4b07      	ldr	r3, [pc, #28]	; (801adf8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801adda:	65ab      	str	r3, [r5, #88]	; 0x58
 801addc:	bd38      	pop	{r3, r4, r5, pc}
 801adde:	bf00      	nop
 801ade0:	20032524 	.word	0x20032524
 801ade4:	20000000 	.word	0x20000000
 801ade8:	08017865 	.word	0x08017865
 801adec:	200000ac 	.word	0x200000ac
 801adf0:	20032528 	.word	0x20032528
 801adf4:	08017863 	.word	0x08017863
 801adf8:	200000b0 	.word	0x200000b0

0801adfc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801adfc:	b538      	push	{r3, r4, r5, lr}
 801adfe:	4c15      	ldr	r4, [pc, #84]	; (801ae54 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801ae00:	4605      	mov	r5, r0
 801ae02:	7823      	ldrb	r3, [r4, #0]
 801ae04:	f3bf 8f5b 	dmb	ish
 801ae08:	07da      	lsls	r2, r3, #31
 801ae0a:	d40b      	bmi.n	801ae24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801ae0c:	4620      	mov	r0, r4
 801ae0e:	f007 fd0a 	bl	8022826 <__cxa_guard_acquire>
 801ae12:	b138      	cbz	r0, 801ae24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801ae14:	4620      	mov	r0, r4
 801ae16:	f007 fd12 	bl	802283e <__cxa_guard_release>
 801ae1a:	4a0f      	ldr	r2, [pc, #60]	; (801ae58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801ae1c:	490f      	ldr	r1, [pc, #60]	; (801ae5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801ae1e:	4810      	ldr	r0, [pc, #64]	; (801ae60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801ae20:	f007 fcfa 	bl	8022818 <__aeabi_atexit>
 801ae24:	4c0f      	ldr	r4, [pc, #60]	; (801ae64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801ae26:	7823      	ldrb	r3, [r4, #0]
 801ae28:	f3bf 8f5b 	dmb	ish
 801ae2c:	07db      	lsls	r3, r3, #31
 801ae2e:	d40b      	bmi.n	801ae48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801ae30:	4620      	mov	r0, r4
 801ae32:	f007 fcf8 	bl	8022826 <__cxa_guard_acquire>
 801ae36:	b138      	cbz	r0, 801ae48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801ae38:	4620      	mov	r0, r4
 801ae3a:	f007 fd00 	bl	802283e <__cxa_guard_release>
 801ae3e:	4a06      	ldr	r2, [pc, #24]	; (801ae58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801ae40:	4909      	ldr	r1, [pc, #36]	; (801ae68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801ae42:	480a      	ldr	r0, [pc, #40]	; (801ae6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801ae44:	f007 fce8 	bl	8022818 <__aeabi_atexit>
 801ae48:	4b05      	ldr	r3, [pc, #20]	; (801ae60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801ae4a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801ae4c:	4b07      	ldr	r3, [pc, #28]	; (801ae6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801ae4e:	652b      	str	r3, [r5, #80]	; 0x50
 801ae50:	bd38      	pop	{r3, r4, r5, pc}
 801ae52:	bf00      	nop
 801ae54:	2003252c 	.word	0x2003252c
 801ae58:	20000000 	.word	0x20000000
 801ae5c:	08017869 	.word	0x08017869
 801ae60:	200000b4 	.word	0x200000b4
 801ae64:	20032530 	.word	0x20032530
 801ae68:	08017867 	.word	0x08017867
 801ae6c:	200000b8 	.word	0x200000b8

0801ae70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801ae70:	b538      	push	{r3, r4, r5, lr}
 801ae72:	4c15      	ldr	r4, [pc, #84]	; (801aec8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801ae74:	4605      	mov	r5, r0
 801ae76:	7823      	ldrb	r3, [r4, #0]
 801ae78:	f3bf 8f5b 	dmb	ish
 801ae7c:	07da      	lsls	r2, r3, #31
 801ae7e:	d40b      	bmi.n	801ae98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801ae80:	4620      	mov	r0, r4
 801ae82:	f007 fcd0 	bl	8022826 <__cxa_guard_acquire>
 801ae86:	b138      	cbz	r0, 801ae98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801ae88:	4620      	mov	r0, r4
 801ae8a:	f007 fcd8 	bl	802283e <__cxa_guard_release>
 801ae8e:	4a0f      	ldr	r2, [pc, #60]	; (801aecc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ae90:	490f      	ldr	r1, [pc, #60]	; (801aed0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801ae92:	4810      	ldr	r0, [pc, #64]	; (801aed4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ae94:	f007 fcc0 	bl	8022818 <__aeabi_atexit>
 801ae98:	4c0f      	ldr	r4, [pc, #60]	; (801aed8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801ae9a:	7823      	ldrb	r3, [r4, #0]
 801ae9c:	f3bf 8f5b 	dmb	ish
 801aea0:	07db      	lsls	r3, r3, #31
 801aea2:	d40b      	bmi.n	801aebc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801aea4:	4620      	mov	r0, r4
 801aea6:	f007 fcbe 	bl	8022826 <__cxa_guard_acquire>
 801aeaa:	b138      	cbz	r0, 801aebc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801aeac:	4620      	mov	r0, r4
 801aeae:	f007 fcc6 	bl	802283e <__cxa_guard_release>
 801aeb2:	4a06      	ldr	r2, [pc, #24]	; (801aecc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801aeb4:	4909      	ldr	r1, [pc, #36]	; (801aedc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801aeb6:	480a      	ldr	r0, [pc, #40]	; (801aee0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801aeb8:	f007 fcae 	bl	8022818 <__aeabi_atexit>
 801aebc:	4b05      	ldr	r3, [pc, #20]	; (801aed4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801aebe:	646b      	str	r3, [r5, #68]	; 0x44
 801aec0:	4b07      	ldr	r3, [pc, #28]	; (801aee0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801aec2:	64ab      	str	r3, [r5, #72]	; 0x48
 801aec4:	bd38      	pop	{r3, r4, r5, pc}
 801aec6:	bf00      	nop
 801aec8:	200324f4 	.word	0x200324f4
 801aecc:	20000000 	.word	0x20000000
 801aed0:	0801786d 	.word	0x0801786d
 801aed4:	2000007c 	.word	0x2000007c
 801aed8:	200324f8 	.word	0x200324f8
 801aedc:	0801786b 	.word	0x0801786b
 801aee0:	20000080 	.word	0x20000080

0801aee4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801aee4:	b538      	push	{r3, r4, r5, lr}
 801aee6:	4c15      	ldr	r4, [pc, #84]	; (801af3c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801aee8:	4605      	mov	r5, r0
 801aeea:	7823      	ldrb	r3, [r4, #0]
 801aeec:	f3bf 8f5b 	dmb	ish
 801aef0:	07da      	lsls	r2, r3, #31
 801aef2:	d40b      	bmi.n	801af0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801aef4:	4620      	mov	r0, r4
 801aef6:	f007 fc96 	bl	8022826 <__cxa_guard_acquire>
 801aefa:	b138      	cbz	r0, 801af0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801aefc:	4620      	mov	r0, r4
 801aefe:	f007 fc9e 	bl	802283e <__cxa_guard_release>
 801af02:	4a0f      	ldr	r2, [pc, #60]	; (801af40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801af04:	490f      	ldr	r1, [pc, #60]	; (801af44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801af06:	4810      	ldr	r0, [pc, #64]	; (801af48 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801af08:	f007 fc86 	bl	8022818 <__aeabi_atexit>
 801af0c:	4c0f      	ldr	r4, [pc, #60]	; (801af4c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801af0e:	7823      	ldrb	r3, [r4, #0]
 801af10:	f3bf 8f5b 	dmb	ish
 801af14:	07db      	lsls	r3, r3, #31
 801af16:	d40b      	bmi.n	801af30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801af18:	4620      	mov	r0, r4
 801af1a:	f007 fc84 	bl	8022826 <__cxa_guard_acquire>
 801af1e:	b138      	cbz	r0, 801af30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801af20:	4620      	mov	r0, r4
 801af22:	f007 fc8c 	bl	802283e <__cxa_guard_release>
 801af26:	4a06      	ldr	r2, [pc, #24]	; (801af40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801af28:	4909      	ldr	r1, [pc, #36]	; (801af50 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801af2a:	480a      	ldr	r0, [pc, #40]	; (801af54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801af2c:	f007 fc74 	bl	8022818 <__aeabi_atexit>
 801af30:	4b05      	ldr	r3, [pc, #20]	; (801af48 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801af32:	63eb      	str	r3, [r5, #60]	; 0x3c
 801af34:	4b07      	ldr	r3, [pc, #28]	; (801af54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801af36:	642b      	str	r3, [r5, #64]	; 0x40
 801af38:	bd38      	pop	{r3, r4, r5, pc}
 801af3a:	bf00      	nop
 801af3c:	20032514 	.word	0x20032514
 801af40:	20000000 	.word	0x20000000
 801af44:	08017871 	.word	0x08017871
 801af48:	2000009c 	.word	0x2000009c
 801af4c:	20032518 	.word	0x20032518
 801af50:	0801786f 	.word	0x0801786f
 801af54:	200000a0 	.word	0x200000a0

0801af58 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801af58:	b510      	push	{r4, lr}
 801af5a:	4604      	mov	r4, r0
 801af5c:	f7ff ff14 	bl	801ad88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801af60:	4620      	mov	r0, r4
 801af62:	f7ff ff85 	bl	801ae70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801af66:	4620      	mov	r0, r4
 801af68:	f7ff ff48 	bl	801adfc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801af6c:	4620      	mov	r0, r4
 801af6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801af72:	f7ff bfb7 	b.w	801aee4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801af78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801af78:	b538      	push	{r3, r4, r5, lr}
 801af7a:	4c15      	ldr	r4, [pc, #84]	; (801afd0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801af7c:	4605      	mov	r5, r0
 801af7e:	7823      	ldrb	r3, [r4, #0]
 801af80:	f3bf 8f5b 	dmb	ish
 801af84:	07da      	lsls	r2, r3, #31
 801af86:	d40b      	bmi.n	801afa0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801af88:	4620      	mov	r0, r4
 801af8a:	f007 fc4c 	bl	8022826 <__cxa_guard_acquire>
 801af8e:	b138      	cbz	r0, 801afa0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801af90:	4620      	mov	r0, r4
 801af92:	f007 fc54 	bl	802283e <__cxa_guard_release>
 801af96:	4a0f      	ldr	r2, [pc, #60]	; (801afd4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801af98:	490f      	ldr	r1, [pc, #60]	; (801afd8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801af9a:	4810      	ldr	r0, [pc, #64]	; (801afdc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801af9c:	f007 fc3c 	bl	8022818 <__aeabi_atexit>
 801afa0:	4c0f      	ldr	r4, [pc, #60]	; (801afe0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801afa2:	7823      	ldrb	r3, [r4, #0]
 801afa4:	f3bf 8f5b 	dmb	ish
 801afa8:	07db      	lsls	r3, r3, #31
 801afaa:	d40b      	bmi.n	801afc4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801afac:	4620      	mov	r0, r4
 801afae:	f007 fc3a 	bl	8022826 <__cxa_guard_acquire>
 801afb2:	b138      	cbz	r0, 801afc4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801afb4:	4620      	mov	r0, r4
 801afb6:	f007 fc42 	bl	802283e <__cxa_guard_release>
 801afba:	4a06      	ldr	r2, [pc, #24]	; (801afd4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801afbc:	4909      	ldr	r1, [pc, #36]	; (801afe4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801afbe:	480a      	ldr	r0, [pc, #40]	; (801afe8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801afc0:	f007 fc2a 	bl	8022818 <__aeabi_atexit>
 801afc4:	4b05      	ldr	r3, [pc, #20]	; (801afdc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801afc6:	666b      	str	r3, [r5, #100]	; 0x64
 801afc8:	4b07      	ldr	r3, [pc, #28]	; (801afe8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801afca:	66ab      	str	r3, [r5, #104]	; 0x68
 801afcc:	bd38      	pop	{r3, r4, r5, pc}
 801afce:	bf00      	nop
 801afd0:	200324fc 	.word	0x200324fc
 801afd4:	20000000 	.word	0x20000000
 801afd8:	0801785d 	.word	0x0801785d
 801afdc:	20000084 	.word	0x20000084
 801afe0:	20032500 	.word	0x20032500
 801afe4:	0801785b 	.word	0x0801785b
 801afe8:	20000088 	.word	0x20000088

0801afec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801afec:	b538      	push	{r3, r4, r5, lr}
 801afee:	4c15      	ldr	r4, [pc, #84]	; (801b044 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801aff0:	4605      	mov	r5, r0
 801aff2:	7823      	ldrb	r3, [r4, #0]
 801aff4:	f3bf 8f5b 	dmb	ish
 801aff8:	07da      	lsls	r2, r3, #31
 801affa:	d40b      	bmi.n	801b014 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801affc:	4620      	mov	r0, r4
 801affe:	f007 fc12 	bl	8022826 <__cxa_guard_acquire>
 801b002:	b138      	cbz	r0, 801b014 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801b004:	4620      	mov	r0, r4
 801b006:	f007 fc1a 	bl	802283e <__cxa_guard_release>
 801b00a:	4a0f      	ldr	r2, [pc, #60]	; (801b048 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801b00c:	490f      	ldr	r1, [pc, #60]	; (801b04c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801b00e:	4810      	ldr	r0, [pc, #64]	; (801b050 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801b010:	f007 fc02 	bl	8022818 <__aeabi_atexit>
 801b014:	4c0f      	ldr	r4, [pc, #60]	; (801b054 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801b016:	7823      	ldrb	r3, [r4, #0]
 801b018:	f3bf 8f5b 	dmb	ish
 801b01c:	07db      	lsls	r3, r3, #31
 801b01e:	d40b      	bmi.n	801b038 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801b020:	4620      	mov	r0, r4
 801b022:	f007 fc00 	bl	8022826 <__cxa_guard_acquire>
 801b026:	b138      	cbz	r0, 801b038 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801b028:	4620      	mov	r0, r4
 801b02a:	f007 fc08 	bl	802283e <__cxa_guard_release>
 801b02e:	4a06      	ldr	r2, [pc, #24]	; (801b048 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801b030:	4909      	ldr	r1, [pc, #36]	; (801b058 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801b032:	480a      	ldr	r0, [pc, #40]	; (801b05c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801b034:	f007 fbf0 	bl	8022818 <__aeabi_atexit>
 801b038:	4b05      	ldr	r3, [pc, #20]	; (801b050 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801b03a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801b03c:	4b07      	ldr	r3, [pc, #28]	; (801b05c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801b03e:	662b      	str	r3, [r5, #96]	; 0x60
 801b040:	bd38      	pop	{r3, r4, r5, pc}
 801b042:	bf00      	nop
 801b044:	200324d4 	.word	0x200324d4
 801b048:	20000000 	.word	0x20000000
 801b04c:	08017861 	.word	0x08017861
 801b050:	2000005c 	.word	0x2000005c
 801b054:	200324d8 	.word	0x200324d8
 801b058:	0801785f 	.word	0x0801785f
 801b05c:	20000060 	.word	0x20000060

0801b060 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801b060:	b510      	push	{r4, lr}
 801b062:	4604      	mov	r4, r0
 801b064:	f7ff ff88 	bl	801af78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801b068:	4620      	mov	r0, r4
 801b06a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b06e:	f7ff bfbd 	b.w	801afec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801b074 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801b074:	b538      	push	{r3, r4, r5, lr}
 801b076:	4c15      	ldr	r4, [pc, #84]	; (801b0cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801b078:	4605      	mov	r5, r0
 801b07a:	7823      	ldrb	r3, [r4, #0]
 801b07c:	f3bf 8f5b 	dmb	ish
 801b080:	07da      	lsls	r2, r3, #31
 801b082:	d40b      	bmi.n	801b09c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801b084:	4620      	mov	r0, r4
 801b086:	f007 fbce 	bl	8022826 <__cxa_guard_acquire>
 801b08a:	b138      	cbz	r0, 801b09c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801b08c:	4620      	mov	r0, r4
 801b08e:	f007 fbd6 	bl	802283e <__cxa_guard_release>
 801b092:	4a0f      	ldr	r2, [pc, #60]	; (801b0d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801b094:	490f      	ldr	r1, [pc, #60]	; (801b0d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801b096:	4810      	ldr	r0, [pc, #64]	; (801b0d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801b098:	f007 fbbe 	bl	8022818 <__aeabi_atexit>
 801b09c:	4c0f      	ldr	r4, [pc, #60]	; (801b0dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801b09e:	7823      	ldrb	r3, [r4, #0]
 801b0a0:	f3bf 8f5b 	dmb	ish
 801b0a4:	07db      	lsls	r3, r3, #31
 801b0a6:	d40b      	bmi.n	801b0c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801b0a8:	4620      	mov	r0, r4
 801b0aa:	f007 fbbc 	bl	8022826 <__cxa_guard_acquire>
 801b0ae:	b138      	cbz	r0, 801b0c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801b0b0:	4620      	mov	r0, r4
 801b0b2:	f007 fbc4 	bl	802283e <__cxa_guard_release>
 801b0b6:	4a06      	ldr	r2, [pc, #24]	; (801b0d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801b0b8:	4909      	ldr	r1, [pc, #36]	; (801b0e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801b0ba:	480a      	ldr	r0, [pc, #40]	; (801b0e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801b0bc:	f007 fbac 	bl	8022818 <__aeabi_atexit>
 801b0c0:	4b05      	ldr	r3, [pc, #20]	; (801b0d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801b0c2:	676b      	str	r3, [r5, #116]	; 0x74
 801b0c4:	4b07      	ldr	r3, [pc, #28]	; (801b0e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801b0c6:	67ab      	str	r3, [r5, #120]	; 0x78
 801b0c8:	bd38      	pop	{r3, r4, r5, pc}
 801b0ca:	bf00      	nop
 801b0cc:	200324cc 	.word	0x200324cc
 801b0d0:	20000000 	.word	0x20000000
 801b0d4:	08017855 	.word	0x08017855
 801b0d8:	20000054 	.word	0x20000054
 801b0dc:	200324d0 	.word	0x200324d0
 801b0e0:	08017853 	.word	0x08017853
 801b0e4:	20000058 	.word	0x20000058

0801b0e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801b0e8:	b538      	push	{r3, r4, r5, lr}
 801b0ea:	4c15      	ldr	r4, [pc, #84]	; (801b140 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801b0ec:	4605      	mov	r5, r0
 801b0ee:	7823      	ldrb	r3, [r4, #0]
 801b0f0:	f3bf 8f5b 	dmb	ish
 801b0f4:	07da      	lsls	r2, r3, #31
 801b0f6:	d40b      	bmi.n	801b110 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801b0f8:	4620      	mov	r0, r4
 801b0fa:	f007 fb94 	bl	8022826 <__cxa_guard_acquire>
 801b0fe:	b138      	cbz	r0, 801b110 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801b100:	4620      	mov	r0, r4
 801b102:	f007 fb9c 	bl	802283e <__cxa_guard_release>
 801b106:	4a0f      	ldr	r2, [pc, #60]	; (801b144 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801b108:	490f      	ldr	r1, [pc, #60]	; (801b148 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801b10a:	4810      	ldr	r0, [pc, #64]	; (801b14c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801b10c:	f007 fb84 	bl	8022818 <__aeabi_atexit>
 801b110:	4c0f      	ldr	r4, [pc, #60]	; (801b150 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801b112:	7823      	ldrb	r3, [r4, #0]
 801b114:	f3bf 8f5b 	dmb	ish
 801b118:	07db      	lsls	r3, r3, #31
 801b11a:	d40b      	bmi.n	801b134 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801b11c:	4620      	mov	r0, r4
 801b11e:	f007 fb82 	bl	8022826 <__cxa_guard_acquire>
 801b122:	b138      	cbz	r0, 801b134 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801b124:	4620      	mov	r0, r4
 801b126:	f007 fb8a 	bl	802283e <__cxa_guard_release>
 801b12a:	4a06      	ldr	r2, [pc, #24]	; (801b144 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801b12c:	4909      	ldr	r1, [pc, #36]	; (801b154 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801b12e:	480a      	ldr	r0, [pc, #40]	; (801b158 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801b130:	f007 fb72 	bl	8022818 <__aeabi_atexit>
 801b134:	4b05      	ldr	r3, [pc, #20]	; (801b14c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801b136:	66eb      	str	r3, [r5, #108]	; 0x6c
 801b138:	4b07      	ldr	r3, [pc, #28]	; (801b158 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801b13a:	672b      	str	r3, [r5, #112]	; 0x70
 801b13c:	bd38      	pop	{r3, r4, r5, pc}
 801b13e:	bf00      	nop
 801b140:	200324c4 	.word	0x200324c4
 801b144:	20000000 	.word	0x20000000
 801b148:	08017859 	.word	0x08017859
 801b14c:	2000004c 	.word	0x2000004c
 801b150:	200324c8 	.word	0x200324c8
 801b154:	08017857 	.word	0x08017857
 801b158:	20000050 	.word	0x20000050

0801b15c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801b15c:	b510      	push	{r4, lr}
 801b15e:	4604      	mov	r4, r0
 801b160:	f7ff ff88 	bl	801b074 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801b164:	4620      	mov	r0, r4
 801b166:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b16a:	f7ff bfbd 	b.w	801b0e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801b16e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801b16e:	b510      	push	{r4, lr}
 801b170:	4604      	mov	r4, r0
 801b172:	f7ff fff3 	bl	801b15c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801b176:	4620      	mov	r0, r4
 801b178:	f7ff ff72 	bl	801b060 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801b17c:	4620      	mov	r0, r4
 801b17e:	f7ff fdf9 	bl	801ad74 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801b182:	4620      	mov	r0, r4
 801b184:	f7ff fcfa 	bl	801ab7c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801b188:	4620      	mov	r0, r4
 801b18a:	f7ff fd75 	bl	801ac78 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801b18e:	4620      	mov	r0, r4
 801b190:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b194:	f7ff bee0 	b.w	801af58 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801b198 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801b198:	b538      	push	{r3, r4, r5, lr}
 801b19a:	4c0b      	ldr	r4, [pc, #44]	; (801b1c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801b19c:	4605      	mov	r5, r0
 801b19e:	7823      	ldrb	r3, [r4, #0]
 801b1a0:	f3bf 8f5b 	dmb	ish
 801b1a4:	07db      	lsls	r3, r3, #31
 801b1a6:	d40b      	bmi.n	801b1c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801b1a8:	4620      	mov	r0, r4
 801b1aa:	f007 fb3c 	bl	8022826 <__cxa_guard_acquire>
 801b1ae:	b138      	cbz	r0, 801b1c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801b1b0:	4620      	mov	r0, r4
 801b1b2:	f007 fb44 	bl	802283e <__cxa_guard_release>
 801b1b6:	4a05      	ldr	r2, [pc, #20]	; (801b1cc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801b1b8:	4905      	ldr	r1, [pc, #20]	; (801b1d0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801b1ba:	4806      	ldr	r0, [pc, #24]	; (801b1d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801b1bc:	f007 fb2c 	bl	8022818 <__aeabi_atexit>
 801b1c0:	4b04      	ldr	r3, [pc, #16]	; (801b1d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801b1c2:	67eb      	str	r3, [r5, #124]	; 0x7c
 801b1c4:	bd38      	pop	{r3, r4, r5, pc}
 801b1c6:	bf00      	nop
 801b1c8:	200324b8 	.word	0x200324b8
 801b1cc:	20000000 	.word	0x20000000
 801b1d0:	08017851 	.word	0x08017851
 801b1d4:	20000044 	.word	0x20000044

0801b1d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801b1d8:	b538      	push	{r3, r4, r5, lr}
 801b1da:	4c0b      	ldr	r4, [pc, #44]	; (801b208 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801b1dc:	4605      	mov	r5, r0
 801b1de:	7823      	ldrb	r3, [r4, #0]
 801b1e0:	f3bf 8f5b 	dmb	ish
 801b1e4:	07db      	lsls	r3, r3, #31
 801b1e6:	d40b      	bmi.n	801b200 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801b1e8:	4620      	mov	r0, r4
 801b1ea:	f007 fb1c 	bl	8022826 <__cxa_guard_acquire>
 801b1ee:	b138      	cbz	r0, 801b200 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801b1f0:	4620      	mov	r0, r4
 801b1f2:	f007 fb24 	bl	802283e <__cxa_guard_release>
 801b1f6:	4a05      	ldr	r2, [pc, #20]	; (801b20c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801b1f8:	4905      	ldr	r1, [pc, #20]	; (801b210 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801b1fa:	4806      	ldr	r0, [pc, #24]	; (801b214 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801b1fc:	f007 fb0c 	bl	8022818 <__aeabi_atexit>
 801b200:	4b04      	ldr	r3, [pc, #16]	; (801b214 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801b202:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
 801b206:	bd38      	pop	{r3, r4, r5, pc}
 801b208:	200324bc 	.word	0x200324bc
 801b20c:	20000000 	.word	0x20000000
 801b210:	0801784f 	.word	0x0801784f
 801b214:	20000048 	.word	0x20000048

0801b218 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801b218:	b570      	push	{r4, r5, r6, lr}
 801b21a:	4d0d      	ldr	r5, [pc, #52]	; (801b250 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801b21c:	4606      	mov	r6, r0
 801b21e:	4c0d      	ldr	r4, [pc, #52]	; (801b254 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801b220:	782b      	ldrb	r3, [r5, #0]
 801b222:	f3bf 8f5b 	dmb	ish
 801b226:	f013 0f01 	tst.w	r3, #1
 801b22a:	d10d      	bne.n	801b248 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801b22c:	4628      	mov	r0, r5
 801b22e:	f007 fafa 	bl	8022826 <__cxa_guard_acquire>
 801b232:	b148      	cbz	r0, 801b248 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801b234:	4b08      	ldr	r3, [pc, #32]	; (801b258 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801b236:	4628      	mov	r0, r5
 801b238:	6023      	str	r3, [r4, #0]
 801b23a:	f007 fb00 	bl	802283e <__cxa_guard_release>
 801b23e:	4a07      	ldr	r2, [pc, #28]	; (801b25c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801b240:	4620      	mov	r0, r4
 801b242:	4907      	ldr	r1, [pc, #28]	; (801b260 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801b244:	f007 fae8 	bl	8022818 <__aeabi_atexit>
 801b248:	f8c6 4084 	str.w	r4, [r6, #132]	; 0x84
 801b24c:	bd70      	pop	{r4, r5, r6, pc}
 801b24e:	bf00      	nop
 801b250:	200324c0 	.word	0x200324c0
 801b254:	20032534 	.word	0x20032534
 801b258:	08026524 	.word	0x08026524
 801b25c:	20000000 	.word	0x20000000
 801b260:	0801784d 	.word	0x0801784d

0801b264 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801b264:	b510      	push	{r4, lr}
 801b266:	4604      	mov	r4, r0
 801b268:	f7ff ff96 	bl	801b198 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801b26c:	4620      	mov	r0, r4
 801b26e:	f7ff ffb3 	bl	801b1d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801b272:	4620      	mov	r0, r4
 801b274:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b278:	f7ff bfce 	b.w	801b218 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801b27c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801b27c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b280:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801b284:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801b288:	2d00      	cmp	r5, #0
 801b28a:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801b28e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801b292:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801b296:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801b29a:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801b29e:	eb02 0a0c 	add.w	sl, r2, ip
 801b2a2:	8808      	ldrh	r0, [r1, #0]
 801b2a4:	f2c0 80b0 	blt.w	801b408 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801b2a8:	45ab      	cmp	fp, r5
 801b2aa:	f340 80ad 	ble.w	801b408 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801b2ae:	2c00      	cmp	r4, #0
 801b2b0:	f2c0 80a8 	blt.w	801b404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801b2b4:	45a6      	cmp	lr, r4
 801b2b6:	f340 80a5 	ble.w	801b404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801b2ba:	f812 200c 	ldrb.w	r2, [r2, ip]
 801b2be:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801b2c2:	1c62      	adds	r2, r4, #1
 801b2c4:	f100 80a3 	bmi.w	801b40e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801b2c8:	4596      	cmp	lr, r2
 801b2ca:	f340 80a0 	ble.w	801b40e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801b2ce:	f1b9 0f00 	cmp.w	r9, #0
 801b2d2:	f000 809c 	beq.w	801b40e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801b2d6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801b2da:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801b2de:	3501      	adds	r5, #1
 801b2e0:	f100 8099 	bmi.w	801b416 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801b2e4:	45ab      	cmp	fp, r5
 801b2e6:	f340 8096 	ble.w	801b416 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801b2ea:	2f00      	cmp	r7, #0
 801b2ec:	f000 8093 	beq.w	801b416 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801b2f0:	2c00      	cmp	r4, #0
 801b2f2:	f2c0 808e 	blt.w	801b412 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801b2f6:	45a6      	cmp	lr, r4
 801b2f8:	f340 808b 	ble.w	801b412 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801b2fc:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801b300:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801b304:	3401      	adds	r4, #1
 801b306:	f100 8089 	bmi.w	801b41c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801b30a:	45a6      	cmp	lr, r4
 801b30c:	f340 8086 	ble.w	801b41c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801b310:	f1b9 0f00 	cmp.w	r9, #0
 801b314:	f000 8082 	beq.w	801b41c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801b318:	44d6      	add	lr, sl
 801b31a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b31e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801b322:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801b326:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801b32a:	fb19 fe07 	smulbb	lr, r9, r7
 801b32e:	f1c7 0210 	rsb	r2, r7, #16
 801b332:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801b336:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801b33a:	eba2 0209 	sub.w	r2, r2, r9
 801b33e:	ea44 0808 	orr.w	r8, r4, r8
 801b342:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801b346:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801b34a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801b34e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801b352:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801b356:	ea44 0c0c 	orr.w	ip, r4, ip
 801b35a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801b35e:	fb04 f40c 	mul.w	r4, r4, ip
 801b362:	fb02 4808 	mla	r8, r2, r8, r4
 801b366:	041a      	lsls	r2, r3, #16
 801b368:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b36c:	b2b4      	uxth	r4, r6
 801b36e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801b372:	43f6      	mvns	r6, r6
 801b374:	4313      	orrs	r3, r2
 801b376:	042a      	lsls	r2, r5, #16
 801b378:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801b37c:	b2f6      	uxtb	r6, r6
 801b37e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801b382:	fb0e 8303 	mla	r3, lr, r3, r8
 801b386:	432a      	orrs	r2, r5
 801b388:	fb07 3202 	mla	r2, r7, r2, r3
 801b38c:	10c7      	asrs	r7, r0, #3
 801b38e:	0d53      	lsrs	r3, r2, #21
 801b390:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b394:	0952      	lsrs	r2, r2, #5
 801b396:	fb17 f706 	smulbb	r7, r7, r6
 801b39a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b39e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b3a2:	431a      	orrs	r2, r3
 801b3a4:	b293      	uxth	r3, r2
 801b3a6:	1202      	asrs	r2, r0, #8
 801b3a8:	121d      	asrs	r5, r3, #8
 801b3aa:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b3ae:	00c0      	lsls	r0, r0, #3
 801b3b0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b3b4:	fb12 f206 	smulbb	r2, r2, r6
 801b3b8:	b2c0      	uxtb	r0, r0
 801b3ba:	fb05 2504 	mla	r5, r5, r4, r2
 801b3be:	10da      	asrs	r2, r3, #3
 801b3c0:	fb10 f006 	smulbb	r0, r0, r6
 801b3c4:	00db      	lsls	r3, r3, #3
 801b3c6:	b2ad      	uxth	r5, r5
 801b3c8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b3cc:	b2db      	uxtb	r3, r3
 801b3ce:	fb02 7204 	mla	r2, r2, r4, r7
 801b3d2:	fb03 0004 	mla	r0, r3, r4, r0
 801b3d6:	1c6b      	adds	r3, r5, #1
 801b3d8:	b292      	uxth	r2, r2
 801b3da:	b280      	uxth	r0, r0
 801b3dc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b3e0:	1c43      	adds	r3, r0, #1
 801b3e2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b3e6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b3ea:	1c50      	adds	r0, r2, #1
 801b3ec:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801b3f0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b3f4:	0952      	lsrs	r2, r2, #5
 801b3f6:	432b      	orrs	r3, r5
 801b3f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b3fc:	4313      	orrs	r3, r2
 801b3fe:	800b      	strh	r3, [r1, #0]
 801b400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b404:	4680      	mov	r8, r0
 801b406:	e75c      	b.n	801b2c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801b408:	4684      	mov	ip, r0
 801b40a:	4680      	mov	r8, r0
 801b40c:	e767      	b.n	801b2de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801b40e:	4684      	mov	ip, r0
 801b410:	e765      	b.n	801b2de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801b412:	4605      	mov	r5, r0
 801b414:	e776      	b.n	801b304 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801b416:	4603      	mov	r3, r0
 801b418:	4605      	mov	r5, r0
 801b41a:	e782      	b.n	801b322 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801b41c:	4603      	mov	r3, r0
 801b41e:	e780      	b.n	801b322 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801b420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b424:	b099      	sub	sp, #100	; 0x64
 801b426:	9215      	str	r2, [sp, #84]	; 0x54
 801b428:	9309      	str	r3, [sp, #36]	; 0x24
 801b42a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801b42c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801b430:	9016      	str	r0, [sp, #88]	; 0x58
 801b432:	930d      	str	r3, [sp, #52]	; 0x34
 801b434:	6850      	ldr	r0, [r2, #4]
 801b436:	910c      	str	r1, [sp, #48]	; 0x30
 801b438:	6812      	ldr	r2, [r2, #0]
 801b43a:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801b43e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801b442:	fb00 1303 	mla	r3, r0, r3, r1
 801b446:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801b44a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b44c:	681b      	ldr	r3, [r3, #0]
 801b44e:	930b      	str	r3, [sp, #44]	; 0x2c
 801b450:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b452:	685e      	ldr	r6, [r3, #4]
 801b454:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b456:	3604      	adds	r6, #4
 801b458:	43db      	mvns	r3, r3
 801b45a:	b2db      	uxtb	r3, r3
 801b45c:	930a      	str	r3, [sp, #40]	; 0x28
 801b45e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b460:	2b00      	cmp	r3, #0
 801b462:	dc03      	bgt.n	801b46c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b464:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801b466:	2b00      	cmp	r3, #0
 801b468:	f340 8225 	ble.w	801b8b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801b46c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b46e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b472:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b476:	1e48      	subs	r0, r1, #1
 801b478:	1e57      	subs	r7, r2, #1
 801b47a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b47c:	2b00      	cmp	r3, #0
 801b47e:	f340 80e3 	ble.w	801b648 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b482:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801b486:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b48a:	d406      	bmi.n	801b49a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b48c:	4584      	cmp	ip, r0
 801b48e:	da04      	bge.n	801b49a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b490:	2b00      	cmp	r3, #0
 801b492:	db02      	blt.n	801b49a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b494:	42bb      	cmp	r3, r7
 801b496:	f2c0 80d8 	blt.w	801b64a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b49a:	f11c 0c01 	adds.w	ip, ip, #1
 801b49e:	f100 80c9 	bmi.w	801b634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b4a2:	4561      	cmp	r1, ip
 801b4a4:	f2c0 80c6 	blt.w	801b634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b4a8:	3301      	adds	r3, #1
 801b4aa:	f100 80c3 	bmi.w	801b634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b4ae:	429a      	cmp	r2, r3
 801b4b0:	f2c0 80c0 	blt.w	801b634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b4b4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801b4b8:	4647      	mov	r7, r8
 801b4ba:	f1bb 0f00 	cmp.w	fp, #0
 801b4be:	f340 80e3 	ble.w	801b688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801b4c2:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801b4c4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b4c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b4ca:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801b4ce:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b4d2:	ea5f 422a 	movs.w	r2, sl, asr #16
 801b4d6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b4da:	689b      	ldr	r3, [r3, #8]
 801b4dc:	f100 8121 	bmi.w	801b722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b4e0:	f103 39ff 	add.w	r9, r3, #4294967295
 801b4e4:	454a      	cmp	r2, r9
 801b4e6:	f280 811c 	bge.w	801b722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b4ea:	f1bc 0f00 	cmp.w	ip, #0
 801b4ee:	f2c0 8118 	blt.w	801b722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b4f2:	f10e 39ff 	add.w	r9, lr, #4294967295
 801b4f6:	45cc      	cmp	ip, r9
 801b4f8:	f280 8113 	bge.w	801b722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b4fc:	b21b      	sxth	r3, r3
 801b4fe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b500:	fb0c 2203 	mla	r2, ip, r3, r2
 801b504:	eb04 0902 	add.w	r9, r4, r2
 801b508:	5ca2      	ldrb	r2, [r4, r2]
 801b50a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801b50e:	2800      	cmp	r0, #0
 801b510:	f000 80fe 	beq.w	801b710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b514:	f899 2001 	ldrb.w	r2, [r9, #1]
 801b518:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801b51c:	9211      	str	r2, [sp, #68]	; 0x44
 801b51e:	b151      	cbz	r1, 801b536 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b520:	eb09 0203 	add.w	r2, r9, r3
 801b524:	f819 3003 	ldrb.w	r3, [r9, r3]
 801b528:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b52c:	930f      	str	r3, [sp, #60]	; 0x3c
 801b52e:	7853      	ldrb	r3, [r2, #1]
 801b530:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b534:	9312      	str	r3, [sp, #72]	; 0x48
 801b536:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b538:	fb10 f201 	smulbb	r2, r0, r1
 801b53c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b53e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801b542:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b546:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801b54a:	10d2      	asrs	r2, r2, #3
 801b54c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801b550:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801b554:	ea4c 0c03 	orr.w	ip, ip, r3
 801b558:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801b55a:	041b      	lsls	r3, r3, #16
 801b55c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801b560:	4323      	orrs	r3, r4
 801b562:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b564:	4353      	muls	r3, r2
 801b566:	fb09 330c 	mla	r3, r9, ip, r3
 801b56a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801b56e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801b572:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801b576:	ea4c 0e0e 	orr.w	lr, ip, lr
 801b57a:	f1c1 0c10 	rsb	ip, r1, #16
 801b57e:	ebac 0c00 	sub.w	ip, ip, r0
 801b582:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801b586:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801b58a:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801b58e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b590:	0418      	lsls	r0, r3, #16
 801b592:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b596:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801b59a:	4318      	orrs	r0, r3
 801b59c:	fb02 c200 	mla	r2, r2, r0, ip
 801b5a0:	8838      	ldrh	r0, [r7, #0]
 801b5a2:	0d53      	lsrs	r3, r2, #21
 801b5a4:	0952      	lsrs	r2, r2, #5
 801b5a6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b5aa:	1201      	asrs	r1, r0, #8
 801b5ac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b5b0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801b5b4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b5b8:	00c0      	lsls	r0, r0, #3
 801b5ba:	431a      	orrs	r2, r3
 801b5bc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801b5c0:	fb11 f104 	smulbb	r1, r1, r4
 801b5c4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b5c8:	b292      	uxth	r2, r2
 801b5ca:	fb1e fe04 	smulbb	lr, lr, r4
 801b5ce:	b2c0      	uxtb	r0, r0
 801b5d0:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801b5d4:	fb10 f004 	smulbb	r0, r0, r4
 801b5d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b5dc:	fb0c 1c03 	mla	ip, ip, r3, r1
 801b5e0:	10d1      	asrs	r1, r2, #3
 801b5e2:	00d2      	lsls	r2, r2, #3
 801b5e4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b5e8:	fa1f fc8c 	uxth.w	ip, ip
 801b5ec:	b2d2      	uxtb	r2, r2
 801b5ee:	fb01 e103 	mla	r1, r1, r3, lr
 801b5f2:	fb02 0303 	mla	r3, r2, r3, r0
 801b5f6:	b289      	uxth	r1, r1
 801b5f8:	b29a      	uxth	r2, r3
 801b5fa:	f10c 0301 	add.w	r3, ip, #1
 801b5fe:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b602:	1c53      	adds	r3, r2, #1
 801b604:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b608:	1c4a      	adds	r2, r1, #1
 801b60a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b60e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b612:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b616:	0949      	lsrs	r1, r1, #5
 801b618:	ea43 030c 	orr.w	r3, r3, ip
 801b61c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b620:	430b      	orrs	r3, r1
 801b622:	803b      	strh	r3, [r7, #0]
 801b624:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b626:	3702      	adds	r7, #2
 801b628:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b62c:	449a      	add	sl, r3
 801b62e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b630:	441d      	add	r5, r3
 801b632:	e742      	b.n	801b4ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b634:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b636:	f108 0802 	add.w	r8, r8, #2
 801b63a:	449a      	add	sl, r3
 801b63c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b63e:	441d      	add	r5, r3
 801b640:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b642:	3b01      	subs	r3, #1
 801b644:	9309      	str	r3, [sp, #36]	; 0x24
 801b646:	e718      	b.n	801b47a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801b648:	d023      	beq.n	801b692 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801b64a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b64c:	9825      	ldr	r0, [sp, #148]	; 0x94
 801b64e:	3b01      	subs	r3, #1
 801b650:	fb00 a003 	mla	r0, r0, r3, sl
 801b654:	1400      	asrs	r0, r0, #16
 801b656:	f53f af2d 	bmi.w	801b4b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b65a:	3901      	subs	r1, #1
 801b65c:	4288      	cmp	r0, r1
 801b65e:	f6bf af29 	bge.w	801b4b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b662:	9926      	ldr	r1, [sp, #152]	; 0x98
 801b664:	fb01 5303 	mla	r3, r1, r3, r5
 801b668:	141b      	asrs	r3, r3, #16
 801b66a:	f53f af23 	bmi.w	801b4b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b66e:	3a01      	subs	r2, #1
 801b670:	4293      	cmp	r3, r2
 801b672:	f6bf af1f 	bge.w	801b4b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b676:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801b67a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801b67e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801b682:	f1be 0f00 	cmp.w	lr, #0
 801b686:	dc6c      	bgt.n	801b762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b688:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b68a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b68e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801b692:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b694:	2b00      	cmp	r3, #0
 801b696:	f340 810e 	ble.w	801b8b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801b69a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b69e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801b6a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b6a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b6a8:	eef0 6a62 	vmov.f32	s13, s5
 801b6ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b6b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b6b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b6b8:	ee16 aa90 	vmov	sl, s13
 801b6bc:	eef0 6a43 	vmov.f32	s13, s6
 801b6c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b6c4:	ee16 5a90 	vmov	r5, s13
 801b6c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b6cc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b6d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b6d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b6d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b6dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b6e0:	ee12 2a90 	vmov	r2, s5
 801b6e4:	eef0 2a47 	vmov.f32	s5, s14
 801b6e8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b6ec:	ee13 2a10 	vmov	r2, s6
 801b6f0:	9325      	str	r3, [sp, #148]	; 0x94
 801b6f2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801b6f4:	eeb0 3a67 	vmov.f32	s6, s15
 801b6f8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b6fc:	9326      	str	r3, [sp, #152]	; 0x98
 801b6fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b700:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801b702:	3b01      	subs	r3, #1
 801b704:	930c      	str	r3, [sp, #48]	; 0x30
 801b706:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801b708:	bf08      	it	eq
 801b70a:	4613      	moveq	r3, r2
 801b70c:	9309      	str	r3, [sp, #36]	; 0x24
 801b70e:	e6a6      	b.n	801b45e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b710:	2900      	cmp	r1, #0
 801b712:	f43f af10 	beq.w	801b536 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b716:	f819 3003 	ldrb.w	r3, [r9, r3]
 801b71a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b71e:	930f      	str	r3, [sp, #60]	; 0x3c
 801b720:	e709      	b.n	801b536 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b722:	f112 0901 	adds.w	r9, r2, #1
 801b726:	f53f af7d 	bmi.w	801b624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b72a:	454b      	cmp	r3, r9
 801b72c:	f6ff af7a 	blt.w	801b624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b730:	f11c 0901 	adds.w	r9, ip, #1
 801b734:	f53f af76 	bmi.w	801b624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b738:	45ce      	cmp	lr, r9
 801b73a:	f6ff af73 	blt.w	801b624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b73e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b740:	b21b      	sxth	r3, r3
 801b742:	9202      	str	r2, [sp, #8]
 801b744:	fa0f f28e 	sxth.w	r2, lr
 801b748:	9300      	str	r3, [sp, #0]
 801b74a:	4633      	mov	r3, r6
 801b74c:	9201      	str	r2, [sp, #4]
 801b74e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b750:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b754:	e9cd c003 	strd	ip, r0, [sp, #12]
 801b758:	4639      	mov	r1, r7
 801b75a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801b75c:	f7ff fd8e 	bl	801b27c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801b760:	e760      	b.n	801b624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b762:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b764:	ea4f 422a 	mov.w	r2, sl, asr #16
 801b768:	1429      	asrs	r1, r5, #16
 801b76a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b76c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801b770:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801b774:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b778:	fb03 2101 	mla	r1, r3, r1, r2
 801b77c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b77e:	440a      	add	r2, r1
 801b780:	5c61      	ldrb	r1, [r4, r1]
 801b782:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801b786:	f1bc 0f00 	cmp.w	ip, #0
 801b78a:	f000 808c 	beq.w	801b8a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801b78e:	7857      	ldrb	r7, [r2, #1]
 801b790:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801b794:	9413      	str	r4, [sp, #76]	; 0x4c
 801b796:	b140      	cbz	r0, 801b7aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b798:	18d7      	adds	r7, r2, r3
 801b79a:	5cd3      	ldrb	r3, [r2, r3]
 801b79c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b7a0:	9310      	str	r3, [sp, #64]	; 0x40
 801b7a2:	787b      	ldrb	r3, [r7, #1]
 801b7a4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b7a8:	9314      	str	r3, [sp, #80]	; 0x50
 801b7aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b7ac:	fb1c f200 	smulbb	r2, ip, r0
 801b7b0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b7b2:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b7b6:	041f      	lsls	r7, r3, #16
 801b7b8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b7bc:	10d2      	asrs	r2, r2, #3
 801b7be:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801b7c2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801b7c6:	431f      	orrs	r7, r3
 801b7c8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801b7cc:	9317      	str	r3, [sp, #92]	; 0x5c
 801b7ce:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801b7d0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b7d2:	041b      	lsls	r3, r3, #16
 801b7d4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801b7d8:	ea43 030b 	orr.w	r3, r3, fp
 801b7dc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801b7e0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801b7e4:	4353      	muls	r3, r2
 801b7e6:	fb04 3707 	mla	r7, r4, r7, r3
 801b7ea:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801b7ee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b7f0:	ea43 0b01 	orr.w	fp, r3, r1
 801b7f4:	f1c0 0110 	rsb	r1, r0, #16
 801b7f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b7fa:	eba1 0c0c 	sub.w	ip, r1, ip
 801b7fe:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801b802:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801b806:	fb0c 770b 	mla	r7, ip, fp, r7
 801b80a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801b80e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801b812:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801b816:	ea4c 0c0b 	orr.w	ip, ip, fp
 801b81a:	fb02 770c 	mla	r7, r2, ip, r7
 801b81e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801b820:	0d79      	lsrs	r1, r7, #21
 801b822:	8812      	ldrh	r2, [r2, #0]
 801b824:	097f      	lsrs	r7, r7, #5
 801b826:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b82a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801b82e:	430f      	orrs	r7, r1
 801b830:	1211      	asrs	r1, r2, #8
 801b832:	b2bb      	uxth	r3, r7
 801b834:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b838:	10d7      	asrs	r7, r2, #3
 801b83a:	fb11 f104 	smulbb	r1, r1, r4
 801b83e:	1218      	asrs	r0, r3, #8
 801b840:	00d2      	lsls	r2, r2, #3
 801b842:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b846:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b84a:	fb17 f704 	smulbb	r7, r7, r4
 801b84e:	b2d2      	uxtb	r2, r2
 801b850:	fb00 1009 	mla	r0, r0, r9, r1
 801b854:	10d9      	asrs	r1, r3, #3
 801b856:	fb12 f204 	smulbb	r2, r2, r4
 801b85a:	00db      	lsls	r3, r3, #3
 801b85c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b860:	b280      	uxth	r0, r0
 801b862:	b2db      	uxtb	r3, r3
 801b864:	fb01 7109 	mla	r1, r1, r9, r7
 801b868:	fb03 2309 	mla	r3, r3, r9, r2
 801b86c:	1c42      	adds	r2, r0, #1
 801b86e:	b289      	uxth	r1, r1
 801b870:	b29b      	uxth	r3, r3
 801b872:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b876:	1c4f      	adds	r7, r1, #1
 801b878:	1c5a      	adds	r2, r3, #1
 801b87a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b87e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b882:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b886:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b888:	0949      	lsrs	r1, r1, #5
 801b88a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b88e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b892:	4310      	orrs	r0, r2
 801b894:	4308      	orrs	r0, r1
 801b896:	f823 0b02 	strh.w	r0, [r3], #2
 801b89a:	930e      	str	r3, [sp, #56]	; 0x38
 801b89c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b89e:	449a      	add	sl, r3
 801b8a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b8a2:	441d      	add	r5, r3
 801b8a4:	e6ed      	b.n	801b682 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801b8a6:	2800      	cmp	r0, #0
 801b8a8:	f43f af7f 	beq.w	801b7aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b8ac:	5cd3      	ldrb	r3, [r2, r3]
 801b8ae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b8b2:	9310      	str	r3, [sp, #64]	; 0x40
 801b8b4:	e779      	b.n	801b7aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b8b6:	b019      	add	sp, #100	; 0x64
 801b8b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b8bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801b8bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b8c0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801b8c4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801b8c8:	f1b8 0f00 	cmp.w	r8, #0
 801b8cc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801b8d0:	fb08 470e 	mla	r7, r8, lr, r4
 801b8d4:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801b8d8:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801b8dc:	eb02 0907 	add.w	r9, r2, r7
 801b8e0:	8808      	ldrh	r0, [r1, #0]
 801b8e2:	db67      	blt.n	801b9b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801b8e4:	45c2      	cmp	sl, r8
 801b8e6:	dd65      	ble.n	801b9b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801b8e8:	2c00      	cmp	r4, #0
 801b8ea:	db61      	blt.n	801b9b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801b8ec:	45a6      	cmp	lr, r4
 801b8ee:	dd5f      	ble.n	801b9b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801b8f0:	5dd2      	ldrb	r2, [r2, r7]
 801b8f2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801b8f6:	1c62      	adds	r2, r4, #1
 801b8f8:	d45f      	bmi.n	801b9ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801b8fa:	4596      	cmp	lr, r2
 801b8fc:	dd5d      	ble.n	801b9ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801b8fe:	2d00      	cmp	r5, #0
 801b900:	d05b      	beq.n	801b9ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801b902:	f899 2001 	ldrb.w	r2, [r9, #1]
 801b906:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801b90a:	f118 0801 	adds.w	r8, r8, #1
 801b90e:	d458      	bmi.n	801b9c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801b910:	45c2      	cmp	sl, r8
 801b912:	dd56      	ble.n	801b9c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801b914:	2e00      	cmp	r6, #0
 801b916:	d054      	beq.n	801b9c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801b918:	2c00      	cmp	r4, #0
 801b91a:	db50      	blt.n	801b9be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801b91c:	45a6      	cmp	lr, r4
 801b91e:	dd4e      	ble.n	801b9be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801b920:	f819 200e 	ldrb.w	r2, [r9, lr]
 801b924:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801b928:	3401      	adds	r4, #1
 801b92a:	d407      	bmi.n	801b93c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801b92c:	45a6      	cmp	lr, r4
 801b92e:	dd05      	ble.n	801b93c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801b930:	b125      	cbz	r5, 801b93c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801b932:	44ce      	add	lr, r9
 801b934:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801b938:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801b93c:	fb15 f406 	smulbb	r4, r5, r6
 801b940:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801b944:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801b948:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801b94c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801b950:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801b954:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801b958:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801b95c:	ea43 0c0c 	orr.w	ip, r3, ip
 801b960:	f1c6 0310 	rsb	r3, r6, #16
 801b964:	ea4e 0707 	orr.w	r7, lr, r7
 801b968:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801b96c:	1b5b      	subs	r3, r3, r5
 801b96e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801b972:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b976:	437d      	muls	r5, r7
 801b978:	fb03 5c0c 	mla	ip, r3, ip, r5
 801b97c:	0403      	lsls	r3, r0, #16
 801b97e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b982:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801b986:	4318      	orrs	r0, r3
 801b988:	0413      	lsls	r3, r2, #16
 801b98a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b98e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801b992:	fb04 c000 	mla	r0, r4, r0, ip
 801b996:	4313      	orrs	r3, r2
 801b998:	fb06 0003 	mla	r0, r6, r3, r0
 801b99c:	0d43      	lsrs	r3, r0, #21
 801b99e:	0940      	lsrs	r0, r0, #5
 801b9a0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b9a4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b9a8:	4318      	orrs	r0, r3
 801b9aa:	8008      	strh	r0, [r1, #0]
 801b9ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b9b0:	4684      	mov	ip, r0
 801b9b2:	e7a0      	b.n	801b8f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801b9b4:	4607      	mov	r7, r0
 801b9b6:	4684      	mov	ip, r0
 801b9b8:	e7a7      	b.n	801b90a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801b9ba:	4607      	mov	r7, r0
 801b9bc:	e7a5      	b.n	801b90a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801b9be:	4602      	mov	r2, r0
 801b9c0:	e7b2      	b.n	801b928 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801b9c2:	4602      	mov	r2, r0
 801b9c4:	e7ba      	b.n	801b93c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801b9c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b9c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9ca:	b093      	sub	sp, #76	; 0x4c
 801b9cc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b9d0:	920f      	str	r2, [sp, #60]	; 0x3c
 801b9d2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801b9d4:	9010      	str	r0, [sp, #64]	; 0x40
 801b9d6:	9108      	str	r1, [sp, #32]
 801b9d8:	6850      	ldr	r0, [r2, #4]
 801b9da:	9306      	str	r3, [sp, #24]
 801b9dc:	6812      	ldr	r2, [r2, #0]
 801b9de:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801b9e2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801b9e6:	fb00 1303 	mla	r3, r0, r3, r1
 801b9ea:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801b9ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b9f0:	681b      	ldr	r3, [r3, #0]
 801b9f2:	9307      	str	r3, [sp, #28]
 801b9f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b9f6:	685f      	ldr	r7, [r3, #4]
 801b9f8:	3704      	adds	r7, #4
 801b9fa:	9b08      	ldr	r3, [sp, #32]
 801b9fc:	2b00      	cmp	r3, #0
 801b9fe:	dc03      	bgt.n	801ba08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ba00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ba02:	2b00      	cmp	r3, #0
 801ba04:	f340 81b2 	ble.w	801bd6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ba08:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ba0e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ba12:	1e48      	subs	r0, r1, #1
 801ba14:	f102 3cff 	add.w	ip, r2, #4294967295
 801ba18:	9b06      	ldr	r3, [sp, #24]
 801ba1a:	2b00      	cmp	r3, #0
 801ba1c:	f340 80a9 	ble.w	801bb72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801ba20:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ba24:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ba28:	d406      	bmi.n	801ba38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ba2a:	4586      	cmp	lr, r0
 801ba2c:	da04      	bge.n	801ba38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ba2e:	2b00      	cmp	r3, #0
 801ba30:	db02      	blt.n	801ba38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ba32:	4563      	cmp	r3, ip
 801ba34:	f2c0 809e 	blt.w	801bb74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ba38:	f11e 0e01 	adds.w	lr, lr, #1
 801ba3c:	f100 808f 	bmi.w	801bb5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba40:	4571      	cmp	r1, lr
 801ba42:	f2c0 808c 	blt.w	801bb5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba46:	3301      	adds	r3, #1
 801ba48:	f100 8089 	bmi.w	801bb5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba4c:	429a      	cmp	r2, r3
 801ba4e:	f2c0 8086 	blt.w	801bb5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba52:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ba56:	46c8      	mov	r8, r9
 801ba58:	f1bb 0f00 	cmp.w	fp, #0
 801ba5c:	f340 80a6 	ble.w	801bbac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801ba60:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801ba62:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ba66:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba68:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ba6c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ba70:	1422      	asrs	r2, r4, #16
 801ba72:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ba76:	689b      	ldr	r3, [r3, #8]
 801ba78:	f100 80e3 	bmi.w	801bc42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ba7c:	f103 3aff 	add.w	sl, r3, #4294967295
 801ba80:	4552      	cmp	r2, sl
 801ba82:	f280 80de 	bge.w	801bc42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ba86:	f1bc 0f00 	cmp.w	ip, #0
 801ba8a:	f2c0 80da 	blt.w	801bc42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ba8e:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ba92:	45d4      	cmp	ip, sl
 801ba94:	f280 80d5 	bge.w	801bc42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ba98:	b21b      	sxth	r3, r3
 801ba9a:	9d07      	ldr	r5, [sp, #28]
 801ba9c:	fb0c 2203 	mla	r2, ip, r3, r2
 801baa0:	eb05 0a02 	add.w	sl, r5, r2
 801baa4:	5caa      	ldrb	r2, [r5, r2]
 801baa6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801baaa:	2800      	cmp	r0, #0
 801baac:	f000 80c0 	beq.w	801bc30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801bab0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801bab4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801bab8:	920b      	str	r2, [sp, #44]	; 0x2c
 801baba:	b151      	cbz	r1, 801bad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801babc:	eb0a 0203 	add.w	r2, sl, r3
 801bac0:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801bac4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801bac8:	9309      	str	r3, [sp, #36]	; 0x24
 801baca:	7853      	ldrb	r3, [r2, #1]
 801bacc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801bad0:	930c      	str	r3, [sp, #48]	; 0x30
 801bad2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bad4:	fb10 f201 	smulbb	r2, r0, r1
 801bad8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801bada:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801bade:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801bae2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801bae6:	10d2      	asrs	r2, r2, #3
 801bae8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801baec:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801baf0:	ea4c 0c03 	orr.w	ip, ip, r3
 801baf4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801baf6:	041b      	lsls	r3, r3, #16
 801baf8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801bafc:	432b      	orrs	r3, r5
 801bafe:	4353      	muls	r3, r2
 801bb00:	fb0a 330c 	mla	r3, sl, ip, r3
 801bb04:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801bb08:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bb0c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801bb10:	ea4c 0e0e 	orr.w	lr, ip, lr
 801bb14:	f1c1 0c10 	rsb	ip, r1, #16
 801bb18:	ebac 0c00 	sub.w	ip, ip, r0
 801bb1c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801bb20:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801bb24:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801bb28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bb2a:	0418      	lsls	r0, r3, #16
 801bb2c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801bb30:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801bb34:	4318      	orrs	r0, r3
 801bb36:	fb02 c200 	mla	r2, r2, r0, ip
 801bb3a:	0d53      	lsrs	r3, r2, #21
 801bb3c:	0952      	lsrs	r2, r2, #5
 801bb3e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bb42:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bb46:	431a      	orrs	r2, r3
 801bb48:	f8a8 2000 	strh.w	r2, [r8]
 801bb4c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801bb4e:	f108 0802 	add.w	r8, r8, #2
 801bb52:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bb56:	441c      	add	r4, r3
 801bb58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bb5a:	441e      	add	r6, r3
 801bb5c:	e77c      	b.n	801ba58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bb5e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801bb60:	f109 0902 	add.w	r9, r9, #2
 801bb64:	441c      	add	r4, r3
 801bb66:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bb68:	441e      	add	r6, r3
 801bb6a:	9b06      	ldr	r3, [sp, #24]
 801bb6c:	3b01      	subs	r3, #1
 801bb6e:	9306      	str	r3, [sp, #24]
 801bb70:	e752      	b.n	801ba18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801bb72:	d020      	beq.n	801bbb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801bb74:	9b06      	ldr	r3, [sp, #24]
 801bb76:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801bb78:	3b01      	subs	r3, #1
 801bb7a:	fb00 4003 	mla	r0, r0, r3, r4
 801bb7e:	1400      	asrs	r0, r0, #16
 801bb80:	f53f af67 	bmi.w	801ba52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bb84:	3901      	subs	r1, #1
 801bb86:	4288      	cmp	r0, r1
 801bb88:	f6bf af63 	bge.w	801ba52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bb8c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801bb8e:	fb01 6303 	mla	r3, r1, r3, r6
 801bb92:	141b      	asrs	r3, r3, #16
 801bb94:	f53f af5d 	bmi.w	801ba52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bb98:	3a01      	subs	r2, #1
 801bb9a:	4293      	cmp	r3, r2
 801bb9c:	f6bf af59 	bge.w	801ba52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bba0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801bba4:	46ca      	mov	sl, r9
 801bba6:	f1b8 0f00 	cmp.w	r8, #0
 801bbaa:	dc67      	bgt.n	801bc7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801bbac:	9b06      	ldr	r3, [sp, #24]
 801bbae:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801bbb2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801bbb6:	9b08      	ldr	r3, [sp, #32]
 801bbb8:	2b00      	cmp	r3, #0
 801bbba:	f340 80d7 	ble.w	801bd6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801bbbe:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bbc2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bbc4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bbc8:	eeb0 6a62 	vmov.f32	s12, s5
 801bbcc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bbd0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bbd4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bbd8:	ee16 4a10 	vmov	r4, s12
 801bbdc:	eeb0 6a43 	vmov.f32	s12, s6
 801bbe0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bbe4:	ee16 6a10 	vmov	r6, s12
 801bbe8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bbec:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bbf0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bbf4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bbf8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bbfc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bc00:	ee12 2a90 	vmov	r2, s5
 801bc04:	eef0 2a47 	vmov.f32	s5, s14
 801bc08:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc0c:	ee13 2a10 	vmov	r2, s6
 801bc10:	931f      	str	r3, [sp, #124]	; 0x7c
 801bc12:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bc14:	eeb0 3a67 	vmov.f32	s6, s15
 801bc18:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc1c:	9320      	str	r3, [sp, #128]	; 0x80
 801bc1e:	9b08      	ldr	r3, [sp, #32]
 801bc20:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bc22:	3b01      	subs	r3, #1
 801bc24:	9308      	str	r3, [sp, #32]
 801bc26:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bc28:	bf08      	it	eq
 801bc2a:	4613      	moveq	r3, r2
 801bc2c:	9306      	str	r3, [sp, #24]
 801bc2e:	e6e4      	b.n	801b9fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801bc30:	2900      	cmp	r1, #0
 801bc32:	f43f af4e 	beq.w	801bad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801bc36:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801bc3a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801bc3e:	9309      	str	r3, [sp, #36]	; 0x24
 801bc40:	e747      	b.n	801bad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801bc42:	f112 0a01 	adds.w	sl, r2, #1
 801bc46:	d481      	bmi.n	801bb4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc48:	4553      	cmp	r3, sl
 801bc4a:	f6ff af7f 	blt.w	801bb4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc4e:	f11c 0a01 	adds.w	sl, ip, #1
 801bc52:	f53f af7b 	bmi.w	801bb4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc56:	45d6      	cmp	lr, sl
 801bc58:	f6ff af78 	blt.w	801bb4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc5c:	b21b      	sxth	r3, r3
 801bc5e:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801bc62:	fa0f f28e 	sxth.w	r2, lr
 801bc66:	9300      	str	r3, [sp, #0]
 801bc68:	463b      	mov	r3, r7
 801bc6a:	9201      	str	r2, [sp, #4]
 801bc6c:	9a07      	ldr	r2, [sp, #28]
 801bc6e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801bc72:	4641      	mov	r1, r8
 801bc74:	9810      	ldr	r0, [sp, #64]	; 0x40
 801bc76:	f7ff fe21 	bl	801b8bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801bc7a:	e767      	b.n	801bb4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bc7c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bc7e:	1422      	asrs	r2, r4, #16
 801bc80:	1431      	asrs	r1, r6, #16
 801bc82:	9d07      	ldr	r5, [sp, #28]
 801bc84:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801bc88:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801bc8c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801bc90:	fb03 2101 	mla	r1, r3, r1, r2
 801bc94:	9a07      	ldr	r2, [sp, #28]
 801bc96:	440a      	add	r2, r1
 801bc98:	5c69      	ldrb	r1, [r5, r1]
 801bc9a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801bc9e:	f1be 0f00 	cmp.w	lr, #0
 801bca2:	d05c      	beq.n	801bd5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801bca4:	f892 c001 	ldrb.w	ip, [r2, #1]
 801bca8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801bcac:	950d      	str	r5, [sp, #52]	; 0x34
 801bcae:	b150      	cbz	r0, 801bcc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801bcb0:	eb02 0c03 	add.w	ip, r2, r3
 801bcb4:	5cd3      	ldrb	r3, [r2, r3]
 801bcb6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801bcba:	930a      	str	r3, [sp, #40]	; 0x28
 801bcbc:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801bcc0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801bcc4:	930e      	str	r3, [sp, #56]	; 0x38
 801bcc6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bcc8:	fb1e f200 	smulbb	r2, lr, r0
 801bccc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bcce:	f108 38ff 	add.w	r8, r8, #4294967295
 801bcd2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801bcd6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801bcda:	10d2      	asrs	r2, r2, #3
 801bcdc:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801bce0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801bce4:	ea4c 0c03 	orr.w	ip, ip, r3
 801bce8:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801bcec:	9311      	str	r3, [sp, #68]	; 0x44
 801bcee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bcf0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bcf2:	041b      	lsls	r3, r3, #16
 801bcf4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801bcf8:	ea43 030b 	orr.w	r3, r3, fp
 801bcfc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801bd00:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801bd04:	4353      	muls	r3, r2
 801bd06:	fb05 3c0c 	mla	ip, r5, ip, r3
 801bd0a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801bd0e:	ea43 0b01 	orr.w	fp, r3, r1
 801bd12:	f1c0 0110 	rsb	r1, r0, #16
 801bd16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bd18:	eba1 0e0e 	sub.w	lr, r1, lr
 801bd1c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801bd20:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801bd24:	fb0e cc0b 	mla	ip, lr, fp, ip
 801bd28:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801bd2c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801bd30:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801bd34:	ea4b 0e0e 	orr.w	lr, fp, lr
 801bd38:	fb02 cc0e 	mla	ip, r2, lr, ip
 801bd3c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801bd40:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801bd44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bd48:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801bd4c:	ea43 0c0c 	orr.w	ip, r3, ip
 801bd50:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801bd52:	441c      	add	r4, r3
 801bd54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bd56:	f82a cb02 	strh.w	ip, [sl], #2
 801bd5a:	441e      	add	r6, r3
 801bd5c:	e723      	b.n	801bba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801bd5e:	2800      	cmp	r0, #0
 801bd60:	d0b1      	beq.n	801bcc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801bd62:	5cd3      	ldrb	r3, [r2, r3]
 801bd64:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801bd68:	930a      	str	r3, [sp, #40]	; 0x28
 801bd6a:	e7ac      	b.n	801bcc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801bd6c:	b013      	add	sp, #76	; 0x4c
 801bd6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bd72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801bd72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd76:	880d      	ldrh	r5, [r1, #0]
 801bd78:	b087      	sub	sp, #28
 801bd7a:	10ef      	asrs	r7, r5, #3
 801bd7c:	9103      	str	r1, [sp, #12]
 801bd7e:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801bd82:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801bd86:	00ed      	lsls	r5, r5, #3
 801bd88:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bd8c:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801bd90:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801bd94:	b2ed      	uxtb	r5, r5
 801bd96:	9701      	str	r7, [sp, #4]
 801bd98:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801bd9c:	9502      	str	r5, [sp, #8]
 801bd9e:	9d01      	ldr	r5, [sp, #4]
 801bda0:	9902      	ldr	r1, [sp, #8]
 801bda2:	022d      	lsls	r5, r5, #8
 801bda4:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801bda8:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801bdac:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801bdb0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801bdb4:	430d      	orrs	r5, r1
 801bdb6:	fb06 0709 	mla	r7, r6, r9, r0
 801bdba:	2e00      	cmp	r6, #0
 801bdbc:	9505      	str	r5, [sp, #20]
 801bdbe:	eb02 0c07 	add.w	ip, r2, r7
 801bdc2:	f2c0 80b6 	blt.w	801bf32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801bdc6:	45b3      	cmp	fp, r6
 801bdc8:	f340 80b3 	ble.w	801bf32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801bdcc:	2800      	cmp	r0, #0
 801bdce:	f2c0 80ae 	blt.w	801bf2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801bdd2:	4581      	cmp	r9, r0
 801bdd4:	f340 80ab 	ble.w	801bf2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801bdd8:	5dd7      	ldrb	r7, [r2, r7]
 801bdda:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801bdde:	441f      	add	r7, r3
 801bde0:	1c42      	adds	r2, r0, #1
 801bde2:	f100 80a9 	bmi.w	801bf38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801bde6:	4591      	cmp	r9, r2
 801bde8:	f340 80a6 	ble.w	801bf38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801bdec:	2c00      	cmp	r4, #0
 801bdee:	f000 80a3 	beq.w	801bf38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801bdf2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801bdf6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801bdfa:	441d      	add	r5, r3
 801bdfc:	3601      	adds	r6, #1
 801bdfe:	f100 809f 	bmi.w	801bf40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801be02:	45b3      	cmp	fp, r6
 801be04:	f340 809c 	ble.w	801bf40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801be08:	f1be 0f00 	cmp.w	lr, #0
 801be0c:	f000 8098 	beq.w	801bf40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801be10:	2800      	cmp	r0, #0
 801be12:	f2c0 8093 	blt.w	801bf3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801be16:	4581      	cmp	r9, r0
 801be18:	f340 8090 	ble.w	801bf3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801be1c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801be20:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801be24:	441e      	add	r6, r3
 801be26:	3001      	adds	r0, #1
 801be28:	f100 808d 	bmi.w	801bf46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801be2c:	4581      	cmp	r9, r0
 801be2e:	f340 808a 	ble.w	801bf46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801be32:	2c00      	cmp	r4, #0
 801be34:	f000 8087 	beq.w	801bf46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801be38:	44e1      	add	r9, ip
 801be3a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801be3e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801be42:	4413      	add	r3, r2
 801be44:	b2a4      	uxth	r4, r4
 801be46:	f897 c002 	ldrb.w	ip, [r7, #2]
 801be4a:	fa1f fe8e 	uxth.w	lr, lr
 801be4e:	9901      	ldr	r1, [sp, #4]
 801be50:	fb04 fb0e 	mul.w	fp, r4, lr
 801be54:	0124      	lsls	r4, r4, #4
 801be56:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801be5a:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801be5e:	eba4 040b 	sub.w	r4, r4, fp
 801be62:	fa1f f08e 	uxth.w	r0, lr
 801be66:	b2a2      	uxth	r2, r4
 801be68:	78ac      	ldrb	r4, [r5, #2]
 801be6a:	eba9 0900 	sub.w	r9, r9, r0
 801be6e:	fa1f fe88 	uxth.w	lr, r8
 801be72:	4354      	muls	r4, r2
 801be74:	ea6f 0808 	mvn.w	r8, r8
 801be78:	fa1f f989 	uxth.w	r9, r9
 801be7c:	fa5f f888 	uxtb.w	r8, r8
 801be80:	fb09 440c 	mla	r4, r9, ip, r4
 801be84:	f896 c002 	ldrb.w	ip, [r6, #2]
 801be88:	fb1a fa08 	smulbb	sl, sl, r8
 801be8c:	fb00 440c 	mla	r4, r0, ip, r4
 801be90:	f893 c002 	ldrb.w	ip, [r3, #2]
 801be94:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801be98:	787c      	ldrb	r4, [r7, #1]
 801be9a:	783f      	ldrb	r7, [r7, #0]
 801be9c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801bea0:	fb0c ac0e 	mla	ip, ip, lr, sl
 801bea4:	f895 a001 	ldrb.w	sl, [r5, #1]
 801bea8:	782d      	ldrb	r5, [r5, #0]
 801beaa:	fb02 fa0a 	mul.w	sl, r2, sl
 801beae:	fa1f fc8c 	uxth.w	ip, ip
 801beb2:	436a      	muls	r2, r5
 801beb4:	7835      	ldrb	r5, [r6, #0]
 801beb6:	fb09 aa04 	mla	sl, r9, r4, sl
 801beba:	7874      	ldrb	r4, [r6, #1]
 801bebc:	fb09 2207 	mla	r2, r9, r7, r2
 801bec0:	fb00 aa04 	mla	sl, r0, r4, sl
 801bec4:	785c      	ldrb	r4, [r3, #1]
 801bec6:	fb00 2005 	mla	r0, r0, r5, r2
 801beca:	781b      	ldrb	r3, [r3, #0]
 801becc:	fb0b a404 	mla	r4, fp, r4, sl
 801bed0:	fb11 fa08 	smulbb	sl, r1, r8
 801bed4:	fb0b 0b03 	mla	fp, fp, r3, r0
 801bed8:	9b02      	ldr	r3, [sp, #8]
 801beda:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801bede:	fb13 f808 	smulbb	r8, r3, r8
 801bee2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801bee6:	fb04 a40e 	mla	r4, r4, lr, sl
 801beea:	f10c 0301 	add.w	r3, ip, #1
 801beee:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801bef2:	b2a4      	uxth	r4, r4
 801bef4:	fa1f fe8e 	uxth.w	lr, lr
 801bef8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801befc:	f104 0a01 	add.w	sl, r4, #1
 801bf00:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801bf04:	f10e 0c01 	add.w	ip, lr, #1
 801bf08:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801bf0c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bf10:	0964      	lsrs	r4, r4, #5
 801bf12:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801bf16:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801bf1a:	ea4c 0c03 	orr.w	ip, ip, r3
 801bf1e:	9b03      	ldr	r3, [sp, #12]
 801bf20:	ea4c 0c04 	orr.w	ip, ip, r4
 801bf24:	f8a3 c000 	strh.w	ip, [r3]
 801bf28:	b007      	add	sp, #28
 801bf2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bf2e:	af05      	add	r7, sp, #20
 801bf30:	e756      	b.n	801bde0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801bf32:	ad05      	add	r5, sp, #20
 801bf34:	462f      	mov	r7, r5
 801bf36:	e761      	b.n	801bdfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801bf38:	ad05      	add	r5, sp, #20
 801bf3a:	e75f      	b.n	801bdfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801bf3c:	ae05      	add	r6, sp, #20
 801bf3e:	e772      	b.n	801be26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801bf40:	ab05      	add	r3, sp, #20
 801bf42:	461e      	mov	r6, r3
 801bf44:	e77e      	b.n	801be44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801bf46:	ab05      	add	r3, sp, #20
 801bf48:	e77c      	b.n	801be44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801bf4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bf4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf4e:	b095      	sub	sp, #84	; 0x54
 801bf50:	9212      	str	r2, [sp, #72]	; 0x48
 801bf52:	9309      	str	r3, [sp, #36]	; 0x24
 801bf54:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801bf56:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801bf5a:	9013      	str	r0, [sp, #76]	; 0x4c
 801bf5c:	930f      	str	r3, [sp, #60]	; 0x3c
 801bf5e:	6850      	ldr	r0, [r2, #4]
 801bf60:	910e      	str	r1, [sp, #56]	; 0x38
 801bf62:	6812      	ldr	r2, [r2, #0]
 801bf64:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801bf68:	fb00 1303 	mla	r3, r0, r3, r1
 801bf6c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bf70:	930a      	str	r3, [sp, #40]	; 0x28
 801bf72:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bf74:	681b      	ldr	r3, [r3, #0]
 801bf76:	930d      	str	r3, [sp, #52]	; 0x34
 801bf78:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bf7a:	685c      	ldr	r4, [r3, #4]
 801bf7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bf7e:	3404      	adds	r4, #4
 801bf80:	43db      	mvns	r3, r3
 801bf82:	b2db      	uxtb	r3, r3
 801bf84:	930b      	str	r3, [sp, #44]	; 0x2c
 801bf86:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf88:	2b00      	cmp	r3, #0
 801bf8a:	dc03      	bgt.n	801bf94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801bf8c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801bf8e:	2b00      	cmp	r3, #0
 801bf90:	f340 8255 	ble.w	801c43e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801bf94:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bf96:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bf9a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bf9e:	1e48      	subs	r0, r1, #1
 801bfa0:	1e55      	subs	r5, r2, #1
 801bfa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bfa4:	2b00      	cmp	r3, #0
 801bfa6:	f340 80f9 	ble.w	801c19c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801bfaa:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801bfac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bfae:	1436      	asrs	r6, r6, #16
 801bfb0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801bfb4:	d406      	bmi.n	801bfc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801bfb6:	4286      	cmp	r6, r0
 801bfb8:	da04      	bge.n	801bfc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801bfba:	2b00      	cmp	r3, #0
 801bfbc:	db02      	blt.n	801bfc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801bfbe:	42ab      	cmp	r3, r5
 801bfc0:	f2c0 80ed 	blt.w	801c19e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801bfc4:	3601      	adds	r6, #1
 801bfc6:	f100 80da 	bmi.w	801c17e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801bfca:	42b1      	cmp	r1, r6
 801bfcc:	f2c0 80d7 	blt.w	801c17e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801bfd0:	3301      	adds	r3, #1
 801bfd2:	f100 80d4 	bmi.w	801c17e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801bfd6:	429a      	cmp	r2, r3
 801bfd8:	f2c0 80d1 	blt.w	801c17e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801bfdc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bfde:	9311      	str	r3, [sp, #68]	; 0x44
 801bfe0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bfe2:	930c      	str	r3, [sp, #48]	; 0x30
 801bfe4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801bfe6:	2b00      	cmp	r3, #0
 801bfe8:	f340 80fa 	ble.w	801c1e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801bfec:	9826      	ldr	r0, [sp, #152]	; 0x98
 801bfee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bff0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801bff2:	68c6      	ldr	r6, [r0, #12]
 801bff4:	141d      	asrs	r5, r3, #16
 801bff6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801bff8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801bffc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801bffe:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801c000:	1400      	asrs	r0, r0, #16
 801c002:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801c006:	6892      	ldr	r2, [r2, #8]
 801c008:	f100 813e 	bmi.w	801c288 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c00c:	1e57      	subs	r7, r2, #1
 801c00e:	42b8      	cmp	r0, r7
 801c010:	f280 813a 	bge.w	801c288 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c014:	2d00      	cmp	r5, #0
 801c016:	f2c0 8137 	blt.w	801c288 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c01a:	1e77      	subs	r7, r6, #1
 801c01c:	42bd      	cmp	r5, r7
 801c01e:	f280 8133 	bge.w	801c288 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c022:	b212      	sxth	r2, r2
 801c024:	fb05 0002 	mla	r0, r5, r2, r0
 801c028:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c02a:	f815 a000 	ldrb.w	sl, [r5, r0]
 801c02e:	182e      	adds	r6, r5, r0
 801c030:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801c034:	eb04 050a 	add.w	r5, r4, sl
 801c038:	2b00      	cmp	r3, #0
 801c03a:	f000 8117 	beq.w	801c26c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801c03e:	f896 c001 	ldrb.w	ip, [r6, #1]
 801c042:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801c046:	44a4      	add	ip, r4
 801c048:	2900      	cmp	r1, #0
 801c04a:	f000 8117 	beq.w	801c27c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801c04e:	18b0      	adds	r0, r6, r2
 801c050:	5cb2      	ldrb	r2, [r6, r2]
 801c052:	7840      	ldrb	r0, [r0, #1]
 801c054:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c058:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c05c:	4422      	add	r2, r4
 801c05e:	4420      	add	r0, r4
 801c060:	b29b      	uxth	r3, r3
 801c062:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801c066:	b289      	uxth	r1, r1
 801c068:	f895 b002 	ldrb.w	fp, [r5, #2]
 801c06c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c06e:	fb03 f901 	mul.w	r9, r3, r1
 801c072:	011b      	lsls	r3, r3, #4
 801c074:	f8b6 e000 	ldrh.w	lr, [r6]
 801c078:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c07c:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801c080:	eba3 0309 	sub.w	r3, r3, r9
 801c084:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801c088:	b289      	uxth	r1, r1
 801c08a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801c08e:	b29b      	uxth	r3, r3
 801c090:	eba8 0801 	sub.w	r8, r8, r1
 801c094:	435f      	muls	r7, r3
 801c096:	fa1f f888 	uxth.w	r8, r8
 801c09a:	9310      	str	r3, [sp, #64]	; 0x40
 801c09c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c09e:	fb08 770b 	mla	r7, r8, fp, r7
 801c0a2:	f892 b002 	ldrb.w	fp, [r2, #2]
 801c0a6:	fb01 770b 	mla	r7, r1, fp, r7
 801c0aa:	f890 b002 	ldrb.w	fp, [r0, #2]
 801c0ae:	fb09 770b 	mla	r7, r9, fp, r7
 801c0b2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801c0b6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801c0ba:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c0be:	fb1b fb03 	smulbb	fp, fp, r3
 801c0c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c0c4:	fb07 b706 	mla	r7, r7, r6, fp
 801c0c8:	f895 b001 	ldrb.w	fp, [r5, #1]
 801c0cc:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801c0d0:	f89c c000 	ldrb.w	ip, [ip]
 801c0d4:	b2bf      	uxth	r7, r7
 801c0d6:	435d      	muls	r5, r3
 801c0d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c0da:	fb08 550b 	mla	r5, r8, fp, r5
 801c0de:	f892 b001 	ldrb.w	fp, [r2, #1]
 801c0e2:	fb01 550b 	mla	r5, r1, fp, r5
 801c0e6:	f890 b001 	ldrb.w	fp, [r0, #1]
 801c0ea:	fb09 550b 	mla	r5, r9, fp, r5
 801c0ee:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801c0f2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c0f6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c0fa:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801c0fe:	fa5f fe8e 	uxtb.w	lr, lr
 801c102:	fb1b fb03 	smulbb	fp, fp, r3
 801c106:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c108:	fb03 f30c 	mul.w	r3, r3, ip
 801c10c:	f892 c000 	ldrb.w	ip, [r2]
 801c110:	fb05 b506 	mla	r5, r5, r6, fp
 801c114:	fb08 330a 	mla	r3, r8, sl, r3
 801c118:	b2ad      	uxth	r5, r5
 801c11a:	fb01 330c 	mla	r3, r1, ip, r3
 801c11e:	f890 c000 	ldrb.w	ip, [r0]
 801c122:	f105 0b01 	add.w	fp, r5, #1
 801c126:	fb09 3c0c 	mla	ip, r9, ip, r3
 801c12a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c12c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801c130:	fb1e fe03 	smulbb	lr, lr, r3
 801c134:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801c138:	1c7b      	adds	r3, r7, #1
 801c13a:	096d      	lsrs	r5, r5, #5
 801c13c:	fb0c e606 	mla	r6, ip, r6, lr
 801c140:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c144:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c148:	b2b6      	uxth	r6, r6
 801c14a:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801c14e:	1c77      	adds	r7, r6, #1
 801c150:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801c154:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c158:	431f      	orrs	r7, r3
 801c15a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c15c:	433d      	orrs	r5, r7
 801c15e:	801d      	strh	r5, [r3, #0]
 801c160:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c162:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801c164:	3302      	adds	r3, #2
 801c166:	930c      	str	r3, [sp, #48]	; 0x30
 801c168:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c16a:	4413      	add	r3, r2
 801c16c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c16e:	931f      	str	r3, [sp, #124]	; 0x7c
 801c170:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c172:	4413      	add	r3, r2
 801c174:	9320      	str	r3, [sp, #128]	; 0x80
 801c176:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c178:	3b01      	subs	r3, #1
 801c17a:	9311      	str	r3, [sp, #68]	; 0x44
 801c17c:	e732      	b.n	801bfe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c17e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c180:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801c182:	4433      	add	r3, r6
 801c184:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801c186:	931f      	str	r3, [sp, #124]	; 0x7c
 801c188:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c18a:	4433      	add	r3, r6
 801c18c:	9320      	str	r3, [sp, #128]	; 0x80
 801c18e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c190:	3b01      	subs	r3, #1
 801c192:	9309      	str	r3, [sp, #36]	; 0x24
 801c194:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c196:	3302      	adds	r3, #2
 801c198:	930a      	str	r3, [sp, #40]	; 0x28
 801c19a:	e702      	b.n	801bfa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c19c:	d027      	beq.n	801c1ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801c19e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c1a0:	9821      	ldr	r0, [sp, #132]	; 0x84
 801c1a2:	3b01      	subs	r3, #1
 801c1a4:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801c1a6:	fb00 5003 	mla	r0, r0, r3, r5
 801c1aa:	1400      	asrs	r0, r0, #16
 801c1ac:	f53f af16 	bmi.w	801bfdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c1b0:	3901      	subs	r1, #1
 801c1b2:	4288      	cmp	r0, r1
 801c1b4:	f6bf af12 	bge.w	801bfdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c1b8:	9922      	ldr	r1, [sp, #136]	; 0x88
 801c1ba:	9820      	ldr	r0, [sp, #128]	; 0x80
 801c1bc:	fb01 0303 	mla	r3, r1, r3, r0
 801c1c0:	141b      	asrs	r3, r3, #16
 801c1c2:	f53f af0b 	bmi.w	801bfdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c1c6:	3a01      	subs	r2, #1
 801c1c8:	4293      	cmp	r3, r2
 801c1ca:	f6bf af07 	bge.w	801bfdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c1ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c1d0:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801c1d4:	9311      	str	r3, [sp, #68]	; 0x44
 801c1d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c1d8:	930c      	str	r3, [sp, #48]	; 0x30
 801c1da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c1dc:	2b00      	cmp	r3, #0
 801c1de:	dc70      	bgt.n	801c2c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801c1e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c1e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c1e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c1e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c1ec:	930a      	str	r3, [sp, #40]	; 0x28
 801c1ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c1f0:	2b00      	cmp	r3, #0
 801c1f2:	f340 8124 	ble.w	801c43e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801c1f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c1fa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c1fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c200:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c204:	eef0 6a62 	vmov.f32	s13, s5
 801c208:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c20c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c210:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c214:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801c218:	eef0 6a43 	vmov.f32	s13, s6
 801c21c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c220:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801c224:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c228:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c22c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c230:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c234:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c238:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c23c:	ee12 2a90 	vmov	r2, s5
 801c240:	eef0 2a47 	vmov.f32	s5, s14
 801c244:	fb92 f3f3 	sdiv	r3, r2, r3
 801c248:	ee13 2a10 	vmov	r2, s6
 801c24c:	9321      	str	r3, [sp, #132]	; 0x84
 801c24e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c250:	eeb0 3a67 	vmov.f32	s6, s15
 801c254:	fb92 f3f3 	sdiv	r3, r2, r3
 801c258:	9322      	str	r3, [sp, #136]	; 0x88
 801c25a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c25c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c25e:	3b01      	subs	r3, #1
 801c260:	930e      	str	r3, [sp, #56]	; 0x38
 801c262:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c264:	bf08      	it	eq
 801c266:	4613      	moveq	r3, r2
 801c268:	9309      	str	r3, [sp, #36]	; 0x24
 801c26a:	e68c      	b.n	801bf86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c26c:	b149      	cbz	r1, 801c282 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801c26e:	5cb2      	ldrb	r2, [r6, r2]
 801c270:	4628      	mov	r0, r5
 801c272:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c276:	4422      	add	r2, r4
 801c278:	46ac      	mov	ip, r5
 801c27a:	e6f1      	b.n	801c060 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c27c:	4628      	mov	r0, r5
 801c27e:	462a      	mov	r2, r5
 801c280:	e6ee      	b.n	801c060 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c282:	4628      	mov	r0, r5
 801c284:	462a      	mov	r2, r5
 801c286:	e7f7      	b.n	801c278 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801c288:	1c47      	adds	r7, r0, #1
 801c28a:	f53f af69 	bmi.w	801c160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c28e:	42ba      	cmp	r2, r7
 801c290:	f6ff af66 	blt.w	801c160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c294:	1c6f      	adds	r7, r5, #1
 801c296:	f53f af63 	bmi.w	801c160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c29a:	42be      	cmp	r6, r7
 801c29c:	f6ff af60 	blt.w	801c160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c2a0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c2a2:	b236      	sxth	r6, r6
 801c2a4:	b212      	sxth	r2, r2
 801c2a6:	9002      	str	r0, [sp, #8]
 801c2a8:	9601      	str	r6, [sp, #4]
 801c2aa:	9200      	str	r2, [sp, #0]
 801c2ac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c2ae:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801c2b2:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801c2b6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801c2ba:	4623      	mov	r3, r4
 801c2bc:	f7ff fd59 	bl	801bd72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801c2c0:	e74e      	b.n	801c160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c2c2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801c2c4:	9820      	ldr	r0, [sp, #128]	; 0x80
 801c2c6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801c2ca:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801c2cc:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801c2ce:	1400      	asrs	r0, r0, #16
 801c2d0:	142d      	asrs	r5, r5, #16
 801c2d2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c2d4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801c2d8:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801c2dc:	fb02 5000 	mla	r0, r2, r0, r5
 801c2e0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c2e2:	f815 9000 	ldrb.w	r9, [r5, r0]
 801c2e6:	182e      	adds	r6, r5, r0
 801c2e8:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801c2ec:	eb04 0509 	add.w	r5, r4, r9
 801c2f0:	2b00      	cmp	r3, #0
 801c2f2:	f000 8096 	beq.w	801c422 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801c2f6:	7877      	ldrb	r7, [r6, #1]
 801c2f8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801c2fc:	4427      	add	r7, r4
 801c2fe:	2900      	cmp	r1, #0
 801c300:	f000 8097 	beq.w	801c432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801c304:	18b0      	adds	r0, r6, r2
 801c306:	5cb2      	ldrb	r2, [r6, r2]
 801c308:	7840      	ldrb	r0, [r0, #1]
 801c30a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c30e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c312:	4422      	add	r2, r4
 801c314:	4420      	add	r0, r4
 801c316:	b29b      	uxth	r3, r3
 801c318:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c31a:	b289      	uxth	r1, r1
 801c31c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801c320:	f8b6 c000 	ldrh.w	ip, [r6]
 801c324:	fb03 f801 	mul.w	r8, r3, r1
 801c328:	011b      	lsls	r3, r3, #4
 801c32a:	78be      	ldrb	r6, [r7, #2]
 801c32c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801c330:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801c334:	eba3 0308 	sub.w	r3, r3, r8
 801c338:	f814 9009 	ldrb.w	r9, [r4, r9]
 801c33c:	b289      	uxth	r1, r1
 801c33e:	b29b      	uxth	r3, r3
 801c340:	ebae 0e01 	sub.w	lr, lr, r1
 801c344:	435e      	muls	r6, r3
 801c346:	fa1f fe8e 	uxth.w	lr, lr
 801c34a:	9310      	str	r3, [sp, #64]	; 0x40
 801c34c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c34e:	fb0e 660b 	mla	r6, lr, fp, r6
 801c352:	f892 b002 	ldrb.w	fp, [r2, #2]
 801c356:	fb01 660b 	mla	r6, r1, fp, r6
 801c35a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801c35e:	fb08 660b 	mla	r6, r8, fp, r6
 801c362:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801c366:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801c36a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801c36e:	fb1b fb03 	smulbb	fp, fp, r3
 801c372:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c374:	fb06 b60a 	mla	r6, r6, sl, fp
 801c378:	f895 b001 	ldrb.w	fp, [r5, #1]
 801c37c:	787d      	ldrb	r5, [r7, #1]
 801c37e:	783f      	ldrb	r7, [r7, #0]
 801c380:	b2b6      	uxth	r6, r6
 801c382:	435d      	muls	r5, r3
 801c384:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c386:	fb0e 550b 	mla	r5, lr, fp, r5
 801c38a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801c38e:	fb01 550b 	mla	r5, r1, fp, r5
 801c392:	f890 b001 	ldrb.w	fp, [r0, #1]
 801c396:	fb08 550b 	mla	r5, r8, fp, r5
 801c39a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c39e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c3a2:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c3a6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801c3aa:	fa5f fc8c 	uxtb.w	ip, ip
 801c3ae:	fb1b fb03 	smulbb	fp, fp, r3
 801c3b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c3b4:	437b      	muls	r3, r7
 801c3b6:	7817      	ldrb	r7, [r2, #0]
 801c3b8:	fb05 b50a 	mla	r5, r5, sl, fp
 801c3bc:	fb0e 3309 	mla	r3, lr, r9, r3
 801c3c0:	b2ad      	uxth	r5, r5
 801c3c2:	fb01 3307 	mla	r3, r1, r7, r3
 801c3c6:	7807      	ldrb	r7, [r0, #0]
 801c3c8:	f105 0b01 	add.w	fp, r5, #1
 801c3cc:	fb08 3707 	mla	r7, r8, r7, r3
 801c3d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c3d2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801c3d6:	fb1c fc03 	smulbb	ip, ip, r3
 801c3da:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c3de:	1c73      	adds	r3, r6, #1
 801c3e0:	096d      	lsrs	r5, r5, #5
 801c3e2:	fb07 c70a 	mla	r7, r7, sl, ip
 801c3e6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801c3ea:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c3ee:	b2bf      	uxth	r7, r7
 801c3f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c3f2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c3f6:	1c7a      	adds	r2, r7, #1
 801c3f8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801c3fc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c400:	4316      	orrs	r6, r2
 801c402:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801c404:	432e      	orrs	r6, r5
 801c406:	f823 6b02 	strh.w	r6, [r3], #2
 801c40a:	930c      	str	r3, [sp, #48]	; 0x30
 801c40c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c40e:	4413      	add	r3, r2
 801c410:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c412:	931f      	str	r3, [sp, #124]	; 0x7c
 801c414:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c416:	4413      	add	r3, r2
 801c418:	9320      	str	r3, [sp, #128]	; 0x80
 801c41a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c41c:	3b01      	subs	r3, #1
 801c41e:	9311      	str	r3, [sp, #68]	; 0x44
 801c420:	e6db      	b.n	801c1da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801c422:	b149      	cbz	r1, 801c438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c424:	5cb2      	ldrb	r2, [r6, r2]
 801c426:	4628      	mov	r0, r5
 801c428:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c42c:	4422      	add	r2, r4
 801c42e:	462f      	mov	r7, r5
 801c430:	e771      	b.n	801c316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801c432:	4628      	mov	r0, r5
 801c434:	462a      	mov	r2, r5
 801c436:	e76e      	b.n	801c316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801c438:	4628      	mov	r0, r5
 801c43a:	462a      	mov	r2, r5
 801c43c:	e7f7      	b.n	801c42e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c43e:	b015      	add	sp, #84	; 0x54
 801c440:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c444 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801c444:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c448:	880f      	ldrh	r7, [r1, #0]
 801c44a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801c44e:	023c      	lsls	r4, r7, #8
 801c450:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801c454:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801c458:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801c45c:	017c      	lsls	r4, r7, #5
 801c45e:	00ff      	lsls	r7, r7, #3
 801c460:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801c464:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801c468:	b2ff      	uxtb	r7, r7
 801c46a:	ea4b 0404 	orr.w	r4, fp, r4
 801c46e:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801c472:	4327      	orrs	r7, r4
 801c474:	fb05 ca0e 	mla	sl, r5, lr, ip
 801c478:	2d00      	cmp	r5, #0
 801c47a:	9701      	str	r7, [sp, #4]
 801c47c:	eb02 080a 	add.w	r8, r2, sl
 801c480:	db7e      	blt.n	801c580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801c482:	45a9      	cmp	r9, r5
 801c484:	dd7c      	ble.n	801c580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801c486:	f1bc 0f00 	cmp.w	ip, #0
 801c48a:	db77      	blt.n	801c57c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801c48c:	45e6      	cmp	lr, ip
 801c48e:	dd75      	ble.n	801c57c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801c490:	f812 700a 	ldrb.w	r7, [r2, sl]
 801c494:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801c498:	441f      	add	r7, r3
 801c49a:	f11c 0201 	adds.w	r2, ip, #1
 801c49e:	d472      	bmi.n	801c586 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801c4a0:	4596      	cmp	lr, r2
 801c4a2:	dd70      	ble.n	801c586 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801c4a4:	2800      	cmp	r0, #0
 801c4a6:	d06e      	beq.n	801c586 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801c4a8:	f898 4001 	ldrb.w	r4, [r8, #1]
 801c4ac:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801c4b0:	441c      	add	r4, r3
 801c4b2:	3501      	adds	r5, #1
 801c4b4:	d46b      	bmi.n	801c58e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801c4b6:	45a9      	cmp	r9, r5
 801c4b8:	dd69      	ble.n	801c58e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801c4ba:	2e00      	cmp	r6, #0
 801c4bc:	d067      	beq.n	801c58e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801c4be:	f1bc 0f00 	cmp.w	ip, #0
 801c4c2:	db62      	blt.n	801c58a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801c4c4:	45e6      	cmp	lr, ip
 801c4c6:	dd60      	ble.n	801c58a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801c4c8:	f818 500e 	ldrb.w	r5, [r8, lr]
 801c4cc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c4d0:	441d      	add	r5, r3
 801c4d2:	f11c 0201 	adds.w	r2, ip, #1
 801c4d6:	d45d      	bmi.n	801c594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801c4d8:	4596      	cmp	lr, r2
 801c4da:	dd5b      	ble.n	801c594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801c4dc:	2800      	cmp	r0, #0
 801c4de:	d059      	beq.n	801c594 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801c4e0:	44c6      	add	lr, r8
 801c4e2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c4e6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c4ea:	4413      	add	r3, r2
 801c4ec:	b280      	uxth	r0, r0
 801c4ee:	f897 e002 	ldrb.w	lr, [r7, #2]
 801c4f2:	b2b2      	uxth	r2, r6
 801c4f4:	f897 9000 	ldrb.w	r9, [r7]
 801c4f8:	787f      	ldrb	r7, [r7, #1]
 801c4fa:	fb00 f602 	mul.w	r6, r0, r2
 801c4fe:	0100      	lsls	r0, r0, #4
 801c500:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801c504:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801c508:	1b80      	subs	r0, r0, r6
 801c50a:	fa1f fc82 	uxth.w	ip, r2
 801c50e:	b282      	uxth	r2, r0
 801c510:	78a0      	ldrb	r0, [r4, #2]
 801c512:	eba8 080c 	sub.w	r8, r8, ip
 801c516:	4350      	muls	r0, r2
 801c518:	fa1f f888 	uxth.w	r8, r8
 801c51c:	fb08 0e0e 	mla	lr, r8, lr, r0
 801c520:	78a8      	ldrb	r0, [r5, #2]
 801c522:	fb0c e000 	mla	r0, ip, r0, lr
 801c526:	f893 e002 	ldrb.w	lr, [r3, #2]
 801c52a:	fb06 0e0e 	mla	lr, r6, lr, r0
 801c52e:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801c532:	f894 e000 	ldrb.w	lr, [r4]
 801c536:	fb02 fe0e 	mul.w	lr, r2, lr
 801c53a:	fb08 e909 	mla	r9, r8, r9, lr
 801c53e:	f895 e000 	ldrb.w	lr, [r5]
 801c542:	fb0c 990e 	mla	r9, ip, lr, r9
 801c546:	f893 e000 	ldrb.w	lr, [r3]
 801c54a:	785b      	ldrb	r3, [r3, #1]
 801c54c:	fb06 9e0e 	mla	lr, r6, lr, r9
 801c550:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c554:	ea4e 0e00 	orr.w	lr, lr, r0
 801c558:	7860      	ldrb	r0, [r4, #1]
 801c55a:	4350      	muls	r0, r2
 801c55c:	786a      	ldrb	r2, [r5, #1]
 801c55e:	fb08 0007 	mla	r0, r8, r7, r0
 801c562:	fb0c 0202 	mla	r2, ip, r2, r0
 801c566:	fb06 2303 	mla	r3, r6, r3, r2
 801c56a:	095b      	lsrs	r3, r3, #5
 801c56c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c570:	ea4e 0303 	orr.w	r3, lr, r3
 801c574:	800b      	strh	r3, [r1, #0]
 801c576:	b003      	add	sp, #12
 801c578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c57c:	af01      	add	r7, sp, #4
 801c57e:	e78c      	b.n	801c49a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801c580:	ac01      	add	r4, sp, #4
 801c582:	4627      	mov	r7, r4
 801c584:	e795      	b.n	801c4b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801c586:	ac01      	add	r4, sp, #4
 801c588:	e793      	b.n	801c4b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801c58a:	ad01      	add	r5, sp, #4
 801c58c:	e7a1      	b.n	801c4d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801c58e:	ab01      	add	r3, sp, #4
 801c590:	461d      	mov	r5, r3
 801c592:	e7ab      	b.n	801c4ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801c594:	ab01      	add	r3, sp, #4
 801c596:	e7a9      	b.n	801c4ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801c598 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c59c:	b08f      	sub	sp, #60	; 0x3c
 801c59e:	920c      	str	r2, [sp, #48]	; 0x30
 801c5a0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801c5a2:	900d      	str	r0, [sp, #52]	; 0x34
 801c5a4:	910a      	str	r1, [sp, #40]	; 0x28
 801c5a6:	6850      	ldr	r0, [r2, #4]
 801c5a8:	9306      	str	r3, [sp, #24]
 801c5aa:	6812      	ldr	r2, [r2, #0]
 801c5ac:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801c5b0:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801c5b4:	fb00 1303 	mla	r3, r0, r3, r1
 801c5b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c5bc:	9307      	str	r3, [sp, #28]
 801c5be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c5c0:	681b      	ldr	r3, [r3, #0]
 801c5c2:	9308      	str	r3, [sp, #32]
 801c5c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c5c6:	685c      	ldr	r4, [r3, #4]
 801c5c8:	3404      	adds	r4, #4
 801c5ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c5cc:	2b00      	cmp	r3, #0
 801c5ce:	dc03      	bgt.n	801c5d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801c5d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c5d2:	2b00      	cmp	r3, #0
 801c5d4:	f340 81d5 	ble.w	801c982 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c5d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c5da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c5de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c5e2:	1e48      	subs	r0, r1, #1
 801c5e4:	1e56      	subs	r6, r2, #1
 801c5e6:	9b06      	ldr	r3, [sp, #24]
 801c5e8:	2b00      	cmp	r3, #0
 801c5ea:	f340 80b6 	ble.w	801c75a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801c5ee:	ea5f 472b 	movs.w	r7, fp, asr #16
 801c5f2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c5f6:	d406      	bmi.n	801c606 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c5f8:	4287      	cmp	r7, r0
 801c5fa:	da04      	bge.n	801c606 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c5fc:	2b00      	cmp	r3, #0
 801c5fe:	db02      	blt.n	801c606 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c600:	42b3      	cmp	r3, r6
 801c602:	f2c0 80ab 	blt.w	801c75c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801c606:	3701      	adds	r7, #1
 801c608:	f100 809c 	bmi.w	801c744 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801c60c:	42b9      	cmp	r1, r7
 801c60e:	f2c0 8099 	blt.w	801c744 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801c612:	3301      	adds	r3, #1
 801c614:	f100 8096 	bmi.w	801c744 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801c618:	429a      	cmp	r2, r3
 801c61a:	f2c0 8093 	blt.w	801c744 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801c61e:	9b06      	ldr	r3, [sp, #24]
 801c620:	930b      	str	r3, [sp, #44]	; 0x2c
 801c622:	9b07      	ldr	r3, [sp, #28]
 801c624:	9309      	str	r3, [sp, #36]	; 0x24
 801c626:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c628:	2b00      	cmp	r3, #0
 801c62a:	f340 80b4 	ble.w	801c796 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801c62e:	9820      	ldr	r0, [sp, #128]	; 0x80
 801c630:	142e      	asrs	r6, r5, #16
 801c632:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801c634:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801c638:	68c7      	ldr	r7, [r0, #12]
 801c63a:	ea5f 402b 	movs.w	r0, fp, asr #16
 801c63e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c642:	6892      	ldr	r2, [r2, #8]
 801c644:	f100 80fb 	bmi.w	801c83e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801c648:	f102 3cff 	add.w	ip, r2, #4294967295
 801c64c:	4560      	cmp	r0, ip
 801c64e:	f280 80f6 	bge.w	801c83e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801c652:	2e00      	cmp	r6, #0
 801c654:	f2c0 80f3 	blt.w	801c83e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801c658:	f107 3cff 	add.w	ip, r7, #4294967295
 801c65c:	4566      	cmp	r6, ip
 801c65e:	f280 80ee 	bge.w	801c83e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801c662:	b212      	sxth	r2, r2
 801c664:	fb06 0002 	mla	r0, r6, r2, r0
 801c668:	9e08      	ldr	r6, [sp, #32]
 801c66a:	1837      	adds	r7, r6, r0
 801c66c:	5c30      	ldrb	r0, [r6, r0]
 801c66e:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801c672:	eb04 0c08 	add.w	ip, r4, r8
 801c676:	2b00      	cmp	r3, #0
 801c678:	f000 80d3 	beq.w	801c822 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801c67c:	787e      	ldrb	r6, [r7, #1]
 801c67e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801c682:	4426      	add	r6, r4
 801c684:	2900      	cmp	r1, #0
 801c686:	f000 80d4 	beq.w	801c832 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c68a:	18b8      	adds	r0, r7, r2
 801c68c:	5cba      	ldrb	r2, [r7, r2]
 801c68e:	7840      	ldrb	r0, [r0, #1]
 801c690:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c694:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c698:	4422      	add	r2, r4
 801c69a:	4420      	add	r0, r4
 801c69c:	b29b      	uxth	r3, r3
 801c69e:	78b7      	ldrb	r7, [r6, #2]
 801c6a0:	b289      	uxth	r1, r1
 801c6a2:	f89c a002 	ldrb.w	sl, [ip, #2]
 801c6a6:	f89c c001 	ldrb.w	ip, [ip, #1]
 801c6aa:	fb03 f901 	mul.w	r9, r3, r1
 801c6ae:	011b      	lsls	r3, r3, #4
 801c6b0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c6b4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801c6b8:	eba3 0309 	sub.w	r3, r3, r9
 801c6bc:	b289      	uxth	r1, r1
 801c6be:	b29b      	uxth	r3, r3
 801c6c0:	ebae 0e01 	sub.w	lr, lr, r1
 801c6c4:	435f      	muls	r7, r3
 801c6c6:	fa1f fe8e 	uxth.w	lr, lr
 801c6ca:	fb0e 770a 	mla	r7, lr, sl, r7
 801c6ce:	f892 a002 	ldrb.w	sl, [r2, #2]
 801c6d2:	fb01 770a 	mla	r7, r1, sl, r7
 801c6d6:	f890 a002 	ldrb.w	sl, [r0, #2]
 801c6da:	fb09 7a0a 	mla	sl, r9, sl, r7
 801c6de:	f814 7008 	ldrb.w	r7, [r4, r8]
 801c6e2:	f896 8000 	ldrb.w	r8, [r6]
 801c6e6:	7876      	ldrb	r6, [r6, #1]
 801c6e8:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801c6ec:	fb03 f808 	mul.w	r8, r3, r8
 801c6f0:	4373      	muls	r3, r6
 801c6f2:	fb0e 8807 	mla	r8, lr, r7, r8
 801c6f6:	7817      	ldrb	r7, [r2, #0]
 801c6f8:	fb0e 330c 	mla	r3, lr, ip, r3
 801c6fc:	fb01 8807 	mla	r8, r1, r7, r8
 801c700:	7807      	ldrb	r7, [r0, #0]
 801c702:	fb09 8707 	mla	r7, r9, r7, r8
 801c706:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c70a:	ea47 070a 	orr.w	r7, r7, sl
 801c70e:	f892 a001 	ldrb.w	sl, [r2, #1]
 801c712:	fb01 310a 	mla	r1, r1, sl, r3
 801c716:	f890 a001 	ldrb.w	sl, [r0, #1]
 801c71a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c71c:	fb09 1a0a 	mla	sl, r9, sl, r1
 801c720:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c724:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c728:	ea47 070a 	orr.w	r7, r7, sl
 801c72c:	801f      	strh	r7, [r3, #0]
 801c72e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c730:	3302      	adds	r3, #2
 801c732:	9309      	str	r3, [sp, #36]	; 0x24
 801c734:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801c736:	449b      	add	fp, r3
 801c738:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c73a:	441d      	add	r5, r3
 801c73c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c73e:	3b01      	subs	r3, #1
 801c740:	930b      	str	r3, [sp, #44]	; 0x2c
 801c742:	e770      	b.n	801c626 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c744:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801c746:	449b      	add	fp, r3
 801c748:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c74a:	441d      	add	r5, r3
 801c74c:	9b06      	ldr	r3, [sp, #24]
 801c74e:	3b01      	subs	r3, #1
 801c750:	9306      	str	r3, [sp, #24]
 801c752:	9b07      	ldr	r3, [sp, #28]
 801c754:	3302      	adds	r3, #2
 801c756:	9307      	str	r3, [sp, #28]
 801c758:	e745      	b.n	801c5e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801c75a:	d023      	beq.n	801c7a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801c75c:	9b06      	ldr	r3, [sp, #24]
 801c75e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801c760:	3b01      	subs	r3, #1
 801c762:	fb00 b003 	mla	r0, r0, r3, fp
 801c766:	1400      	asrs	r0, r0, #16
 801c768:	f53f af59 	bmi.w	801c61e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c76c:	3901      	subs	r1, #1
 801c76e:	4288      	cmp	r0, r1
 801c770:	f6bf af55 	bge.w	801c61e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c774:	991c      	ldr	r1, [sp, #112]	; 0x70
 801c776:	fb01 5303 	mla	r3, r1, r3, r5
 801c77a:	141b      	asrs	r3, r3, #16
 801c77c:	f53f af4f 	bmi.w	801c61e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c780:	3a01      	subs	r2, #1
 801c782:	4293      	cmp	r3, r2
 801c784:	f6bf af4b 	bge.w	801c61e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c788:	9b06      	ldr	r3, [sp, #24]
 801c78a:	9309      	str	r3, [sp, #36]	; 0x24
 801c78c:	9b07      	ldr	r3, [sp, #28]
 801c78e:	930b      	str	r3, [sp, #44]	; 0x2c
 801c790:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c792:	2b00      	cmp	r3, #0
 801c794:	dc70      	bgt.n	801c878 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c796:	9b06      	ldr	r3, [sp, #24]
 801c798:	9a07      	ldr	r2, [sp, #28]
 801c79a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c79e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c7a2:	9307      	str	r3, [sp, #28]
 801c7a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c7a6:	2b00      	cmp	r3, #0
 801c7a8:	f340 80eb 	ble.w	801c982 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c7ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c7b0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c7b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c7b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c7ba:	eef0 6a62 	vmov.f32	s13, s5
 801c7be:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c7c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c7c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c7ca:	ee16 ba90 	vmov	fp, s13
 801c7ce:	eef0 6a43 	vmov.f32	s13, s6
 801c7d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c7d6:	ee16 5a90 	vmov	r5, s13
 801c7da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c7de:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c7e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c7e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c7ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c7ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c7f2:	ee12 2a90 	vmov	r2, s5
 801c7f6:	eef0 2a47 	vmov.f32	s5, s14
 801c7fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801c7fe:	ee13 2a10 	vmov	r2, s6
 801c802:	931b      	str	r3, [sp, #108]	; 0x6c
 801c804:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c806:	eeb0 3a67 	vmov.f32	s6, s15
 801c80a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c80e:	931c      	str	r3, [sp, #112]	; 0x70
 801c810:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c812:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c814:	3b01      	subs	r3, #1
 801c816:	930a      	str	r3, [sp, #40]	; 0x28
 801c818:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c81a:	bf08      	it	eq
 801c81c:	4613      	moveq	r3, r2
 801c81e:	9306      	str	r3, [sp, #24]
 801c820:	e6d3      	b.n	801c5ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801c822:	b149      	cbz	r1, 801c838 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801c824:	5cba      	ldrb	r2, [r7, r2]
 801c826:	4660      	mov	r0, ip
 801c828:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c82c:	4422      	add	r2, r4
 801c82e:	4666      	mov	r6, ip
 801c830:	e734      	b.n	801c69c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801c832:	4660      	mov	r0, ip
 801c834:	4662      	mov	r2, ip
 801c836:	e731      	b.n	801c69c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801c838:	4660      	mov	r0, ip
 801c83a:	4662      	mov	r2, ip
 801c83c:	e7f7      	b.n	801c82e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801c83e:	f110 0c01 	adds.w	ip, r0, #1
 801c842:	f53f af74 	bmi.w	801c72e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c846:	4562      	cmp	r2, ip
 801c848:	f6ff af71 	blt.w	801c72e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c84c:	f116 0c01 	adds.w	ip, r6, #1
 801c850:	f53f af6d 	bmi.w	801c72e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c854:	4567      	cmp	r7, ip
 801c856:	f6ff af6a 	blt.w	801c72e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c85a:	b23f      	sxth	r7, r7
 801c85c:	b212      	sxth	r2, r2
 801c85e:	9701      	str	r7, [sp, #4]
 801c860:	9200      	str	r2, [sp, #0]
 801c862:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801c866:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801c86a:	4623      	mov	r3, r4
 801c86c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801c86e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c872:	f7ff fde7 	bl	801c444 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801c876:	e75a      	b.n	801c72e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c878:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801c87a:	ea4f 462b 	mov.w	r6, fp, asr #16
 801c87e:	1428      	asrs	r0, r5, #16
 801c880:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801c884:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801c888:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c88c:	fb02 6000 	mla	r0, r2, r0, r6
 801c890:	9e08      	ldr	r6, [sp, #32]
 801c892:	f816 8000 	ldrb.w	r8, [r6, r0]
 801c896:	1837      	adds	r7, r6, r0
 801c898:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801c89c:	eb04 0c08 	add.w	ip, r4, r8
 801c8a0:	2b00      	cmp	r3, #0
 801c8a2:	d060      	beq.n	801c966 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801c8a4:	787e      	ldrb	r6, [r7, #1]
 801c8a6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801c8aa:	4426      	add	r6, r4
 801c8ac:	2900      	cmp	r1, #0
 801c8ae:	d062      	beq.n	801c976 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801c8b0:	18b8      	adds	r0, r7, r2
 801c8b2:	5cba      	ldrb	r2, [r7, r2]
 801c8b4:	7840      	ldrb	r0, [r0, #1]
 801c8b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c8ba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c8be:	4422      	add	r2, r4
 801c8c0:	4420      	add	r0, r4
 801c8c2:	b29b      	uxth	r3, r3
 801c8c4:	78b7      	ldrb	r7, [r6, #2]
 801c8c6:	b289      	uxth	r1, r1
 801c8c8:	f89c a002 	ldrb.w	sl, [ip, #2]
 801c8cc:	f89c c001 	ldrb.w	ip, [ip, #1]
 801c8d0:	fb03 f901 	mul.w	r9, r3, r1
 801c8d4:	011b      	lsls	r3, r3, #4
 801c8d6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c8da:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801c8de:	eba3 0309 	sub.w	r3, r3, r9
 801c8e2:	b289      	uxth	r1, r1
 801c8e4:	b29b      	uxth	r3, r3
 801c8e6:	ebae 0e01 	sub.w	lr, lr, r1
 801c8ea:	435f      	muls	r7, r3
 801c8ec:	fa1f fe8e 	uxth.w	lr, lr
 801c8f0:	fb0e 770a 	mla	r7, lr, sl, r7
 801c8f4:	f892 a002 	ldrb.w	sl, [r2, #2]
 801c8f8:	fb01 770a 	mla	r7, r1, sl, r7
 801c8fc:	f890 a002 	ldrb.w	sl, [r0, #2]
 801c900:	fb09 7a0a 	mla	sl, r9, sl, r7
 801c904:	f814 7008 	ldrb.w	r7, [r4, r8]
 801c908:	f896 8000 	ldrb.w	r8, [r6]
 801c90c:	7876      	ldrb	r6, [r6, #1]
 801c90e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801c912:	fb03 f808 	mul.w	r8, r3, r8
 801c916:	4373      	muls	r3, r6
 801c918:	7856      	ldrb	r6, [r2, #1]
 801c91a:	fb0e 8807 	mla	r8, lr, r7, r8
 801c91e:	7817      	ldrb	r7, [r2, #0]
 801c920:	fb0e 330c 	mla	r3, lr, ip, r3
 801c924:	fb01 8807 	mla	r8, r1, r7, r8
 801c928:	7807      	ldrb	r7, [r0, #0]
 801c92a:	fb01 3306 	mla	r3, r1, r6, r3
 801c92e:	fb09 8707 	mla	r7, r9, r7, r8
 801c932:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c936:	ea47 070a 	orr.w	r7, r7, sl
 801c93a:	f890 a001 	ldrb.w	sl, [r0, #1]
 801c93e:	fb09 3a0a 	mla	sl, r9, sl, r3
 801c942:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c944:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c948:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c94c:	ea47 070a 	orr.w	r7, r7, sl
 801c950:	f823 7b02 	strh.w	r7, [r3], #2
 801c954:	930b      	str	r3, [sp, #44]	; 0x2c
 801c956:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801c958:	449b      	add	fp, r3
 801c95a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c95c:	441d      	add	r5, r3
 801c95e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c960:	3b01      	subs	r3, #1
 801c962:	9309      	str	r3, [sp, #36]	; 0x24
 801c964:	e714      	b.n	801c790 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801c966:	b149      	cbz	r1, 801c97c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801c968:	5cba      	ldrb	r2, [r7, r2]
 801c96a:	4660      	mov	r0, ip
 801c96c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c970:	4422      	add	r2, r4
 801c972:	4666      	mov	r6, ip
 801c974:	e7a5      	b.n	801c8c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801c976:	4660      	mov	r0, ip
 801c978:	4662      	mov	r2, ip
 801c97a:	e7a2      	b.n	801c8c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801c97c:	4660      	mov	r0, ip
 801c97e:	4662      	mov	r2, ip
 801c980:	e7f7      	b.n	801c972 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 801c982:	b00f      	add	sp, #60	; 0x3c
 801c984:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c988 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801c988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c98c:	b085      	sub	sp, #20
 801c98e:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801c992:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801c996:	9102      	str	r1, [sp, #8]
 801c998:	2c00      	cmp	r4, #0
 801c99a:	fb04 710c 	mla	r1, r4, ip, r7
 801c99e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801c9a2:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801c9a6:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801c9aa:	eb02 0e01 	add.w	lr, r2, r1
 801c9ae:	f2c0 8122 	blt.w	801cbf6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801c9b2:	45a0      	cmp	r8, r4
 801c9b4:	f340 811f 	ble.w	801cbf6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801c9b8:	2f00      	cmp	r7, #0
 801c9ba:	f2c0 811a 	blt.w	801cbf2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801c9be:	45bc      	cmp	ip, r7
 801c9c0:	f340 8117 	ble.w	801cbf2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801c9c4:	5c52      	ldrb	r2, [r2, r1]
 801c9c6:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801c9ca:	1c7a      	adds	r2, r7, #1
 801c9cc:	f100 8116 	bmi.w	801cbfc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801c9d0:	4594      	cmp	ip, r2
 801c9d2:	f340 8113 	ble.w	801cbfc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801c9d6:	2e00      	cmp	r6, #0
 801c9d8:	f000 8112 	beq.w	801cc00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801c9dc:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c9e0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801c9e4:	3401      	adds	r4, #1
 801c9e6:	f100 810f 	bmi.w	801cc08 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801c9ea:	45a0      	cmp	r8, r4
 801c9ec:	f340 810c 	ble.w	801cc08 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801c9f0:	2800      	cmp	r0, #0
 801c9f2:	f000 810c 	beq.w	801cc0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801c9f6:	2f00      	cmp	r7, #0
 801c9f8:	f2c0 8104 	blt.w	801cc04 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801c9fc:	45bc      	cmp	ip, r7
 801c9fe:	f340 8101 	ble.w	801cc04 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ca02:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801ca06:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801ca0a:	3701      	adds	r7, #1
 801ca0c:	f100 8102 	bmi.w	801cc14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ca10:	45bc      	cmp	ip, r7
 801ca12:	f340 80ff 	ble.w	801cc14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ca16:	2e00      	cmp	r6, #0
 801ca18:	f000 80fe 	beq.w	801cc18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801ca1c:	44f4      	add	ip, lr
 801ca1e:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801ca22:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801ca26:	b2b6      	uxth	r6, r6
 801ca28:	b280      	uxth	r0, r0
 801ca2a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ca2e:	fb00 fe06 	mul.w	lr, r0, r6
 801ca32:	0136      	lsls	r6, r6, #4
 801ca34:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ca38:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ca3c:	eba6 070e 	sub.w	r7, r6, lr
 801ca40:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ca44:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ca48:	b280      	uxth	r0, r0
 801ca4a:	b2bf      	uxth	r7, r7
 801ca4c:	1a1b      	subs	r3, r3, r0
 801ca4e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ca52:	fb0a f607 	mul.w	r6, sl, r7
 801ca56:	b29b      	uxth	r3, r3
 801ca58:	fb0b 6603 	mla	r6, fp, r3, r6
 801ca5c:	fb00 6609 	mla	r6, r0, r9, r6
 801ca60:	fb0e 6608 	mla	r6, lr, r8, r6
 801ca64:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ca68:	9600      	str	r6, [sp, #0]
 801ca6a:	2e00      	cmp	r6, #0
 801ca6c:	f000 80be 	beq.w	801cbec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801ca70:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ca74:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801ca78:	9e02      	ldr	r6, [sp, #8]
 801ca7a:	fb0b fc0c 	mul.w	ip, fp, ip
 801ca7e:	fb0b f505 	mul.w	r5, fp, r5
 801ca82:	8836      	ldrh	r6, [r6, #0]
 801ca84:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ca88:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ca8c:	9501      	str	r5, [sp, #4]
 801ca8e:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801ca92:	44dc      	add	ip, fp
 801ca94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ca98:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ca9c:	9503      	str	r5, [sp, #12]
 801ca9e:	9d01      	ldr	r5, [sp, #4]
 801caa0:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801caa4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801caa8:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801caac:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801cab0:	fb0a fc0c 	mul.w	ip, sl, ip
 801cab4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801cab8:	fb0a fa01 	mul.w	sl, sl, r1
 801cabc:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801cac0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801cac4:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801cac8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801cacc:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801cad0:	4465      	add	r5, ip
 801cad2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801cad6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801cada:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cade:	fb09 fc0c 	mul.w	ip, r9, ip
 801cae2:	0a2d      	lsrs	r5, r5, #8
 801cae4:	fb09 f904 	mul.w	r9, r9, r4
 801cae8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801caec:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801caf0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801caf4:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801caf8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801cafc:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801cb00:	437d      	muls	r5, r7
 801cb02:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801cb06:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801cb0a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801cb0e:	4461      	add	r1, ip
 801cb10:	fb08 f404 	mul.w	r4, r8, r4
 801cb14:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cb18:	fb08 f802 	mul.w	r8, r8, r2
 801cb1c:	0a09      	lsrs	r1, r1, #8
 801cb1e:	0a22      	lsrs	r2, r4, #8
 801cb20:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801cb24:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801cb28:	fb07 f70a 	mul.w	r7, r7, sl
 801cb2c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801cb30:	4414      	add	r4, r2
 801cb32:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801cb36:	0a24      	lsrs	r4, r4, #8
 801cb38:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801cb3c:	9a03      	ldr	r2, [sp, #12]
 801cb3e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801cb42:	fb02 5503 	mla	r5, r2, r3, r5
 801cb46:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801cb4a:	9a00      	ldr	r2, [sp, #0]
 801cb4c:	fb04 540e 	mla	r4, r4, lr, r5
 801cb50:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801cb54:	1235      	asrs	r5, r6, #8
 801cb56:	fb01 4100 	mla	r1, r1, r0, r4
 801cb5a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cb5e:	0a09      	lsrs	r1, r1, #8
 801cb60:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801cb64:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801cb68:	fb03 7101 	mla	r1, r3, r1, r7
 801cb6c:	fb0e 1e08 	mla	lr, lr, r8, r1
 801cb70:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801cb74:	fb00 e101 	mla	r1, r0, r1, lr
 801cb78:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801cb7c:	b287      	uxth	r7, r0
 801cb7e:	0a09      	lsrs	r1, r1, #8
 801cb80:	437a      	muls	r2, r7
 801cb82:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801cb86:	1c53      	adds	r3, r2, #1
 801cb88:	4321      	orrs	r1, r4
 801cb8a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cb8e:	0c0a      	lsrs	r2, r1, #16
 801cb90:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801cb94:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801cb98:	b2c8      	uxtb	r0, r1
 801cb9a:	fb12 f207 	smulbb	r2, r2, r7
 801cb9e:	fb14 f407 	smulbb	r4, r4, r7
 801cba2:	b2db      	uxtb	r3, r3
 801cba4:	fb10 f007 	smulbb	r0, r0, r7
 801cba8:	fb05 2503 	mla	r5, r5, r3, r2
 801cbac:	10f2      	asrs	r2, r6, #3
 801cbae:	00f6      	lsls	r6, r6, #3
 801cbb0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801cbb4:	b2ad      	uxth	r5, r5
 801cbb6:	b2f6      	uxtb	r6, r6
 801cbb8:	fb02 4203 	mla	r2, r2, r3, r4
 801cbbc:	fb06 0303 	mla	r3, r6, r3, r0
 801cbc0:	b294      	uxth	r4, r2
 801cbc2:	b299      	uxth	r1, r3
 801cbc4:	1c6b      	adds	r3, r5, #1
 801cbc6:	1c62      	adds	r2, r4, #1
 801cbc8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cbcc:	1c4b      	adds	r3, r1, #1
 801cbce:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801cbd2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801cbd6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cbda:	0952      	lsrs	r2, r2, #5
 801cbdc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cbe0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cbe4:	432b      	orrs	r3, r5
 801cbe6:	4313      	orrs	r3, r2
 801cbe8:	9a02      	ldr	r2, [sp, #8]
 801cbea:	8013      	strh	r3, [r2, #0]
 801cbec:	b005      	add	sp, #20
 801cbee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cbf2:	2500      	movs	r5, #0
 801cbf4:	e6e9      	b.n	801c9ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801cbf6:	2100      	movs	r1, #0
 801cbf8:	460d      	mov	r5, r1
 801cbfa:	e6f3      	b.n	801c9e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801cbfc:	2100      	movs	r1, #0
 801cbfe:	e6f1      	b.n	801c9e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801cc00:	4631      	mov	r1, r6
 801cc02:	e6ef      	b.n	801c9e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801cc04:	2400      	movs	r4, #0
 801cc06:	e700      	b.n	801ca0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801cc08:	2200      	movs	r2, #0
 801cc0a:	4614      	mov	r4, r2
 801cc0c:	e70b      	b.n	801ca26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801cc0e:	4602      	mov	r2, r0
 801cc10:	4604      	mov	r4, r0
 801cc12:	e708      	b.n	801ca26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801cc14:	2200      	movs	r2, #0
 801cc16:	e706      	b.n	801ca26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801cc18:	4632      	mov	r2, r6
 801cc1a:	e704      	b.n	801ca26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801cc1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cc1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc20:	b09f      	sub	sp, #124	; 0x7c
 801cc22:	921b      	str	r2, [sp, #108]	; 0x6c
 801cc24:	9309      	str	r3, [sp, #36]	; 0x24
 801cc26:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801cc28:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801cc2c:	901d      	str	r0, [sp, #116]	; 0x74
 801cc2e:	931c      	str	r3, [sp, #112]	; 0x70
 801cc30:	6850      	ldr	r0, [r2, #4]
 801cc32:	9119      	str	r1, [sp, #100]	; 0x64
 801cc34:	6812      	ldr	r2, [r2, #0]
 801cc36:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801cc38:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801cc3c:	fb00 1303 	mla	r3, r0, r3, r1
 801cc40:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cc44:	930c      	str	r3, [sp, #48]	; 0x30
 801cc46:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801cc48:	681b      	ldr	r3, [r3, #0]
 801cc4a:	9312      	str	r3, [sp, #72]	; 0x48
 801cc4c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801cc4e:	685e      	ldr	r6, [r3, #4]
 801cc50:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801cc54:	3604      	adds	r6, #4
 801cc56:	930d      	str	r3, [sp, #52]	; 0x34
 801cc58:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801cc5a:	2b00      	cmp	r3, #0
 801cc5c:	dc03      	bgt.n	801cc66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cc5e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801cc60:	2b00      	cmp	r3, #0
 801cc62:	f340 8387 	ble.w	801d374 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801cc66:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801cc68:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cc6c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cc70:	1e48      	subs	r0, r1, #1
 801cc72:	1e57      	subs	r7, r2, #1
 801cc74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cc76:	2b00      	cmp	r3, #0
 801cc78:	f340 8194 	ble.w	801cfa4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801cc7c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801cc7e:	142b      	asrs	r3, r5, #16
 801cc80:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801cc84:	d406      	bmi.n	801cc94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cc86:	4584      	cmp	ip, r0
 801cc88:	da04      	bge.n	801cc94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cc8a:	2b00      	cmp	r3, #0
 801cc8c:	db02      	blt.n	801cc94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cc8e:	42bb      	cmp	r3, r7
 801cc90:	f2c0 8189 	blt.w	801cfa6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801cc94:	f11c 0c01 	adds.w	ip, ip, #1
 801cc98:	f100 8177 	bmi.w	801cf8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801cc9c:	4561      	cmp	r1, ip
 801cc9e:	f2c0 8174 	blt.w	801cf8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801cca2:	3301      	adds	r3, #1
 801cca4:	f100 8171 	bmi.w	801cf8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801cca8:	429a      	cmp	r2, r3
 801ccaa:	f2c0 816e 	blt.w	801cf8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801ccae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ccb0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ccb2:	931a      	str	r3, [sp, #104]	; 0x68
 801ccb4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801ccb6:	2b00      	cmp	r3, #0
 801ccb8:	f340 8193 	ble.w	801cfe2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801ccbc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ccbe:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ccc2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ccc6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ccca:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801cccc:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ccd0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ccd2:	141b      	asrs	r3, r3, #16
 801ccd4:	f100 81d6 	bmi.w	801d084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801ccd8:	f100 38ff 	add.w	r8, r0, #4294967295
 801ccdc:	4543      	cmp	r3, r8
 801ccde:	f280 81d1 	bge.w	801d084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801cce2:	f1bc 0f00 	cmp.w	ip, #0
 801cce6:	f2c0 81cd 	blt.w	801d084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801ccea:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ccee:	45c4      	cmp	ip, r8
 801ccf0:	f280 81c8 	bge.w	801d084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801ccf4:	b200      	sxth	r0, r0
 801ccf6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ccf8:	fb0c 3300 	mla	r3, ip, r0, r3
 801ccfc:	eb04 0803 	add.w	r8, r4, r3
 801cd00:	5ce3      	ldrb	r3, [r4, r3]
 801cd02:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801cd06:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801cd0a:	2a00      	cmp	r2, #0
 801cd0c:	f000 81af 	beq.w	801d06e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801cd10:	f898 c001 	ldrb.w	ip, [r8, #1]
 801cd14:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801cd18:	940e      	str	r4, [sp, #56]	; 0x38
 801cd1a:	0e24      	lsrs	r4, r4, #24
 801cd1c:	9415      	str	r4, [sp, #84]	; 0x54
 801cd1e:	b179      	cbz	r1, 801cd40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801cd20:	eb08 0c00 	add.w	ip, r8, r0
 801cd24:	f818 0000 	ldrb.w	r0, [r8, r0]
 801cd28:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801cd2c:	900a      	str	r0, [sp, #40]	; 0x28
 801cd2e:	0e00      	lsrs	r0, r0, #24
 801cd30:	9013      	str	r0, [sp, #76]	; 0x4c
 801cd32:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801cd36:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801cd3a:	900f      	str	r0, [sp, #60]	; 0x3c
 801cd3c:	0e00      	lsrs	r0, r0, #24
 801cd3e:	9016      	str	r0, [sp, #88]	; 0x58
 801cd40:	b292      	uxth	r2, r2
 801cd42:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cd44:	b289      	uxth	r1, r1
 801cd46:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801cd48:	fb02 f901 	mul.w	r9, r2, r1
 801cd4c:	0112      	lsls	r2, r2, #4
 801cd4e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801cd52:	eba2 0809 	sub.w	r8, r2, r9
 801cd56:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801cd5a:	b289      	uxth	r1, r1
 801cd5c:	fa1f f888 	uxth.w	r8, r8
 801cd60:	1a52      	subs	r2, r2, r1
 801cd62:	fb08 f000 	mul.w	r0, r8, r0
 801cd66:	b292      	uxth	r2, r2
 801cd68:	fb02 000e 	mla	r0, r2, lr, r0
 801cd6c:	fb01 0004 	mla	r0, r1, r4, r0
 801cd70:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801cd72:	fb09 0004 	mla	r0, r9, r4, r0
 801cd76:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801cd7a:	2800      	cmp	r0, #0
 801cd7c:	f000 80fa 	beq.w	801cf74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801cd80:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801cd84:	d01b      	beq.n	801cdbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801cd86:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801cd8a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801cd8e:	fb0e fa0a 	mul.w	sl, lr, sl
 801cd92:	fb0e fe03 	mul.w	lr, lr, r3
 801cd96:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801cd9a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801cd9e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801cda2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801cda6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801cdaa:	4453      	add	r3, sl
 801cdac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cdb0:	0a1b      	lsrs	r3, r3, #8
 801cdb2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801cdb6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801cdba:	ea43 030c 	orr.w	r3, r3, ip
 801cdbe:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cdc0:	2cff      	cmp	r4, #255	; 0xff
 801cdc2:	d021      	beq.n	801ce08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801cdc4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801cdc6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801cdca:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cdcc:	fb04 fb0b 	mul.w	fp, r4, fp
 801cdd0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801cdd2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801cdd6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cdd8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cddc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801cde0:	fb04 fa0a 	mul.w	sl, r4, sl
 801cde4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cde8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801cdec:	44de      	add	lr, fp
 801cdee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cdf2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cdf6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cdfa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cdfe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ce02:	ea4e 040a 	orr.w	r4, lr, sl
 801ce06:	940e      	str	r4, [sp, #56]	; 0x38
 801ce08:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ce0a:	2cff      	cmp	r4, #255	; 0xff
 801ce0c:	d021      	beq.n	801ce52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801ce0e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ce10:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ce14:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ce16:	fb04 fb0b 	mul.w	fp, r4, fp
 801ce1a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ce1c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ce20:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ce22:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ce26:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ce2a:	fb04 fa0a 	mul.w	sl, r4, sl
 801ce2e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ce32:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ce36:	44de      	add	lr, fp
 801ce38:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ce3c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ce40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ce44:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ce48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ce4c:	ea4e 040a 	orr.w	r4, lr, sl
 801ce50:	940a      	str	r4, [sp, #40]	; 0x28
 801ce52:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ce54:	2cff      	cmp	r4, #255	; 0xff
 801ce56:	d021      	beq.n	801ce9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801ce58:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ce5a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ce5e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ce60:	fb04 fb0b 	mul.w	fp, r4, fp
 801ce64:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ce66:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ce6a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ce6c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ce70:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ce74:	fb04 fa0a 	mul.w	sl, r4, sl
 801ce78:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ce7c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ce80:	44de      	add	lr, fp
 801ce82:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ce86:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ce8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ce8e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ce92:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ce96:	ea4e 040a 	orr.w	r4, lr, sl
 801ce9a:	940f      	str	r4, [sp, #60]	; 0x3c
 801ce9c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ce9e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801cea2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801cea6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ceaa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ceac:	fb08 fc0c 	mul.w	ip, r8, ip
 801ceb0:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ceb4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801ceb8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ceba:	fb01 cc0e 	mla	ip, r1, lr, ip
 801cebe:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801cec2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801cec4:	fb09 cc0e 	mla	ip, r9, lr, ip
 801cec8:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801cecc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801cece:	fb08 f80e 	mul.w	r8, r8, lr
 801ced2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ced6:	fb02 8303 	mla	r3, r2, r3, r8
 801ceda:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801cedc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801cee0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801cee4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cee6:	fb01 330a 	mla	r3, r1, sl, r3
 801ceea:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801ceee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801cef0:	fb09 3901 	mla	r9, r9, r1, r3
 801cef4:	883b      	ldrh	r3, [r7, #0]
 801cef6:	4342      	muls	r2, r0
 801cef8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cefc:	1c50      	adds	r0, r2, #1
 801cefe:	1219      	asrs	r1, r3, #8
 801cf00:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801cf04:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801cf08:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801cf0c:	ea4c 0c09 	orr.w	ip, ip, r9
 801cf10:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801cf14:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801cf18:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801cf1c:	b2c0      	uxtb	r0, r0
 801cf1e:	fb12 f204 	smulbb	r2, r2, r4
 801cf22:	fa5f fc8c 	uxtb.w	ip, ip
 801cf26:	fb1e fe04 	smulbb	lr, lr, r4
 801cf2a:	fb01 2100 	mla	r1, r1, r0, r2
 801cf2e:	10da      	asrs	r2, r3, #3
 801cf30:	fb1c fc04 	smulbb	ip, ip, r4
 801cf34:	00db      	lsls	r3, r3, #3
 801cf36:	b289      	uxth	r1, r1
 801cf38:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801cf3c:	b2db      	uxtb	r3, r3
 801cf3e:	fb02 e200 	mla	r2, r2, r0, lr
 801cf42:	fb03 c300 	mla	r3, r3, r0, ip
 801cf46:	b292      	uxth	r2, r2
 801cf48:	fa1f fc83 	uxth.w	ip, r3
 801cf4c:	1c4b      	adds	r3, r1, #1
 801cf4e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801cf52:	f10c 0301 	add.w	r3, ip, #1
 801cf56:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801cf5a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801cf5e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cf62:	430b      	orrs	r3, r1
 801cf64:	1c51      	adds	r1, r2, #1
 801cf66:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cf6a:	0952      	lsrs	r2, r2, #5
 801cf6c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cf70:	4313      	orrs	r3, r2
 801cf72:	803b      	strh	r3, [r7, #0]
 801cf74:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801cf76:	3702      	adds	r7, #2
 801cf78:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801cf7a:	441a      	add	r2, r3
 801cf7c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cf7e:	441d      	add	r5, r3
 801cf80:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801cf82:	9229      	str	r2, [sp, #164]	; 0xa4
 801cf84:	3b01      	subs	r3, #1
 801cf86:	931a      	str	r3, [sp, #104]	; 0x68
 801cf88:	e694      	b.n	801ccb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801cf8a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801cf8c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801cf8e:	441c      	add	r4, r3
 801cf90:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cf92:	441d      	add	r5, r3
 801cf94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cf96:	9429      	str	r4, [sp, #164]	; 0xa4
 801cf98:	3b01      	subs	r3, #1
 801cf9a:	9309      	str	r3, [sp, #36]	; 0x24
 801cf9c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cf9e:	3302      	adds	r3, #2
 801cfa0:	930c      	str	r3, [sp, #48]	; 0x30
 801cfa2:	e667      	b.n	801cc74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801cfa4:	d024      	beq.n	801cff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801cfa6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cfa8:	982b      	ldr	r0, [sp, #172]	; 0xac
 801cfaa:	3b01      	subs	r3, #1
 801cfac:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801cfae:	fb00 4003 	mla	r0, r0, r3, r4
 801cfb2:	1400      	asrs	r0, r0, #16
 801cfb4:	f53f ae7b 	bmi.w	801ccae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cfb8:	3901      	subs	r1, #1
 801cfba:	4288      	cmp	r0, r1
 801cfbc:	f6bf ae77 	bge.w	801ccae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cfc0:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801cfc2:	fb01 5303 	mla	r3, r1, r3, r5
 801cfc6:	141b      	asrs	r3, r3, #16
 801cfc8:	f53f ae71 	bmi.w	801ccae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cfcc:	3a01      	subs	r2, #1
 801cfce:	4293      	cmp	r3, r2
 801cfd0:	f6bf ae6d 	bge.w	801ccae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cfd4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801cfd8:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801cfdc:	f1bb 0f00 	cmp.w	fp, #0
 801cfe0:	dc70      	bgt.n	801d0c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801cfe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cfe4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cfe8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cfea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cfee:	930c      	str	r3, [sp, #48]	; 0x30
 801cff0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801cff2:	2b00      	cmp	r3, #0
 801cff4:	f340 81be 	ble.w	801d374 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801cff8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cffc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cffe:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d002:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d006:	eef0 6a62 	vmov.f32	s13, s5
 801d00a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d00e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d012:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d016:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801d01a:	eef0 6a43 	vmov.f32	s13, s6
 801d01e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d022:	ee16 5a90 	vmov	r5, s13
 801d026:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d02a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d02e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d032:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d036:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d03a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d03e:	ee12 2a90 	vmov	r2, s5
 801d042:	eef0 2a47 	vmov.f32	s5, s14
 801d046:	fb92 f3f3 	sdiv	r3, r2, r3
 801d04a:	ee13 2a10 	vmov	r2, s6
 801d04e:	932b      	str	r3, [sp, #172]	; 0xac
 801d050:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d052:	eeb0 3a67 	vmov.f32	s6, s15
 801d056:	fb92 f3f3 	sdiv	r3, r2, r3
 801d05a:	932c      	str	r3, [sp, #176]	; 0xb0
 801d05c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801d05e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801d060:	3b01      	subs	r3, #1
 801d062:	9319      	str	r3, [sp, #100]	; 0x64
 801d064:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d066:	bf08      	it	eq
 801d068:	4613      	moveq	r3, r2
 801d06a:	9309      	str	r3, [sp, #36]	; 0x24
 801d06c:	e5f4      	b.n	801cc58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d06e:	2900      	cmp	r1, #0
 801d070:	f43f ae66 	beq.w	801cd40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801d074:	f818 0000 	ldrb.w	r0, [r8, r0]
 801d078:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801d07c:	900a      	str	r0, [sp, #40]	; 0x28
 801d07e:	0e00      	lsrs	r0, r0, #24
 801d080:	9013      	str	r0, [sp, #76]	; 0x4c
 801d082:	e65d      	b.n	801cd40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801d084:	f113 0801 	adds.w	r8, r3, #1
 801d088:	f53f af74 	bmi.w	801cf74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d08c:	4540      	cmp	r0, r8
 801d08e:	f6ff af71 	blt.w	801cf74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d092:	f11c 0801 	adds.w	r8, ip, #1
 801d096:	f53f af6d 	bmi.w	801cf74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d09a:	45c6      	cmp	lr, r8
 801d09c:	f6ff af6a 	blt.w	801cf74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d0a0:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801d0a2:	b200      	sxth	r0, r0
 801d0a4:	9302      	str	r3, [sp, #8]
 801d0a6:	fa0f f38e 	sxth.w	r3, lr
 801d0aa:	9000      	str	r0, [sp, #0]
 801d0ac:	9301      	str	r3, [sp, #4]
 801d0ae:	4633      	mov	r3, r6
 801d0b0:	981d      	ldr	r0, [sp, #116]	; 0x74
 801d0b2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801d0b6:	e9cd c203 	strd	ip, r2, [sp, #12]
 801d0ba:	4639      	mov	r1, r7
 801d0bc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d0be:	f7ff fc63 	bl	801c988 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801d0c2:	e757      	b.n	801cf74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d0c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801d0c6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d0ca:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801d0cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d0d0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801d0d2:	1427      	asrs	r7, r4, #16
 801d0d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d0d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d0da:	142b      	asrs	r3, r5, #16
 801d0dc:	fb01 7303 	mla	r3, r1, r3, r7
 801d0e0:	18e7      	adds	r7, r4, r3
 801d0e2:	5ce3      	ldrb	r3, [r4, r3]
 801d0e4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d0e8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801d0ec:	2a00      	cmp	r2, #0
 801d0ee:	f000 8137 	beq.w	801d360 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801d0f2:	f897 e001 	ldrb.w	lr, [r7, #1]
 801d0f6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801d0fa:	9410      	str	r4, [sp, #64]	; 0x40
 801d0fc:	0e24      	lsrs	r4, r4, #24
 801d0fe:	9417      	str	r4, [sp, #92]	; 0x5c
 801d100:	b170      	cbz	r0, 801d120 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801d102:	eb07 0e01 	add.w	lr, r7, r1
 801d106:	5c79      	ldrb	r1, [r7, r1]
 801d108:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d10c:	910b      	str	r1, [sp, #44]	; 0x2c
 801d10e:	0e09      	lsrs	r1, r1, #24
 801d110:	9114      	str	r1, [sp, #80]	; 0x50
 801d112:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801d116:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d11a:	9111      	str	r1, [sp, #68]	; 0x44
 801d11c:	0e09      	lsrs	r1, r1, #24
 801d11e:	9118      	str	r1, [sp, #96]	; 0x60
 801d120:	b292      	uxth	r2, r2
 801d122:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801d124:	b280      	uxth	r0, r0
 801d126:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d128:	fb02 f800 	mul.w	r8, r2, r0
 801d12c:	0112      	lsls	r2, r2, #4
 801d12e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801d132:	eba2 0e08 	sub.w	lr, r2, r8
 801d136:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801d13a:	b280      	uxth	r0, r0
 801d13c:	fa1f fe8e 	uxth.w	lr, lr
 801d140:	1a12      	subs	r2, r2, r0
 801d142:	fb0e f101 	mul.w	r1, lr, r1
 801d146:	b292      	uxth	r2, r2
 801d148:	fb02 110c 	mla	r1, r2, ip, r1
 801d14c:	fb00 1104 	mla	r1, r0, r4, r1
 801d150:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801d152:	fb08 1104 	mla	r1, r8, r4, r1
 801d156:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d15a:	2900      	cmp	r1, #0
 801d15c:	f000 80f5 	beq.w	801d34a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 801d160:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801d164:	d019      	beq.n	801d19a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 801d166:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801d16a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d16e:	fb0c fa0a 	mul.w	sl, ip, sl
 801d172:	fb0c fc03 	mul.w	ip, ip, r3
 801d176:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d17a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d17e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801d182:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d186:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d18a:	4453      	add	r3, sl
 801d18c:	0a3f      	lsrs	r7, r7, #8
 801d18e:	0a1b      	lsrs	r3, r3, #8
 801d190:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801d194:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d198:	433b      	orrs	r3, r7
 801d19a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801d19c:	2cff      	cmp	r4, #255	; 0xff
 801d19e:	d020      	beq.n	801d1e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801d1a0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d1a2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801d1a6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801d1a8:	4367      	muls	r7, r4
 801d1aa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d1ac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d1b0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d1b4:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801d1b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d1ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d1be:	fb04 fa0a 	mul.w	sl, r4, sl
 801d1c2:	44bc      	add	ip, r7
 801d1c4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d1c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d1cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d1d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d1d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d1d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d1dc:	ea4c 040a 	orr.w	r4, ip, sl
 801d1e0:	9410      	str	r4, [sp, #64]	; 0x40
 801d1e2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d1e4:	2cff      	cmp	r4, #255	; 0xff
 801d1e6:	d020      	beq.n	801d22a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 801d1e8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d1ea:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801d1ee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d1f0:	4367      	muls	r7, r4
 801d1f2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d1f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d1f8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d1fc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d1fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d202:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d206:	fb04 fa0a 	mul.w	sl, r4, sl
 801d20a:	44bc      	add	ip, r7
 801d20c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d210:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d214:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d218:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d21c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d220:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d224:	ea4c 040a 	orr.w	r4, ip, sl
 801d228:	940b      	str	r4, [sp, #44]	; 0x2c
 801d22a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801d22c:	2cff      	cmp	r4, #255	; 0xff
 801d22e:	d020      	beq.n	801d272 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801d230:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d232:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801d236:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801d238:	4367      	muls	r7, r4
 801d23a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d23c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d240:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d244:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801d246:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d24a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d24e:	fb04 fa0a 	mul.w	sl, r4, sl
 801d252:	44bc      	add	ip, r7
 801d254:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d258:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d25c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d260:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d264:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d268:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d26c:	ea4c 040a 	orr.w	r4, ip, sl
 801d270:	9411      	str	r4, [sp, #68]	; 0x44
 801d272:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d274:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801d278:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d27c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801d280:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d282:	fb0e f707 	mul.w	r7, lr, r7
 801d286:	fb02 770c 	mla	r7, r2, ip, r7
 801d28a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801d28e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d290:	fb00 770c 	mla	r7, r0, ip, r7
 801d294:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801d298:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d29a:	fb08 770c 	mla	r7, r8, ip, r7
 801d29e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801d2a2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d2a4:	fb0e fe0c 	mul.w	lr, lr, ip
 801d2a8:	0a3f      	lsrs	r7, r7, #8
 801d2aa:	fb02 e303 	mla	r3, r2, r3, lr
 801d2ae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d2b0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801d2b4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801d2b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d2ba:	fb00 330a 	mla	r3, r0, sl, r3
 801d2be:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801d2c2:	f8b9 0000 	ldrh.w	r0, [r9]
 801d2c6:	fb08 3c0c 	mla	ip, r8, ip, r3
 801d2ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d2cc:	1202      	asrs	r2, r0, #8
 801d2ce:	434b      	muls	r3, r1
 801d2d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d2d4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d2d8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d2dc:	1c59      	adds	r1, r3, #1
 801d2de:	ea47 070c 	orr.w	r7, r7, ip
 801d2e2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d2e6:	0c3b      	lsrs	r3, r7, #16
 801d2e8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801d2ec:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801d2f0:	b2ff      	uxtb	r7, r7
 801d2f2:	fb13 f304 	smulbb	r3, r3, r4
 801d2f6:	b2c9      	uxtb	r1, r1
 801d2f8:	fb1c fc04 	smulbb	ip, ip, r4
 801d2fc:	fb02 3201 	mla	r2, r2, r1, r3
 801d300:	10c3      	asrs	r3, r0, #3
 801d302:	fb17 f704 	smulbb	r7, r7, r4
 801d306:	00c0      	lsls	r0, r0, #3
 801d308:	b292      	uxth	r2, r2
 801d30a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801d30e:	b2c0      	uxtb	r0, r0
 801d310:	fb03 c301 	mla	r3, r3, r1, ip
 801d314:	f102 0c01 	add.w	ip, r2, #1
 801d318:	fb00 7001 	mla	r0, r0, r1, r7
 801d31c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801d320:	b280      	uxth	r0, r0
 801d322:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801d326:	b29b      	uxth	r3, r3
 801d328:	1c42      	adds	r2, r0, #1
 801d32a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801d32e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d332:	ea42 020c 	orr.w	r2, r2, ip
 801d336:	f103 0c01 	add.w	ip, r3, #1
 801d33a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801d33e:	095b      	lsrs	r3, r3, #5
 801d340:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d344:	431a      	orrs	r2, r3
 801d346:	f8a9 2000 	strh.w	r2, [r9]
 801d34a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801d34c:	f109 0902 	add.w	r9, r9, #2
 801d350:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801d352:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d356:	441a      	add	r2, r3
 801d358:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d35a:	9229      	str	r2, [sp, #164]	; 0xa4
 801d35c:	441d      	add	r5, r3
 801d35e:	e63d      	b.n	801cfdc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801d360:	2800      	cmp	r0, #0
 801d362:	f43f aedd 	beq.w	801d120 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801d366:	5c79      	ldrb	r1, [r7, r1]
 801d368:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d36c:	910b      	str	r1, [sp, #44]	; 0x2c
 801d36e:	0e09      	lsrs	r1, r1, #24
 801d370:	9114      	str	r1, [sp, #80]	; 0x50
 801d372:	e6d5      	b.n	801d120 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801d374:	b01f      	add	sp, #124	; 0x7c
 801d376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d37a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801d37a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d37e:	b089      	sub	sp, #36	; 0x24
 801d380:	9101      	str	r1, [sp, #4]
 801d382:	9801      	ldr	r0, [sp, #4]
 801d384:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801d388:	8800      	ldrh	r0, [r0, #0]
 801d38a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801d38e:	1206      	asrs	r6, r0, #8
 801d390:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801d394:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801d398:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d39c:	9602      	str	r6, [sp, #8]
 801d39e:	10c6      	asrs	r6, r0, #3
 801d3a0:	00c0      	lsls	r0, r0, #3
 801d3a2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d3a6:	b2c0      	uxtb	r0, r0
 801d3a8:	9603      	str	r6, [sp, #12]
 801d3aa:	9004      	str	r0, [sp, #16]
 801d3ac:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801d3b0:	fb07 100c 	mla	r0, r7, ip, r1
 801d3b4:	2f00      	cmp	r7, #0
 801d3b6:	eb02 0e00 	add.w	lr, r2, r0
 801d3ba:	f2c0 810a 	blt.w	801d5d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801d3be:	45b8      	cmp	r8, r7
 801d3c0:	f340 8107 	ble.w	801d5d2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801d3c4:	2900      	cmp	r1, #0
 801d3c6:	f2c0 8102 	blt.w	801d5ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801d3ca:	458c      	cmp	ip, r1
 801d3cc:	f340 80ff 	ble.w	801d5ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801d3d0:	5c12      	ldrb	r2, [r2, r0]
 801d3d2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801d3d6:	1c4a      	adds	r2, r1, #1
 801d3d8:	f100 80fe 	bmi.w	801d5d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801d3dc:	4594      	cmp	ip, r2
 801d3de:	f340 80fb 	ble.w	801d5d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801d3e2:	2d00      	cmp	r5, #0
 801d3e4:	f000 80fa 	beq.w	801d5dc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801d3e8:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801d3ec:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801d3f0:	3701      	adds	r7, #1
 801d3f2:	f100 80f7 	bmi.w	801d5e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801d3f6:	45b8      	cmp	r8, r7
 801d3f8:	f340 80f4 	ble.w	801d5e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801d3fc:	2c00      	cmp	r4, #0
 801d3fe:	f000 80f4 	beq.w	801d5ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801d402:	2900      	cmp	r1, #0
 801d404:	eb0e 020c 	add.w	r2, lr, ip
 801d408:	f2c0 80ea 	blt.w	801d5e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801d40c:	458c      	cmp	ip, r1
 801d40e:	f340 80e7 	ble.w	801d5e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801d412:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801d416:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801d41a:	3101      	adds	r1, #1
 801d41c:	f100 80e8 	bmi.w	801d5f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801d420:	458c      	cmp	ip, r1
 801d422:	f340 80e5 	ble.w	801d5f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801d426:	2d00      	cmp	r5, #0
 801d428:	f000 80e4 	beq.w	801d5f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801d42c:	7852      	ldrb	r2, [r2, #1]
 801d42e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801d432:	0e0b      	lsrs	r3, r1, #24
 801d434:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801d438:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801d43c:	9300      	str	r3, [sp, #0]
 801d43e:	b2a4      	uxth	r4, r4
 801d440:	b2ab      	uxth	r3, r5
 801d442:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801d446:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801d44a:	fb03 f904 	mul.w	r9, r3, r4
 801d44e:	011b      	lsls	r3, r3, #4
 801d450:	fb0a f505 	mul.w	r5, sl, r5
 801d454:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801d458:	eba3 0e09 	sub.w	lr, r3, r9
 801d45c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801d460:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801d464:	0a28      	lsrs	r0, r5, #8
 801d466:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801d46a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801d46e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801d472:	fb0a f303 	mul.w	r3, sl, r3
 801d476:	fb08 f707 	mul.w	r7, r8, r7
 801d47a:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801d47e:	4405      	add	r5, r0
 801d480:	fb08 fc0c 	mul.w	ip, r8, ip
 801d484:	b2a4      	uxth	r4, r4
 801d486:	0a2d      	lsrs	r5, r5, #8
 801d488:	fa1f fe8e 	uxth.w	lr, lr
 801d48c:	1b12      	subs	r2, r2, r4
 801d48e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801d492:	b292      	uxth	r2, r2
 801d494:	9005      	str	r0, [sp, #20]
 801d496:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801d49a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d49e:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801d4a2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d4a6:	0a1b      	lsrs	r3, r3, #8
 801d4a8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801d4ac:	9306      	str	r3, [sp, #24]
 801d4ae:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801d4b2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801d4b6:	4460      	add	r0, ip
 801d4b8:	fb0b f303 	mul.w	r3, fp, r3
 801d4bc:	fb0b f606 	mul.w	r6, fp, r6
 801d4c0:	0a00      	lsrs	r0, r0, #8
 801d4c2:	0a1d      	lsrs	r5, r3, #8
 801d4c4:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801d4c8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801d4cc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d4d0:	441d      	add	r5, r3
 801d4d2:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801d4d6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801d4da:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801d4de:	0a2d      	lsrs	r5, r5, #8
 801d4e0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801d4e4:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801d4e8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d4ec:	0a36      	lsrs	r6, r6, #8
 801d4ee:	0a1b      	lsrs	r3, r3, #8
 801d4f0:	fb05 f50e 	mul.w	r5, r5, lr
 801d4f4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801d4f8:	9307      	str	r3, [sp, #28]
 801d4fa:	0e0b      	lsrs	r3, r1, #24
 801d4fc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801d500:	fb0e f606 	mul.w	r6, lr, r6
 801d504:	435f      	muls	r7, r3
 801d506:	4359      	muls	r1, r3
 801d508:	9b05      	ldr	r3, [sp, #20]
 801d50a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d50e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d512:	fb03 5502 	mla	r5, r3, r2, r5
 801d516:	9b06      	ldr	r3, [sp, #24]
 801d518:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d51c:	fb0e fe0b 	mul.w	lr, lr, fp
 801d520:	44bc      	add	ip, r7
 801d522:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801d526:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d52a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801d52e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d532:	0a09      	lsrs	r1, r1, #8
 801d534:	fb0c 5509 	mla	r5, ip, r9, r5
 801d538:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801d53c:	fb00 5504 	mla	r5, r0, r4, r5
 801d540:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801d544:	9b07      	ldr	r3, [sp, #28]
 801d546:	fb02 6000 	mla	r0, r2, r0, r6
 801d54a:	0a2d      	lsrs	r5, r5, #8
 801d54c:	fb02 e20a 	mla	r2, r2, sl, lr
 801d550:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d554:	fb09 0001 	mla	r0, r9, r1, r0
 801d558:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d55c:	fb04 0003 	mla	r0, r4, r3, r0
 801d560:	9b00      	ldr	r3, [sp, #0]
 801d562:	fb04 2408 	mla	r4, r4, r8, r2
 801d566:	9a04      	ldr	r2, [sp, #16]
 801d568:	0a00      	lsrs	r0, r0, #8
 801d56a:	fb09 4903 	mla	r9, r9, r3, r4
 801d56e:	9b02      	ldr	r3, [sp, #8]
 801d570:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d574:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801d578:	4305      	orrs	r5, r0
 801d57a:	fa5f f989 	uxtb.w	r9, r9
 801d57e:	fb03 f109 	mul.w	r1, r3, r9
 801d582:	9b03      	ldr	r3, [sp, #12]
 801d584:	fb03 f309 	mul.w	r3, r3, r9
 801d588:	fb02 f909 	mul.w	r9, r2, r9
 801d58c:	1c4a      	adds	r2, r1, #1
 801d58e:	1c58      	adds	r0, r3, #1
 801d590:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d594:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d598:	0c2a      	lsrs	r2, r5, #16
 801d59a:	0a2b      	lsrs	r3, r5, #8
 801d59c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801d5a0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d5a4:	0212      	lsls	r2, r2, #8
 801d5a6:	00db      	lsls	r3, r3, #3
 801d5a8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801d5ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d5b0:	4313      	orrs	r3, r2
 801d5b2:	f109 0201 	add.w	r2, r9, #1
 801d5b6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801d5ba:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801d5be:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d5c2:	431d      	orrs	r5, r3
 801d5c4:	9b01      	ldr	r3, [sp, #4]
 801d5c6:	801d      	strh	r5, [r3, #0]
 801d5c8:	b009      	add	sp, #36	; 0x24
 801d5ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d5ce:	2000      	movs	r0, #0
 801d5d0:	e701      	b.n	801d3d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801d5d2:	2600      	movs	r6, #0
 801d5d4:	4630      	mov	r0, r6
 801d5d6:	e70b      	b.n	801d3f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801d5d8:	2600      	movs	r6, #0
 801d5da:	e709      	b.n	801d3f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801d5dc:	462e      	mov	r6, r5
 801d5de:	e707      	b.n	801d3f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801d5e0:	2700      	movs	r7, #0
 801d5e2:	e71a      	b.n	801d41a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801d5e4:	2100      	movs	r1, #0
 801d5e6:	460f      	mov	r7, r1
 801d5e8:	e723      	b.n	801d432 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801d5ea:	4621      	mov	r1, r4
 801d5ec:	4627      	mov	r7, r4
 801d5ee:	e720      	b.n	801d432 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801d5f0:	2100      	movs	r1, #0
 801d5f2:	e71e      	b.n	801d432 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801d5f4:	4629      	mov	r1, r5
 801d5f6:	e71c      	b.n	801d432 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801d5f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d5f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d5fc:	b09b      	sub	sp, #108	; 0x6c
 801d5fe:	9218      	str	r2, [sp, #96]	; 0x60
 801d600:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801d602:	9019      	str	r0, [sp, #100]	; 0x64
 801d604:	9116      	str	r1, [sp, #88]	; 0x58
 801d606:	6850      	ldr	r0, [r2, #4]
 801d608:	9307      	str	r3, [sp, #28]
 801d60a:	6812      	ldr	r2, [r2, #0]
 801d60c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801d60e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801d612:	fb00 1303 	mla	r3, r0, r3, r1
 801d616:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d61a:	930a      	str	r3, [sp, #40]	; 0x28
 801d61c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d61e:	681b      	ldr	r3, [r3, #0]
 801d620:	930f      	str	r3, [sp, #60]	; 0x3c
 801d622:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d624:	685e      	ldr	r6, [r3, #4]
 801d626:	3604      	adds	r6, #4
 801d628:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801d62a:	2b00      	cmp	r3, #0
 801d62c:	dc03      	bgt.n	801d636 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d62e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d630:	2b00      	cmp	r3, #0
 801d632:	f340 8373 	ble.w	801dd1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801d636:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d638:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d63c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d640:	1e48      	subs	r0, r1, #1
 801d642:	1e57      	subs	r7, r2, #1
 801d644:	9b07      	ldr	r3, [sp, #28]
 801d646:	2b00      	cmp	r3, #0
 801d648:	f340 818f 	ble.w	801d96a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801d64c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801d64e:	142b      	asrs	r3, r5, #16
 801d650:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d654:	d406      	bmi.n	801d664 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d656:	4584      	cmp	ip, r0
 801d658:	da04      	bge.n	801d664 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d65a:	2b00      	cmp	r3, #0
 801d65c:	db02      	blt.n	801d664 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d65e:	42bb      	cmp	r3, r7
 801d660:	f2c0 8184 	blt.w	801d96c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801d664:	f11c 0c01 	adds.w	ip, ip, #1
 801d668:	f100 8172 	bmi.w	801d950 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d66c:	4561      	cmp	r1, ip
 801d66e:	f2c0 816f 	blt.w	801d950 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d672:	3301      	adds	r3, #1
 801d674:	f100 816c 	bmi.w	801d950 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d678:	429a      	cmp	r2, r3
 801d67a:	f2c0 8169 	blt.w	801d950 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d67e:	9b07      	ldr	r3, [sp, #28]
 801d680:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d682:	9317      	str	r3, [sp, #92]	; 0x5c
 801d684:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d686:	2b00      	cmp	r3, #0
 801d688:	f340 818e 	ble.w	801d9a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801d68c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801d68e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801d692:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d696:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d69a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d69c:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801d6a0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801d6a2:	141b      	asrs	r3, r3, #16
 801d6a4:	f100 81d1 	bmi.w	801da4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d6a8:	f101 38ff 	add.w	r8, r1, #4294967295
 801d6ac:	4543      	cmp	r3, r8
 801d6ae:	f280 81cc 	bge.w	801da4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d6b2:	f1bc 0f00 	cmp.w	ip, #0
 801d6b6:	f2c0 81c8 	blt.w	801da4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d6ba:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d6be:	45c4      	cmp	ip, r8
 801d6c0:	f280 81c3 	bge.w	801da4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d6c4:	b209      	sxth	r1, r1
 801d6c6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801d6c8:	fb0c 3301 	mla	r3, ip, r1, r3
 801d6cc:	eb04 0803 	add.w	r8, r4, r3
 801d6d0:	5ce3      	ldrb	r3, [r4, r3]
 801d6d2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d6d6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801d6da:	2a00      	cmp	r2, #0
 801d6dc:	f000 81aa 	beq.w	801da34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 801d6e0:	f898 c001 	ldrb.w	ip, [r8, #1]
 801d6e4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801d6e8:	940b      	str	r4, [sp, #44]	; 0x2c
 801d6ea:	0e24      	lsrs	r4, r4, #24
 801d6ec:	9412      	str	r4, [sp, #72]	; 0x48
 801d6ee:	b178      	cbz	r0, 801d710 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801d6f0:	eb08 0c01 	add.w	ip, r8, r1
 801d6f4:	f818 1001 	ldrb.w	r1, [r8, r1]
 801d6f8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d6fc:	9108      	str	r1, [sp, #32]
 801d6fe:	0e09      	lsrs	r1, r1, #24
 801d700:	9110      	str	r1, [sp, #64]	; 0x40
 801d702:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801d706:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d70a:	910c      	str	r1, [sp, #48]	; 0x30
 801d70c:	0e09      	lsrs	r1, r1, #24
 801d70e:	9113      	str	r1, [sp, #76]	; 0x4c
 801d710:	b292      	uxth	r2, r2
 801d712:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d714:	b280      	uxth	r0, r0
 801d716:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d718:	fb02 f900 	mul.w	r9, r2, r0
 801d71c:	0112      	lsls	r2, r2, #4
 801d71e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801d722:	eba2 0809 	sub.w	r8, r2, r9
 801d726:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801d72a:	b280      	uxth	r0, r0
 801d72c:	fa1f f888 	uxth.w	r8, r8
 801d730:	1a12      	subs	r2, r2, r0
 801d732:	fb08 f101 	mul.w	r1, r8, r1
 801d736:	b292      	uxth	r2, r2
 801d738:	fb02 110e 	mla	r1, r2, lr, r1
 801d73c:	fb00 1104 	mla	r1, r0, r4, r1
 801d740:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d742:	fb09 1104 	mla	r1, r9, r4, r1
 801d746:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d74a:	2900      	cmp	r1, #0
 801d74c:	f000 80f5 	beq.w	801d93a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801d750:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801d754:	d01b      	beq.n	801d78e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d756:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801d75a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d75e:	fb0e fa0a 	mul.w	sl, lr, sl
 801d762:	fb0e fe03 	mul.w	lr, lr, r3
 801d766:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d76a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d76e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801d772:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d776:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d77a:	4453      	add	r3, sl
 801d77c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d780:	0a1b      	lsrs	r3, r3, #8
 801d782:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d786:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d78a:	ea43 030c 	orr.w	r3, r3, ip
 801d78e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d790:	2cff      	cmp	r4, #255	; 0xff
 801d792:	d021      	beq.n	801d7d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801d794:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d796:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801d79a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d79c:	fb04 fb0b 	mul.w	fp, r4, fp
 801d7a0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d7a2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d7a6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d7a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d7ac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d7b0:	fb04 fa0a 	mul.w	sl, r4, sl
 801d7b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d7b8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d7bc:	44de      	add	lr, fp
 801d7be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d7c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d7c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d7ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d7ce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d7d2:	ea4e 040a 	orr.w	r4, lr, sl
 801d7d6:	940b      	str	r4, [sp, #44]	; 0x2c
 801d7d8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d7da:	2cff      	cmp	r4, #255	; 0xff
 801d7dc:	d021      	beq.n	801d822 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801d7de:	9c08      	ldr	r4, [sp, #32]
 801d7e0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801d7e4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d7e6:	fb04 fb0b 	mul.w	fp, r4, fp
 801d7ea:	9c08      	ldr	r4, [sp, #32]
 801d7ec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d7f0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d7f2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d7f6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d7fa:	fb04 fa0a 	mul.w	sl, r4, sl
 801d7fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d802:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d806:	44de      	add	lr, fp
 801d808:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d80c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d810:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d814:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d818:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d81c:	ea4e 040a 	orr.w	r4, lr, sl
 801d820:	9408      	str	r4, [sp, #32]
 801d822:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d824:	2cff      	cmp	r4, #255	; 0xff
 801d826:	d021      	beq.n	801d86c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801d828:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d82a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801d82e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d830:	fb04 fb0b 	mul.w	fp, r4, fp
 801d834:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d836:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d83a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d83c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d840:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d844:	fb04 fa0a 	mul.w	sl, r4, sl
 801d848:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d84c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d850:	44de      	add	lr, fp
 801d852:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d856:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d85a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d85e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d862:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d866:	ea4e 040a 	orr.w	r4, lr, sl
 801d86a:	940c      	str	r4, [sp, #48]	; 0x30
 801d86c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d86e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801d872:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d876:	43c9      	mvns	r1, r1
 801d878:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801d87c:	9c08      	ldr	r4, [sp, #32]
 801d87e:	fb08 fc0c 	mul.w	ip, r8, ip
 801d882:	fb02 cc0e 	mla	ip, r2, lr, ip
 801d886:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801d88a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d88c:	fb00 cc0e 	mla	ip, r0, lr, ip
 801d890:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801d894:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d896:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d89a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801d89e:	fb08 f80e 	mul.w	r8, r8, lr
 801d8a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d8a6:	fa5f fe81 	uxtb.w	lr, r1
 801d8aa:	fb02 8303 	mla	r3, r2, r3, r8
 801d8ae:	9a08      	ldr	r2, [sp, #32]
 801d8b0:	f8b7 8000 	ldrh.w	r8, [r7]
 801d8b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d8b8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801d8bc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d8be:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801d8c2:	fb00 330a 	mla	r3, r0, sl, r3
 801d8c6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801d8ca:	ea4f 2228 	mov.w	r2, r8, asr #8
 801d8ce:	fb09 3900 	mla	r9, r9, r0, r3
 801d8d2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801d8d6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d8da:	b2c9      	uxtb	r1, r1
 801d8dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d8e0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d8e4:	fb02 f20e 	mul.w	r2, r2, lr
 801d8e8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801d8ec:	fb00 f00e 	mul.w	r0, r0, lr
 801d8f0:	1c53      	adds	r3, r2, #1
 801d8f2:	fb01 f10e 	mul.w	r1, r1, lr
 801d8f6:	ea4c 0c09 	orr.w	ip, ip, r9
 801d8fa:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801d8fe:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801d902:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d906:	4a60      	ldr	r2, [pc, #384]	; (801da88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801d908:	b2db      	uxtb	r3, r3
 801d90a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801d90e:	1c43      	adds	r3, r0, #1
 801d910:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d914:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801d918:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d91c:	00db      	lsls	r3, r3, #3
 801d91e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d922:	4313      	orrs	r3, r2
 801d924:	1c4a      	adds	r2, r1, #1
 801d926:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d92a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d92e:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801d932:	ea4c 0c03 	orr.w	ip, ip, r3
 801d936:	f8a7 c000 	strh.w	ip, [r7]
 801d93a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801d93c:	3702      	adds	r7, #2
 801d93e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801d940:	441a      	add	r2, r3
 801d942:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d944:	441d      	add	r5, r3
 801d946:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d948:	9225      	str	r2, [sp, #148]	; 0x94
 801d94a:	3b01      	subs	r3, #1
 801d94c:	9317      	str	r3, [sp, #92]	; 0x5c
 801d94e:	e699      	b.n	801d684 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d950:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801d952:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801d954:	441c      	add	r4, r3
 801d956:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d958:	441d      	add	r5, r3
 801d95a:	9b07      	ldr	r3, [sp, #28]
 801d95c:	9425      	str	r4, [sp, #148]	; 0x94
 801d95e:	3b01      	subs	r3, #1
 801d960:	9307      	str	r3, [sp, #28]
 801d962:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d964:	3302      	adds	r3, #2
 801d966:	930a      	str	r3, [sp, #40]	; 0x28
 801d968:	e66c      	b.n	801d644 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801d96a:	d024      	beq.n	801d9b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 801d96c:	9b07      	ldr	r3, [sp, #28]
 801d96e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801d970:	3b01      	subs	r3, #1
 801d972:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801d974:	fb00 4003 	mla	r0, r0, r3, r4
 801d978:	1400      	asrs	r0, r0, #16
 801d97a:	f53f ae80 	bmi.w	801d67e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d97e:	3901      	subs	r1, #1
 801d980:	4288      	cmp	r0, r1
 801d982:	f6bf ae7c 	bge.w	801d67e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d986:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801d988:	fb01 5303 	mla	r3, r1, r3, r5
 801d98c:	141b      	asrs	r3, r3, #16
 801d98e:	f53f ae76 	bmi.w	801d67e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d992:	3a01      	subs	r2, #1
 801d994:	4293      	cmp	r3, r2
 801d996:	f6bf ae72 	bge.w	801d67e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d99a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801d99e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801d9a2:	f1bb 0f00 	cmp.w	fp, #0
 801d9a6:	dc71      	bgt.n	801da8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801d9a8:	9b07      	ldr	r3, [sp, #28]
 801d9aa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d9ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d9b0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d9b4:	930a      	str	r3, [sp, #40]	; 0x28
 801d9b6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801d9b8:	2b00      	cmp	r3, #0
 801d9ba:	f340 81af 	ble.w	801dd1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801d9be:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d9c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d9c4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d9c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d9cc:	eef0 6a62 	vmov.f32	s13, s5
 801d9d0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d9d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d9d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d9dc:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801d9e0:	eef0 6a43 	vmov.f32	s13, s6
 801d9e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d9e8:	ee16 5a90 	vmov	r5, s13
 801d9ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d9f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d9f4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d9f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d9fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801da00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801da04:	ee12 2a90 	vmov	r2, s5
 801da08:	eef0 2a47 	vmov.f32	s5, s14
 801da0c:	fb92 f3f3 	sdiv	r3, r2, r3
 801da10:	ee13 2a10 	vmov	r2, s6
 801da14:	9327      	str	r3, [sp, #156]	; 0x9c
 801da16:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801da18:	eeb0 3a67 	vmov.f32	s6, s15
 801da1c:	fb92 f3f3 	sdiv	r3, r2, r3
 801da20:	9328      	str	r3, [sp, #160]	; 0xa0
 801da22:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801da24:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801da26:	3b01      	subs	r3, #1
 801da28:	9316      	str	r3, [sp, #88]	; 0x58
 801da2a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801da2c:	bf08      	it	eq
 801da2e:	4613      	moveq	r3, r2
 801da30:	9307      	str	r3, [sp, #28]
 801da32:	e5f9      	b.n	801d628 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801da34:	2800      	cmp	r0, #0
 801da36:	f43f ae6b 	beq.w	801d710 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801da3a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801da3e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801da42:	9108      	str	r1, [sp, #32]
 801da44:	0e09      	lsrs	r1, r1, #24
 801da46:	9110      	str	r1, [sp, #64]	; 0x40
 801da48:	e662      	b.n	801d710 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801da4a:	f113 0801 	adds.w	r8, r3, #1
 801da4e:	f53f af74 	bmi.w	801d93a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801da52:	4541      	cmp	r1, r8
 801da54:	f6ff af71 	blt.w	801d93a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801da58:	f11c 0801 	adds.w	r8, ip, #1
 801da5c:	f53f af6d 	bmi.w	801d93a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801da60:	45c6      	cmp	lr, r8
 801da62:	f6ff af6a 	blt.w	801d93a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801da66:	b209      	sxth	r1, r1
 801da68:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801da6c:	fa0f f38e 	sxth.w	r3, lr
 801da70:	9100      	str	r1, [sp, #0]
 801da72:	4639      	mov	r1, r7
 801da74:	9301      	str	r3, [sp, #4]
 801da76:	4633      	mov	r3, r6
 801da78:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801da7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801da7e:	9819      	ldr	r0, [sp, #100]	; 0x64
 801da80:	f7ff fc7b 	bl	801d37a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801da84:	e759      	b.n	801d93a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801da86:	bf00      	nop
 801da88:	fffff800 	.word	0xfffff800
 801da8c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801da8e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801da92:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801da94:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801da98:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801da9a:	1427      	asrs	r7, r4, #16
 801da9c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801da9e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801daa2:	142b      	asrs	r3, r5, #16
 801daa4:	fb01 7303 	mla	r3, r1, r3, r7
 801daa8:	18e7      	adds	r7, r4, r3
 801daaa:	5ce3      	ldrb	r3, [r4, r3]
 801daac:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801dab0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801dab4:	2a00      	cmp	r2, #0
 801dab6:	f000 8127 	beq.w	801dd08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801daba:	f897 e001 	ldrb.w	lr, [r7, #1]
 801dabe:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801dac2:	940d      	str	r4, [sp, #52]	; 0x34
 801dac4:	0e24      	lsrs	r4, r4, #24
 801dac6:	9414      	str	r4, [sp, #80]	; 0x50
 801dac8:	b170      	cbz	r0, 801dae8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801daca:	eb07 0e01 	add.w	lr, r7, r1
 801dace:	5c79      	ldrb	r1, [r7, r1]
 801dad0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801dad4:	9109      	str	r1, [sp, #36]	; 0x24
 801dad6:	0e09      	lsrs	r1, r1, #24
 801dad8:	9111      	str	r1, [sp, #68]	; 0x44
 801dada:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801dade:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801dae2:	910e      	str	r1, [sp, #56]	; 0x38
 801dae4:	0e09      	lsrs	r1, r1, #24
 801dae6:	9115      	str	r1, [sp, #84]	; 0x54
 801dae8:	b292      	uxth	r2, r2
 801daea:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801daec:	b280      	uxth	r0, r0
 801daee:	fb02 f800 	mul.w	r8, r2, r0
 801daf2:	0112      	lsls	r2, r2, #4
 801daf4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801daf8:	eba2 0e08 	sub.w	lr, r2, r8
 801dafc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801db00:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801db02:	b280      	uxth	r0, r0
 801db04:	fa1f fe8e 	uxth.w	lr, lr
 801db08:	1a09      	subs	r1, r1, r0
 801db0a:	fb0e f202 	mul.w	r2, lr, r2
 801db0e:	b289      	uxth	r1, r1
 801db10:	fb01 220c 	mla	r2, r1, ip, r2
 801db14:	fb00 2204 	mla	r2, r0, r4, r2
 801db18:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801db1a:	fb08 2204 	mla	r2, r8, r4, r2
 801db1e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801db22:	2a00      	cmp	r2, #0
 801db24:	f000 80e5 	beq.w	801dcf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801db28:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801db2c:	d019      	beq.n	801db62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801db2e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801db32:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801db36:	fb0c fa0a 	mul.w	sl, ip, sl
 801db3a:	fb0c fc03 	mul.w	ip, ip, r3
 801db3e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801db42:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801db46:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801db4a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801db4e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801db52:	4453      	add	r3, sl
 801db54:	0a3f      	lsrs	r7, r7, #8
 801db56:	0a1b      	lsrs	r3, r3, #8
 801db58:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801db5c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801db60:	433b      	orrs	r3, r7
 801db62:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801db64:	2cff      	cmp	r4, #255	; 0xff
 801db66:	d020      	beq.n	801dbaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801db68:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801db6a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801db6e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801db70:	4367      	muls	r7, r4
 801db72:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801db74:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801db78:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801db7c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801db7e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801db82:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801db86:	fb04 fa0a 	mul.w	sl, r4, sl
 801db8a:	44bc      	add	ip, r7
 801db8c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801db90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801db94:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801db98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801db9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dba0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dba4:	ea4c 040a 	orr.w	r4, ip, sl
 801dba8:	940d      	str	r4, [sp, #52]	; 0x34
 801dbaa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801dbac:	2cff      	cmp	r4, #255	; 0xff
 801dbae:	d020      	beq.n	801dbf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801dbb0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801dbb2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801dbb6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801dbb8:	4367      	muls	r7, r4
 801dbba:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801dbbc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dbc0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801dbc4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801dbc6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dbca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dbce:	fb04 fa0a 	mul.w	sl, r4, sl
 801dbd2:	44bc      	add	ip, r7
 801dbd4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dbd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dbdc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dbe0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dbe4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dbe8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dbec:	ea4c 040a 	orr.w	r4, ip, sl
 801dbf0:	9409      	str	r4, [sp, #36]	; 0x24
 801dbf2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801dbf4:	2cff      	cmp	r4, #255	; 0xff
 801dbf6:	d020      	beq.n	801dc3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801dbf8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801dbfa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801dbfe:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801dc00:	4367      	muls	r7, r4
 801dc02:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801dc04:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dc08:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801dc0c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801dc0e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dc12:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dc16:	fb04 fa0a 	mul.w	sl, r4, sl
 801dc1a:	44bc      	add	ip, r7
 801dc1c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dc20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dc24:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dc28:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dc2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dc30:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dc34:	ea4c 040a 	orr.w	r4, ip, sl
 801dc38:	940e      	str	r4, [sp, #56]	; 0x38
 801dc3a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801dc3c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801dc40:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801dc44:	43d2      	mvns	r2, r2
 801dc46:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801dc4a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801dc4c:	b2d2      	uxtb	r2, r2
 801dc4e:	fb0e f707 	mul.w	r7, lr, r7
 801dc52:	fb01 770c 	mla	r7, r1, ip, r7
 801dc56:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801dc5a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801dc5c:	fb00 770c 	mla	r7, r0, ip, r7
 801dc60:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801dc64:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801dc66:	fb08 770c 	mla	r7, r8, ip, r7
 801dc6a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801dc6e:	fb0e fe0c 	mul.w	lr, lr, ip
 801dc72:	0a3f      	lsrs	r7, r7, #8
 801dc74:	fb01 e303 	mla	r3, r1, r3, lr
 801dc78:	9909      	ldr	r1, [sp, #36]	; 0x24
 801dc7a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801dc7e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801dc82:	990e      	ldr	r1, [sp, #56]	; 0x38
 801dc84:	fb00 330a 	mla	r3, r0, sl, r3
 801dc88:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801dc8c:	fb08 3c0c 	mla	ip, r8, ip, r3
 801dc90:	f8b9 3000 	ldrh.w	r3, [r9]
 801dc94:	1218      	asrs	r0, r3, #8
 801dc96:	10d9      	asrs	r1, r3, #3
 801dc98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dc9c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dca0:	00db      	lsls	r3, r3, #3
 801dca2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801dca6:	4350      	muls	r0, r2
 801dca8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801dcac:	b2db      	uxtb	r3, r3
 801dcae:	4351      	muls	r1, r2
 801dcb0:	ea47 070c 	orr.w	r7, r7, ip
 801dcb4:	4353      	muls	r3, r2
 801dcb6:	1c42      	adds	r2, r0, #1
 801dcb8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801dcbc:	0c3a      	lsrs	r2, r7, #16
 801dcbe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801dcc2:	4a18      	ldr	r2, [pc, #96]	; (801dd24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801dcc4:	b2c0      	uxtb	r0, r0
 801dcc6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801dcca:	1c4a      	adds	r2, r1, #1
 801dccc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801dcd0:	0a3a      	lsrs	r2, r7, #8
 801dcd2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801dcd6:	00c9      	lsls	r1, r1, #3
 801dcd8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801dcdc:	4301      	orrs	r1, r0
 801dcde:	1c58      	adds	r0, r3, #1
 801dce0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801dce4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801dce8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801dcec:	4308      	orrs	r0, r1
 801dcee:	f8a9 0000 	strh.w	r0, [r9]
 801dcf2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801dcf4:	f109 0902 	add.w	r9, r9, #2
 801dcf8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801dcfa:	f10b 3bff 	add.w	fp, fp, #4294967295
 801dcfe:	441a      	add	r2, r3
 801dd00:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dd02:	9225      	str	r2, [sp, #148]	; 0x94
 801dd04:	441d      	add	r5, r3
 801dd06:	e64c      	b.n	801d9a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801dd08:	2800      	cmp	r0, #0
 801dd0a:	f43f aeed 	beq.w	801dae8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801dd0e:	5c79      	ldrb	r1, [r7, r1]
 801dd10:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801dd14:	9109      	str	r1, [sp, #36]	; 0x24
 801dd16:	0e09      	lsrs	r1, r1, #24
 801dd18:	9111      	str	r1, [sp, #68]	; 0x44
 801dd1a:	e6e5      	b.n	801dae8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801dd1c:	b01b      	add	sp, #108	; 0x6c
 801dd1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd22:	bf00      	nop
 801dd24:	fffff800 	.word	0xfffff800

0801dd28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801dd28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd2c:	b085      	sub	sp, #20
 801dd2e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801dd32:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801dd36:	2800      	cmp	r0, #0
 801dd38:	9103      	str	r1, [sp, #12]
 801dd3a:	fb00 7406 	mla	r4, r0, r6, r7
 801dd3e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801dd42:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801dd46:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801dd4a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801dd4e:	eb03 0904 	add.w	r9, r3, r4
 801dd52:	9501      	str	r5, [sp, #4]
 801dd54:	f2c0 8150 	blt.w	801dff8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801dd58:	4583      	cmp	fp, r0
 801dd5a:	f340 814d 	ble.w	801dff8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801dd5e:	2f00      	cmp	r7, #0
 801dd60:	f2c0 8146 	blt.w	801dff0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801dd64:	42be      	cmp	r6, r7
 801dd66:	f340 8143 	ble.w	801dff0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801dd6a:	f813 c004 	ldrb.w	ip, [r3, r4]
 801dd6e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801dd72:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801dd76:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801dd7a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801dd7e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dd82:	4355      	muls	r5, r2
 801dd84:	fb0c f203 	mul.w	r2, ip, r3
 801dd88:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801dd8c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801dd90:	441d      	add	r5, r3
 801dd92:	f102 0320 	add.w	r3, r2, #32
 801dd96:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dd9a:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801dd9e:	0a1b      	lsrs	r3, r3, #8
 801dda0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dda4:	431c      	orrs	r4, r3
 801dda6:	1c7b      	adds	r3, r7, #1
 801dda8:	f100 812b 	bmi.w	801e002 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801ddac:	429e      	cmp	r6, r3
 801ddae:	f340 8128 	ble.w	801e002 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801ddb2:	2900      	cmp	r1, #0
 801ddb4:	f000 8128 	beq.w	801e008 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801ddb8:	9a01      	ldr	r2, [sp, #4]
 801ddba:	f899 3001 	ldrb.w	r3, [r9, #1]
 801ddbe:	8855      	ldrh	r5, [r2, #2]
 801ddc0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801ddc4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801ddc8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ddcc:	fb08 f802 	mul.w	r8, r8, r2
 801ddd0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801ddd4:	435d      	muls	r5, r3
 801ddd6:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801ddda:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ddde:	44d0      	add	r8, sl
 801dde0:	f105 0a20 	add.w	sl, r5, #32
 801dde4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801dde8:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801ddec:	0a2d      	lsrs	r5, r5, #8
 801ddee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ddf2:	432a      	orrs	r2, r5
 801ddf4:	3001      	adds	r0, #1
 801ddf6:	f100 810d 	bmi.w	801e014 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801ddfa:	4583      	cmp	fp, r0
 801ddfc:	f340 810a 	ble.w	801e014 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801de00:	f1be 0f00 	cmp.w	lr, #0
 801de04:	f000 810b 	beq.w	801e01e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801de08:	2f00      	cmp	r7, #0
 801de0a:	f2c0 8100 	blt.w	801e00e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801de0e:	42be      	cmp	r6, r7
 801de10:	f340 80fd 	ble.w	801e00e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801de14:	9801      	ldr	r0, [sp, #4]
 801de16:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801de1a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801de1e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801de22:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801de26:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801de2a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801de2e:	fb0a fa00 	mul.w	sl, sl, r0
 801de32:	fb05 f808 	mul.w	r8, r5, r8
 801de36:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801de3a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801de3e:	4482      	add	sl, r0
 801de40:	f108 0020 	add.w	r0, r8, #32
 801de44:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801de48:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801de4c:	0a00      	lsrs	r0, r0, #8
 801de4e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801de52:	ea4b 0b00 	orr.w	fp, fp, r0
 801de56:	3701      	adds	r7, #1
 801de58:	f100 80e6 	bmi.w	801e028 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801de5c:	42be      	cmp	r6, r7
 801de5e:	f340 80e3 	ble.w	801e028 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801de62:	2900      	cmp	r1, #0
 801de64:	f000 80e3 	beq.w	801e02e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801de68:	3601      	adds	r6, #1
 801de6a:	9801      	ldr	r0, [sp, #4]
 801de6c:	f819 7006 	ldrb.w	r7, [r9, r6]
 801de70:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801de74:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801de78:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801de7c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801de80:	fb09 f906 	mul.w	r9, r9, r6
 801de84:	fb07 f800 	mul.w	r8, r7, r0
 801de88:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801de8c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801de90:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801de94:	44d1      	add	r9, sl
 801de96:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801de9a:	f108 0020 	add.w	r0, r8, #32
 801de9e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801dea2:	0a00      	lsrs	r0, r0, #8
 801dea4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801dea8:	4330      	orrs	r0, r6
 801deaa:	b28e      	uxth	r6, r1
 801deac:	fa1f f98e 	uxth.w	r9, lr
 801deb0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801deb4:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801deb8:	fb06 f809 	mul.w	r8, r6, r9
 801debc:	0136      	lsls	r6, r6, #4
 801debe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801dec2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801dec6:	9601      	str	r6, [sp, #4]
 801dec8:	ea4a 0404 	orr.w	r4, sl, r4
 801decc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ded0:	fa1f f689 	uxth.w	r6, r9
 801ded4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ded8:	fb11 f90e 	smulbb	r9, r1, lr
 801dedc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801dee0:	9602      	str	r6, [sp, #8]
 801dee2:	4626      	mov	r6, r4
 801dee4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801dee8:	f1ce 0410 	rsb	r4, lr, #16
 801deec:	ea4a 0202 	orr.w	r2, sl, r2
 801def0:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801def4:	1a64      	subs	r4, r4, r1
 801def6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801defa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801defe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801df02:	434a      	muls	r2, r1
 801df04:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801df08:	ea4a 0000 	orr.w	r0, sl, r0
 801df0c:	9903      	ldr	r1, [sp, #12]
 801df0e:	fb04 2406 	mla	r4, r4, r6, r2
 801df12:	9e02      	ldr	r6, [sp, #8]
 801df14:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801df18:	fb09 4200 	mla	r2, r9, r0, r4
 801df1c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801df20:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801df24:	8808      	ldrh	r0, [r1, #0]
 801df26:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801df2a:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801df2e:	ea44 0b0b 	orr.w	fp, r4, fp
 801df32:	9c01      	ldr	r4, [sp, #4]
 801df34:	b289      	uxth	r1, r1
 801df36:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801df3a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801df3e:	1ba4      	subs	r4, r4, r6
 801df40:	9e01      	ldr	r6, [sp, #4]
 801df42:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801df46:	eba6 0608 	sub.w	r6, r6, r8
 801df4a:	b2a4      	uxth	r4, r4
 801df4c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801df50:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801df54:	b2b6      	uxth	r6, r6
 801df56:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801df5a:	4373      	muls	r3, r6
 801df5c:	ea42 0e0e 	orr.w	lr, r2, lr
 801df60:	fb0c 3304 	mla	r3, ip, r4, r3
 801df64:	9c02      	ldr	r4, [sp, #8]
 801df66:	fa1f f28e 	uxth.w	r2, lr
 801df6a:	fb04 3505 	mla	r5, r4, r5, r3
 801df6e:	10d4      	asrs	r4, r2, #3
 801df70:	fb08 5707 	mla	r7, r8, r7, r5
 801df74:	1215      	asrs	r5, r2, #8
 801df76:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801df7a:	00d2      	lsls	r2, r2, #3
 801df7c:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801df80:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801df84:	b2d2      	uxtb	r2, r2
 801df86:	434f      	muls	r7, r1
 801df88:	1c7b      	adds	r3, r7, #1
 801df8a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801df8e:	1203      	asrs	r3, r0, #8
 801df90:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801df94:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801df98:	b2ff      	uxtb	r7, r7
 801df9a:	fb13 f307 	smulbb	r3, r3, r7
 801df9e:	fb05 3501 	mla	r5, r5, r1, r3
 801dfa2:	10c3      	asrs	r3, r0, #3
 801dfa4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801dfa8:	b2ad      	uxth	r5, r5
 801dfaa:	fb13 f307 	smulbb	r3, r3, r7
 801dfae:	fb04 3401 	mla	r4, r4, r1, r3
 801dfb2:	00c3      	lsls	r3, r0, #3
 801dfb4:	b2db      	uxtb	r3, r3
 801dfb6:	b2a4      	uxth	r4, r4
 801dfb8:	fb13 f307 	smulbb	r3, r3, r7
 801dfbc:	fb02 3101 	mla	r1, r2, r1, r3
 801dfc0:	1c6b      	adds	r3, r5, #1
 801dfc2:	1c62      	adds	r2, r4, #1
 801dfc4:	b289      	uxth	r1, r1
 801dfc6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801dfca:	1c4b      	adds	r3, r1, #1
 801dfcc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801dfd0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801dfd4:	9a03      	ldr	r2, [sp, #12]
 801dfd6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801dfda:	0964      	lsrs	r4, r4, #5
 801dfdc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dfe0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801dfe4:	432b      	orrs	r3, r5
 801dfe6:	4323      	orrs	r3, r4
 801dfe8:	8013      	strh	r3, [r2, #0]
 801dfea:	b005      	add	sp, #20
 801dfec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dff0:	f04f 0c00 	mov.w	ip, #0
 801dff4:	4664      	mov	r4, ip
 801dff6:	e6d6      	b.n	801dda6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801dff8:	2300      	movs	r3, #0
 801dffa:	469c      	mov	ip, r3
 801dffc:	461a      	mov	r2, r3
 801dffe:	461c      	mov	r4, r3
 801e000:	e6f8      	b.n	801ddf4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801e002:	2300      	movs	r3, #0
 801e004:	461a      	mov	r2, r3
 801e006:	e6f5      	b.n	801ddf4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801e008:	460b      	mov	r3, r1
 801e00a:	460a      	mov	r2, r1
 801e00c:	e6f2      	b.n	801ddf4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801e00e:	2500      	movs	r5, #0
 801e010:	46ab      	mov	fp, r5
 801e012:	e720      	b.n	801de56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801e014:	2700      	movs	r7, #0
 801e016:	463d      	mov	r5, r7
 801e018:	4638      	mov	r0, r7
 801e01a:	46bb      	mov	fp, r7
 801e01c:	e745      	b.n	801deaa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801e01e:	4677      	mov	r7, lr
 801e020:	4675      	mov	r5, lr
 801e022:	4670      	mov	r0, lr
 801e024:	46f3      	mov	fp, lr
 801e026:	e740      	b.n	801deaa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801e028:	2700      	movs	r7, #0
 801e02a:	4638      	mov	r0, r7
 801e02c:	e73d      	b.n	801deaa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801e02e:	460f      	mov	r7, r1
 801e030:	4608      	mov	r0, r1
 801e032:	e73a      	b.n	801deaa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801e034 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e038:	b097      	sub	sp, #92	; 0x5c
 801e03a:	9214      	str	r2, [sp, #80]	; 0x50
 801e03c:	9308      	str	r3, [sp, #32]
 801e03e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801e040:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801e044:	9015      	str	r0, [sp, #84]	; 0x54
 801e046:	9312      	str	r3, [sp, #72]	; 0x48
 801e048:	6850      	ldr	r0, [r2, #4]
 801e04a:	9111      	str	r1, [sp, #68]	; 0x44
 801e04c:	6812      	ldr	r2, [r2, #0]
 801e04e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801e052:	fb00 1303 	mla	r3, r0, r3, r1
 801e056:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e05a:	9309      	str	r3, [sp, #36]	; 0x24
 801e05c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e05e:	681b      	ldr	r3, [r3, #0]
 801e060:	930b      	str	r3, [sp, #44]	; 0x2c
 801e062:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e064:	685b      	ldr	r3, [r3, #4]
 801e066:	930c      	str	r3, [sp, #48]	; 0x30
 801e068:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801e06c:	930a      	str	r3, [sp, #40]	; 0x28
 801e06e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e070:	2b00      	cmp	r3, #0
 801e072:	dc03      	bgt.n	801e07c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e074:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801e076:	2b00      	cmp	r3, #0
 801e078:	f340 83cd 	ble.w	801e816 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801e07c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e07e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e082:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e086:	1e48      	subs	r0, r1, #1
 801e088:	1e55      	subs	r5, r2, #1
 801e08a:	9b08      	ldr	r3, [sp, #32]
 801e08c:	2b00      	cmp	r3, #0
 801e08e:	f340 81a5 	ble.w	801e3dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801e092:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801e094:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e096:	1436      	asrs	r6, r6, #16
 801e098:	ea4f 4323 	mov.w	r3, r3, asr #16
 801e09c:	d406      	bmi.n	801e0ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e09e:	4286      	cmp	r6, r0
 801e0a0:	da04      	bge.n	801e0ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e0a2:	2b00      	cmp	r3, #0
 801e0a4:	db02      	blt.n	801e0ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e0a6:	42ab      	cmp	r3, r5
 801e0a8:	f2c0 8199 	blt.w	801e3de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801e0ac:	3601      	adds	r6, #1
 801e0ae:	f100 8186 	bmi.w	801e3be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e0b2:	42b1      	cmp	r1, r6
 801e0b4:	f2c0 8183 	blt.w	801e3be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e0b8:	3301      	adds	r3, #1
 801e0ba:	f100 8180 	bmi.w	801e3be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e0be:	429a      	cmp	r2, r3
 801e0c0:	f2c0 817d 	blt.w	801e3be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e0c4:	9b08      	ldr	r3, [sp, #32]
 801e0c6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801e0ca:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801e0cc:	9313      	str	r3, [sp, #76]	; 0x4c
 801e0ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e0d0:	2b00      	cmp	r3, #0
 801e0d2:	f340 81a6 	ble.w	801e422 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801e0d6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e0d8:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801e0da:	1418      	asrs	r0, r3, #16
 801e0dc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e0de:	142d      	asrs	r5, r5, #16
 801e0e0:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801e0e4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e0e6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801e0ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e0ec:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801e0f0:	f100 81fa 	bmi.w	801e4e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801e0f4:	f102 3eff 	add.w	lr, r2, #4294967295
 801e0f8:	4575      	cmp	r5, lr
 801e0fa:	f280 81f5 	bge.w	801e4e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801e0fe:	2800      	cmp	r0, #0
 801e100:	f2c0 81f2 	blt.w	801e4e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801e104:	f103 3eff 	add.w	lr, r3, #4294967295
 801e108:	4570      	cmp	r0, lr
 801e10a:	f280 81ed 	bge.w	801e4e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801e10e:	b212      	sxth	r2, r2
 801e110:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e112:	fa1f fe81 	uxth.w	lr, r1
 801e116:	fb00 5002 	mla	r0, r0, r2, r5
 801e11a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801e11e:	eb03 0a00 	add.w	sl, r3, r0
 801e122:	f813 9000 	ldrb.w	r9, [r3, r0]
 801e126:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801e12a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e12e:	b29b      	uxth	r3, r3
 801e130:	f1bc 0f00 	cmp.w	ip, #0
 801e134:	f000 81bb 	beq.w	801e4ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801e138:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801e13c:	eb0a 0b02 	add.w	fp, sl, r2
 801e140:	fa1f fa8c 	uxth.w	sl, ip
 801e144:	940d      	str	r4, [sp, #52]	; 0x34
 801e146:	fb0a fe0e 	mul.w	lr, sl, lr
 801e14a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e14e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801e152:	eba5 050e 	sub.w	r5, r5, lr
 801e156:	940e      	str	r4, [sp, #56]	; 0x38
 801e158:	fa1f fa8a 	uxth.w	sl, sl
 801e15c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e15e:	b2ad      	uxth	r5, r5
 801e160:	eba3 030a 	sub.w	r3, r3, sl
 801e164:	fb08 f505 	mul.w	r5, r8, r5
 801e168:	b29b      	uxth	r3, r3
 801e16a:	fb09 5303 	mla	r3, r9, r3, r5
 801e16e:	fb0a 3304 	mla	r3, sl, r4, r3
 801e172:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801e174:	fb0e 3304 	mla	r3, lr, r4, r3
 801e178:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e17c:	2b00      	cmp	r3, #0
 801e17e:	f000 8111 	beq.w	801e3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e182:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e184:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e188:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801e18c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801e190:	f000 8192 	beq.w	801e4b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801e194:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801e198:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e19c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e1a0:	fb0a fe0e 	mul.w	lr, sl, lr
 801e1a4:	fb09 f000 	mul.w	r0, r9, r0
 801e1a8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801e1ac:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801e1b0:	f100 0b20 	add.w	fp, r0, #32
 801e1b4:	44ce      	add	lr, r9
 801e1b6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801e1ba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801e1be:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e1c2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e1c6:	ea4e 0909 	orr.w	r9, lr, r9
 801e1ca:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801e1ce:	8868      	ldrh	r0, [r5, #2]
 801e1d0:	d019      	beq.n	801e206 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801e1d2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801e1d6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e1da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e1de:	fb0a fe0e 	mul.w	lr, sl, lr
 801e1e2:	fb08 f800 	mul.w	r8, r8, r0
 801e1e6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801e1ea:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801e1ee:	f108 0b20 	add.w	fp, r8, #32
 801e1f2:	4486      	add	lr, r0
 801e1f4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801e1f8:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801e1fc:	0a00      	lsrs	r0, r0, #8
 801e1fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e202:	ea4e 0000 	orr.w	r0, lr, r0
 801e206:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801e20a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801e20e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801e212:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e216:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801e21a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e21e:	ea4e 0909 	orr.w	r9, lr, r9
 801e222:	ea4a 0000 	orr.w	r0, sl, r0
 801e226:	f1bc 0f00 	cmp.w	ip, #0
 801e22a:	f000 8147 	beq.w	801e4bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801e22e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801e232:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e234:	3a01      	subs	r2, #1
 801e236:	2cff      	cmp	r4, #255	; 0xff
 801e238:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801e23c:	f102 0202 	add.w	r2, r2, #2
 801e240:	eb05 0e02 	add.w	lr, r5, r2
 801e244:	5aaa      	ldrh	r2, [r5, r2]
 801e246:	d018      	beq.n	801e27a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801e248:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801e24c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e250:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e254:	fb04 fa02 	mul.w	sl, r4, r2
 801e258:	fb08 f805 	mul.w	r8, r8, r5
 801e25c:	f10a 0520 	add.w	r5, sl, #32
 801e260:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801e264:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e268:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801e26c:	4442      	add	r2, r8
 801e26e:	0a2d      	lsrs	r5, r5, #8
 801e270:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801e274:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e278:	432a      	orrs	r2, r5
 801e27a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801e27c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801e280:	2cff      	cmp	r4, #255	; 0xff
 801e282:	d01a      	beq.n	801e2ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801e284:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801e288:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e28c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e290:	fb04 fa05 	mul.w	sl, r4, r5
 801e294:	fb08 f80e 	mul.w	r8, r8, lr
 801e298:	f10a 0e20 	add.w	lr, sl, #32
 801e29c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801e2a0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e2a4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801e2a8:	4445      	add	r5, r8
 801e2aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e2ae:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801e2b2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801e2b6:	ea45 050e 	orr.w	r5, r5, lr
 801e2ba:	fb1c fe01 	smulbb	lr, ip, r1
 801e2be:	f1cc 0810 	rsb	r8, ip, #16
 801e2c2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801e2c6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e2ca:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801e2ce:	eba8 0801 	sub.w	r8, r8, r1
 801e2d2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801e2d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e2da:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801e2de:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e2e2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801e2e6:	ea4a 0202 	orr.w	r2, sl, r2
 801e2ea:	4341      	muls	r1, r0
 801e2ec:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801e2f0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e2f4:	fb09 1108 	mla	r1, r9, r8, r1
 801e2f8:	ea4b 0505 	orr.w	r5, fp, r5
 801e2fc:	fb0c 1102 	mla	r1, ip, r2, r1
 801e300:	fb0e 1e05 	mla	lr, lr, r5, r1
 801e304:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801e308:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e30c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e310:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e314:	ea42 0e0e 	orr.w	lr, r2, lr
 801e318:	fa1f f28e 	uxth.w	r2, lr
 801e31c:	2bff      	cmp	r3, #255	; 0xff
 801e31e:	d103      	bne.n	801e328 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e320:	9912      	ldr	r1, [sp, #72]	; 0x48
 801e322:	29ff      	cmp	r1, #255	; 0xff
 801e324:	f000 80de 	beq.w	801e4e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801e328:	990a      	ldr	r1, [sp, #40]	; 0x28
 801e32a:	1215      	asrs	r5, r2, #8
 801e32c:	8838      	ldrh	r0, [r7, #0]
 801e32e:	434b      	muls	r3, r1
 801e330:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e334:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e336:	f103 0c01 	add.w	ip, r3, #1
 801e33a:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801e33e:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801e342:	fa5f fc83 	uxtb.w	ip, r3
 801e346:	1203      	asrs	r3, r0, #8
 801e348:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e34c:	fb13 f30c 	smulbb	r3, r3, ip
 801e350:	fb05 3501 	mla	r5, r5, r1, r3
 801e354:	10c3      	asrs	r3, r0, #3
 801e356:	10d1      	asrs	r1, r2, #3
 801e358:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e35c:	00d2      	lsls	r2, r2, #3
 801e35e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e362:	b2ad      	uxth	r5, r5
 801e364:	fb13 f30c 	smulbb	r3, r3, ip
 801e368:	b2d2      	uxtb	r2, r2
 801e36a:	fb01 3104 	mla	r1, r1, r4, r3
 801e36e:	00c3      	lsls	r3, r0, #3
 801e370:	b2db      	uxtb	r3, r3
 801e372:	b289      	uxth	r1, r1
 801e374:	fb13 f30c 	smulbb	r3, r3, ip
 801e378:	fb02 3304 	mla	r3, r2, r4, r3
 801e37c:	b29a      	uxth	r2, r3
 801e37e:	1c6b      	adds	r3, r5, #1
 801e380:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e384:	1c53      	adds	r3, r2, #1
 801e386:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e38a:	1c4a      	adds	r2, r1, #1
 801e38c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e390:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e394:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e398:	0949      	lsrs	r1, r1, #5
 801e39a:	432b      	orrs	r3, r5
 801e39c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e3a0:	430b      	orrs	r3, r1
 801e3a2:	803b      	strh	r3, [r7, #0]
 801e3a4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e3a6:	3702      	adds	r7, #2
 801e3a8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801e3aa:	4413      	add	r3, r2
 801e3ac:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801e3ae:	9321      	str	r3, [sp, #132]	; 0x84
 801e3b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e3b2:	441a      	add	r2, r3
 801e3b4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e3b6:	3b01      	subs	r3, #1
 801e3b8:	9222      	str	r2, [sp, #136]	; 0x88
 801e3ba:	9313      	str	r3, [sp, #76]	; 0x4c
 801e3bc:	e687      	b.n	801e0ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e3be:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e3c0:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801e3c2:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801e3c4:	4433      	add	r3, r6
 801e3c6:	9321      	str	r3, [sp, #132]	; 0x84
 801e3c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e3ca:	441c      	add	r4, r3
 801e3cc:	9b08      	ldr	r3, [sp, #32]
 801e3ce:	3b01      	subs	r3, #1
 801e3d0:	9422      	str	r4, [sp, #136]	; 0x88
 801e3d2:	9308      	str	r3, [sp, #32]
 801e3d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e3d6:	3302      	adds	r3, #2
 801e3d8:	9309      	str	r3, [sp, #36]	; 0x24
 801e3da:	e656      	b.n	801e08a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801e3dc:	d028      	beq.n	801e430 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801e3de:	9b08      	ldr	r3, [sp, #32]
 801e3e0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801e3e2:	3b01      	subs	r3, #1
 801e3e4:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801e3e6:	fb00 5003 	mla	r0, r0, r3, r5
 801e3ea:	1400      	asrs	r0, r0, #16
 801e3ec:	f53f ae6a 	bmi.w	801e0c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e3f0:	3901      	subs	r1, #1
 801e3f2:	4288      	cmp	r0, r1
 801e3f4:	f6bf ae66 	bge.w	801e0c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e3f8:	9924      	ldr	r1, [sp, #144]	; 0x90
 801e3fa:	9822      	ldr	r0, [sp, #136]	; 0x88
 801e3fc:	fb01 0303 	mla	r3, r1, r3, r0
 801e400:	141b      	asrs	r3, r3, #16
 801e402:	f53f ae5f 	bmi.w	801e0c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e406:	3a01      	subs	r2, #1
 801e408:	4293      	cmp	r3, r2
 801e40a:	f6bf ae5b 	bge.w	801e0c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e40e:	9b08      	ldr	r3, [sp, #32]
 801e410:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801e414:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801e418:	9313      	str	r3, [sp, #76]	; 0x4c
 801e41a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e41c:	2b00      	cmp	r3, #0
 801e41e:	f300 8082 	bgt.w	801e526 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 801e422:	9b08      	ldr	r3, [sp, #32]
 801e424:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e428:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e42a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e42e:	9309      	str	r3, [sp, #36]	; 0x24
 801e430:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e432:	2b00      	cmp	r3, #0
 801e434:	f340 81ef 	ble.w	801e816 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801e438:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e43c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e43e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e442:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e446:	eef0 6a62 	vmov.f32	s13, s5
 801e44a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e44e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e452:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e456:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801e45a:	eef0 6a43 	vmov.f32	s13, s6
 801e45e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e462:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801e466:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e46a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e46e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e472:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e476:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e47a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e47e:	ee12 2a90 	vmov	r2, s5
 801e482:	eef0 2a47 	vmov.f32	s5, s14
 801e486:	fb92 f3f3 	sdiv	r3, r2, r3
 801e48a:	ee13 2a10 	vmov	r2, s6
 801e48e:	9323      	str	r3, [sp, #140]	; 0x8c
 801e490:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e492:	eeb0 3a67 	vmov.f32	s6, s15
 801e496:	fb92 f3f3 	sdiv	r3, r2, r3
 801e49a:	9324      	str	r3, [sp, #144]	; 0x90
 801e49c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e49e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e4a0:	3b01      	subs	r3, #1
 801e4a2:	9311      	str	r3, [sp, #68]	; 0x44
 801e4a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e4a6:	bf08      	it	eq
 801e4a8:	4613      	moveq	r3, r2
 801e4aa:	9308      	str	r3, [sp, #32]
 801e4ac:	e5df      	b.n	801e06e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e4ae:	fb08 f505 	mul.w	r5, r8, r5
 801e4b2:	fb09 5303 	mla	r3, r9, r3, r5
 801e4b6:	e65f      	b.n	801e178 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801e4b8:	4681      	mov	r9, r0
 801e4ba:	e686      	b.n	801e1ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801e4bc:	f1c1 0210 	rsb	r2, r1, #16
 801e4c0:	4341      	muls	r1, r0
 801e4c2:	fb09 1902 	mla	r9, r9, r2, r1
 801e4c6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e4ca:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801e4ce:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e4d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e4d6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801e4da:	ea42 0909 	orr.w	r9, r2, r9
 801e4de:	fa1f f289 	uxth.w	r2, r9
 801e4e2:	e71b      	b.n	801e31c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801e4e4:	803a      	strh	r2, [r7, #0]
 801e4e6:	e75d      	b.n	801e3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e4e8:	f115 0e01 	adds.w	lr, r5, #1
 801e4ec:	f53f af5a 	bmi.w	801e3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e4f0:	4572      	cmp	r2, lr
 801e4f2:	f6ff af57 	blt.w	801e3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e4f6:	f110 0e01 	adds.w	lr, r0, #1
 801e4fa:	f53f af53 	bmi.w	801e3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e4fe:	4573      	cmp	r3, lr
 801e500:	f6ff af50 	blt.w	801e3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e504:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e506:	b21b      	sxth	r3, r3
 801e508:	b212      	sxth	r2, r2
 801e50a:	9502      	str	r5, [sp, #8]
 801e50c:	9301      	str	r3, [sp, #4]
 801e50e:	9200      	str	r2, [sp, #0]
 801e510:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801e514:	e9cd c405 	strd	ip, r4, [sp, #20]
 801e518:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801e51c:	4639      	mov	r1, r7
 801e51e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e520:	f7ff fc02 	bl	801dd28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801e524:	e73e      	b.n	801e3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e526:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e528:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e52c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e52e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801e532:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e534:	fa1f fc82 	uxth.w	ip, r2
 801e538:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e53c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e53e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801e542:	141f      	asrs	r7, r3, #16
 801e544:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e546:	141b      	asrs	r3, r3, #16
 801e548:	fb01 3707 	mla	r7, r1, r7, r3
 801e54c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e54e:	eb03 0a07 	add.w	sl, r3, r7
 801e552:	f813 9007 	ldrb.w	r9, [r3, r7]
 801e556:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e55a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e55e:	b29b      	uxth	r3, r3
 801e560:	2d00      	cmp	r5, #0
 801e562:	f000 813d 	beq.w	801e7e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801e566:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801e56a:	eb0a 0b01 	add.w	fp, sl, r1
 801e56e:	fa1f fa85 	uxth.w	sl, r5
 801e572:	940f      	str	r4, [sp, #60]	; 0x3c
 801e574:	fb0a fc0c 	mul.w	ip, sl, ip
 801e578:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e57c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801e580:	eba0 000c 	sub.w	r0, r0, ip
 801e584:	9410      	str	r4, [sp, #64]	; 0x40
 801e586:	fa1f fa8a 	uxth.w	sl, sl
 801e58a:	b280      	uxth	r0, r0
 801e58c:	eba3 030a 	sub.w	r3, r3, sl
 801e590:	fb08 f000 	mul.w	r0, r8, r0
 801e594:	b29b      	uxth	r3, r3
 801e596:	fb09 0303 	mla	r3, r9, r3, r0
 801e59a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e59c:	fb0a 3300 	mla	r3, sl, r0, r3
 801e5a0:	fb0c 3304 	mla	r3, ip, r4, r3
 801e5a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e5a8:	2b00      	cmp	r3, #0
 801e5aa:	f000 810b 	beq.w	801e7c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801e5ae:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e5b0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e5b4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e5b6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801e5ba:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801e5be:	f000 8114 	beq.w	801e7ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801e5c2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801e5c6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e5ca:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e5ce:	fb0a fc0c 	mul.w	ip, sl, ip
 801e5d2:	fb09 f707 	mul.w	r7, r9, r7
 801e5d6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801e5da:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801e5de:	f107 0b20 	add.w	fp, r7, #32
 801e5e2:	44cc      	add	ip, r9
 801e5e4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801e5e8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e5ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e5f0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e5f4:	ea4c 0909 	orr.w	r9, ip, r9
 801e5f8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801e5fc:	8847      	ldrh	r7, [r0, #2]
 801e5fe:	d019      	beq.n	801e634 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 801e600:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801e604:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e608:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e60c:	fb0a fc0c 	mul.w	ip, sl, ip
 801e610:	fb08 f807 	mul.w	r8, r8, r7
 801e614:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801e618:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801e61c:	f108 0b20 	add.w	fp, r8, #32
 801e620:	44bc      	add	ip, r7
 801e622:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801e626:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e62a:	0a3f      	lsrs	r7, r7, #8
 801e62c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e630:	ea4c 0707 	orr.w	r7, ip, r7
 801e634:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801e638:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801e63c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801e640:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801e644:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e648:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e64c:	ea4c 0909 	orr.w	r9, ip, r9
 801e650:	ea4a 0707 	orr.w	r7, sl, r7
 801e654:	2d00      	cmp	r5, #0
 801e656:	f000 80ca 	beq.w	801e7ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 801e65a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801e65e:	3901      	subs	r1, #1
 801e660:	0049      	lsls	r1, r1, #1
 801e662:	3102      	adds	r1, #2
 801e664:	eb00 0c01 	add.w	ip, r0, r1
 801e668:	5a41      	ldrh	r1, [r0, r1]
 801e66a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e66c:	28ff      	cmp	r0, #255	; 0xff
 801e66e:	d019      	beq.n	801e6a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 801e670:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801e674:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801e676:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e67a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e67e:	fb04 fa01 	mul.w	sl, r4, r1
 801e682:	fb08 f800 	mul.w	r8, r8, r0
 801e686:	f10a 0020 	add.w	r0, sl, #32
 801e68a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801e68e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e692:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801e696:	4441      	add	r1, r8
 801e698:	0a00      	lsrs	r0, r0, #8
 801e69a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801e69e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e6a2:	4301      	orrs	r1, r0
 801e6a4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e6a6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801e6aa:	2cff      	cmp	r4, #255	; 0xff
 801e6ac:	d01a      	beq.n	801e6e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 801e6ae:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801e6b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e6b6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e6ba:	fb04 fa00 	mul.w	sl, r4, r0
 801e6be:	fb08 f80c 	mul.w	r8, r8, ip
 801e6c2:	f10a 0c20 	add.w	ip, sl, #32
 801e6c6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801e6ca:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e6ce:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801e6d2:	4440      	add	r0, r8
 801e6d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e6d8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801e6dc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801e6e0:	ea40 000c 	orr.w	r0, r0, ip
 801e6e4:	fb15 fc02 	smulbb	ip, r5, r2
 801e6e8:	f1c5 0810 	rsb	r8, r5, #16
 801e6ec:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e6f0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e6f4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801e6f8:	eba8 0802 	sub.w	r8, r8, r2
 801e6fc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e700:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e704:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801e708:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e70c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801e710:	ea4a 0101 	orr.w	r1, sl, r1
 801e714:	437a      	muls	r2, r7
 801e716:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801e71a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e71e:	fb09 2208 	mla	r2, r9, r8, r2
 801e722:	ea4b 0000 	orr.w	r0, fp, r0
 801e726:	fb05 2201 	mla	r2, r5, r1, r2
 801e72a:	fb0c 2200 	mla	r2, ip, r0, r2
 801e72e:	0d57      	lsrs	r7, r2, #21
 801e730:	0952      	lsrs	r2, r2, #5
 801e732:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e736:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e73a:	433a      	orrs	r2, r7
 801e73c:	2bff      	cmp	r3, #255	; 0xff
 801e73e:	b292      	uxth	r2, r2
 801e740:	d102      	bne.n	801e748 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801e742:	9912      	ldr	r1, [sp, #72]	; 0x48
 801e744:	29ff      	cmp	r1, #255	; 0xff
 801e746:	d063      	beq.n	801e810 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 801e748:	980a      	ldr	r0, [sp, #40]	; 0x28
 801e74a:	1215      	asrs	r5, r2, #8
 801e74c:	f8be 1000 	ldrh.w	r1, [lr]
 801e750:	4343      	muls	r3, r0
 801e752:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e754:	10cf      	asrs	r7, r1, #3
 801e756:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e75a:	1c58      	adds	r0, r3, #1
 801e75c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e760:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801e764:	1208      	asrs	r0, r1, #8
 801e766:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801e76a:	00c9      	lsls	r1, r1, #3
 801e76c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e770:	b2db      	uxtb	r3, r3
 801e772:	b2c9      	uxtb	r1, r1
 801e774:	fb10 f003 	smulbb	r0, r0, r3
 801e778:	fb11 f103 	smulbb	r1, r1, r3
 801e77c:	fb05 0504 	mla	r5, r5, r4, r0
 801e780:	10d0      	asrs	r0, r2, #3
 801e782:	fb17 f703 	smulbb	r7, r7, r3
 801e786:	00d2      	lsls	r2, r2, #3
 801e788:	b2ad      	uxth	r5, r5
 801e78a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e78e:	b2d2      	uxtb	r2, r2
 801e790:	fb00 7004 	mla	r0, r0, r4, r7
 801e794:	1c6b      	adds	r3, r5, #1
 801e796:	fb02 1204 	mla	r2, r2, r4, r1
 801e79a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e79e:	b292      	uxth	r2, r2
 801e7a0:	b280      	uxth	r0, r0
 801e7a2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e7a6:	1c57      	adds	r7, r2, #1
 801e7a8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e7ac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e7b0:	433d      	orrs	r5, r7
 801e7b2:	1c47      	adds	r7, r0, #1
 801e7b4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801e7b8:	097f      	lsrs	r7, r7, #5
 801e7ba:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e7be:	433d      	orrs	r5, r7
 801e7c0:	f8ae 5000 	strh.w	r5, [lr]
 801e7c4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e7c6:	f10e 0e02 	add.w	lr, lr, #2
 801e7ca:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801e7cc:	4413      	add	r3, r2
 801e7ce:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801e7d0:	9321      	str	r3, [sp, #132]	; 0x84
 801e7d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e7d4:	441a      	add	r2, r3
 801e7d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e7d8:	3b01      	subs	r3, #1
 801e7da:	9222      	str	r2, [sp, #136]	; 0x88
 801e7dc:	9313      	str	r3, [sp, #76]	; 0x4c
 801e7de:	e61c      	b.n	801e41a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801e7e0:	fb08 f000 	mul.w	r0, r8, r0
 801e7e4:	fb09 0303 	mla	r3, r9, r3, r0
 801e7e8:	e6dc      	b.n	801e5a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 801e7ea:	46b9      	mov	r9, r7
 801e7ec:	e704      	b.n	801e5f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 801e7ee:	f1c2 0110 	rsb	r1, r2, #16
 801e7f2:	437a      	muls	r2, r7
 801e7f4:	fb09 2901 	mla	r9, r9, r1, r2
 801e7f8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e7fc:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801e800:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801e804:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e808:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e80c:	4302      	orrs	r2, r0
 801e80e:	e795      	b.n	801e73c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 801e810:	f8ae 2000 	strh.w	r2, [lr]
 801e814:	e7d6      	b.n	801e7c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801e816:	b017      	add	sp, #92	; 0x5c
 801e818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e81c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801e81c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e820:	b085      	sub	sp, #20
 801e822:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801e826:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801e82a:	2800      	cmp	r0, #0
 801e82c:	9103      	str	r1, [sp, #12]
 801e82e:	fb00 7406 	mla	r4, r0, r6, r7
 801e832:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801e836:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801e83a:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801e83e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801e842:	eb02 0904 	add.w	r9, r2, r4
 801e846:	9501      	str	r5, [sp, #4]
 801e848:	f2c0 8141 	blt.w	801eace <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801e84c:	4583      	cmp	fp, r0
 801e84e:	f340 813e 	ble.w	801eace <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801e852:	2f00      	cmp	r7, #0
 801e854:	f2c0 8137 	blt.w	801eac6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801e858:	42be      	cmp	r6, r7
 801e85a:	f340 8134 	ble.w	801eac6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801e85e:	f812 c004 	ldrb.w	ip, [r2, r4]
 801e862:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801e866:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801e86a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801e86e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801e872:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e876:	4355      	muls	r5, r2
 801e878:	fb0c f203 	mul.w	r2, ip, r3
 801e87c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801e880:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801e884:	441d      	add	r5, r3
 801e886:	f102 0320 	add.w	r3, r2, #32
 801e88a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e88e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801e892:	0a1b      	lsrs	r3, r3, #8
 801e894:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e898:	431c      	orrs	r4, r3
 801e89a:	1c7b      	adds	r3, r7, #1
 801e89c:	f100 811c 	bmi.w	801ead8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801e8a0:	429e      	cmp	r6, r3
 801e8a2:	f340 8119 	ble.w	801ead8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801e8a6:	2900      	cmp	r1, #0
 801e8a8:	f000 8119 	beq.w	801eade <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801e8ac:	9a01      	ldr	r2, [sp, #4]
 801e8ae:	f899 3001 	ldrb.w	r3, [r9, #1]
 801e8b2:	8855      	ldrh	r5, [r2, #2]
 801e8b4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801e8b8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801e8bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e8c0:	fb08 f802 	mul.w	r8, r8, r2
 801e8c4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801e8c8:	435d      	muls	r5, r3
 801e8ca:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801e8ce:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e8d2:	44d0      	add	r8, sl
 801e8d4:	f105 0a20 	add.w	sl, r5, #32
 801e8d8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801e8dc:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801e8e0:	0a2d      	lsrs	r5, r5, #8
 801e8e2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e8e6:	432a      	orrs	r2, r5
 801e8e8:	3001      	adds	r0, #1
 801e8ea:	f100 80fe 	bmi.w	801eaea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801e8ee:	4583      	cmp	fp, r0
 801e8f0:	f340 80fb 	ble.w	801eaea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801e8f4:	f1be 0f00 	cmp.w	lr, #0
 801e8f8:	f000 80fc 	beq.w	801eaf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801e8fc:	2f00      	cmp	r7, #0
 801e8fe:	f2c0 80f1 	blt.w	801eae4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801e902:	42be      	cmp	r6, r7
 801e904:	f340 80ee 	ble.w	801eae4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801e908:	9801      	ldr	r0, [sp, #4]
 801e90a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801e90e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801e912:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801e916:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801e91a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801e91e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e922:	fb0a fa00 	mul.w	sl, sl, r0
 801e926:	fb05 f808 	mul.w	r8, r5, r8
 801e92a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801e92e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801e932:	4482      	add	sl, r0
 801e934:	f108 0020 	add.w	r0, r8, #32
 801e938:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801e93c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801e940:	0a00      	lsrs	r0, r0, #8
 801e942:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e946:	ea4b 0b00 	orr.w	fp, fp, r0
 801e94a:	3701      	adds	r7, #1
 801e94c:	f100 80d7 	bmi.w	801eafe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801e950:	42be      	cmp	r6, r7
 801e952:	f340 80d4 	ble.w	801eafe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801e956:	2900      	cmp	r1, #0
 801e958:	f000 80d4 	beq.w	801eb04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801e95c:	3601      	adds	r6, #1
 801e95e:	9801      	ldr	r0, [sp, #4]
 801e960:	f819 7006 	ldrb.w	r7, [r9, r6]
 801e964:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801e968:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801e96c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801e970:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e974:	fb09 f906 	mul.w	r9, r9, r6
 801e978:	fb07 f800 	mul.w	r8, r7, r0
 801e97c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801e980:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801e984:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801e988:	44d1      	add	r9, sl
 801e98a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801e98e:	f108 0020 	add.w	r0, r8, #32
 801e992:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801e996:	0a00      	lsrs	r0, r0, #8
 801e998:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e99c:	4330      	orrs	r0, r6
 801e99e:	b28e      	uxth	r6, r1
 801e9a0:	fa1f f98e 	uxth.w	r9, lr
 801e9a4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801e9a8:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801e9ac:	fb06 f809 	mul.w	r8, r6, r9
 801e9b0:	0136      	lsls	r6, r6, #4
 801e9b2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e9b6:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801e9ba:	9601      	str	r6, [sp, #4]
 801e9bc:	ea4a 0404 	orr.w	r4, sl, r4
 801e9c0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801e9c4:	fa1f f689 	uxth.w	r6, r9
 801e9c8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e9cc:	fb11 f90e 	smulbb	r9, r1, lr
 801e9d0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e9d4:	9602      	str	r6, [sp, #8]
 801e9d6:	4626      	mov	r6, r4
 801e9d8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801e9dc:	f1ce 0410 	rsb	r4, lr, #16
 801e9e0:	ea4a 0202 	orr.w	r2, sl, r2
 801e9e4:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801e9e8:	1a64      	subs	r4, r4, r1
 801e9ea:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801e9ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e9f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e9f6:	434a      	muls	r2, r1
 801e9f8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801e9fc:	ea4a 0000 	orr.w	r0, sl, r0
 801ea00:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801ea04:	fb04 2406 	mla	r4, r4, r6, r2
 801ea08:	9903      	ldr	r1, [sp, #12]
 801ea0a:	fb09 4200 	mla	r2, r9, r0, r4
 801ea0e:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801ea12:	9801      	ldr	r0, [sp, #4]
 801ea14:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801ea18:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ea1c:	8809      	ldrh	r1, [r1, #0]
 801ea1e:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801ea22:	ea44 0b0b 	orr.w	fp, r4, fp
 801ea26:	9c02      	ldr	r4, [sp, #8]
 801ea28:	1b00      	subs	r0, r0, r4
 801ea2a:	9c01      	ldr	r4, [sp, #4]
 801ea2c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801ea30:	eba4 0608 	sub.w	r6, r4, r8
 801ea34:	b280      	uxth	r0, r0
 801ea36:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ea3a:	b2b6      	uxth	r6, r6
 801ea3c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ea40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ea44:	4373      	muls	r3, r6
 801ea46:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ea4a:	fb0c 3300 	mla	r3, ip, r0, r3
 801ea4e:	9802      	ldr	r0, [sp, #8]
 801ea50:	ea42 0e0e 	orr.w	lr, r2, lr
 801ea54:	fb00 3505 	mla	r5, r0, r5, r3
 801ea58:	120b      	asrs	r3, r1, #8
 801ea5a:	10c8      	asrs	r0, r1, #3
 801ea5c:	fb08 5707 	mla	r7, r8, r7, r5
 801ea60:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801ea64:	00c9      	lsls	r1, r1, #3
 801ea66:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ea6a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801ea6e:	fa1f f28e 	uxth.w	r2, lr
 801ea72:	b2c9      	uxtb	r1, r1
 801ea74:	b2ff      	uxtb	r7, r7
 801ea76:	437b      	muls	r3, r7
 801ea78:	4378      	muls	r0, r7
 801ea7a:	434f      	muls	r7, r1
 801ea7c:	1c59      	adds	r1, r3, #1
 801ea7e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ea82:	1213      	asrs	r3, r2, #8
 801ea84:	f023 0307 	bic.w	r3, r3, #7
 801ea88:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ea8c:	1c41      	adds	r1, r0, #1
 801ea8e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ea92:	10d1      	asrs	r1, r2, #3
 801ea94:	021b      	lsls	r3, r3, #8
 801ea96:	f021 0103 	bic.w	r1, r1, #3
 801ea9a:	00d2      	lsls	r2, r2, #3
 801ea9c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801eaa0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801eaa4:	00c9      	lsls	r1, r1, #3
 801eaa6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801eaaa:	430b      	orrs	r3, r1
 801eaac:	1c79      	adds	r1, r7, #1
 801eaae:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801eab2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801eab6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801eaba:	431a      	orrs	r2, r3
 801eabc:	9b03      	ldr	r3, [sp, #12]
 801eabe:	801a      	strh	r2, [r3, #0]
 801eac0:	b005      	add	sp, #20
 801eac2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eac6:	f04f 0c00 	mov.w	ip, #0
 801eaca:	4664      	mov	r4, ip
 801eacc:	e6e5      	b.n	801e89a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801eace:	2300      	movs	r3, #0
 801ead0:	469c      	mov	ip, r3
 801ead2:	461a      	mov	r2, r3
 801ead4:	461c      	mov	r4, r3
 801ead6:	e707      	b.n	801e8e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ead8:	2300      	movs	r3, #0
 801eada:	461a      	mov	r2, r3
 801eadc:	e704      	b.n	801e8e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801eade:	460b      	mov	r3, r1
 801eae0:	460a      	mov	r2, r1
 801eae2:	e701      	b.n	801e8e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801eae4:	2500      	movs	r5, #0
 801eae6:	46ab      	mov	fp, r5
 801eae8:	e72f      	b.n	801e94a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801eaea:	2700      	movs	r7, #0
 801eaec:	463d      	mov	r5, r7
 801eaee:	4638      	mov	r0, r7
 801eaf0:	46bb      	mov	fp, r7
 801eaf2:	e754      	b.n	801e99e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801eaf4:	4677      	mov	r7, lr
 801eaf6:	4675      	mov	r5, lr
 801eaf8:	4670      	mov	r0, lr
 801eafa:	46f3      	mov	fp, lr
 801eafc:	e74f      	b.n	801e99e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801eafe:	2700      	movs	r7, #0
 801eb00:	4638      	mov	r0, r7
 801eb02:	e74c      	b.n	801e99e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801eb04:	460f      	mov	r7, r1
 801eb06:	4608      	mov	r0, r1
 801eb08:	e749      	b.n	801e99e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801eb0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eb0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb10:	b093      	sub	sp, #76	; 0x4c
 801eb12:	9210      	str	r2, [sp, #64]	; 0x40
 801eb14:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801eb16:	9011      	str	r0, [sp, #68]	; 0x44
 801eb18:	910e      	str	r1, [sp, #56]	; 0x38
 801eb1a:	6850      	ldr	r0, [r2, #4]
 801eb1c:	9306      	str	r3, [sp, #24]
 801eb1e:	6812      	ldr	r2, [r2, #0]
 801eb20:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801eb24:	fb00 1303 	mla	r3, r0, r3, r1
 801eb28:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801eb2c:	9307      	str	r3, [sp, #28]
 801eb2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eb30:	681b      	ldr	r3, [r3, #0]
 801eb32:	9308      	str	r3, [sp, #32]
 801eb34:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eb36:	685b      	ldr	r3, [r3, #4]
 801eb38:	9309      	str	r3, [sp, #36]	; 0x24
 801eb3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801eb3c:	2b00      	cmp	r3, #0
 801eb3e:	dc03      	bgt.n	801eb48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801eb40:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801eb42:	2b00      	cmp	r3, #0
 801eb44:	f340 83b6 	ble.w	801f2b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801eb48:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eb4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eb4e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eb52:	1e48      	subs	r0, r1, #1
 801eb54:	1e55      	subs	r5, r2, #1
 801eb56:	9b06      	ldr	r3, [sp, #24]
 801eb58:	2b00      	cmp	r3, #0
 801eb5a:	f340 8165 	ble.w	801ee28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801eb5e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801eb60:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801eb62:	1436      	asrs	r6, r6, #16
 801eb64:	ea4f 4323 	mov.w	r3, r3, asr #16
 801eb68:	d406      	bmi.n	801eb78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801eb6a:	4286      	cmp	r6, r0
 801eb6c:	da04      	bge.n	801eb78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801eb6e:	2b00      	cmp	r3, #0
 801eb70:	db02      	blt.n	801eb78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801eb72:	42ab      	cmp	r3, r5
 801eb74:	f2c0 8159 	blt.w	801ee2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801eb78:	3601      	adds	r6, #1
 801eb7a:	f100 8146 	bmi.w	801ee0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801eb7e:	42b1      	cmp	r1, r6
 801eb80:	f2c0 8143 	blt.w	801ee0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801eb84:	3301      	adds	r3, #1
 801eb86:	f100 8140 	bmi.w	801ee0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801eb8a:	429a      	cmp	r2, r3
 801eb8c:	f2c0 813d 	blt.w	801ee0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801eb90:	9b06      	ldr	r3, [sp, #24]
 801eb92:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801eb96:	9f07      	ldr	r7, [sp, #28]
 801eb98:	930f      	str	r3, [sp, #60]	; 0x3c
 801eb9a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801eb9c:	2b00      	cmp	r3, #0
 801eb9e:	f340 8166 	ble.w	801ee6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801eba2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801eba4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801eba6:	1418      	asrs	r0, r3, #16
 801eba8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ebaa:	142d      	asrs	r5, r5, #16
 801ebac:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801ebb0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ebb2:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801ebb6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ebb8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801ebbc:	f100 81f0 	bmi.w	801efa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ebc0:	f102 3eff 	add.w	lr, r2, #4294967295
 801ebc4:	4575      	cmp	r5, lr
 801ebc6:	f280 81eb 	bge.w	801efa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ebca:	2800      	cmp	r0, #0
 801ebcc:	f2c0 81e8 	blt.w	801efa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ebd0:	f103 3eff 	add.w	lr, r3, #4294967295
 801ebd4:	4570      	cmp	r0, lr
 801ebd6:	f280 81e3 	bge.w	801efa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ebda:	b212      	sxth	r2, r2
 801ebdc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ebde:	fa1f fe81 	uxth.w	lr, r1
 801ebe2:	fb00 5002 	mla	r0, r0, r2, r5
 801ebe6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801ebea:	eb03 0a00 	add.w	sl, r3, r0
 801ebee:	f813 9000 	ldrb.w	r9, [r3, r0]
 801ebf2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801ebf6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ebfa:	b29b      	uxth	r3, r3
 801ebfc:	f1bc 0f00 	cmp.w	ip, #0
 801ec00:	f000 817b 	beq.w	801eefa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801ec04:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801ec08:	eb0a 0b02 	add.w	fp, sl, r2
 801ec0c:	fa1f fa8c 	uxth.w	sl, ip
 801ec10:	940a      	str	r4, [sp, #40]	; 0x28
 801ec12:	fb0a fe0e 	mul.w	lr, sl, lr
 801ec16:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ec1a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801ec1e:	eba5 050e 	sub.w	r5, r5, lr
 801ec22:	940b      	str	r4, [sp, #44]	; 0x2c
 801ec24:	fa1f fa8a 	uxth.w	sl, sl
 801ec28:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ec2a:	b2ad      	uxth	r5, r5
 801ec2c:	eba3 030a 	sub.w	r3, r3, sl
 801ec30:	fb08 f505 	mul.w	r5, r8, r5
 801ec34:	b29b      	uxth	r3, r3
 801ec36:	fb09 5303 	mla	r3, r9, r3, r5
 801ec3a:	fb0a 3304 	mla	r3, sl, r4, r3
 801ec3e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ec40:	fb0e 3304 	mla	r3, lr, r4, r3
 801ec44:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ec48:	2b00      	cmp	r3, #0
 801ec4a:	f000 80d1 	beq.w	801edf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801ec4e:	9c08      	ldr	r4, [sp, #32]
 801ec50:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ec54:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801ec58:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801ec5c:	f000 8152 	beq.w	801ef04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ec60:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801ec64:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ec68:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ec6c:	fb0a fe0e 	mul.w	lr, sl, lr
 801ec70:	fb09 f000 	mul.w	r0, r9, r0
 801ec74:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801ec78:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ec7c:	f100 0b20 	add.w	fp, r0, #32
 801ec80:	44ce      	add	lr, r9
 801ec82:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801ec86:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ec8a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ec8e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ec92:	ea4e 0909 	orr.w	r9, lr, r9
 801ec96:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801ec9a:	8868      	ldrh	r0, [r5, #2]
 801ec9c:	d019      	beq.n	801ecd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801ec9e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801eca2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801eca6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ecaa:	fb0a fe0e 	mul.w	lr, sl, lr
 801ecae:	fb08 f800 	mul.w	r8, r8, r0
 801ecb2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801ecb6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ecba:	f108 0b20 	add.w	fp, r8, #32
 801ecbe:	4486      	add	lr, r0
 801ecc0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801ecc4:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ecc8:	0a00      	lsrs	r0, r0, #8
 801ecca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ecce:	ea4e 0000 	orr.w	r0, lr, r0
 801ecd2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801ecd6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801ecda:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ecde:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ece2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ece6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ecea:	ea4e 0909 	orr.w	r9, lr, r9
 801ecee:	ea4a 0000 	orr.w	r0, sl, r0
 801ecf2:	f1bc 0f00 	cmp.w	ip, #0
 801ecf6:	f000 8107 	beq.w	801ef08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801ecfa:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801ecfe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ed00:	3a01      	subs	r2, #1
 801ed02:	2cff      	cmp	r4, #255	; 0xff
 801ed04:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801ed08:	f102 0202 	add.w	r2, r2, #2
 801ed0c:	eb05 0e02 	add.w	lr, r5, r2
 801ed10:	5aaa      	ldrh	r2, [r5, r2]
 801ed12:	d018      	beq.n	801ed46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801ed14:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801ed18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ed1c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ed20:	fb04 fa02 	mul.w	sl, r4, r2
 801ed24:	fb08 f805 	mul.w	r8, r8, r5
 801ed28:	f10a 0520 	add.w	r5, sl, #32
 801ed2c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801ed30:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ed34:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801ed38:	4442      	add	r2, r8
 801ed3a:	0a2d      	lsrs	r5, r5, #8
 801ed3c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801ed40:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ed44:	432a      	orrs	r2, r5
 801ed46:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ed48:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801ed4c:	2cff      	cmp	r4, #255	; 0xff
 801ed4e:	d01a      	beq.n	801ed86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ed50:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801ed54:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ed58:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ed5c:	fb04 fa05 	mul.w	sl, r4, r5
 801ed60:	fb08 f80e 	mul.w	r8, r8, lr
 801ed64:	f10a 0e20 	add.w	lr, sl, #32
 801ed68:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801ed6c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ed70:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801ed74:	4445      	add	r5, r8
 801ed76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ed7a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801ed7e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801ed82:	ea45 050e 	orr.w	r5, r5, lr
 801ed86:	fb1c fe01 	smulbb	lr, ip, r1
 801ed8a:	f1cc 0810 	rsb	r8, ip, #16
 801ed8e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ed92:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ed96:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801ed9a:	eba8 0801 	sub.w	r8, r8, r1
 801ed9e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801eda2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801eda6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801edaa:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801edae:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801edb2:	ea4a 0202 	orr.w	r2, sl, r2
 801edb6:	4341      	muls	r1, r0
 801edb8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801edbc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801edc0:	fb09 1108 	mla	r1, r9, r8, r1
 801edc4:	ea4b 0505 	orr.w	r5, fp, r5
 801edc8:	fb0c 1102 	mla	r1, ip, r2, r1
 801edcc:	fb0e 1e05 	mla	lr, lr, r5, r1
 801edd0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801edd4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801edd8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eddc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ede0:	ea42 0e0e 	orr.w	lr, r2, lr
 801ede4:	fa1f f28e 	uxth.w	r2, lr
 801ede8:	2bff      	cmp	r3, #255	; 0xff
 801edea:	f040 80a1 	bne.w	801ef30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801edee:	803a      	strh	r2, [r7, #0]
 801edf0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801edf2:	3702      	adds	r7, #2
 801edf4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801edf6:	4413      	add	r3, r2
 801edf8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801edfa:	931d      	str	r3, [sp, #116]	; 0x74
 801edfc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801edfe:	441a      	add	r2, r3
 801ee00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ee02:	3b01      	subs	r3, #1
 801ee04:	921e      	str	r2, [sp, #120]	; 0x78
 801ee06:	930f      	str	r3, [sp, #60]	; 0x3c
 801ee08:	e6c7      	b.n	801eb9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ee0a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ee0c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801ee0e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801ee10:	4433      	add	r3, r6
 801ee12:	931d      	str	r3, [sp, #116]	; 0x74
 801ee14:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ee16:	441c      	add	r4, r3
 801ee18:	9b06      	ldr	r3, [sp, #24]
 801ee1a:	3b01      	subs	r3, #1
 801ee1c:	941e      	str	r4, [sp, #120]	; 0x78
 801ee1e:	9306      	str	r3, [sp, #24]
 801ee20:	9b07      	ldr	r3, [sp, #28]
 801ee22:	3302      	adds	r3, #2
 801ee24:	9307      	str	r3, [sp, #28]
 801ee26:	e696      	b.n	801eb56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ee28:	d028      	beq.n	801ee7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ee2a:	9b06      	ldr	r3, [sp, #24]
 801ee2c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ee2e:	3b01      	subs	r3, #1
 801ee30:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801ee32:	fb00 5003 	mla	r0, r0, r3, r5
 801ee36:	1400      	asrs	r0, r0, #16
 801ee38:	f53f aeaa 	bmi.w	801eb90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ee3c:	3901      	subs	r1, #1
 801ee3e:	4288      	cmp	r0, r1
 801ee40:	f6bf aea6 	bge.w	801eb90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ee44:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ee46:	981e      	ldr	r0, [sp, #120]	; 0x78
 801ee48:	fb01 0303 	mla	r3, r1, r3, r0
 801ee4c:	141b      	asrs	r3, r3, #16
 801ee4e:	f53f ae9f 	bmi.w	801eb90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ee52:	3a01      	subs	r2, #1
 801ee54:	4293      	cmp	r3, r2
 801ee56:	f6bf ae9b 	bge.w	801eb90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ee5a:	9b06      	ldr	r3, [sp, #24]
 801ee5c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ee60:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801ee64:	930f      	str	r3, [sp, #60]	; 0x3c
 801ee66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ee68:	2b00      	cmp	r3, #0
 801ee6a:	f300 80b6 	bgt.w	801efda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801ee6e:	9b06      	ldr	r3, [sp, #24]
 801ee70:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ee74:	9b07      	ldr	r3, [sp, #28]
 801ee76:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ee7a:	9307      	str	r3, [sp, #28]
 801ee7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ee7e:	2b00      	cmp	r3, #0
 801ee80:	f340 8218 	ble.w	801f2b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801ee84:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ee88:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ee8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ee8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ee92:	eef0 6a62 	vmov.f32	s13, s5
 801ee96:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ee9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ee9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eea2:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801eea6:	eef0 6a43 	vmov.f32	s13, s6
 801eeaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eeae:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801eeb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eeb6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eeba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eebe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eec2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eec6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eeca:	ee12 2a90 	vmov	r2, s5
 801eece:	eef0 2a47 	vmov.f32	s5, s14
 801eed2:	fb92 f3f3 	sdiv	r3, r2, r3
 801eed6:	ee13 2a10 	vmov	r2, s6
 801eeda:	931f      	str	r3, [sp, #124]	; 0x7c
 801eedc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801eede:	eeb0 3a67 	vmov.f32	s6, s15
 801eee2:	fb92 f3f3 	sdiv	r3, r2, r3
 801eee6:	9320      	str	r3, [sp, #128]	; 0x80
 801eee8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801eeea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801eeec:	3b01      	subs	r3, #1
 801eeee:	930e      	str	r3, [sp, #56]	; 0x38
 801eef0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801eef2:	bf08      	it	eq
 801eef4:	4613      	moveq	r3, r2
 801eef6:	9306      	str	r3, [sp, #24]
 801eef8:	e61f      	b.n	801eb3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801eefa:	fb08 f505 	mul.w	r5, r8, r5
 801eefe:	fb09 5303 	mla	r3, r9, r3, r5
 801ef02:	e69f      	b.n	801ec44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801ef04:	4681      	mov	r9, r0
 801ef06:	e6c6      	b.n	801ec96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801ef08:	f1c1 0210 	rsb	r2, r1, #16
 801ef0c:	4341      	muls	r1, r0
 801ef0e:	fb09 1902 	mla	r9, r9, r2, r1
 801ef12:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ef16:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801ef1a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ef1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ef22:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801ef26:	ea42 0909 	orr.w	r9, r2, r9
 801ef2a:	fa1f f289 	uxth.w	r2, r9
 801ef2e:	e75b      	b.n	801ede8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 801ef30:	f8b7 c000 	ldrh.w	ip, [r7]
 801ef34:	43db      	mvns	r3, r3
 801ef36:	ea4f 202c 	mov.w	r0, ip, asr #8
 801ef3a:	fa5f fe83 	uxtb.w	lr, r3
 801ef3e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ef42:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ef46:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801ef4a:	fb00 f00e 	mul.w	r0, r0, lr
 801ef4e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ef52:	b2db      	uxtb	r3, r3
 801ef54:	1c41      	adds	r1, r0, #1
 801ef56:	fb05 f50e 	mul.w	r5, r5, lr
 801ef5a:	fb03 f30e 	mul.w	r3, r3, lr
 801ef5e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ef62:	1211      	asrs	r1, r2, #8
 801ef64:	f021 0107 	bic.w	r1, r1, #7
 801ef68:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ef6c:	48d3      	ldr	r0, [pc, #844]	; (801f2bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801ef6e:	b2c9      	uxtb	r1, r1
 801ef70:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801ef74:	1c69      	adds	r1, r5, #1
 801ef76:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801ef7a:	10d1      	asrs	r1, r2, #3
 801ef7c:	00d2      	lsls	r2, r2, #3
 801ef7e:	f021 0103 	bic.w	r1, r1, #3
 801ef82:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801ef86:	00c9      	lsls	r1, r1, #3
 801ef88:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ef8c:	4301      	orrs	r1, r0
 801ef8e:	1c58      	adds	r0, r3, #1
 801ef90:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801ef94:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ef98:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ef9c:	430a      	orrs	r2, r1
 801ef9e:	e726      	b.n	801edee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801efa0:	f115 0e01 	adds.w	lr, r5, #1
 801efa4:	f53f af24 	bmi.w	801edf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801efa8:	4572      	cmp	r2, lr
 801efaa:	f6ff af21 	blt.w	801edf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801efae:	f110 0e01 	adds.w	lr, r0, #1
 801efb2:	f53f af1d 	bmi.w	801edf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801efb6:	4573      	cmp	r3, lr
 801efb8:	f6ff af1a 	blt.w	801edf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801efbc:	b21b      	sxth	r3, r3
 801efbe:	b212      	sxth	r2, r2
 801efc0:	9301      	str	r3, [sp, #4]
 801efc2:	9200      	str	r2, [sp, #0]
 801efc4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801efc8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801efcc:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801efd0:	4639      	mov	r1, r7
 801efd2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801efd4:	f7ff fc22 	bl	801e81c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801efd8:	e70a      	b.n	801edf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801efda:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801efdc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801efe0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801efe2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801efe6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801efe8:	fa1f fc82 	uxth.w	ip, r2
 801efec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eff0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801eff2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801eff6:	141f      	asrs	r7, r3, #16
 801eff8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801effa:	141b      	asrs	r3, r3, #16
 801effc:	fb01 3707 	mla	r7, r1, r7, r3
 801f000:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f002:	eb03 0a07 	add.w	sl, r3, r7
 801f006:	f813 9007 	ldrb.w	r9, [r3, r7]
 801f00a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801f00e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f012:	b29b      	uxth	r3, r3
 801f014:	2d00      	cmp	r5, #0
 801f016:	f000 80fe 	beq.w	801f216 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801f01a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801f01e:	eb0a 0b01 	add.w	fp, sl, r1
 801f022:	fa1f fa85 	uxth.w	sl, r5
 801f026:	940c      	str	r4, [sp, #48]	; 0x30
 801f028:	fb0a fc0c 	mul.w	ip, sl, ip
 801f02c:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f030:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801f034:	eba0 000c 	sub.w	r0, r0, ip
 801f038:	940d      	str	r4, [sp, #52]	; 0x34
 801f03a:	fa1f fa8a 	uxth.w	sl, sl
 801f03e:	b280      	uxth	r0, r0
 801f040:	eba3 030a 	sub.w	r3, r3, sl
 801f044:	fb08 f000 	mul.w	r0, r8, r0
 801f048:	b29b      	uxth	r3, r3
 801f04a:	fb09 0303 	mla	r3, r9, r3, r0
 801f04e:	980c      	ldr	r0, [sp, #48]	; 0x30
 801f050:	fb0a 3300 	mla	r3, sl, r0, r3
 801f054:	fb0c 3304 	mla	r3, ip, r4, r3
 801f058:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f05c:	2b00      	cmp	r3, #0
 801f05e:	f000 80cc 	beq.w	801f1fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801f062:	9808      	ldr	r0, [sp, #32]
 801f064:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801f068:	9c08      	ldr	r4, [sp, #32]
 801f06a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801f06e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801f072:	f000 80d5 	beq.w	801f220 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801f076:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801f07a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f07e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f082:	fb0a fc0c 	mul.w	ip, sl, ip
 801f086:	fb09 f707 	mul.w	r7, r9, r7
 801f08a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801f08e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801f092:	f107 0b20 	add.w	fp, r7, #32
 801f096:	44cc      	add	ip, r9
 801f098:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801f09c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f0a0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f0a4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f0a8:	ea4c 0909 	orr.w	r9, ip, r9
 801f0ac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801f0b0:	8847      	ldrh	r7, [r0, #2]
 801f0b2:	d019      	beq.n	801f0e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 801f0b4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801f0b8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f0bc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f0c0:	fb0a fc0c 	mul.w	ip, sl, ip
 801f0c4:	fb08 f807 	mul.w	r8, r8, r7
 801f0c8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801f0cc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801f0d0:	f108 0b20 	add.w	fp, r8, #32
 801f0d4:	44bc      	add	ip, r7
 801f0d6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801f0da:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f0de:	0a3f      	lsrs	r7, r7, #8
 801f0e0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f0e4:	ea4c 0707 	orr.w	r7, ip, r7
 801f0e8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801f0ec:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801f0f0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801f0f4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f0f8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f0fc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f100:	ea4c 0909 	orr.w	r9, ip, r9
 801f104:	ea4a 0707 	orr.w	r7, sl, r7
 801f108:	2d00      	cmp	r5, #0
 801f10a:	f000 808b 	beq.w	801f224 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801f10e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801f112:	3901      	subs	r1, #1
 801f114:	0049      	lsls	r1, r1, #1
 801f116:	3102      	adds	r1, #2
 801f118:	eb00 0c01 	add.w	ip, r0, r1
 801f11c:	5a41      	ldrh	r1, [r0, r1]
 801f11e:	980c      	ldr	r0, [sp, #48]	; 0x30
 801f120:	28ff      	cmp	r0, #255	; 0xff
 801f122:	d019      	beq.n	801f158 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 801f124:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801f128:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801f12a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f12e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f132:	fb04 fa01 	mul.w	sl, r4, r1
 801f136:	fb08 f800 	mul.w	r8, r8, r0
 801f13a:	f10a 0020 	add.w	r0, sl, #32
 801f13e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801f142:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f146:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801f14a:	4441      	add	r1, r8
 801f14c:	0a00      	lsrs	r0, r0, #8
 801f14e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801f152:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f156:	4301      	orrs	r1, r0
 801f158:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f15a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801f15e:	2cff      	cmp	r4, #255	; 0xff
 801f160:	d01a      	beq.n	801f198 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 801f162:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801f166:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f16a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f16e:	fb04 fa00 	mul.w	sl, r4, r0
 801f172:	fb08 f80c 	mul.w	r8, r8, ip
 801f176:	f10a 0c20 	add.w	ip, sl, #32
 801f17a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801f17e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f182:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801f186:	4440      	add	r0, r8
 801f188:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f18c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801f190:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f194:	ea40 000c 	orr.w	r0, r0, ip
 801f198:	fb15 fc02 	smulbb	ip, r5, r2
 801f19c:	f1c5 0810 	rsb	r8, r5, #16
 801f1a0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801f1a4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f1a8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801f1ac:	eba8 0802 	sub.w	r8, r8, r2
 801f1b0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801f1b4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f1b8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801f1bc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f1c0:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801f1c4:	ea4a 0101 	orr.w	r1, sl, r1
 801f1c8:	437a      	muls	r2, r7
 801f1ca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801f1ce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f1d2:	fb09 2208 	mla	r2, r9, r8, r2
 801f1d6:	ea4b 0000 	orr.w	r0, fp, r0
 801f1da:	fb05 2201 	mla	r2, r5, r1, r2
 801f1de:	fb0c 2200 	mla	r2, ip, r0, r2
 801f1e2:	0d57      	lsrs	r7, r2, #21
 801f1e4:	0952      	lsrs	r2, r2, #5
 801f1e6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f1ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f1ee:	433a      	orrs	r2, r7
 801f1f0:	2bff      	cmp	r3, #255	; 0xff
 801f1f2:	b292      	uxth	r2, r2
 801f1f4:	d127      	bne.n	801f246 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 801f1f6:	f8ae 2000 	strh.w	r2, [lr]
 801f1fa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801f1fc:	f10e 0e02 	add.w	lr, lr, #2
 801f200:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801f202:	4413      	add	r3, r2
 801f204:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801f206:	931d      	str	r3, [sp, #116]	; 0x74
 801f208:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f20a:	441a      	add	r2, r3
 801f20c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f20e:	3b01      	subs	r3, #1
 801f210:	921e      	str	r2, [sp, #120]	; 0x78
 801f212:	930f      	str	r3, [sp, #60]	; 0x3c
 801f214:	e627      	b.n	801ee66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f216:	fb08 f000 	mul.w	r0, r8, r0
 801f21a:	fb09 0303 	mla	r3, r9, r3, r0
 801f21e:	e71b      	b.n	801f058 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 801f220:	46b9      	mov	r9, r7
 801f222:	e743      	b.n	801f0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 801f224:	f1c2 0110 	rsb	r1, r2, #16
 801f228:	437a      	muls	r2, r7
 801f22a:	fb09 2901 	mla	r9, r9, r1, r2
 801f22e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f232:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801f236:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801f23a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f23e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f242:	4302      	orrs	r2, r0
 801f244:	e7d4      	b.n	801f1f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 801f246:	f8be 7000 	ldrh.w	r7, [lr]
 801f24a:	43db      	mvns	r3, r3
 801f24c:	4c1b      	ldr	r4, [pc, #108]	; (801f2bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801f24e:	1238      	asrs	r0, r7, #8
 801f250:	fa5f fc83 	uxtb.w	ip, r3
 801f254:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f258:	10fd      	asrs	r5, r7, #3
 801f25a:	00fb      	lsls	r3, r7, #3
 801f25c:	fb00 f00c 	mul.w	r0, r0, ip
 801f260:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f264:	b2db      	uxtb	r3, r3
 801f266:	fb05 f10c 	mul.w	r1, r5, ip
 801f26a:	1c45      	adds	r5, r0, #1
 801f26c:	fb03 f30c 	mul.w	r3, r3, ip
 801f270:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801f274:	1215      	asrs	r5, r2, #8
 801f276:	f025 0507 	bic.w	r5, r5, #7
 801f27a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801f27e:	1c4d      	adds	r5, r1, #1
 801f280:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801f284:	10d1      	asrs	r1, r2, #3
 801f286:	b2c0      	uxtb	r0, r0
 801f288:	f021 0103 	bic.w	r1, r1, #3
 801f28c:	00d2      	lsls	r2, r2, #3
 801f28e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801f292:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801f296:	00c9      	lsls	r1, r1, #3
 801f298:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f29c:	4308      	orrs	r0, r1
 801f29e:	1c59      	adds	r1, r3, #1
 801f2a0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f2a4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f2a8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801f2ac:	4318      	orrs	r0, r3
 801f2ae:	f8ae 0000 	strh.w	r0, [lr]
 801f2b2:	e7a2      	b.n	801f1fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801f2b4:	b013      	add	sp, #76	; 0x4c
 801f2b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f2ba:	bf00      	nop
 801f2bc:	fffff800 	.word	0xfffff800

0801f2c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801f2c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f2c4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801f2c8:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801f2cc:	fb05 4c03 	mla	ip, r5, r3, r4
 801f2d0:	2d00      	cmp	r5, #0
 801f2d2:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801f2d6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f2da:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801f2de:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801f2e2:	8808      	ldrh	r0, [r1, #0]
 801f2e4:	f2c0 80a7 	blt.w	801f436 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801f2e8:	45aa      	cmp	sl, r5
 801f2ea:	f340 80a4 	ble.w	801f436 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801f2ee:	2c00      	cmp	r4, #0
 801f2f0:	f2c0 809f 	blt.w	801f432 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801f2f4:	42a3      	cmp	r3, r4
 801f2f6:	f340 809c 	ble.w	801f432 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801f2fa:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801f2fe:	1c62      	adds	r2, r4, #1
 801f300:	f100 809c 	bmi.w	801f43c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801f304:	4293      	cmp	r3, r2
 801f306:	f340 8099 	ble.w	801f43c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801f30a:	f1b9 0f00 	cmp.w	r9, #0
 801f30e:	f000 8095 	beq.w	801f43c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801f312:	f8be c002 	ldrh.w	ip, [lr, #2]
 801f316:	3501      	adds	r5, #1
 801f318:	f100 8094 	bmi.w	801f444 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801f31c:	45aa      	cmp	sl, r5
 801f31e:	f340 8091 	ble.w	801f444 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801f322:	2f00      	cmp	r7, #0
 801f324:	f000 808e 	beq.w	801f444 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801f328:	2c00      	cmp	r4, #0
 801f32a:	f2c0 8089 	blt.w	801f440 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801f32e:	42a3      	cmp	r3, r4
 801f330:	f340 8086 	ble.w	801f440 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801f334:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801f338:	3401      	adds	r4, #1
 801f33a:	f100 8086 	bmi.w	801f44a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801f33e:	42a3      	cmp	r3, r4
 801f340:	f340 8083 	ble.w	801f44a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801f344:	f1b9 0f00 	cmp.w	r9, #0
 801f348:	d07f      	beq.n	801f44a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801f34a:	3301      	adds	r3, #1
 801f34c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801f350:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801f354:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801f358:	fb19 fe07 	smulbb	lr, r9, r7
 801f35c:	f1c7 0210 	rsb	r2, r7, #16
 801f360:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f364:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801f368:	eba2 0209 	sub.w	r2, r2, r9
 801f36c:	ea44 0808 	orr.w	r8, r4, r8
 801f370:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801f374:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f378:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801f37c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f380:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801f384:	ea44 0c0c 	orr.w	ip, r4, ip
 801f388:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801f38c:	fb04 f40c 	mul.w	r4, r4, ip
 801f390:	fb02 4808 	mla	r8, r2, r8, r4
 801f394:	041a      	lsls	r2, r3, #16
 801f396:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f39a:	b2b4      	uxth	r4, r6
 801f39c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f3a0:	43f6      	mvns	r6, r6
 801f3a2:	4313      	orrs	r3, r2
 801f3a4:	042a      	lsls	r2, r5, #16
 801f3a6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f3aa:	b2f6      	uxtb	r6, r6
 801f3ac:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f3b0:	fb0e 8303 	mla	r3, lr, r3, r8
 801f3b4:	432a      	orrs	r2, r5
 801f3b6:	fb07 3202 	mla	r2, r7, r2, r3
 801f3ba:	10c7      	asrs	r7, r0, #3
 801f3bc:	0d53      	lsrs	r3, r2, #21
 801f3be:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f3c2:	0952      	lsrs	r2, r2, #5
 801f3c4:	fb17 f706 	smulbb	r7, r7, r6
 801f3c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f3cc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f3d0:	431a      	orrs	r2, r3
 801f3d2:	b293      	uxth	r3, r2
 801f3d4:	1202      	asrs	r2, r0, #8
 801f3d6:	121d      	asrs	r5, r3, #8
 801f3d8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f3dc:	00c0      	lsls	r0, r0, #3
 801f3de:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f3e2:	fb12 f206 	smulbb	r2, r2, r6
 801f3e6:	b2c0      	uxtb	r0, r0
 801f3e8:	fb05 2504 	mla	r5, r5, r4, r2
 801f3ec:	10da      	asrs	r2, r3, #3
 801f3ee:	fb10 f006 	smulbb	r0, r0, r6
 801f3f2:	00db      	lsls	r3, r3, #3
 801f3f4:	b2ad      	uxth	r5, r5
 801f3f6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f3fa:	b2db      	uxtb	r3, r3
 801f3fc:	fb02 7204 	mla	r2, r2, r4, r7
 801f400:	fb03 0004 	mla	r0, r3, r4, r0
 801f404:	1c6b      	adds	r3, r5, #1
 801f406:	b292      	uxth	r2, r2
 801f408:	b280      	uxth	r0, r0
 801f40a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f40e:	1c43      	adds	r3, r0, #1
 801f410:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f414:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f418:	1c50      	adds	r0, r2, #1
 801f41a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801f41e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f422:	0952      	lsrs	r2, r2, #5
 801f424:	432b      	orrs	r3, r5
 801f426:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f42a:	4313      	orrs	r3, r2
 801f42c:	800b      	strh	r3, [r1, #0]
 801f42e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f432:	4680      	mov	r8, r0
 801f434:	e763      	b.n	801f2fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801f436:	4684      	mov	ip, r0
 801f438:	4680      	mov	r8, r0
 801f43a:	e76c      	b.n	801f316 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801f43c:	4684      	mov	ip, r0
 801f43e:	e76a      	b.n	801f316 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801f440:	4605      	mov	r5, r0
 801f442:	e779      	b.n	801f338 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801f444:	4603      	mov	r3, r0
 801f446:	4605      	mov	r5, r0
 801f448:	e782      	b.n	801f350 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801f44a:	4603      	mov	r3, r0
 801f44c:	e780      	b.n	801f350 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801f44e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f44e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f452:	b093      	sub	sp, #76	; 0x4c
 801f454:	461d      	mov	r5, r3
 801f456:	9210      	str	r2, [sp, #64]	; 0x40
 801f458:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801f45a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801f45e:	910a      	str	r1, [sp, #40]	; 0x28
 801f460:	920b      	str	r2, [sp, #44]	; 0x2c
 801f462:	6859      	ldr	r1, [r3, #4]
 801f464:	681b      	ldr	r3, [r3, #0]
 801f466:	9011      	str	r0, [sp, #68]	; 0x44
 801f468:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801f46c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f470:	fb01 2707 	mla	r7, r1, r7, r2
 801f474:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801f478:	9307      	str	r3, [sp, #28]
 801f47a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f47c:	681b      	ldr	r3, [r3, #0]
 801f47e:	9309      	str	r3, [sp, #36]	; 0x24
 801f480:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f482:	43db      	mvns	r3, r3
 801f484:	b2db      	uxtb	r3, r3
 801f486:	9308      	str	r3, [sp, #32]
 801f488:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f48a:	2b00      	cmp	r3, #0
 801f48c:	dc03      	bgt.n	801f496 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f48e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f490:	2b00      	cmp	r3, #0
 801f492:	f340 8205 	ble.w	801f8a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f496:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f498:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f49c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f4a0:	1e48      	subs	r0, r1, #1
 801f4a2:	f102 3cff 	add.w	ip, r2, #4294967295
 801f4a6:	2d00      	cmp	r5, #0
 801f4a8:	f340 80da 	ble.w	801f660 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801f4ac:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f4b0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f4b4:	d406      	bmi.n	801f4c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f4b6:	4586      	cmp	lr, r0
 801f4b8:	da04      	bge.n	801f4c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f4ba:	2b00      	cmp	r3, #0
 801f4bc:	db02      	blt.n	801f4c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f4be:	4563      	cmp	r3, ip
 801f4c0:	f2c0 80cf 	blt.w	801f662 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f4c4:	f11e 0e01 	adds.w	lr, lr, #1
 801f4c8:	f100 80c1 	bmi.w	801f64e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f4cc:	4571      	cmp	r1, lr
 801f4ce:	f2c0 80be 	blt.w	801f64e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f4d2:	3301      	adds	r3, #1
 801f4d4:	f100 80bb 	bmi.w	801f64e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f4d8:	429a      	cmp	r2, r3
 801f4da:	f2c0 80b8 	blt.w	801f64e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f4de:	46a9      	mov	r9, r5
 801f4e0:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801f4e4:	f1b9 0f00 	cmp.w	r9, #0
 801f4e8:	f340 80d8 	ble.w	801f69c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801f4ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f4ee:	1421      	asrs	r1, r4, #16
 801f4f0:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f4f4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f4f8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801f4fc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801f500:	f100 8112 	bmi.w	801f728 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801f504:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f508:	4551      	cmp	r1, sl
 801f50a:	f280 810d 	bge.w	801f728 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801f50e:	2800      	cmp	r0, #0
 801f510:	f2c0 810a 	blt.w	801f728 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801f514:	f103 3aff 	add.w	sl, r3, #4294967295
 801f518:	4550      	cmp	r0, sl
 801f51a:	f280 8105 	bge.w	801f728 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801f51e:	fa0f f38e 	sxth.w	r3, lr
 801f522:	fb00 1103 	mla	r1, r0, r3, r1
 801f526:	9809      	ldr	r0, [sp, #36]	; 0x24
 801f528:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801f52c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801f530:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801f534:	f1bc 0f00 	cmp.w	ip, #0
 801f538:	d007      	beq.n	801f54a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801f53a:	005b      	lsls	r3, r3, #1
 801f53c:	eb0a 0003 	add.w	r0, sl, r3
 801f540:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801f544:	930c      	str	r3, [sp, #48]	; 0x30
 801f546:	8843      	ldrh	r3, [r0, #2]
 801f548:	930d      	str	r3, [sp, #52]	; 0x34
 801f54a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801f54e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f552:	fb12 f30c 	smulbb	r3, r2, ip
 801f556:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801f55a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f55e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f562:	10db      	asrs	r3, r3, #3
 801f564:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f568:	ea40 000e 	orr.w	r0, r0, lr
 801f56c:	f1cc 0e10 	rsb	lr, ip, #16
 801f570:	ea4a 0101 	orr.w	r1, sl, r1
 801f574:	9f08      	ldr	r7, [sp, #32]
 801f576:	ebae 0e02 	sub.w	lr, lr, r2
 801f57a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801f57e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801f582:	4351      	muls	r1, r2
 801f584:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801f586:	fb0e 1e00 	mla	lr, lr, r0, r1
 801f58a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f58c:	0410      	lsls	r0, r2, #16
 801f58e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f592:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f596:	4310      	orrs	r0, r2
 801f598:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f59a:	0412      	lsls	r2, r2, #16
 801f59c:	fb03 e000 	mla	r0, r3, r0, lr
 801f5a0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801f5a4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801f5a8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f5ac:	ea42 020e 	orr.w	r2, r2, lr
 801f5b0:	fb03 0302 	mla	r3, r3, r2, r0
 801f5b4:	f8b8 0000 	ldrh.w	r0, [r8]
 801f5b8:	0d5a      	lsrs	r2, r3, #21
 801f5ba:	095b      	lsrs	r3, r3, #5
 801f5bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f5c0:	1201      	asrs	r1, r0, #8
 801f5c2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f5c6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801f5ca:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f5ce:	00c0      	lsls	r0, r0, #3
 801f5d0:	4313      	orrs	r3, r2
 801f5d2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801f5d6:	fb11 f107 	smulbb	r1, r1, r7
 801f5da:	b2c0      	uxtb	r0, r0
 801f5dc:	b29b      	uxth	r3, r3
 801f5de:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f5e2:	fb10 f007 	smulbb	r0, r0, r7
 801f5e6:	fb1e fe07 	smulbb	lr, lr, r7
 801f5ea:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f5ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f5f2:	fb0c 1c02 	mla	ip, ip, r2, r1
 801f5f6:	10d9      	asrs	r1, r3, #3
 801f5f8:	00db      	lsls	r3, r3, #3
 801f5fa:	fa1f fc8c 	uxth.w	ip, ip
 801f5fe:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f602:	b2db      	uxtb	r3, r3
 801f604:	fb01 e102 	mla	r1, r1, r2, lr
 801f608:	fb03 0302 	mla	r3, r3, r2, r0
 801f60c:	b289      	uxth	r1, r1
 801f60e:	b29a      	uxth	r2, r3
 801f610:	f10c 0301 	add.w	r3, ip, #1
 801f614:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f618:	1c53      	adds	r3, r2, #1
 801f61a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f61e:	1c4a      	adds	r2, r1, #1
 801f620:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801f624:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f628:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f62c:	0949      	lsrs	r1, r1, #5
 801f62e:	ea43 030c 	orr.w	r3, r3, ip
 801f632:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f636:	430b      	orrs	r3, r1
 801f638:	f8a8 3000 	strh.w	r3, [r8]
 801f63c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f63e:	f108 0802 	add.w	r8, r8, #2
 801f642:	f109 39ff 	add.w	r9, r9, #4294967295
 801f646:	441c      	add	r4, r3
 801f648:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f64a:	441e      	add	r6, r3
 801f64c:	e74a      	b.n	801f4e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801f64e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f650:	3d01      	subs	r5, #1
 801f652:	441c      	add	r4, r3
 801f654:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f656:	441e      	add	r6, r3
 801f658:	9b07      	ldr	r3, [sp, #28]
 801f65a:	3302      	adds	r3, #2
 801f65c:	9307      	str	r3, [sp, #28]
 801f65e:	e722      	b.n	801f4a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f660:	d022      	beq.n	801f6a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801f662:	1e6b      	subs	r3, r5, #1
 801f664:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f666:	fb00 4003 	mla	r0, r0, r3, r4
 801f66a:	1400      	asrs	r0, r0, #16
 801f66c:	f53f af37 	bmi.w	801f4de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f670:	3901      	subs	r1, #1
 801f672:	4288      	cmp	r0, r1
 801f674:	f6bf af33 	bge.w	801f4de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f678:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f67a:	fb01 6303 	mla	r3, r1, r3, r6
 801f67e:	141b      	asrs	r3, r3, #16
 801f680:	f53f af2d 	bmi.w	801f4de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f684:	3a01      	subs	r2, #1
 801f686:	4293      	cmp	r3, r2
 801f688:	f6bf af29 	bge.w	801f4de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f68c:	46a8      	mov	r8, r5
 801f68e:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801f692:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801f696:	f1b8 0f00 	cmp.w	r8, #0
 801f69a:	dc60      	bgt.n	801f75e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 801f69c:	9b07      	ldr	r3, [sp, #28]
 801f69e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801f6a2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f6a6:	9307      	str	r3, [sp, #28]
 801f6a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f6aa:	2b00      	cmp	r3, #0
 801f6ac:	f340 80f8 	ble.w	801f8a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f6b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f6b4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f6b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f6ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f6be:	eef0 6a62 	vmov.f32	s13, s5
 801f6c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f6c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f6ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f6ce:	ee16 4a90 	vmov	r4, s13
 801f6d2:	eef0 6a43 	vmov.f32	s13, s6
 801f6d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f6da:	ee16 6a90 	vmov	r6, s13
 801f6de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f6e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f6e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f6ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f6ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f6f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f6f6:	ee12 2a90 	vmov	r2, s5
 801f6fa:	eef0 2a47 	vmov.f32	s5, s14
 801f6fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801f702:	ee13 2a10 	vmov	r2, s6
 801f706:	931f      	str	r3, [sp, #124]	; 0x7c
 801f708:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f70a:	eeb0 3a67 	vmov.f32	s6, s15
 801f70e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f712:	9320      	str	r3, [sp, #128]	; 0x80
 801f714:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f716:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801f718:	3b01      	subs	r3, #1
 801f71a:	930a      	str	r3, [sp, #40]	; 0x28
 801f71c:	bf08      	it	eq
 801f71e:	4615      	moveq	r5, r2
 801f720:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f722:	bf18      	it	ne
 801f724:	461d      	movne	r5, r3
 801f726:	e6af      	b.n	801f488 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f728:	f111 0a01 	adds.w	sl, r1, #1
 801f72c:	d486      	bmi.n	801f63c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f72e:	45d6      	cmp	lr, sl
 801f730:	db84      	blt.n	801f63c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f732:	f110 0a01 	adds.w	sl, r0, #1
 801f736:	d481      	bmi.n	801f63c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f738:	4553      	cmp	r3, sl
 801f73a:	f6ff af7f 	blt.w	801f63c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f73e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801f740:	b21b      	sxth	r3, r3
 801f742:	9101      	str	r1, [sp, #4]
 801f744:	4641      	mov	r1, r8
 801f746:	9300      	str	r3, [sp, #0]
 801f748:	fa0f f38e 	sxth.w	r3, lr
 801f74c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801f750:	e9cd c704 	strd	ip, r7, [sp, #16]
 801f754:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f756:	9811      	ldr	r0, [sp, #68]	; 0x44
 801f758:	f7ff fdb2 	bl	801f2c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801f75c:	e76e      	b.n	801f63c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f75e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f760:	1430      	asrs	r0, r6, #16
 801f762:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801f764:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801f768:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f76c:	1423      	asrs	r3, r4, #16
 801f76e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f772:	fb01 3000 	mla	r0, r1, r0, r3
 801f776:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f778:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801f77c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801f780:	8858      	ldrh	r0, [r3, #2]
 801f782:	f1be 0f00 	cmp.w	lr, #0
 801f786:	d00b      	beq.n	801f7a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f788:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801f78c:	3901      	subs	r1, #1
 801f78e:	0049      	lsls	r1, r1, #1
 801f790:	3102      	adds	r1, #2
 801f792:	eb03 0b01 	add.w	fp, r3, r1
 801f796:	5a5b      	ldrh	r3, [r3, r1]
 801f798:	930e      	str	r3, [sp, #56]	; 0x38
 801f79a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801f79e:	930f      	str	r3, [sp, #60]	; 0x3c
 801f7a0:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801f7a4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f7a8:	fb12 f30e 	smulbb	r3, r2, lr
 801f7ac:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801f7b0:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801f7b4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f7b8:	10db      	asrs	r3, r3, #3
 801f7ba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f7be:	ea41 010c 	orr.w	r1, r1, ip
 801f7c2:	f1ce 0c10 	rsb	ip, lr, #16
 801f7c6:	ea4b 0000 	orr.w	r0, fp, r0
 801f7ca:	9f08      	ldr	r7, [sp, #32]
 801f7cc:	ebac 0c02 	sub.w	ip, ip, r2
 801f7d0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801f7d4:	f108 38ff 	add.w	r8, r8, #4294967295
 801f7d8:	4350      	muls	r0, r2
 801f7da:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801f7de:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f7e0:	fb0c 0c01 	mla	ip, ip, r1, r0
 801f7e4:	980e      	ldr	r0, [sp, #56]	; 0x38
 801f7e6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801f7ea:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801f7ee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f7f0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f7f4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f7f8:	0412      	lsls	r2, r2, #16
 801f7fa:	ea4b 0101 	orr.w	r1, fp, r1
 801f7fe:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f802:	fb03 c101 	mla	r1, r3, r1, ip
 801f806:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801f80a:	4302      	orrs	r2, r0
 801f80c:	fb03 1202 	mla	r2, r3, r2, r1
 801f810:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801f814:	0952      	lsrs	r2, r2, #5
 801f816:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801f81a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801f81e:	f8b9 2000 	ldrh.w	r2, [r9]
 801f822:	ea4b 0303 	orr.w	r3, fp, r3
 801f826:	1211      	asrs	r1, r2, #8
 801f828:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801f82c:	b29b      	uxth	r3, r3
 801f82e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f832:	00d2      	lsls	r2, r2, #3
 801f834:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801f838:	fb11 f107 	smulbb	r1, r1, r7
 801f83c:	1218      	asrs	r0, r3, #8
 801f83e:	fb1c fc07 	smulbb	ip, ip, r7
 801f842:	b2d2      	uxtb	r2, r2
 801f844:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f848:	fb12 f207 	smulbb	r2, r2, r7
 801f84c:	fb00 100a 	mla	r0, r0, sl, r1
 801f850:	10d9      	asrs	r1, r3, #3
 801f852:	00db      	lsls	r3, r3, #3
 801f854:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f858:	b280      	uxth	r0, r0
 801f85a:	b2db      	uxtb	r3, r3
 801f85c:	fb01 c10a 	mla	r1, r1, sl, ip
 801f860:	fb03 230a 	mla	r3, r3, sl, r2
 801f864:	1c42      	adds	r2, r0, #1
 801f866:	b289      	uxth	r1, r1
 801f868:	b29b      	uxth	r3, r3
 801f86a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f86e:	f101 0c01 	add.w	ip, r1, #1
 801f872:	1c5a      	adds	r2, r3, #1
 801f874:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801f878:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f87c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f880:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f882:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f886:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f88a:	441c      	add	r4, r3
 801f88c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f890:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f892:	4310      	orrs	r0, r2
 801f894:	441e      	add	r6, r3
 801f896:	ea40 000c 	orr.w	r0, r0, ip
 801f89a:	f829 0b02 	strh.w	r0, [r9], #2
 801f89e:	e6fa      	b.n	801f696 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801f8a0:	b013      	add	sp, #76	; 0x4c
 801f8a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f8a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801f8a6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801f8aa:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801f8ae:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801f8b2:	fb0e 4703 	mla	r7, lr, r3, r4
 801f8b6:	f1be 0f00 	cmp.w	lr, #0
 801f8ba:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801f8be:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801f8c2:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801f8c6:	8808      	ldrh	r0, [r1, #0]
 801f8c8:	db60      	blt.n	801f98c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801f8ca:	45f1      	cmp	r9, lr
 801f8cc:	dd5e      	ble.n	801f98c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801f8ce:	2c00      	cmp	r4, #0
 801f8d0:	db5a      	blt.n	801f988 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801f8d2:	42a3      	cmp	r3, r4
 801f8d4:	dd58      	ble.n	801f988 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801f8d6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801f8da:	1c62      	adds	r2, r4, #1
 801f8dc:	d459      	bmi.n	801f992 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801f8de:	4293      	cmp	r3, r2
 801f8e0:	dd57      	ble.n	801f992 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801f8e2:	2d00      	cmp	r5, #0
 801f8e4:	d055      	beq.n	801f992 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801f8e6:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801f8ea:	f11e 0e01 	adds.w	lr, lr, #1
 801f8ee:	d454      	bmi.n	801f99a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801f8f0:	45f1      	cmp	r9, lr
 801f8f2:	dd52      	ble.n	801f99a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801f8f4:	2e00      	cmp	r6, #0
 801f8f6:	d050      	beq.n	801f99a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801f8f8:	2c00      	cmp	r4, #0
 801f8fa:	db4c      	blt.n	801f996 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801f8fc:	42a3      	cmp	r3, r4
 801f8fe:	dd4a      	ble.n	801f996 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801f900:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801f904:	3401      	adds	r4, #1
 801f906:	d405      	bmi.n	801f914 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801f908:	42a3      	cmp	r3, r4
 801f90a:	dd03      	ble.n	801f914 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801f90c:	b115      	cbz	r5, 801f914 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801f90e:	3301      	adds	r3, #1
 801f910:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801f914:	fb15 f406 	smulbb	r4, r5, r6
 801f918:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801f91c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801f920:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f924:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f928:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801f92c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801f930:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f934:	ea43 0c0c 	orr.w	ip, r3, ip
 801f938:	f1c6 0310 	rsb	r3, r6, #16
 801f93c:	ea4e 0707 	orr.w	r7, lr, r7
 801f940:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801f944:	1b5b      	subs	r3, r3, r5
 801f946:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801f94a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f94e:	437d      	muls	r5, r7
 801f950:	fb03 5c0c 	mla	ip, r3, ip, r5
 801f954:	0403      	lsls	r3, r0, #16
 801f956:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f95a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f95e:	4318      	orrs	r0, r3
 801f960:	0413      	lsls	r3, r2, #16
 801f962:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f966:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f96a:	fb04 c000 	mla	r0, r4, r0, ip
 801f96e:	4313      	orrs	r3, r2
 801f970:	fb06 0003 	mla	r0, r6, r3, r0
 801f974:	0d43      	lsrs	r3, r0, #21
 801f976:	0940      	lsrs	r0, r0, #5
 801f978:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f97c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f980:	4318      	orrs	r0, r3
 801f982:	8008      	strh	r0, [r1, #0]
 801f984:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801f988:	4684      	mov	ip, r0
 801f98a:	e7a6      	b.n	801f8da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801f98c:	4607      	mov	r7, r0
 801f98e:	4684      	mov	ip, r0
 801f990:	e7ab      	b.n	801f8ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801f992:	4607      	mov	r7, r0
 801f994:	e7a9      	b.n	801f8ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801f996:	4602      	mov	r2, r0
 801f998:	e7b4      	b.n	801f904 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801f99a:	4602      	mov	r2, r0
 801f99c:	e7ba      	b.n	801f914 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801f99e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f99e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f9a2:	b08f      	sub	sp, #60	; 0x3c
 801f9a4:	461d      	mov	r5, r3
 801f9a6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801f9a8:	9107      	str	r1, [sp, #28]
 801f9aa:	920c      	str	r2, [sp, #48]	; 0x30
 801f9ac:	6859      	ldr	r1, [r3, #4]
 801f9ae:	681b      	ldr	r3, [r3, #0]
 801f9b0:	900d      	str	r0, [sp, #52]	; 0x34
 801f9b2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801f9b6:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801f9ba:	fb01 2707 	mla	r7, r1, r7, r2
 801f9be:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801f9c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f9c4:	f8d3 8000 	ldr.w	r8, [r3]
 801f9c8:	9b07      	ldr	r3, [sp, #28]
 801f9ca:	2b00      	cmp	r3, #0
 801f9cc:	dc03      	bgt.n	801f9d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801f9ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f9d0:	2b00      	cmp	r3, #0
 801f9d2:	f340 8182 	ble.w	801fcda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801f9d6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f9d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f9dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f9e0:	1e48      	subs	r0, r1, #1
 801f9e2:	f102 3cff 	add.w	ip, r2, #4294967295
 801f9e6:	2d00      	cmp	r5, #0
 801f9e8:	f340 809b 	ble.w	801fb22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801f9ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f9f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f9f4:	d406      	bmi.n	801fa04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f9f6:	4586      	cmp	lr, r0
 801f9f8:	da04      	bge.n	801fa04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f9fa:	2b00      	cmp	r3, #0
 801f9fc:	db02      	blt.n	801fa04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f9fe:	4563      	cmp	r3, ip
 801fa00:	f2c0 8090 	blt.w	801fb24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801fa04:	f11e 0e01 	adds.w	lr, lr, #1
 801fa08:	f100 8084 	bmi.w	801fb14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fa0c:	4571      	cmp	r1, lr
 801fa0e:	f2c0 8081 	blt.w	801fb14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fa12:	3301      	adds	r3, #1
 801fa14:	d47e      	bmi.n	801fb14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fa16:	429a      	cmp	r2, r3
 801fa18:	db7c      	blt.n	801fb14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fa1a:	46aa      	mov	sl, r5
 801fa1c:	46b9      	mov	r9, r7
 801fa1e:	f1ba 0f00 	cmp.w	sl, #0
 801fa22:	f340 8099 	ble.w	801fb58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801fa26:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fa28:	1421      	asrs	r1, r4, #16
 801fa2a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fa2e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fa32:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fa36:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801fa3a:	f100 80d1 	bmi.w	801fbe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801fa3e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fa42:	4559      	cmp	r1, fp
 801fa44:	f280 80cc 	bge.w	801fbe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801fa48:	2800      	cmp	r0, #0
 801fa4a:	f2c0 80c9 	blt.w	801fbe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801fa4e:	f103 3bff 	add.w	fp, r3, #4294967295
 801fa52:	4558      	cmp	r0, fp
 801fa54:	f280 80c4 	bge.w	801fbe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801fa58:	fa0f fe8e 	sxth.w	lr, lr
 801fa5c:	fb00 110e 	mla	r1, r0, lr, r1
 801fa60:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801fa64:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801fa68:	8841      	ldrh	r1, [r0, #2]
 801fa6a:	f1bc 0f00 	cmp.w	ip, #0
 801fa6e:	d00b      	beq.n	801fa88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801fa70:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801fa74:	3b01      	subs	r3, #1
 801fa76:	005b      	lsls	r3, r3, #1
 801fa78:	3302      	adds	r3, #2
 801fa7a:	eb00 0e03 	add.w	lr, r0, r3
 801fa7e:	5ac3      	ldrh	r3, [r0, r3]
 801fa80:	9308      	str	r3, [sp, #32]
 801fa82:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801fa86:	9309      	str	r3, [sp, #36]	; 0x24
 801fa88:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801fa8c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801fa90:	fb12 f30c 	smulbb	r3, r2, ip
 801fa94:	f1cc 0e10 	rsb	lr, ip, #16
 801fa98:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fa9c:	10db      	asrs	r3, r3, #3
 801fa9e:	ebae 0e02 	sub.w	lr, lr, r2
 801faa2:	ea40 000b 	orr.w	r0, r0, fp
 801faa6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801faaa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801faae:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801fab2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801fab6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801faba:	ea4b 0101 	orr.w	r1, fp, r1
 801fabe:	4351      	muls	r1, r2
 801fac0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fac2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801fac6:	0410      	lsls	r0, r2, #16
 801fac8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801facc:	9908      	ldr	r1, [sp, #32]
 801face:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fad2:	4310      	orrs	r0, r2
 801fad4:	9a08      	ldr	r2, [sp, #32]
 801fad6:	0412      	lsls	r2, r2, #16
 801fad8:	fb03 e000 	mla	r0, r3, r0, lr
 801fadc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801fae0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801fae4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801fae8:	ea42 020e 	orr.w	r2, r2, lr
 801faec:	fb03 0302 	mla	r3, r3, r2, r0
 801faf0:	0d5a      	lsrs	r2, r3, #21
 801faf2:	095b      	lsrs	r3, r3, #5
 801faf4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801faf8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fafc:	4313      	orrs	r3, r2
 801fafe:	f8a9 3000 	strh.w	r3, [r9]
 801fb02:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fb04:	f109 0902 	add.w	r9, r9, #2
 801fb08:	f10a 3aff 	add.w	sl, sl, #4294967295
 801fb0c:	441c      	add	r4, r3
 801fb0e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fb10:	441e      	add	r6, r3
 801fb12:	e784      	b.n	801fa1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801fb14:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fb16:	3d01      	subs	r5, #1
 801fb18:	3702      	adds	r7, #2
 801fb1a:	441c      	add	r4, r3
 801fb1c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fb1e:	441e      	add	r6, r3
 801fb20:	e761      	b.n	801f9e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fb22:	d01d      	beq.n	801fb60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801fb24:	1e6b      	subs	r3, r5, #1
 801fb26:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801fb28:	fb00 4003 	mla	r0, r0, r3, r4
 801fb2c:	1400      	asrs	r0, r0, #16
 801fb2e:	f53f af74 	bmi.w	801fa1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801fb32:	3901      	subs	r1, #1
 801fb34:	4288      	cmp	r0, r1
 801fb36:	f6bf af70 	bge.w	801fa1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801fb3a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801fb3c:	fb01 6303 	mla	r3, r1, r3, r6
 801fb40:	141b      	asrs	r3, r3, #16
 801fb42:	f53f af6a 	bmi.w	801fa1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801fb46:	3a01      	subs	r2, #1
 801fb48:	4293      	cmp	r3, r2
 801fb4a:	f6bf af66 	bge.w	801fa1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801fb4e:	46a9      	mov	r9, r5
 801fb50:	46ba      	mov	sl, r7
 801fb52:	f1b9 0f00 	cmp.w	r9, #0
 801fb56:	dc5b      	bgt.n	801fc10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801fb58:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fb5c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801fb60:	9b07      	ldr	r3, [sp, #28]
 801fb62:	2b00      	cmp	r3, #0
 801fb64:	f340 80b9 	ble.w	801fcda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801fb68:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fb6c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fb6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fb72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fb76:	eef0 6a62 	vmov.f32	s13, s5
 801fb7a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fb7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fb82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb86:	ee16 4a90 	vmov	r4, s13
 801fb8a:	eef0 6a43 	vmov.f32	s13, s6
 801fb8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb92:	ee16 6a90 	vmov	r6, s13
 801fb96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fb9a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fb9e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fba2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fba6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fbaa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fbae:	ee12 2a90 	vmov	r2, s5
 801fbb2:	eef0 2a47 	vmov.f32	s5, s14
 801fbb6:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbba:	ee13 2a10 	vmov	r2, s6
 801fbbe:	931b      	str	r3, [sp, #108]	; 0x6c
 801fbc0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fbc2:	eeb0 3a67 	vmov.f32	s6, s15
 801fbc6:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbca:	931c      	str	r3, [sp, #112]	; 0x70
 801fbcc:	9b07      	ldr	r3, [sp, #28]
 801fbce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fbd0:	3b01      	subs	r3, #1
 801fbd2:	9307      	str	r3, [sp, #28]
 801fbd4:	bf08      	it	eq
 801fbd6:	4615      	moveq	r5, r2
 801fbd8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fbda:	bf18      	it	ne
 801fbdc:	461d      	movne	r5, r3
 801fbde:	e6f3      	b.n	801f9c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801fbe0:	f111 0b01 	adds.w	fp, r1, #1
 801fbe4:	d48d      	bmi.n	801fb02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801fbe6:	45de      	cmp	lr, fp
 801fbe8:	db8b      	blt.n	801fb02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801fbea:	f110 0b01 	adds.w	fp, r0, #1
 801fbee:	d488      	bmi.n	801fb02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801fbf0:	455b      	cmp	r3, fp
 801fbf2:	db86      	blt.n	801fb02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801fbf4:	b21b      	sxth	r3, r3
 801fbf6:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801fbfa:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801fbfe:	9300      	str	r3, [sp, #0]
 801fc00:	4642      	mov	r2, r8
 801fc02:	fa0f f38e 	sxth.w	r3, lr
 801fc06:	4649      	mov	r1, r9
 801fc08:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fc0a:	f7ff fe4c 	bl	801f8a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801fc0e:	e778      	b.n	801fb02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801fc10:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fc12:	1420      	asrs	r0, r4, #16
 801fc14:	1431      	asrs	r1, r6, #16
 801fc16:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801fc1a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801fc1e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fc22:	fb03 0101 	mla	r1, r3, r1, r0
 801fc26:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801fc2a:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801fc2e:	8841      	ldrh	r1, [r0, #2]
 801fc30:	f1be 0f00 	cmp.w	lr, #0
 801fc34:	d00b      	beq.n	801fc4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801fc36:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801fc3a:	3b01      	subs	r3, #1
 801fc3c:	005b      	lsls	r3, r3, #1
 801fc3e:	3302      	adds	r3, #2
 801fc40:	eb00 0b03 	add.w	fp, r0, r3
 801fc44:	5ac3      	ldrh	r3, [r0, r3]
 801fc46:	930a      	str	r3, [sp, #40]	; 0x28
 801fc48:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801fc4c:	930b      	str	r3, [sp, #44]	; 0x2c
 801fc4e:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801fc52:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801fc56:	fb12 f30e 	smulbb	r3, r2, lr
 801fc5a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801fc5e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fc62:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fc66:	10db      	asrs	r3, r3, #3
 801fc68:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801fc6c:	ea40 000c 	orr.w	r0, r0, ip
 801fc70:	f1ce 0c10 	rsb	ip, lr, #16
 801fc74:	ea4b 0101 	orr.w	r1, fp, r1
 801fc78:	f109 39ff 	add.w	r9, r9, #4294967295
 801fc7c:	ebac 0c02 	sub.w	ip, ip, r2
 801fc80:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801fc84:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801fc88:	4351      	muls	r1, r2
 801fc8a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fc8c:	fb0c 1c00 	mla	ip, ip, r0, r1
 801fc90:	990a      	ldr	r1, [sp, #40]	; 0x28
 801fc92:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801fc96:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801fc9a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fc9c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801fca0:	0412      	lsls	r2, r2, #16
 801fca2:	ea4b 0000 	orr.w	r0, fp, r0
 801fca6:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801fcaa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801fcae:	fb03 c000 	mla	r0, r3, r0, ip
 801fcb2:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801fcb6:	ea42 0b0b 	orr.w	fp, r2, fp
 801fcba:	fb03 000b 	mla	r0, r3, fp, r0
 801fcbe:	0d43      	lsrs	r3, r0, #21
 801fcc0:	0940      	lsrs	r0, r0, #5
 801fcc2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fcc6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fcca:	4318      	orrs	r0, r3
 801fccc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fcce:	441c      	add	r4, r3
 801fcd0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fcd2:	f82a 0b02 	strh.w	r0, [sl], #2
 801fcd6:	441e      	add	r6, r3
 801fcd8:	e73b      	b.n	801fb52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801fcda:	b00f      	add	sp, #60	; 0x3c
 801fcdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fce0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801fce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fce4:	b085      	sub	sp, #20
 801fce6:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801fcea:	9102      	str	r1, [sp, #8]
 801fcec:	2c00      	cmp	r4, #0
 801fcee:	fb04 7103 	mla	r1, r4, r3, r7
 801fcf2:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801fcf6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801fcfa:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801fcfe:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801fd02:	f2c0 811b 	blt.w	801ff3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801fd06:	45a6      	cmp	lr, r4
 801fd08:	f340 8118 	ble.w	801ff3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801fd0c:	2f00      	cmp	r7, #0
 801fd0e:	f2c0 8113 	blt.w	801ff38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801fd12:	42bb      	cmp	r3, r7
 801fd14:	f340 8110 	ble.w	801ff38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801fd18:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801fd1c:	1c7a      	adds	r2, r7, #1
 801fd1e:	f100 8110 	bmi.w	801ff42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801fd22:	4293      	cmp	r3, r2
 801fd24:	f340 810d 	ble.w	801ff42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801fd28:	2e00      	cmp	r6, #0
 801fd2a:	f000 810c 	beq.w	801ff46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801fd2e:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801fd32:	3401      	adds	r4, #1
 801fd34:	f100 810b 	bmi.w	801ff4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801fd38:	45a6      	cmp	lr, r4
 801fd3a:	f340 8108 	ble.w	801ff4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801fd3e:	2800      	cmp	r0, #0
 801fd40:	f000 8108 	beq.w	801ff54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801fd44:	2f00      	cmp	r7, #0
 801fd46:	f2c0 8100 	blt.w	801ff4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801fd4a:	42bb      	cmp	r3, r7
 801fd4c:	f340 80fd 	ble.w	801ff4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801fd50:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801fd54:	3701      	adds	r7, #1
 801fd56:	f100 8100 	bmi.w	801ff5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801fd5a:	42bb      	cmp	r3, r7
 801fd5c:	f340 80fd 	ble.w	801ff5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801fd60:	2e00      	cmp	r6, #0
 801fd62:	f000 80fc 	beq.w	801ff5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801fd66:	3301      	adds	r3, #1
 801fd68:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801fd6c:	b2b6      	uxth	r6, r6
 801fd6e:	b280      	uxth	r0, r0
 801fd70:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801fd74:	fb00 fe06 	mul.w	lr, r0, r6
 801fd78:	0136      	lsls	r6, r6, #4
 801fd7a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801fd7e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801fd82:	eba6 070e 	sub.w	r7, r6, lr
 801fd86:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801fd8a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801fd8e:	b280      	uxth	r0, r0
 801fd90:	b2bf      	uxth	r7, r7
 801fd92:	1a1b      	subs	r3, r3, r0
 801fd94:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801fd98:	fb0a f607 	mul.w	r6, sl, r7
 801fd9c:	b29b      	uxth	r3, r3
 801fd9e:	fb0b 6603 	mla	r6, fp, r3, r6
 801fda2:	fb00 6609 	mla	r6, r0, r9, r6
 801fda6:	fb0e 6608 	mla	r6, lr, r8, r6
 801fdaa:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fdae:	9600      	str	r6, [sp, #0]
 801fdb0:	2e00      	cmp	r6, #0
 801fdb2:	f000 80be 	beq.w	801ff32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801fdb6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fdba:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801fdbe:	9e02      	ldr	r6, [sp, #8]
 801fdc0:	fb0b fc0c 	mul.w	ip, fp, ip
 801fdc4:	fb0b f505 	mul.w	r5, fp, r5
 801fdc8:	8836      	ldrh	r6, [r6, #0]
 801fdca:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801fdce:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fdd2:	9501      	str	r5, [sp, #4]
 801fdd4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801fdd8:	44dc      	add	ip, fp
 801fdda:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fdde:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801fde2:	9503      	str	r5, [sp, #12]
 801fde4:	9d01      	ldr	r5, [sp, #4]
 801fde6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801fdea:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fdee:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801fdf2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fdf6:	fb0a fc0c 	mul.w	ip, sl, ip
 801fdfa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801fdfe:	fb0a fa01 	mul.w	sl, sl, r1
 801fe02:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801fe06:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fe0a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801fe0e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fe12:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801fe16:	4465      	add	r5, ip
 801fe18:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fe1c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801fe20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fe24:	fb09 fc0c 	mul.w	ip, r9, ip
 801fe28:	0a2d      	lsrs	r5, r5, #8
 801fe2a:	fb09 f904 	mul.w	r9, r9, r4
 801fe2e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fe32:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801fe36:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fe3a:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801fe3e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fe42:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fe46:	437d      	muls	r5, r7
 801fe48:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801fe4c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801fe50:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801fe54:	4461      	add	r1, ip
 801fe56:	fb08 f404 	mul.w	r4, r8, r4
 801fe5a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fe5e:	fb08 f802 	mul.w	r8, r8, r2
 801fe62:	0a09      	lsrs	r1, r1, #8
 801fe64:	0a22      	lsrs	r2, r4, #8
 801fe66:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801fe6a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fe6e:	fb07 f70a 	mul.w	r7, r7, sl
 801fe72:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801fe76:	4414      	add	r4, r2
 801fe78:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801fe7c:	0a24      	lsrs	r4, r4, #8
 801fe7e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801fe82:	9a03      	ldr	r2, [sp, #12]
 801fe84:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801fe88:	fb02 5503 	mla	r5, r2, r3, r5
 801fe8c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801fe90:	9a00      	ldr	r2, [sp, #0]
 801fe92:	fb04 540e 	mla	r4, r4, lr, r5
 801fe96:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801fe9a:	1235      	asrs	r5, r6, #8
 801fe9c:	fb01 4100 	mla	r1, r1, r0, r4
 801fea0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fea4:	0a09      	lsrs	r1, r1, #8
 801fea6:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801feaa:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801feae:	fb03 7101 	mla	r1, r3, r1, r7
 801feb2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801feb6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801feba:	fb00 e101 	mla	r1, r0, r1, lr
 801febe:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801fec2:	b287      	uxth	r7, r0
 801fec4:	0a09      	lsrs	r1, r1, #8
 801fec6:	437a      	muls	r2, r7
 801fec8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fecc:	1c53      	adds	r3, r2, #1
 801fece:	4321      	orrs	r1, r4
 801fed0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fed4:	0c0a      	lsrs	r2, r1, #16
 801fed6:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801feda:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801fede:	b2c8      	uxtb	r0, r1
 801fee0:	fb12 f207 	smulbb	r2, r2, r7
 801fee4:	fb14 f407 	smulbb	r4, r4, r7
 801fee8:	b2db      	uxtb	r3, r3
 801feea:	fb10 f007 	smulbb	r0, r0, r7
 801feee:	fb05 2503 	mla	r5, r5, r3, r2
 801fef2:	10f2      	asrs	r2, r6, #3
 801fef4:	00f6      	lsls	r6, r6, #3
 801fef6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fefa:	b2ad      	uxth	r5, r5
 801fefc:	b2f6      	uxtb	r6, r6
 801fefe:	fb02 4203 	mla	r2, r2, r3, r4
 801ff02:	fb06 0303 	mla	r3, r6, r3, r0
 801ff06:	b294      	uxth	r4, r2
 801ff08:	b299      	uxth	r1, r3
 801ff0a:	1c6b      	adds	r3, r5, #1
 801ff0c:	1c62      	adds	r2, r4, #1
 801ff0e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ff12:	1c4b      	adds	r3, r1, #1
 801ff14:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ff18:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ff1c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ff20:	0952      	lsrs	r2, r2, #5
 801ff22:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ff26:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ff2a:	432b      	orrs	r3, r5
 801ff2c:	4313      	orrs	r3, r2
 801ff2e:	9a02      	ldr	r2, [sp, #8]
 801ff30:	8013      	strh	r3, [r2, #0]
 801ff32:	b005      	add	sp, #20
 801ff34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff38:	2500      	movs	r5, #0
 801ff3a:	e6ef      	b.n	801fd1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801ff3c:	2100      	movs	r1, #0
 801ff3e:	460d      	mov	r5, r1
 801ff40:	e6f7      	b.n	801fd32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ff42:	2100      	movs	r1, #0
 801ff44:	e6f5      	b.n	801fd32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ff46:	4631      	mov	r1, r6
 801ff48:	e6f3      	b.n	801fd32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ff4a:	2400      	movs	r4, #0
 801ff4c:	e702      	b.n	801fd54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801ff4e:	2200      	movs	r2, #0
 801ff50:	4614      	mov	r4, r2
 801ff52:	e70b      	b.n	801fd6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801ff54:	4602      	mov	r2, r0
 801ff56:	4604      	mov	r4, r0
 801ff58:	e708      	b.n	801fd6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801ff5a:	2200      	movs	r2, #0
 801ff5c:	e706      	b.n	801fd6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801ff5e:	4632      	mov	r2, r6
 801ff60:	e704      	b.n	801fd6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801ff62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ff62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff66:	b09d      	sub	sp, #116	; 0x74
 801ff68:	9219      	str	r2, [sp, #100]	; 0x64
 801ff6a:	9307      	str	r3, [sp, #28]
 801ff6c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801ff6e:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801ff72:	901b      	str	r0, [sp, #108]	; 0x6c
 801ff74:	931a      	str	r3, [sp, #104]	; 0x68
 801ff76:	6850      	ldr	r0, [r2, #4]
 801ff78:	9117      	str	r1, [sp, #92]	; 0x5c
 801ff7a:	6812      	ldr	r2, [r2, #0]
 801ff7c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801ff80:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801ff84:	fb00 1303 	mla	r3, r0, r3, r1
 801ff88:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ff8c:	930a      	str	r3, [sp, #40]	; 0x28
 801ff8e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ff90:	681b      	ldr	r3, [r3, #0]
 801ff92:	9310      	str	r3, [sp, #64]	; 0x40
 801ff94:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801ff98:	930b      	str	r3, [sp, #44]	; 0x2c
 801ff9a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ff9c:	2b00      	cmp	r3, #0
 801ff9e:	dc03      	bgt.n	801ffa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801ffa0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ffa2:	2b00      	cmp	r3, #0
 801ffa4:	f340 8375 	ble.w	8020692 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801ffa8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ffaa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ffae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ffb2:	1e48      	subs	r0, r1, #1
 801ffb4:	1e57      	subs	r7, r2, #1
 801ffb6:	9b07      	ldr	r3, [sp, #28]
 801ffb8:	2b00      	cmp	r3, #0
 801ffba:	f340 818e 	ble.w	80202da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801ffbe:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ffc2:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ffc6:	d406      	bmi.n	801ffd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ffc8:	4584      	cmp	ip, r0
 801ffca:	da04      	bge.n	801ffd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ffcc:	2b00      	cmp	r3, #0
 801ffce:	db02      	blt.n	801ffd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ffd0:	42bb      	cmp	r3, r7
 801ffd2:	f2c0 8183 	blt.w	80202dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ffd6:	f11c 0c01 	adds.w	ip, ip, #1
 801ffda:	f100 8173 	bmi.w	80202c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ffde:	4561      	cmp	r1, ip
 801ffe0:	f2c0 8170 	blt.w	80202c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ffe4:	3301      	adds	r3, #1
 801ffe6:	f100 816d 	bmi.w	80202c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ffea:	429a      	cmp	r2, r3
 801ffec:	f2c0 816a 	blt.w	80202c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801fff0:	9b07      	ldr	r3, [sp, #28]
 801fff2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801fff4:	9318      	str	r3, [sp, #96]	; 0x60
 801fff6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fff8:	2b00      	cmp	r3, #0
 801fffa:	f340 818c 	ble.w	8020316 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801fffe:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8020000:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020004:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8020006:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802000a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802000e:	1422      	asrs	r2, r4, #16
 8020010:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020014:	689b      	ldr	r3, [r3, #8]
 8020016:	f100 81cd 	bmi.w	80203b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802001a:	f103 38ff 	add.w	r8, r3, #4294967295
 802001e:	4542      	cmp	r2, r8
 8020020:	f280 81c8 	bge.w	80203b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020024:	f1bc 0f00 	cmp.w	ip, #0
 8020028:	f2c0 81c4 	blt.w	80203b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802002c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020030:	45c4      	cmp	ip, r8
 8020032:	f280 81bf 	bge.w	80203b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020036:	b21b      	sxth	r3, r3
 8020038:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802003a:	fb0c 2203 	mla	r2, ip, r3, r2
 802003e:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8020042:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8020046:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802004a:	2800      	cmp	r0, #0
 802004c:	f000 81a9 	beq.w	80203a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8020050:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8020054:	950c      	str	r5, [sp, #48]	; 0x30
 8020056:	0e2d      	lsrs	r5, r5, #24
 8020058:	9513      	str	r5, [sp, #76]	; 0x4c
 802005a:	b181      	cbz	r1, 802007e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802005c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8020060:	3b01      	subs	r3, #1
 8020062:	009b      	lsls	r3, r3, #2
 8020064:	3304      	adds	r3, #4
 8020066:	eb08 0c03 	add.w	ip, r8, r3
 802006a:	f858 3003 	ldr.w	r3, [r8, r3]
 802006e:	9308      	str	r3, [sp, #32]
 8020070:	0e1b      	lsrs	r3, r3, #24
 8020072:	9311      	str	r3, [sp, #68]	; 0x44
 8020074:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8020078:	930d      	str	r3, [sp, #52]	; 0x34
 802007a:	0e1b      	lsrs	r3, r3, #24
 802007c:	9314      	str	r3, [sp, #80]	; 0x50
 802007e:	b280      	uxth	r0, r0
 8020080:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020082:	b289      	uxth	r1, r1
 8020084:	fb00 f901 	mul.w	r9, r0, r1
 8020088:	0100      	lsls	r0, r0, #4
 802008a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802008e:	eba0 0809 	sub.w	r8, r0, r9
 8020092:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8020096:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8020098:	b289      	uxth	r1, r1
 802009a:	fa1f f888 	uxth.w	r8, r8
 802009e:	1a5b      	subs	r3, r3, r1
 80200a0:	fb08 f000 	mul.w	r0, r8, r0
 80200a4:	b29b      	uxth	r3, r3
 80200a6:	fb03 000e 	mla	r0, r3, lr, r0
 80200aa:	fb01 0005 	mla	r0, r1, r5, r0
 80200ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80200b0:	fb09 0005 	mla	r0, r9, r5, r0
 80200b4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80200b8:	2800      	cmp	r0, #0
 80200ba:	f000 80fa 	beq.w	80202b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80200be:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80200c2:	d01b      	beq.n	80200fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80200c4:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80200c8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80200cc:	fb0e fa0a 	mul.w	sl, lr, sl
 80200d0:	fb0e fe02 	mul.w	lr, lr, r2
 80200d4:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80200d8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80200dc:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80200e0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80200e4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80200e8:	4452      	add	r2, sl
 80200ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80200ee:	0a12      	lsrs	r2, r2, #8
 80200f0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80200f4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80200f8:	ea42 020c 	orr.w	r2, r2, ip
 80200fc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80200fe:	2dff      	cmp	r5, #255	; 0xff
 8020100:	d021      	beq.n	8020146 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8020102:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020104:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020108:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802010a:	fb05 fb0b 	mul.w	fp, r5, fp
 802010e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020110:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020114:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020116:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802011a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802011e:	fb05 fa0a 	mul.w	sl, r5, sl
 8020122:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020126:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802012a:	44de      	add	lr, fp
 802012c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020130:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020134:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020138:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802013c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020140:	ea4e 050a 	orr.w	r5, lr, sl
 8020144:	950c      	str	r5, [sp, #48]	; 0x30
 8020146:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020148:	2dff      	cmp	r5, #255	; 0xff
 802014a:	d021      	beq.n	8020190 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802014c:	9d08      	ldr	r5, [sp, #32]
 802014e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020152:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020154:	fb05 fb0b 	mul.w	fp, r5, fp
 8020158:	9d08      	ldr	r5, [sp, #32]
 802015a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802015e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020160:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020164:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020168:	fb05 fa0a 	mul.w	sl, r5, sl
 802016c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020170:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020174:	44de      	add	lr, fp
 8020176:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802017a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802017e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020182:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020186:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802018a:	ea4e 050a 	orr.w	r5, lr, sl
 802018e:	9508      	str	r5, [sp, #32]
 8020190:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020192:	2dff      	cmp	r5, #255	; 0xff
 8020194:	d021      	beq.n	80201da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8020196:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020198:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802019c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802019e:	fb05 fb0b 	mul.w	fp, r5, fp
 80201a2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80201a4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80201a8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80201aa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80201ae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80201b2:	fb05 fa0a 	mul.w	sl, r5, sl
 80201b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80201ba:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80201be:	44de      	add	lr, fp
 80201c0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80201c4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80201c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80201cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80201d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80201d4:	ea4e 050a 	orr.w	r5, lr, sl
 80201d8:	950d      	str	r5, [sp, #52]	; 0x34
 80201da:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80201dc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80201e0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80201e4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80201e8:	9d08      	ldr	r5, [sp, #32]
 80201ea:	fb08 fc0c 	mul.w	ip, r8, ip
 80201ee:	fb03 cc0e 	mla	ip, r3, lr, ip
 80201f2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80201f6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80201f8:	fb01 cc0e 	mla	ip, r1, lr, ip
 80201fc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8020200:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020202:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020206:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802020a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802020c:	fb08 f80e 	mul.w	r8, r8, lr
 8020210:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020214:	fb03 8202 	mla	r2, r3, r2, r8
 8020218:	9b08      	ldr	r3, [sp, #32]
 802021a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802021e:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8020222:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020224:	fb01 220a 	mla	r2, r1, sl, r2
 8020228:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802022c:	883b      	ldrh	r3, [r7, #0]
 802022e:	fb09 2901 	mla	r9, r9, r1, r2
 8020232:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020234:	1219      	asrs	r1, r3, #8
 8020236:	4342      	muls	r2, r0
 8020238:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802023c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020240:	1c50      	adds	r0, r2, #1
 8020242:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020246:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802024a:	ea4c 0c09 	orr.w	ip, ip, r9
 802024e:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8020252:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020256:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802025a:	fa5f fc8c 	uxtb.w	ip, ip
 802025e:	fb12 f205 	smulbb	r2, r2, r5
 8020262:	b2c0      	uxtb	r0, r0
 8020264:	fb1c fc05 	smulbb	ip, ip, r5
 8020268:	fb01 2100 	mla	r1, r1, r0, r2
 802026c:	10da      	asrs	r2, r3, #3
 802026e:	fb1e fe05 	smulbb	lr, lr, r5
 8020272:	00db      	lsls	r3, r3, #3
 8020274:	b289      	uxth	r1, r1
 8020276:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802027a:	b2db      	uxtb	r3, r3
 802027c:	fb02 e200 	mla	r2, r2, r0, lr
 8020280:	fb03 c300 	mla	r3, r3, r0, ip
 8020284:	b292      	uxth	r2, r2
 8020286:	fa1f fc83 	uxth.w	ip, r3
 802028a:	1c4b      	adds	r3, r1, #1
 802028c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020290:	f10c 0301 	add.w	r3, ip, #1
 8020294:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020298:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802029c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80202a0:	430b      	orrs	r3, r1
 80202a2:	1c51      	adds	r1, r2, #1
 80202a4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80202a8:	0952      	lsrs	r2, r2, #5
 80202aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80202ae:	4313      	orrs	r3, r2
 80202b0:	803b      	strh	r3, [r7, #0]
 80202b2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80202b4:	3702      	adds	r7, #2
 80202b6:	441c      	add	r4, r3
 80202b8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80202ba:	441e      	add	r6, r3
 80202bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80202be:	3b01      	subs	r3, #1
 80202c0:	9318      	str	r3, [sp, #96]	; 0x60
 80202c2:	e698      	b.n	801fff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80202c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80202c6:	441c      	add	r4, r3
 80202c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80202ca:	441e      	add	r6, r3
 80202cc:	9b07      	ldr	r3, [sp, #28]
 80202ce:	3b01      	subs	r3, #1
 80202d0:	9307      	str	r3, [sp, #28]
 80202d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80202d4:	3302      	adds	r3, #2
 80202d6:	930a      	str	r3, [sp, #40]	; 0x28
 80202d8:	e66d      	b.n	801ffb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80202da:	d023      	beq.n	8020324 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80202dc:	9b07      	ldr	r3, [sp, #28]
 80202de:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80202e0:	3b01      	subs	r3, #1
 80202e2:	fb00 4003 	mla	r0, r0, r3, r4
 80202e6:	1400      	asrs	r0, r0, #16
 80202e8:	f53f ae82 	bmi.w	801fff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80202ec:	3901      	subs	r1, #1
 80202ee:	4288      	cmp	r0, r1
 80202f0:	f6bf ae7e 	bge.w	801fff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80202f4:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80202f6:	fb01 6303 	mla	r3, r1, r3, r6
 80202fa:	141b      	asrs	r3, r3, #16
 80202fc:	f53f ae78 	bmi.w	801fff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020300:	3a01      	subs	r2, #1
 8020302:	4293      	cmp	r3, r2
 8020304:	f6bf ae74 	bge.w	801fff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020308:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802030c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8020310:	f1bb 0f00 	cmp.w	fp, #0
 8020314:	dc6c      	bgt.n	80203f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8020316:	9b07      	ldr	r3, [sp, #28]
 8020318:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802031c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802031e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8020322:	930a      	str	r3, [sp, #40]	; 0x28
 8020324:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020326:	2b00      	cmp	r3, #0
 8020328:	f340 81b3 	ble.w	8020692 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802032c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020330:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020332:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020336:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802033a:	eef0 6a62 	vmov.f32	s13, s5
 802033e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020342:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020346:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802034a:	ee16 4a90 	vmov	r4, s13
 802034e:	eef0 6a43 	vmov.f32	s13, s6
 8020352:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020356:	ee16 6a90 	vmov	r6, s13
 802035a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802035e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020362:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020366:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802036a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802036e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020372:	ee12 2a90 	vmov	r2, s5
 8020376:	eef0 2a47 	vmov.f32	s5, s14
 802037a:	fb92 f3f3 	sdiv	r3, r2, r3
 802037e:	ee13 2a10 	vmov	r2, s6
 8020382:	9329      	str	r3, [sp, #164]	; 0xa4
 8020384:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020386:	eeb0 3a67 	vmov.f32	s6, s15
 802038a:	fb92 f3f3 	sdiv	r3, r2, r3
 802038e:	932a      	str	r3, [sp, #168]	; 0xa8
 8020390:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020392:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8020394:	3b01      	subs	r3, #1
 8020396:	9317      	str	r3, [sp, #92]	; 0x5c
 8020398:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802039a:	bf08      	it	eq
 802039c:	4613      	moveq	r3, r2
 802039e:	9307      	str	r3, [sp, #28]
 80203a0:	e5fb      	b.n	801ff9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80203a2:	2900      	cmp	r1, #0
 80203a4:	f43f ae6b 	beq.w	802007e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80203a8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80203ac:	9308      	str	r3, [sp, #32]
 80203ae:	0e1b      	lsrs	r3, r3, #24
 80203b0:	9311      	str	r3, [sp, #68]	; 0x44
 80203b2:	e664      	b.n	802007e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80203b4:	f112 0801 	adds.w	r8, r2, #1
 80203b8:	f53f af7b 	bmi.w	80202b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80203bc:	4543      	cmp	r3, r8
 80203be:	f6ff af78 	blt.w	80202b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80203c2:	f11c 0801 	adds.w	r8, ip, #1
 80203c6:	f53f af74 	bmi.w	80202b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80203ca:	45c6      	cmp	lr, r8
 80203cc:	f6ff af71 	blt.w	80202b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80203d0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80203d2:	b21b      	sxth	r3, r3
 80203d4:	9201      	str	r2, [sp, #4]
 80203d6:	fa0f f28e 	sxth.w	r2, lr
 80203da:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80203de:	e9cd c002 	strd	ip, r0, [sp, #8]
 80203e2:	9200      	str	r2, [sp, #0]
 80203e4:	4639      	mov	r1, r7
 80203e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80203e8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80203ea:	f7ff fc79 	bl	801fce0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80203ee:	e760      	b.n	80202b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80203f0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80203f2:	1427      	asrs	r7, r4, #16
 80203f4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80203f6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80203fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80203fe:	1433      	asrs	r3, r6, #16
 8020400:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020404:	fb01 7303 	mla	r3, r1, r3, r7
 8020408:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802040c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8020410:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020414:	2a00      	cmp	r2, #0
 8020416:	f000 8133 	beq.w	8020680 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 802041a:	687d      	ldr	r5, [r7, #4]
 802041c:	950e      	str	r5, [sp, #56]	; 0x38
 802041e:	0e2d      	lsrs	r5, r5, #24
 8020420:	9515      	str	r5, [sp, #84]	; 0x54
 8020422:	b178      	cbz	r0, 8020444 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8020424:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8020428:	3901      	subs	r1, #1
 802042a:	0089      	lsls	r1, r1, #2
 802042c:	3104      	adds	r1, #4
 802042e:	eb07 0e01 	add.w	lr, r7, r1
 8020432:	5879      	ldr	r1, [r7, r1]
 8020434:	9109      	str	r1, [sp, #36]	; 0x24
 8020436:	0e09      	lsrs	r1, r1, #24
 8020438:	9112      	str	r1, [sp, #72]	; 0x48
 802043a:	f8de 1004 	ldr.w	r1, [lr, #4]
 802043e:	910f      	str	r1, [sp, #60]	; 0x3c
 8020440:	0e09      	lsrs	r1, r1, #24
 8020442:	9116      	str	r1, [sp, #88]	; 0x58
 8020444:	b292      	uxth	r2, r2
 8020446:	9915      	ldr	r1, [sp, #84]	; 0x54
 8020448:	b280      	uxth	r0, r0
 802044a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802044c:	fb02 f800 	mul.w	r8, r2, r0
 8020450:	0112      	lsls	r2, r2, #4
 8020452:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020456:	eba2 0e08 	sub.w	lr, r2, r8
 802045a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802045e:	b280      	uxth	r0, r0
 8020460:	fa1f fe8e 	uxth.w	lr, lr
 8020464:	1a12      	subs	r2, r2, r0
 8020466:	fb0e f101 	mul.w	r1, lr, r1
 802046a:	b292      	uxth	r2, r2
 802046c:	fb02 110c 	mla	r1, r2, ip, r1
 8020470:	fb00 1105 	mla	r1, r0, r5, r1
 8020474:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8020476:	fb08 1105 	mla	r1, r8, r5, r1
 802047a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802047e:	2900      	cmp	r1, #0
 8020480:	f000 80f5 	beq.w	802066e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8020484:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020488:	d019      	beq.n	80204be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 802048a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802048e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020492:	fb0c fa0a 	mul.w	sl, ip, sl
 8020496:	fb0c fc03 	mul.w	ip, ip, r3
 802049a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802049e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80204a2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80204a6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80204aa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80204ae:	4453      	add	r3, sl
 80204b0:	0a3f      	lsrs	r7, r7, #8
 80204b2:	0a1b      	lsrs	r3, r3, #8
 80204b4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80204b8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80204bc:	433b      	orrs	r3, r7
 80204be:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80204c0:	2dff      	cmp	r5, #255	; 0xff
 80204c2:	d020      	beq.n	8020506 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80204c4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80204c6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80204ca:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80204cc:	436f      	muls	r7, r5
 80204ce:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80204d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80204d4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80204d8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80204da:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80204de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80204e2:	fb05 fa0a 	mul.w	sl, r5, sl
 80204e6:	44bc      	add	ip, r7
 80204e8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80204ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80204f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80204f4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80204f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80204fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020500:	ea4c 050a 	orr.w	r5, ip, sl
 8020504:	950e      	str	r5, [sp, #56]	; 0x38
 8020506:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020508:	2dff      	cmp	r5, #255	; 0xff
 802050a:	d020      	beq.n	802054e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802050c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802050e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8020512:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020514:	436f      	muls	r7, r5
 8020516:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8020518:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802051c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020520:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020522:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020526:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802052a:	fb05 fa0a 	mul.w	sl, r5, sl
 802052e:	44bc      	add	ip, r7
 8020530:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020534:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020538:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802053c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020540:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020544:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020548:	ea4c 050a 	orr.w	r5, ip, sl
 802054c:	9509      	str	r5, [sp, #36]	; 0x24
 802054e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8020550:	2dff      	cmp	r5, #255	; 0xff
 8020552:	d020      	beq.n	8020596 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8020554:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8020556:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802055a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802055c:	436f      	muls	r7, r5
 802055e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8020560:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020564:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020568:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802056a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802056e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020572:	fb05 fa0a 	mul.w	sl, r5, sl
 8020576:	44bc      	add	ip, r7
 8020578:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802057c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020580:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020584:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020588:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802058c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020590:	ea4c 050a 	orr.w	r5, ip, sl
 8020594:	950f      	str	r5, [sp, #60]	; 0x3c
 8020596:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020598:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802059c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80205a0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80205a4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80205a6:	fb0e f707 	mul.w	r7, lr, r7
 80205aa:	fb02 770c 	mla	r7, r2, ip, r7
 80205ae:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80205b2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80205b4:	fb00 770c 	mla	r7, r0, ip, r7
 80205b8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80205bc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80205be:	fb08 770c 	mla	r7, r8, ip, r7
 80205c2:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80205c6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80205c8:	fb0e fe0c 	mul.w	lr, lr, ip
 80205cc:	0a3f      	lsrs	r7, r7, #8
 80205ce:	fb02 e303 	mla	r3, r2, r3, lr
 80205d2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80205d4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80205d8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80205dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80205de:	fb00 330a 	mla	r3, r0, sl, r3
 80205e2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80205e6:	f8b9 0000 	ldrh.w	r0, [r9]
 80205ea:	fb08 3c0c 	mla	ip, r8, ip, r3
 80205ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80205f0:	1202      	asrs	r2, r0, #8
 80205f2:	4359      	muls	r1, r3
 80205f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80205f8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80205fc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020600:	1c4b      	adds	r3, r1, #1
 8020602:	ea47 070c 	orr.w	r7, r7, ip
 8020606:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802060a:	0c3b      	lsrs	r3, r7, #16
 802060c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020610:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020614:	b2ff      	uxtb	r7, r7
 8020616:	fb13 f305 	smulbb	r3, r3, r5
 802061a:	b2c9      	uxtb	r1, r1
 802061c:	fb17 f705 	smulbb	r7, r7, r5
 8020620:	fb02 3201 	mla	r2, r2, r1, r3
 8020624:	10c3      	asrs	r3, r0, #3
 8020626:	fb1c fc05 	smulbb	ip, ip, r5
 802062a:	00c0      	lsls	r0, r0, #3
 802062c:	b292      	uxth	r2, r2
 802062e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020632:	b2c0      	uxtb	r0, r0
 8020634:	fb03 c301 	mla	r3, r3, r1, ip
 8020638:	fb00 7001 	mla	r0, r0, r1, r7
 802063c:	1c51      	adds	r1, r2, #1
 802063e:	b29b      	uxth	r3, r3
 8020640:	b280      	uxth	r0, r0
 8020642:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020646:	f100 0c01 	add.w	ip, r0, #1
 802064a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 802064e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8020652:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020656:	ea4c 0202 	orr.w	r2, ip, r2
 802065a:	f103 0c01 	add.w	ip, r3, #1
 802065e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020662:	095b      	lsrs	r3, r3, #5
 8020664:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020668:	431a      	orrs	r2, r3
 802066a:	f8a9 2000 	strh.w	r2, [r9]
 802066e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020670:	f109 0902 	add.w	r9, r9, #2
 8020674:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020678:	441c      	add	r4, r3
 802067a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802067c:	441e      	add	r6, r3
 802067e:	e647      	b.n	8020310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8020680:	2800      	cmp	r0, #0
 8020682:	f43f aedf 	beq.w	8020444 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8020686:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 802068a:	9109      	str	r1, [sp, #36]	; 0x24
 802068c:	0e09      	lsrs	r1, r1, #24
 802068e:	9112      	str	r1, [sp, #72]	; 0x48
 8020690:	e6d8      	b.n	8020444 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8020692:	b01d      	add	sp, #116	; 0x74
 8020694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020698 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8020698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802069c:	b085      	sub	sp, #20
 802069e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80206a2:	9102      	str	r1, [sp, #8]
 80206a4:	2c00      	cmp	r4, #0
 80206a6:	fb04 7103 	mla	r1, r4, r3, r7
 80206aa:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80206ae:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80206b2:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80206b6:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80206ba:	f2c0 810c 	blt.w	80208d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80206be:	45a6      	cmp	lr, r4
 80206c0:	f340 8109 	ble.w	80208d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80206c4:	2f00      	cmp	r7, #0
 80206c6:	f2c0 8104 	blt.w	80208d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80206ca:	42bb      	cmp	r3, r7
 80206cc:	f340 8101 	ble.w	80208d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80206d0:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80206d4:	1c7a      	adds	r2, r7, #1
 80206d6:	f100 8101 	bmi.w	80208dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80206da:	4293      	cmp	r3, r2
 80206dc:	f340 80fe 	ble.w	80208dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80206e0:	2e00      	cmp	r6, #0
 80206e2:	f000 80fd 	beq.w	80208e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 80206e6:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80206ea:	3401      	adds	r4, #1
 80206ec:	f100 80fc 	bmi.w	80208e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80206f0:	45a6      	cmp	lr, r4
 80206f2:	f340 80f9 	ble.w	80208e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80206f6:	2800      	cmp	r0, #0
 80206f8:	f000 80f9 	beq.w	80208ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80206fc:	2f00      	cmp	r7, #0
 80206fe:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8020702:	f2c0 80ef 	blt.w	80208e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8020706:	42bb      	cmp	r3, r7
 8020708:	f340 80ec 	ble.w	80208e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802070c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8020710:	3701      	adds	r7, #1
 8020712:	f100 80ef 	bmi.w	80208f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8020716:	42bb      	cmp	r3, r7
 8020718:	f340 80ec 	ble.w	80208f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802071c:	2e00      	cmp	r6, #0
 802071e:	f000 80eb 	beq.w	80208f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8020722:	6852      	ldr	r2, [r2, #4]
 8020724:	b2b6      	uxth	r6, r6
 8020726:	b280      	uxth	r0, r0
 8020728:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802072c:	fb00 fe06 	mul.w	lr, r0, r6
 8020730:	0136      	lsls	r6, r6, #4
 8020732:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020736:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802073a:	eba6 070e 	sub.w	r7, r6, lr
 802073e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8020742:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020746:	b280      	uxth	r0, r0
 8020748:	b2bf      	uxth	r7, r7
 802074a:	1a1b      	subs	r3, r3, r0
 802074c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020750:	fb07 f60a 	mul.w	r6, r7, sl
 8020754:	b29b      	uxth	r3, r3
 8020756:	fb0b 6603 	mla	r6, fp, r3, r6
 802075a:	fb00 6609 	mla	r6, r0, r9, r6
 802075e:	fb0e 6608 	mla	r6, lr, r8, r6
 8020762:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020766:	9600      	str	r6, [sp, #0]
 8020768:	2e00      	cmp	r6, #0
 802076a:	f000 80af 	beq.w	80208cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 802076e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020772:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8020776:	9e02      	ldr	r6, [sp, #8]
 8020778:	fb0b fc0c 	mul.w	ip, fp, ip
 802077c:	fb0b f505 	mul.w	r5, fp, r5
 8020780:	8836      	ldrh	r6, [r6, #0]
 8020782:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8020786:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802078a:	9501      	str	r5, [sp, #4]
 802078c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8020790:	44dc      	add	ip, fp
 8020792:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020796:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802079a:	9503      	str	r5, [sp, #12]
 802079c:	9d01      	ldr	r5, [sp, #4]
 802079e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80207a2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80207a6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80207aa:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80207ae:	fb0a fc0c 	mul.w	ip, sl, ip
 80207b2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80207b6:	fb0a fa01 	mul.w	sl, sl, r1
 80207ba:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80207be:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80207c2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80207c6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80207ca:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80207ce:	4465      	add	r5, ip
 80207d0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80207d4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80207d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80207dc:	fb09 fc0c 	mul.w	ip, r9, ip
 80207e0:	0a2d      	lsrs	r5, r5, #8
 80207e2:	fb09 f904 	mul.w	r9, r9, r4
 80207e6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80207ea:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80207ee:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80207f2:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80207f6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80207fa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80207fe:	437d      	muls	r5, r7
 8020800:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020804:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8020808:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802080c:	4461      	add	r1, ip
 802080e:	fb08 f404 	mul.w	r4, r8, r4
 8020812:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020816:	fb08 f802 	mul.w	r8, r8, r2
 802081a:	0a09      	lsrs	r1, r1, #8
 802081c:	0a22      	lsrs	r2, r4, #8
 802081e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8020822:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020826:	fb07 f70a 	mul.w	r7, r7, sl
 802082a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802082e:	4414      	add	r4, r2
 8020830:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8020834:	0a24      	lsrs	r4, r4, #8
 8020836:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802083a:	9a03      	ldr	r2, [sp, #12]
 802083c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020840:	fb02 5503 	mla	r5, r2, r3, r5
 8020844:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020848:	fb04 540e 	mla	r4, r4, lr, r5
 802084c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8020850:	fb01 4100 	mla	r1, r1, r0, r4
 8020854:	0a09      	lsrs	r1, r1, #8
 8020856:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802085a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802085e:	fb03 7101 	mla	r1, r3, r1, r7
 8020862:	9b00      	ldr	r3, [sp, #0]
 8020864:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020868:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802086c:	43da      	mvns	r2, r3
 802086e:	1233      	asrs	r3, r6, #8
 8020870:	fb00 e101 	mla	r1, r0, r1, lr
 8020874:	10f0      	asrs	r0, r6, #3
 8020876:	b2d2      	uxtb	r2, r2
 8020878:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802087c:	0a09      	lsrs	r1, r1, #8
 802087e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020882:	00f6      	lsls	r6, r6, #3
 8020884:	4353      	muls	r3, r2
 8020886:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802088a:	4350      	muls	r0, r2
 802088c:	b2f6      	uxtb	r6, r6
 802088e:	4321      	orrs	r1, r4
 8020890:	4356      	muls	r6, r2
 8020892:	1c5a      	adds	r2, r3, #1
 8020894:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020898:	0c0b      	lsrs	r3, r1, #16
 802089a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802089e:	1c42      	adds	r2, r0, #1
 80208a0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80208a4:	0a0a      	lsrs	r2, r1, #8
 80208a6:	021b      	lsls	r3, r3, #8
 80208a8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80208ac:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80208b0:	00d2      	lsls	r2, r2, #3
 80208b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80208b6:	4313      	orrs	r3, r2
 80208b8:	1c72      	adds	r2, r6, #1
 80208ba:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80208be:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 80208c2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80208c6:	4319      	orrs	r1, r3
 80208c8:	9b02      	ldr	r3, [sp, #8]
 80208ca:	8019      	strh	r1, [r3, #0]
 80208cc:	b005      	add	sp, #20
 80208ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80208d2:	2500      	movs	r5, #0
 80208d4:	e6fe      	b.n	80206d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 80208d6:	2100      	movs	r1, #0
 80208d8:	460d      	mov	r5, r1
 80208da:	e706      	b.n	80206ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80208dc:	2100      	movs	r1, #0
 80208de:	e704      	b.n	80206ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80208e0:	4631      	mov	r1, r6
 80208e2:	e702      	b.n	80206ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80208e4:	2400      	movs	r4, #0
 80208e6:	e713      	b.n	8020710 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80208e8:	2200      	movs	r2, #0
 80208ea:	4614      	mov	r4, r2
 80208ec:	e71a      	b.n	8020724 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80208ee:	4602      	mov	r2, r0
 80208f0:	4604      	mov	r4, r0
 80208f2:	e717      	b.n	8020724 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80208f4:	2200      	movs	r2, #0
 80208f6:	e715      	b.n	8020724 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80208f8:	4632      	mov	r2, r6
 80208fa:	e713      	b.n	8020724 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

080208fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80208fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020900:	b09b      	sub	sp, #108	; 0x6c
 8020902:	9218      	str	r2, [sp, #96]	; 0x60
 8020904:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020906:	9019      	str	r0, [sp, #100]	; 0x64
 8020908:	9116      	str	r1, [sp, #88]	; 0x58
 802090a:	6850      	ldr	r0, [r2, #4]
 802090c:	9307      	str	r3, [sp, #28]
 802090e:	6812      	ldr	r2, [r2, #0]
 8020910:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8020914:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8020918:	fb00 1303 	mla	r3, r0, r3, r1
 802091c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020920:	930a      	str	r3, [sp, #40]	; 0x28
 8020922:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020924:	681b      	ldr	r3, [r3, #0]
 8020926:	930f      	str	r3, [sp, #60]	; 0x3c
 8020928:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802092a:	2b00      	cmp	r3, #0
 802092c:	dc03      	bgt.n	8020936 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802092e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020930:	2b00      	cmp	r3, #0
 8020932:	f340 8387 	ble.w	8021044 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8020936:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020938:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802093c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020940:	1e48      	subs	r0, r1, #1
 8020942:	1e57      	subs	r7, r2, #1
 8020944:	9b07      	ldr	r3, [sp, #28]
 8020946:	2b00      	cmp	r3, #0
 8020948:	f340 8166 	ble.w	8020c18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802094c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020950:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020954:	d406      	bmi.n	8020964 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020956:	4584      	cmp	ip, r0
 8020958:	da04      	bge.n	8020964 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802095a:	2b00      	cmp	r3, #0
 802095c:	db02      	blt.n	8020964 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802095e:	42bb      	cmp	r3, r7
 8020960:	f2c0 815b 	blt.w	8020c1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8020964:	f11c 0c01 	adds.w	ip, ip, #1
 8020968:	f100 814b 	bmi.w	8020c02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802096c:	4561      	cmp	r1, ip
 802096e:	f2c0 8148 	blt.w	8020c02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020972:	3301      	adds	r3, #1
 8020974:	f100 8145 	bmi.w	8020c02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020978:	429a      	cmp	r2, r3
 802097a:	f2c0 8142 	blt.w	8020c02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802097e:	9b07      	ldr	r3, [sp, #28]
 8020980:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020982:	9317      	str	r3, [sp, #92]	; 0x5c
 8020984:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020986:	2b00      	cmp	r3, #0
 8020988:	f340 8165 	ble.w	8020c56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802098c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 802098e:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020992:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020994:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8020998:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802099c:	1422      	asrs	r2, r4, #16
 802099e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80209a2:	689b      	ldr	r3, [r3, #8]
 80209a4:	f100 81d5 	bmi.w	8020d52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80209a8:	f103 38ff 	add.w	r8, r3, #4294967295
 80209ac:	4542      	cmp	r2, r8
 80209ae:	f280 81d0 	bge.w	8020d52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80209b2:	f1bc 0f00 	cmp.w	ip, #0
 80209b6:	f2c0 81cc 	blt.w	8020d52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80209ba:	f10e 38ff 	add.w	r8, lr, #4294967295
 80209be:	45c4      	cmp	ip, r8
 80209c0:	f280 81c7 	bge.w	8020d52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80209c4:	b21b      	sxth	r3, r3
 80209c6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80209c8:	fb0c 2203 	mla	r2, ip, r3, r2
 80209cc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80209d0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80209d4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80209d8:	2900      	cmp	r1, #0
 80209da:	f000 8182 	beq.w	8020ce2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80209de:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80209e2:	950b      	str	r5, [sp, #44]	; 0x2c
 80209e4:	0e2d      	lsrs	r5, r5, #24
 80209e6:	9512      	str	r5, [sp, #72]	; 0x48
 80209e8:	b180      	cbz	r0, 8020a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80209ea:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80209ee:	3b01      	subs	r3, #1
 80209f0:	009b      	lsls	r3, r3, #2
 80209f2:	3304      	adds	r3, #4
 80209f4:	eb08 0c03 	add.w	ip, r8, r3
 80209f8:	f858 3003 	ldr.w	r3, [r8, r3]
 80209fc:	9308      	str	r3, [sp, #32]
 80209fe:	0e1b      	lsrs	r3, r3, #24
 8020a00:	9310      	str	r3, [sp, #64]	; 0x40
 8020a02:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8020a06:	930c      	str	r3, [sp, #48]	; 0x30
 8020a08:	0e1b      	lsrs	r3, r3, #24
 8020a0a:	9313      	str	r3, [sp, #76]	; 0x4c
 8020a0c:	b289      	uxth	r1, r1
 8020a0e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020a10:	b280      	uxth	r0, r0
 8020a12:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020a14:	fb01 f900 	mul.w	r9, r1, r0
 8020a18:	0109      	lsls	r1, r1, #4
 8020a1a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020a1e:	eba1 0809 	sub.w	r8, r1, r9
 8020a22:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8020a26:	b280      	uxth	r0, r0
 8020a28:	fa1f f888 	uxth.w	r8, r8
 8020a2c:	1a09      	subs	r1, r1, r0
 8020a2e:	fb08 f303 	mul.w	r3, r8, r3
 8020a32:	b289      	uxth	r1, r1
 8020a34:	fb01 330e 	mla	r3, r1, lr, r3
 8020a38:	fb00 3305 	mla	r3, r0, r5, r3
 8020a3c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020a3e:	fb09 3305 	mla	r3, r9, r5, r3
 8020a42:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020a46:	2b00      	cmp	r3, #0
 8020a48:	f000 80d2 	beq.w	8020bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020a4c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020a50:	d01b      	beq.n	8020a8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8020a52:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8020a56:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020a5a:	fb0e fa0a 	mul.w	sl, lr, sl
 8020a5e:	fb0e fe02 	mul.w	lr, lr, r2
 8020a62:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8020a66:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020a6a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020a6e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020a72:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020a76:	4452      	add	r2, sl
 8020a78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020a7c:	0a12      	lsrs	r2, r2, #8
 8020a7e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020a82:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020a86:	ea42 020c 	orr.w	r2, r2, ip
 8020a8a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020a8c:	2dff      	cmp	r5, #255	; 0xff
 8020a8e:	d021      	beq.n	8020ad4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8020a90:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8020a92:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020a96:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020a98:	fb05 fb0b 	mul.w	fp, r5, fp
 8020a9c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8020a9e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020aa2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020aa4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020aa8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020aac:	fb05 fa0a 	mul.w	sl, r5, sl
 8020ab0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ab4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020ab8:	44de      	add	lr, fp
 8020aba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020abe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020ac2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020ac6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020aca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ace:	ea4e 050a 	orr.w	r5, lr, sl
 8020ad2:	950b      	str	r5, [sp, #44]	; 0x2c
 8020ad4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020ad6:	2dff      	cmp	r5, #255	; 0xff
 8020ad8:	d021      	beq.n	8020b1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8020ada:	9d08      	ldr	r5, [sp, #32]
 8020adc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020ae0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020ae2:	fb05 fb0b 	mul.w	fp, r5, fp
 8020ae6:	9d08      	ldr	r5, [sp, #32]
 8020ae8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8020aec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020aee:	fb05 fa0e 	mul.w	sl, r5, lr
 8020af2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020af6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020afa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020afe:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020b02:	44de      	add	lr, fp
 8020b04:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020b08:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020b0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b10:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b14:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b18:	ea4e 050a 	orr.w	r5, lr, sl
 8020b1c:	9508      	str	r5, [sp, #32]
 8020b1e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020b20:	2dff      	cmp	r5, #255	; 0xff
 8020b22:	d021      	beq.n	8020b68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8020b24:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020b26:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020b2a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020b2c:	fb05 fb0b 	mul.w	fp, r5, fp
 8020b30:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020b32:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020b36:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020b38:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020b3c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020b40:	fb05 fa0a 	mul.w	sl, r5, sl
 8020b44:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b48:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020b4c:	44de      	add	lr, fp
 8020b4e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020b52:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020b56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b5a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b5e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b62:	ea4e 050a 	orr.w	r5, lr, sl
 8020b66:	950c      	str	r5, [sp, #48]	; 0x30
 8020b68:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8020b6a:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8020b6e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020b72:	2bff      	cmp	r3, #255	; 0xff
 8020b74:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020b78:	9d08      	ldr	r5, [sp, #32]
 8020b7a:	fb08 fc0c 	mul.w	ip, r8, ip
 8020b7e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020b82:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8020b86:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020b88:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020b8c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8020b90:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8020b92:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020b96:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8020b9a:	fb08 f80e 	mul.w	r8, r8, lr
 8020b9e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ba2:	fb01 8202 	mla	r2, r1, r2, r8
 8020ba6:	9908      	ldr	r1, [sp, #32]
 8020ba8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020bac:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8020bb0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020bb2:	fb00 220a 	mla	r2, r0, sl, r2
 8020bb6:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8020bba:	fb09 2900 	mla	r9, r9, r0, r2
 8020bbe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020bc2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020bc6:	ea4c 0c09 	orr.w	ip, ip, r9
 8020bca:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8020bce:	f040 8091 	bne.w	8020cf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8020bd2:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8020bd6:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8020bda:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020bde:	f022 0207 	bic.w	r2, r2, #7
 8020be2:	431a      	orrs	r2, r3
 8020be4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020be8:	ea4c 0c02 	orr.w	ip, ip, r2
 8020bec:	f8a7 c000 	strh.w	ip, [r7]
 8020bf0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020bf2:	3702      	adds	r7, #2
 8020bf4:	441c      	add	r4, r3
 8020bf6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020bf8:	441e      	add	r6, r3
 8020bfa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020bfc:	3b01      	subs	r3, #1
 8020bfe:	9317      	str	r3, [sp, #92]	; 0x5c
 8020c00:	e6c0      	b.n	8020984 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020c02:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020c04:	441c      	add	r4, r3
 8020c06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020c08:	441e      	add	r6, r3
 8020c0a:	9b07      	ldr	r3, [sp, #28]
 8020c0c:	3b01      	subs	r3, #1
 8020c0e:	9307      	str	r3, [sp, #28]
 8020c10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020c12:	3302      	adds	r3, #2
 8020c14:	930a      	str	r3, [sp, #40]	; 0x28
 8020c16:	e695      	b.n	8020944 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020c18:	d024      	beq.n	8020c64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8020c1a:	9b07      	ldr	r3, [sp, #28]
 8020c1c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8020c1e:	3b01      	subs	r3, #1
 8020c20:	fb00 4003 	mla	r0, r0, r3, r4
 8020c24:	1400      	asrs	r0, r0, #16
 8020c26:	f53f aeaa 	bmi.w	802097e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020c2a:	3901      	subs	r1, #1
 8020c2c:	4288      	cmp	r0, r1
 8020c2e:	f6bf aea6 	bge.w	802097e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020c32:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020c34:	fb01 6303 	mla	r3, r1, r3, r6
 8020c38:	141b      	asrs	r3, r3, #16
 8020c3a:	f53f aea0 	bmi.w	802097e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020c3e:	3a01      	subs	r2, #1
 8020c40:	4293      	cmp	r3, r2
 8020c42:	f6bf ae9c 	bge.w	802097e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020c46:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020c4a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8020c4e:	f1bb 0f00 	cmp.w	fp, #0
 8020c52:	f300 809a 	bgt.w	8020d8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8020c56:	9b07      	ldr	r3, [sp, #28]
 8020c58:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020c5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020c5e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8020c62:	930a      	str	r3, [sp, #40]	; 0x28
 8020c64:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020c66:	2b00      	cmp	r3, #0
 8020c68:	f340 81ec 	ble.w	8021044 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8020c6c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020c70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020c72:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020c76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020c7a:	eef0 6a62 	vmov.f32	s13, s5
 8020c7e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020c82:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020c86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c8a:	ee16 4a90 	vmov	r4, s13
 8020c8e:	eef0 6a43 	vmov.f32	s13, s6
 8020c92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c96:	ee16 6a90 	vmov	r6, s13
 8020c9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020c9e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020ca2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020ca6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020caa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020cae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020cb2:	ee12 2a90 	vmov	r2, s5
 8020cb6:	eef0 2a47 	vmov.f32	s5, s14
 8020cba:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cbe:	ee13 2a10 	vmov	r2, s6
 8020cc2:	9327      	str	r3, [sp, #156]	; 0x9c
 8020cc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020cc6:	eeb0 3a67 	vmov.f32	s6, s15
 8020cca:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cce:	9328      	str	r3, [sp, #160]	; 0xa0
 8020cd0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020cd2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020cd4:	3b01      	subs	r3, #1
 8020cd6:	9316      	str	r3, [sp, #88]	; 0x58
 8020cd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020cda:	bf08      	it	eq
 8020cdc:	4613      	moveq	r3, r2
 8020cde:	9307      	str	r3, [sp, #28]
 8020ce0:	e622      	b.n	8020928 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8020ce2:	2800      	cmp	r0, #0
 8020ce4:	f43f ae92 	beq.w	8020a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8020ce8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8020cec:	9308      	str	r3, [sp, #32]
 8020cee:	0e1b      	lsrs	r3, r3, #24
 8020cf0:	9310      	str	r3, [sp, #64]	; 0x40
 8020cf2:	e68b      	b.n	8020a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8020cf4:	8839      	ldrh	r1, [r7, #0]
 8020cf6:	43db      	mvns	r3, r3
 8020cf8:	4dd4      	ldr	r5, [pc, #848]	; (802104c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8020cfa:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8020cfe:	fa5f f883 	uxtb.w	r8, r3
 8020d02:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8020d06:	10c8      	asrs	r0, r1, #3
 8020d08:	00cb      	lsls	r3, r1, #3
 8020d0a:	fb0e fe08 	mul.w	lr, lr, r8
 8020d0e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020d12:	b2db      	uxtb	r3, r3
 8020d14:	f10e 0101 	add.w	r1, lr, #1
 8020d18:	fb00 f008 	mul.w	r0, r0, r8
 8020d1c:	fb03 f308 	mul.w	r3, r3, r8
 8020d20:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8020d24:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8020d28:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8020d2c:	f100 0e01 	add.w	lr, r0, #1
 8020d30:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8020d34:	b2c9      	uxtb	r1, r1
 8020d36:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020d3a:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8020d3e:	00d2      	lsls	r2, r2, #3
 8020d40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020d44:	430a      	orrs	r2, r1
 8020d46:	1c59      	adds	r1, r3, #1
 8020d48:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8020d4c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020d50:	e748      	b.n	8020be4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8020d52:	f112 0801 	adds.w	r8, r2, #1
 8020d56:	f53f af4b 	bmi.w	8020bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020d5a:	4543      	cmp	r3, r8
 8020d5c:	f6ff af48 	blt.w	8020bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020d60:	f11c 0801 	adds.w	r8, ip, #1
 8020d64:	f53f af44 	bmi.w	8020bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020d68:	45c6      	cmp	lr, r8
 8020d6a:	f6ff af41 	blt.w	8020bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020d6e:	b21b      	sxth	r3, r3
 8020d70:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8020d74:	fa0f f28e 	sxth.w	r2, lr
 8020d78:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8020d7c:	9200      	str	r2, [sp, #0]
 8020d7e:	4639      	mov	r1, r7
 8020d80:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020d82:	9819      	ldr	r0, [sp, #100]	; 0x64
 8020d84:	f7ff fc88 	bl	8020698 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8020d88:	e732      	b.n	8020bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020d8a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020d8c:	1421      	asrs	r1, r4, #16
 8020d8e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8020d90:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020d94:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8020d98:	1433      	asrs	r3, r6, #16
 8020d9a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020d9e:	fb07 1303 	mla	r3, r7, r3, r1
 8020da2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8020da4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8020da8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8020dac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020db0:	2a00      	cmp	r2, #0
 8020db2:	f000 8108 	beq.w	8020fc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 8020db6:	684d      	ldr	r5, [r1, #4]
 8020db8:	950d      	str	r5, [sp, #52]	; 0x34
 8020dba:	0e2d      	lsrs	r5, r5, #24
 8020dbc:	9514      	str	r5, [sp, #80]	; 0x50
 8020dbe:	b178      	cbz	r0, 8020de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020dc0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8020dc4:	3f01      	subs	r7, #1
 8020dc6:	00bf      	lsls	r7, r7, #2
 8020dc8:	3704      	adds	r7, #4
 8020dca:	eb01 0e07 	add.w	lr, r1, r7
 8020dce:	59c9      	ldr	r1, [r1, r7]
 8020dd0:	9109      	str	r1, [sp, #36]	; 0x24
 8020dd2:	0e09      	lsrs	r1, r1, #24
 8020dd4:	9111      	str	r1, [sp, #68]	; 0x44
 8020dd6:	f8de 1004 	ldr.w	r1, [lr, #4]
 8020dda:	910e      	str	r1, [sp, #56]	; 0x38
 8020ddc:	0e09      	lsrs	r1, r1, #24
 8020dde:	9115      	str	r1, [sp, #84]	; 0x54
 8020de0:	b292      	uxth	r2, r2
 8020de2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020de4:	b280      	uxth	r0, r0
 8020de6:	fb02 f900 	mul.w	r9, r2, r0
 8020dea:	0112      	lsls	r2, r2, #4
 8020dec:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020df0:	eba2 0e09 	sub.w	lr, r2, r9
 8020df4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8020df8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020dfa:	b280      	uxth	r0, r0
 8020dfc:	fa1f fe8e 	uxth.w	lr, lr
 8020e00:	1a09      	subs	r1, r1, r0
 8020e02:	fb0e f202 	mul.w	r2, lr, r2
 8020e06:	b289      	uxth	r1, r1
 8020e08:	fb01 220c 	mla	r2, r1, ip, r2
 8020e0c:	fb00 2205 	mla	r2, r0, r5, r2
 8020e10:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8020e12:	fb09 2205 	mla	r2, r9, r5, r2
 8020e16:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020e1a:	2a00      	cmp	r2, #0
 8020e1c:	f000 80ca 	beq.w	8020fb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8020e20:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020e24:	d019      	beq.n	8020e5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8020e26:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020e2a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020e2e:	fb0c fa0a 	mul.w	sl, ip, sl
 8020e32:	fb0c fc03 	mul.w	ip, ip, r3
 8020e36:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020e3a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020e3e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020e42:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020e46:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020e4a:	4453      	add	r3, sl
 8020e4c:	0a3f      	lsrs	r7, r7, #8
 8020e4e:	0a1b      	lsrs	r3, r3, #8
 8020e50:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020e54:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020e58:	433b      	orrs	r3, r7
 8020e5a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020e5c:	2dff      	cmp	r5, #255	; 0xff
 8020e5e:	d020      	beq.n	8020ea2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8020e60:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020e62:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8020e66:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020e68:	436f      	muls	r7, r5
 8020e6a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020e6c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020e70:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020e74:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020e76:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020e7a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e7e:	fb05 fa0a 	mul.w	sl, r5, sl
 8020e82:	44bc      	add	ip, r7
 8020e84:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020e88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e8c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020e90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020e98:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020e9c:	ea4c 050a 	orr.w	r5, ip, sl
 8020ea0:	950d      	str	r5, [sp, #52]	; 0x34
 8020ea2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020ea4:	2dff      	cmp	r5, #255	; 0xff
 8020ea6:	d020      	beq.n	8020eea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8020ea8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8020eaa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8020eae:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020eb0:	436f      	muls	r7, r5
 8020eb2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8020eb4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8020eb8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020eba:	fb05 fa0c 	mul.w	sl, r5, ip
 8020ebe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020ec2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020ec6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020eca:	44bc      	add	ip, r7
 8020ecc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020ed0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020ed4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ed8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020edc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020ee0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ee4:	ea4c 050a 	orr.w	r5, ip, sl
 8020ee8:	9509      	str	r5, [sp, #36]	; 0x24
 8020eea:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8020eec:	2dff      	cmp	r5, #255	; 0xff
 8020eee:	d020      	beq.n	8020f32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8020ef0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020ef2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8020ef6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8020ef8:	436f      	muls	r7, r5
 8020efa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020efc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020f00:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020f04:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8020f06:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020f0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f0e:	fb05 fa0a 	mul.w	sl, r5, sl
 8020f12:	44bc      	add	ip, r7
 8020f14:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020f18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f1c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020f20:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f28:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f2c:	ea4c 050a 	orr.w	r5, ip, sl
 8020f30:	950e      	str	r5, [sp, #56]	; 0x38
 8020f32:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020f34:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020f38:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020f3c:	2aff      	cmp	r2, #255	; 0xff
 8020f3e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8020f42:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8020f44:	fb0e f707 	mul.w	r7, lr, r7
 8020f48:	fb01 770c 	mla	r7, r1, ip, r7
 8020f4c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020f50:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020f52:	fb00 770c 	mla	r7, r0, ip, r7
 8020f56:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020f5a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020f5c:	fb09 770c 	mla	r7, r9, ip, r7
 8020f60:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8020f64:	fb0e fe0c 	mul.w	lr, lr, ip
 8020f68:	ea4f 2717 	mov.w	r7, r7, lsr #8
 8020f6c:	fb01 e303 	mla	r3, r1, r3, lr
 8020f70:	9909      	ldr	r1, [sp, #36]	; 0x24
 8020f72:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020f76:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8020f7a:	990e      	ldr	r1, [sp, #56]	; 0x38
 8020f7c:	fb00 330a 	mla	r3, r0, sl, r3
 8020f80:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8020f84:	fb09 3c0c 	mla	ip, r9, ip, r3
 8020f88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f8c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020f90:	ea47 070c 	orr.w	r7, r7, ip
 8020f94:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8020f98:	d11e      	bne.n	8020fd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 8020f9a:	097a      	lsrs	r2, r7, #5
 8020f9c:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8020fa0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8020fa4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020fa8:	f023 0307 	bic.w	r3, r3, #7
 8020fac:	4313      	orrs	r3, r2
 8020fae:	431f      	orrs	r7, r3
 8020fb0:	f8a8 7000 	strh.w	r7, [r8]
 8020fb4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020fb6:	f108 0802 	add.w	r8, r8, #2
 8020fba:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020fbe:	441c      	add	r4, r3
 8020fc0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020fc2:	441e      	add	r6, r3
 8020fc4:	e643      	b.n	8020c4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8020fc6:	2800      	cmp	r0, #0
 8020fc8:	f43f af0a 	beq.w	8020de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020fcc:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8020fd0:	9109      	str	r1, [sp, #36]	; 0x24
 8020fd2:	0e09      	lsrs	r1, r1, #24
 8020fd4:	9111      	str	r1, [sp, #68]	; 0x44
 8020fd6:	e703      	b.n	8020de0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020fd8:	f8b8 1000 	ldrh.w	r1, [r8]
 8020fdc:	43d2      	mvns	r2, r2
 8020fde:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8020fe2:	fa5f fe82 	uxtb.w	lr, r2
 8020fe6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020fea:	10c8      	asrs	r0, r1, #3
 8020fec:	00ca      	lsls	r2, r1, #3
 8020fee:	fb0c fc0e 	mul.w	ip, ip, lr
 8020ff2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020ff6:	b2d2      	uxtb	r2, r2
 8020ff8:	f10c 0101 	add.w	r1, ip, #1
 8020ffc:	fb00 f00e 	mul.w	r0, r0, lr
 8021000:	fb02 f20e 	mul.w	r2, r2, lr
 8021004:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8021008:	0c39      	lsrs	r1, r7, #16
 802100a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802100e:	490f      	ldr	r1, [pc, #60]	; (802104c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8021010:	fa5f fc8c 	uxtb.w	ip, ip
 8021014:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8021018:	1c41      	adds	r1, r0, #1
 802101a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802101e:	1c51      	adds	r1, r2, #1
 8021020:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021024:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021028:	00c0      	lsls	r0, r0, #3
 802102a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802102e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021032:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8021036:	ea4c 0c00 	orr.w	ip, ip, r0
 802103a:	ea47 0c0c 	orr.w	ip, r7, ip
 802103e:	f8a8 c000 	strh.w	ip, [r8]
 8021042:	e7b7      	b.n	8020fb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8021044:	b01b      	add	sp, #108	; 0x6c
 8021046:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802104a:	bf00      	nop
 802104c:	fffff800 	.word	0xfffff800

08021050 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8021050:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021054:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8021058:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802105c:	2d00      	cmp	r5, #0
 802105e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8021062:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8021066:	fb05 0e03 	mla	lr, r5, r3, r0
 802106a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802106e:	f2c0 808c 	blt.w	802118a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8021072:	45a9      	cmp	r9, r5
 8021074:	f340 8089 	ble.w	802118a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8021078:	2800      	cmp	r0, #0
 802107a:	f2c0 8084 	blt.w	8021186 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802107e:	4580      	cmp	r8, r0
 8021080:	f340 8081 	ble.w	8021186 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8021084:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8021088:	f01e 0f01 	tst.w	lr, #1
 802108c:	5d16      	ldrb	r6, [r2, r4]
 802108e:	bf0c      	ite	eq
 8021090:	f006 060f 	andeq.w	r6, r6, #15
 8021094:	1136      	asrne	r6, r6, #4
 8021096:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802109a:	b2f6      	uxtb	r6, r6
 802109c:	1c44      	adds	r4, r0, #1
 802109e:	d477      	bmi.n	8021190 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80210a0:	45a0      	cmp	r8, r4
 80210a2:	dd75      	ble.n	8021190 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80210a4:	2f00      	cmp	r7, #0
 80210a6:	d075      	beq.n	8021194 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80210a8:	f10e 0a01 	add.w	sl, lr, #1
 80210ac:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80210b0:	f01a 0f01 	tst.w	sl, #1
 80210b4:	5d14      	ldrb	r4, [r2, r4]
 80210b6:	bf0c      	ite	eq
 80210b8:	f004 040f 	andeq.w	r4, r4, #15
 80210bc:	1124      	asrne	r4, r4, #4
 80210be:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80210c2:	b2e4      	uxtb	r4, r4
 80210c4:	3501      	adds	r5, #1
 80210c6:	d469      	bmi.n	802119c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80210c8:	45a9      	cmp	r9, r5
 80210ca:	dd67      	ble.n	802119c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80210cc:	f1bc 0f00 	cmp.w	ip, #0
 80210d0:	d067      	beq.n	80211a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80210d2:	2800      	cmp	r0, #0
 80210d4:	db60      	blt.n	8021198 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80210d6:	4580      	cmp	r8, r0
 80210d8:	dd5e      	ble.n	8021198 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80210da:	eb03 090e 	add.w	r9, r3, lr
 80210de:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80210e2:	f019 0f01 	tst.w	r9, #1
 80210e6:	5d55      	ldrb	r5, [r2, r5]
 80210e8:	bf0c      	ite	eq
 80210ea:	f005 050f 	andeq.w	r5, r5, #15
 80210ee:	112d      	asrne	r5, r5, #4
 80210f0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80210f4:	b2ed      	uxtb	r5, r5
 80210f6:	3001      	adds	r0, #1
 80210f8:	d456      	bmi.n	80211a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80210fa:	4580      	cmp	r8, r0
 80210fc:	dd54      	ble.n	80211a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80210fe:	2f00      	cmp	r7, #0
 8021100:	d054      	beq.n	80211ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8021102:	3301      	adds	r3, #1
 8021104:	449e      	add	lr, r3
 8021106:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802110a:	f01e 0f01 	tst.w	lr, #1
 802110e:	5cd0      	ldrb	r0, [r2, r3]
 8021110:	bf0c      	ite	eq
 8021112:	f000 000f 	andeq.w	r0, r0, #15
 8021116:	1100      	asrne	r0, r0, #4
 8021118:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802111c:	b2c3      	uxtb	r3, r0
 802111e:	b2ba      	uxth	r2, r7
 8021120:	fa1f fc8c 	uxth.w	ip, ip
 8021124:	fb02 f00c 	mul.w	r0, r2, ip
 8021128:	0112      	lsls	r2, r2, #4
 802112a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802112e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8021132:	1a12      	subs	r2, r2, r0
 8021134:	fa1f fc8c 	uxth.w	ip, ip
 8021138:	b292      	uxth	r2, r2
 802113a:	eba7 070c 	sub.w	r7, r7, ip
 802113e:	4362      	muls	r2, r4
 8021140:	b2bf      	uxth	r7, r7
 8021142:	fb06 2207 	mla	r2, r6, r7, r2
 8021146:	fb0c 2505 	mla	r5, ip, r5, r2
 802114a:	fb00 5303 	mla	r3, r0, r3, r5
 802114e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021152:	b1b3      	cbz	r3, 8021182 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8021154:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8021158:	435a      	muls	r2, r3
 802115a:	1c53      	adds	r3, r2, #1
 802115c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021160:	4a2d      	ldr	r2, [pc, #180]	; (8021218 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8021162:	121b      	asrs	r3, r3, #8
 8021164:	6812      	ldr	r2, [r2, #0]
 8021166:	2bff      	cmp	r3, #255	; 0xff
 8021168:	ea4f 2612 	mov.w	r6, r2, lsr #8
 802116c:	d120      	bne.n	80211b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802116e:	0950      	lsrs	r0, r2, #5
 8021170:	4b2a      	ldr	r3, [pc, #168]	; (802121c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8021172:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021176:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802117a:	4033      	ands	r3, r6
 802117c:	4318      	orrs	r0, r3
 802117e:	4302      	orrs	r2, r0
 8021180:	800a      	strh	r2, [r1, #0]
 8021182:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021186:	2600      	movs	r6, #0
 8021188:	e788      	b.n	802109c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802118a:	2400      	movs	r4, #0
 802118c:	4626      	mov	r6, r4
 802118e:	e799      	b.n	80210c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8021190:	2400      	movs	r4, #0
 8021192:	e797      	b.n	80210c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8021194:	463c      	mov	r4, r7
 8021196:	e795      	b.n	80210c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8021198:	2500      	movs	r5, #0
 802119a:	e7ac      	b.n	80210f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 802119c:	2300      	movs	r3, #0
 802119e:	461d      	mov	r5, r3
 80211a0:	e7bd      	b.n	802111e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80211a2:	4663      	mov	r3, ip
 80211a4:	4665      	mov	r5, ip
 80211a6:	e7ba      	b.n	802111e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80211a8:	2300      	movs	r3, #0
 80211aa:	e7b8      	b.n	802111e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80211ac:	463b      	mov	r3, r7
 80211ae:	e7b6      	b.n	802111e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80211b0:	880d      	ldrh	r5, [r1, #0]
 80211b2:	b29f      	uxth	r7, r3
 80211b4:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80211b8:	43db      	mvns	r3, r3
 80211ba:	122c      	asrs	r4, r5, #8
 80211bc:	fb10 f007 	smulbb	r0, r0, r7
 80211c0:	b2db      	uxtb	r3, r3
 80211c2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80211c6:	b2f6      	uxtb	r6, r6
 80211c8:	b2d2      	uxtb	r2, r2
 80211ca:	fb04 0403 	mla	r4, r4, r3, r0
 80211ce:	10e8      	asrs	r0, r5, #3
 80211d0:	fb12 f207 	smulbb	r2, r2, r7
 80211d4:	00ed      	lsls	r5, r5, #3
 80211d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80211da:	b2a4      	uxth	r4, r4
 80211dc:	fb16 f607 	smulbb	r6, r6, r7
 80211e0:	b2ed      	uxtb	r5, r5
 80211e2:	fb00 6603 	mla	r6, r0, r3, r6
 80211e6:	fb05 2303 	mla	r3, r5, r3, r2
 80211ea:	b2b0      	uxth	r0, r6
 80211ec:	b29a      	uxth	r2, r3
 80211ee:	1c63      	adds	r3, r4, #1
 80211f0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80211f4:	1c53      	adds	r3, r2, #1
 80211f6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80211fa:	1c42      	adds	r2, r0, #1
 80211fc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8021200:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021204:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021208:	0940      	lsrs	r0, r0, #5
 802120a:	4323      	orrs	r3, r4
 802120c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021210:	4303      	orrs	r3, r0
 8021212:	800b      	strh	r3, [r1, #0]
 8021214:	e7b5      	b.n	8021182 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8021216:	bf00      	nop
 8021218:	20032434 	.word	0x20032434
 802121c:	00fff800 	.word	0x00fff800

08021220 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021224:	b097      	sub	sp, #92	; 0x5c
 8021226:	9214      	str	r2, [sp, #80]	; 0x50
 8021228:	9309      	str	r3, [sp, #36]	; 0x24
 802122a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802122c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021230:	9015      	str	r0, [sp, #84]	; 0x54
 8021232:	910d      	str	r1, [sp, #52]	; 0x34
 8021234:	6850      	ldr	r0, [r2, #4]
 8021236:	930f      	str	r3, [sp, #60]	; 0x3c
 8021238:	6812      	ldr	r2, [r2, #0]
 802123a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802123e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8021242:	fb00 1303 	mla	r3, r0, r3, r1
 8021246:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802124a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802124c:	689b      	ldr	r3, [r3, #8]
 802124e:	3301      	adds	r3, #1
 8021250:	f023 0301 	bic.w	r3, r3, #1
 8021254:	930a      	str	r3, [sp, #40]	; 0x28
 8021256:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021258:	681f      	ldr	r7, [r3, #0]
 802125a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802125c:	2b00      	cmp	r3, #0
 802125e:	dc03      	bgt.n	8021268 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021260:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8021262:	2b00      	cmp	r3, #0
 8021264:	f340 8289 	ble.w	802177a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 8021268:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802126a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802126e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021272:	1e48      	subs	r0, r1, #1
 8021274:	f102 3cff 	add.w	ip, r2, #4294967295
 8021278:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802127a:	2b00      	cmp	r3, #0
 802127c:	f340 80c5 	ble.w	802140a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8021280:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021284:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021288:	d406      	bmi.n	8021298 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802128a:	4586      	cmp	lr, r0
 802128c:	da04      	bge.n	8021298 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802128e:	2b00      	cmp	r3, #0
 8021290:	db02      	blt.n	8021298 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021292:	4563      	cmp	r3, ip
 8021294:	f2c0 80ba 	blt.w	802140c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8021298:	f11e 0e01 	adds.w	lr, lr, #1
 802129c:	f100 80ab 	bmi.w	80213f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 80212a0:	4571      	cmp	r1, lr
 80212a2:	f2c0 80a8 	blt.w	80213f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 80212a6:	3301      	adds	r3, #1
 80212a8:	f100 80a5 	bmi.w	80213f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 80212ac:	429a      	cmp	r2, r3
 80212ae:	f2c0 80a2 	blt.w	80213f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 80212b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80212b4:	46c8      	mov	r8, r9
 80212b6:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80212ba:	930e      	str	r3, [sp, #56]	; 0x38
 80212bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80212be:	2b00      	cmp	r3, #0
 80212c0:	f340 80c4 	ble.w	802144c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80212c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80212c6:	1430      	asrs	r0, r6, #16
 80212c8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80212cc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80212d0:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80212d4:	1423      	asrs	r3, r4, #16
 80212d6:	f100 814f 	bmi.w	8021578 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80212da:	f10c 3bff 	add.w	fp, ip, #4294967295
 80212de:	455b      	cmp	r3, fp
 80212e0:	f280 814a 	bge.w	8021578 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80212e4:	2800      	cmp	r0, #0
 80212e6:	f2c0 8147 	blt.w	8021578 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80212ea:	f10e 3bff 	add.w	fp, lr, #4294967295
 80212ee:	4558      	cmp	r0, fp
 80212f0:	f280 8142 	bge.w	8021578 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80212f4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80212f6:	fb00 3305 	mla	r3, r0, r5, r3
 80212fa:	0858      	lsrs	r0, r3, #1
 80212fc:	07dd      	lsls	r5, r3, #31
 80212fe:	f817 c000 	ldrb.w	ip, [r7, r0]
 8021302:	bf54      	ite	pl
 8021304:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021308:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802130c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021310:	fa5f fc8c 	uxtb.w	ip, ip
 8021314:	2a00      	cmp	r2, #0
 8021316:	f000 80dd 	beq.w	80214d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 802131a:	1c58      	adds	r0, r3, #1
 802131c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8021320:	07c0      	lsls	r0, r0, #31
 8021322:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021326:	bf54      	ite	pl
 8021328:	f00e 0e0f 	andpl.w	lr, lr, #15
 802132c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8021330:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8021334:	fa5f f08e 	uxtb.w	r0, lr
 8021338:	9010      	str	r0, [sp, #64]	; 0x40
 802133a:	b1d9      	cbz	r1, 8021374 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802133c:	4453      	add	r3, sl
 802133e:	0858      	lsrs	r0, r3, #1
 8021340:	07dd      	lsls	r5, r3, #31
 8021342:	f103 0301 	add.w	r3, r3, #1
 8021346:	5c38      	ldrb	r0, [r7, r0]
 8021348:	bf54      	ite	pl
 802134a:	f000 000f 	andpl.w	r0, r0, #15
 802134e:	1100      	asrmi	r0, r0, #4
 8021350:	07dd      	lsls	r5, r3, #31
 8021352:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021356:	b2c0      	uxtb	r0, r0
 8021358:	900b      	str	r0, [sp, #44]	; 0x2c
 802135a:	ea4f 0053 	mov.w	r0, r3, lsr #1
 802135e:	f817 e000 	ldrb.w	lr, [r7, r0]
 8021362:	bf54      	ite	pl
 8021364:	f00e 030f 	andpl.w	r3, lr, #15
 8021368:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802136c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8021370:	b2db      	uxtb	r3, r3
 8021372:	9311      	str	r3, [sp, #68]	; 0x44
 8021374:	b292      	uxth	r2, r2
 8021376:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8021378:	b289      	uxth	r1, r1
 802137a:	fb02 f301 	mul.w	r3, r2, r1
 802137e:	0112      	lsls	r2, r2, #4
 8021380:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8021384:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8021388:	1ad2      	subs	r2, r2, r3
 802138a:	b289      	uxth	r1, r1
 802138c:	b292      	uxth	r2, r2
 802138e:	1a40      	subs	r0, r0, r1
 8021390:	436a      	muls	r2, r5
 8021392:	b280      	uxth	r0, r0
 8021394:	fb0c 2c00 	mla	ip, ip, r0, r2
 8021398:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802139a:	fb01 c102 	mla	r1, r1, r2, ip
 802139e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80213a0:	fb03 1302 	mla	r3, r3, r2, r1
 80213a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80213a8:	b1db      	cbz	r3, 80213e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80213aa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80213ac:	4353      	muls	r3, r2
 80213ae:	1c5a      	adds	r2, r3, #1
 80213b0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80213b4:	4ac6      	ldr	r2, [pc, #792]	; (80216d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 80213b6:	121b      	asrs	r3, r3, #8
 80213b8:	6812      	ldr	r2, [r2, #0]
 80213ba:	2bff      	cmp	r3, #255	; 0xff
 80213bc:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80213c0:	f040 8099 	bne.w	80214f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80213c4:	0953      	lsrs	r3, r2, #5
 80213c6:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80213ca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80213ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80213d2:	f02c 0c07 	bic.w	ip, ip, #7
 80213d6:	ea43 0c0c 	orr.w	ip, r3, ip
 80213da:	ea4c 0202 	orr.w	r2, ip, r2
 80213de:	f8a8 2000 	strh.w	r2, [r8]
 80213e2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80213e4:	f108 0802 	add.w	r8, r8, #2
 80213e8:	441c      	add	r4, r3
 80213ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80213ec:	441e      	add	r6, r3
 80213ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80213f0:	3b01      	subs	r3, #1
 80213f2:	930e      	str	r3, [sp, #56]	; 0x38
 80213f4:	e762      	b.n	80212bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80213f6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80213f8:	f109 0902 	add.w	r9, r9, #2
 80213fc:	441c      	add	r4, r3
 80213fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021400:	441e      	add	r6, r3
 8021402:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021404:	3b01      	subs	r3, #1
 8021406:	9309      	str	r3, [sp, #36]	; 0x24
 8021408:	e736      	b.n	8021278 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802140a:	d024      	beq.n	8021456 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 802140c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802140e:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8021410:	3b01      	subs	r3, #1
 8021412:	fb00 4003 	mla	r0, r0, r3, r4
 8021416:	1400      	asrs	r0, r0, #16
 8021418:	f53f af4b 	bmi.w	80212b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802141c:	3901      	subs	r1, #1
 802141e:	4288      	cmp	r0, r1
 8021420:	f6bf af47 	bge.w	80212b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021424:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021426:	fb01 6303 	mla	r3, r1, r3, r6
 802142a:	141b      	asrs	r3, r3, #16
 802142c:	f53f af41 	bmi.w	80212b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021430:	3a01      	subs	r2, #1
 8021432:	4293      	cmp	r3, r2
 8021434:	f6bf af3d 	bge.w	80212b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021438:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802143c:	46c8      	mov	r8, r9
 802143e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8021442:	930e      	str	r3, [sp, #56]	; 0x38
 8021444:	f1bb 0f00 	cmp.w	fp, #0
 8021448:	f300 80b7 	bgt.w	80215ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 802144c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802144e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8021452:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8021456:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021458:	2b00      	cmp	r3, #0
 802145a:	f340 818e 	ble.w	802177a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 802145e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021462:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021464:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021468:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802146c:	eef0 6a62 	vmov.f32	s13, s5
 8021470:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021474:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021478:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802147c:	ee16 4a90 	vmov	r4, s13
 8021480:	eef0 6a43 	vmov.f32	s13, s6
 8021484:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021488:	ee16 6a90 	vmov	r6, s13
 802148c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021490:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021494:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021498:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802149c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80214a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80214a4:	ee12 2a90 	vmov	r2, s5
 80214a8:	eef0 2a47 	vmov.f32	s5, s14
 80214ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80214b0:	ee13 2a10 	vmov	r2, s6
 80214b4:	9323      	str	r3, [sp, #140]	; 0x8c
 80214b6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80214b8:	eeb0 3a67 	vmov.f32	s6, s15
 80214bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80214c0:	9324      	str	r3, [sp, #144]	; 0x90
 80214c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80214c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80214c6:	3b01      	subs	r3, #1
 80214c8:	930d      	str	r3, [sp, #52]	; 0x34
 80214ca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80214cc:	bf08      	it	eq
 80214ce:	4613      	moveq	r3, r2
 80214d0:	9309      	str	r3, [sp, #36]	; 0x24
 80214d2:	e6c2      	b.n	802125a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80214d4:	2900      	cmp	r1, #0
 80214d6:	f43f af4d 	beq.w	8021374 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80214da:	eb0a 0003 	add.w	r0, sl, r3
 80214de:	0843      	lsrs	r3, r0, #1
 80214e0:	07c0      	lsls	r0, r0, #31
 80214e2:	5cfb      	ldrb	r3, [r7, r3]
 80214e4:	bf54      	ite	pl
 80214e6:	f003 030f 	andpl.w	r3, r3, #15
 80214ea:	111b      	asrmi	r3, r3, #4
 80214ec:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80214f0:	b2db      	uxtb	r3, r3
 80214f2:	930b      	str	r3, [sp, #44]	; 0x2c
 80214f4:	e73e      	b.n	8021374 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80214f6:	f8b8 e000 	ldrh.w	lr, [r8]
 80214fa:	fa1f fb83 	uxth.w	fp, r3
 80214fe:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8021502:	43db      	mvns	r3, r3
 8021504:	ea4f 202e 	mov.w	r0, lr, asr #8
 8021508:	fb11 f10b 	smulbb	r1, r1, fp
 802150c:	b2db      	uxtb	r3, r3
 802150e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021512:	fa5f fc8c 	uxtb.w	ip, ip
 8021516:	b2d2      	uxtb	r2, r2
 8021518:	fb00 1003 	mla	r0, r0, r3, r1
 802151c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8021520:	fb1c fc0b 	smulbb	ip, ip, fp
 8021524:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021528:	b280      	uxth	r0, r0
 802152a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802152e:	fb12 fb0b 	smulbb	fp, r2, fp
 8021532:	fa5f fe8e 	uxtb.w	lr, lr
 8021536:	fb01 cc03 	mla	ip, r1, r3, ip
 802153a:	fb0e bb03 	mla	fp, lr, r3, fp
 802153e:	1c43      	adds	r3, r0, #1
 8021540:	fa1f fc8c 	uxth.w	ip, ip
 8021544:	fa1f fb8b 	uxth.w	fp, fp
 8021548:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802154c:	f10c 0101 	add.w	r1, ip, #1
 8021550:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8021554:	f10b 0001 	add.w	r0, fp, #1
 8021558:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802155c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8021560:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8021564:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8021568:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802156c:	4318      	orrs	r0, r3
 802156e:	ea40 000c 	orr.w	r0, r0, ip
 8021572:	f8a8 0000 	strh.w	r0, [r8]
 8021576:	e734      	b.n	80213e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8021578:	f113 0b01 	adds.w	fp, r3, #1
 802157c:	f53f af31 	bmi.w	80213e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8021580:	45dc      	cmp	ip, fp
 8021582:	f6ff af2e 	blt.w	80213e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8021586:	f110 0b01 	adds.w	fp, r0, #1
 802158a:	f53f af2a 	bmi.w	80213e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802158e:	45de      	cmp	lr, fp
 8021590:	f6ff af27 	blt.w	80213e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8021594:	9302      	str	r3, [sp, #8]
 8021596:	fa0f f38e 	sxth.w	r3, lr
 802159a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802159c:	9301      	str	r3, [sp, #4]
 802159e:	fa0f f38c 	sxth.w	r3, ip
 80215a2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80215a6:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80215aa:	9300      	str	r3, [sp, #0]
 80215ac:	463a      	mov	r2, r7
 80215ae:	4653      	mov	r3, sl
 80215b0:	4641      	mov	r1, r8
 80215b2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80215b4:	f7ff fd4c 	bl	8021050 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80215b8:	e713      	b.n	80213e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80215ba:	1422      	asrs	r2, r4, #16
 80215bc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80215be:	1433      	asrs	r3, r6, #16
 80215c0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80215c4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80215c8:	fb05 2303 	mla	r3, r5, r3, r2
 80215cc:	085a      	lsrs	r2, r3, #1
 80215ce:	07dd      	lsls	r5, r3, #31
 80215d0:	5cba      	ldrb	r2, [r7, r2]
 80215d2:	bf54      	ite	pl
 80215d4:	f002 020f 	andpl.w	r2, r2, #15
 80215d8:	1112      	asrmi	r2, r2, #4
 80215da:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80215de:	b2d2      	uxtb	r2, r2
 80215e0:	2900      	cmp	r1, #0
 80215e2:	d077      	beq.n	80216d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80215e4:	f103 0e01 	add.w	lr, r3, #1
 80215e8:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80215ec:	f01e 0f01 	tst.w	lr, #1
 80215f0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80215f4:	bf0c      	ite	eq
 80215f6:	f00c 0c0f 	andeq.w	ip, ip, #15
 80215fa:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80215fe:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021602:	fa5f f58c 	uxtb.w	r5, ip
 8021606:	9512      	str	r5, [sp, #72]	; 0x48
 8021608:	b308      	cbz	r0, 802164e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 802160a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802160c:	442b      	add	r3, r5
 802160e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8021612:	07dd      	lsls	r5, r3, #31
 8021614:	f103 0301 	add.w	r3, r3, #1
 8021618:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802161c:	bf54      	ite	pl
 802161e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021622:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021626:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802162a:	fa5f f58c 	uxtb.w	r5, ip
 802162e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8021632:	950c      	str	r5, [sp, #48]	; 0x30
 8021634:	07dd      	lsls	r5, r3, #31
 8021636:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802163a:	bf54      	ite	pl
 802163c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021640:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021644:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021648:	fa5f f38c 	uxtb.w	r3, ip
 802164c:	9313      	str	r3, [sp, #76]	; 0x4c
 802164e:	b289      	uxth	r1, r1
 8021650:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8021652:	b280      	uxth	r0, r0
 8021654:	fb01 f300 	mul.w	r3, r1, r0
 8021658:	0109      	lsls	r1, r1, #4
 802165a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802165e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8021662:	1ac9      	subs	r1, r1, r3
 8021664:	b280      	uxth	r0, r0
 8021666:	b289      	uxth	r1, r1
 8021668:	ebac 0c00 	sub.w	ip, ip, r0
 802166c:	4369      	muls	r1, r5
 802166e:	fa1f fc8c 	uxth.w	ip, ip
 8021672:	fb02 120c 	mla	r2, r2, ip, r1
 8021676:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021678:	fb00 2001 	mla	r0, r0, r1, r2
 802167c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802167e:	fb03 0302 	mla	r3, r3, r2, r0
 8021682:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021686:	b1d3      	cbz	r3, 80216be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 8021688:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802168a:	4353      	muls	r3, r2
 802168c:	1c5a      	adds	r2, r3, #1
 802168e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8021692:	4a0f      	ldr	r2, [pc, #60]	; (80216d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 8021694:	121b      	asrs	r3, r3, #8
 8021696:	6812      	ldr	r2, [r2, #0]
 8021698:	2bff      	cmp	r3, #255	; 0xff
 802169a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802169e:	d12d      	bne.n	80216fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 80216a0:	0953      	lsrs	r3, r2, #5
 80216a2:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80216a6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80216aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80216ae:	f02c 0c07 	bic.w	ip, ip, #7
 80216b2:	ea43 0c0c 	orr.w	ip, r3, ip
 80216b6:	ea4c 0202 	orr.w	r2, ip, r2
 80216ba:	f8a8 2000 	strh.w	r2, [r8]
 80216be:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80216c0:	f108 0802 	add.w	r8, r8, #2
 80216c4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80216c8:	441c      	add	r4, r3
 80216ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80216cc:	441e      	add	r6, r3
 80216ce:	e6b9      	b.n	8021444 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80216d0:	20032434 	.word	0x20032434
 80216d4:	2800      	cmp	r0, #0
 80216d6:	d0ba      	beq.n	802164e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 80216d8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80216da:	442b      	add	r3, r5
 80216dc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80216e0:	07db      	lsls	r3, r3, #31
 80216e2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80216e6:	bf54      	ite	pl
 80216e8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80216ec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80216f0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80216f4:	fa5f f38c 	uxtb.w	r3, ip
 80216f8:	930c      	str	r3, [sp, #48]	; 0x30
 80216fa:	e7a8      	b.n	802164e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 80216fc:	f8b8 e000 	ldrh.w	lr, [r8]
 8021700:	fa1f fa83 	uxth.w	sl, r3
 8021704:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8021708:	43db      	mvns	r3, r3
 802170a:	ea4f 202e 	mov.w	r0, lr, asr #8
 802170e:	fb11 f10a 	smulbb	r1, r1, sl
 8021712:	b2db      	uxtb	r3, r3
 8021714:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021718:	b2d2      	uxtb	r2, r2
 802171a:	fa5f fc8c 	uxtb.w	ip, ip
 802171e:	fb00 1003 	mla	r0, r0, r3, r1
 8021722:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8021726:	fb12 f20a 	smulbb	r2, r2, sl
 802172a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802172e:	b280      	uxth	r0, r0
 8021730:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021734:	fb1c fc0a 	smulbb	ip, ip, sl
 8021738:	fa5f fe8e 	uxtb.w	lr, lr
 802173c:	fb0e 2203 	mla	r2, lr, r3, r2
 8021740:	fb01 cc03 	mla	ip, r1, r3, ip
 8021744:	1c43      	adds	r3, r0, #1
 8021746:	b292      	uxth	r2, r2
 8021748:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802174c:	1c51      	adds	r1, r2, #1
 802174e:	fa1f fc8c 	uxth.w	ip, ip
 8021752:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021756:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802175a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802175e:	4308      	orrs	r0, r1
 8021760:	f10c 0101 	add.w	r1, ip, #1
 8021764:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8021768:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802176c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021770:	ea40 000c 	orr.w	r0, r0, ip
 8021774:	f8a8 0000 	strh.w	r0, [r8]
 8021778:	e7a1      	b.n	80216be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 802177a:	b017      	add	sp, #92	; 0x5c
 802177c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021780 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8021780:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021784:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8021788:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802178c:	2d00      	cmp	r5, #0
 802178e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8021792:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8021796:	fb05 0e03 	mla	lr, r5, r3, r0
 802179a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802179e:	f2c0 80b0 	blt.w	8021902 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80217a2:	45a9      	cmp	r9, r5
 80217a4:	f340 80ad 	ble.w	8021902 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80217a8:	2800      	cmp	r0, #0
 80217aa:	f2c0 80a8 	blt.w	80218fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80217ae:	4580      	cmp	r8, r0
 80217b0:	f340 80a5 	ble.w	80218fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80217b4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80217b8:	f01e 0f01 	tst.w	lr, #1
 80217bc:	5d16      	ldrb	r6, [r2, r4]
 80217be:	bf0c      	ite	eq
 80217c0:	f006 060f 	andeq.w	r6, r6, #15
 80217c4:	1136      	asrne	r6, r6, #4
 80217c6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80217ca:	b2f6      	uxtb	r6, r6
 80217cc:	1c44      	adds	r4, r0, #1
 80217ce:	f100 809b 	bmi.w	8021908 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80217d2:	45a0      	cmp	r8, r4
 80217d4:	f340 8098 	ble.w	8021908 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80217d8:	2f00      	cmp	r7, #0
 80217da:	f000 8097 	beq.w	802190c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80217de:	f10e 0a01 	add.w	sl, lr, #1
 80217e2:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80217e6:	f01a 0f01 	tst.w	sl, #1
 80217ea:	5d14      	ldrb	r4, [r2, r4]
 80217ec:	bf0c      	ite	eq
 80217ee:	f004 040f 	andeq.w	r4, r4, #15
 80217f2:	1124      	asrne	r4, r4, #4
 80217f4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80217f8:	b2e4      	uxtb	r4, r4
 80217fa:	3501      	adds	r5, #1
 80217fc:	f100 808a 	bmi.w	8021914 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8021800:	45a9      	cmp	r9, r5
 8021802:	f340 8087 	ble.w	8021914 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8021806:	f1bc 0f00 	cmp.w	ip, #0
 802180a:	f000 8086 	beq.w	802191a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802180e:	2800      	cmp	r0, #0
 8021810:	db7e      	blt.n	8021910 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8021812:	4580      	cmp	r8, r0
 8021814:	dd7c      	ble.n	8021910 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8021816:	eb03 090e 	add.w	r9, r3, lr
 802181a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802181e:	f019 0f01 	tst.w	r9, #1
 8021822:	5d55      	ldrb	r5, [r2, r5]
 8021824:	bf0c      	ite	eq
 8021826:	f005 050f 	andeq.w	r5, r5, #15
 802182a:	112d      	asrne	r5, r5, #4
 802182c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8021830:	b2ed      	uxtb	r5, r5
 8021832:	3001      	adds	r0, #1
 8021834:	d474      	bmi.n	8021920 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8021836:	4580      	cmp	r8, r0
 8021838:	dd72      	ble.n	8021920 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802183a:	2f00      	cmp	r7, #0
 802183c:	d072      	beq.n	8021924 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802183e:	3301      	adds	r3, #1
 8021840:	449e      	add	lr, r3
 8021842:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8021846:	f01e 0f01 	tst.w	lr, #1
 802184a:	5cd0      	ldrb	r0, [r2, r3]
 802184c:	bf0c      	ite	eq
 802184e:	f000 000f 	andeq.w	r0, r0, #15
 8021852:	1100      	asrne	r0, r0, #4
 8021854:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021858:	b2c3      	uxtb	r3, r0
 802185a:	b2ba      	uxth	r2, r7
 802185c:	fa1f fc8c 	uxth.w	ip, ip
 8021860:	fb02 f00c 	mul.w	r0, r2, ip
 8021864:	0112      	lsls	r2, r2, #4
 8021866:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802186a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802186e:	1a12      	subs	r2, r2, r0
 8021870:	fa1f fc8c 	uxth.w	ip, ip
 8021874:	b292      	uxth	r2, r2
 8021876:	eba7 070c 	sub.w	r7, r7, ip
 802187a:	4362      	muls	r2, r4
 802187c:	b2bf      	uxth	r7, r7
 802187e:	fb06 2207 	mla	r2, r6, r7, r2
 8021882:	fb0c 2505 	mla	r5, ip, r5, r2
 8021886:	fb00 5303 	mla	r3, r0, r3, r5
 802188a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802188e:	b3a3      	cbz	r3, 80218fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8021890:	4a25      	ldr	r2, [pc, #148]	; (8021928 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8021892:	880e      	ldrh	r6, [r1, #0]
 8021894:	6815      	ldr	r5, [r2, #0]
 8021896:	b29a      	uxth	r2, r3
 8021898:	1234      	asrs	r4, r6, #8
 802189a:	43db      	mvns	r3, r3
 802189c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80218a0:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80218a4:	b2db      	uxtb	r3, r3
 80218a6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80218aa:	fb10 f002 	smulbb	r0, r0, r2
 80218ae:	b2ed      	uxtb	r5, r5
 80218b0:	fb17 f702 	smulbb	r7, r7, r2
 80218b4:	fb04 0403 	mla	r4, r4, r3, r0
 80218b8:	10f0      	asrs	r0, r6, #3
 80218ba:	fb15 f202 	smulbb	r2, r5, r2
 80218be:	00f6      	lsls	r6, r6, #3
 80218c0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80218c4:	b2a4      	uxth	r4, r4
 80218c6:	b2f6      	uxtb	r6, r6
 80218c8:	fb00 7003 	mla	r0, r0, r3, r7
 80218cc:	fb06 2303 	mla	r3, r6, r3, r2
 80218d0:	b280      	uxth	r0, r0
 80218d2:	b29a      	uxth	r2, r3
 80218d4:	1c63      	adds	r3, r4, #1
 80218d6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80218da:	1c53      	adds	r3, r2, #1
 80218dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80218e0:	1c42      	adds	r2, r0, #1
 80218e2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80218e6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80218ea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80218ee:	0940      	lsrs	r0, r0, #5
 80218f0:	4323      	orrs	r3, r4
 80218f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80218f6:	4303      	orrs	r3, r0
 80218f8:	800b      	strh	r3, [r1, #0]
 80218fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80218fe:	2600      	movs	r6, #0
 8021900:	e764      	b.n	80217cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8021902:	2400      	movs	r4, #0
 8021904:	4626      	mov	r6, r4
 8021906:	e778      	b.n	80217fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8021908:	2400      	movs	r4, #0
 802190a:	e776      	b.n	80217fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802190c:	463c      	mov	r4, r7
 802190e:	e774      	b.n	80217fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8021910:	2500      	movs	r5, #0
 8021912:	e78e      	b.n	8021832 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8021914:	2300      	movs	r3, #0
 8021916:	461d      	mov	r5, r3
 8021918:	e79f      	b.n	802185a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802191a:	4663      	mov	r3, ip
 802191c:	4665      	mov	r5, ip
 802191e:	e79c      	b.n	802185a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021920:	2300      	movs	r3, #0
 8021922:	e79a      	b.n	802185a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021924:	463b      	mov	r3, r7
 8021926:	e798      	b.n	802185a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021928:	20032434 	.word	0x20032434

0802192c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802192c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021930:	b093      	sub	sp, #76	; 0x4c
 8021932:	461d      	mov	r5, r3
 8021934:	920c      	str	r2, [sp, #48]	; 0x30
 8021936:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021938:	9011      	str	r0, [sp, #68]	; 0x44
 802193a:	9107      	str	r1, [sp, #28]
 802193c:	6850      	ldr	r0, [r2, #4]
 802193e:	6812      	ldr	r2, [r2, #0]
 8021940:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8021944:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8021948:	fb00 1303 	mla	r3, r0, r3, r1
 802194c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8021950:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021952:	689b      	ldr	r3, [r3, #8]
 8021954:	3301      	adds	r3, #1
 8021956:	f023 0301 	bic.w	r3, r3, #1
 802195a:	9306      	str	r3, [sp, #24]
 802195c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802195e:	681f      	ldr	r7, [r3, #0]
 8021960:	9b07      	ldr	r3, [sp, #28]
 8021962:	2b00      	cmp	r3, #0
 8021964:	dc03      	bgt.n	802196e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021966:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021968:	2b00      	cmp	r3, #0
 802196a:	f340 8267 	ble.w	8021e3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802196e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021970:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021974:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021978:	1e48      	subs	r0, r1, #1
 802197a:	f102 3cff 	add.w	ip, r2, #4294967295
 802197e:	2d00      	cmp	r5, #0
 8021980:	f340 80b7 	ble.w	8021af2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021984:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021988:	ea4f 4326 	mov.w	r3, r6, asr #16
 802198c:	d406      	bmi.n	802199c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802198e:	4586      	cmp	lr, r0
 8021990:	da04      	bge.n	802199c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021992:	2b00      	cmp	r3, #0
 8021994:	db02      	blt.n	802199c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021996:	4563      	cmp	r3, ip
 8021998:	f2c0 80ac 	blt.w	8021af4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802199c:	f11e 0e01 	adds.w	lr, lr, #1
 80219a0:	f100 809f 	bmi.w	8021ae2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80219a4:	4571      	cmp	r1, lr
 80219a6:	f2c0 809c 	blt.w	8021ae2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80219aa:	3301      	adds	r3, #1
 80219ac:	f100 8099 	bmi.w	8021ae2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80219b0:	429a      	cmp	r2, r3
 80219b2:	f2c0 8096 	blt.w	8021ae2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80219b6:	46c8      	mov	r8, r9
 80219b8:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80219bc:	9509      	str	r5, [sp, #36]	; 0x24
 80219be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80219c0:	2b00      	cmp	r3, #0
 80219c2:	f340 80b5 	ble.w	8021b30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80219c6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80219ca:	1430      	asrs	r0, r6, #16
 80219cc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80219d0:	9308      	str	r3, [sp, #32]
 80219d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80219d4:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80219d8:	1423      	asrs	r3, r4, #16
 80219da:	f100 813f 	bmi.w	8021c5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80219de:	f10c 3bff 	add.w	fp, ip, #4294967295
 80219e2:	455b      	cmp	r3, fp
 80219e4:	f280 813a 	bge.w	8021c5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80219e8:	2800      	cmp	r0, #0
 80219ea:	f2c0 8137 	blt.w	8021c5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80219ee:	f10e 3bff 	add.w	fp, lr, #4294967295
 80219f2:	4558      	cmp	r0, fp
 80219f4:	f280 8132 	bge.w	8021c5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80219f8:	9a06      	ldr	r2, [sp, #24]
 80219fa:	fb00 3302 	mla	r3, r0, r2, r3
 80219fe:	0858      	lsrs	r0, r3, #1
 8021a00:	07da      	lsls	r2, r3, #31
 8021a02:	9a08      	ldr	r2, [sp, #32]
 8021a04:	f817 c000 	ldrb.w	ip, [r7, r0]
 8021a08:	bf54      	ite	pl
 8021a0a:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021a0e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021a12:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021a16:	fa5f fc8c 	uxtb.w	ip, ip
 8021a1a:	2a00      	cmp	r2, #0
 8021a1c:	f000 80cc 	beq.w	8021bb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021a20:	1c58      	adds	r0, r3, #1
 8021a22:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8021a26:	07c0      	lsls	r0, r0, #31
 8021a28:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021a2c:	bf54      	ite	pl
 8021a2e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8021a32:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8021a36:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8021a3a:	fa5f fe8e 	uxtb.w	lr, lr
 8021a3e:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8021a42:	b1b9      	cbz	r1, 8021a74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8021a44:	4453      	add	r3, sl
 8021a46:	0858      	lsrs	r0, r3, #1
 8021a48:	07da      	lsls	r2, r3, #31
 8021a4a:	5c38      	ldrb	r0, [r7, r0]
 8021a4c:	bf54      	ite	pl
 8021a4e:	f000 000f 	andpl.w	r0, r0, #15
 8021a52:	1100      	asrmi	r0, r0, #4
 8021a54:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021a58:	b2c0      	uxtb	r0, r0
 8021a5a:	900a      	str	r0, [sp, #40]	; 0x28
 8021a5c:	1c58      	adds	r0, r3, #1
 8021a5e:	0843      	lsrs	r3, r0, #1
 8021a60:	07c2      	lsls	r2, r0, #31
 8021a62:	5cfb      	ldrb	r3, [r7, r3]
 8021a64:	bf54      	ite	pl
 8021a66:	f003 030f 	andpl.w	r3, r3, #15
 8021a6a:	111b      	asrmi	r3, r3, #4
 8021a6c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8021a70:	b2db      	uxtb	r3, r3
 8021a72:	930e      	str	r3, [sp, #56]	; 0x38
 8021a74:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8021a78:	b289      	uxth	r1, r1
 8021a7a:	fb02 f301 	mul.w	r3, r2, r1
 8021a7e:	0112      	lsls	r2, r2, #4
 8021a80:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8021a84:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8021a88:	1ad2      	subs	r2, r2, r3
 8021a8a:	b289      	uxth	r1, r1
 8021a8c:	b292      	uxth	r2, r2
 8021a8e:	1a40      	subs	r0, r0, r1
 8021a90:	fa1f fe80 	uxth.w	lr, r0
 8021a94:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021a96:	4342      	muls	r2, r0
 8021a98:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8021a9c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021a9e:	fb01 c102 	mla	r1, r1, r2, ip
 8021aa2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8021aa4:	fb03 1302 	mla	r3, r3, r2, r1
 8021aa8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021aac:	2bff      	cmp	r3, #255	; 0xff
 8021aae:	f040 8094 	bne.w	8021bda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8021ab2:	4bbf      	ldr	r3, [pc, #764]	; (8021db0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8021ab4:	681a      	ldr	r2, [r3, #0]
 8021ab6:	4bbf      	ldr	r3, [pc, #764]	; (8021db4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8021ab8:	0951      	lsrs	r1, r2, #5
 8021aba:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8021abe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021ac2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021ac6:	430b      	orrs	r3, r1
 8021ac8:	4313      	orrs	r3, r2
 8021aca:	f8a8 3000 	strh.w	r3, [r8]
 8021ace:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021ad0:	f108 0802 	add.w	r8, r8, #2
 8021ad4:	441c      	add	r4, r3
 8021ad6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021ad8:	441e      	add	r6, r3
 8021ada:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021adc:	3b01      	subs	r3, #1
 8021ade:	9309      	str	r3, [sp, #36]	; 0x24
 8021ae0:	e76d      	b.n	80219be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021ae2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021ae4:	3d01      	subs	r5, #1
 8021ae6:	f109 0902 	add.w	r9, r9, #2
 8021aea:	441c      	add	r4, r3
 8021aec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021aee:	441e      	add	r6, r3
 8021af0:	e745      	b.n	802197e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8021af2:	d021      	beq.n	8021b38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8021af4:	1e6b      	subs	r3, r5, #1
 8021af6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021af8:	fb00 4003 	mla	r0, r0, r3, r4
 8021afc:	1400      	asrs	r0, r0, #16
 8021afe:	f53f af5a 	bmi.w	80219b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021b02:	3901      	subs	r1, #1
 8021b04:	4288      	cmp	r0, r1
 8021b06:	f6bf af56 	bge.w	80219b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021b0a:	9920      	ldr	r1, [sp, #128]	; 0x80
 8021b0c:	fb01 6303 	mla	r3, r1, r3, r6
 8021b10:	141b      	asrs	r3, r3, #16
 8021b12:	f53f af50 	bmi.w	80219b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021b16:	3a01      	subs	r2, #1
 8021b18:	4293      	cmp	r3, r2
 8021b1a:	f6bf af4c 	bge.w	80219b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021b1e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8021b22:	46a8      	mov	r8, r5
 8021b24:	46ce      	mov	lr, r9
 8021b26:	9308      	str	r3, [sp, #32]
 8021b28:	f1b8 0f00 	cmp.w	r8, #0
 8021b2c:	f300 80b6 	bgt.w	8021c9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021b30:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8021b34:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8021b38:	9b07      	ldr	r3, [sp, #28]
 8021b3a:	2b00      	cmp	r3, #0
 8021b3c:	f340 817e 	ble.w	8021e3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8021b40:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021b44:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021b46:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021b4a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021b4e:	eef0 6a62 	vmov.f32	s13, s5
 8021b52:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021b56:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021b5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021b5e:	ee16 4a90 	vmov	r4, s13
 8021b62:	eef0 6a43 	vmov.f32	s13, s6
 8021b66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021b6a:	ee16 6a90 	vmov	r6, s13
 8021b6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021b72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021b76:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021b7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021b7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021b82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021b86:	ee12 2a90 	vmov	r2, s5
 8021b8a:	eef0 2a47 	vmov.f32	s5, s14
 8021b8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021b92:	ee13 2a10 	vmov	r2, s6
 8021b96:	931f      	str	r3, [sp, #124]	; 0x7c
 8021b98:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021b9a:	eeb0 3a67 	vmov.f32	s6, s15
 8021b9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021ba2:	9320      	str	r3, [sp, #128]	; 0x80
 8021ba4:	9b07      	ldr	r3, [sp, #28]
 8021ba6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021ba8:	3b01      	subs	r3, #1
 8021baa:	9307      	str	r3, [sp, #28]
 8021bac:	bf08      	it	eq
 8021bae:	4615      	moveq	r5, r2
 8021bb0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021bb2:	bf18      	it	ne
 8021bb4:	461d      	movne	r5, r3
 8021bb6:	e6d3      	b.n	8021960 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8021bb8:	2900      	cmp	r1, #0
 8021bba:	f43f af5b 	beq.w	8021a74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8021bbe:	eb0a 0003 	add.w	r0, sl, r3
 8021bc2:	0843      	lsrs	r3, r0, #1
 8021bc4:	07c0      	lsls	r0, r0, #31
 8021bc6:	5cfb      	ldrb	r3, [r7, r3]
 8021bc8:	bf54      	ite	pl
 8021bca:	f003 030f 	andpl.w	r3, r3, #15
 8021bce:	111b      	asrmi	r3, r3, #4
 8021bd0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8021bd4:	b2db      	uxtb	r3, r3
 8021bd6:	930a      	str	r3, [sp, #40]	; 0x28
 8021bd8:	e74c      	b.n	8021a74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8021bda:	2b00      	cmp	r3, #0
 8021bdc:	f43f af77 	beq.w	8021ace <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021be0:	4a73      	ldr	r2, [pc, #460]	; (8021db0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8021be2:	fa1f fe83 	uxth.w	lr, r3
 8021be6:	f8b8 c000 	ldrh.w	ip, [r8]
 8021bea:	43db      	mvns	r3, r3
 8021bec:	6810      	ldr	r0, [r2, #0]
 8021bee:	ea4f 212c 	mov.w	r1, ip, asr #8
 8021bf2:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8021bf6:	b2db      	uxtb	r3, r3
 8021bf8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021bfc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8021c00:	fb12 f20e 	smulbb	r2, r2, lr
 8021c04:	b2c0      	uxtb	r0, r0
 8021c06:	fb1b fb0e 	smulbb	fp, fp, lr
 8021c0a:	fb01 2103 	mla	r1, r1, r3, r2
 8021c0e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021c12:	fb10 fe0e 	smulbb	lr, r0, lr
 8021c16:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021c1a:	b289      	uxth	r1, r1
 8021c1c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021c20:	fa5f fc8c 	uxtb.w	ip, ip
 8021c24:	fb02 b203 	mla	r2, r2, r3, fp
 8021c28:	1c48      	adds	r0, r1, #1
 8021c2a:	fb0c e303 	mla	r3, ip, r3, lr
 8021c2e:	b292      	uxth	r2, r2
 8021c30:	b29b      	uxth	r3, r3
 8021c32:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8021c36:	f102 0b01 	add.w	fp, r2, #1
 8021c3a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8021c3e:	1c59      	adds	r1, r3, #1
 8021c40:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8021c44:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021c48:	0952      	lsrs	r2, r2, #5
 8021c4a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8021c4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021c52:	4301      	orrs	r1, r0
 8021c54:	4311      	orrs	r1, r2
 8021c56:	f8a8 1000 	strh.w	r1, [r8]
 8021c5a:	e738      	b.n	8021ace <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021c5c:	f113 0b01 	adds.w	fp, r3, #1
 8021c60:	f53f af35 	bmi.w	8021ace <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021c64:	45dc      	cmp	ip, fp
 8021c66:	f6ff af32 	blt.w	8021ace <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021c6a:	f110 0b01 	adds.w	fp, r0, #1
 8021c6e:	f53f af2e 	bmi.w	8021ace <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021c72:	45de      	cmp	lr, fp
 8021c74:	f6ff af2b 	blt.w	8021ace <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021c78:	9302      	str	r3, [sp, #8]
 8021c7a:	fa0f f38e 	sxth.w	r3, lr
 8021c7e:	9a08      	ldr	r2, [sp, #32]
 8021c80:	9301      	str	r3, [sp, #4]
 8021c82:	fa0f f38c 	sxth.w	r3, ip
 8021c86:	9105      	str	r1, [sp, #20]
 8021c88:	4641      	mov	r1, r8
 8021c8a:	9300      	str	r3, [sp, #0]
 8021c8c:	4653      	mov	r3, sl
 8021c8e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8021c92:	463a      	mov	r2, r7
 8021c94:	9811      	ldr	r0, [sp, #68]	; 0x44
 8021c96:	f7ff fd73 	bl	8021780 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8021c9a:	e718      	b.n	8021ace <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021c9c:	1422      	asrs	r2, r4, #16
 8021c9e:	9906      	ldr	r1, [sp, #24]
 8021ca0:	1433      	asrs	r3, r6, #16
 8021ca2:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021ca6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8021caa:	fb01 2303 	mla	r3, r1, r3, r2
 8021cae:	085a      	lsrs	r2, r3, #1
 8021cb0:	07d9      	lsls	r1, r3, #31
 8021cb2:	5cba      	ldrb	r2, [r7, r2]
 8021cb4:	bf54      	ite	pl
 8021cb6:	f002 020f 	andpl.w	r2, r2, #15
 8021cba:	1112      	asrmi	r2, r2, #4
 8021cbc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8021cc0:	b2d2      	uxtb	r2, r2
 8021cc2:	2800      	cmp	r0, #0
 8021cc4:	d063      	beq.n	8021d8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8021cc6:	f103 0a01 	add.w	sl, r3, #1
 8021cca:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8021cce:	f01a 0f01 	tst.w	sl, #1
 8021cd2:	5c79      	ldrb	r1, [r7, r1]
 8021cd4:	bf0c      	ite	eq
 8021cd6:	f001 010f 	andeq.w	r1, r1, #15
 8021cda:	1109      	asrne	r1, r1, #4
 8021cdc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8021ce0:	b2c9      	uxtb	r1, r1
 8021ce2:	910f      	str	r1, [sp, #60]	; 0x3c
 8021ce4:	f1bc 0f00 	cmp.w	ip, #0
 8021ce8:	d01a      	beq.n	8021d20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8021cea:	9908      	ldr	r1, [sp, #32]
 8021cec:	440b      	add	r3, r1
 8021cee:	0859      	lsrs	r1, r3, #1
 8021cf0:	f013 0f01 	tst.w	r3, #1
 8021cf4:	f103 0301 	add.w	r3, r3, #1
 8021cf8:	5c79      	ldrb	r1, [r7, r1]
 8021cfa:	bf0c      	ite	eq
 8021cfc:	f001 010f 	andeq.w	r1, r1, #15
 8021d00:	1109      	asrne	r1, r1, #4
 8021d02:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8021d06:	b2c9      	uxtb	r1, r1
 8021d08:	910b      	str	r1, [sp, #44]	; 0x2c
 8021d0a:	0859      	lsrs	r1, r3, #1
 8021d0c:	07db      	lsls	r3, r3, #31
 8021d0e:	5c79      	ldrb	r1, [r7, r1]
 8021d10:	bf54      	ite	pl
 8021d12:	f001 010f 	andpl.w	r1, r1, #15
 8021d16:	1109      	asrmi	r1, r1, #4
 8021d18:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8021d1c:	b2c9      	uxtb	r1, r1
 8021d1e:	9110      	str	r1, [sp, #64]	; 0x40
 8021d20:	b280      	uxth	r0, r0
 8021d22:	fa1f fc8c 	uxth.w	ip, ip
 8021d26:	fb00 f30c 	mul.w	r3, r0, ip
 8021d2a:	0100      	lsls	r0, r0, #4
 8021d2c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8021d30:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8021d34:	1ac0      	subs	r0, r0, r3
 8021d36:	fa1f fc8c 	uxth.w	ip, ip
 8021d3a:	b280      	uxth	r0, r0
 8021d3c:	eba1 010c 	sub.w	r1, r1, ip
 8021d40:	fa1f fa81 	uxth.w	sl, r1
 8021d44:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8021d46:	4348      	muls	r0, r1
 8021d48:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8021d4a:	fb02 020a 	mla	r2, r2, sl, r0
 8021d4e:	fb0c 2c01 	mla	ip, ip, r1, r2
 8021d52:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8021d54:	fb03 c302 	mla	r3, r3, r2, ip
 8021d58:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021d5c:	2bff      	cmp	r3, #255	; 0xff
 8021d5e:	d12b      	bne.n	8021db8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8021d60:	4b13      	ldr	r3, [pc, #76]	; (8021db0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8021d62:	681a      	ldr	r2, [r3, #0]
 8021d64:	4b13      	ldr	r3, [pc, #76]	; (8021db4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8021d66:	0951      	lsrs	r1, r2, #5
 8021d68:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8021d6c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021d70:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021d74:	430b      	orrs	r3, r1
 8021d76:	4313      	orrs	r3, r2
 8021d78:	f8ae 3000 	strh.w	r3, [lr]
 8021d7c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021d7e:	f10e 0e02 	add.w	lr, lr, #2
 8021d82:	f108 38ff 	add.w	r8, r8, #4294967295
 8021d86:	441c      	add	r4, r3
 8021d88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021d8a:	441e      	add	r6, r3
 8021d8c:	e6cc      	b.n	8021b28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8021d8e:	f1bc 0f00 	cmp.w	ip, #0
 8021d92:	d0c5      	beq.n	8021d20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8021d94:	9908      	ldr	r1, [sp, #32]
 8021d96:	440b      	add	r3, r1
 8021d98:	0859      	lsrs	r1, r3, #1
 8021d9a:	07db      	lsls	r3, r3, #31
 8021d9c:	5c79      	ldrb	r1, [r7, r1]
 8021d9e:	bf54      	ite	pl
 8021da0:	f001 010f 	andpl.w	r1, r1, #15
 8021da4:	1109      	asrmi	r1, r1, #4
 8021da6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8021daa:	b2c9      	uxtb	r1, r1
 8021dac:	910b      	str	r1, [sp, #44]	; 0x2c
 8021dae:	e7b7      	b.n	8021d20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8021db0:	20032434 	.word	0x20032434
 8021db4:	fffff800 	.word	0xfffff800
 8021db8:	2b00      	cmp	r3, #0
 8021dba:	d0df      	beq.n	8021d7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8021dbc:	4a21      	ldr	r2, [pc, #132]	; (8021e44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8021dbe:	fa1f fa83 	uxth.w	sl, r3
 8021dc2:	f8be c000 	ldrh.w	ip, [lr]
 8021dc6:	43db      	mvns	r3, r3
 8021dc8:	6810      	ldr	r0, [r2, #0]
 8021dca:	ea4f 212c 	mov.w	r1, ip, asr #8
 8021dce:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8021dd2:	b2db      	uxtb	r3, r3
 8021dd4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021dd8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8021ddc:	fb12 f20a 	smulbb	r2, r2, sl
 8021de0:	b2c0      	uxtb	r0, r0
 8021de2:	fb1b fb0a 	smulbb	fp, fp, sl
 8021de6:	fb01 2103 	mla	r1, r1, r3, r2
 8021dea:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021dee:	fb10 f00a 	smulbb	r0, r0, sl
 8021df2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021df6:	b289      	uxth	r1, r1
 8021df8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021dfc:	fa5f fc8c 	uxtb.w	ip, ip
 8021e00:	fb02 b203 	mla	r2, r2, r3, fp
 8021e04:	fb0c 0003 	mla	r0, ip, r3, r0
 8021e08:	1c4b      	adds	r3, r1, #1
 8021e0a:	b292      	uxth	r2, r2
 8021e0c:	b280      	uxth	r0, r0
 8021e0e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8021e12:	f100 0b01 	add.w	fp, r0, #1
 8021e16:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8021e1a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8021e1e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8021e22:	ea4b 0101 	orr.w	r1, fp, r1
 8021e26:	f102 0b01 	add.w	fp, r2, #1
 8021e2a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8021e2e:	0952      	lsrs	r2, r2, #5
 8021e30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021e34:	4311      	orrs	r1, r2
 8021e36:	f8ae 1000 	strh.w	r1, [lr]
 8021e3a:	e79f      	b.n	8021d7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8021e3c:	b013      	add	sp, #76	; 0x4c
 8021e3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021e42:	bf00      	nop
 8021e44:	20032434 	.word	0x20032434

08021e48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8021e48:	b570      	push	{r4, r5, r6, lr}
 8021e4a:	1208      	asrs	r0, r1, #8
 8021e4c:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8021e50:	b29e      	uxth	r6, r3
 8021e52:	1213      	asrs	r3, r2, #8
 8021e54:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021e58:	10cc      	asrs	r4, r1, #3
 8021e5a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021e5e:	00c9      	lsls	r1, r1, #3
 8021e60:	fb10 f006 	smulbb	r0, r0, r6
 8021e64:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8021e68:	fb13 f305 	smulbb	r3, r3, r5
 8021e6c:	fb14 f406 	smulbb	r4, r4, r6
 8021e70:	4418      	add	r0, r3
 8021e72:	10d3      	asrs	r3, r2, #3
 8021e74:	00d2      	lsls	r2, r2, #3
 8021e76:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021e7a:	b280      	uxth	r0, r0
 8021e7c:	b2d2      	uxtb	r2, r2
 8021e7e:	fb13 f305 	smulbb	r3, r3, r5
 8021e82:	fb12 f205 	smulbb	r2, r2, r5
 8021e86:	441c      	add	r4, r3
 8021e88:	b2cb      	uxtb	r3, r1
 8021e8a:	fb13 f306 	smulbb	r3, r3, r6
 8021e8e:	b2a4      	uxth	r4, r4
 8021e90:	4413      	add	r3, r2
 8021e92:	1c42      	adds	r2, r0, #1
 8021e94:	b29b      	uxth	r3, r3
 8021e96:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021e9a:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8021e9e:	1c58      	adds	r0, r3, #1
 8021ea0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021ea4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8021ea8:	4310      	orrs	r0, r2
 8021eaa:	1c62      	adds	r2, r4, #1
 8021eac:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021eb0:	0964      	lsrs	r4, r4, #5
 8021eb2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8021eb6:	4320      	orrs	r0, r4
 8021eb8:	bd70      	pop	{r4, r5, r6, pc}
	...

08021ebc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8021ebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021ec0:	b08f      	sub	sp, #60	; 0x3c
 8021ec2:	461c      	mov	r4, r3
 8021ec4:	460d      	mov	r5, r1
 8021ec6:	4616      	mov	r6, r2
 8021ec8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8021ecc:	9004      	str	r0, [sp, #16]
 8021ece:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021ed0:	2f00      	cmp	r7, #0
 8021ed2:	f000 80f6 	beq.w	80220c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8021ed6:	6820      	ldr	r0, [r4, #0]
 8021ed8:	aa0a      	add	r2, sp, #40	; 0x28
 8021eda:	6861      	ldr	r1, [r4, #4]
 8021edc:	f04f 0802 	mov.w	r8, #2
 8021ee0:	3604      	adds	r6, #4
 8021ee2:	c203      	stmia	r2!, {r0, r1}
 8021ee4:	6818      	ldr	r0, [r3, #0]
 8021ee6:	aa0c      	add	r2, sp, #48	; 0x30
 8021ee8:	6859      	ldr	r1, [r3, #4]
 8021eea:	c203      	stmia	r2!, {r0, r1}
 8021eec:	a80a      	add	r0, sp, #40	; 0x28
 8021eee:	f7ef fe6b 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021ef2:	4621      	mov	r1, r4
 8021ef4:	a80c      	add	r0, sp, #48	; 0x30
 8021ef6:	f7ef fe8f 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021efa:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8021efe:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8021f02:	f002 0301 	and.w	r3, r2, #1
 8021f06:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8021f0a:	9306      	str	r3, [sp, #24]
 8021f0c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8021f10:	f003 0101 	and.w	r1, r3, #1
 8021f14:	9105      	str	r1, [sp, #20]
 8021f16:	9805      	ldr	r0, [sp, #20]
 8021f18:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8021f1c:	4403      	add	r3, r0
 8021f1e:	fb01 2303 	mla	r3, r1, r3, r2
 8021f22:	fb93 f3f8 	sdiv	r3, r3, r8
 8021f26:	441d      	add	r5, r3
 8021f28:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8021f2c:	441a      	add	r2, r3
 8021f2e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8021f32:	4419      	add	r1, r3
 8021f34:	4b64      	ldr	r3, [pc, #400]	; (80220c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8021f36:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8021f3a:	6818      	ldr	r0, [r3, #0]
 8021f3c:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8021f40:	6803      	ldr	r3, [r0, #0]
 8021f42:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021f44:	4798      	blx	r3
 8021f46:	4a61      	ldr	r2, [pc, #388]	; (80220cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8021f48:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8021f4c:	2fff      	cmp	r7, #255	; 0xff
 8021f4e:	8813      	ldrh	r3, [r2, #0]
 8021f50:	4611      	mov	r1, r2
 8021f52:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8021f56:	fb03 fb0b 	mul.w	fp, r3, fp
 8021f5a:	fb03 a404 	mla	r4, r3, r4, sl
 8021f5e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021f62:	d06b      	beq.n	802203c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 8021f64:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8021f68:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8021f6c:	9303      	str	r3, [sp, #12]
 8021f6e:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8021f72:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8021f76:	9b07      	ldr	r3, [sp, #28]
 8021f78:	42a3      	cmp	r3, r4
 8021f7a:	f240 809d 	bls.w	80220b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8021f7e:	9b06      	ldr	r3, [sp, #24]
 8021f80:	2b00      	cmp	r3, #0
 8021f82:	d039      	beq.n	8021ff8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 8021f84:	782b      	ldrb	r3, [r5, #0]
 8021f86:	f105 0801 	add.w	r8, r5, #1
 8021f8a:	f109 3bff 	add.w	fp, r9, #4294967295
 8021f8e:	8822      	ldrh	r2, [r4, #0]
 8021f90:	f003 030f 	and.w	r3, r3, #15
 8021f94:	9804      	ldr	r0, [sp, #16]
 8021f96:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021f9a:	9b03      	ldr	r3, [sp, #12]
 8021f9c:	9300      	str	r3, [sp, #0]
 8021f9e:	463b      	mov	r3, r7
 8021fa0:	f7ff ff52 	bl	8021e48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021fa4:	f824 0b02 	strh.w	r0, [r4], #2
 8021fa8:	f1bb 0f01 	cmp.w	fp, #1
 8021fac:	46a2      	mov	sl, r4
 8021fae:	f104 0404 	add.w	r4, r4, #4
 8021fb2:	dd24      	ble.n	8021ffe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 8021fb4:	f898 3000 	ldrb.w	r3, [r8]
 8021fb8:	f1ab 0b02 	sub.w	fp, fp, #2
 8021fbc:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8021fc0:	091b      	lsrs	r3, r3, #4
 8021fc2:	9804      	ldr	r0, [sp, #16]
 8021fc4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021fc8:	9b03      	ldr	r3, [sp, #12]
 8021fca:	9300      	str	r3, [sp, #0]
 8021fcc:	463b      	mov	r3, r7
 8021fce:	f7ff ff3b 	bl	8021e48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021fd2:	f824 0c04 	strh.w	r0, [r4, #-4]
 8021fd6:	f818 3b01 	ldrb.w	r3, [r8], #1
 8021fda:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8021fde:	f003 030f 	and.w	r3, r3, #15
 8021fe2:	9804      	ldr	r0, [sp, #16]
 8021fe4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021fe8:	9b03      	ldr	r3, [sp, #12]
 8021fea:	9300      	str	r3, [sp, #0]
 8021fec:	463b      	mov	r3, r7
 8021fee:	f7ff ff2b 	bl	8021e48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021ff2:	f824 0c02 	strh.w	r0, [r4, #-2]
 8021ff6:	e7d7      	b.n	8021fa8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 8021ff8:	46a8      	mov	r8, r5
 8021ffa:	46cb      	mov	fp, r9
 8021ffc:	e7d4      	b.n	8021fa8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 8021ffe:	d10e      	bne.n	802201e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 8022000:	f898 3000 	ldrb.w	r3, [r8]
 8022004:	f8ba 2000 	ldrh.w	r2, [sl]
 8022008:	091b      	lsrs	r3, r3, #4
 802200a:	9804      	ldr	r0, [sp, #16]
 802200c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8022010:	9b03      	ldr	r3, [sp, #12]
 8022012:	9300      	str	r3, [sp, #0]
 8022014:	463b      	mov	r3, r7
 8022016:	f7ff ff17 	bl	8021e48 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802201a:	f82a 0b02 	strh.w	r0, [sl], #2
 802201e:	9b08      	ldr	r3, [sp, #32]
 8022020:	9a05      	ldr	r2, [sp, #20]
 8022022:	881c      	ldrh	r4, [r3, #0]
 8022024:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8022028:	eba4 0409 	sub.w	r4, r4, r9
 802202c:	4413      	add	r3, r2
 802202e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022030:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8022034:	fb93 f3f2 	sdiv	r3, r3, r2
 8022038:	441d      	add	r5, r3
 802203a:	e79c      	b.n	8021f76 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 802203c:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8022040:	45a3      	cmp	fp, r4
 8022042:	d939      	bls.n	80220b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8022044:	9b06      	ldr	r3, [sp, #24]
 8022046:	b1fb      	cbz	r3, 8022088 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8022048:	782b      	ldrb	r3, [r5, #0]
 802204a:	1c6a      	adds	r2, r5, #1
 802204c:	f109 30ff 	add.w	r0, r9, #4294967295
 8022050:	3402      	adds	r4, #2
 8022052:	f003 030f 	and.w	r3, r3, #15
 8022056:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802205a:	f824 3c02 	strh.w	r3, [r4, #-2]
 802205e:	2801      	cmp	r0, #1
 8022060:	4623      	mov	r3, r4
 8022062:	f104 0404 	add.w	r4, r4, #4
 8022066:	dd12      	ble.n	802208e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8022068:	7813      	ldrb	r3, [r2, #0]
 802206a:	3802      	subs	r0, #2
 802206c:	091b      	lsrs	r3, r3, #4
 802206e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022072:	f824 3c04 	strh.w	r3, [r4, #-4]
 8022076:	f812 3b01 	ldrb.w	r3, [r2], #1
 802207a:	f003 030f 	and.w	r3, r3, #15
 802207e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022082:	f824 3c02 	strh.w	r3, [r4, #-2]
 8022086:	e7ea      	b.n	802205e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8022088:	462a      	mov	r2, r5
 802208a:	4648      	mov	r0, r9
 802208c:	e7e7      	b.n	802205e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802208e:	d106      	bne.n	802209e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8022090:	7812      	ldrb	r2, [r2, #0]
 8022092:	3302      	adds	r3, #2
 8022094:	0912      	lsrs	r2, r2, #4
 8022096:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802209a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802209e:	880c      	ldrh	r4, [r1, #0]
 80220a0:	9a05      	ldr	r2, [sp, #20]
 80220a2:	eba4 0409 	sub.w	r4, r4, r9
 80220a6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80220aa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80220ae:	4413      	add	r3, r2
 80220b0:	fb93 f3f8 	sdiv	r3, r3, r8
 80220b4:	441d      	add	r5, r3
 80220b6:	e7c3      	b.n	8022040 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 80220b8:	4b03      	ldr	r3, [pc, #12]	; (80220c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80220ba:	6818      	ldr	r0, [r3, #0]
 80220bc:	6803      	ldr	r3, [r0, #0]
 80220be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80220c0:	4798      	blx	r3
 80220c2:	b00f      	add	sp, #60	; 0x3c
 80220c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80220c8:	2003242c 	.word	0x2003242c
 80220cc:	20032426 	.word	0x20032426

080220d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80220d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80220d2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80220d6:	0a0f      	lsrs	r7, r1, #8
 80220d8:	2dff      	cmp	r5, #255	; 0xff
 80220da:	d10c      	bne.n	80220f6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80220dc:	2bff      	cmp	r3, #255	; 0xff
 80220de:	d10a      	bne.n	80220f6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80220e0:	0948      	lsrs	r0, r1, #5
 80220e2:	4b25      	ldr	r3, [pc, #148]	; (8022178 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80220e4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80220e8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80220ec:	403b      	ands	r3, r7
 80220ee:	4318      	orrs	r0, r3
 80220f0:	4308      	orrs	r0, r1
 80220f2:	b280      	uxth	r0, r0
 80220f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80220f6:	fb15 f503 	smulbb	r5, r5, r3
 80220fa:	1214      	asrs	r4, r2, #8
 80220fc:	10d6      	asrs	r6, r2, #3
 80220fe:	b2ab      	uxth	r3, r5
 8022100:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8022104:	00d0      	lsls	r0, r2, #3
 8022106:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802210a:	1c5d      	adds	r5, r3, #1
 802210c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8022110:	b2c0      	uxtb	r0, r0
 8022112:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022116:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 802211a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802211e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8022122:	fa1f fc85 	uxth.w	ip, r5
 8022126:	43ed      	mvns	r5, r5
 8022128:	fb12 f20c 	smulbb	r2, r2, ip
 802212c:	b2eb      	uxtb	r3, r5
 802212e:	b2fd      	uxtb	r5, r7
 8022130:	fb04 2403 	mla	r4, r4, r3, r2
 8022134:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8022138:	fb15 f50c 	smulbb	r5, r5, ip
 802213c:	b2c8      	uxtb	r0, r1
 802213e:	b2a4      	uxth	r4, r4
 8022140:	fb10 f00c 	smulbb	r0, r0, ip
 8022144:	fb06 5503 	mla	r5, r6, r3, r5
 8022148:	fb02 0003 	mla	r0, r2, r3, r0
 802214c:	b2ad      	uxth	r5, r5
 802214e:	b283      	uxth	r3, r0
 8022150:	1c60      	adds	r0, r4, #1
 8022152:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8022156:	1c58      	adds	r0, r3, #1
 8022158:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802215c:	1c6b      	adds	r3, r5, #1
 802215e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8022162:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022166:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802216a:	096d      	lsrs	r5, r5, #5
 802216c:	4320      	orrs	r0, r4
 802216e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022172:	4328      	orrs	r0, r5
 8022174:	e7be      	b.n	80220f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 8022176:	bf00      	nop
 8022178:	00fff800 	.word	0x00fff800

0802217c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802217c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022180:	461c      	mov	r4, r3
 8022182:	b08d      	sub	sp, #52	; 0x34
 8022184:	460d      	mov	r5, r1
 8022186:	4616      	mov	r6, r2
 8022188:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802218a:	4680      	mov	r8, r0
 802218c:	6861      	ldr	r1, [r4, #4]
 802218e:	aa08      	add	r2, sp, #32
 8022190:	6820      	ldr	r0, [r4, #0]
 8022192:	f04f 0a02 	mov.w	sl, #2
 8022196:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802219a:	3604      	adds	r6, #4
 802219c:	c203      	stmia	r2!, {r0, r1}
 802219e:	6818      	ldr	r0, [r3, #0]
 80221a0:	aa0a      	add	r2, sp, #40	; 0x28
 80221a2:	6859      	ldr	r1, [r3, #4]
 80221a4:	c203      	stmia	r2!, {r0, r1}
 80221a6:	a808      	add	r0, sp, #32
 80221a8:	f7ef fd0e 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80221ac:	4621      	mov	r1, r4
 80221ae:	a80a      	add	r0, sp, #40	; 0x28
 80221b0:	f7ef fd32 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80221b4:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80221b8:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80221bc:	f002 0301 	and.w	r3, r2, #1
 80221c0:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80221c4:	9303      	str	r3, [sp, #12]
 80221c6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80221ca:	f003 0101 	and.w	r1, r3, #1
 80221ce:	9102      	str	r1, [sp, #8]
 80221d0:	9802      	ldr	r0, [sp, #8]
 80221d2:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80221d6:	4403      	add	r3, r0
 80221d8:	fb01 2303 	mla	r3, r1, r3, r2
 80221dc:	fb93 f3fa 	sdiv	r3, r3, sl
 80221e0:	441d      	add	r5, r3
 80221e2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80221e6:	441a      	add	r2, r3
 80221e8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80221ec:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80221f0:	4419      	add	r1, r3
 80221f2:	4a3e      	ldr	r2, [pc, #248]	; (80222ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80221f4:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80221f8:	6810      	ldr	r0, [r2, #0]
 80221fa:	9205      	str	r2, [sp, #20]
 80221fc:	6803      	ldr	r3, [r0, #0]
 80221fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8022200:	4798      	blx	r3
 8022202:	4b3b      	ldr	r3, [pc, #236]	; (80222f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8022204:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8022208:	8819      	ldrh	r1, [r3, #0]
 802220a:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 802220e:	434f      	muls	r7, r1
 8022210:	fb01 c404 	mla	r4, r1, r4, ip
 8022214:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8022218:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802221c:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8022220:	9204      	str	r2, [sp, #16]
 8022222:	9b04      	ldr	r3, [sp, #16]
 8022224:	429c      	cmp	r4, r3
 8022226:	d258      	bcs.n	80222da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8022228:	9b03      	ldr	r3, [sp, #12]
 802222a:	2b00      	cmp	r3, #0
 802222c:	d034      	beq.n	8022298 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802222e:	782b      	ldrb	r3, [r5, #0]
 8022230:	1c6f      	adds	r7, r5, #1
 8022232:	f003 030f 	and.w	r3, r3, #15
 8022236:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802223a:	0e0b      	lsrs	r3, r1, #24
 802223c:	d006      	beq.n	802224c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802223e:	8822      	ldrh	r2, [r4, #0]
 8022240:	4640      	mov	r0, r8
 8022242:	9300      	str	r3, [sp, #0]
 8022244:	464b      	mov	r3, r9
 8022246:	f7ff ff43 	bl	80220d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802224a:	8020      	strh	r0, [r4, #0]
 802224c:	3402      	adds	r4, #2
 802224e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8022252:	f1ba 0f01 	cmp.w	sl, #1
 8022256:	dd22      	ble.n	802229e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8022258:	783b      	ldrb	r3, [r7, #0]
 802225a:	091b      	lsrs	r3, r3, #4
 802225c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8022260:	0e0b      	lsrs	r3, r1, #24
 8022262:	d006      	beq.n	8022272 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8022264:	8822      	ldrh	r2, [r4, #0]
 8022266:	4640      	mov	r0, r8
 8022268:	9300      	str	r3, [sp, #0]
 802226a:	464b      	mov	r3, r9
 802226c:	f7ff ff30 	bl	80220d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8022270:	8020      	strh	r0, [r4, #0]
 8022272:	f817 3b01 	ldrb.w	r3, [r7], #1
 8022276:	f003 030f 	and.w	r3, r3, #15
 802227a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802227e:	0e0b      	lsrs	r3, r1, #24
 8022280:	d006      	beq.n	8022290 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8022282:	8862      	ldrh	r2, [r4, #2]
 8022284:	4640      	mov	r0, r8
 8022286:	9300      	str	r3, [sp, #0]
 8022288:	464b      	mov	r3, r9
 802228a:	f7ff ff21 	bl	80220d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802228e:	8060      	strh	r0, [r4, #2]
 8022290:	3404      	adds	r4, #4
 8022292:	f1aa 0a02 	sub.w	sl, sl, #2
 8022296:	e7dc      	b.n	8022252 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8022298:	462f      	mov	r7, r5
 802229a:	46da      	mov	sl, fp
 802229c:	e7d9      	b.n	8022252 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802229e:	d10d      	bne.n	80222bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80222a0:	783b      	ldrb	r3, [r7, #0]
 80222a2:	091b      	lsrs	r3, r3, #4
 80222a4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80222a8:	0e0b      	lsrs	r3, r1, #24
 80222aa:	d006      	beq.n	80222ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80222ac:	8822      	ldrh	r2, [r4, #0]
 80222ae:	4640      	mov	r0, r8
 80222b0:	9300      	str	r3, [sp, #0]
 80222b2:	464b      	mov	r3, r9
 80222b4:	f7ff ff0c 	bl	80220d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80222b8:	8020      	strh	r0, [r4, #0]
 80222ba:	3402      	adds	r4, #2
 80222bc:	9b06      	ldr	r3, [sp, #24]
 80222be:	9a02      	ldr	r2, [sp, #8]
 80222c0:	881b      	ldrh	r3, [r3, #0]
 80222c2:	eba3 030b 	sub.w	r3, r3, fp
 80222c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80222ca:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80222ce:	4413      	add	r3, r2
 80222d0:	9a07      	ldr	r2, [sp, #28]
 80222d2:	fb93 f3f2 	sdiv	r3, r3, r2
 80222d6:	441d      	add	r5, r3
 80222d8:	e7a3      	b.n	8022222 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80222da:	9b05      	ldr	r3, [sp, #20]
 80222dc:	6818      	ldr	r0, [r3, #0]
 80222de:	6803      	ldr	r3, [r0, #0]
 80222e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80222e2:	4798      	blx	r3
 80222e4:	b00d      	add	sp, #52	; 0x34
 80222e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80222ea:	bf00      	nop
 80222ec:	2003242c 	.word	0x2003242c
 80222f0:	20032426 	.word	0x20032426

080222f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80222f4:	b570      	push	{r4, r5, r6, lr}
 80222f6:	1214      	asrs	r4, r2, #8
 80222f8:	788d      	ldrb	r5, [r1, #2]
 80222fa:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80222fe:	10d0      	asrs	r0, r2, #3
 8022300:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8022304:	00d2      	lsls	r2, r2, #3
 8022306:	fb15 f503 	smulbb	r5, r5, r3
 802230a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802230e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8022312:	b2d2      	uxtb	r2, r2
 8022314:	fb04 5506 	mla	r5, r4, r6, r5
 8022318:	784c      	ldrb	r4, [r1, #1]
 802231a:	7809      	ldrb	r1, [r1, #0]
 802231c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8022320:	fb14 f403 	smulbb	r4, r4, r3
 8022324:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8022328:	fb11 f303 	smulbb	r3, r1, r3
 802232c:	b2ad      	uxth	r5, r5
 802232e:	fb00 4406 	mla	r4, r0, r6, r4
 8022332:	fb02 3306 	mla	r3, r2, r6, r3
 8022336:	1c68      	adds	r0, r5, #1
 8022338:	b2a4      	uxth	r4, r4
 802233a:	b29b      	uxth	r3, r3
 802233c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8022340:	1c62      	adds	r2, r4, #1
 8022342:	1c58      	adds	r0, r3, #1
 8022344:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8022348:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802234c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022350:	0964      	lsrs	r4, r4, #5
 8022352:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022356:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802235a:	4328      	orrs	r0, r5
 802235c:	4320      	orrs	r0, r4
 802235e:	bd70      	pop	{r4, r5, r6, pc}

08022360 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8022360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022364:	b08f      	sub	sp, #60	; 0x3c
 8022366:	461c      	mov	r4, r3
 8022368:	4682      	mov	sl, r0
 802236a:	460e      	mov	r6, r1
 802236c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8022370:	4615      	mov	r5, r2
 8022372:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022374:	2f00      	cmp	r7, #0
 8022376:	f000 8141 	beq.w	80225fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 802237a:	6820      	ldr	r0, [r4, #0]
 802237c:	aa0a      	add	r2, sp, #40	; 0x28
 802237e:	6861      	ldr	r1, [r4, #4]
 8022380:	f04f 0802 	mov.w	r8, #2
 8022384:	3504      	adds	r5, #4
 8022386:	c203      	stmia	r2!, {r0, r1}
 8022388:	6818      	ldr	r0, [r3, #0]
 802238a:	aa0c      	add	r2, sp, #48	; 0x30
 802238c:	6859      	ldr	r1, [r3, #4]
 802238e:	c203      	stmia	r2!, {r0, r1}
 8022390:	a80a      	add	r0, sp, #40	; 0x28
 8022392:	f7ef fc19 	bl	8011bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022396:	4621      	mov	r1, r4
 8022398:	a80c      	add	r0, sp, #48	; 0x30
 802239a:	f7ef fc3d 	bl	8011c18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802239e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80223a2:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80223a6:	f002 0301 	and.w	r3, r2, #1
 80223aa:	9306      	str	r3, [sp, #24]
 80223ac:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80223b0:	f003 0101 	and.w	r1, r3, #1
 80223b4:	9105      	str	r1, [sp, #20]
 80223b6:	9805      	ldr	r0, [sp, #20]
 80223b8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80223bc:	4403      	add	r3, r0
 80223be:	fb01 2303 	mla	r3, r1, r3, r2
 80223c2:	fb93 f3f8 	sdiv	r3, r3, r8
 80223c6:	441e      	add	r6, r3
 80223c8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80223cc:	441a      	add	r2, r3
 80223ce:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80223d2:	4419      	add	r1, r3
 80223d4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80223d8:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80223dc:	9303      	str	r3, [sp, #12]
 80223de:	4b89      	ldr	r3, [pc, #548]	; (8022604 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80223e0:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80223e4:	6818      	ldr	r0, [r3, #0]
 80223e6:	6803      	ldr	r3, [r0, #0]
 80223e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80223ea:	4798      	blx	r3
 80223ec:	4a86      	ldr	r2, [pc, #536]	; (8022608 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80223ee:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80223f2:	2fff      	cmp	r7, #255	; 0xff
 80223f4:	8813      	ldrh	r3, [r2, #0]
 80223f6:	4694      	mov	ip, r2
 80223f8:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80223fc:	fb03 9404 	mla	r4, r3, r4, r9
 8022400:	fb03 f30b 	mul.w	r3, r3, fp
 8022404:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8022408:	d071      	beq.n	80224ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 802240a:	43f9      	mvns	r1, r7
 802240c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022410:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8022414:	b2c9      	uxtb	r1, r1
 8022416:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802241a:	9104      	str	r1, [sp, #16]
 802241c:	9b07      	ldr	r3, [sp, #28]
 802241e:	42a3      	cmp	r3, r4
 8022420:	f240 80e7 	bls.w	80225f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8022424:	9b06      	ldr	r3, [sp, #24]
 8022426:	2b00      	cmp	r3, #0
 8022428:	d03d      	beq.n	80224a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 802242a:	7831      	ldrb	r1, [r6, #0]
 802242c:	4650      	mov	r0, sl
 802242e:	9b04      	ldr	r3, [sp, #16]
 8022430:	f106 0801 	add.w	r8, r6, #1
 8022434:	f001 010f 	and.w	r1, r1, #15
 8022438:	8822      	ldrh	r2, [r4, #0]
 802243a:	9300      	str	r3, [sp, #0]
 802243c:	463b      	mov	r3, r7
 802243e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8022442:	4429      	add	r1, r5
 8022444:	f7ff ff56 	bl	80222f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8022448:	9b03      	ldr	r3, [sp, #12]
 802244a:	f824 0b02 	strh.w	r0, [r4], #2
 802244e:	f103 3bff 	add.w	fp, r3, #4294967295
 8022452:	f1bb 0f01 	cmp.w	fp, #1
 8022456:	46a1      	mov	r9, r4
 8022458:	f104 0404 	add.w	r4, r4, #4
 802245c:	dd27      	ble.n	80224ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 802245e:	f898 1000 	ldrb.w	r1, [r8]
 8022462:	4650      	mov	r0, sl
 8022464:	9b04      	ldr	r3, [sp, #16]
 8022466:	f1ab 0b02 	sub.w	fp, fp, #2
 802246a:	0909      	lsrs	r1, r1, #4
 802246c:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8022470:	9300      	str	r3, [sp, #0]
 8022472:	463b      	mov	r3, r7
 8022474:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8022478:	4429      	add	r1, r5
 802247a:	f7ff ff3b 	bl	80222f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802247e:	f824 0c04 	strh.w	r0, [r4, #-4]
 8022482:	f818 1b01 	ldrb.w	r1, [r8], #1
 8022486:	4650      	mov	r0, sl
 8022488:	9b04      	ldr	r3, [sp, #16]
 802248a:	f001 010f 	and.w	r1, r1, #15
 802248e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8022492:	9300      	str	r3, [sp, #0]
 8022494:	463b      	mov	r3, r7
 8022496:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802249a:	4429      	add	r1, r5
 802249c:	f7ff ff2a 	bl	80222f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80224a0:	f824 0c02 	strh.w	r0, [r4, #-2]
 80224a4:	e7d5      	b.n	8022452 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 80224a6:	46b0      	mov	r8, r6
 80224a8:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80224ac:	e7d1      	b.n	8022452 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 80224ae:	d10f      	bne.n	80224d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 80224b0:	f898 1000 	ldrb.w	r1, [r8]
 80224b4:	4650      	mov	r0, sl
 80224b6:	9b04      	ldr	r3, [sp, #16]
 80224b8:	0909      	lsrs	r1, r1, #4
 80224ba:	f8b9 2000 	ldrh.w	r2, [r9]
 80224be:	9300      	str	r3, [sp, #0]
 80224c0:	463b      	mov	r3, r7
 80224c2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80224c6:	4429      	add	r1, r5
 80224c8:	f7ff ff14 	bl	80222f4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80224cc:	f829 0b02 	strh.w	r0, [r9], #2
 80224d0:	9b08      	ldr	r3, [sp, #32]
 80224d2:	9a05      	ldr	r2, [sp, #20]
 80224d4:	881c      	ldrh	r4, [r3, #0]
 80224d6:	9b03      	ldr	r3, [sp, #12]
 80224d8:	1ae4      	subs	r4, r4, r3
 80224da:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80224de:	4413      	add	r3, r2
 80224e0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80224e2:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80224e6:	fb93 f3f2 	sdiv	r3, r3, r2
 80224ea:	441e      	add	r6, r3
 80224ec:	e796      	b.n	802241c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 80224ee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80224f2:	4f46      	ldr	r7, [pc, #280]	; (802260c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80224f4:	42a3      	cmp	r3, r4
 80224f6:	d97c      	bls.n	80225f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 80224f8:	9a06      	ldr	r2, [sp, #24]
 80224fa:	2a00      	cmp	r2, #0
 80224fc:	d054      	beq.n	80225a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 80224fe:	7830      	ldrb	r0, [r6, #0]
 8022500:	1c71      	adds	r1, r6, #1
 8022502:	f000 000f 	and.w	r0, r0, #15
 8022506:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802250a:	eb05 0e00 	add.w	lr, r5, r0
 802250e:	5c28      	ldrb	r0, [r5, r0]
 8022510:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8022514:	f89e e001 	ldrb.w	lr, [lr, #1]
 8022518:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802251c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8022520:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8022524:	ea42 020e 	orr.w	r2, r2, lr
 8022528:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802252c:	f824 2b02 	strh.w	r2, [r4], #2
 8022530:	9a03      	ldr	r2, [sp, #12]
 8022532:	f102 3eff 	add.w	lr, r2, #4294967295
 8022536:	f1be 0f01 	cmp.w	lr, #1
 802253a:	4620      	mov	r0, r4
 802253c:	f104 0404 	add.w	r4, r4, #4
 8022540:	dd36      	ble.n	80225b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 8022542:	7808      	ldrb	r0, [r1, #0]
 8022544:	f1ae 0e02 	sub.w	lr, lr, #2
 8022548:	0900      	lsrs	r0, r0, #4
 802254a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802254e:	eb05 0a00 	add.w	sl, r5, r0
 8022552:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022556:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802255a:	00d2      	lsls	r2, r2, #3
 802255c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8022560:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022564:	ea49 0202 	orr.w	r2, r9, r2
 8022568:	f815 9000 	ldrb.w	r9, [r5, r0]
 802256c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8022570:	f824 2c04 	strh.w	r2, [r4, #-4]
 8022574:	f811 0b01 	ldrb.w	r0, [r1], #1
 8022578:	f000 000f 	and.w	r0, r0, #15
 802257c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022580:	eb05 0a00 	add.w	sl, r5, r0
 8022584:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022588:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802258c:	00d2      	lsls	r2, r2, #3
 802258e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8022592:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022596:	ea49 0202 	orr.w	r2, r9, r2
 802259a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802259e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80225a2:	f824 2c02 	strh.w	r2, [r4, #-2]
 80225a6:	e7c6      	b.n	8022536 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80225a8:	4631      	mov	r1, r6
 80225aa:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80225ae:	e7c2      	b.n	8022536 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80225b0:	d111      	bne.n	80225d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 80225b2:	7809      	ldrb	r1, [r1, #0]
 80225b4:	0909      	lsrs	r1, r1, #4
 80225b6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80225ba:	186c      	adds	r4, r5, r1
 80225bc:	5c69      	ldrb	r1, [r5, r1]
 80225be:	78a2      	ldrb	r2, [r4, #2]
 80225c0:	7864      	ldrb	r4, [r4, #1]
 80225c2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80225c6:	00e4      	lsls	r4, r4, #3
 80225c8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80225cc:	4322      	orrs	r2, r4
 80225ce:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80225d2:	f820 2b02 	strh.w	r2, [r0], #2
 80225d6:	9a03      	ldr	r2, [sp, #12]
 80225d8:	f8bc 4000 	ldrh.w	r4, [ip]
 80225dc:	9905      	ldr	r1, [sp, #20]
 80225de:	1aa4      	subs	r4, r4, r2
 80225e0:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80225e4:	440a      	add	r2, r1
 80225e6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80225ea:	fb92 f2f8 	sdiv	r2, r2, r8
 80225ee:	4416      	add	r6, r2
 80225f0:	e780      	b.n	80224f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 80225f2:	4b04      	ldr	r3, [pc, #16]	; (8022604 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80225f4:	6818      	ldr	r0, [r3, #0]
 80225f6:	6803      	ldr	r3, [r0, #0]
 80225f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80225fa:	4798      	blx	r3
 80225fc:	b00f      	add	sp, #60	; 0x3c
 80225fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022602:	bf00      	nop
 8022604:	2003242c 	.word	0x2003242c
 8022608:	20032426 	.word	0x20032426
 802260c:	fffff800 	.word	0xfffff800

08022610 <CRC_Lock>:
 8022610:	4a20      	ldr	r2, [pc, #128]	; (8022694 <CRC_Lock+0x84>)
 8022612:	b530      	push	{r4, r5, lr}
 8022614:	6813      	ldr	r3, [r2, #0]
 8022616:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 802261a:	f24c 2540 	movw	r5, #49728	; 0xc240
 802261e:	f023 0301 	bic.w	r3, r3, #1
 8022622:	6013      	str	r3, [r2, #0]
 8022624:	4b1c      	ldr	r3, [pc, #112]	; (8022698 <CRC_Lock+0x88>)
 8022626:	681a      	ldr	r2, [r3, #0]
 8022628:	4022      	ands	r2, r4
 802262a:	42aa      	cmp	r2, r5
 802262c:	d005      	beq.n	802263a <CRC_Lock+0x2a>
 802262e:	681b      	ldr	r3, [r3, #0]
 8022630:	f24c 2270 	movw	r2, #49776	; 0xc270
 8022634:	4023      	ands	r3, r4
 8022636:	4293      	cmp	r3, r2
 8022638:	d124      	bne.n	8022684 <CRC_Lock+0x74>
 802263a:	4b18      	ldr	r3, [pc, #96]	; (802269c <CRC_Lock+0x8c>)
 802263c:	681b      	ldr	r3, [r3, #0]
 802263e:	bb0b      	cbnz	r3, 8022684 <CRC_Lock+0x74>
 8022640:	4b17      	ldr	r3, [pc, #92]	; (80226a0 <CRC_Lock+0x90>)
 8022642:	681a      	ldr	r2, [r3, #0]
 8022644:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8022648:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 802264c:	d00d      	beq.n	802266a <CRC_Lock+0x5a>
 802264e:	681a      	ldr	r2, [r3, #0]
 8022650:	f240 4483 	movw	r4, #1155	; 0x483
 8022654:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8022658:	42a2      	cmp	r2, r4
 802265a:	d006      	beq.n	802266a <CRC_Lock+0x5a>
 802265c:	681b      	ldr	r3, [r3, #0]
 802265e:	f240 4285 	movw	r2, #1157	; 0x485
 8022662:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8022666:	4293      	cmp	r3, r2
 8022668:	d10c      	bne.n	8022684 <CRC_Lock+0x74>
 802266a:	4b0e      	ldr	r3, [pc, #56]	; (80226a4 <CRC_Lock+0x94>)
 802266c:	2201      	movs	r2, #1
 802266e:	601a      	str	r2, [r3, #0]
 8022670:	681a      	ldr	r2, [r3, #0]
 8022672:	2a00      	cmp	r2, #0
 8022674:	d1fc      	bne.n	8022670 <CRC_Lock+0x60>
 8022676:	4b0c      	ldr	r3, [pc, #48]	; (80226a8 <CRC_Lock+0x98>)
 8022678:	6018      	str	r0, [r3, #0]
 802267a:	6818      	ldr	r0, [r3, #0]
 802267c:	1a43      	subs	r3, r0, r1
 802267e:	4258      	negs	r0, r3
 8022680:	4158      	adcs	r0, r3
 8022682:	bd30      	pop	{r4, r5, pc}
 8022684:	4b09      	ldr	r3, [pc, #36]	; (80226ac <CRC_Lock+0x9c>)
 8022686:	2201      	movs	r2, #1
 8022688:	601a      	str	r2, [r3, #0]
 802268a:	681a      	ldr	r2, [r3, #0]
 802268c:	2a00      	cmp	r2, #0
 802268e:	d1fc      	bne.n	802268a <CRC_Lock+0x7a>
 8022690:	4b07      	ldr	r3, [pc, #28]	; (80226b0 <CRC_Lock+0xa0>)
 8022692:	e7f1      	b.n	8022678 <CRC_Lock+0x68>
 8022694:	e0002000 	.word	0xe0002000
 8022698:	e000ed00 	.word	0xe000ed00
 802269c:	e0042000 	.word	0xe0042000
 80226a0:	5c001000 	.word	0x5c001000
 80226a4:	58024c08 	.word	0x58024c08
 80226a8:	58024c00 	.word	0x58024c00
 80226ac:	40023008 	.word	0x40023008
 80226b0:	40023000 	.word	0x40023000

080226b4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80226b4:	6101      	str	r1, [r0, #16]
 80226b6:	4770      	bx	lr

080226b8 <_ZN8touchgfx8Gestures4tickEv>:
 80226b8:	7b83      	ldrb	r3, [r0, #14]
 80226ba:	b14b      	cbz	r3, 80226d0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80226bc:	8903      	ldrh	r3, [r0, #8]
 80226be:	3301      	adds	r3, #1
 80226c0:	b29b      	uxth	r3, r3
 80226c2:	2b07      	cmp	r3, #7
 80226c4:	8103      	strh	r3, [r0, #8]
 80226c6:	bf81      	itttt	hi
 80226c8:	2300      	movhi	r3, #0
 80226ca:	8143      	strhhi	r3, [r0, #10]
 80226cc:	8183      	strhhi	r3, [r0, #12]
 80226ce:	7383      	strbhi	r3, [r0, #14]
 80226d0:	4770      	bx	lr
	...

080226d4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80226d4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80226d8:	4698      	mov	r8, r3
 80226da:	8883      	ldrh	r3, [r0, #4]
 80226dc:	4604      	mov	r4, r0
 80226de:	4617      	mov	r7, r2
 80226e0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80226e4:	eba8 0303 	sub.w	r3, r8, r3
 80226e8:	4a19      	ldr	r2, [pc, #100]	; (8022750 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80226ea:	460e      	mov	r6, r1
 80226ec:	b21b      	sxth	r3, r3
 80226ee:	88c1      	ldrh	r1, [r0, #6]
 80226f0:	9200      	str	r2, [sp, #0]
 80226f2:	2000      	movs	r0, #0
 80226f4:	2b00      	cmp	r3, #0
 80226f6:	8aa2      	ldrh	r2, [r4, #20]
 80226f8:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80226fc:	bfb8      	it	lt
 80226fe:	425b      	neglt	r3, r3
 8022700:	f88d 0004 	strb.w	r0, [sp, #4]
 8022704:	f8ad 1008 	strh.w	r1, [sp, #8]
 8022708:	b21b      	sxth	r3, r3
 802270a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802270e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8022712:	4293      	cmp	r3, r2
 8022714:	dc07      	bgt.n	8022726 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 8022716:	1a69      	subs	r1, r5, r1
 8022718:	b209      	sxth	r1, r1
 802271a:	2900      	cmp	r1, #0
 802271c:	bfb8      	it	lt
 802271e:	4249      	neglt	r1, r1
 8022720:	b209      	sxth	r1, r1
 8022722:	428a      	cmp	r2, r1
 8022724:	da10      	bge.n	8022748 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 8022726:	6920      	ldr	r0, [r4, #16]
 8022728:	4669      	mov	r1, sp
 802272a:	eba8 0606 	sub.w	r6, r8, r6
 802272e:	1bef      	subs	r7, r5, r7
 8022730:	6803      	ldr	r3, [r0, #0]
 8022732:	685b      	ldr	r3, [r3, #4]
 8022734:	4798      	blx	r3
 8022736:	2300      	movs	r3, #0
 8022738:	2001      	movs	r0, #1
 802273a:	8166      	strh	r6, [r4, #10]
 802273c:	8123      	strh	r3, [r4, #8]
 802273e:	81a7      	strh	r7, [r4, #12]
 8022740:	f8a4 8004 	strh.w	r8, [r4, #4]
 8022744:	80e5      	strh	r5, [r4, #6]
 8022746:	73a0      	strb	r0, [r4, #14]
 8022748:	b004      	add	sp, #16
 802274a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802274e:	bf00      	nop
 8022750:	08026490 	.word	0x08026490

08022754 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8022754:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022756:	461e      	mov	r6, r3
 8022758:	1e4b      	subs	r3, r1, #1
 802275a:	b085      	sub	sp, #20
 802275c:	4604      	mov	r4, r0
 802275e:	2b01      	cmp	r3, #1
 8022760:	460d      	mov	r5, r1
 8022762:	4617      	mov	r7, r2
 8022764:	d84b      	bhi.n	80227fe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8022766:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802276a:	1cd3      	adds	r3, r2, #3
 802276c:	b29b      	uxth	r3, r3
 802276e:	2b06      	cmp	r3, #6
 8022770:	d916      	bls.n	80227a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8022772:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8022814 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8022776:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802277a:	f8cd c004 	str.w	ip, [sp, #4]
 802277e:	f04f 0c00 	mov.w	ip, #0
 8022782:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8022786:	6900      	ldr	r0, [r0, #16]
 8022788:	f8ad 100c 	strh.w	r1, [sp, #12]
 802278c:	a901      	add	r1, sp, #4
 802278e:	f88d c008 	strb.w	ip, [sp, #8]
 8022792:	f8ad 200a 	strh.w	r2, [sp, #10]
 8022796:	f8ad 300e 	strh.w	r3, [sp, #14]
 802279a:	6803      	ldr	r3, [r0, #0]
 802279c:	689b      	ldr	r3, [r3, #8]
 802279e:	4798      	blx	r3
 80227a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80227a4:	1cd3      	adds	r3, r2, #3
 80227a6:	b29b      	uxth	r3, r3
 80227a8:	2b06      	cmp	r3, #6
 80227aa:	d916      	bls.n	80227da <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80227ac:	f8df c064 	ldr.w	ip, [pc, #100]	; 8022814 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80227b0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80227b4:	f8cd c004 	str.w	ip, [sp, #4]
 80227b8:	f04f 0c01 	mov.w	ip, #1
 80227bc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80227c0:	6920      	ldr	r0, [r4, #16]
 80227c2:	f8ad 100c 	strh.w	r1, [sp, #12]
 80227c6:	a901      	add	r1, sp, #4
 80227c8:	f88d c008 	strb.w	ip, [sp, #8]
 80227cc:	f8ad 200a 	strh.w	r2, [sp, #10]
 80227d0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80227d4:	6803      	ldr	r3, [r0, #0]
 80227d6:	689b      	ldr	r3, [r3, #8]
 80227d8:	4798      	blx	r3
 80227da:	4b0d      	ldr	r3, [pc, #52]	; (8022810 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80227dc:	a901      	add	r1, sp, #4
 80227de:	6920      	ldr	r0, [r4, #16]
 80227e0:	9301      	str	r3, [sp, #4]
 80227e2:	2300      	movs	r3, #0
 80227e4:	f88d 5008 	strb.w	r5, [sp, #8]
 80227e8:	f8ad 700a 	strh.w	r7, [sp, #10]
 80227ec:	f8ad 600c 	strh.w	r6, [sp, #12]
 80227f0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80227f4:	6803      	ldr	r3, [r0, #0]
 80227f6:	681b      	ldr	r3, [r3, #0]
 80227f8:	4798      	blx	r3
 80227fa:	b005      	add	sp, #20
 80227fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80227fe:	2900      	cmp	r1, #0
 8022800:	d1eb      	bne.n	80227da <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022802:	80a2      	strh	r2, [r4, #4]
 8022804:	80c6      	strh	r6, [r0, #6]
 8022806:	60a1      	str	r1, [r4, #8]
 8022808:	81a1      	strh	r1, [r4, #12]
 802280a:	73a1      	strb	r1, [r4, #14]
 802280c:	e7e5      	b.n	80227da <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802280e:	bf00      	nop
 8022810:	0802647c 	.word	0x0802647c
 8022814:	080264a4 	.word	0x080264a4

08022818 <__aeabi_atexit>:
 8022818:	460b      	mov	r3, r1
 802281a:	4601      	mov	r1, r0
 802281c:	4618      	mov	r0, r3
 802281e:	f000 be6b 	b.w	80234f8 <__cxa_atexit>

08022822 <_ZdlPvj>:
 8022822:	f000 b812 	b.w	802284a <_ZdlPv>

08022826 <__cxa_guard_acquire>:
 8022826:	6803      	ldr	r3, [r0, #0]
 8022828:	07db      	lsls	r3, r3, #31
 802282a:	d406      	bmi.n	802283a <__cxa_guard_acquire+0x14>
 802282c:	7843      	ldrb	r3, [r0, #1]
 802282e:	b103      	cbz	r3, 8022832 <__cxa_guard_acquire+0xc>
 8022830:	deff      	udf	#255	; 0xff
 8022832:	2301      	movs	r3, #1
 8022834:	7043      	strb	r3, [r0, #1]
 8022836:	4618      	mov	r0, r3
 8022838:	4770      	bx	lr
 802283a:	2000      	movs	r0, #0
 802283c:	4770      	bx	lr

0802283e <__cxa_guard_release>:
 802283e:	2301      	movs	r3, #1
 8022840:	6003      	str	r3, [r0, #0]
 8022842:	4770      	bx	lr

08022844 <__cxa_pure_virtual>:
 8022844:	b508      	push	{r3, lr}
 8022846:	f000 f80f 	bl	8022868 <_ZSt9terminatev>

0802284a <_ZdlPv>:
 802284a:	f000 bda1 	b.w	8023390 <free>

0802284e <_ZN10__cxxabiv111__terminateEPFvvE>:
 802284e:	b508      	push	{r3, lr}
 8022850:	4780      	blx	r0
 8022852:	f000 fd69 	bl	8023328 <abort>
	...

08022858 <_ZSt13get_terminatev>:
 8022858:	4b02      	ldr	r3, [pc, #8]	; (8022864 <_ZSt13get_terminatev+0xc>)
 802285a:	6818      	ldr	r0, [r3, #0]
 802285c:	f3bf 8f5b 	dmb	ish
 8022860:	4770      	bx	lr
 8022862:	bf00      	nop
 8022864:	200000bc 	.word	0x200000bc

08022868 <_ZSt9terminatev>:
 8022868:	b508      	push	{r3, lr}
 802286a:	f7ff fff5 	bl	8022858 <_ZSt13get_terminatev>
 802286e:	f7ff ffee 	bl	802284e <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08022874 <tanf>:
 8022874:	ee10 3a10 	vmov	r3, s0
 8022878:	b507      	push	{r0, r1, r2, lr}
 802287a:	4a12      	ldr	r2, [pc, #72]	; (80228c4 <tanf+0x50>)
 802287c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8022880:	4293      	cmp	r3, r2
 8022882:	dc07      	bgt.n	8022894 <tanf+0x20>
 8022884:	eddf 0a10 	vldr	s1, [pc, #64]	; 80228c8 <tanf+0x54>
 8022888:	2001      	movs	r0, #1
 802288a:	b003      	add	sp, #12
 802288c:	f85d eb04 	ldr.w	lr, [sp], #4
 8022890:	f000 b81c 	b.w	80228cc <__kernel_tanf>
 8022894:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8022898:	db04      	blt.n	80228a4 <tanf+0x30>
 802289a:	ee30 0a40 	vsub.f32	s0, s0, s0
 802289e:	b003      	add	sp, #12
 80228a0:	f85d fb04 	ldr.w	pc, [sp], #4
 80228a4:	4668      	mov	r0, sp
 80228a6:	f000 f8f1 	bl	8022a8c <__ieee754_rem_pio2f>
 80228aa:	0040      	lsls	r0, r0, #1
 80228ac:	f000 0002 	and.w	r0, r0, #2
 80228b0:	eddd 0a01 	vldr	s1, [sp, #4]
 80228b4:	ed9d 0a00 	vldr	s0, [sp]
 80228b8:	f1c0 0001 	rsb	r0, r0, #1
 80228bc:	f000 f806 	bl	80228cc <__kernel_tanf>
 80228c0:	e7ed      	b.n	802289e <tanf+0x2a>
 80228c2:	bf00      	nop
 80228c4:	3f490fda 	.word	0x3f490fda
 80228c8:	00000000 	.word	0x00000000

080228cc <__kernel_tanf>:
 80228cc:	b508      	push	{r3, lr}
 80228ce:	ee10 3a10 	vmov	r3, s0
 80228d2:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 80228d6:	f1b2 5f46 	cmp.w	r2, #830472192	; 0x31800000
 80228da:	eef0 7a40 	vmov.f32	s15, s0
 80228de:	da17      	bge.n	8022910 <__kernel_tanf+0x44>
 80228e0:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80228e4:	ee17 1a10 	vmov	r1, s14
 80228e8:	bb41      	cbnz	r1, 802293c <__kernel_tanf+0x70>
 80228ea:	1c43      	adds	r3, r0, #1
 80228ec:	4313      	orrs	r3, r2
 80228ee:	d108      	bne.n	8022902 <__kernel_tanf+0x36>
 80228f0:	f000 f9f8 	bl	8022ce4 <fabsf>
 80228f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80228f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80228fc:	eeb0 0a67 	vmov.f32	s0, s15
 8022900:	bd08      	pop	{r3, pc}
 8022902:	2801      	cmp	r0, #1
 8022904:	d0fa      	beq.n	80228fc <__kernel_tanf+0x30>
 8022906:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802290a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802290e:	e7f5      	b.n	80228fc <__kernel_tanf+0x30>
 8022910:	494c      	ldr	r1, [pc, #304]	; (8022a44 <__kernel_tanf+0x178>)
 8022912:	428a      	cmp	r2, r1
 8022914:	db12      	blt.n	802293c <__kernel_tanf+0x70>
 8022916:	2b00      	cmp	r3, #0
 8022918:	ed9f 7a4b 	vldr	s14, [pc, #300]	; 8022a48 <__kernel_tanf+0x17c>
 802291c:	bfb8      	it	lt
 802291e:	eef1 7a40 	vneglt.f32	s15, s0
 8022922:	ee37 7a67 	vsub.f32	s14, s14, s15
 8022926:	eddf 7a49 	vldr	s15, [pc, #292]	; 8022a4c <__kernel_tanf+0x180>
 802292a:	bfb8      	it	lt
 802292c:	eef1 0a60 	vneglt.f32	s1, s1
 8022930:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8022934:	eddf 0a46 	vldr	s1, [pc, #280]	; 8022a50 <__kernel_tanf+0x184>
 8022938:	ee77 7a87 	vadd.f32	s15, s15, s14
 802293c:	ee67 6aa7 	vmul.f32	s13, s15, s15
 8022940:	eddf 5a44 	vldr	s11, [pc, #272]	; 8022a54 <__kernel_tanf+0x188>
 8022944:	ed9f 6a44 	vldr	s12, [pc, #272]	; 8022a58 <__kernel_tanf+0x18c>
 8022948:	ed9f 5a44 	vldr	s10, [pc, #272]	; 8022a5c <__kernel_tanf+0x190>
 802294c:	493d      	ldr	r1, [pc, #244]	; (8022a44 <__kernel_tanf+0x178>)
 802294e:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8022952:	428a      	cmp	r2, r1
 8022954:	eea7 6a25 	vfma.f32	s12, s14, s11
 8022958:	eddf 5a41 	vldr	s11, [pc, #260]	; 8022a60 <__kernel_tanf+0x194>
 802295c:	eee6 5a07 	vfma.f32	s11, s12, s14
 8022960:	ed9f 6a40 	vldr	s12, [pc, #256]	; 8022a64 <__kernel_tanf+0x198>
 8022964:	eea5 6a87 	vfma.f32	s12, s11, s14
 8022968:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8022a68 <__kernel_tanf+0x19c>
 802296c:	eee6 5a07 	vfma.f32	s11, s12, s14
 8022970:	ed9f 6a3e 	vldr	s12, [pc, #248]	; 8022a6c <__kernel_tanf+0x1a0>
 8022974:	eea5 6a87 	vfma.f32	s12, s11, s14
 8022978:	eddf 5a3d 	vldr	s11, [pc, #244]	; 8022a70 <__kernel_tanf+0x1a4>
 802297c:	eee7 5a05 	vfma.f32	s11, s14, s10
 8022980:	ed9f 5a3c 	vldr	s10, [pc, #240]	; 8022a74 <__kernel_tanf+0x1a8>
 8022984:	eea5 5a87 	vfma.f32	s10, s11, s14
 8022988:	eddf 5a3b 	vldr	s11, [pc, #236]	; 8022a78 <__kernel_tanf+0x1ac>
 802298c:	eee5 5a07 	vfma.f32	s11, s10, s14
 8022990:	ed9f 5a3a 	vldr	s10, [pc, #232]	; 8022a7c <__kernel_tanf+0x1b0>
 8022994:	eea5 5a87 	vfma.f32	s10, s11, s14
 8022998:	eddf 5a39 	vldr	s11, [pc, #228]	; 8022a80 <__kernel_tanf+0x1b4>
 802299c:	eee5 5a07 	vfma.f32	s11, s10, s14
 80229a0:	eeb0 7a46 	vmov.f32	s14, s12
 80229a4:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80229a8:	ee27 5aa6 	vmul.f32	s10, s15, s13
 80229ac:	eeb0 6a60 	vmov.f32	s12, s1
 80229b0:	eea7 6a05 	vfma.f32	s12, s14, s10
 80229b4:	ed9f 7a33 	vldr	s14, [pc, #204]	; 8022a84 <__kernel_tanf+0x1b8>
 80229b8:	eee6 0a26 	vfma.f32	s1, s12, s13
 80229bc:	eee5 0a07 	vfma.f32	s1, s10, s14
 80229c0:	ee77 6aa0 	vadd.f32	s13, s15, s1
 80229c4:	db1d      	blt.n	8022a02 <__kernel_tanf+0x136>
 80229c6:	ee07 0a10 	vmov	s14, r0
 80229ca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80229ce:	ee66 5aa6 	vmul.f32	s11, s13, s13
 80229d2:	ee76 6a87 	vadd.f32	s13, s13, s14
 80229d6:	179b      	asrs	r3, r3, #30
 80229d8:	ee85 6aa6 	vdiv.f32	s12, s11, s13
 80229dc:	f003 0302 	and.w	r3, r3, #2
 80229e0:	f1c3 0301 	rsb	r3, r3, #1
 80229e4:	ee76 6a60 	vsub.f32	s13, s12, s1
 80229e8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80229ec:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 80229f0:	eea7 7ae6 	vfms.f32	s14, s15, s13
 80229f4:	ee07 3a90 	vmov	s15, r3
 80229f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80229fc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8022a00:	e77c      	b.n	80228fc <__kernel_tanf+0x30>
 8022a02:	2801      	cmp	r0, #1
 8022a04:	d01b      	beq.n	8022a3e <__kernel_tanf+0x172>
 8022a06:	4b20      	ldr	r3, [pc, #128]	; (8022a88 <__kernel_tanf+0x1bc>)
 8022a08:	ee16 2a90 	vmov	r2, s13
 8022a0c:	401a      	ands	r2, r3
 8022a0e:	ee05 2a90 	vmov	s11, r2
 8022a12:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8022a16:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022a1a:	ee70 0ae7 	vsub.f32	s1, s1, s15
 8022a1e:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8022a22:	ee87 6aa6 	vdiv.f32	s12, s15, s13
 8022a26:	ee16 2a10 	vmov	r2, s12
 8022a2a:	4013      	ands	r3, r2
 8022a2c:	ee07 3a90 	vmov	s15, r3
 8022a30:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8022a34:	eea0 7aa7 	vfma.f32	s14, s1, s15
 8022a38:	eee7 7a06 	vfma.f32	s15, s14, s12
 8022a3c:	e75e      	b.n	80228fc <__kernel_tanf+0x30>
 8022a3e:	eef0 7a66 	vmov.f32	s15, s13
 8022a42:	e75b      	b.n	80228fc <__kernel_tanf+0x30>
 8022a44:	3f2ca140 	.word	0x3f2ca140
 8022a48:	3f490fda 	.word	0x3f490fda
 8022a4c:	33222168 	.word	0x33222168
 8022a50:	00000000 	.word	0x00000000
 8022a54:	b79bae5f 	.word	0xb79bae5f
 8022a58:	38a3f445 	.word	0x38a3f445
 8022a5c:	37d95384 	.word	0x37d95384
 8022a60:	3a1a26c8 	.word	0x3a1a26c8
 8022a64:	3b6b6916 	.word	0x3b6b6916
 8022a68:	3cb327a4 	.word	0x3cb327a4
 8022a6c:	3e088889 	.word	0x3e088889
 8022a70:	3895c07a 	.word	0x3895c07a
 8022a74:	398137b9 	.word	0x398137b9
 8022a78:	3abede48 	.word	0x3abede48
 8022a7c:	3c11371f 	.word	0x3c11371f
 8022a80:	3d5d0dd1 	.word	0x3d5d0dd1
 8022a84:	3eaaaaab 	.word	0x3eaaaaab
 8022a88:	fffff000 	.word	0xfffff000

08022a8c <__ieee754_rem_pio2f>:
 8022a8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022a8e:	ee10 6a10 	vmov	r6, s0
 8022a92:	4b86      	ldr	r3, [pc, #536]	; (8022cac <__ieee754_rem_pio2f+0x220>)
 8022a94:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8022a98:	429d      	cmp	r5, r3
 8022a9a:	b087      	sub	sp, #28
 8022a9c:	4604      	mov	r4, r0
 8022a9e:	dc05      	bgt.n	8022aac <__ieee754_rem_pio2f+0x20>
 8022aa0:	2300      	movs	r3, #0
 8022aa2:	ed80 0a00 	vstr	s0, [r0]
 8022aa6:	6043      	str	r3, [r0, #4]
 8022aa8:	2000      	movs	r0, #0
 8022aaa:	e020      	b.n	8022aee <__ieee754_rem_pio2f+0x62>
 8022aac:	4b80      	ldr	r3, [pc, #512]	; (8022cb0 <__ieee754_rem_pio2f+0x224>)
 8022aae:	429d      	cmp	r5, r3
 8022ab0:	dc38      	bgt.n	8022b24 <__ieee754_rem_pio2f+0x98>
 8022ab2:	2e00      	cmp	r6, #0
 8022ab4:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8022cb4 <__ieee754_rem_pio2f+0x228>
 8022ab8:	4b7f      	ldr	r3, [pc, #508]	; (8022cb8 <__ieee754_rem_pio2f+0x22c>)
 8022aba:	f025 050f 	bic.w	r5, r5, #15
 8022abe:	dd18      	ble.n	8022af2 <__ieee754_rem_pio2f+0x66>
 8022ac0:	429d      	cmp	r5, r3
 8022ac2:	ee70 7a47 	vsub.f32	s15, s0, s14
 8022ac6:	bf09      	itett	eq
 8022ac8:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 8022cbc <__ieee754_rem_pio2f+0x230>
 8022acc:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8022cc0 <__ieee754_rem_pio2f+0x234>
 8022ad0:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8022ad4:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8022cc4 <__ieee754_rem_pio2f+0x238>
 8022ad8:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8022adc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8022ae0:	edc0 6a00 	vstr	s13, [r0]
 8022ae4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022ae8:	edc0 7a01 	vstr	s15, [r0, #4]
 8022aec:	2001      	movs	r0, #1
 8022aee:	b007      	add	sp, #28
 8022af0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8022af2:	429d      	cmp	r5, r3
 8022af4:	ee70 7a07 	vadd.f32	s15, s0, s14
 8022af8:	bf09      	itett	eq
 8022afa:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 8022cbc <__ieee754_rem_pio2f+0x230>
 8022afe:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8022cc0 <__ieee754_rem_pio2f+0x234>
 8022b02:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8022b06:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8022cc4 <__ieee754_rem_pio2f+0x238>
 8022b0a:	ee77 6a87 	vadd.f32	s13, s15, s14
 8022b0e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8022b12:	edc0 6a00 	vstr	s13, [r0]
 8022b16:	ee77 7a87 	vadd.f32	s15, s15, s14
 8022b1a:	edc0 7a01 	vstr	s15, [r0, #4]
 8022b1e:	f04f 30ff 	mov.w	r0, #4294967295
 8022b22:	e7e4      	b.n	8022aee <__ieee754_rem_pio2f+0x62>
 8022b24:	4b68      	ldr	r3, [pc, #416]	; (8022cc8 <__ieee754_rem_pio2f+0x23c>)
 8022b26:	429d      	cmp	r5, r3
 8022b28:	dc71      	bgt.n	8022c0e <__ieee754_rem_pio2f+0x182>
 8022b2a:	f000 f8db 	bl	8022ce4 <fabsf>
 8022b2e:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8022ccc <__ieee754_rem_pio2f+0x240>
 8022b32:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8022b36:	eee0 7a07 	vfma.f32	s15, s0, s14
 8022b3a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8022b3e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8022b42:	ee17 0a90 	vmov	r0, s15
 8022b46:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8022cb4 <__ieee754_rem_pio2f+0x228>
 8022b4a:	eea7 0a67 	vfms.f32	s0, s14, s15
 8022b4e:	281f      	cmp	r0, #31
 8022b50:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8022cc0 <__ieee754_rem_pio2f+0x234>
 8022b54:	ee67 7a27 	vmul.f32	s15, s14, s15
 8022b58:	eeb1 6a47 	vneg.f32	s12, s14
 8022b5c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8022b60:	ee16 2a90 	vmov	r2, s13
 8022b64:	dc1c      	bgt.n	8022ba0 <__ieee754_rem_pio2f+0x114>
 8022b66:	495a      	ldr	r1, [pc, #360]	; (8022cd0 <__ieee754_rem_pio2f+0x244>)
 8022b68:	1e47      	subs	r7, r0, #1
 8022b6a:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 8022b6e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8022b72:	428b      	cmp	r3, r1
 8022b74:	d014      	beq.n	8022ba0 <__ieee754_rem_pio2f+0x114>
 8022b76:	6022      	str	r2, [r4, #0]
 8022b78:	ed94 7a00 	vldr	s14, [r4]
 8022b7c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8022b80:	2e00      	cmp	r6, #0
 8022b82:	ee30 0a67 	vsub.f32	s0, s0, s15
 8022b86:	ed84 0a01 	vstr	s0, [r4, #4]
 8022b8a:	dab0      	bge.n	8022aee <__ieee754_rem_pio2f+0x62>
 8022b8c:	eeb1 7a47 	vneg.f32	s14, s14
 8022b90:	eeb1 0a40 	vneg.f32	s0, s0
 8022b94:	ed84 7a00 	vstr	s14, [r4]
 8022b98:	ed84 0a01 	vstr	s0, [r4, #4]
 8022b9c:	4240      	negs	r0, r0
 8022b9e:	e7a6      	b.n	8022aee <__ieee754_rem_pio2f+0x62>
 8022ba0:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8022ba4:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 8022ba8:	2908      	cmp	r1, #8
 8022baa:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8022bae:	dde2      	ble.n	8022b76 <__ieee754_rem_pio2f+0xea>
 8022bb0:	eddf 5a42 	vldr	s11, [pc, #264]	; 8022cbc <__ieee754_rem_pio2f+0x230>
 8022bb4:	eef0 6a40 	vmov.f32	s13, s0
 8022bb8:	eee6 6a25 	vfma.f32	s13, s12, s11
 8022bbc:	ee70 7a66 	vsub.f32	s15, s0, s13
 8022bc0:	eee6 7a25 	vfma.f32	s15, s12, s11
 8022bc4:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8022cc4 <__ieee754_rem_pio2f+0x238>
 8022bc8:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8022bcc:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8022bd0:	ee15 2a90 	vmov	r2, s11
 8022bd4:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8022bd8:	1a5b      	subs	r3, r3, r1
 8022bda:	2b19      	cmp	r3, #25
 8022bdc:	dc04      	bgt.n	8022be8 <__ieee754_rem_pio2f+0x15c>
 8022bde:	edc4 5a00 	vstr	s11, [r4]
 8022be2:	eeb0 0a66 	vmov.f32	s0, s13
 8022be6:	e7c7      	b.n	8022b78 <__ieee754_rem_pio2f+0xec>
 8022be8:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8022cd4 <__ieee754_rem_pio2f+0x248>
 8022bec:	eeb0 0a66 	vmov.f32	s0, s13
 8022bf0:	eea6 0a25 	vfma.f32	s0, s12, s11
 8022bf4:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8022bf8:	eddf 6a37 	vldr	s13, [pc, #220]	; 8022cd8 <__ieee754_rem_pio2f+0x24c>
 8022bfc:	eee6 7a25 	vfma.f32	s15, s12, s11
 8022c00:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8022c04:	ee30 7a67 	vsub.f32	s14, s0, s15
 8022c08:	ed84 7a00 	vstr	s14, [r4]
 8022c0c:	e7b4      	b.n	8022b78 <__ieee754_rem_pio2f+0xec>
 8022c0e:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8022c12:	db06      	blt.n	8022c22 <__ieee754_rem_pio2f+0x196>
 8022c14:	ee70 7a40 	vsub.f32	s15, s0, s0
 8022c18:	edc0 7a01 	vstr	s15, [r0, #4]
 8022c1c:	edc0 7a00 	vstr	s15, [r0]
 8022c20:	e742      	b.n	8022aa8 <__ieee754_rem_pio2f+0x1c>
 8022c22:	15ea      	asrs	r2, r5, #23
 8022c24:	3a86      	subs	r2, #134	; 0x86
 8022c26:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8022c2a:	ee07 3a90 	vmov	s15, r3
 8022c2e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8022c32:	eddf 6a2a 	vldr	s13, [pc, #168]	; 8022cdc <__ieee754_rem_pio2f+0x250>
 8022c36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8022c3a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022c3e:	ed8d 7a03 	vstr	s14, [sp, #12]
 8022c42:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8022c46:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8022c4a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8022c4e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022c52:	ed8d 7a04 	vstr	s14, [sp, #16]
 8022c56:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8022c5a:	eef5 7a40 	vcmp.f32	s15, #0.0
 8022c5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022c62:	edcd 7a05 	vstr	s15, [sp, #20]
 8022c66:	d11e      	bne.n	8022ca6 <__ieee754_rem_pio2f+0x21a>
 8022c68:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8022c6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022c70:	bf14      	ite	ne
 8022c72:	2302      	movne	r3, #2
 8022c74:	2301      	moveq	r3, #1
 8022c76:	491a      	ldr	r1, [pc, #104]	; (8022ce0 <__ieee754_rem_pio2f+0x254>)
 8022c78:	9101      	str	r1, [sp, #4]
 8022c7a:	2102      	movs	r1, #2
 8022c7c:	9100      	str	r1, [sp, #0]
 8022c7e:	a803      	add	r0, sp, #12
 8022c80:	4621      	mov	r1, r4
 8022c82:	f000 f837 	bl	8022cf4 <__kernel_rem_pio2f>
 8022c86:	2e00      	cmp	r6, #0
 8022c88:	f6bf af31 	bge.w	8022aee <__ieee754_rem_pio2f+0x62>
 8022c8c:	edd4 7a00 	vldr	s15, [r4]
 8022c90:	eef1 7a67 	vneg.f32	s15, s15
 8022c94:	edc4 7a00 	vstr	s15, [r4]
 8022c98:	edd4 7a01 	vldr	s15, [r4, #4]
 8022c9c:	eef1 7a67 	vneg.f32	s15, s15
 8022ca0:	edc4 7a01 	vstr	s15, [r4, #4]
 8022ca4:	e77a      	b.n	8022b9c <__ieee754_rem_pio2f+0x110>
 8022ca6:	2303      	movs	r3, #3
 8022ca8:	e7e5      	b.n	8022c76 <__ieee754_rem_pio2f+0x1ea>
 8022caa:	bf00      	nop
 8022cac:	3f490fd8 	.word	0x3f490fd8
 8022cb0:	4016cbe3 	.word	0x4016cbe3
 8022cb4:	3fc90f80 	.word	0x3fc90f80
 8022cb8:	3fc90fd0 	.word	0x3fc90fd0
 8022cbc:	37354400 	.word	0x37354400
 8022cc0:	37354443 	.word	0x37354443
 8022cc4:	2e85a308 	.word	0x2e85a308
 8022cc8:	43490f80 	.word	0x43490f80
 8022ccc:	3f22f984 	.word	0x3f22f984
 8022cd0:	080267c0 	.word	0x080267c0
 8022cd4:	2e85a300 	.word	0x2e85a300
 8022cd8:	248d3132 	.word	0x248d3132
 8022cdc:	43800000 	.word	0x43800000
 8022ce0:	08026840 	.word	0x08026840

08022ce4 <fabsf>:
 8022ce4:	ee10 3a10 	vmov	r3, s0
 8022ce8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8022cec:	ee00 3a10 	vmov	s0, r3
 8022cf0:	4770      	bx	lr
	...

08022cf4 <__kernel_rem_pio2f>:
 8022cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022cf8:	ed2d 8b04 	vpush	{d8-d9}
 8022cfc:	b0d9      	sub	sp, #356	; 0x164
 8022cfe:	4688      	mov	r8, r1
 8022d00:	9002      	str	r0, [sp, #8]
 8022d02:	49b8      	ldr	r1, [pc, #736]	; (8022fe4 <__kernel_rem_pio2f+0x2f0>)
 8022d04:	9866      	ldr	r0, [sp, #408]	; 0x198
 8022d06:	9301      	str	r3, [sp, #4]
 8022d08:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8022d0c:	9901      	ldr	r1, [sp, #4]
 8022d0e:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 8022d10:	f101 3bff 	add.w	fp, r1, #4294967295
 8022d14:	1d11      	adds	r1, r2, #4
 8022d16:	db25      	blt.n	8022d64 <__kernel_rem_pio2f+0x70>
 8022d18:	1ed0      	subs	r0, r2, #3
 8022d1a:	bf48      	it	mi
 8022d1c:	1d10      	addmi	r0, r2, #4
 8022d1e:	10c0      	asrs	r0, r0, #3
 8022d20:	1c45      	adds	r5, r0, #1
 8022d22:	00e9      	lsls	r1, r5, #3
 8022d24:	eba0 070b 	sub.w	r7, r0, fp
 8022d28:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 8022ff4 <__kernel_rem_pio2f+0x300>
 8022d2c:	9103      	str	r1, [sp, #12]
 8022d2e:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 8022d32:	eb0a 0c0b 	add.w	ip, sl, fp
 8022d36:	ae1c      	add	r6, sp, #112	; 0x70
 8022d38:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8022d3c:	2400      	movs	r4, #0
 8022d3e:	4564      	cmp	r4, ip
 8022d40:	dd12      	ble.n	8022d68 <__kernel_rem_pio2f+0x74>
 8022d42:	9901      	ldr	r1, [sp, #4]
 8022d44:	ac1c      	add	r4, sp, #112	; 0x70
 8022d46:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8022d4a:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8022d4e:	f04f 0c00 	mov.w	ip, #0
 8022d52:	45d4      	cmp	ip, sl
 8022d54:	dc27      	bgt.n	8022da6 <__kernel_rem_pio2f+0xb2>
 8022d56:	f8dd e008 	ldr.w	lr, [sp, #8]
 8022d5a:	eddf 7aa6 	vldr	s15, [pc, #664]	; 8022ff4 <__kernel_rem_pio2f+0x300>
 8022d5e:	4627      	mov	r7, r4
 8022d60:	2600      	movs	r6, #0
 8022d62:	e016      	b.n	8022d92 <__kernel_rem_pio2f+0x9e>
 8022d64:	2000      	movs	r0, #0
 8022d66:	e7db      	b.n	8022d20 <__kernel_rem_pio2f+0x2c>
 8022d68:	42e7      	cmn	r7, r4
 8022d6a:	bf5d      	ittte	pl
 8022d6c:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 8022d70:	ee07 1a90 	vmovpl	s15, r1
 8022d74:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8022d78:	eef0 7a47 	vmovmi.f32	s15, s14
 8022d7c:	ece6 7a01 	vstmia	r6!, {s15}
 8022d80:	3401      	adds	r4, #1
 8022d82:	e7dc      	b.n	8022d3e <__kernel_rem_pio2f+0x4a>
 8022d84:	ecfe 6a01 	vldmia	lr!, {s13}
 8022d88:	ed97 7a00 	vldr	s14, [r7]
 8022d8c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8022d90:	3601      	adds	r6, #1
 8022d92:	455e      	cmp	r6, fp
 8022d94:	f1a7 0704 	sub.w	r7, r7, #4
 8022d98:	ddf4      	ble.n	8022d84 <__kernel_rem_pio2f+0x90>
 8022d9a:	ece9 7a01 	vstmia	r9!, {s15}
 8022d9e:	f10c 0c01 	add.w	ip, ip, #1
 8022da2:	3404      	adds	r4, #4
 8022da4:	e7d5      	b.n	8022d52 <__kernel_rem_pio2f+0x5e>
 8022da6:	a908      	add	r1, sp, #32
 8022da8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8022dac:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8022db0:	eddf 8a8f 	vldr	s17, [pc, #572]	; 8022ff0 <__kernel_rem_pio2f+0x2fc>
 8022db4:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 8022fec <__kernel_rem_pio2f+0x2f8>
 8022db8:	9105      	str	r1, [sp, #20]
 8022dba:	9304      	str	r3, [sp, #16]
 8022dbc:	4656      	mov	r6, sl
 8022dbe:	00b3      	lsls	r3, r6, #2
 8022dc0:	9306      	str	r3, [sp, #24]
 8022dc2:	ab58      	add	r3, sp, #352	; 0x160
 8022dc4:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8022dc8:	ac08      	add	r4, sp, #32
 8022dca:	ab44      	add	r3, sp, #272	; 0x110
 8022dcc:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8022dd0:	46a4      	mov	ip, r4
 8022dd2:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8022dd6:	4637      	mov	r7, r6
 8022dd8:	2f00      	cmp	r7, #0
 8022dda:	f1a0 0004 	sub.w	r0, r0, #4
 8022dde:	dc4a      	bgt.n	8022e76 <__kernel_rem_pio2f+0x182>
 8022de0:	4628      	mov	r0, r5
 8022de2:	9207      	str	r2, [sp, #28]
 8022de4:	f000 f9f8 	bl	80231d8 <scalbnf>
 8022de8:	eeb0 8a40 	vmov.f32	s16, s0
 8022dec:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8022df0:	ee28 0a00 	vmul.f32	s0, s16, s0
 8022df4:	f000 fa56 	bl	80232a4 <floorf>
 8022df8:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8022dfc:	eea0 8a67 	vfms.f32	s16, s0, s15
 8022e00:	2d00      	cmp	r5, #0
 8022e02:	9a07      	ldr	r2, [sp, #28]
 8022e04:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8022e08:	ee17 9a90 	vmov	r9, s15
 8022e0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022e10:	ee38 8a67 	vsub.f32	s16, s16, s15
 8022e14:	dd41      	ble.n	8022e9a <__kernel_rem_pio2f+0x1a6>
 8022e16:	f106 3cff 	add.w	ip, r6, #4294967295
 8022e1a:	ab08      	add	r3, sp, #32
 8022e1c:	f1c5 0e08 	rsb	lr, r5, #8
 8022e20:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 8022e24:	fa47 f00e 	asr.w	r0, r7, lr
 8022e28:	4481      	add	r9, r0
 8022e2a:	fa00 f00e 	lsl.w	r0, r0, lr
 8022e2e:	1a3f      	subs	r7, r7, r0
 8022e30:	f1c5 0007 	rsb	r0, r5, #7
 8022e34:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8022e38:	4107      	asrs	r7, r0
 8022e3a:	2f00      	cmp	r7, #0
 8022e3c:	dd3c      	ble.n	8022eb8 <__kernel_rem_pio2f+0x1c4>
 8022e3e:	f04f 0e00 	mov.w	lr, #0
 8022e42:	f109 0901 	add.w	r9, r9, #1
 8022e46:	4671      	mov	r1, lr
 8022e48:	4576      	cmp	r6, lr
 8022e4a:	dc67      	bgt.n	8022f1c <__kernel_rem_pio2f+0x228>
 8022e4c:	2d00      	cmp	r5, #0
 8022e4e:	dd03      	ble.n	8022e58 <__kernel_rem_pio2f+0x164>
 8022e50:	2d01      	cmp	r5, #1
 8022e52:	d074      	beq.n	8022f3e <__kernel_rem_pio2f+0x24a>
 8022e54:	2d02      	cmp	r5, #2
 8022e56:	d07b      	beq.n	8022f50 <__kernel_rem_pio2f+0x25c>
 8022e58:	2f02      	cmp	r7, #2
 8022e5a:	d12d      	bne.n	8022eb8 <__kernel_rem_pio2f+0x1c4>
 8022e5c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8022e60:	ee30 8a48 	vsub.f32	s16, s0, s16
 8022e64:	b341      	cbz	r1, 8022eb8 <__kernel_rem_pio2f+0x1c4>
 8022e66:	4628      	mov	r0, r5
 8022e68:	9207      	str	r2, [sp, #28]
 8022e6a:	f000 f9b5 	bl	80231d8 <scalbnf>
 8022e6e:	9a07      	ldr	r2, [sp, #28]
 8022e70:	ee38 8a40 	vsub.f32	s16, s16, s0
 8022e74:	e020      	b.n	8022eb8 <__kernel_rem_pio2f+0x1c4>
 8022e76:	ee60 7a28 	vmul.f32	s15, s0, s17
 8022e7a:	3f01      	subs	r7, #1
 8022e7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8022e80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022e84:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8022e88:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8022e8c:	ecac 0a01 	vstmia	ip!, {s0}
 8022e90:	ed90 0a00 	vldr	s0, [r0]
 8022e94:	ee37 0a80 	vadd.f32	s0, s15, s0
 8022e98:	e79e      	b.n	8022dd8 <__kernel_rem_pio2f+0xe4>
 8022e9a:	d105      	bne.n	8022ea8 <__kernel_rem_pio2f+0x1b4>
 8022e9c:	1e70      	subs	r0, r6, #1
 8022e9e:	ab08      	add	r3, sp, #32
 8022ea0:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8022ea4:	11ff      	asrs	r7, r7, #7
 8022ea6:	e7c8      	b.n	8022e3a <__kernel_rem_pio2f+0x146>
 8022ea8:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8022eac:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8022eb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022eb4:	da30      	bge.n	8022f18 <__kernel_rem_pio2f+0x224>
 8022eb6:	2700      	movs	r7, #0
 8022eb8:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8022ebc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022ec0:	f040 809a 	bne.w	8022ff8 <__kernel_rem_pio2f+0x304>
 8022ec4:	1e74      	subs	r4, r6, #1
 8022ec6:	46a4      	mov	ip, r4
 8022ec8:	2100      	movs	r1, #0
 8022eca:	45d4      	cmp	ip, sl
 8022ecc:	da47      	bge.n	8022f5e <__kernel_rem_pio2f+0x26a>
 8022ece:	2900      	cmp	r1, #0
 8022ed0:	d063      	beq.n	8022f9a <__kernel_rem_pio2f+0x2a6>
 8022ed2:	ab08      	add	r3, sp, #32
 8022ed4:	3d08      	subs	r5, #8
 8022ed6:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8022eda:	2b00      	cmp	r3, #0
 8022edc:	d07f      	beq.n	8022fde <__kernel_rem_pio2f+0x2ea>
 8022ede:	4628      	mov	r0, r5
 8022ee0:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8022ee4:	f000 f978 	bl	80231d8 <scalbnf>
 8022ee8:	1c63      	adds	r3, r4, #1
 8022eea:	aa44      	add	r2, sp, #272	; 0x110
 8022eec:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8022ff0 <__kernel_rem_pio2f+0x2fc>
 8022ef0:	0099      	lsls	r1, r3, #2
 8022ef2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8022ef6:	4623      	mov	r3, r4
 8022ef8:	2b00      	cmp	r3, #0
 8022efa:	f280 80ad 	bge.w	8023058 <__kernel_rem_pio2f+0x364>
 8022efe:	4623      	mov	r3, r4
 8022f00:	2b00      	cmp	r3, #0
 8022f02:	f2c0 80cb 	blt.w	802309c <__kernel_rem_pio2f+0x3a8>
 8022f06:	aa44      	add	r2, sp, #272	; 0x110
 8022f08:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8022f0c:	4e36      	ldr	r6, [pc, #216]	; (8022fe8 <__kernel_rem_pio2f+0x2f4>)
 8022f0e:	eddf 7a39 	vldr	s15, [pc, #228]	; 8022ff4 <__kernel_rem_pio2f+0x300>
 8022f12:	2000      	movs	r0, #0
 8022f14:	1ae2      	subs	r2, r4, r3
 8022f16:	e0b6      	b.n	8023086 <__kernel_rem_pio2f+0x392>
 8022f18:	2702      	movs	r7, #2
 8022f1a:	e790      	b.n	8022e3e <__kernel_rem_pio2f+0x14a>
 8022f1c:	6820      	ldr	r0, [r4, #0]
 8022f1e:	b949      	cbnz	r1, 8022f34 <__kernel_rem_pio2f+0x240>
 8022f20:	b118      	cbz	r0, 8022f2a <__kernel_rem_pio2f+0x236>
 8022f22:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8022f26:	6020      	str	r0, [r4, #0]
 8022f28:	2001      	movs	r0, #1
 8022f2a:	f10e 0e01 	add.w	lr, lr, #1
 8022f2e:	3404      	adds	r4, #4
 8022f30:	4601      	mov	r1, r0
 8022f32:	e789      	b.n	8022e48 <__kernel_rem_pio2f+0x154>
 8022f34:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8022f38:	6020      	str	r0, [r4, #0]
 8022f3a:	4608      	mov	r0, r1
 8022f3c:	e7f5      	b.n	8022f2a <__kernel_rem_pio2f+0x236>
 8022f3e:	1e74      	subs	r4, r6, #1
 8022f40:	ab08      	add	r3, sp, #32
 8022f42:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8022f46:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8022f4a:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8022f4e:	e783      	b.n	8022e58 <__kernel_rem_pio2f+0x164>
 8022f50:	1e74      	subs	r4, r6, #1
 8022f52:	ab08      	add	r3, sp, #32
 8022f54:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8022f58:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8022f5c:	e7f5      	b.n	8022f4a <__kernel_rem_pio2f+0x256>
 8022f5e:	ab08      	add	r3, sp, #32
 8022f60:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 8022f64:	f10c 3cff 	add.w	ip, ip, #4294967295
 8022f68:	4301      	orrs	r1, r0
 8022f6a:	e7ae      	b.n	8022eca <__kernel_rem_pio2f+0x1d6>
 8022f6c:	3001      	adds	r0, #1
 8022f6e:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 8022f72:	2f00      	cmp	r7, #0
 8022f74:	d0fa      	beq.n	8022f6c <__kernel_rem_pio2f+0x278>
 8022f76:	9b06      	ldr	r3, [sp, #24]
 8022f78:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8022f7c:	eb0d 0403 	add.w	r4, sp, r3
 8022f80:	9b01      	ldr	r3, [sp, #4]
 8022f82:	18f7      	adds	r7, r6, r3
 8022f84:	ab1c      	add	r3, sp, #112	; 0x70
 8022f86:	f106 0c01 	add.w	ip, r6, #1
 8022f8a:	3c4c      	subs	r4, #76	; 0x4c
 8022f8c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8022f90:	4430      	add	r0, r6
 8022f92:	4560      	cmp	r0, ip
 8022f94:	da04      	bge.n	8022fa0 <__kernel_rem_pio2f+0x2ac>
 8022f96:	4606      	mov	r6, r0
 8022f98:	e711      	b.n	8022dbe <__kernel_rem_pio2f+0xca>
 8022f9a:	9c05      	ldr	r4, [sp, #20]
 8022f9c:	2001      	movs	r0, #1
 8022f9e:	e7e6      	b.n	8022f6e <__kernel_rem_pio2f+0x27a>
 8022fa0:	9b04      	ldr	r3, [sp, #16]
 8022fa2:	f8dd e008 	ldr.w	lr, [sp, #8]
 8022fa6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8022faa:	9306      	str	r3, [sp, #24]
 8022fac:	ee07 3a90 	vmov	s15, r3
 8022fb0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022fb4:	2600      	movs	r6, #0
 8022fb6:	ece7 7a01 	vstmia	r7!, {s15}
 8022fba:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8022ff4 <__kernel_rem_pio2f+0x300>
 8022fbe:	46b9      	mov	r9, r7
 8022fc0:	455e      	cmp	r6, fp
 8022fc2:	dd04      	ble.n	8022fce <__kernel_rem_pio2f+0x2da>
 8022fc4:	ece4 7a01 	vstmia	r4!, {s15}
 8022fc8:	f10c 0c01 	add.w	ip, ip, #1
 8022fcc:	e7e1      	b.n	8022f92 <__kernel_rem_pio2f+0x29e>
 8022fce:	ecfe 6a01 	vldmia	lr!, {s13}
 8022fd2:	ed39 7a01 	vldmdb	r9!, {s14}
 8022fd6:	3601      	adds	r6, #1
 8022fd8:	eee6 7a87 	vfma.f32	s15, s13, s14
 8022fdc:	e7f0      	b.n	8022fc0 <__kernel_rem_pio2f+0x2cc>
 8022fde:	3c01      	subs	r4, #1
 8022fe0:	e777      	b.n	8022ed2 <__kernel_rem_pio2f+0x1de>
 8022fe2:	bf00      	nop
 8022fe4:	08026b84 	.word	0x08026b84
 8022fe8:	08026b58 	.word	0x08026b58
 8022fec:	43800000 	.word	0x43800000
 8022ff0:	3b800000 	.word	0x3b800000
 8022ff4:	00000000 	.word	0x00000000
 8022ff8:	9b03      	ldr	r3, [sp, #12]
 8022ffa:	eeb0 0a48 	vmov.f32	s0, s16
 8022ffe:	1a98      	subs	r0, r3, r2
 8023000:	f000 f8ea 	bl	80231d8 <scalbnf>
 8023004:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8022fec <__kernel_rem_pio2f+0x2f8>
 8023008:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802300c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023010:	db19      	blt.n	8023046 <__kernel_rem_pio2f+0x352>
 8023012:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8022ff0 <__kernel_rem_pio2f+0x2fc>
 8023016:	ee60 7a27 	vmul.f32	s15, s0, s15
 802301a:	aa08      	add	r2, sp, #32
 802301c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8023020:	1c74      	adds	r4, r6, #1
 8023022:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8023026:	3508      	adds	r5, #8
 8023028:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802302c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8023030:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8023034:	ee10 3a10 	vmov	r3, s0
 8023038:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802303c:	ee17 3a90 	vmov	r3, s15
 8023040:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8023044:	e74b      	b.n	8022ede <__kernel_rem_pio2f+0x1ea>
 8023046:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802304a:	aa08      	add	r2, sp, #32
 802304c:	ee10 3a10 	vmov	r3, s0
 8023050:	4634      	mov	r4, r6
 8023052:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8023056:	e742      	b.n	8022ede <__kernel_rem_pio2f+0x1ea>
 8023058:	a808      	add	r0, sp, #32
 802305a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802305e:	9001      	str	r0, [sp, #4]
 8023060:	ee07 0a90 	vmov	s15, r0
 8023064:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8023068:	3b01      	subs	r3, #1
 802306a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802306e:	ee20 0a07 	vmul.f32	s0, s0, s14
 8023072:	ed62 7a01 	vstmdb	r2!, {s15}
 8023076:	e73f      	b.n	8022ef8 <__kernel_rem_pio2f+0x204>
 8023078:	ecf6 6a01 	vldmia	r6!, {s13}
 802307c:	ecb5 7a01 	vldmia	r5!, {s14}
 8023080:	eee6 7a87 	vfma.f32	s15, s13, s14
 8023084:	3001      	adds	r0, #1
 8023086:	4550      	cmp	r0, sl
 8023088:	dc01      	bgt.n	802308e <__kernel_rem_pio2f+0x39a>
 802308a:	4290      	cmp	r0, r2
 802308c:	ddf4      	ble.n	8023078 <__kernel_rem_pio2f+0x384>
 802308e:	a858      	add	r0, sp, #352	; 0x160
 8023090:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8023094:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8023098:	3b01      	subs	r3, #1
 802309a:	e731      	b.n	8022f00 <__kernel_rem_pio2f+0x20c>
 802309c:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802309e:	2b02      	cmp	r3, #2
 80230a0:	dc09      	bgt.n	80230b6 <__kernel_rem_pio2f+0x3c2>
 80230a2:	2b00      	cmp	r3, #0
 80230a4:	dc2b      	bgt.n	80230fe <__kernel_rem_pio2f+0x40a>
 80230a6:	d044      	beq.n	8023132 <__kernel_rem_pio2f+0x43e>
 80230a8:	f009 0007 	and.w	r0, r9, #7
 80230ac:	b059      	add	sp, #356	; 0x164
 80230ae:	ecbd 8b04 	vpop	{d8-d9}
 80230b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80230b6:	9b66      	ldr	r3, [sp, #408]	; 0x198
 80230b8:	2b03      	cmp	r3, #3
 80230ba:	d1f5      	bne.n	80230a8 <__kernel_rem_pio2f+0x3b4>
 80230bc:	aa30      	add	r2, sp, #192	; 0xc0
 80230be:	1f0b      	subs	r3, r1, #4
 80230c0:	4413      	add	r3, r2
 80230c2:	461a      	mov	r2, r3
 80230c4:	4620      	mov	r0, r4
 80230c6:	2800      	cmp	r0, #0
 80230c8:	f1a2 0204 	sub.w	r2, r2, #4
 80230cc:	dc52      	bgt.n	8023174 <__kernel_rem_pio2f+0x480>
 80230ce:	4622      	mov	r2, r4
 80230d0:	2a01      	cmp	r2, #1
 80230d2:	f1a3 0304 	sub.w	r3, r3, #4
 80230d6:	dc5d      	bgt.n	8023194 <__kernel_rem_pio2f+0x4a0>
 80230d8:	ab30      	add	r3, sp, #192	; 0xc0
 80230da:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 8022ff4 <__kernel_rem_pio2f+0x300>
 80230de:	440b      	add	r3, r1
 80230e0:	2c01      	cmp	r4, #1
 80230e2:	dc67      	bgt.n	80231b4 <__kernel_rem_pio2f+0x4c0>
 80230e4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80230e8:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 80230ec:	2f00      	cmp	r7, #0
 80230ee:	d167      	bne.n	80231c0 <__kernel_rem_pio2f+0x4cc>
 80230f0:	edc8 6a00 	vstr	s13, [r8]
 80230f4:	ed88 7a01 	vstr	s14, [r8, #4]
 80230f8:	edc8 7a02 	vstr	s15, [r8, #8]
 80230fc:	e7d4      	b.n	80230a8 <__kernel_rem_pio2f+0x3b4>
 80230fe:	ab30      	add	r3, sp, #192	; 0xc0
 8023100:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 8022ff4 <__kernel_rem_pio2f+0x300>
 8023104:	440b      	add	r3, r1
 8023106:	4622      	mov	r2, r4
 8023108:	2a00      	cmp	r2, #0
 802310a:	da24      	bge.n	8023156 <__kernel_rem_pio2f+0x462>
 802310c:	b34f      	cbz	r7, 8023162 <__kernel_rem_pio2f+0x46e>
 802310e:	eef1 7a47 	vneg.f32	s15, s14
 8023112:	edc8 7a00 	vstr	s15, [r8]
 8023116:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802311a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802311e:	aa31      	add	r2, sp, #196	; 0xc4
 8023120:	2301      	movs	r3, #1
 8023122:	429c      	cmp	r4, r3
 8023124:	da20      	bge.n	8023168 <__kernel_rem_pio2f+0x474>
 8023126:	b10f      	cbz	r7, 802312c <__kernel_rem_pio2f+0x438>
 8023128:	eef1 7a67 	vneg.f32	s15, s15
 802312c:	edc8 7a01 	vstr	s15, [r8, #4]
 8023130:	e7ba      	b.n	80230a8 <__kernel_rem_pio2f+0x3b4>
 8023132:	ab30      	add	r3, sp, #192	; 0xc0
 8023134:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 8022ff4 <__kernel_rem_pio2f+0x300>
 8023138:	440b      	add	r3, r1
 802313a:	2c00      	cmp	r4, #0
 802313c:	da05      	bge.n	802314a <__kernel_rem_pio2f+0x456>
 802313e:	b10f      	cbz	r7, 8023144 <__kernel_rem_pio2f+0x450>
 8023140:	eef1 7a67 	vneg.f32	s15, s15
 8023144:	edc8 7a00 	vstr	s15, [r8]
 8023148:	e7ae      	b.n	80230a8 <__kernel_rem_pio2f+0x3b4>
 802314a:	ed33 7a01 	vldmdb	r3!, {s14}
 802314e:	3c01      	subs	r4, #1
 8023150:	ee77 7a87 	vadd.f32	s15, s15, s14
 8023154:	e7f1      	b.n	802313a <__kernel_rem_pio2f+0x446>
 8023156:	ed73 7a01 	vldmdb	r3!, {s15}
 802315a:	3a01      	subs	r2, #1
 802315c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8023160:	e7d2      	b.n	8023108 <__kernel_rem_pio2f+0x414>
 8023162:	eef0 7a47 	vmov.f32	s15, s14
 8023166:	e7d4      	b.n	8023112 <__kernel_rem_pio2f+0x41e>
 8023168:	ecb2 7a01 	vldmia	r2!, {s14}
 802316c:	3301      	adds	r3, #1
 802316e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8023172:	e7d6      	b.n	8023122 <__kernel_rem_pio2f+0x42e>
 8023174:	edd2 7a00 	vldr	s15, [r2]
 8023178:	edd2 6a01 	vldr	s13, [r2, #4]
 802317c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8023180:	3801      	subs	r0, #1
 8023182:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023186:	ed82 7a00 	vstr	s14, [r2]
 802318a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802318e:	edc2 7a01 	vstr	s15, [r2, #4]
 8023192:	e798      	b.n	80230c6 <__kernel_rem_pio2f+0x3d2>
 8023194:	edd3 7a00 	vldr	s15, [r3]
 8023198:	edd3 6a01 	vldr	s13, [r3, #4]
 802319c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80231a0:	3a01      	subs	r2, #1
 80231a2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80231a6:	ed83 7a00 	vstr	s14, [r3]
 80231aa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80231ae:	edc3 7a01 	vstr	s15, [r3, #4]
 80231b2:	e78d      	b.n	80230d0 <__kernel_rem_pio2f+0x3dc>
 80231b4:	ed33 7a01 	vldmdb	r3!, {s14}
 80231b8:	3c01      	subs	r4, #1
 80231ba:	ee77 7a87 	vadd.f32	s15, s15, s14
 80231be:	e78f      	b.n	80230e0 <__kernel_rem_pio2f+0x3ec>
 80231c0:	eef1 6a66 	vneg.f32	s13, s13
 80231c4:	eeb1 7a47 	vneg.f32	s14, s14
 80231c8:	edc8 6a00 	vstr	s13, [r8]
 80231cc:	ed88 7a01 	vstr	s14, [r8, #4]
 80231d0:	eef1 7a67 	vneg.f32	s15, s15
 80231d4:	e790      	b.n	80230f8 <__kernel_rem_pio2f+0x404>
 80231d6:	bf00      	nop

080231d8 <scalbnf>:
 80231d8:	ee10 3a10 	vmov	r3, s0
 80231dc:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 80231e0:	d02b      	beq.n	802323a <scalbnf+0x62>
 80231e2:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 80231e6:	d302      	bcc.n	80231ee <scalbnf+0x16>
 80231e8:	ee30 0a00 	vadd.f32	s0, s0, s0
 80231ec:	4770      	bx	lr
 80231ee:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 80231f2:	d123      	bne.n	802323c <scalbnf+0x64>
 80231f4:	4b24      	ldr	r3, [pc, #144]	; (8023288 <scalbnf+0xb0>)
 80231f6:	eddf 7a25 	vldr	s15, [pc, #148]	; 802328c <scalbnf+0xb4>
 80231fa:	4298      	cmp	r0, r3
 80231fc:	ee20 0a27 	vmul.f32	s0, s0, s15
 8023200:	db17      	blt.n	8023232 <scalbnf+0x5a>
 8023202:	ee10 3a10 	vmov	r3, s0
 8023206:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802320a:	3a19      	subs	r2, #25
 802320c:	f24c 3150 	movw	r1, #50000	; 0xc350
 8023210:	4288      	cmp	r0, r1
 8023212:	dd15      	ble.n	8023240 <scalbnf+0x68>
 8023214:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8023290 <scalbnf+0xb8>
 8023218:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8023294 <scalbnf+0xbc>
 802321c:	ee10 3a10 	vmov	r3, s0
 8023220:	eeb0 7a67 	vmov.f32	s14, s15
 8023224:	2b00      	cmp	r3, #0
 8023226:	bfb8      	it	lt
 8023228:	eef0 7a66 	vmovlt.f32	s15, s13
 802322c:	ee27 0a87 	vmul.f32	s0, s15, s14
 8023230:	4770      	bx	lr
 8023232:	eddf 7a19 	vldr	s15, [pc, #100]	; 8023298 <scalbnf+0xc0>
 8023236:	ee27 0a80 	vmul.f32	s0, s15, s0
 802323a:	4770      	bx	lr
 802323c:	0dd2      	lsrs	r2, r2, #23
 802323e:	e7e5      	b.n	802320c <scalbnf+0x34>
 8023240:	4410      	add	r0, r2
 8023242:	28fe      	cmp	r0, #254	; 0xfe
 8023244:	dce6      	bgt.n	8023214 <scalbnf+0x3c>
 8023246:	2800      	cmp	r0, #0
 8023248:	dd06      	ble.n	8023258 <scalbnf+0x80>
 802324a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802324e:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8023252:	ee00 3a10 	vmov	s0, r3
 8023256:	4770      	bx	lr
 8023258:	f110 0f16 	cmn.w	r0, #22
 802325c:	da09      	bge.n	8023272 <scalbnf+0x9a>
 802325e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8023298 <scalbnf+0xc0>
 8023262:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802329c <scalbnf+0xc4>
 8023266:	ee10 3a10 	vmov	r3, s0
 802326a:	eeb0 7a67 	vmov.f32	s14, s15
 802326e:	2b00      	cmp	r3, #0
 8023270:	e7d9      	b.n	8023226 <scalbnf+0x4e>
 8023272:	3019      	adds	r0, #25
 8023274:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8023278:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802327c:	ed9f 0a08 	vldr	s0, [pc, #32]	; 80232a0 <scalbnf+0xc8>
 8023280:	ee07 3a90 	vmov	s15, r3
 8023284:	e7d7      	b.n	8023236 <scalbnf+0x5e>
 8023286:	bf00      	nop
 8023288:	ffff3cb0 	.word	0xffff3cb0
 802328c:	4c000000 	.word	0x4c000000
 8023290:	7149f2ca 	.word	0x7149f2ca
 8023294:	f149f2ca 	.word	0xf149f2ca
 8023298:	0da24260 	.word	0x0da24260
 802329c:	8da24260 	.word	0x8da24260
 80232a0:	33000000 	.word	0x33000000

080232a4 <floorf>:
 80232a4:	ee10 3a10 	vmov	r3, s0
 80232a8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80232ac:	3a7f      	subs	r2, #127	; 0x7f
 80232ae:	2a16      	cmp	r2, #22
 80232b0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80232b4:	dc2a      	bgt.n	802330c <floorf+0x68>
 80232b6:	2a00      	cmp	r2, #0
 80232b8:	da11      	bge.n	80232de <floorf+0x3a>
 80232ba:	eddf 7a18 	vldr	s15, [pc, #96]	; 802331c <floorf+0x78>
 80232be:	ee30 0a27 	vadd.f32	s0, s0, s15
 80232c2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80232c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80232ca:	dd05      	ble.n	80232d8 <floorf+0x34>
 80232cc:	2b00      	cmp	r3, #0
 80232ce:	da23      	bge.n	8023318 <floorf+0x74>
 80232d0:	4a13      	ldr	r2, [pc, #76]	; (8023320 <floorf+0x7c>)
 80232d2:	2900      	cmp	r1, #0
 80232d4:	bf18      	it	ne
 80232d6:	4613      	movne	r3, r2
 80232d8:	ee00 3a10 	vmov	s0, r3
 80232dc:	4770      	bx	lr
 80232de:	4911      	ldr	r1, [pc, #68]	; (8023324 <floorf+0x80>)
 80232e0:	4111      	asrs	r1, r2
 80232e2:	420b      	tst	r3, r1
 80232e4:	d0fa      	beq.n	80232dc <floorf+0x38>
 80232e6:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802331c <floorf+0x78>
 80232ea:	ee30 0a27 	vadd.f32	s0, s0, s15
 80232ee:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80232f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80232f6:	ddef      	ble.n	80232d8 <floorf+0x34>
 80232f8:	2b00      	cmp	r3, #0
 80232fa:	bfbe      	ittt	lt
 80232fc:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8023300:	fa40 f202 	asrlt.w	r2, r0, r2
 8023304:	189b      	addlt	r3, r3, r2
 8023306:	ea23 0301 	bic.w	r3, r3, r1
 802330a:	e7e5      	b.n	80232d8 <floorf+0x34>
 802330c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8023310:	d3e4      	bcc.n	80232dc <floorf+0x38>
 8023312:	ee30 0a00 	vadd.f32	s0, s0, s0
 8023316:	4770      	bx	lr
 8023318:	2300      	movs	r3, #0
 802331a:	e7dd      	b.n	80232d8 <floorf+0x34>
 802331c:	7149f2ca 	.word	0x7149f2ca
 8023320:	bf800000 	.word	0xbf800000
 8023324:	007fffff 	.word	0x007fffff

08023328 <abort>:
 8023328:	b508      	push	{r3, lr}
 802332a:	2006      	movs	r0, #6
 802332c:	f000 fa3a 	bl	80237a4 <raise>
 8023330:	2001      	movs	r0, #1
 8023332:	f7df fd61 	bl	8002df8 <_exit>
	...

08023338 <__assert_func>:
 8023338:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802333a:	4614      	mov	r4, r2
 802333c:	461a      	mov	r2, r3
 802333e:	4b09      	ldr	r3, [pc, #36]	; (8023364 <__assert_func+0x2c>)
 8023340:	681b      	ldr	r3, [r3, #0]
 8023342:	4605      	mov	r5, r0
 8023344:	68d8      	ldr	r0, [r3, #12]
 8023346:	b14c      	cbz	r4, 802335c <__assert_func+0x24>
 8023348:	4b07      	ldr	r3, [pc, #28]	; (8023368 <__assert_func+0x30>)
 802334a:	9100      	str	r1, [sp, #0]
 802334c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8023350:	4906      	ldr	r1, [pc, #24]	; (802336c <__assert_func+0x34>)
 8023352:	462b      	mov	r3, r5
 8023354:	f000 f982 	bl	802365c <fiprintf>
 8023358:	f7ff ffe6 	bl	8023328 <abort>
 802335c:	4b04      	ldr	r3, [pc, #16]	; (8023370 <__assert_func+0x38>)
 802335e:	461c      	mov	r4, r3
 8023360:	e7f3      	b.n	802334a <__assert_func+0x12>
 8023362:	bf00      	nop
 8023364:	20000118 	.word	0x20000118
 8023368:	08026b90 	.word	0x08026b90
 802336c:	08026b9d 	.word	0x08026b9d
 8023370:	08026bcb 	.word	0x08026bcb

08023374 <atexit>:
 8023374:	2300      	movs	r3, #0
 8023376:	4601      	mov	r1, r0
 8023378:	461a      	mov	r2, r3
 802337a:	4618      	mov	r0, r3
 802337c:	f000 bac0 	b.w	8023900 <__register_exitproc>

08023380 <malloc>:
 8023380:	4b02      	ldr	r3, [pc, #8]	; (802338c <malloc+0xc>)
 8023382:	4601      	mov	r1, r0
 8023384:	6818      	ldr	r0, [r3, #0]
 8023386:	f000 b82b 	b.w	80233e0 <_malloc_r>
 802338a:	bf00      	nop
 802338c:	20000118 	.word	0x20000118

08023390 <free>:
 8023390:	4b02      	ldr	r3, [pc, #8]	; (802339c <free+0xc>)
 8023392:	4601      	mov	r1, r0
 8023394:	6818      	ldr	r0, [r3, #0]
 8023396:	f000 bb11 	b.w	80239bc <_free_r>
 802339a:	bf00      	nop
 802339c:	20000118 	.word	0x20000118

080233a0 <sbrk_aligned>:
 80233a0:	b570      	push	{r4, r5, r6, lr}
 80233a2:	4e0e      	ldr	r6, [pc, #56]	; (80233dc <sbrk_aligned+0x3c>)
 80233a4:	460c      	mov	r4, r1
 80233a6:	6831      	ldr	r1, [r6, #0]
 80233a8:	4605      	mov	r5, r0
 80233aa:	b911      	cbnz	r1, 80233b2 <sbrk_aligned+0x12>
 80233ac:	f000 fa4a 	bl	8023844 <_sbrk_r>
 80233b0:	6030      	str	r0, [r6, #0]
 80233b2:	4621      	mov	r1, r4
 80233b4:	4628      	mov	r0, r5
 80233b6:	f000 fa45 	bl	8023844 <_sbrk_r>
 80233ba:	1c43      	adds	r3, r0, #1
 80233bc:	d00a      	beq.n	80233d4 <sbrk_aligned+0x34>
 80233be:	1cc4      	adds	r4, r0, #3
 80233c0:	f024 0403 	bic.w	r4, r4, #3
 80233c4:	42a0      	cmp	r0, r4
 80233c6:	d007      	beq.n	80233d8 <sbrk_aligned+0x38>
 80233c8:	1a21      	subs	r1, r4, r0
 80233ca:	4628      	mov	r0, r5
 80233cc:	f000 fa3a 	bl	8023844 <_sbrk_r>
 80233d0:	3001      	adds	r0, #1
 80233d2:	d101      	bne.n	80233d8 <sbrk_aligned+0x38>
 80233d4:	f04f 34ff 	mov.w	r4, #4294967295
 80233d8:	4620      	mov	r0, r4
 80233da:	bd70      	pop	{r4, r5, r6, pc}
 80233dc:	20032d7c 	.word	0x20032d7c

080233e0 <_malloc_r>:
 80233e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80233e4:	1ccd      	adds	r5, r1, #3
 80233e6:	f025 0503 	bic.w	r5, r5, #3
 80233ea:	3508      	adds	r5, #8
 80233ec:	2d0c      	cmp	r5, #12
 80233ee:	bf38      	it	cc
 80233f0:	250c      	movcc	r5, #12
 80233f2:	2d00      	cmp	r5, #0
 80233f4:	4607      	mov	r7, r0
 80233f6:	db01      	blt.n	80233fc <_malloc_r+0x1c>
 80233f8:	42a9      	cmp	r1, r5
 80233fa:	d905      	bls.n	8023408 <_malloc_r+0x28>
 80233fc:	230c      	movs	r3, #12
 80233fe:	603b      	str	r3, [r7, #0]
 8023400:	2600      	movs	r6, #0
 8023402:	4630      	mov	r0, r6
 8023404:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023408:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80234dc <_malloc_r+0xfc>
 802340c:	f000 f868 	bl	80234e0 <__malloc_lock>
 8023410:	f8d8 3000 	ldr.w	r3, [r8]
 8023414:	461c      	mov	r4, r3
 8023416:	bb5c      	cbnz	r4, 8023470 <_malloc_r+0x90>
 8023418:	4629      	mov	r1, r5
 802341a:	4638      	mov	r0, r7
 802341c:	f7ff ffc0 	bl	80233a0 <sbrk_aligned>
 8023420:	1c43      	adds	r3, r0, #1
 8023422:	4604      	mov	r4, r0
 8023424:	d155      	bne.n	80234d2 <_malloc_r+0xf2>
 8023426:	f8d8 4000 	ldr.w	r4, [r8]
 802342a:	4626      	mov	r6, r4
 802342c:	2e00      	cmp	r6, #0
 802342e:	d145      	bne.n	80234bc <_malloc_r+0xdc>
 8023430:	2c00      	cmp	r4, #0
 8023432:	d048      	beq.n	80234c6 <_malloc_r+0xe6>
 8023434:	6823      	ldr	r3, [r4, #0]
 8023436:	4631      	mov	r1, r6
 8023438:	4638      	mov	r0, r7
 802343a:	eb04 0903 	add.w	r9, r4, r3
 802343e:	f000 fa01 	bl	8023844 <_sbrk_r>
 8023442:	4581      	cmp	r9, r0
 8023444:	d13f      	bne.n	80234c6 <_malloc_r+0xe6>
 8023446:	6821      	ldr	r1, [r4, #0]
 8023448:	1a6d      	subs	r5, r5, r1
 802344a:	4629      	mov	r1, r5
 802344c:	4638      	mov	r0, r7
 802344e:	f7ff ffa7 	bl	80233a0 <sbrk_aligned>
 8023452:	3001      	adds	r0, #1
 8023454:	d037      	beq.n	80234c6 <_malloc_r+0xe6>
 8023456:	6823      	ldr	r3, [r4, #0]
 8023458:	442b      	add	r3, r5
 802345a:	6023      	str	r3, [r4, #0]
 802345c:	f8d8 3000 	ldr.w	r3, [r8]
 8023460:	2b00      	cmp	r3, #0
 8023462:	d038      	beq.n	80234d6 <_malloc_r+0xf6>
 8023464:	685a      	ldr	r2, [r3, #4]
 8023466:	42a2      	cmp	r2, r4
 8023468:	d12b      	bne.n	80234c2 <_malloc_r+0xe2>
 802346a:	2200      	movs	r2, #0
 802346c:	605a      	str	r2, [r3, #4]
 802346e:	e00f      	b.n	8023490 <_malloc_r+0xb0>
 8023470:	6822      	ldr	r2, [r4, #0]
 8023472:	1b52      	subs	r2, r2, r5
 8023474:	d41f      	bmi.n	80234b6 <_malloc_r+0xd6>
 8023476:	2a0b      	cmp	r2, #11
 8023478:	d917      	bls.n	80234aa <_malloc_r+0xca>
 802347a:	1961      	adds	r1, r4, r5
 802347c:	42a3      	cmp	r3, r4
 802347e:	6025      	str	r5, [r4, #0]
 8023480:	bf18      	it	ne
 8023482:	6059      	strne	r1, [r3, #4]
 8023484:	6863      	ldr	r3, [r4, #4]
 8023486:	bf08      	it	eq
 8023488:	f8c8 1000 	streq.w	r1, [r8]
 802348c:	5162      	str	r2, [r4, r5]
 802348e:	604b      	str	r3, [r1, #4]
 8023490:	4638      	mov	r0, r7
 8023492:	f104 060b 	add.w	r6, r4, #11
 8023496:	f000 f829 	bl	80234ec <__malloc_unlock>
 802349a:	f026 0607 	bic.w	r6, r6, #7
 802349e:	1d23      	adds	r3, r4, #4
 80234a0:	1af2      	subs	r2, r6, r3
 80234a2:	d0ae      	beq.n	8023402 <_malloc_r+0x22>
 80234a4:	1b9b      	subs	r3, r3, r6
 80234a6:	50a3      	str	r3, [r4, r2]
 80234a8:	e7ab      	b.n	8023402 <_malloc_r+0x22>
 80234aa:	42a3      	cmp	r3, r4
 80234ac:	6862      	ldr	r2, [r4, #4]
 80234ae:	d1dd      	bne.n	802346c <_malloc_r+0x8c>
 80234b0:	f8c8 2000 	str.w	r2, [r8]
 80234b4:	e7ec      	b.n	8023490 <_malloc_r+0xb0>
 80234b6:	4623      	mov	r3, r4
 80234b8:	6864      	ldr	r4, [r4, #4]
 80234ba:	e7ac      	b.n	8023416 <_malloc_r+0x36>
 80234bc:	4634      	mov	r4, r6
 80234be:	6876      	ldr	r6, [r6, #4]
 80234c0:	e7b4      	b.n	802342c <_malloc_r+0x4c>
 80234c2:	4613      	mov	r3, r2
 80234c4:	e7cc      	b.n	8023460 <_malloc_r+0x80>
 80234c6:	230c      	movs	r3, #12
 80234c8:	603b      	str	r3, [r7, #0]
 80234ca:	4638      	mov	r0, r7
 80234cc:	f000 f80e 	bl	80234ec <__malloc_unlock>
 80234d0:	e797      	b.n	8023402 <_malloc_r+0x22>
 80234d2:	6025      	str	r5, [r4, #0]
 80234d4:	e7dc      	b.n	8023490 <_malloc_r+0xb0>
 80234d6:	605b      	str	r3, [r3, #4]
 80234d8:	deff      	udf	#255	; 0xff
 80234da:	bf00      	nop
 80234dc:	20032d78 	.word	0x20032d78

080234e0 <__malloc_lock>:
 80234e0:	4801      	ldr	r0, [pc, #4]	; (80234e8 <__malloc_lock+0x8>)
 80234e2:	f000 b9fc 	b.w	80238de <__retarget_lock_acquire_recursive>
 80234e6:	bf00      	nop
 80234e8:	20032ec1 	.word	0x20032ec1

080234ec <__malloc_unlock>:
 80234ec:	4801      	ldr	r0, [pc, #4]	; (80234f4 <__malloc_unlock+0x8>)
 80234ee:	f000 b9f7 	b.w	80238e0 <__retarget_lock_release_recursive>
 80234f2:	bf00      	nop
 80234f4:	20032ec1 	.word	0x20032ec1

080234f8 <__cxa_atexit>:
 80234f8:	b510      	push	{r4, lr}
 80234fa:	4c05      	ldr	r4, [pc, #20]	; (8023510 <__cxa_atexit+0x18>)
 80234fc:	4613      	mov	r3, r2
 80234fe:	b12c      	cbz	r4, 802350c <__cxa_atexit+0x14>
 8023500:	460a      	mov	r2, r1
 8023502:	4601      	mov	r1, r0
 8023504:	2002      	movs	r0, #2
 8023506:	f000 f9fb 	bl	8023900 <__register_exitproc>
 802350a:	bd10      	pop	{r4, pc}
 802350c:	4620      	mov	r0, r4
 802350e:	e7fc      	b.n	802350a <__cxa_atexit+0x12>
 8023510:	08023901 	.word	0x08023901

08023514 <std>:
 8023514:	2300      	movs	r3, #0
 8023516:	b510      	push	{r4, lr}
 8023518:	4604      	mov	r4, r0
 802351a:	e9c0 3300 	strd	r3, r3, [r0]
 802351e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8023522:	6083      	str	r3, [r0, #8]
 8023524:	8181      	strh	r1, [r0, #12]
 8023526:	6643      	str	r3, [r0, #100]	; 0x64
 8023528:	81c2      	strh	r2, [r0, #14]
 802352a:	6183      	str	r3, [r0, #24]
 802352c:	4619      	mov	r1, r3
 802352e:	2208      	movs	r2, #8
 8023530:	305c      	adds	r0, #92	; 0x5c
 8023532:	f000 f906 	bl	8023742 <memset>
 8023536:	4b0d      	ldr	r3, [pc, #52]	; (802356c <std+0x58>)
 8023538:	6263      	str	r3, [r4, #36]	; 0x24
 802353a:	4b0d      	ldr	r3, [pc, #52]	; (8023570 <std+0x5c>)
 802353c:	62a3      	str	r3, [r4, #40]	; 0x28
 802353e:	4b0d      	ldr	r3, [pc, #52]	; (8023574 <std+0x60>)
 8023540:	62e3      	str	r3, [r4, #44]	; 0x2c
 8023542:	4b0d      	ldr	r3, [pc, #52]	; (8023578 <std+0x64>)
 8023544:	6323      	str	r3, [r4, #48]	; 0x30
 8023546:	4b0d      	ldr	r3, [pc, #52]	; (802357c <std+0x68>)
 8023548:	6224      	str	r4, [r4, #32]
 802354a:	429c      	cmp	r4, r3
 802354c:	d006      	beq.n	802355c <std+0x48>
 802354e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8023552:	4294      	cmp	r4, r2
 8023554:	d002      	beq.n	802355c <std+0x48>
 8023556:	33d0      	adds	r3, #208	; 0xd0
 8023558:	429c      	cmp	r4, r3
 802355a:	d105      	bne.n	8023568 <std+0x54>
 802355c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8023560:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023564:	f000 b9ba 	b.w	80238dc <__retarget_lock_init_recursive>
 8023568:	bd10      	pop	{r4, pc}
 802356a:	bf00      	nop
 802356c:	080236bd 	.word	0x080236bd
 8023570:	080236df 	.word	0x080236df
 8023574:	08023717 	.word	0x08023717
 8023578:	0802373b 	.word	0x0802373b
 802357c:	20032d80 	.word	0x20032d80

08023580 <stdio_exit_handler>:
 8023580:	4a02      	ldr	r2, [pc, #8]	; (802358c <stdio_exit_handler+0xc>)
 8023582:	4903      	ldr	r1, [pc, #12]	; (8023590 <stdio_exit_handler+0x10>)
 8023584:	4803      	ldr	r0, [pc, #12]	; (8023594 <stdio_exit_handler+0x14>)
 8023586:	f000 b87b 	b.w	8023680 <_fwalk_sglue>
 802358a:	bf00      	nop
 802358c:	200000c0 	.word	0x200000c0
 8023590:	08024109 	.word	0x08024109
 8023594:	200000cc 	.word	0x200000cc

08023598 <cleanup_stdio>:
 8023598:	6841      	ldr	r1, [r0, #4]
 802359a:	4b0c      	ldr	r3, [pc, #48]	; (80235cc <cleanup_stdio+0x34>)
 802359c:	4299      	cmp	r1, r3
 802359e:	b510      	push	{r4, lr}
 80235a0:	4604      	mov	r4, r0
 80235a2:	d001      	beq.n	80235a8 <cleanup_stdio+0x10>
 80235a4:	f000 fdb0 	bl	8024108 <_fflush_r>
 80235a8:	68a1      	ldr	r1, [r4, #8]
 80235aa:	4b09      	ldr	r3, [pc, #36]	; (80235d0 <cleanup_stdio+0x38>)
 80235ac:	4299      	cmp	r1, r3
 80235ae:	d002      	beq.n	80235b6 <cleanup_stdio+0x1e>
 80235b0:	4620      	mov	r0, r4
 80235b2:	f000 fda9 	bl	8024108 <_fflush_r>
 80235b6:	68e1      	ldr	r1, [r4, #12]
 80235b8:	4b06      	ldr	r3, [pc, #24]	; (80235d4 <cleanup_stdio+0x3c>)
 80235ba:	4299      	cmp	r1, r3
 80235bc:	d004      	beq.n	80235c8 <cleanup_stdio+0x30>
 80235be:	4620      	mov	r0, r4
 80235c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80235c4:	f000 bda0 	b.w	8024108 <_fflush_r>
 80235c8:	bd10      	pop	{r4, pc}
 80235ca:	bf00      	nop
 80235cc:	20032d80 	.word	0x20032d80
 80235d0:	20032de8 	.word	0x20032de8
 80235d4:	20032e50 	.word	0x20032e50

080235d8 <global_stdio_init.part.0>:
 80235d8:	b510      	push	{r4, lr}
 80235da:	4b0b      	ldr	r3, [pc, #44]	; (8023608 <global_stdio_init.part.0+0x30>)
 80235dc:	4c0b      	ldr	r4, [pc, #44]	; (802360c <global_stdio_init.part.0+0x34>)
 80235de:	4a0c      	ldr	r2, [pc, #48]	; (8023610 <global_stdio_init.part.0+0x38>)
 80235e0:	601a      	str	r2, [r3, #0]
 80235e2:	4620      	mov	r0, r4
 80235e4:	2200      	movs	r2, #0
 80235e6:	2104      	movs	r1, #4
 80235e8:	f7ff ff94 	bl	8023514 <std>
 80235ec:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80235f0:	2201      	movs	r2, #1
 80235f2:	2109      	movs	r1, #9
 80235f4:	f7ff ff8e 	bl	8023514 <std>
 80235f8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80235fc:	2202      	movs	r2, #2
 80235fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023602:	2112      	movs	r1, #18
 8023604:	f7ff bf86 	b.w	8023514 <std>
 8023608:	20032eb8 	.word	0x20032eb8
 802360c:	20032d80 	.word	0x20032d80
 8023610:	08023581 	.word	0x08023581

08023614 <__sfp_lock_acquire>:
 8023614:	4801      	ldr	r0, [pc, #4]	; (802361c <__sfp_lock_acquire+0x8>)
 8023616:	f000 b962 	b.w	80238de <__retarget_lock_acquire_recursive>
 802361a:	bf00      	nop
 802361c:	20032ec2 	.word	0x20032ec2

08023620 <__sfp_lock_release>:
 8023620:	4801      	ldr	r0, [pc, #4]	; (8023628 <__sfp_lock_release+0x8>)
 8023622:	f000 b95d 	b.w	80238e0 <__retarget_lock_release_recursive>
 8023626:	bf00      	nop
 8023628:	20032ec2 	.word	0x20032ec2

0802362c <__sinit>:
 802362c:	b510      	push	{r4, lr}
 802362e:	4604      	mov	r4, r0
 8023630:	f7ff fff0 	bl	8023614 <__sfp_lock_acquire>
 8023634:	6a23      	ldr	r3, [r4, #32]
 8023636:	b11b      	cbz	r3, 8023640 <__sinit+0x14>
 8023638:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802363c:	f7ff bff0 	b.w	8023620 <__sfp_lock_release>
 8023640:	4b04      	ldr	r3, [pc, #16]	; (8023654 <__sinit+0x28>)
 8023642:	6223      	str	r3, [r4, #32]
 8023644:	4b04      	ldr	r3, [pc, #16]	; (8023658 <__sinit+0x2c>)
 8023646:	681b      	ldr	r3, [r3, #0]
 8023648:	2b00      	cmp	r3, #0
 802364a:	d1f5      	bne.n	8023638 <__sinit+0xc>
 802364c:	f7ff ffc4 	bl	80235d8 <global_stdio_init.part.0>
 8023650:	e7f2      	b.n	8023638 <__sinit+0xc>
 8023652:	bf00      	nop
 8023654:	08023599 	.word	0x08023599
 8023658:	20032eb8 	.word	0x20032eb8

0802365c <fiprintf>:
 802365c:	b40e      	push	{r1, r2, r3}
 802365e:	b503      	push	{r0, r1, lr}
 8023660:	4601      	mov	r1, r0
 8023662:	ab03      	add	r3, sp, #12
 8023664:	4805      	ldr	r0, [pc, #20]	; (802367c <fiprintf+0x20>)
 8023666:	f853 2b04 	ldr.w	r2, [r3], #4
 802366a:	6800      	ldr	r0, [r0, #0]
 802366c:	9301      	str	r3, [sp, #4]
 802366e:	f000 fa1b 	bl	8023aa8 <_vfiprintf_r>
 8023672:	b002      	add	sp, #8
 8023674:	f85d eb04 	ldr.w	lr, [sp], #4
 8023678:	b003      	add	sp, #12
 802367a:	4770      	bx	lr
 802367c:	20000118 	.word	0x20000118

08023680 <_fwalk_sglue>:
 8023680:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023684:	4607      	mov	r7, r0
 8023686:	4688      	mov	r8, r1
 8023688:	4614      	mov	r4, r2
 802368a:	2600      	movs	r6, #0
 802368c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8023690:	f1b9 0901 	subs.w	r9, r9, #1
 8023694:	d505      	bpl.n	80236a2 <_fwalk_sglue+0x22>
 8023696:	6824      	ldr	r4, [r4, #0]
 8023698:	2c00      	cmp	r4, #0
 802369a:	d1f7      	bne.n	802368c <_fwalk_sglue+0xc>
 802369c:	4630      	mov	r0, r6
 802369e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80236a2:	89ab      	ldrh	r3, [r5, #12]
 80236a4:	2b01      	cmp	r3, #1
 80236a6:	d907      	bls.n	80236b8 <_fwalk_sglue+0x38>
 80236a8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80236ac:	3301      	adds	r3, #1
 80236ae:	d003      	beq.n	80236b8 <_fwalk_sglue+0x38>
 80236b0:	4629      	mov	r1, r5
 80236b2:	4638      	mov	r0, r7
 80236b4:	47c0      	blx	r8
 80236b6:	4306      	orrs	r6, r0
 80236b8:	3568      	adds	r5, #104	; 0x68
 80236ba:	e7e9      	b.n	8023690 <_fwalk_sglue+0x10>

080236bc <__sread>:
 80236bc:	b510      	push	{r4, lr}
 80236be:	460c      	mov	r4, r1
 80236c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80236c4:	f000 f898 	bl	80237f8 <_read_r>
 80236c8:	2800      	cmp	r0, #0
 80236ca:	bfab      	itete	ge
 80236cc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80236ce:	89a3      	ldrhlt	r3, [r4, #12]
 80236d0:	181b      	addge	r3, r3, r0
 80236d2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80236d6:	bfac      	ite	ge
 80236d8:	6563      	strge	r3, [r4, #84]	; 0x54
 80236da:	81a3      	strhlt	r3, [r4, #12]
 80236dc:	bd10      	pop	{r4, pc}

080236de <__swrite>:
 80236de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80236e2:	461f      	mov	r7, r3
 80236e4:	898b      	ldrh	r3, [r1, #12]
 80236e6:	05db      	lsls	r3, r3, #23
 80236e8:	4605      	mov	r5, r0
 80236ea:	460c      	mov	r4, r1
 80236ec:	4616      	mov	r6, r2
 80236ee:	d505      	bpl.n	80236fc <__swrite+0x1e>
 80236f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80236f4:	2302      	movs	r3, #2
 80236f6:	2200      	movs	r2, #0
 80236f8:	f000 f86c 	bl	80237d4 <_lseek_r>
 80236fc:	89a3      	ldrh	r3, [r4, #12]
 80236fe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8023702:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8023706:	81a3      	strh	r3, [r4, #12]
 8023708:	4632      	mov	r2, r6
 802370a:	463b      	mov	r3, r7
 802370c:	4628      	mov	r0, r5
 802370e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8023712:	f000 b8a7 	b.w	8023864 <_write_r>

08023716 <__sseek>:
 8023716:	b510      	push	{r4, lr}
 8023718:	460c      	mov	r4, r1
 802371a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802371e:	f000 f859 	bl	80237d4 <_lseek_r>
 8023722:	1c43      	adds	r3, r0, #1
 8023724:	89a3      	ldrh	r3, [r4, #12]
 8023726:	bf15      	itete	ne
 8023728:	6560      	strne	r0, [r4, #84]	; 0x54
 802372a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802372e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8023732:	81a3      	strheq	r3, [r4, #12]
 8023734:	bf18      	it	ne
 8023736:	81a3      	strhne	r3, [r4, #12]
 8023738:	bd10      	pop	{r4, pc}

0802373a <__sclose>:
 802373a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802373e:	f000 b839 	b.w	80237b4 <_close_r>

08023742 <memset>:
 8023742:	4402      	add	r2, r0
 8023744:	4603      	mov	r3, r0
 8023746:	4293      	cmp	r3, r2
 8023748:	d100      	bne.n	802374c <memset+0xa>
 802374a:	4770      	bx	lr
 802374c:	f803 1b01 	strb.w	r1, [r3], #1
 8023750:	e7f9      	b.n	8023746 <memset+0x4>

08023752 <_raise_r>:
 8023752:	291f      	cmp	r1, #31
 8023754:	b538      	push	{r3, r4, r5, lr}
 8023756:	4604      	mov	r4, r0
 8023758:	460d      	mov	r5, r1
 802375a:	d904      	bls.n	8023766 <_raise_r+0x14>
 802375c:	2316      	movs	r3, #22
 802375e:	6003      	str	r3, [r0, #0]
 8023760:	f04f 30ff 	mov.w	r0, #4294967295
 8023764:	bd38      	pop	{r3, r4, r5, pc}
 8023766:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8023768:	b112      	cbz	r2, 8023770 <_raise_r+0x1e>
 802376a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802376e:	b94b      	cbnz	r3, 8023784 <_raise_r+0x32>
 8023770:	4620      	mov	r0, r4
 8023772:	f000 f865 	bl	8023840 <_getpid_r>
 8023776:	462a      	mov	r2, r5
 8023778:	4601      	mov	r1, r0
 802377a:	4620      	mov	r0, r4
 802377c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023780:	f000 b84c 	b.w	802381c <_kill_r>
 8023784:	2b01      	cmp	r3, #1
 8023786:	d00a      	beq.n	802379e <_raise_r+0x4c>
 8023788:	1c59      	adds	r1, r3, #1
 802378a:	d103      	bne.n	8023794 <_raise_r+0x42>
 802378c:	2316      	movs	r3, #22
 802378e:	6003      	str	r3, [r0, #0]
 8023790:	2001      	movs	r0, #1
 8023792:	e7e7      	b.n	8023764 <_raise_r+0x12>
 8023794:	2400      	movs	r4, #0
 8023796:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802379a:	4628      	mov	r0, r5
 802379c:	4798      	blx	r3
 802379e:	2000      	movs	r0, #0
 80237a0:	e7e0      	b.n	8023764 <_raise_r+0x12>
	...

080237a4 <raise>:
 80237a4:	4b02      	ldr	r3, [pc, #8]	; (80237b0 <raise+0xc>)
 80237a6:	4601      	mov	r1, r0
 80237a8:	6818      	ldr	r0, [r3, #0]
 80237aa:	f7ff bfd2 	b.w	8023752 <_raise_r>
 80237ae:	bf00      	nop
 80237b0:	20000118 	.word	0x20000118

080237b4 <_close_r>:
 80237b4:	b538      	push	{r3, r4, r5, lr}
 80237b6:	4d06      	ldr	r5, [pc, #24]	; (80237d0 <_close_r+0x1c>)
 80237b8:	2300      	movs	r3, #0
 80237ba:	4604      	mov	r4, r0
 80237bc:	4608      	mov	r0, r1
 80237be:	602b      	str	r3, [r5, #0]
 80237c0:	f7df fb41 	bl	8002e46 <_close>
 80237c4:	1c43      	adds	r3, r0, #1
 80237c6:	d102      	bne.n	80237ce <_close_r+0x1a>
 80237c8:	682b      	ldr	r3, [r5, #0]
 80237ca:	b103      	cbz	r3, 80237ce <_close_r+0x1a>
 80237cc:	6023      	str	r3, [r4, #0]
 80237ce:	bd38      	pop	{r3, r4, r5, pc}
 80237d0:	20032ebc 	.word	0x20032ebc

080237d4 <_lseek_r>:
 80237d4:	b538      	push	{r3, r4, r5, lr}
 80237d6:	4d07      	ldr	r5, [pc, #28]	; (80237f4 <_lseek_r+0x20>)
 80237d8:	4604      	mov	r4, r0
 80237da:	4608      	mov	r0, r1
 80237dc:	4611      	mov	r1, r2
 80237de:	2200      	movs	r2, #0
 80237e0:	602a      	str	r2, [r5, #0]
 80237e2:	461a      	mov	r2, r3
 80237e4:	f7df fb56 	bl	8002e94 <_lseek>
 80237e8:	1c43      	adds	r3, r0, #1
 80237ea:	d102      	bne.n	80237f2 <_lseek_r+0x1e>
 80237ec:	682b      	ldr	r3, [r5, #0]
 80237ee:	b103      	cbz	r3, 80237f2 <_lseek_r+0x1e>
 80237f0:	6023      	str	r3, [r4, #0]
 80237f2:	bd38      	pop	{r3, r4, r5, pc}
 80237f4:	20032ebc 	.word	0x20032ebc

080237f8 <_read_r>:
 80237f8:	b538      	push	{r3, r4, r5, lr}
 80237fa:	4d07      	ldr	r5, [pc, #28]	; (8023818 <_read_r+0x20>)
 80237fc:	4604      	mov	r4, r0
 80237fe:	4608      	mov	r0, r1
 8023800:	4611      	mov	r1, r2
 8023802:	2200      	movs	r2, #0
 8023804:	602a      	str	r2, [r5, #0]
 8023806:	461a      	mov	r2, r3
 8023808:	f7df fb00 	bl	8002e0c <_read>
 802380c:	1c43      	adds	r3, r0, #1
 802380e:	d102      	bne.n	8023816 <_read_r+0x1e>
 8023810:	682b      	ldr	r3, [r5, #0]
 8023812:	b103      	cbz	r3, 8023816 <_read_r+0x1e>
 8023814:	6023      	str	r3, [r4, #0]
 8023816:	bd38      	pop	{r3, r4, r5, pc}
 8023818:	20032ebc 	.word	0x20032ebc

0802381c <_kill_r>:
 802381c:	b538      	push	{r3, r4, r5, lr}
 802381e:	4d07      	ldr	r5, [pc, #28]	; (802383c <_kill_r+0x20>)
 8023820:	2300      	movs	r3, #0
 8023822:	4604      	mov	r4, r0
 8023824:	4608      	mov	r0, r1
 8023826:	4611      	mov	r1, r2
 8023828:	602b      	str	r3, [r5, #0]
 802382a:	f7df fad5 	bl	8002dd8 <_kill>
 802382e:	1c43      	adds	r3, r0, #1
 8023830:	d102      	bne.n	8023838 <_kill_r+0x1c>
 8023832:	682b      	ldr	r3, [r5, #0]
 8023834:	b103      	cbz	r3, 8023838 <_kill_r+0x1c>
 8023836:	6023      	str	r3, [r4, #0]
 8023838:	bd38      	pop	{r3, r4, r5, pc}
 802383a:	bf00      	nop
 802383c:	20032ebc 	.word	0x20032ebc

08023840 <_getpid_r>:
 8023840:	f7df bac2 	b.w	8002dc8 <_getpid>

08023844 <_sbrk_r>:
 8023844:	b538      	push	{r3, r4, r5, lr}
 8023846:	4d06      	ldr	r5, [pc, #24]	; (8023860 <_sbrk_r+0x1c>)
 8023848:	2300      	movs	r3, #0
 802384a:	4604      	mov	r4, r0
 802384c:	4608      	mov	r0, r1
 802384e:	602b      	str	r3, [r5, #0]
 8023850:	f7df fb2e 	bl	8002eb0 <_sbrk>
 8023854:	1c43      	adds	r3, r0, #1
 8023856:	d102      	bne.n	802385e <_sbrk_r+0x1a>
 8023858:	682b      	ldr	r3, [r5, #0]
 802385a:	b103      	cbz	r3, 802385e <_sbrk_r+0x1a>
 802385c:	6023      	str	r3, [r4, #0]
 802385e:	bd38      	pop	{r3, r4, r5, pc}
 8023860:	20032ebc 	.word	0x20032ebc

08023864 <_write_r>:
 8023864:	b538      	push	{r3, r4, r5, lr}
 8023866:	4d07      	ldr	r5, [pc, #28]	; (8023884 <_write_r+0x20>)
 8023868:	4604      	mov	r4, r0
 802386a:	4608      	mov	r0, r1
 802386c:	4611      	mov	r1, r2
 802386e:	2200      	movs	r2, #0
 8023870:	602a      	str	r2, [r5, #0]
 8023872:	461a      	mov	r2, r3
 8023874:	f7de f88b 	bl	800198e <_write>
 8023878:	1c43      	adds	r3, r0, #1
 802387a:	d102      	bne.n	8023882 <_write_r+0x1e>
 802387c:	682b      	ldr	r3, [r5, #0]
 802387e:	b103      	cbz	r3, 8023882 <_write_r+0x1e>
 8023880:	6023      	str	r3, [r4, #0]
 8023882:	bd38      	pop	{r3, r4, r5, pc}
 8023884:	20032ebc 	.word	0x20032ebc

08023888 <__errno>:
 8023888:	4b01      	ldr	r3, [pc, #4]	; (8023890 <__errno+0x8>)
 802388a:	6818      	ldr	r0, [r3, #0]
 802388c:	4770      	bx	lr
 802388e:	bf00      	nop
 8023890:	20000118 	.word	0x20000118

08023894 <__libc_init_array>:
 8023894:	b570      	push	{r4, r5, r6, lr}
 8023896:	4d0d      	ldr	r5, [pc, #52]	; (80238cc <__libc_init_array+0x38>)
 8023898:	4c0d      	ldr	r4, [pc, #52]	; (80238d0 <__libc_init_array+0x3c>)
 802389a:	1b64      	subs	r4, r4, r5
 802389c:	10a4      	asrs	r4, r4, #2
 802389e:	2600      	movs	r6, #0
 80238a0:	42a6      	cmp	r6, r4
 80238a2:	d109      	bne.n	80238b8 <__libc_init_array+0x24>
 80238a4:	4d0b      	ldr	r5, [pc, #44]	; (80238d4 <__libc_init_array+0x40>)
 80238a6:	4c0c      	ldr	r4, [pc, #48]	; (80238d8 <__libc_init_array+0x44>)
 80238a8:	f000 fd70 	bl	802438c <_init>
 80238ac:	1b64      	subs	r4, r4, r5
 80238ae:	10a4      	asrs	r4, r4, #2
 80238b0:	2600      	movs	r6, #0
 80238b2:	42a6      	cmp	r6, r4
 80238b4:	d105      	bne.n	80238c2 <__libc_init_array+0x2e>
 80238b6:	bd70      	pop	{r4, r5, r6, pc}
 80238b8:	f855 3b04 	ldr.w	r3, [r5], #4
 80238bc:	4798      	blx	r3
 80238be:	3601      	adds	r6, #1
 80238c0:	e7ee      	b.n	80238a0 <__libc_init_array+0xc>
 80238c2:	f855 3b04 	ldr.w	r3, [r5], #4
 80238c6:	4798      	blx	r3
 80238c8:	3601      	adds	r6, #1
 80238ca:	e7f2      	b.n	80238b2 <__libc_init_array+0x1e>
 80238cc:	08027844 	.word	0x08027844
 80238d0:	08027844 	.word	0x08027844
 80238d4:	08027844 	.word	0x08027844
 80238d8:	0802785c 	.word	0x0802785c

080238dc <__retarget_lock_init_recursive>:
 80238dc:	4770      	bx	lr

080238de <__retarget_lock_acquire_recursive>:
 80238de:	4770      	bx	lr

080238e0 <__retarget_lock_release_recursive>:
 80238e0:	4770      	bx	lr

080238e2 <memcpy>:
 80238e2:	440a      	add	r2, r1
 80238e4:	4291      	cmp	r1, r2
 80238e6:	f100 33ff 	add.w	r3, r0, #4294967295
 80238ea:	d100      	bne.n	80238ee <memcpy+0xc>
 80238ec:	4770      	bx	lr
 80238ee:	b510      	push	{r4, lr}
 80238f0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80238f4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80238f8:	4291      	cmp	r1, r2
 80238fa:	d1f9      	bne.n	80238f0 <memcpy+0xe>
 80238fc:	bd10      	pop	{r4, pc}
	...

08023900 <__register_exitproc>:
 8023900:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023904:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80239b8 <__register_exitproc+0xb8>
 8023908:	4606      	mov	r6, r0
 802390a:	f8d8 0000 	ldr.w	r0, [r8]
 802390e:	461f      	mov	r7, r3
 8023910:	460d      	mov	r5, r1
 8023912:	4691      	mov	r9, r2
 8023914:	f7ff ffe3 	bl	80238de <__retarget_lock_acquire_recursive>
 8023918:	4b23      	ldr	r3, [pc, #140]	; (80239a8 <__register_exitproc+0xa8>)
 802391a:	681c      	ldr	r4, [r3, #0]
 802391c:	b934      	cbnz	r4, 802392c <__register_exitproc+0x2c>
 802391e:	4c23      	ldr	r4, [pc, #140]	; (80239ac <__register_exitproc+0xac>)
 8023920:	601c      	str	r4, [r3, #0]
 8023922:	4b23      	ldr	r3, [pc, #140]	; (80239b0 <__register_exitproc+0xb0>)
 8023924:	b113      	cbz	r3, 802392c <__register_exitproc+0x2c>
 8023926:	681b      	ldr	r3, [r3, #0]
 8023928:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802392c:	6863      	ldr	r3, [r4, #4]
 802392e:	2b1f      	cmp	r3, #31
 8023930:	dd07      	ble.n	8023942 <__register_exitproc+0x42>
 8023932:	f8d8 0000 	ldr.w	r0, [r8]
 8023936:	f7ff ffd3 	bl	80238e0 <__retarget_lock_release_recursive>
 802393a:	f04f 30ff 	mov.w	r0, #4294967295
 802393e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023942:	b32e      	cbz	r6, 8023990 <__register_exitproc+0x90>
 8023944:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8023948:	b968      	cbnz	r0, 8023966 <__register_exitproc+0x66>
 802394a:	4b1a      	ldr	r3, [pc, #104]	; (80239b4 <__register_exitproc+0xb4>)
 802394c:	2b00      	cmp	r3, #0
 802394e:	d0f0      	beq.n	8023932 <__register_exitproc+0x32>
 8023950:	f44f 7084 	mov.w	r0, #264	; 0x108
 8023954:	f7ff fd14 	bl	8023380 <malloc>
 8023958:	2800      	cmp	r0, #0
 802395a:	d0ea      	beq.n	8023932 <__register_exitproc+0x32>
 802395c:	2300      	movs	r3, #0
 802395e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8023962:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8023966:	6863      	ldr	r3, [r4, #4]
 8023968:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802396c:	2201      	movs	r2, #1
 802396e:	409a      	lsls	r2, r3
 8023970:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8023974:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8023978:	4313      	orrs	r3, r2
 802397a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802397e:	2e02      	cmp	r6, #2
 8023980:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8023984:	bf02      	ittt	eq
 8023986:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802398a:	4313      	orreq	r3, r2
 802398c:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8023990:	6863      	ldr	r3, [r4, #4]
 8023992:	f8d8 0000 	ldr.w	r0, [r8]
 8023996:	1c5a      	adds	r2, r3, #1
 8023998:	3302      	adds	r3, #2
 802399a:	6062      	str	r2, [r4, #4]
 802399c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80239a0:	f7ff ff9e 	bl	80238e0 <__retarget_lock_release_recursive>
 80239a4:	2000      	movs	r0, #0
 80239a6:	e7ca      	b.n	802393e <__register_exitproc+0x3e>
 80239a8:	20032f50 	.word	0x20032f50
 80239ac:	20032ec4 	.word	0x20032ec4
 80239b0:	08026bcc 	.word	0x08026bcc
 80239b4:	08023381 	.word	0x08023381
 80239b8:	2000011c 	.word	0x2000011c

080239bc <_free_r>:
 80239bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80239be:	2900      	cmp	r1, #0
 80239c0:	d044      	beq.n	8023a4c <_free_r+0x90>
 80239c2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80239c6:	9001      	str	r0, [sp, #4]
 80239c8:	2b00      	cmp	r3, #0
 80239ca:	f1a1 0404 	sub.w	r4, r1, #4
 80239ce:	bfb8      	it	lt
 80239d0:	18e4      	addlt	r4, r4, r3
 80239d2:	f7ff fd85 	bl	80234e0 <__malloc_lock>
 80239d6:	4a1e      	ldr	r2, [pc, #120]	; (8023a50 <_free_r+0x94>)
 80239d8:	9801      	ldr	r0, [sp, #4]
 80239da:	6813      	ldr	r3, [r2, #0]
 80239dc:	b933      	cbnz	r3, 80239ec <_free_r+0x30>
 80239de:	6063      	str	r3, [r4, #4]
 80239e0:	6014      	str	r4, [r2, #0]
 80239e2:	b003      	add	sp, #12
 80239e4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80239e8:	f7ff bd80 	b.w	80234ec <__malloc_unlock>
 80239ec:	42a3      	cmp	r3, r4
 80239ee:	d908      	bls.n	8023a02 <_free_r+0x46>
 80239f0:	6825      	ldr	r5, [r4, #0]
 80239f2:	1961      	adds	r1, r4, r5
 80239f4:	428b      	cmp	r3, r1
 80239f6:	bf01      	itttt	eq
 80239f8:	6819      	ldreq	r1, [r3, #0]
 80239fa:	685b      	ldreq	r3, [r3, #4]
 80239fc:	1949      	addeq	r1, r1, r5
 80239fe:	6021      	streq	r1, [r4, #0]
 8023a00:	e7ed      	b.n	80239de <_free_r+0x22>
 8023a02:	461a      	mov	r2, r3
 8023a04:	685b      	ldr	r3, [r3, #4]
 8023a06:	b10b      	cbz	r3, 8023a0c <_free_r+0x50>
 8023a08:	42a3      	cmp	r3, r4
 8023a0a:	d9fa      	bls.n	8023a02 <_free_r+0x46>
 8023a0c:	6811      	ldr	r1, [r2, #0]
 8023a0e:	1855      	adds	r5, r2, r1
 8023a10:	42a5      	cmp	r5, r4
 8023a12:	d10b      	bne.n	8023a2c <_free_r+0x70>
 8023a14:	6824      	ldr	r4, [r4, #0]
 8023a16:	4421      	add	r1, r4
 8023a18:	1854      	adds	r4, r2, r1
 8023a1a:	42a3      	cmp	r3, r4
 8023a1c:	6011      	str	r1, [r2, #0]
 8023a1e:	d1e0      	bne.n	80239e2 <_free_r+0x26>
 8023a20:	681c      	ldr	r4, [r3, #0]
 8023a22:	685b      	ldr	r3, [r3, #4]
 8023a24:	6053      	str	r3, [r2, #4]
 8023a26:	440c      	add	r4, r1
 8023a28:	6014      	str	r4, [r2, #0]
 8023a2a:	e7da      	b.n	80239e2 <_free_r+0x26>
 8023a2c:	d902      	bls.n	8023a34 <_free_r+0x78>
 8023a2e:	230c      	movs	r3, #12
 8023a30:	6003      	str	r3, [r0, #0]
 8023a32:	e7d6      	b.n	80239e2 <_free_r+0x26>
 8023a34:	6825      	ldr	r5, [r4, #0]
 8023a36:	1961      	adds	r1, r4, r5
 8023a38:	428b      	cmp	r3, r1
 8023a3a:	bf04      	itt	eq
 8023a3c:	6819      	ldreq	r1, [r3, #0]
 8023a3e:	685b      	ldreq	r3, [r3, #4]
 8023a40:	6063      	str	r3, [r4, #4]
 8023a42:	bf04      	itt	eq
 8023a44:	1949      	addeq	r1, r1, r5
 8023a46:	6021      	streq	r1, [r4, #0]
 8023a48:	6054      	str	r4, [r2, #4]
 8023a4a:	e7ca      	b.n	80239e2 <_free_r+0x26>
 8023a4c:	b003      	add	sp, #12
 8023a4e:	bd30      	pop	{r4, r5, pc}
 8023a50:	20032d78 	.word	0x20032d78

08023a54 <__sfputc_r>:
 8023a54:	6893      	ldr	r3, [r2, #8]
 8023a56:	3b01      	subs	r3, #1
 8023a58:	2b00      	cmp	r3, #0
 8023a5a:	b410      	push	{r4}
 8023a5c:	6093      	str	r3, [r2, #8]
 8023a5e:	da08      	bge.n	8023a72 <__sfputc_r+0x1e>
 8023a60:	6994      	ldr	r4, [r2, #24]
 8023a62:	42a3      	cmp	r3, r4
 8023a64:	db01      	blt.n	8023a6a <__sfputc_r+0x16>
 8023a66:	290a      	cmp	r1, #10
 8023a68:	d103      	bne.n	8023a72 <__sfputc_r+0x1e>
 8023a6a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023a6e:	f000 bb73 	b.w	8024158 <__swbuf_r>
 8023a72:	6813      	ldr	r3, [r2, #0]
 8023a74:	1c58      	adds	r0, r3, #1
 8023a76:	6010      	str	r0, [r2, #0]
 8023a78:	7019      	strb	r1, [r3, #0]
 8023a7a:	4608      	mov	r0, r1
 8023a7c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023a80:	4770      	bx	lr

08023a82 <__sfputs_r>:
 8023a82:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023a84:	4606      	mov	r6, r0
 8023a86:	460f      	mov	r7, r1
 8023a88:	4614      	mov	r4, r2
 8023a8a:	18d5      	adds	r5, r2, r3
 8023a8c:	42ac      	cmp	r4, r5
 8023a8e:	d101      	bne.n	8023a94 <__sfputs_r+0x12>
 8023a90:	2000      	movs	r0, #0
 8023a92:	e007      	b.n	8023aa4 <__sfputs_r+0x22>
 8023a94:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023a98:	463a      	mov	r2, r7
 8023a9a:	4630      	mov	r0, r6
 8023a9c:	f7ff ffda 	bl	8023a54 <__sfputc_r>
 8023aa0:	1c43      	adds	r3, r0, #1
 8023aa2:	d1f3      	bne.n	8023a8c <__sfputs_r+0xa>
 8023aa4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08023aa8 <_vfiprintf_r>:
 8023aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023aac:	460d      	mov	r5, r1
 8023aae:	b09d      	sub	sp, #116	; 0x74
 8023ab0:	4614      	mov	r4, r2
 8023ab2:	4698      	mov	r8, r3
 8023ab4:	4606      	mov	r6, r0
 8023ab6:	b118      	cbz	r0, 8023ac0 <_vfiprintf_r+0x18>
 8023ab8:	6a03      	ldr	r3, [r0, #32]
 8023aba:	b90b      	cbnz	r3, 8023ac0 <_vfiprintf_r+0x18>
 8023abc:	f7ff fdb6 	bl	802362c <__sinit>
 8023ac0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8023ac2:	07d9      	lsls	r1, r3, #31
 8023ac4:	d405      	bmi.n	8023ad2 <_vfiprintf_r+0x2a>
 8023ac6:	89ab      	ldrh	r3, [r5, #12]
 8023ac8:	059a      	lsls	r2, r3, #22
 8023aca:	d402      	bmi.n	8023ad2 <_vfiprintf_r+0x2a>
 8023acc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023ace:	f7ff ff06 	bl	80238de <__retarget_lock_acquire_recursive>
 8023ad2:	89ab      	ldrh	r3, [r5, #12]
 8023ad4:	071b      	lsls	r3, r3, #28
 8023ad6:	d501      	bpl.n	8023adc <_vfiprintf_r+0x34>
 8023ad8:	692b      	ldr	r3, [r5, #16]
 8023ada:	b99b      	cbnz	r3, 8023b04 <_vfiprintf_r+0x5c>
 8023adc:	4629      	mov	r1, r5
 8023ade:	4630      	mov	r0, r6
 8023ae0:	f000 fb78 	bl	80241d4 <__swsetup_r>
 8023ae4:	b170      	cbz	r0, 8023b04 <_vfiprintf_r+0x5c>
 8023ae6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8023ae8:	07dc      	lsls	r4, r3, #31
 8023aea:	d504      	bpl.n	8023af6 <_vfiprintf_r+0x4e>
 8023aec:	f04f 30ff 	mov.w	r0, #4294967295
 8023af0:	b01d      	add	sp, #116	; 0x74
 8023af2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023af6:	89ab      	ldrh	r3, [r5, #12]
 8023af8:	0598      	lsls	r0, r3, #22
 8023afa:	d4f7      	bmi.n	8023aec <_vfiprintf_r+0x44>
 8023afc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023afe:	f7ff feef 	bl	80238e0 <__retarget_lock_release_recursive>
 8023b02:	e7f3      	b.n	8023aec <_vfiprintf_r+0x44>
 8023b04:	2300      	movs	r3, #0
 8023b06:	9309      	str	r3, [sp, #36]	; 0x24
 8023b08:	2320      	movs	r3, #32
 8023b0a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8023b0e:	f8cd 800c 	str.w	r8, [sp, #12]
 8023b12:	2330      	movs	r3, #48	; 0x30
 8023b14:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8023cc8 <_vfiprintf_r+0x220>
 8023b18:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8023b1c:	f04f 0901 	mov.w	r9, #1
 8023b20:	4623      	mov	r3, r4
 8023b22:	469a      	mov	sl, r3
 8023b24:	f813 2b01 	ldrb.w	r2, [r3], #1
 8023b28:	b10a      	cbz	r2, 8023b2e <_vfiprintf_r+0x86>
 8023b2a:	2a25      	cmp	r2, #37	; 0x25
 8023b2c:	d1f9      	bne.n	8023b22 <_vfiprintf_r+0x7a>
 8023b2e:	ebba 0b04 	subs.w	fp, sl, r4
 8023b32:	d00b      	beq.n	8023b4c <_vfiprintf_r+0xa4>
 8023b34:	465b      	mov	r3, fp
 8023b36:	4622      	mov	r2, r4
 8023b38:	4629      	mov	r1, r5
 8023b3a:	4630      	mov	r0, r6
 8023b3c:	f7ff ffa1 	bl	8023a82 <__sfputs_r>
 8023b40:	3001      	adds	r0, #1
 8023b42:	f000 80a9 	beq.w	8023c98 <_vfiprintf_r+0x1f0>
 8023b46:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023b48:	445a      	add	r2, fp
 8023b4a:	9209      	str	r2, [sp, #36]	; 0x24
 8023b4c:	f89a 3000 	ldrb.w	r3, [sl]
 8023b50:	2b00      	cmp	r3, #0
 8023b52:	f000 80a1 	beq.w	8023c98 <_vfiprintf_r+0x1f0>
 8023b56:	2300      	movs	r3, #0
 8023b58:	f04f 32ff 	mov.w	r2, #4294967295
 8023b5c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8023b60:	f10a 0a01 	add.w	sl, sl, #1
 8023b64:	9304      	str	r3, [sp, #16]
 8023b66:	9307      	str	r3, [sp, #28]
 8023b68:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8023b6c:	931a      	str	r3, [sp, #104]	; 0x68
 8023b6e:	4654      	mov	r4, sl
 8023b70:	2205      	movs	r2, #5
 8023b72:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023b76:	4854      	ldr	r0, [pc, #336]	; (8023cc8 <_vfiprintf_r+0x220>)
 8023b78:	f7dc fb4a 	bl	8000210 <memchr>
 8023b7c:	9a04      	ldr	r2, [sp, #16]
 8023b7e:	b9d8      	cbnz	r0, 8023bb8 <_vfiprintf_r+0x110>
 8023b80:	06d1      	lsls	r1, r2, #27
 8023b82:	bf44      	itt	mi
 8023b84:	2320      	movmi	r3, #32
 8023b86:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023b8a:	0713      	lsls	r3, r2, #28
 8023b8c:	bf44      	itt	mi
 8023b8e:	232b      	movmi	r3, #43	; 0x2b
 8023b90:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023b94:	f89a 3000 	ldrb.w	r3, [sl]
 8023b98:	2b2a      	cmp	r3, #42	; 0x2a
 8023b9a:	d015      	beq.n	8023bc8 <_vfiprintf_r+0x120>
 8023b9c:	9a07      	ldr	r2, [sp, #28]
 8023b9e:	4654      	mov	r4, sl
 8023ba0:	2000      	movs	r0, #0
 8023ba2:	f04f 0c0a 	mov.w	ip, #10
 8023ba6:	4621      	mov	r1, r4
 8023ba8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023bac:	3b30      	subs	r3, #48	; 0x30
 8023bae:	2b09      	cmp	r3, #9
 8023bb0:	d94d      	bls.n	8023c4e <_vfiprintf_r+0x1a6>
 8023bb2:	b1b0      	cbz	r0, 8023be2 <_vfiprintf_r+0x13a>
 8023bb4:	9207      	str	r2, [sp, #28]
 8023bb6:	e014      	b.n	8023be2 <_vfiprintf_r+0x13a>
 8023bb8:	eba0 0308 	sub.w	r3, r0, r8
 8023bbc:	fa09 f303 	lsl.w	r3, r9, r3
 8023bc0:	4313      	orrs	r3, r2
 8023bc2:	9304      	str	r3, [sp, #16]
 8023bc4:	46a2      	mov	sl, r4
 8023bc6:	e7d2      	b.n	8023b6e <_vfiprintf_r+0xc6>
 8023bc8:	9b03      	ldr	r3, [sp, #12]
 8023bca:	1d19      	adds	r1, r3, #4
 8023bcc:	681b      	ldr	r3, [r3, #0]
 8023bce:	9103      	str	r1, [sp, #12]
 8023bd0:	2b00      	cmp	r3, #0
 8023bd2:	bfbb      	ittet	lt
 8023bd4:	425b      	neglt	r3, r3
 8023bd6:	f042 0202 	orrlt.w	r2, r2, #2
 8023bda:	9307      	strge	r3, [sp, #28]
 8023bdc:	9307      	strlt	r3, [sp, #28]
 8023bde:	bfb8      	it	lt
 8023be0:	9204      	strlt	r2, [sp, #16]
 8023be2:	7823      	ldrb	r3, [r4, #0]
 8023be4:	2b2e      	cmp	r3, #46	; 0x2e
 8023be6:	d10c      	bne.n	8023c02 <_vfiprintf_r+0x15a>
 8023be8:	7863      	ldrb	r3, [r4, #1]
 8023bea:	2b2a      	cmp	r3, #42	; 0x2a
 8023bec:	d134      	bne.n	8023c58 <_vfiprintf_r+0x1b0>
 8023bee:	9b03      	ldr	r3, [sp, #12]
 8023bf0:	1d1a      	adds	r2, r3, #4
 8023bf2:	681b      	ldr	r3, [r3, #0]
 8023bf4:	9203      	str	r2, [sp, #12]
 8023bf6:	2b00      	cmp	r3, #0
 8023bf8:	bfb8      	it	lt
 8023bfa:	f04f 33ff 	movlt.w	r3, #4294967295
 8023bfe:	3402      	adds	r4, #2
 8023c00:	9305      	str	r3, [sp, #20]
 8023c02:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8023cd8 <_vfiprintf_r+0x230>
 8023c06:	7821      	ldrb	r1, [r4, #0]
 8023c08:	2203      	movs	r2, #3
 8023c0a:	4650      	mov	r0, sl
 8023c0c:	f7dc fb00 	bl	8000210 <memchr>
 8023c10:	b138      	cbz	r0, 8023c22 <_vfiprintf_r+0x17a>
 8023c12:	9b04      	ldr	r3, [sp, #16]
 8023c14:	eba0 000a 	sub.w	r0, r0, sl
 8023c18:	2240      	movs	r2, #64	; 0x40
 8023c1a:	4082      	lsls	r2, r0
 8023c1c:	4313      	orrs	r3, r2
 8023c1e:	3401      	adds	r4, #1
 8023c20:	9304      	str	r3, [sp, #16]
 8023c22:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023c26:	4829      	ldr	r0, [pc, #164]	; (8023ccc <_vfiprintf_r+0x224>)
 8023c28:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8023c2c:	2206      	movs	r2, #6
 8023c2e:	f7dc faef 	bl	8000210 <memchr>
 8023c32:	2800      	cmp	r0, #0
 8023c34:	d03f      	beq.n	8023cb6 <_vfiprintf_r+0x20e>
 8023c36:	4b26      	ldr	r3, [pc, #152]	; (8023cd0 <_vfiprintf_r+0x228>)
 8023c38:	bb1b      	cbnz	r3, 8023c82 <_vfiprintf_r+0x1da>
 8023c3a:	9b03      	ldr	r3, [sp, #12]
 8023c3c:	3307      	adds	r3, #7
 8023c3e:	f023 0307 	bic.w	r3, r3, #7
 8023c42:	3308      	adds	r3, #8
 8023c44:	9303      	str	r3, [sp, #12]
 8023c46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023c48:	443b      	add	r3, r7
 8023c4a:	9309      	str	r3, [sp, #36]	; 0x24
 8023c4c:	e768      	b.n	8023b20 <_vfiprintf_r+0x78>
 8023c4e:	fb0c 3202 	mla	r2, ip, r2, r3
 8023c52:	460c      	mov	r4, r1
 8023c54:	2001      	movs	r0, #1
 8023c56:	e7a6      	b.n	8023ba6 <_vfiprintf_r+0xfe>
 8023c58:	2300      	movs	r3, #0
 8023c5a:	3401      	adds	r4, #1
 8023c5c:	9305      	str	r3, [sp, #20]
 8023c5e:	4619      	mov	r1, r3
 8023c60:	f04f 0c0a 	mov.w	ip, #10
 8023c64:	4620      	mov	r0, r4
 8023c66:	f810 2b01 	ldrb.w	r2, [r0], #1
 8023c6a:	3a30      	subs	r2, #48	; 0x30
 8023c6c:	2a09      	cmp	r2, #9
 8023c6e:	d903      	bls.n	8023c78 <_vfiprintf_r+0x1d0>
 8023c70:	2b00      	cmp	r3, #0
 8023c72:	d0c6      	beq.n	8023c02 <_vfiprintf_r+0x15a>
 8023c74:	9105      	str	r1, [sp, #20]
 8023c76:	e7c4      	b.n	8023c02 <_vfiprintf_r+0x15a>
 8023c78:	fb0c 2101 	mla	r1, ip, r1, r2
 8023c7c:	4604      	mov	r4, r0
 8023c7e:	2301      	movs	r3, #1
 8023c80:	e7f0      	b.n	8023c64 <_vfiprintf_r+0x1bc>
 8023c82:	ab03      	add	r3, sp, #12
 8023c84:	9300      	str	r3, [sp, #0]
 8023c86:	462a      	mov	r2, r5
 8023c88:	4b12      	ldr	r3, [pc, #72]	; (8023cd4 <_vfiprintf_r+0x22c>)
 8023c8a:	a904      	add	r1, sp, #16
 8023c8c:	4630      	mov	r0, r6
 8023c8e:	f3af 8000 	nop.w
 8023c92:	4607      	mov	r7, r0
 8023c94:	1c78      	adds	r0, r7, #1
 8023c96:	d1d6      	bne.n	8023c46 <_vfiprintf_r+0x19e>
 8023c98:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8023c9a:	07d9      	lsls	r1, r3, #31
 8023c9c:	d405      	bmi.n	8023caa <_vfiprintf_r+0x202>
 8023c9e:	89ab      	ldrh	r3, [r5, #12]
 8023ca0:	059a      	lsls	r2, r3, #22
 8023ca2:	d402      	bmi.n	8023caa <_vfiprintf_r+0x202>
 8023ca4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023ca6:	f7ff fe1b 	bl	80238e0 <__retarget_lock_release_recursive>
 8023caa:	89ab      	ldrh	r3, [r5, #12]
 8023cac:	065b      	lsls	r3, r3, #25
 8023cae:	f53f af1d 	bmi.w	8023aec <_vfiprintf_r+0x44>
 8023cb2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023cb4:	e71c      	b.n	8023af0 <_vfiprintf_r+0x48>
 8023cb6:	ab03      	add	r3, sp, #12
 8023cb8:	9300      	str	r3, [sp, #0]
 8023cba:	462a      	mov	r2, r5
 8023cbc:	4b05      	ldr	r3, [pc, #20]	; (8023cd4 <_vfiprintf_r+0x22c>)
 8023cbe:	a904      	add	r1, sp, #16
 8023cc0:	4630      	mov	r0, r6
 8023cc2:	f000 f879 	bl	8023db8 <_printf_i>
 8023cc6:	e7e4      	b.n	8023c92 <_vfiprintf_r+0x1ea>
 8023cc8:	08026bd0 	.word	0x08026bd0
 8023ccc:	08026bda 	.word	0x08026bda
 8023cd0:	00000000 	.word	0x00000000
 8023cd4:	08023a83 	.word	0x08023a83
 8023cd8:	08026bd6 	.word	0x08026bd6

08023cdc <_printf_common>:
 8023cdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023ce0:	4616      	mov	r6, r2
 8023ce2:	4699      	mov	r9, r3
 8023ce4:	688a      	ldr	r2, [r1, #8]
 8023ce6:	690b      	ldr	r3, [r1, #16]
 8023ce8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8023cec:	4293      	cmp	r3, r2
 8023cee:	bfb8      	it	lt
 8023cf0:	4613      	movlt	r3, r2
 8023cf2:	6033      	str	r3, [r6, #0]
 8023cf4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8023cf8:	4607      	mov	r7, r0
 8023cfa:	460c      	mov	r4, r1
 8023cfc:	b10a      	cbz	r2, 8023d02 <_printf_common+0x26>
 8023cfe:	3301      	adds	r3, #1
 8023d00:	6033      	str	r3, [r6, #0]
 8023d02:	6823      	ldr	r3, [r4, #0]
 8023d04:	0699      	lsls	r1, r3, #26
 8023d06:	bf42      	ittt	mi
 8023d08:	6833      	ldrmi	r3, [r6, #0]
 8023d0a:	3302      	addmi	r3, #2
 8023d0c:	6033      	strmi	r3, [r6, #0]
 8023d0e:	6825      	ldr	r5, [r4, #0]
 8023d10:	f015 0506 	ands.w	r5, r5, #6
 8023d14:	d106      	bne.n	8023d24 <_printf_common+0x48>
 8023d16:	f104 0a19 	add.w	sl, r4, #25
 8023d1a:	68e3      	ldr	r3, [r4, #12]
 8023d1c:	6832      	ldr	r2, [r6, #0]
 8023d1e:	1a9b      	subs	r3, r3, r2
 8023d20:	42ab      	cmp	r3, r5
 8023d22:	dc26      	bgt.n	8023d72 <_printf_common+0x96>
 8023d24:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8023d28:	1e13      	subs	r3, r2, #0
 8023d2a:	6822      	ldr	r2, [r4, #0]
 8023d2c:	bf18      	it	ne
 8023d2e:	2301      	movne	r3, #1
 8023d30:	0692      	lsls	r2, r2, #26
 8023d32:	d42b      	bmi.n	8023d8c <_printf_common+0xb0>
 8023d34:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8023d38:	4649      	mov	r1, r9
 8023d3a:	4638      	mov	r0, r7
 8023d3c:	47c0      	blx	r8
 8023d3e:	3001      	adds	r0, #1
 8023d40:	d01e      	beq.n	8023d80 <_printf_common+0xa4>
 8023d42:	6823      	ldr	r3, [r4, #0]
 8023d44:	6922      	ldr	r2, [r4, #16]
 8023d46:	f003 0306 	and.w	r3, r3, #6
 8023d4a:	2b04      	cmp	r3, #4
 8023d4c:	bf02      	ittt	eq
 8023d4e:	68e5      	ldreq	r5, [r4, #12]
 8023d50:	6833      	ldreq	r3, [r6, #0]
 8023d52:	1aed      	subeq	r5, r5, r3
 8023d54:	68a3      	ldr	r3, [r4, #8]
 8023d56:	bf0c      	ite	eq
 8023d58:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8023d5c:	2500      	movne	r5, #0
 8023d5e:	4293      	cmp	r3, r2
 8023d60:	bfc4      	itt	gt
 8023d62:	1a9b      	subgt	r3, r3, r2
 8023d64:	18ed      	addgt	r5, r5, r3
 8023d66:	2600      	movs	r6, #0
 8023d68:	341a      	adds	r4, #26
 8023d6a:	42b5      	cmp	r5, r6
 8023d6c:	d11a      	bne.n	8023da4 <_printf_common+0xc8>
 8023d6e:	2000      	movs	r0, #0
 8023d70:	e008      	b.n	8023d84 <_printf_common+0xa8>
 8023d72:	2301      	movs	r3, #1
 8023d74:	4652      	mov	r2, sl
 8023d76:	4649      	mov	r1, r9
 8023d78:	4638      	mov	r0, r7
 8023d7a:	47c0      	blx	r8
 8023d7c:	3001      	adds	r0, #1
 8023d7e:	d103      	bne.n	8023d88 <_printf_common+0xac>
 8023d80:	f04f 30ff 	mov.w	r0, #4294967295
 8023d84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023d88:	3501      	adds	r5, #1
 8023d8a:	e7c6      	b.n	8023d1a <_printf_common+0x3e>
 8023d8c:	18e1      	adds	r1, r4, r3
 8023d8e:	1c5a      	adds	r2, r3, #1
 8023d90:	2030      	movs	r0, #48	; 0x30
 8023d92:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8023d96:	4422      	add	r2, r4
 8023d98:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8023d9c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8023da0:	3302      	adds	r3, #2
 8023da2:	e7c7      	b.n	8023d34 <_printf_common+0x58>
 8023da4:	2301      	movs	r3, #1
 8023da6:	4622      	mov	r2, r4
 8023da8:	4649      	mov	r1, r9
 8023daa:	4638      	mov	r0, r7
 8023dac:	47c0      	blx	r8
 8023dae:	3001      	adds	r0, #1
 8023db0:	d0e6      	beq.n	8023d80 <_printf_common+0xa4>
 8023db2:	3601      	adds	r6, #1
 8023db4:	e7d9      	b.n	8023d6a <_printf_common+0x8e>
	...

08023db8 <_printf_i>:
 8023db8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8023dbc:	7e0f      	ldrb	r7, [r1, #24]
 8023dbe:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023dc0:	2f78      	cmp	r7, #120	; 0x78
 8023dc2:	4691      	mov	r9, r2
 8023dc4:	4680      	mov	r8, r0
 8023dc6:	460c      	mov	r4, r1
 8023dc8:	469a      	mov	sl, r3
 8023dca:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8023dce:	d807      	bhi.n	8023de0 <_printf_i+0x28>
 8023dd0:	2f62      	cmp	r7, #98	; 0x62
 8023dd2:	d80a      	bhi.n	8023dea <_printf_i+0x32>
 8023dd4:	2f00      	cmp	r7, #0
 8023dd6:	f000 80d4 	beq.w	8023f82 <_printf_i+0x1ca>
 8023dda:	2f58      	cmp	r7, #88	; 0x58
 8023ddc:	f000 80c0 	beq.w	8023f60 <_printf_i+0x1a8>
 8023de0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8023de4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8023de8:	e03a      	b.n	8023e60 <_printf_i+0xa8>
 8023dea:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8023dee:	2b15      	cmp	r3, #21
 8023df0:	d8f6      	bhi.n	8023de0 <_printf_i+0x28>
 8023df2:	a101      	add	r1, pc, #4	; (adr r1, 8023df8 <_printf_i+0x40>)
 8023df4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8023df8:	08023e51 	.word	0x08023e51
 8023dfc:	08023e65 	.word	0x08023e65
 8023e00:	08023de1 	.word	0x08023de1
 8023e04:	08023de1 	.word	0x08023de1
 8023e08:	08023de1 	.word	0x08023de1
 8023e0c:	08023de1 	.word	0x08023de1
 8023e10:	08023e65 	.word	0x08023e65
 8023e14:	08023de1 	.word	0x08023de1
 8023e18:	08023de1 	.word	0x08023de1
 8023e1c:	08023de1 	.word	0x08023de1
 8023e20:	08023de1 	.word	0x08023de1
 8023e24:	08023f69 	.word	0x08023f69
 8023e28:	08023e91 	.word	0x08023e91
 8023e2c:	08023f23 	.word	0x08023f23
 8023e30:	08023de1 	.word	0x08023de1
 8023e34:	08023de1 	.word	0x08023de1
 8023e38:	08023f8b 	.word	0x08023f8b
 8023e3c:	08023de1 	.word	0x08023de1
 8023e40:	08023e91 	.word	0x08023e91
 8023e44:	08023de1 	.word	0x08023de1
 8023e48:	08023de1 	.word	0x08023de1
 8023e4c:	08023f2b 	.word	0x08023f2b
 8023e50:	682b      	ldr	r3, [r5, #0]
 8023e52:	1d1a      	adds	r2, r3, #4
 8023e54:	681b      	ldr	r3, [r3, #0]
 8023e56:	602a      	str	r2, [r5, #0]
 8023e58:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8023e5c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8023e60:	2301      	movs	r3, #1
 8023e62:	e09f      	b.n	8023fa4 <_printf_i+0x1ec>
 8023e64:	6820      	ldr	r0, [r4, #0]
 8023e66:	682b      	ldr	r3, [r5, #0]
 8023e68:	0607      	lsls	r7, r0, #24
 8023e6a:	f103 0104 	add.w	r1, r3, #4
 8023e6e:	6029      	str	r1, [r5, #0]
 8023e70:	d501      	bpl.n	8023e76 <_printf_i+0xbe>
 8023e72:	681e      	ldr	r6, [r3, #0]
 8023e74:	e003      	b.n	8023e7e <_printf_i+0xc6>
 8023e76:	0646      	lsls	r6, r0, #25
 8023e78:	d5fb      	bpl.n	8023e72 <_printf_i+0xba>
 8023e7a:	f9b3 6000 	ldrsh.w	r6, [r3]
 8023e7e:	2e00      	cmp	r6, #0
 8023e80:	da03      	bge.n	8023e8a <_printf_i+0xd2>
 8023e82:	232d      	movs	r3, #45	; 0x2d
 8023e84:	4276      	negs	r6, r6
 8023e86:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8023e8a:	485a      	ldr	r0, [pc, #360]	; (8023ff4 <_printf_i+0x23c>)
 8023e8c:	230a      	movs	r3, #10
 8023e8e:	e012      	b.n	8023eb6 <_printf_i+0xfe>
 8023e90:	682b      	ldr	r3, [r5, #0]
 8023e92:	6820      	ldr	r0, [r4, #0]
 8023e94:	1d19      	adds	r1, r3, #4
 8023e96:	6029      	str	r1, [r5, #0]
 8023e98:	0605      	lsls	r5, r0, #24
 8023e9a:	d501      	bpl.n	8023ea0 <_printf_i+0xe8>
 8023e9c:	681e      	ldr	r6, [r3, #0]
 8023e9e:	e002      	b.n	8023ea6 <_printf_i+0xee>
 8023ea0:	0641      	lsls	r1, r0, #25
 8023ea2:	d5fb      	bpl.n	8023e9c <_printf_i+0xe4>
 8023ea4:	881e      	ldrh	r6, [r3, #0]
 8023ea6:	4853      	ldr	r0, [pc, #332]	; (8023ff4 <_printf_i+0x23c>)
 8023ea8:	2f6f      	cmp	r7, #111	; 0x6f
 8023eaa:	bf0c      	ite	eq
 8023eac:	2308      	moveq	r3, #8
 8023eae:	230a      	movne	r3, #10
 8023eb0:	2100      	movs	r1, #0
 8023eb2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8023eb6:	6865      	ldr	r5, [r4, #4]
 8023eb8:	60a5      	str	r5, [r4, #8]
 8023eba:	2d00      	cmp	r5, #0
 8023ebc:	bfa2      	ittt	ge
 8023ebe:	6821      	ldrge	r1, [r4, #0]
 8023ec0:	f021 0104 	bicge.w	r1, r1, #4
 8023ec4:	6021      	strge	r1, [r4, #0]
 8023ec6:	b90e      	cbnz	r6, 8023ecc <_printf_i+0x114>
 8023ec8:	2d00      	cmp	r5, #0
 8023eca:	d04b      	beq.n	8023f64 <_printf_i+0x1ac>
 8023ecc:	4615      	mov	r5, r2
 8023ece:	fbb6 f1f3 	udiv	r1, r6, r3
 8023ed2:	fb03 6711 	mls	r7, r3, r1, r6
 8023ed6:	5dc7      	ldrb	r7, [r0, r7]
 8023ed8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8023edc:	4637      	mov	r7, r6
 8023ede:	42bb      	cmp	r3, r7
 8023ee0:	460e      	mov	r6, r1
 8023ee2:	d9f4      	bls.n	8023ece <_printf_i+0x116>
 8023ee4:	2b08      	cmp	r3, #8
 8023ee6:	d10b      	bne.n	8023f00 <_printf_i+0x148>
 8023ee8:	6823      	ldr	r3, [r4, #0]
 8023eea:	07de      	lsls	r6, r3, #31
 8023eec:	d508      	bpl.n	8023f00 <_printf_i+0x148>
 8023eee:	6923      	ldr	r3, [r4, #16]
 8023ef0:	6861      	ldr	r1, [r4, #4]
 8023ef2:	4299      	cmp	r1, r3
 8023ef4:	bfde      	ittt	le
 8023ef6:	2330      	movle	r3, #48	; 0x30
 8023ef8:	f805 3c01 	strble.w	r3, [r5, #-1]
 8023efc:	f105 35ff 	addle.w	r5, r5, #4294967295
 8023f00:	1b52      	subs	r2, r2, r5
 8023f02:	6122      	str	r2, [r4, #16]
 8023f04:	f8cd a000 	str.w	sl, [sp]
 8023f08:	464b      	mov	r3, r9
 8023f0a:	aa03      	add	r2, sp, #12
 8023f0c:	4621      	mov	r1, r4
 8023f0e:	4640      	mov	r0, r8
 8023f10:	f7ff fee4 	bl	8023cdc <_printf_common>
 8023f14:	3001      	adds	r0, #1
 8023f16:	d14a      	bne.n	8023fae <_printf_i+0x1f6>
 8023f18:	f04f 30ff 	mov.w	r0, #4294967295
 8023f1c:	b004      	add	sp, #16
 8023f1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023f22:	6823      	ldr	r3, [r4, #0]
 8023f24:	f043 0320 	orr.w	r3, r3, #32
 8023f28:	6023      	str	r3, [r4, #0]
 8023f2a:	4833      	ldr	r0, [pc, #204]	; (8023ff8 <_printf_i+0x240>)
 8023f2c:	2778      	movs	r7, #120	; 0x78
 8023f2e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8023f32:	6823      	ldr	r3, [r4, #0]
 8023f34:	6829      	ldr	r1, [r5, #0]
 8023f36:	061f      	lsls	r7, r3, #24
 8023f38:	f851 6b04 	ldr.w	r6, [r1], #4
 8023f3c:	d402      	bmi.n	8023f44 <_printf_i+0x18c>
 8023f3e:	065f      	lsls	r7, r3, #25
 8023f40:	bf48      	it	mi
 8023f42:	b2b6      	uxthmi	r6, r6
 8023f44:	07df      	lsls	r7, r3, #31
 8023f46:	bf48      	it	mi
 8023f48:	f043 0320 	orrmi.w	r3, r3, #32
 8023f4c:	6029      	str	r1, [r5, #0]
 8023f4e:	bf48      	it	mi
 8023f50:	6023      	strmi	r3, [r4, #0]
 8023f52:	b91e      	cbnz	r6, 8023f5c <_printf_i+0x1a4>
 8023f54:	6823      	ldr	r3, [r4, #0]
 8023f56:	f023 0320 	bic.w	r3, r3, #32
 8023f5a:	6023      	str	r3, [r4, #0]
 8023f5c:	2310      	movs	r3, #16
 8023f5e:	e7a7      	b.n	8023eb0 <_printf_i+0xf8>
 8023f60:	4824      	ldr	r0, [pc, #144]	; (8023ff4 <_printf_i+0x23c>)
 8023f62:	e7e4      	b.n	8023f2e <_printf_i+0x176>
 8023f64:	4615      	mov	r5, r2
 8023f66:	e7bd      	b.n	8023ee4 <_printf_i+0x12c>
 8023f68:	682b      	ldr	r3, [r5, #0]
 8023f6a:	6826      	ldr	r6, [r4, #0]
 8023f6c:	6961      	ldr	r1, [r4, #20]
 8023f6e:	1d18      	adds	r0, r3, #4
 8023f70:	6028      	str	r0, [r5, #0]
 8023f72:	0635      	lsls	r5, r6, #24
 8023f74:	681b      	ldr	r3, [r3, #0]
 8023f76:	d501      	bpl.n	8023f7c <_printf_i+0x1c4>
 8023f78:	6019      	str	r1, [r3, #0]
 8023f7a:	e002      	b.n	8023f82 <_printf_i+0x1ca>
 8023f7c:	0670      	lsls	r0, r6, #25
 8023f7e:	d5fb      	bpl.n	8023f78 <_printf_i+0x1c0>
 8023f80:	8019      	strh	r1, [r3, #0]
 8023f82:	2300      	movs	r3, #0
 8023f84:	6123      	str	r3, [r4, #16]
 8023f86:	4615      	mov	r5, r2
 8023f88:	e7bc      	b.n	8023f04 <_printf_i+0x14c>
 8023f8a:	682b      	ldr	r3, [r5, #0]
 8023f8c:	1d1a      	adds	r2, r3, #4
 8023f8e:	602a      	str	r2, [r5, #0]
 8023f90:	681d      	ldr	r5, [r3, #0]
 8023f92:	6862      	ldr	r2, [r4, #4]
 8023f94:	2100      	movs	r1, #0
 8023f96:	4628      	mov	r0, r5
 8023f98:	f7dc f93a 	bl	8000210 <memchr>
 8023f9c:	b108      	cbz	r0, 8023fa2 <_printf_i+0x1ea>
 8023f9e:	1b40      	subs	r0, r0, r5
 8023fa0:	6060      	str	r0, [r4, #4]
 8023fa2:	6863      	ldr	r3, [r4, #4]
 8023fa4:	6123      	str	r3, [r4, #16]
 8023fa6:	2300      	movs	r3, #0
 8023fa8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8023fac:	e7aa      	b.n	8023f04 <_printf_i+0x14c>
 8023fae:	6923      	ldr	r3, [r4, #16]
 8023fb0:	462a      	mov	r2, r5
 8023fb2:	4649      	mov	r1, r9
 8023fb4:	4640      	mov	r0, r8
 8023fb6:	47d0      	blx	sl
 8023fb8:	3001      	adds	r0, #1
 8023fba:	d0ad      	beq.n	8023f18 <_printf_i+0x160>
 8023fbc:	6823      	ldr	r3, [r4, #0]
 8023fbe:	079b      	lsls	r3, r3, #30
 8023fc0:	d413      	bmi.n	8023fea <_printf_i+0x232>
 8023fc2:	68e0      	ldr	r0, [r4, #12]
 8023fc4:	9b03      	ldr	r3, [sp, #12]
 8023fc6:	4298      	cmp	r0, r3
 8023fc8:	bfb8      	it	lt
 8023fca:	4618      	movlt	r0, r3
 8023fcc:	e7a6      	b.n	8023f1c <_printf_i+0x164>
 8023fce:	2301      	movs	r3, #1
 8023fd0:	4632      	mov	r2, r6
 8023fd2:	4649      	mov	r1, r9
 8023fd4:	4640      	mov	r0, r8
 8023fd6:	47d0      	blx	sl
 8023fd8:	3001      	adds	r0, #1
 8023fda:	d09d      	beq.n	8023f18 <_printf_i+0x160>
 8023fdc:	3501      	adds	r5, #1
 8023fde:	68e3      	ldr	r3, [r4, #12]
 8023fe0:	9903      	ldr	r1, [sp, #12]
 8023fe2:	1a5b      	subs	r3, r3, r1
 8023fe4:	42ab      	cmp	r3, r5
 8023fe6:	dcf2      	bgt.n	8023fce <_printf_i+0x216>
 8023fe8:	e7eb      	b.n	8023fc2 <_printf_i+0x20a>
 8023fea:	2500      	movs	r5, #0
 8023fec:	f104 0619 	add.w	r6, r4, #25
 8023ff0:	e7f5      	b.n	8023fde <_printf_i+0x226>
 8023ff2:	bf00      	nop
 8023ff4:	08026be1 	.word	0x08026be1
 8023ff8:	08026bf2 	.word	0x08026bf2

08023ffc <__sflush_r>:
 8023ffc:	898a      	ldrh	r2, [r1, #12]
 8023ffe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024002:	4605      	mov	r5, r0
 8024004:	0710      	lsls	r0, r2, #28
 8024006:	460c      	mov	r4, r1
 8024008:	d458      	bmi.n	80240bc <__sflush_r+0xc0>
 802400a:	684b      	ldr	r3, [r1, #4]
 802400c:	2b00      	cmp	r3, #0
 802400e:	dc05      	bgt.n	802401c <__sflush_r+0x20>
 8024010:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8024012:	2b00      	cmp	r3, #0
 8024014:	dc02      	bgt.n	802401c <__sflush_r+0x20>
 8024016:	2000      	movs	r0, #0
 8024018:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802401c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802401e:	2e00      	cmp	r6, #0
 8024020:	d0f9      	beq.n	8024016 <__sflush_r+0x1a>
 8024022:	2300      	movs	r3, #0
 8024024:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8024028:	682f      	ldr	r7, [r5, #0]
 802402a:	6a21      	ldr	r1, [r4, #32]
 802402c:	602b      	str	r3, [r5, #0]
 802402e:	d032      	beq.n	8024096 <__sflush_r+0x9a>
 8024030:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8024032:	89a3      	ldrh	r3, [r4, #12]
 8024034:	075a      	lsls	r2, r3, #29
 8024036:	d505      	bpl.n	8024044 <__sflush_r+0x48>
 8024038:	6863      	ldr	r3, [r4, #4]
 802403a:	1ac0      	subs	r0, r0, r3
 802403c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802403e:	b10b      	cbz	r3, 8024044 <__sflush_r+0x48>
 8024040:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8024042:	1ac0      	subs	r0, r0, r3
 8024044:	2300      	movs	r3, #0
 8024046:	4602      	mov	r2, r0
 8024048:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802404a:	6a21      	ldr	r1, [r4, #32]
 802404c:	4628      	mov	r0, r5
 802404e:	47b0      	blx	r6
 8024050:	1c43      	adds	r3, r0, #1
 8024052:	89a3      	ldrh	r3, [r4, #12]
 8024054:	d106      	bne.n	8024064 <__sflush_r+0x68>
 8024056:	6829      	ldr	r1, [r5, #0]
 8024058:	291d      	cmp	r1, #29
 802405a:	d82b      	bhi.n	80240b4 <__sflush_r+0xb8>
 802405c:	4a29      	ldr	r2, [pc, #164]	; (8024104 <__sflush_r+0x108>)
 802405e:	410a      	asrs	r2, r1
 8024060:	07d6      	lsls	r6, r2, #31
 8024062:	d427      	bmi.n	80240b4 <__sflush_r+0xb8>
 8024064:	2200      	movs	r2, #0
 8024066:	6062      	str	r2, [r4, #4]
 8024068:	04d9      	lsls	r1, r3, #19
 802406a:	6922      	ldr	r2, [r4, #16]
 802406c:	6022      	str	r2, [r4, #0]
 802406e:	d504      	bpl.n	802407a <__sflush_r+0x7e>
 8024070:	1c42      	adds	r2, r0, #1
 8024072:	d101      	bne.n	8024078 <__sflush_r+0x7c>
 8024074:	682b      	ldr	r3, [r5, #0]
 8024076:	b903      	cbnz	r3, 802407a <__sflush_r+0x7e>
 8024078:	6560      	str	r0, [r4, #84]	; 0x54
 802407a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802407c:	602f      	str	r7, [r5, #0]
 802407e:	2900      	cmp	r1, #0
 8024080:	d0c9      	beq.n	8024016 <__sflush_r+0x1a>
 8024082:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8024086:	4299      	cmp	r1, r3
 8024088:	d002      	beq.n	8024090 <__sflush_r+0x94>
 802408a:	4628      	mov	r0, r5
 802408c:	f7ff fc96 	bl	80239bc <_free_r>
 8024090:	2000      	movs	r0, #0
 8024092:	6360      	str	r0, [r4, #52]	; 0x34
 8024094:	e7c0      	b.n	8024018 <__sflush_r+0x1c>
 8024096:	2301      	movs	r3, #1
 8024098:	4628      	mov	r0, r5
 802409a:	47b0      	blx	r6
 802409c:	1c41      	adds	r1, r0, #1
 802409e:	d1c8      	bne.n	8024032 <__sflush_r+0x36>
 80240a0:	682b      	ldr	r3, [r5, #0]
 80240a2:	2b00      	cmp	r3, #0
 80240a4:	d0c5      	beq.n	8024032 <__sflush_r+0x36>
 80240a6:	2b1d      	cmp	r3, #29
 80240a8:	d001      	beq.n	80240ae <__sflush_r+0xb2>
 80240aa:	2b16      	cmp	r3, #22
 80240ac:	d101      	bne.n	80240b2 <__sflush_r+0xb6>
 80240ae:	602f      	str	r7, [r5, #0]
 80240b0:	e7b1      	b.n	8024016 <__sflush_r+0x1a>
 80240b2:	89a3      	ldrh	r3, [r4, #12]
 80240b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80240b8:	81a3      	strh	r3, [r4, #12]
 80240ba:	e7ad      	b.n	8024018 <__sflush_r+0x1c>
 80240bc:	690f      	ldr	r7, [r1, #16]
 80240be:	2f00      	cmp	r7, #0
 80240c0:	d0a9      	beq.n	8024016 <__sflush_r+0x1a>
 80240c2:	0793      	lsls	r3, r2, #30
 80240c4:	680e      	ldr	r6, [r1, #0]
 80240c6:	bf08      	it	eq
 80240c8:	694b      	ldreq	r3, [r1, #20]
 80240ca:	600f      	str	r7, [r1, #0]
 80240cc:	bf18      	it	ne
 80240ce:	2300      	movne	r3, #0
 80240d0:	eba6 0807 	sub.w	r8, r6, r7
 80240d4:	608b      	str	r3, [r1, #8]
 80240d6:	f1b8 0f00 	cmp.w	r8, #0
 80240da:	dd9c      	ble.n	8024016 <__sflush_r+0x1a>
 80240dc:	6a21      	ldr	r1, [r4, #32]
 80240de:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80240e0:	4643      	mov	r3, r8
 80240e2:	463a      	mov	r2, r7
 80240e4:	4628      	mov	r0, r5
 80240e6:	47b0      	blx	r6
 80240e8:	2800      	cmp	r0, #0
 80240ea:	dc06      	bgt.n	80240fa <__sflush_r+0xfe>
 80240ec:	89a3      	ldrh	r3, [r4, #12]
 80240ee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80240f2:	81a3      	strh	r3, [r4, #12]
 80240f4:	f04f 30ff 	mov.w	r0, #4294967295
 80240f8:	e78e      	b.n	8024018 <__sflush_r+0x1c>
 80240fa:	4407      	add	r7, r0
 80240fc:	eba8 0800 	sub.w	r8, r8, r0
 8024100:	e7e9      	b.n	80240d6 <__sflush_r+0xda>
 8024102:	bf00      	nop
 8024104:	dfbffffe 	.word	0xdfbffffe

08024108 <_fflush_r>:
 8024108:	b538      	push	{r3, r4, r5, lr}
 802410a:	690b      	ldr	r3, [r1, #16]
 802410c:	4605      	mov	r5, r0
 802410e:	460c      	mov	r4, r1
 8024110:	b913      	cbnz	r3, 8024118 <_fflush_r+0x10>
 8024112:	2500      	movs	r5, #0
 8024114:	4628      	mov	r0, r5
 8024116:	bd38      	pop	{r3, r4, r5, pc}
 8024118:	b118      	cbz	r0, 8024122 <_fflush_r+0x1a>
 802411a:	6a03      	ldr	r3, [r0, #32]
 802411c:	b90b      	cbnz	r3, 8024122 <_fflush_r+0x1a>
 802411e:	f7ff fa85 	bl	802362c <__sinit>
 8024122:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024126:	2b00      	cmp	r3, #0
 8024128:	d0f3      	beq.n	8024112 <_fflush_r+0xa>
 802412a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802412c:	07d0      	lsls	r0, r2, #31
 802412e:	d404      	bmi.n	802413a <_fflush_r+0x32>
 8024130:	0599      	lsls	r1, r3, #22
 8024132:	d402      	bmi.n	802413a <_fflush_r+0x32>
 8024134:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8024136:	f7ff fbd2 	bl	80238de <__retarget_lock_acquire_recursive>
 802413a:	4628      	mov	r0, r5
 802413c:	4621      	mov	r1, r4
 802413e:	f7ff ff5d 	bl	8023ffc <__sflush_r>
 8024142:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8024144:	07da      	lsls	r2, r3, #31
 8024146:	4605      	mov	r5, r0
 8024148:	d4e4      	bmi.n	8024114 <_fflush_r+0xc>
 802414a:	89a3      	ldrh	r3, [r4, #12]
 802414c:	059b      	lsls	r3, r3, #22
 802414e:	d4e1      	bmi.n	8024114 <_fflush_r+0xc>
 8024150:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8024152:	f7ff fbc5 	bl	80238e0 <__retarget_lock_release_recursive>
 8024156:	e7dd      	b.n	8024114 <_fflush_r+0xc>

08024158 <__swbuf_r>:
 8024158:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802415a:	460e      	mov	r6, r1
 802415c:	4614      	mov	r4, r2
 802415e:	4605      	mov	r5, r0
 8024160:	b118      	cbz	r0, 802416a <__swbuf_r+0x12>
 8024162:	6a03      	ldr	r3, [r0, #32]
 8024164:	b90b      	cbnz	r3, 802416a <__swbuf_r+0x12>
 8024166:	f7ff fa61 	bl	802362c <__sinit>
 802416a:	69a3      	ldr	r3, [r4, #24]
 802416c:	60a3      	str	r3, [r4, #8]
 802416e:	89a3      	ldrh	r3, [r4, #12]
 8024170:	071a      	lsls	r2, r3, #28
 8024172:	d525      	bpl.n	80241c0 <__swbuf_r+0x68>
 8024174:	6923      	ldr	r3, [r4, #16]
 8024176:	b31b      	cbz	r3, 80241c0 <__swbuf_r+0x68>
 8024178:	6823      	ldr	r3, [r4, #0]
 802417a:	6922      	ldr	r2, [r4, #16]
 802417c:	1a98      	subs	r0, r3, r2
 802417e:	6963      	ldr	r3, [r4, #20]
 8024180:	b2f6      	uxtb	r6, r6
 8024182:	4283      	cmp	r3, r0
 8024184:	4637      	mov	r7, r6
 8024186:	dc04      	bgt.n	8024192 <__swbuf_r+0x3a>
 8024188:	4621      	mov	r1, r4
 802418a:	4628      	mov	r0, r5
 802418c:	f7ff ffbc 	bl	8024108 <_fflush_r>
 8024190:	b9e0      	cbnz	r0, 80241cc <__swbuf_r+0x74>
 8024192:	68a3      	ldr	r3, [r4, #8]
 8024194:	3b01      	subs	r3, #1
 8024196:	60a3      	str	r3, [r4, #8]
 8024198:	6823      	ldr	r3, [r4, #0]
 802419a:	1c5a      	adds	r2, r3, #1
 802419c:	6022      	str	r2, [r4, #0]
 802419e:	701e      	strb	r6, [r3, #0]
 80241a0:	6962      	ldr	r2, [r4, #20]
 80241a2:	1c43      	adds	r3, r0, #1
 80241a4:	429a      	cmp	r2, r3
 80241a6:	d004      	beq.n	80241b2 <__swbuf_r+0x5a>
 80241a8:	89a3      	ldrh	r3, [r4, #12]
 80241aa:	07db      	lsls	r3, r3, #31
 80241ac:	d506      	bpl.n	80241bc <__swbuf_r+0x64>
 80241ae:	2e0a      	cmp	r6, #10
 80241b0:	d104      	bne.n	80241bc <__swbuf_r+0x64>
 80241b2:	4621      	mov	r1, r4
 80241b4:	4628      	mov	r0, r5
 80241b6:	f7ff ffa7 	bl	8024108 <_fflush_r>
 80241ba:	b938      	cbnz	r0, 80241cc <__swbuf_r+0x74>
 80241bc:	4638      	mov	r0, r7
 80241be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80241c0:	4621      	mov	r1, r4
 80241c2:	4628      	mov	r0, r5
 80241c4:	f000 f806 	bl	80241d4 <__swsetup_r>
 80241c8:	2800      	cmp	r0, #0
 80241ca:	d0d5      	beq.n	8024178 <__swbuf_r+0x20>
 80241cc:	f04f 37ff 	mov.w	r7, #4294967295
 80241d0:	e7f4      	b.n	80241bc <__swbuf_r+0x64>
	...

080241d4 <__swsetup_r>:
 80241d4:	b538      	push	{r3, r4, r5, lr}
 80241d6:	4b2a      	ldr	r3, [pc, #168]	; (8024280 <__swsetup_r+0xac>)
 80241d8:	4605      	mov	r5, r0
 80241da:	6818      	ldr	r0, [r3, #0]
 80241dc:	460c      	mov	r4, r1
 80241de:	b118      	cbz	r0, 80241e8 <__swsetup_r+0x14>
 80241e0:	6a03      	ldr	r3, [r0, #32]
 80241e2:	b90b      	cbnz	r3, 80241e8 <__swsetup_r+0x14>
 80241e4:	f7ff fa22 	bl	802362c <__sinit>
 80241e8:	89a3      	ldrh	r3, [r4, #12]
 80241ea:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80241ee:	0718      	lsls	r0, r3, #28
 80241f0:	d422      	bmi.n	8024238 <__swsetup_r+0x64>
 80241f2:	06d9      	lsls	r1, r3, #27
 80241f4:	d407      	bmi.n	8024206 <__swsetup_r+0x32>
 80241f6:	2309      	movs	r3, #9
 80241f8:	602b      	str	r3, [r5, #0]
 80241fa:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80241fe:	81a3      	strh	r3, [r4, #12]
 8024200:	f04f 30ff 	mov.w	r0, #4294967295
 8024204:	e034      	b.n	8024270 <__swsetup_r+0x9c>
 8024206:	0758      	lsls	r0, r3, #29
 8024208:	d512      	bpl.n	8024230 <__swsetup_r+0x5c>
 802420a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802420c:	b141      	cbz	r1, 8024220 <__swsetup_r+0x4c>
 802420e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8024212:	4299      	cmp	r1, r3
 8024214:	d002      	beq.n	802421c <__swsetup_r+0x48>
 8024216:	4628      	mov	r0, r5
 8024218:	f7ff fbd0 	bl	80239bc <_free_r>
 802421c:	2300      	movs	r3, #0
 802421e:	6363      	str	r3, [r4, #52]	; 0x34
 8024220:	89a3      	ldrh	r3, [r4, #12]
 8024222:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8024226:	81a3      	strh	r3, [r4, #12]
 8024228:	2300      	movs	r3, #0
 802422a:	6063      	str	r3, [r4, #4]
 802422c:	6923      	ldr	r3, [r4, #16]
 802422e:	6023      	str	r3, [r4, #0]
 8024230:	89a3      	ldrh	r3, [r4, #12]
 8024232:	f043 0308 	orr.w	r3, r3, #8
 8024236:	81a3      	strh	r3, [r4, #12]
 8024238:	6923      	ldr	r3, [r4, #16]
 802423a:	b94b      	cbnz	r3, 8024250 <__swsetup_r+0x7c>
 802423c:	89a3      	ldrh	r3, [r4, #12]
 802423e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8024242:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8024246:	d003      	beq.n	8024250 <__swsetup_r+0x7c>
 8024248:	4621      	mov	r1, r4
 802424a:	4628      	mov	r0, r5
 802424c:	f000 f840 	bl	80242d0 <__smakebuf_r>
 8024250:	89a0      	ldrh	r0, [r4, #12]
 8024252:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8024256:	f010 0301 	ands.w	r3, r0, #1
 802425a:	d00a      	beq.n	8024272 <__swsetup_r+0x9e>
 802425c:	2300      	movs	r3, #0
 802425e:	60a3      	str	r3, [r4, #8]
 8024260:	6963      	ldr	r3, [r4, #20]
 8024262:	425b      	negs	r3, r3
 8024264:	61a3      	str	r3, [r4, #24]
 8024266:	6923      	ldr	r3, [r4, #16]
 8024268:	b943      	cbnz	r3, 802427c <__swsetup_r+0xa8>
 802426a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802426e:	d1c4      	bne.n	80241fa <__swsetup_r+0x26>
 8024270:	bd38      	pop	{r3, r4, r5, pc}
 8024272:	0781      	lsls	r1, r0, #30
 8024274:	bf58      	it	pl
 8024276:	6963      	ldrpl	r3, [r4, #20]
 8024278:	60a3      	str	r3, [r4, #8]
 802427a:	e7f4      	b.n	8024266 <__swsetup_r+0x92>
 802427c:	2000      	movs	r0, #0
 802427e:	e7f7      	b.n	8024270 <__swsetup_r+0x9c>
 8024280:	20000118 	.word	0x20000118

08024284 <__swhatbuf_r>:
 8024284:	b570      	push	{r4, r5, r6, lr}
 8024286:	460c      	mov	r4, r1
 8024288:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802428c:	2900      	cmp	r1, #0
 802428e:	b096      	sub	sp, #88	; 0x58
 8024290:	4615      	mov	r5, r2
 8024292:	461e      	mov	r6, r3
 8024294:	da0d      	bge.n	80242b2 <__swhatbuf_r+0x2e>
 8024296:	89a3      	ldrh	r3, [r4, #12]
 8024298:	f013 0f80 	tst.w	r3, #128	; 0x80
 802429c:	f04f 0100 	mov.w	r1, #0
 80242a0:	bf0c      	ite	eq
 80242a2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80242a6:	2340      	movne	r3, #64	; 0x40
 80242a8:	2000      	movs	r0, #0
 80242aa:	6031      	str	r1, [r6, #0]
 80242ac:	602b      	str	r3, [r5, #0]
 80242ae:	b016      	add	sp, #88	; 0x58
 80242b0:	bd70      	pop	{r4, r5, r6, pc}
 80242b2:	466a      	mov	r2, sp
 80242b4:	f000 f848 	bl	8024348 <_fstat_r>
 80242b8:	2800      	cmp	r0, #0
 80242ba:	dbec      	blt.n	8024296 <__swhatbuf_r+0x12>
 80242bc:	9901      	ldr	r1, [sp, #4]
 80242be:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80242c2:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80242c6:	4259      	negs	r1, r3
 80242c8:	4159      	adcs	r1, r3
 80242ca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80242ce:	e7eb      	b.n	80242a8 <__swhatbuf_r+0x24>

080242d0 <__smakebuf_r>:
 80242d0:	898b      	ldrh	r3, [r1, #12]
 80242d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80242d4:	079d      	lsls	r5, r3, #30
 80242d6:	4606      	mov	r6, r0
 80242d8:	460c      	mov	r4, r1
 80242da:	d507      	bpl.n	80242ec <__smakebuf_r+0x1c>
 80242dc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80242e0:	6023      	str	r3, [r4, #0]
 80242e2:	6123      	str	r3, [r4, #16]
 80242e4:	2301      	movs	r3, #1
 80242e6:	6163      	str	r3, [r4, #20]
 80242e8:	b002      	add	sp, #8
 80242ea:	bd70      	pop	{r4, r5, r6, pc}
 80242ec:	ab01      	add	r3, sp, #4
 80242ee:	466a      	mov	r2, sp
 80242f0:	f7ff ffc8 	bl	8024284 <__swhatbuf_r>
 80242f4:	9900      	ldr	r1, [sp, #0]
 80242f6:	4605      	mov	r5, r0
 80242f8:	4630      	mov	r0, r6
 80242fa:	f7ff f871 	bl	80233e0 <_malloc_r>
 80242fe:	b948      	cbnz	r0, 8024314 <__smakebuf_r+0x44>
 8024300:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024304:	059a      	lsls	r2, r3, #22
 8024306:	d4ef      	bmi.n	80242e8 <__smakebuf_r+0x18>
 8024308:	f023 0303 	bic.w	r3, r3, #3
 802430c:	f043 0302 	orr.w	r3, r3, #2
 8024310:	81a3      	strh	r3, [r4, #12]
 8024312:	e7e3      	b.n	80242dc <__smakebuf_r+0xc>
 8024314:	89a3      	ldrh	r3, [r4, #12]
 8024316:	6020      	str	r0, [r4, #0]
 8024318:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802431c:	81a3      	strh	r3, [r4, #12]
 802431e:	9b00      	ldr	r3, [sp, #0]
 8024320:	6163      	str	r3, [r4, #20]
 8024322:	9b01      	ldr	r3, [sp, #4]
 8024324:	6120      	str	r0, [r4, #16]
 8024326:	b15b      	cbz	r3, 8024340 <__smakebuf_r+0x70>
 8024328:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802432c:	4630      	mov	r0, r6
 802432e:	f000 f81d 	bl	802436c <_isatty_r>
 8024332:	b128      	cbz	r0, 8024340 <__smakebuf_r+0x70>
 8024334:	89a3      	ldrh	r3, [r4, #12]
 8024336:	f023 0303 	bic.w	r3, r3, #3
 802433a:	f043 0301 	orr.w	r3, r3, #1
 802433e:	81a3      	strh	r3, [r4, #12]
 8024340:	89a3      	ldrh	r3, [r4, #12]
 8024342:	431d      	orrs	r5, r3
 8024344:	81a5      	strh	r5, [r4, #12]
 8024346:	e7cf      	b.n	80242e8 <__smakebuf_r+0x18>

08024348 <_fstat_r>:
 8024348:	b538      	push	{r3, r4, r5, lr}
 802434a:	4d07      	ldr	r5, [pc, #28]	; (8024368 <_fstat_r+0x20>)
 802434c:	2300      	movs	r3, #0
 802434e:	4604      	mov	r4, r0
 8024350:	4608      	mov	r0, r1
 8024352:	4611      	mov	r1, r2
 8024354:	602b      	str	r3, [r5, #0]
 8024356:	f7de fd82 	bl	8002e5e <_fstat>
 802435a:	1c43      	adds	r3, r0, #1
 802435c:	d102      	bne.n	8024364 <_fstat_r+0x1c>
 802435e:	682b      	ldr	r3, [r5, #0]
 8024360:	b103      	cbz	r3, 8024364 <_fstat_r+0x1c>
 8024362:	6023      	str	r3, [r4, #0]
 8024364:	bd38      	pop	{r3, r4, r5, pc}
 8024366:	bf00      	nop
 8024368:	20032ebc 	.word	0x20032ebc

0802436c <_isatty_r>:
 802436c:	b538      	push	{r3, r4, r5, lr}
 802436e:	4d06      	ldr	r5, [pc, #24]	; (8024388 <_isatty_r+0x1c>)
 8024370:	2300      	movs	r3, #0
 8024372:	4604      	mov	r4, r0
 8024374:	4608      	mov	r0, r1
 8024376:	602b      	str	r3, [r5, #0]
 8024378:	f7de fd81 	bl	8002e7e <_isatty>
 802437c:	1c43      	adds	r3, r0, #1
 802437e:	d102      	bne.n	8024386 <_isatty_r+0x1a>
 8024380:	682b      	ldr	r3, [r5, #0]
 8024382:	b103      	cbz	r3, 8024386 <_isatty_r+0x1a>
 8024384:	6023      	str	r3, [r4, #0]
 8024386:	bd38      	pop	{r3, r4, r5, pc}
 8024388:	20032ebc 	.word	0x20032ebc

0802438c <_init>:
 802438c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802438e:	bf00      	nop
 8024390:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8024392:	bc08      	pop	{r3}
 8024394:	469e      	mov	lr, r3
 8024396:	4770      	bx	lr

08024398 <_fini>:
 8024398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802439a:	bf00      	nop
 802439c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802439e:	bc08      	pop	{r3}
 80243a0:	469e      	mov	lr, r3
 80243a2:	4770      	bx	lr
